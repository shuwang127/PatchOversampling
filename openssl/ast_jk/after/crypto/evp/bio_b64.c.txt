TranslationUnitDecl 0x167e7f54c98 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x167e7f55530 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x167e7f55230 '__int128'
|-TypedefDecl 0x167e7f555a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x167e7f55250 'unsigned __int128'
|-TypedefDecl 0x167e7f558d8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x167e7f55690 'struct __NSConstantString_tag'
|   `-Record 0x167e7f555f8 '__NSConstantString_tag'
|-TypedefDecl 0x167e7f55948 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x167e7f54e70 'unsigned long long'
|-TypedefDecl 0x167e7f559e0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x167e7f559a0 'char *'
|   `-BuiltinType 0x167e7f54d30 'char'
|-TypedefDecl 0x167e7f55a50 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x167e7f559a0 'char *'
|   `-BuiltinType 0x167e7f54d30 'char'
|-TypedefDecl 0x167e7f55b10 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x167e7f54e70 'unsigned long long'
|-TypedefDecl 0x167e7f55b80 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x167e7f559a0 'char *'
|   `-BuiltinType 0x167e7f54d30 'char'
|-FunctionDecl 0x167e9965450 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x167e99654f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x167e9965560 <col:21> Implicit
|-FunctionDecl 0x167e99655b8 prev 0x167e9965450 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x167e99652e0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x167e99656a8 <col:21> Inherited Implicit
|-TypedefDecl 0x167e99656e8 prev 0x167e7f55948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x167e7f54e70 'unsigned long long'
|-TypedefDecl 0x167e9965790 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x167e9965760 'size_t' sugar
|   |-Typedef 0x167e99656e8 'size_t'
|   `-BuiltinType 0x167e7f54e70 'unsigned long long'
|-TypedefDecl 0x167e9965800 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x167e7f54dd0 'long long'
|-TypedefDecl 0x167e9965870 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x167e7f54dd0 'long long'
|-TypedefDecl 0x167e99658e0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x167e7f54e10 'unsigned short'
|-TypedefDecl 0x167e9965950 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x167e7f54e10 'unsigned short'
|-TypedefDecl 0x167e99659c0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x167e7f54e10 'unsigned short'
|-TypedefDecl 0x167e9965a30 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x167e7f54d90 'int'
|-TypedefDecl 0x167e9965aa0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x167e7f54db0 'long'
|-TypedefDecl 0x167e9965b10 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x167e7f54dd0 'long long'
|-TypedefDecl 0x167e9965ba0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x167e9965b70 '__time64_t' sugar
|   |-Typedef 0x167e9965b10 '__time64_t'
|   `-BuiltinType 0x167e7f54dd0 'long long'
|-FunctionDecl 0x167e9965d18 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x167e9965f38 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x167e999e090 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x167e9966078 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x167e99660f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x167e9966168 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x167e99661e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x167e999de30 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x167e999e170 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x167e999e230 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x167e999e3a0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x167e999e350 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x167e999e2f0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x167e999e210 'struct threadlocaleinfostruct'
|       `-Record 0x167e99a7ed0 'threadlocaleinfostruct'
|-TypedefDecl 0x167e999e4b0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x167e999e460 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x167e999e400 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x167e999e2d0 'struct threadmbcinfostruct'
|       `-Record 0x167e999e230 'threadmbcinfostruct'
|-RecordDecl 0x167e999e508 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x167e999e5c0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x167e999e680 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x167e999e710 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x167e999e7a0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x167e999e858 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x167e999e800 'struct localeinfo_struct' sugar
|   `-RecordType 0x167e999e660 'struct localeinfo_struct'
|     `-Record 0x167e999e5c0 'localeinfo_struct'
|-TypedefDecl 0x167e999e930 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x167e999e8e0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x167e999e800 'struct localeinfo_struct' sugar
|     `-RecordType 0x167e999e660 'struct localeinfo_struct'
|       `-Record 0x167e999e5c0 'localeinfo_struct'
|-RecordDecl 0x167e999e9a8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x167e999ea60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x167e999ead8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x167e999eb98 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x167e999ec30 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x167e999eca0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x167e999ed58 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x167e999ed00 'struct localerefcount' sugar
|   `-RecordType 0x167e999ea40 'struct localerefcount'
|     `-Record 0x167e999e9a8 'localerefcount'
|-RecordDecl 0x167e99a7ed0 prev 0x167e999e170 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x167e99a7f50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x167e99a7fc8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x167e99a8038 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x167e99a80a8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x167e99a8118 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x167e99a82d8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x167e99a8348 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x167e99a83b8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x167e99a8428 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x167e99a8498 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x167e99a8508 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x167e99a8560 parent 0x167e7f54c98 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x167e99a86f0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x167e99a8760 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x167e99a87d0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x167e99a8840 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x167e99a88e0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x167e99a8950 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x167e99a8a60 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x167e99a8b98 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x167e99a8c48 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x167e99a8bf0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x167e999e210 'struct threadlocaleinfostruct'
|     `-Record 0x167e99a7ed0 'threadlocaleinfostruct'
|-RecordDecl 0x167e99a8ce0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x167e99a8da0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x167e99a8e18 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x167e99a2e80 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x167e99a2ef0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x167e99a2f60 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x167e99a2fd0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x167e99a3040 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x167e99a30b0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x167e99a3120 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x167e99a31d0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x167e99a3180 'struct _iobuf' sugar
|   `-RecordType 0x167e99a8d80 'struct _iobuf'
|     `-Record 0x167e99a8ce0 '_iobuf'
|-FunctionDecl 0x167e99a3408 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x167e99a34d8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x167e7f54dd0 'long long'
|-FunctionDecl 0x167e99a36b8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99a3540 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x167e99a39b0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x167e99a3790 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x167e99a3808 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x167e99a3d60 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x167e99a3a90 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x167e99a3b10 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x167e99a3b90 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x167e99b10d0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x167e99b0f60 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x167e99b1300 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x167e99b11c0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x167e99b14b0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99b13d0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x167e99b16a0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x167e99b1998 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x167e99b1770 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x167e99b17f0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x167e99b1b50 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99b1a70 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x167e99b1d00 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99b1c20 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x167e99b1eb0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99b1dd0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x167e99ad028 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99acf48 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x167e99ad1b8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x167e99ad520 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x167e99ad280 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x167e99ad378 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x167e99ad8d8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x167e99ad600 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x167e99ad680 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x167e99ad6f8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x167e99ada98 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99ad9b8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x167e99add60 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x167e99adb70 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x167e99adbf0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x167e99aff50 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x167e99b0348 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x167e99b03e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x167e99b0450 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x167e99b04c8 prev 0x167e99b0348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x167e99b0120 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x167e99b01a0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x167e99b0578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99b09f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x167e99b0720 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x167e99b07a0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x167e99b0820 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x167e99b0d10 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x167e99b0db0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x167e99b0e18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x167e99b0e90 <col:40> Implicit printf 2 3
|-FunctionDecl 0x167e99abf10 prev 0x167e99b0d10 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x167e99b0ad0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x167e99b0b50 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x167e99ac008 <col:40> Inherited printf 2 3
|-FunctionDecl 0x167e99ac1d0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x167e99ac050 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x167e99ac0d0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x167e99ac428 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x167e99ac2b0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x167e99ac328 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x167e99ac658 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x167e99ac508 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x167e99ac950 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x167e99ac730 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x167e99ac7a8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x167e99acde8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x167e99ace88 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x167e99b1f70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x167e99b1fd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x167e99b2040 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x167e99b20c8 prev 0x167e99acde8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x167e99aca30 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x167e99acaa8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99acb20 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e99acb98 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x167e99b25d0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x167e99b21b8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x167e99b2230 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99b22a8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99b2320 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e99b2398 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x167e99b2a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x167e99b27c0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x167e99b2840 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x167e99b28b8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x167e99b2b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99b4038 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x167e99b2c90 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x167e99b2d10 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x167e99b2d90 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x167e99b2e08 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x167e99b43e0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x167e99b4480 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x167e99b44e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x167e99b4560 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x167e99b45c8 prev 0x167e99b43e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x167e99b4218 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x167e99b4298 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x167e99b47a8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x167e99b4678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99b4be8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99b48e8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x167e99b4968 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x167e99b4a00 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e99b4ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99b2f80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x167e99b4de0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x167e99b4e60 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x167e99b3270 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99b3058 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x167e99b30d8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x167e99b3150 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99b35d0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x167e99b3350 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x167e99b3428 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x167e99b3988 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x167e99b36a8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x167e99b3728 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x167e99b37a8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x167e99b3be8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x167e99b3a68 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x167e99b4fe8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x167e99b3cb8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x167e99b3d38 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x167e99b3db8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x167e99b5248 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x167e99b50c8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x167e99b5708 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x167e99b57a8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x167e99b5810 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x167e99b5878 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x167e99b58e0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x167e99b5968 prev 0x167e99b5708 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x167e99b5350 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x167e99b53c8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99b5440 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e99b54b8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x167e99b5b30 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99b5a50 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x167e99b5cc0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x167e99b5e48 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x167e99ae0f0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x167e99b5f18 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x167e99adf40 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x167e99ae418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x167e99ae2d0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x167e99ae4c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99ae6e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99ae600 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x167e99ae900 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x167e99ae7b8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x167e99aeab0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99ae9d0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x167e99aed00 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x167e99aeb88 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x167e99aec08 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x167e99b5fb0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x167e99b6050 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x167e99b60c0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x167e99b6128 prev 0x167e99b5fb0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x167e99aede0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x167e99b6218 <col:40> Inherited printf 1 2
|-FunctionDecl 0x167e99b6348 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x167e99b6268 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x167e99b6598 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x167e99b6420 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x167e99b6498 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x167e99b6758 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x167e99b6678 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x167e99b6978 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x167e99b6830 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x167e99b6bc8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x167e99b6a50 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x167e99b6ac8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x167e99b6d88 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x167e99b6ca8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x167e9a01eb0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x167e99b6e60 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x167e99b6ee0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x167e9a02070 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x167e9a01f90 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x167e9a02300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x167e9a02220 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x167e9a023a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x167e9a025a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x167e9a024c8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x167e9a02730 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x167e9a029d8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x167e9a02a78 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x167e9a02ae8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x167e9a02b50 prev 0x167e9a029d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x167e9a028c0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x167e9a02d28 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x167e9a02bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a07140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a06f08 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x167e9a06f80 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e9a071f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a07418 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x167e9a07338 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x167e9a07668 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a074f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x167e9a07568 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a07a28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x167e9a07800 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x167e9a07880 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x167e9a07ad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a07d00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x167e9a07c20 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x167e9a07f88 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x167e9a07e40 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x167e9a08170 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x167e9a085c0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x167e9a08238 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x167e9a082b8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x167e9a08338 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x167e9a083b0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x167e9a08a40 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x167e9a086b0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a08728 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a087a0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e9a08820 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x167e9a02df0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x167e9a08b30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a08ba8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e9a08c28 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x167e9a02fb8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x167e9a02ed8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x167e9a03390 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x167e9a03430 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x167e9a03498 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x167e9a03510 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x167e9a03578 prev 0x167e9a03390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x167e9a03150 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x167e9a031d0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x167e9a03758 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x167e9a03628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a03b48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a03868 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x167e9a038e8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x167e9a03960 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e9a03c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a00ed0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x167e9a03d48 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x167e9a00dd0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x167e9a011c8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a00fb0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x167e9a01030 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x167e9a010a8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a01658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x167e9a01370 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x167e9a013e8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a01468 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x167e9a01710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a01ce0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a01950 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x167e9a019c8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a01a48 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x167e9a01ac0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e9a0ae70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a0b1d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x167e9a0afb8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x167e9a0b030 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e9a0b0b0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x167e9a0b568 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a0b2b8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x167e9a0b330 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a0b3b0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x167e9a0b428 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a0b7c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x167e9a0b868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a0bb20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x167e9a0b9b0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x167e9a08e50 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x167e9a0bbf8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x167e9a0bc70 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x167e9a090d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x167e9a08ff0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x167e9a09178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a09438 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x167e9a092c0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x167e9a09338 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x167e9a09850 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x167e9a098f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x167e9a09958 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x167e9a099c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x167e9a09a40 <col:40> Implicit printf 2 0
|-FunctionDecl 0x167e9a09aa8 prev 0x167e9a09850 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x167e9a09510 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x167e9a09590 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x167e9a09608 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x167e9a09ba8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x167e9a09e60 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x167e9a09f00 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x167e9a09f68 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x167e9a09fd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x167e9a0a050 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x167e9a0a0b8 prev 0x167e9a09e60 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x167e9a09bf0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x167e9a09c70 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x167e9a09ce8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x167e9a0a1b8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x167e9a0a418 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x167e9a0a200 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x167e9a0a280 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x167e9a0a2f8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a0a710 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x167e9a0a4f8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x167e9a0a578 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x167e9a0a5f0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a0aa58 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x167e9a0aaf8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x167e9a0ab60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x167e9a0abd8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x167e9a0ac40 prev 0x167e9a0aa58 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x167e9a0a7f8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x167e9a0a870 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x167e9a0ad38 <col:40> Inherited printf 1 0
|-FunctionDecl 0x167e9a04f48 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x167e9a04fe8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x167e9a05050 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x167e9a050c8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x167e9a05130 prev 0x167e9a04f48 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x167e9a0ad88 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x167e9a04e10 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x167e9a05228 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x167e9a053f0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x167e9a05278 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x167e9a052f0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a05648 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x167e9a054d0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x167e9a05548 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a05ba8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x167e9a05c48 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x167e9a05cb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x167e9a05d18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x167e9a05d80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x167e9a05e20 <col:77> Implicit printf 3 0
|-FunctionDecl 0x167e9a05e88 prev 0x167e9a05ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x167e9a057e8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a05860 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a058e0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x167e9a05958 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x167e9a06078 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x167e9a05f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a064e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x167e9a060c8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a06140 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a061b8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a06238 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x167e9a062b0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a06928 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x167e9a065e0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a06658 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a066d0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a06750 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x167e9a067c8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a06cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x167e9a06ae0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x167e9a06b58 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a06bd8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x167e9a06db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a04270 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x167e9a03fc0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x167e9a04038 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a040b8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x167e9a04130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x167e9a04330 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a04728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x167e9a04478 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a044f0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a04570 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x167e9a045e8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a04ae8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x167e9a04818 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x167e9a04898 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x167e9a04910 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a0bf20 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x167e9a0bfc0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x167e9a0c028 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x167e9a0c0a0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x167e9a0c108 prev 0x167e9a0bf20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x167e9a04c90 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x167e9a04d10 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x167e9a0c2e8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x167e9a0c1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a0c710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x167e9a0c7b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x167e9a0c818 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x167e9a0c880 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x167e9a0c900 <col:94> Implicit printf 2 0
|-FunctionDecl 0x167e9a0c968 prev 0x167e9a0c710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x167e9a0c3f8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x167e9a0c478 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x167e9a0c4f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x167e9a0cb50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x167e9a0ca20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a0fec0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x167e9a0ff60 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x167e9a0ffc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x167e9a10030 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x167e9a100b0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x167e9a10118 prev 0x167e9a0fec0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x167e9a0cba0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x167e9a0cc20 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x167e9a0cc98 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x167e9a10218 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x167e9a103e0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x167e9a10268 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x167e9a102e0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a106d8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x167e9a104c0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a10538 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e9a105b8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x167e9a10a70 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x167e9a107c0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a10838 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a108b8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x167e9a10930 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a10cd8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x167e9a10b58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x167e9a10bd8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x167e9a0ce90 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x167e9a10db8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x167e9a0d180 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x167e9a0cf68 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x167e9a0cfe0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e9a0d060 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x167e9a0d478 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x167e9a0d260 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x167e9a0d2e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x167e9a0d358 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a0d6d8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x167e9a0d560 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x167e9a0d5d8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a0da68 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x167e9a0d7b8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x167e9a0d830 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a0d8b0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x167e9a0d928 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a0dc38 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x167e9a0db58 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x167e9a0dea0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x167e9a0dd10 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x167e9a0dd88 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a0e060 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x167e9a0df80 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x167e9a0e1f0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x167e9a0e438 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a0e2c0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x167e9a0e338 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a0e690 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a0e518 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x167e9a0e590 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a0e8e8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a0e770 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x167e9a0e7e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a0ec98 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a0e9c8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x167e9a0ea40 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a0eab8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a13010 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a0ed80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x167e9a0edf8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a12ef0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a13308 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a130f8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x167e9a13170 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a131e8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a13600 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a133e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x167e9a13468 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x167e9a134e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a138f8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a136e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x167e9a13760 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x167e9a137d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a13bf0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a139d8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x167e9a13a58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x167e9a13ad0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a12040 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a13cd0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x167e9a13d50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x167e9a13dc8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a13e40 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a123d8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a12128 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x167e9a121a8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x167e9a12220 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a12298 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a12770 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a124c0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x167e9a12540 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x167e9a125b8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a12630 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a12c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a12920 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a129a0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x167e9a12a18 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e9a12cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a15220 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a12e08 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a14f10 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a14f90 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x167e9a15008 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a155c0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a15310 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a15388 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a15408 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x167e9a15480 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a15b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a157b0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a15830 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x167e9a158a8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x167e9a15920 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x167e9a15bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a11108 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a15d18 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a15d90 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a15e10 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x167e9a15e88 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a10ed0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a11548 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a11200 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a11278 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a112f8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x167e9a11370 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a113e8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a117b8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a11640 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x167e9a116b8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a11a10 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a11898 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x167e9a11910 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a11d00 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a11af0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x167e9a11b68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a11be0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a16050 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a11de8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x167e9a11e60 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a15f30 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a164a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a161f8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a16270 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a162f0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x167e9a16368 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e9a16568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a16960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a166b0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a16728 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a167a8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x167e9a16820 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a16f30 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x167e9a16a50 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a16ac8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a16b40 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a16bc0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x167e9a16c38 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e9a17470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a17128 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a171a0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a17220 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x167e9a17298 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x167e9a17310 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x167e9a17538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a179b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a17688 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a17700 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a17780 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x167e9a177f8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a17870 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1afd0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e9a17ab0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x167e9a17b28 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a17ba0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a17c20 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x167e9a17c98 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e9a17d10 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1b390 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x167e9a1b0c8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x167e9a1b140 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1b1c0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x167e9a1b600 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x167e9a1b490 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x167e9a1b818 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x167e9a1baf8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x167e9a1b8e0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x167e9a1b958 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x167e9a1bd40 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x167e9a1bbd0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x167e9a17f40 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x167e9a1be10 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x167e9a180c8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x167e9a18300 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x167e9a18190 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x167e9a18208 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x167e9a184b0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x167e9a183d8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x167e9a18758 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x167e9a18580 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x167e9a185f8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x167e9a18b00 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x167e9a18830 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x167e9a188b0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x167e9a18928 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x167e9a18e00 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x167e9a18be0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x167e9a18c58 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x167e9a140b8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x167e9a18ed8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x167e9a13f10 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x167e9a143c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x167e9a14250 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x167e9a14468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a14728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x167e9a145a8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x167e9a14a30 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e9a147f8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x167e9a14870 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x167e9a14c80 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e9a14b08 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x167e9a14b80 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x167e9a1efb0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x167e9a14d58 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x167e9a1f160 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x167e9a1f080 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x167e9a1f310 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x167e9a1f230 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x167e9a1f6a8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1f3e0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x167e9a1f458 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1f4d0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1f998 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1f788 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x167e9a1f800 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1f878 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1fc88 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1fa78 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x167e9a1faf0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1fb68 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1bf80 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1fd68 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x167e9a1fde0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1fe58 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1c280 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1c060 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1c0d8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1c4d0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1c358 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1c3d0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1c720 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1c5a8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1c620 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1c970 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1c7f8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1c870 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1cd28 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e9a1ca48 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x167e9a1cac0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e9a1cb38 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x167e9a1e1b0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1ce08 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x167e9a1ce80 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a1cef8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1dfa0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1e568 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1e298 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x167e9a1e310 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1e388 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1e858 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1e648 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x167e9a1e6c0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1e738 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1eb48 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e9a1e938 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e9a1e9b0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e9a1ea28 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x167e9a1eed0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1ec28 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e9a1eca0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a1ed18 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1ed90 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a19300 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e9a18f78 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e9a18ff0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a19068 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e9a190e0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x167e9a19808 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a193e8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e9a19460 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a194d8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a19550 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a195c8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a19bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e9a199b8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x167e9a19a30 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a19aa8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x167e9a19c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a1d1c0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a19e80 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x167e9a1cf90 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e9a1d008 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e9a1d080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x167e9a1d280 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e9a1d538 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e9a1d3c0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x167e9a1d438 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x167e9a1d6f0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x167e9a1d610 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x167e9a1d9d0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1d7c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x167e9a1d838 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1d8b0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e9a1dc28 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e9a1dab0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e9a1db28 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e2fe0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e9a1dd00 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e9a1dd78 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e9a1ddf0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x167e99e3368 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e99e30c0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99e3138 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e31b0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e3228 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e3530 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x167e99e3450 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x167e99e3778 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e99e3600 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e3678 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e3a80 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e3850 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e38c8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99e3cd0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e3b58 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e3bd0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99e3f20 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e3da8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e3e20 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99e02a8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99dffd8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e0050 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99e00c8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e0598 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99e0388 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e0400 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99e0478 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e0888 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99e0678 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e06f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99e0768 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e0c48 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e0968 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x167e99e09e0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e0a58 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99e0fc0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e0d28 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x167e99e0da0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e0e18 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99e12b0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e10a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x167e99e1118 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e1190 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99e1700 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99e1390 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x167e99e1408 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e1480 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99e14f8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e1a90 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99e17e8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x167e99e1860 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e18d8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99e1950 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e1e20 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99e1b78 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x167e99e1bf0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e1c68 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99e1ce0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e6320 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e1f08 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99e6010 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e6088 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e6100 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99e66b0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e6408 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99e6480 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e64f8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e6570 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99e6a40 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e6798 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99e6810 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e6888 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e6900 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99e6f48 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99e6b28 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99e6ba0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e6c18 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e6c90 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99e6d08 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99df308 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99defc8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99df040 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99df0b8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99df130 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99df1a8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99df738 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99df3f8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99df470 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99df4e8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99df560 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99df5d8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99df9a0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99df828 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99df8a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99dfbf0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99dfa78 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99dfaf0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99dfed8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99dfcc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99dfd40 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99dfdb8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e4388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e40e0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99e4158 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e41d0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e4248 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e99e4448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99e49b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e4590 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99e4608 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e4680 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e46f8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99e4770 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99e4ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99e4bb0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99e4c28 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e4ca0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e4d18 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x167e99e4d90 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x167e99e7020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99e7630 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99e7168 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x167e99e71e0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e7258 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e72d0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e7348 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99e73c0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99e7b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e99e78f8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x167e99e7970 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x167e99e7be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x167e99e7cf8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x167e99e8298 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e99e7fb0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x167e99e8040 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e80b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x167e99e8350 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x167e99e8468 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x167e99e8a08 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99e8728 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x167e99e87a0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e8818 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x167e99e8ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x167e99e8be0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x167e99e9250 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99e8ea0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x167e99e8f18 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99e8f90 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x167e99e9040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x167e99e9310 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x167e99e9430 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x167e99e9738 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x167e99e9558 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x167e99e95d0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99e9648 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x167e99f1360 <line:37:1, line:44:1>
|   |-DeclStmt 0x167e99e9880 <line:38:5, col:21>
|   | `-VarDecl 0x167e99e9818 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x167e99e9918 <line:39:5, col:13>
|   | `-VarDecl 0x167e99e98b0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x167e99e9c70 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x167e99e9c58 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x167e99e9b70 <col:34> '<builtin fn type>' Function 0x167e99e9a08 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x167e99e9ba8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x167e99e9818 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x167e99e9be0 <col:29> 'const wchar_t *' lvalue ParmVar 0x167e99e9648 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x167e99e9f30 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x167e99e9ca0 <col:5> 'int' lvalue Var 0x167e99e98b0 '_Ret' 'int'
|   | `-CallExpr 0x167e99e9e70 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x167e99e9e58 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x167e99e9cd8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x167e99e6f48 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x167e99e9eb8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x167e99e9cf8 <col:27> 'wchar_t *' lvalue ParmVar 0x167e99e9558 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x167e99e9ed0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x167e99e9d18 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x167e99e95d0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x167e99e9ee8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x167e99e9d38 <col:44> 'const wchar_t *' lvalue ParmVar 0x167e99e9648 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x167e99e9f00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x167e99e9dc0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x167e99e9d98 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x167e99e9d58 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x167e99e9f18 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x167e99e9de0 <col:59> 'va_list':'char *' lvalue Var 0x167e99e9818 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x167e99f12f0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x167e99f12d8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x167e99f1228 <col:34> '<builtin fn type>' Function 0x167e99f10c0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x167e99f1260 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x167e99e9818 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x167e99f1350 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x167e99f1338 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x167e99f1318 <col:12> 'int' lvalue Var 0x167e99e98b0 '_Ret' 'int'
|-FunctionDecl 0x167e99e9a08 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x167e99e9aa8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x167e99e9b18 <col:34> Implicit
|-FunctionDecl 0x167e99f10c0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x167e99f1160 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x167e99f11d0 <col:34> Implicit
|-FunctionDecl 0x167e99f1658 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x167e99f13b0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x167e99f1428 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99f14a0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99f1518 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x167e99f1940 <line:50:1, line:52:1>
|   `-ReturnStmt 0x167e99f1930 <line:51:5, col:62>
|     `-CallExpr 0x167e99f1870 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x167e99f1858 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x167e99f1730 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x167e99e6f48 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x167e99f18b8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x167e99f1750 <col:27> 'wchar_t *' lvalue ParmVar 0x167e99f13b0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x167e99f18d0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x167e99f1770 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x167e99f1428 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x167e99f18e8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x167e99f1790 <col:44> 'const wchar_t *' lvalue ParmVar 0x167e99f14a0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x167e99f1900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x167e99f1818 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x167e99f17f0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x167e99f17b0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x167e99f1918 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x167e99f1838 <col:59> 'va_list':'char *' lvalue ParmVar 0x167e99f1518 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x167e99f1be0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x167e99f1968 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x167e99f19e0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99f1a58 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99f1ad0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x167e99ea0f8 <line:61:1, line:68:1>
|   |-DeclStmt 0x167e99f1d30 <line:62:5, col:21>
|   | `-VarDecl 0x167e99f1cc8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x167e99f1dc8 <line:63:5, col:13>
|   | `-VarDecl 0x167e99f1d60 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x167e99f1e70 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x167e99f1e58 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x167e99f1de0 <col:34> '<builtin fn type>' Function 0x167e99e9a08 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x167e99f1e00 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x167e99f1cc8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x167e99f1e38 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x167e99f1ad0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x167e99f2070 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x167e99f1ea0 <col:5> 'int' lvalue Var 0x167e99f1d60 '_Ret' 'int'
|   | `-CallExpr 0x167e99f1fb0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x167e99f1f98 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x167e99f1ed8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x167e99e6f48 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x167e99f1ff8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x167e99f1ef8 <col:27> 'wchar_t *' lvalue ParmVar 0x167e99f1968 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x167e99f2010 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x167e99f1f18 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x167e99f19e0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x167e99f2028 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x167e99f1f38 <col:44> 'const wchar_t *' lvalue ParmVar 0x167e99f1a58 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x167e99f2040 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x167e99f1f58 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x167e99f1ad0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x167e99f2058 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x167e99f1f78 <col:64> 'va_list':'char *' lvalue Var 0x167e99f1cc8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x167e99ea088 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x167e99ea070 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x167e99f2090 <col:34> '<builtin fn type>' Function 0x167e99f10c0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x167e99ea050 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x167e99f1cc8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x167e99ea0e8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x167e99ea0d0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x167e99ea0b0 <col:12> 'int' lvalue Var 0x167e99f1d60 '_Ret' 'int'
|-FunctionDecl 0x167e99ea488 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x167e99ea148 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x167e99ea1c0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99ea238 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99ea2b0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x167e99ea328 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x167e99ea710 <line:74:1, line:76:1>
|   `-ReturnStmt 0x167e99ea700 <line:75:5, col:67>
|     `-CallExpr 0x167e99ea640 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x167e99ea628 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x167e99ea568 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x167e99e6f48 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x167e99ea688 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x167e99ea588 <col:27> 'wchar_t *' lvalue ParmVar 0x167e99ea148 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x167e99ea6a0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x167e99ea5a8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x167e99ea1c0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x167e99ea6b8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x167e99ea5c8 <col:44> 'const wchar_t *' lvalue ParmVar 0x167e99ea238 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x167e99ea6d0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x167e99ea5e8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x167e99ea2b0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x167e99ea6e8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x167e99ea608 <col:64> 'va_list':'char *' lvalue ParmVar 0x167e99ea328 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x167e99ea958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x167e99ea738 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x167e99ea7b0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x167e99eaba8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x167e99eaa30 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99eaaa8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99eae90 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x167e99eac80 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99eacf8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x167e99ead70 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x167e99f2248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e99f20d0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x167e99f2148 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x167e99f22f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99f2708 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99f24f8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x167e99f2570 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99f25e8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e99f27c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99f2a78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e99f2900 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x167e99f2978 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x167e99f2d60 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99f2b50 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x167e99f2bc8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99f2c40 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99ee100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e99f2f00 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x167e99f2f78 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x167e99ee1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99ee688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99ee3b0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x167e99ee428 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99ee4a0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e99ee740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99ee9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e99ee880 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x167e99ee8f8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x167e99eece0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99eead0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x167e99eeb48 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99eebc0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99ef188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e99eee80 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x167e99eeef8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99eef70 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x167e99ef240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99ef7c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99ef440 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x167e99ef4b8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99ef530 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99ef5a8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e99ef880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99efbd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x167e99ef9c0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x167e99efa38 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e99efab0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x167e99eff58 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99efcb0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x167e99efd28 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99efda0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99efe18 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99f0260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x167e99f0180 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x167e99f0308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99f0680 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99f0508 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x167e99f0580 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x167e99f0730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99f0950 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x167e99f0870 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x167e99f0b98 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x167e99f0a20 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x167e99f0a98 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x167e99f0e98 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x167e99f0c78 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x167e99f0cf0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x167e99eb208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x167e99f1030 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x167e99eb060 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x167e99eb2b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99eb6c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x167e99eb400 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x167e99eb478 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x167e99eb4f0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x167e99ebb20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x167e99eb860 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x167e99eb8d8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x167e99eb950 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x167e99ebbd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99ec0b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x167e99ebd20 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x167e99ebd98 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x167e99ebe10 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x167e99ebe88 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x167e99ec310 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x167e99ec1a0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x167e99ec550 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x167e99ec3e0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x167e99ec458 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x167e99ec708 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x167e99ec628 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x167e99ec9f8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x167e99ec7d8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x167e99ec850 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x167e99ecc68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x167e99ecb90 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x167e99ecd10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x167e99ecf28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x167e99ece50 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x167e99f41e8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x167e99ecff8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x167e99f40f0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x167e99f4430 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x167e99f42c0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x167e99f4338 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x167e99f45e0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x167e99f4508 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x167e99f4788 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x167e99f46b0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x167e99f4938 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99f4858 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x167e99f4ae8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x167e99f4a08 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x167e99f4e60 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x167e99f4bc0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x167e99f4c38 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99f4cb0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e99f4d28 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x167e99f72f0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x167e99f4f50 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x167e99f4fc8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99f5040 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99f7120 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e99f7198 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x167e99f7600 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x167e99f73e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x167e99f7460 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x167e99f74e0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x167e99f77c0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x167e99f76e0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x167e99f7ab0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x167e99f7890 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x167e99f7910 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x167e99f7990 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x167e99f7c70 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x167e99f7b90 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x167e99f7fe8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x167e99f7d48 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x167e99f7dc0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x167e99f7e38 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x167e99f7eb0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x167e99f92b8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x167e99f9140 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x167e99f91b8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x167e99f95f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x167e99f9470 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x167e99f94f0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x167e99f96a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x167e99f9958 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x167e99f99f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x167e99f9d38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x167e99f9bc0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x167e99f9c40 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x167e99f9de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x167e99fc170 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x167e99fc210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x167e99fc4b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x167e99fc3d0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x167e99fc558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x167e99fc7d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x167e99fc878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x167e99fcb20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x167e99fca40 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x167e99fcbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x167e99fcea8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x167e99fcdc8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x167e99fcf50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x167e99fa2c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x167e99fa150 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x167e99fa1c8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x167e99fa378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x167e99fa638 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x167e99fa6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x167e99fa910 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x167e99fab20 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x167e99fa9e0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x167e99fad70 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x167e99fabf8 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x167e99fb030 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:17:1, col:54> col:12 invalid b64_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x167e99fae48 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x167e99faec8 <col:30, col:42> col:42 buf 'const char *'
| `-ParmVarDecl 0x167e99faf48 <col:47, col:51> col:51 num 'int'
|-FunctionDecl 0x167e9a25660 <line:18:1, col:48> col:12 invalid b64_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x167e9a25470 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x167e9a254f0 <col:29, col:35> col:35 buf 'char *'
| `-ParmVarDecl 0x167e9a25570 <col:40, col:44> col:44 size 'int'
|-FunctionDecl 0x167e9a25890 <line:19:1, col:44> col:12 invalid b64_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x167e9a25730 <col:21, col:26> col:26 invalid h 'int *'
| `-ParmVarDecl 0x167e9a257b0 <col:29, col:41> col:41 str 'const char *'
|-FunctionDecl 0x167e9a25bd0 <line:23:1, col:60> col:13 invalid b64_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x167e9a25958 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x167e9a259d8 <col:30, col:34> col:34 cmd 'int'
| |-ParmVarDecl 0x167e9a25a58 <col:39, col:44> col:44 arg1 'long'
| `-ParmVarDecl 0x167e9a25ad8 <col:50, col:56> col:56 arg2 'void *'
|-FunctionDecl 0x167e9a25d40 <line:24:1, col:26> col:12 invalid b64_new 'int (int *)' static
| `-ParmVarDecl 0x167e9a25ca8 <col:20, col:25> col:25 invalid h 'int *'
|-FunctionDecl 0x167e9a25e98 <line:25:1, col:30> col:12 invalid b64_free 'int (int *)' static
| `-ParmVarDecl 0x167e9a25e00 <col:21, col:26> col:26 invalid data 'int *'
|-FunctionDecl 0x167e9a26140 <line:26:1, col:63> col:13 invalid b64_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x167e9a25f58 <col:31, col:36> col:36 invalid h 'int *'
| |-ParmVarDecl 0x167e9a25fd8 <col:39, col:43> col:43 cmd 'int'
| `-ParmVarDecl 0x167e9a26058 <col:48, col:61> col:61 invalid fp 'int *'
|-RecordDecl 0x167e9a261f8 <line:33:9, line:47:1> line:33:16 invalid struct b64_struct definition
| |-FieldDecl 0x167e9a262c8 <line:37:5, col:9> col:9 referenced buf_len 'int'
| |-FieldDecl 0x167e9a26338 <line:38:5, col:9> col:9 referenced buf_off 'int'
| |-FieldDecl 0x167e9a263a8 <line:39:5, col:9> col:9 referenced tmp_len 'int'
| |-FieldDecl 0x167e9a26418 <line:40:5, col:9> col:9 referenced tmp_nl 'int'
| |-FieldDecl 0x167e9a26498 <line:41:5, col:9> col:9 referenced encode 'int'
| |-FieldDecl 0x167e9a26508 <line:42:5, col:9> col:9 referenced start 'int'
| |-FieldDecl 0x167e9a26578 <line:43:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x167e9a265e8 <line:44:5, col:21> col:21 invalid base64 'int *'
| |-FieldDecl 0x167e9a268b8 <line:45:5, col:52> col:10 invalid buf 'char [EVP_ENCODE_LENGTH(1024) + 10]'
| `-FieldDecl 0x167e9a269a8 <line:46:5, col:28> col:10 referenced tmp 'char [1024]'
|-FunctionDecl 0x167e9a26690 <<invalid sloc>> line:45:14 implicit used EVP_ENCODE_LENGTH 'int ()'
|-TypedefDecl 0x167e9a26a58 <line:33:1, line:47:3> col:3 referenced BIO_B64_CTX 'struct b64_struct':'struct b64_struct'
| `-ElaboratedType 0x167e9a26a00 'struct b64_struct' sugar
|   `-RecordType 0x167e9a26290 'struct b64_struct'
|     `-Record 0x167e9a261f8 'b64_struct'
|-VarDecl 0x167e9a26ae0 <line:49:1, col:25> col:25 invalid methods_b64 'const int' static
|-FunctionDecl 0x167e9a26d00 <line:63:1, line:66:1> line:63:19 invalid BIO_f_base64 'const int *(void)'
| `-CompoundStmt 0x167e9a26db8 <line:64:1, line:66:1>
|-FunctionDecl 0x167e9a26e78 <line:68:1, line:88:1> line:68:12 invalid b64_new 'int (int *)' static
| |-ParmVarDecl 0x167e9a26de0 <col:20, col:25> col:25 invalid bi 'int *'
| `-CompoundStmt 0x167e9a2ecc0 <line:69:1, line:88:1>
|   |-DeclStmt 0x167e9a27030 <line:70:5, col:21>
|   | `-VarDecl 0x167e9a26fc8 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-BinaryOperator 0x167e9a27278 <line:72:5, col:38> 'BIO_B64_CTX *' '='
|   | |-DeclRefExpr 0x167e9a27048 <col:5> 'BIO_B64_CTX *' lvalue Var 0x167e9a26fc8 'ctx' 'BIO_B64_CTX *'
|   | `-ImplicitCastExpr 0x167e9a27260 <col:11, col:38> 'BIO_B64_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x167e9a27238 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x167e9a27220 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x167e9a27170 <col:11> 'int ()' Function 0x167e9a270a8 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x167e9a27200 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x167e9a271e0 <col:32, col:37> 'BIO_B64_CTX':'struct b64_struct' lvalue
|   |         `-UnaryOperator 0x167e9a271c8 <col:33, col:34> 'BIO_B64_CTX':'struct b64_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x167e9a271b0 <col:34> 'BIO_B64_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x167e9a27190 <col:34> 'BIO_B64_CTX *' lvalue Var 0x167e9a26fc8 'ctx' 'BIO_B64_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x167e9a273c8 <line:73:5, line:74:16>
|   | |-BinaryOperator 0x167e9a27370 <line:73:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x167e9a27340 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:73:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x167e9a27298 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a26fc8 'ctx' 'BIO_B64_CTX *'
|   | | `-ImplicitCastExpr 0x167e9a27358 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_B64_CTX *' <BitCast>
|   | |   `-ParenExpr 0x167e9a27320 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x167e9a272f8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x167e9a272b8 <col:26> 'int' 0
|   | `-ReturnStmt 0x167e9a273b8 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:74:9, col:16>
|   |   `-IntegerLiteral 0x167e9a27390 <col:16> 'int' 0
|   |-BinaryOperator 0x167e9a2e500 <line:76:5, col:17> 'int' '='
|   | |-MemberExpr 0x167e9a27418 <col:5, col:10> 'int' lvalue ->cont 0x167e9a26578
|   | | `-ImplicitCastExpr 0x167e9a27400 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x167e9a273e0 <col:5> 'BIO_B64_CTX *' lvalue Var 0x167e9a26fc8 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x167e9a27448 <col:17> 'int' 1
|   |-BinaryOperator 0x167e9a2e5b0 <line:77:5, col:18> 'int' '='
|   | |-MemberExpr 0x167e9a2e558 <col:5, col:10> 'int' lvalue ->start 0x167e9a26508
|   | | `-ImplicitCastExpr 0x167e9a2e540 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x167e9a2e520 <col:5> 'BIO_B64_CTX *' lvalue Var 0x167e9a26fc8 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x167e9a2e588 <col:18> 'int' 1
|   |-IfStmt 0x167e9a2ea08 <line:79:5, line:82:5>
|   | |-OpaqueValueExpr 0x167e9a2e9f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x167e9a2e9d0 <line:79:30, line:82:5>
|   |   |-CallExpr 0x167e9a2e958 <line:80:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x167e9a2e940 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x167e9a2e900 <col:9> 'int ()' Function 0x167e9a2e838 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x167e9a2e980 <col:22> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a2e920 <col:22> 'BIO_B64_CTX *' lvalue Var 0x167e9a26fc8 'ctx' 'BIO_B64_CTX *'
|   |   `-ReturnStmt 0x167e9a2e9c0 <line:81:9, col:16>
|   |     `-IntegerLiteral 0x167e9a2e998 <col:16> 'int' 0
|   `-ReturnStmt 0x167e9a2ecb0 <line:87:5, col:12>
|     `-IntegerLiteral 0x167e9a2ec88 <col:12> 'int' 1
|-FunctionDecl 0x167e9a2edb8 <line:90:1, line:106:1> line:90:12 invalid b64_free 'int (int *)' static
| |-ParmVarDecl 0x167e9a2ed20 <col:21, col:26> col:26 invalid a 'int *'
| `-CompoundStmt 0x167e9a27530 <line:91:1, line:106:1>
|   |-DeclStmt 0x167e9a2eef0 <line:92:5, col:21>
|   | `-VarDecl 0x167e9a2ee88 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-IfStmt 0x167e9a2efe0 <line:93:5, line:94:16>
|   | |-OpaqueValueExpr 0x167e9a2efc8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x167e9a2efb8 <col:9, col:16>
|   |   `-IntegerLiteral 0x167e9a2ef90 <col:16> 'int' 0
|   |-IfStmt 0x167e9a2f270 <line:97:5, line:98:16>
|   | |-BinaryOperator 0x167e9a2f218 <line:97:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x167e9a2f1e8 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:97:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x167e9a2f140 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a2ee88 'ctx' 'BIO_B64_CTX *'
|   | | `-ImplicitCastExpr 0x167e9a2f200 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_B64_CTX *' <BitCast>
|   | |   `-ParenExpr 0x167e9a2f1c8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x167e9a2f1a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x167e9a2f160 <col:26> 'int' 0
|   | `-ReturnStmt 0x167e9a2f260 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:98:9, col:16>
|   |   `-IntegerLiteral 0x167e9a2f238 <col:16> 'int' 0
|   |-CallExpr 0x167e9a2f428 <line:101:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x167e9a2f410 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x167e9a2f3d0 <col:5> 'int ()' Function 0x167e9a2e838 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x167e9a2f450 <col:18> 'BIO_B64_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x167e9a2f3f0 <col:18> 'BIO_B64_CTX *' lvalue Var 0x167e9a2ee88 'ctx' 'BIO_B64_CTX *'
|   `-ReturnStmt 0x167e9a27520 <line:105:5, col:12>
|     `-IntegerLiteral 0x167e9a274f8 <col:12> 'int' 1
|-FunctionDecl 0x167e9a27728 <line:108:1, line:324:1> line:108:12 invalid b64_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x167e9a27580 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x167e9a27600 <col:29, col:35> col:35 used out 'char *'
| |-ParmVarDecl 0x167e9a27680 <col:40, col:44> col:44 used outl 'int'
| `-CompoundStmt 0x167e9a381a8 <line:109:1, line:324:1>
|   |-DeclStmt 0x167e9a27d18 <line:110:5, col:54>
|   | |-VarDecl 0x167e9a27810 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x167e9a27878 <col:15> 'int' 0
|   | |-VarDecl 0x167e9a278b8 <col:5, col:18> col:18 used i 'int'
|   | |-VarDecl 0x167e9a27938 <col:5, col:21> col:21 used ii 'int'
|   | |-VarDecl 0x167e9a279b8 <col:5, col:25> col:25 used j 'int'
|   | |-VarDecl 0x167e9a27a38 <col:5, col:28> col:28 used k 'int'
|   | |-VarDecl 0x167e9a27ab8 <col:5, col:31> col:31 used x 'int'
|   | |-VarDecl 0x167e9a27b38 <col:5, col:34> col:34 used n 'int'
|   | |-VarDecl 0x167e9a27bb8 <col:5, col:37> col:37 used num 'int'
|   | `-VarDecl 0x167e9a27c38 <col:5, col:53> col:42 used ret_code 'int' cinit
|   |   `-IntegerLiteral 0x167e9a27ca0 <col:53> 'int' 0
|   |-DeclStmt 0x167e9a27da8 <line:111:5, col:21>
|   | `-VarDecl 0x167e9a27d40 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-DeclStmt 0x167e9a27f00 <line:112:5, col:25>
|   | |-VarDecl 0x167e9a27e00 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x167e9a27e80 <col:5, col:24> col:24 used q 'unsigned char *'
|   |-IfStmt 0x167e9a28080 <line:115:5, line:116:18>
|   | |-BinaryOperator 0x167e9a28008 <line:115:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x167e9a27fd8 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:115:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x167e9a27f18 <col:9> 'char *' lvalue ParmVar 0x167e9a27600 'out' 'char *'
|   | | `-ImplicitCastExpr 0x167e9a27ff0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x167e9a27fb8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x167e9a27f90 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x167e9a27f50 <col:26> 'int' 0
|   | `-ReturnStmt 0x167e9a28070 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:116:9, col:18>
|   |   `-ParenExpr 0x167e9a28050 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x167e9a28028 <col:17> 'int' 0
|   |-IfStmt 0x167e9a283f0 <line:120:5, line:121:16>
|   | |-OpaqueValueExpr 0x167e9a283d8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x167e9a283c8 <col:9, col:16>
|   |   `-IntegerLiteral 0x167e9a283a0 <col:16> 'int' 0
|   |-IfStmt 0x167e9a2faf8 <line:125:5, line:131:5>
|   | |-BinaryOperator 0x167e9a2f6a0 <line:125:9, line:31:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x167e9a2f688 <line:125:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x167e9a2f630 <col:9, col:14> 'int' lvalue ->encode 0x167e9a26498
|   | | |   `-ImplicitCastExpr 0x167e9a2f618 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x167e9a2f5f8 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x167e9a2f660 <line:31:25> 'int' 2
|   | `-CompoundStmt 0x167e9a2fac8 <line:125:36, line:131:5>
|   |   |-BinaryOperator 0x167e9a2f750 <line:126:9, line:31:25> 'int' '='
|   |   | |-MemberExpr 0x167e9a2f6f8 <line:126:9, col:14> 'int' lvalue ->encode 0x167e9a26498
|   |   | | `-ImplicitCastExpr 0x167e9a2f6e0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a2f6c0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a2f728 <line:31:25> 'int' 2
|   |   |-BinaryOperator 0x167e9a2f800 <line:127:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x167e9a2f7a8 <col:9, col:14> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   | | `-ImplicitCastExpr 0x167e9a2f790 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a2f770 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a2f7d8 <col:24> 'int' 0
|   |   |-BinaryOperator 0x167e9a2f8b0 <line:128:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x167e9a2f858 <col:9, col:14> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | | `-ImplicitCastExpr 0x167e9a2f840 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a2f820 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a2f888 <col:24> 'int' 0
|   |   `-BinaryOperator 0x167e9a2f960 <line:129:9, col:24> 'int' '='
|   |     |-MemberExpr 0x167e9a2f908 <col:9, col:14> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |     | `-ImplicitCastExpr 0x167e9a2f8f0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x167e9a2f8d0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x167e9a2f938 <col:24> 'int' 0
|   |-IfStmt 0x167e9a28a80 <line:134:5, line:149:5>
|   | |-BinaryOperator 0x167e9a2fbb8 <line:134:9, col:24> 'int' '>'
|   | | |-ImplicitCastExpr 0x167e9a2fba0 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x167e9a2fb48 <col:9, col:14> 'int' lvalue ->buf_len 0x167e9a262c8
|   | | |   `-ImplicitCastExpr 0x167e9a2fb30 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x167e9a2fb10 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x167e9a2fb78 <col:24> 'int' 0
|   | `-CompoundStmt 0x167e9a28a30 <col:27, line:149:5>
|   |   |-CallExpr 0x167e9a2fe20 <line:135:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x167e9a2fe08 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x167e9a2fcc8 <col:9> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x167e9a2fde8 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x167e9a2fdb8 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x167e9a2fd20 <col:24, col:29> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   |   `-ImplicitCastExpr 0x167e9a2fd08 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x167e9a2fce8 <col:24> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x167e9a2fdd0 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x167e9a2fd88 <col:40, col:45> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |       `-ImplicitCastExpr 0x167e9a2fd70 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x167e9a2fd50 <col:40> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x167e9a2ffa0 <line:136:9, col:33> 'int' '='
|   |   | |-DeclRefExpr 0x167e9a2fe48 <col:9> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | `-BinaryOperator 0x167e9a2ff80 <col:13, col:33> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x167e9a2ff50 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x167e9a2feb8 <col:13, col:18> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   |   `-ImplicitCastExpr 0x167e9a2fea0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x167e9a2fe80 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x167e9a2ff68 <col:28, col:33> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x167e9a2ff20 <col:28, col:33> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |       `-ImplicitCastExpr 0x167e9a2ff08 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x167e9a2fee8 <col:28> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |-IfStmt 0x167e9a300e0 <line:137:9, line:138:17>
|   |   | |-BinaryOperator 0x167e9a30048 <line:137:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x167e9a30018 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x167e9a2ffc0 <col:13> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x167e9a30030 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a2ffe0 <col:17> 'int' lvalue ParmVar 0x167e9a27680 'outl' 'int'
|   |   | `-BinaryOperator 0x167e9a300c0 <line:138:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x167e9a30068 <col:13> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x167e9a300a8 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x167e9a30088 <col:17> 'int' lvalue ParmVar 0x167e9a27680 'outl' 'int'
|   |   |-BinaryOperator 0x167e9a28578 <line:141:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x167e9a28508 <col:9> 'int' lvalue Var 0x167e9a27810 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x167e9a28560 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a28540 <col:15> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |-CompoundAssignOperator 0x167e9a285f0 <line:142:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x167e9a28598 <col:9> 'char *' lvalue ParmVar 0x167e9a27600 'out' 'char *'
|   |   | `-ImplicitCastExpr 0x167e9a285d8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a285b8 <col:16> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |-CompoundAssignOperator 0x167e9a28678 <line:143:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x167e9a28620 <col:9> 'int' lvalue ParmVar 0x167e9a27680 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x167e9a28660 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a28640 <col:17> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |-CompoundAssignOperator 0x167e9a28748 <line:144:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x167e9a286e0 <col:9, col:14> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | | `-ImplicitCastExpr 0x167e9a286c8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a286a8 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x167e9a28730 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a28710 <col:25> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   `-IfStmt 0x167e9a28a18 <line:145:9, line:148:9>
|   |     |-BinaryOperator 0x167e9a28878 <line:145:13, col:34> 'int' '=='
|   |     | |-ImplicitCastExpr 0x167e9a28848 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x167e9a287b0 <col:13, col:18> 'int' lvalue ->buf_len 0x167e9a262c8
|   |     | |   `-ImplicitCastExpr 0x167e9a28798 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x167e9a28778 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |     | `-ImplicitCastExpr 0x167e9a28860 <col:29, col:34> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x167e9a28818 <col:29, col:34> 'int' lvalue ->buf_off 0x167e9a26338
|   |     |     `-ImplicitCastExpr 0x167e9a28800 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x167e9a287e0 <col:29> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |     `-CompoundStmt 0x167e9a289f8 <col:43, line:148:9>
|   |       |-BinaryOperator 0x167e9a28928 <line:146:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x167e9a288d0 <col:13, col:18> 'int' lvalue ->buf_len 0x167e9a262c8
|   |       | | `-ImplicitCastExpr 0x167e9a288b8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x167e9a28898 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |       | `-IntegerLiteral 0x167e9a28900 <col:28> 'int' 0
|   |       `-BinaryOperator 0x167e9a289d8 <line:147:13, col:28> 'int' '='
|   |         |-MemberExpr 0x167e9a28980 <col:13, col:18> 'int' lvalue ->buf_off 0x167e9a26338
|   |         | `-ImplicitCastExpr 0x167e9a28968 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x167e9a28948 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |         `-IntegerLiteral 0x167e9a289b0 <col:28> 'int' 0
|   |-BinaryOperator 0x167e9a28af8 <line:156:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x167e9a28a98 <col:5> 'int' lvalue Var 0x167e9a27c38 'ret_code' 'int'
|   | `-IntegerLiteral 0x167e9a28ad0 <col:16> 'int' 0
|   |-WhileStmt 0x167e9a37f10 <line:157:5, line:320:5>
|   | |-BinaryOperator 0x167e9a28b78 <line:157:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x167e9a28b60 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x167e9a28b18 <col:12> 'int' lvalue ParmVar 0x167e9a27680 'outl' 'int'
|   | | `-IntegerLiteral 0x167e9a28b38 <col:19> 'int' 0
|   | `-CompoundStmt 0x167e9a37e88 <col:22, line:320:5>
|   |   |-IfStmt 0x167e9a28c68 <line:158:9, line:159:13>
|   |   | |-BinaryOperator 0x167e9a28c40 <line:158:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x167e9a28c28 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x167e9a28bd0 <col:13, col:18> 'int' lvalue ->cont 0x167e9a26578
|   |   | | |   `-ImplicitCastExpr 0x167e9a28bb8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x167e9a28b98 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | | `-IntegerLiteral 0x167e9a28c00 <col:26> 'int' 0
|   |   | `-BreakStmt 0x167e9a28c60 <line:159:13>
|   |   |-IfStmt 0x167e9a29480 <line:164:9, line:180:9>
|   |   | |-BinaryOperator 0x167e9a29030 <line:164:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x167e9a29018 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x167e9a28fd0 <col:13> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | | `-IntegerLiteral 0x167e9a28ff0 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x167e9a29460 <col:21, line:180:9>
|   |   |   |-BinaryOperator 0x167e9a290a8 <line:165:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x167e9a29050 <col:13> 'int' lvalue Var 0x167e9a27c38 'ret_code' 'int'
|   |   |   | `-ImplicitCastExpr 0x167e9a29090 <col:24> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x167e9a29070 <col:24> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |   `-IfStmt 0x167e9a29438 <line:168:13, line:179:17> has_else
|   |   |     |-OpaqueValueExpr 0x167e9a29420 <<invalid sloc>> '_Bool'
|   |   |     |-CompoundStmt 0x167e9a293f8 <line:168:42, line:176:13>
|   |   |     | |-BinaryOperator 0x167e9a29278 <line:169:17, col:29> 'int' '='
|   |   |     | | |-MemberExpr 0x167e9a29210 <col:17, col:22> 'int' lvalue ->cont 0x167e9a26578
|   |   |     | | | `-ImplicitCastExpr 0x167e9a291f8 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x167e9a291d8 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |     | | `-ImplicitCastExpr 0x167e9a29260 <col:29> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x167e9a29240 <col:29> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |     | `-IfStmt 0x167e9a293d0 <line:171:17, line:175:25> has_else
|   |   |     |   |-BinaryOperator 0x167e9a29340 <line:171:21, col:37> 'int' '=='
|   |   |     |   | |-ImplicitCastExpr 0x167e9a29328 <col:21, col:26> 'int' <LValueToRValue>
|   |   |     |   | | `-MemberExpr 0x167e9a292d0 <col:21, col:26> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   |     |   | |   `-ImplicitCastExpr 0x167e9a292b8 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   | |     `-DeclRefExpr 0x167e9a29298 <col:21> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |     |   | `-IntegerLiteral 0x167e9a29300 <col:37> 'int' 0
|   |   |     |   |-BreakStmt 0x167e9a29360 <line:172:21>
|   |   |     |   `-BinaryOperator 0x167e9a293b0 <line:175:21, col:25> 'int' '='
|   |   |     |     |-DeclRefExpr 0x167e9a29368 <col:21> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |     |     `-IntegerLiteral 0x167e9a29388 <col:25> 'int' 0
|   |   |     `-BreakStmt 0x167e9a29418 <line:179:17>
|   |   |-CompoundAssignOperator 0x167e9a36620 <line:181:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x167e9a36580 <col:9> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | `-ImplicitCastExpr 0x167e9a36608 <col:14, col:19> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x167e9a365d8 <col:14, col:19> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   |     `-ImplicitCastExpr 0x167e9a365c0 <col:14> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x167e9a365a0 <col:14> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x167e9a366f0 <line:182:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x167e9a36688 <col:9, col:14> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | | `-ImplicitCastExpr 0x167e9a36670 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a36650 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x167e9a366d8 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a366b8 <col:24> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |-IfStmt 0x167e9a32cd0 <line:188:9, line:258:9> has_else
|   |   | |-OpaqueValueExpr 0x167e9a32cb8 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x167e9a36938 <line:188:72, line:191:9>
|   |   | | `-BinaryOperator 0x167e9a36918 <line:190:13, col:28> 'int' '='
|   |   | |   |-MemberExpr 0x167e9a368c0 <col:13, col:18> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |   | `-ImplicitCastExpr 0x167e9a368a8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x167e9a36888 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | |   `-IntegerLiteral 0x167e9a368f0 <col:28> 'int' 0
|   |   | `-IfStmt 0x167e9a32c90 <line:191:16, line:258:9> has_else
|   |   |   |-ImplicitCastExpr 0x167e9a369b8 <line:191:20, col:25> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x167e9a36988 <col:20, col:25> 'int' lvalue ->start 0x167e9a26508
|   |   |   |   `-ImplicitCastExpr 0x167e9a36970 <col:20> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x167e9a36950 <col:20> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   |-CompoundStmt 0x167e9a32a80 <col:32, line:252:9>
|   |   |   | |-BinaryOperator 0x167e9a36b20 <line:192:13, col:43> 'unsigned char *' '='
|   |   |   | | |-DeclRefExpr 0x167e9a369d0 <col:13> 'unsigned char *' lvalue Var 0x167e9a27e80 'q' 'unsigned char *'
|   |   |   | | `-BinaryOperator 0x167e9a36b00 <col:17, col:43> 'unsigned char *' '='
|   |   |   | |   |-DeclRefExpr 0x167e9a36a08 <col:17> 'unsigned char *' lvalue Var 0x167e9a27e00 'p' 'unsigned char *'
|   |   |   | |   `-CStyleCastExpr 0x167e9a36ad8 <col:21, col:43> 'unsigned char *' <BitCast>
|   |   |   | |     `-ImplicitCastExpr 0x167e9a36ac0 <col:38, col:43> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |   | |       `-MemberExpr 0x167e9a36a78 <col:38, col:43> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   |   | |         `-ImplicitCastExpr 0x167e9a36a60 <col:38> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |           `-DeclRefExpr 0x167e9a36a40 <col:38> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   | |-BinaryOperator 0x167e9a36ba0 <line:193:13, col:19> 'int' '='
|   |   |   | | |-DeclRefExpr 0x167e9a36b40 <col:13> 'int' lvalue Var 0x167e9a27bb8 'num' 'int'
|   |   |   | | `-IntegerLiteral 0x167e9a36b78 <col:19> 'int' 0
|   |   |   | |-ForStmt 0x167e9a30de8 <line:194:13, line:227:13>
|   |   |   | | |-BinaryOperator 0x167e9a36c20 <line:194:18, col:22> 'int' '='
|   |   |   | | | |-DeclRefExpr 0x167e9a36bc0 <col:18> 'int' lvalue Var 0x167e9a279b8 'j' 'int'
|   |   |   | | | `-IntegerLiteral 0x167e9a36bf8 <col:22> 'int' 0
|   |   |   | | |-<<<NULL>>>
|   |   |   | | |-BinaryOperator 0x167e9a36cb0 <col:25, col:29> 'int' '<'
|   |   |   | | | |-ImplicitCastExpr 0x167e9a36c80 <col:25> 'int' <LValueToRValue>
|   |   |   | | | | `-DeclRefExpr 0x167e9a36c40 <col:25> 'int' lvalue Var 0x167e9a279b8 'j' 'int'
|   |   |   | | | `-ImplicitCastExpr 0x167e9a36c98 <col:29> 'int' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x167e9a36c60 <col:29> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |   | | |-UnaryOperator 0x167e9a36cf0 <col:32, col:33> 'int' postfix '++'
|   |   |   | | | `-DeclRefExpr 0x167e9a36cd0 <col:32> 'int' lvalue Var 0x167e9a279b8 'j' 'int'
|   |   |   | | `-CompoundStmt 0x167e9a30db8 <col:37, line:227:13>
|   |   |   | |   |-IfStmt 0x167e9a36de8 <line:195:17, line:196:21>
|   |   |   | |   | |-BinaryOperator 0x167e9a36dc0 <line:195:21, col:31> 'int' '!='
|   |   |   | |   | | |-ImplicitCastExpr 0x167e9a36da8 <col:21, col:26> 'int' <IntegralCast>
|   |   |   | |   | | | `-ImplicitCastExpr 0x167e9a36d90 <col:21, col:26> 'unsigned char' <LValueToRValue>
|   |   |   | |   | | |   `-UnaryOperator 0x167e9a36d60 <col:21, col:26> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |   | | |     `-ParenExpr 0x167e9a36d40 <col:22, col:26> 'unsigned char *'
|   |   |   | |   | | |       `-UnaryOperator 0x167e9a36d28 <col:23, col:24> 'unsigned char *' postfix '++'
|   |   |   | |   | | |         `-DeclRefExpr 0x167e9a36d08 <col:23> 'unsigned char *' lvalue Var 0x167e9a27e80 'q' 'unsigned char *'
|   |   |   | |   | | `-CharacterLiteral 0x167e9a36d78 <col:31> 'int' 10
|   |   |   | |   | `-ContinueStmt 0x167e9a36de0 <line:196:21>
|   |   |   | |   |-IfStmt 0x167e9a36fd8 <line:203:17, line:207:17>
|   |   |   | |   | |-ImplicitCastExpr 0x167e9a36e68 <line:203:21, col:26> 'int' <LValueToRValue>
|   |   |   | |   | | `-MemberExpr 0x167e9a36e38 <col:21, col:26> 'int' lvalue ->tmp_nl 0x167e9a26418
|   |   |   | |   | |   `-ImplicitCastExpr 0x167e9a36e20 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   | |     `-DeclRefExpr 0x167e9a36e00 <col:21> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   | `-CompoundStmt 0x167e9a36fb0 <col:34, line:207:17>
|   |   |   | |   |   |-BinaryOperator 0x167e9a36ed8 <line:204:21, col:25> 'unsigned char *' '='
|   |   |   | |   |   | |-DeclRefExpr 0x167e9a36e80 <col:21> 'unsigned char *' lvalue Var 0x167e9a27e00 'p' 'unsigned char *'
|   |   |   | |   |   | `-ImplicitCastExpr 0x167e9a36ec0 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |   `-DeclRefExpr 0x167e9a36ea0 <col:25> 'unsigned char *' lvalue Var 0x167e9a27e80 'q' 'unsigned char *'
|   |   |   | |   |   |-BinaryOperator 0x167e9a36f88 <line:205:21, col:35> 'int' '='
|   |   |   | |   |   | |-MemberExpr 0x167e9a36f30 <col:21, col:26> 'int' lvalue ->tmp_nl 0x167e9a26418
|   |   |   | |   |   | | `-ImplicitCastExpr 0x167e9a36f18 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |   `-DeclRefExpr 0x167e9a36ef8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | `-IntegerLiteral 0x167e9a36f60 <col:35> 'int' 0
|   |   |   | |   |   `-ContinueStmt 0x167e9a36fa8 <line:206:21>
|   |   |   | |   |-IfStmt 0x167e9a30d18 <line:212:17, line:225:17> has_else
|   |   |   | |   | |-BinaryOperator 0x167e9a37490 <line:212:21, col:58> 'int' '&&'
|   |   |   | |   | | |-BinaryOperator 0x167e9a373d0 <col:21, col:42> 'int' '&&'
|   |   |   | |   | | | |-ParenExpr 0x167e9a37310 <col:21, col:28> 'int'
|   |   |   | |   | | | | `-BinaryOperator 0x167e9a372f0 <col:22, col:27> 'int' '<='
|   |   |   | |   | | | |   |-ImplicitCastExpr 0x167e9a372d8 <col:22> 'int' <LValueToRValue>
|   |   |   | |   | | | |   | `-DeclRefExpr 0x167e9a37290 <col:22> 'int' lvalue Var 0x167e9a27a38 'k' 'int'
|   |   |   | |   | | | |   `-IntegerLiteral 0x167e9a372b0 <col:27> 'int' 0
|   |   |   | |   | | | `-ParenExpr 0x167e9a373b0 <col:33, col:42> 'int'
|   |   |   | |   | | |   `-BinaryOperator 0x167e9a37390 <col:34, col:41> 'int' '=='
|   |   |   | |   | | |     |-ImplicitCastExpr 0x167e9a37378 <col:34> 'int' <LValueToRValue>
|   |   |   | |   | | |     | `-DeclRefExpr 0x167e9a37330 <col:34> 'int' lvalue Var 0x167e9a27bb8 'num' 'int'
|   |   |   | |   | | |     `-IntegerLiteral 0x167e9a37350 <col:41> 'int' 0
|   |   |   | |   | | `-ImplicitCastExpr 0x167e9a37478 <col:47, col:58> 'int' <LValueToRValue>
|   |   |   | |   | |   `-ParenExpr 0x167e9a37458 <col:47, col:58> 'int' lvalue
|   |   |   | |   | |     `-MemberExpr 0x167e9a37428 <col:48, col:53> 'int' lvalue ->start 0x167e9a26508
|   |   |   | |   | |       `-ImplicitCastExpr 0x167e9a37410 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   | |         `-DeclRefExpr 0x167e9a373f0 <col:48> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   | |-NullStmt 0x167e9a30d10 <line:213:21>
|   |   |   | |   | `-CompoundStmt 0x167e9a30ce8 <line:214:22, line:225:17>
|   |   |   | |   |   |-IfStmt 0x167e9a30bc0 <line:215:21, line:221:21>
|   |   |   | |   |   | |-BinaryOperator 0x167e9a30640 <line:215:25, line:216:38> 'int' '!='
|   |   |   | |   |   | | |-ImplicitCastExpr 0x167e9a30628 <line:215:25> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   | | | `-DeclRefExpr 0x167e9a37508 <col:25> 'unsigned char *' lvalue Var 0x167e9a27e00 'p' 'unsigned char *'
|   |   |   | |   |   | | `-CStyleCastExpr 0x167e9a30600 <col:30, line:216:38> 'unsigned char *' <BitCast>
|   |   |   | |   |   | |   `-UnaryOperator 0x167e9a305d0 <col:25, col:38> 'char *' prefix '&' cannot overflow
|   |   |   | |   |   | |     `-ParenExpr 0x167e9a305b0 <col:26, col:38> 'char' lvalue
|   |   |   | |   |   | |       `-ArraySubscriptExpr 0x167e9a30590 <col:27, col:37> 'char' lvalue
|   |   |   | |   |   | |         |-ImplicitCastExpr 0x167e9a30578 <col:27, col:32> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   | |         | `-MemberExpr 0x167e9a30520 <col:27, col:32> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   |   | |   |   | |         |   `-ImplicitCastExpr 0x167e9a37548 <col:27> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |         |     `-DeclRefExpr 0x167e9a37528 <col:27> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | |         `-IntegerLiteral 0x167e9a30550 <col:36> 'int' 0
|   |   |   | |   |   | `-CompoundStmt 0x167e9a30ba0 <col:41, line:221:21>
|   |   |   | |   |   |   |-CompoundAssignOperator 0x167e9a30838 <line:217:25, line:218:45> 'int' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   |   |   | |   |   |   | |-DeclRefExpr 0x167e9a30660 <line:217:25> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |   | |   |   |   | `-ParenExpr 0x167e9a30818 <col:30, line:218:45> 'long long'
|   |   |   | |   |   |   |   `-BinaryOperator 0x167e9a307f8 <line:217:31, line:218:44> 'long long' '-'
|   |   |   | |   |   |   |     |-ImplicitCastExpr 0x167e9a307e0 <line:217:31> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |   |     | `-DeclRefExpr 0x167e9a30680 <col:31> 'unsigned char *' lvalue Var 0x167e9a27e00 'p' 'unsigned char *'
|   |   |   | |   |   |   |     `-CStyleCastExpr 0x167e9a307b8 <col:35, line:218:44> 'unsigned char *' <BitCast>
|   |   |   | |   |   |   |       `-UnaryOperator 0x167e9a30788 <col:31, col:44> 'char *' prefix '&' cannot overflow
|   |   |   | |   |   |   |         `-ParenExpr 0x167e9a30768 <col:32, col:44> 'char' lvalue
|   |   |   | |   |   |   |           `-ArraySubscriptExpr 0x167e9a30748 <col:33, col:43> 'char' lvalue
|   |   |   | |   |   |   |             |-ImplicitCastExpr 0x167e9a30730 <col:33, col:38> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   |   |             | `-MemberExpr 0x167e9a306d8 <col:33, col:38> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   |   | |   |   |   |             |   `-ImplicitCastExpr 0x167e9a306c0 <col:33> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   |   |             |     `-DeclRefExpr 0x167e9a306a0 <col:33> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   |   |             `-IntegerLiteral 0x167e9a30708 <col:42> 'int' 0
|   |   |   | |   |   |   `-ForStmt 0x167e9a30b68 <line:219:25, line:220:46>
|   |   |   | |   |   |     |-BinaryOperator 0x167e9a308c8 <line:219:30, col:34> 'int' '='
|   |   |   | |   |   |     | |-DeclRefExpr 0x167e9a30868 <col:30> 'int' lvalue Var 0x167e9a27ab8 'x' 'int'
|   |   |   | |   |   |     | `-IntegerLiteral 0x167e9a308a0 <col:34> 'int' 0
|   |   |   | |   |   |     |-<<<NULL>>>
|   |   |   | |   |   |     |-BinaryOperator 0x167e9a30958 <col:37, col:41> 'int' '<'
|   |   |   | |   |   |     | |-ImplicitCastExpr 0x167e9a30928 <col:37> 'int' <LValueToRValue>
|   |   |   | |   |   |     | | `-DeclRefExpr 0x167e9a308e8 <col:37> 'int' lvalue Var 0x167e9a27ab8 'x' 'int'
|   |   |   | |   |   |     | `-ImplicitCastExpr 0x167e9a30940 <col:41> 'int' <LValueToRValue>
|   |   |   | |   |   |     |   `-DeclRefExpr 0x167e9a30908 <col:41> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |   | |   |   |     |-UnaryOperator 0x167e9a30998 <col:44, col:45> 'int' postfix '++'
|   |   |   | |   |   |     | `-DeclRefExpr 0x167e9a30978 <col:44> 'int' lvalue Var 0x167e9a27ab8 'x' 'int'
|   |   |   | |   |   |     `-BinaryOperator 0x167e9a30b48 <line:220:29, col:46> 'char' '='
|   |   |   | |   |   |       |-ArraySubscriptExpr 0x167e9a30a68 <col:29, col:39> 'char' lvalue
|   |   |   | |   |   |       | |-ImplicitCastExpr 0x167e9a30a38 <col:29, col:34> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   |       | | `-MemberExpr 0x167e9a309e8 <col:29, col:34> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   |   | |   |   |       | |   `-ImplicitCastExpr 0x167e9a309d0 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   |       | |     `-DeclRefExpr 0x167e9a309b0 <col:29> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   |       | `-ImplicitCastExpr 0x167e9a30a50 <col:38> 'int' <LValueToRValue>
|   |   |   | |   |   |       |   `-DeclRefExpr 0x167e9a30a18 <col:38> 'int' lvalue Var 0x167e9a27ab8 'x' 'int'
|   |   |   | |   |   |       `-ImplicitCastExpr 0x167e9a30b30 <col:43, col:46> 'char' <IntegralCast>
|   |   |   | |   |   |         `-ImplicitCastExpr 0x167e9a30b18 <col:43, col:46> 'unsigned char' <LValueToRValue>
|   |   |   | |   |   |           `-ArraySubscriptExpr 0x167e9a30af8 <col:43, col:46> 'unsigned char' lvalue
|   |   |   | |   |   |             |-ImplicitCastExpr 0x167e9a30ac8 <col:43> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |             | `-DeclRefExpr 0x167e9a30a88 <col:43> 'unsigned char *' lvalue Var 0x167e9a27e00 'p' 'unsigned char *'
|   |   |   | |   |   |             `-ImplicitCastExpr 0x167e9a30ae0 <col:45> 'int' <LValueToRValue>
|   |   |   | |   |   |               `-DeclRefExpr 0x167e9a30aa8 <col:45> 'int' lvalue Var 0x167e9a27ab8 'x' 'int'
|   |   |   | |   |   |-BinaryOperator 0x167e9a30cc0 <line:223:21, col:34> 'int' '='
|   |   |   | |   |   | |-MemberExpr 0x167e9a30c68 <col:21, col:26> 'int' lvalue ->start 0x167e9a26508
|   |   |   | |   |   | | `-ImplicitCastExpr 0x167e9a30c50 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |   `-DeclRefExpr 0x167e9a30c30 <col:21> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | `-IntegerLiteral 0x167e9a30c98 <col:34> 'int' 0
|   |   |   | |   |   `-BreakStmt 0x167e9a30ce0 <line:224:21>
|   |   |   | |   `-BinaryOperator 0x167e9a30d98 <line:226:17, col:21> 'unsigned char *' '='
|   |   |   | |     |-DeclRefExpr 0x167e9a30d40 <col:17> 'unsigned char *' lvalue Var 0x167e9a27e00 'p' 'unsigned char *'
|   |   |   | |     `-ImplicitCastExpr 0x167e9a30d80 <col:21> 'unsigned char *' <LValueToRValue>
|   |   |   | |       `-DeclRefExpr 0x167e9a30d60 <col:21> 'unsigned char *' lvalue Var 0x167e9a27e80 'q' 'unsigned char *'
|   |   |   | `-IfStmt 0x167e9a32a58 <line:230:13, line:251:13> has_else
|   |   |   |   |-BinaryOperator 0x167e9a30f70 <line:230:17, col:38> 'int' '&&'
|   |   |   |   | |-ParenExpr 0x167e9a30eb0 <col:17, col:24> 'int'
|   |   |   |   | | `-BinaryOperator 0x167e9a30e90 <col:18, col:23> 'int' '=='
|   |   |   |   | |   |-ImplicitCastExpr 0x167e9a30e60 <col:18> 'int' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x167e9a30e20 <col:18> 'int' lvalue Var 0x167e9a279b8 'j' 'int'
|   |   |   |   | |   `-ImplicitCastExpr 0x167e9a30e78 <col:23> 'int' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x167e9a30e40 <col:23> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |   |   | `-ParenExpr 0x167e9a30f50 <col:29, col:38> 'int'
|   |   |   |   |   `-BinaryOperator 0x167e9a30f30 <col:30, col:37> 'int' '=='
|   |   |   |   |     |-ImplicitCastExpr 0x167e9a30f18 <col:30> 'int' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x167e9a30ed0 <col:30> 'int' lvalue Var 0x167e9a27bb8 'num' 'int'
|   |   |   |   |     `-IntegerLiteral 0x167e9a30ef0 <col:37> 'int' 0
|   |   |   |   |-CompoundStmt 0x167e9a32970 <col:41, line:249:13>
|   |   |   |   | |-IfStmt 0x167e9a32940 <line:235:17, line:246:17> has_else
|   |   |   |   | | |-BinaryOperator 0x167e9a31108 <line:235:21, col:56> 'int' '=='
|   |   |   |   | | | |-ImplicitCastExpr 0x167e9a310f0 <col:21> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | | | `-DeclRefExpr 0x167e9a30f90 <col:21> 'unsigned char *' lvalue Var 0x167e9a27e00 'p' 'unsigned char *'
|   |   |   |   | | | `-CStyleCastExpr 0x167e9a310c8 <col:26, col:56> 'unsigned char *' <BitCast>
|   |   |   |   | | |   `-UnaryOperator 0x167e9a31098 <col:43, col:56> 'char *' prefix '&' cannot overflow
|   |   |   |   | | |     `-ParenExpr 0x167e9a31078 <col:44, col:56> 'char' lvalue
|   |   |   |   | | |       `-ArraySubscriptExpr 0x167e9a31058 <col:45, col:55> 'char' lvalue
|   |   |   |   | | |         |-ImplicitCastExpr 0x167e9a31040 <col:45, col:50> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | |         | `-MemberExpr 0x167e9a30fe8 <col:45, col:50> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   |   |   | | |         |   `-ImplicitCastExpr 0x167e9a30fd0 <col:45> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |         |     `-DeclRefExpr 0x167e9a30fb0 <col:45> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |         `-IntegerLiteral 0x167e9a31018 <col:54> 'int' 0
|   |   |   |   | | |-CompoundStmt 0x167e9a31340 <col:59, line:241:17>
|   |   |   |   | | | `-IfStmt 0x167e9a31328 <line:237:21, line:240:21>
|   |   |   |   | | |   |-BinaryOperator 0x167e9a31188 <line:237:25, line:27:25> 'int' '=='
|   |   |   |   | | |   | |-ImplicitCastExpr 0x167e9a31170 <line:237:25> 'int' <LValueToRValue>
|   |   |   |   | | |   | | `-DeclRefExpr 0x167e9a31128 <col:25> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |   |   | | |   | `-IntegerLiteral 0x167e9a31148 <line:27:25> 'int' 1024
|   |   |   |   | | |   `-CompoundStmt 0x167e9a31308 <line:237:46, line:240:21>
|   |   |   |   | | |     |-BinaryOperator 0x167e9a31238 <line:238:25, col:39> 'int' '='
|   |   |   |   | | |     | |-MemberExpr 0x167e9a311e0 <col:25, col:30> 'int' lvalue ->tmp_nl 0x167e9a26418
|   |   |   |   | | |     | | `-ImplicitCastExpr 0x167e9a311c8 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |     | |   `-DeclRefExpr 0x167e9a311a8 <col:25> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |     | `-IntegerLiteral 0x167e9a31210 <col:39> 'int' 1
|   |   |   |   | | |     `-BinaryOperator 0x167e9a312e8 <line:239:25, col:40> 'int' '='
|   |   |   |   | | |       |-MemberExpr 0x167e9a31290 <col:25, col:30> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   |   |   | | |       | `-ImplicitCastExpr 0x167e9a31278 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |       |   `-DeclRefExpr 0x167e9a31258 <col:25> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |       `-IntegerLiteral 0x167e9a312c0 <col:40> 'int' 0
|   |   |   |   | | `-IfStmt 0x167e9a32928 <line:241:24, line:246:17>
|   |   |   |   | |   |-BinaryOperator 0x167e9a313c8 <line:241:28, col:33> 'int' '!='
|   |   |   |   | |   | |-ImplicitCastExpr 0x167e9a31398 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |   | | `-DeclRefExpr 0x167e9a31358 <col:28> 'unsigned char *' lvalue Var 0x167e9a27e00 'p' 'unsigned char *'
|   |   |   |   | |   | `-ImplicitCastExpr 0x167e9a313b0 <col:33> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |   |   `-DeclRefExpr 0x167e9a31378 <col:33> 'unsigned char *' lvalue Var 0x167e9a27e80 'q' 'unsigned char *'
|   |   |   |   | |   `-CompoundStmt 0x167e9a32900 <col:36, line:246:17>
|   |   |   |   | |     |-BinaryOperator 0x167e9a314c8 <line:242:21, col:29> 'int' '='
|   |   |   |   | |     | |-DeclRefExpr 0x167e9a313e8 <col:21> 'int' lvalue Var 0x167e9a27b38 'n' 'int'
|   |   |   |   | |     | `-ImplicitCastExpr 0x167e9a314b0 <col:25, col:29> 'int' <IntegralCast>
|   |   |   |   | |     |   `-BinaryOperator 0x167e9a31490 <col:25, col:29> 'long long' '-'
|   |   |   |   | |     |     |-ImplicitCastExpr 0x167e9a31460 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |     | `-DeclRefExpr 0x167e9a31420 <col:25> 'unsigned char *' lvalue Var 0x167e9a27e80 'q' 'unsigned char *'
|   |   |   |   | |     |     `-ImplicitCastExpr 0x167e9a31478 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |       `-DeclRefExpr 0x167e9a31440 <col:29> 'unsigned char *' lvalue Var 0x167e9a27e00 'p' 'unsigned char *'
|   |   |   |   | |     |-ForStmt 0x167e9a32808 <line:243:21, line:244:44>
|   |   |   |   | |     | |-BinaryOperator 0x167e9a32568 <line:243:26, col:31> 'int' '='
|   |   |   |   | |     | | |-DeclRefExpr 0x167e9a314e8 <col:26> 'int' lvalue Var 0x167e9a27938 'ii' 'int'
|   |   |   |   | |     | | `-IntegerLiteral 0x167e9a32540 <col:31> 'int' 0
|   |   |   |   | |     | |-<<<NULL>>>
|   |   |   |   | |     | |-BinaryOperator 0x167e9a325f8 <col:34, col:39> 'int' '<'
|   |   |   |   | |     | | |-ImplicitCastExpr 0x167e9a325c8 <col:34> 'int' <LValueToRValue>
|   |   |   |   | |     | | | `-DeclRefExpr 0x167e9a32588 <col:34> 'int' lvalue Var 0x167e9a27938 'ii' 'int'
|   |   |   |   | |     | | `-ImplicitCastExpr 0x167e9a325e0 <col:39> 'int' <LValueToRValue>
|   |   |   |   | |     | |   `-DeclRefExpr 0x167e9a325a8 <col:39> 'int' lvalue Var 0x167e9a27b38 'n' 'int'
|   |   |   |   | |     | |-UnaryOperator 0x167e9a32638 <col:42, col:44> 'int' postfix '++'
|   |   |   |   | |     | | `-DeclRefExpr 0x167e9a32618 <col:42> 'int' lvalue Var 0x167e9a27938 'ii' 'int'
|   |   |   |   | |     | `-BinaryOperator 0x167e9a327e8 <line:244:25, col:44> 'char' '='
|   |   |   |   | |     |   |-ArraySubscriptExpr 0x167e9a32708 <col:25, col:36> 'char' lvalue
|   |   |   |   | |     |   | |-ImplicitCastExpr 0x167e9a326d8 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   |   |   | |     |   | | `-MemberExpr 0x167e9a32688 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   |   |   | |     |   | |   `-ImplicitCastExpr 0x167e9a32670 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | |     |   | |     `-DeclRefExpr 0x167e9a32650 <col:25> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | |     |   | `-ImplicitCastExpr 0x167e9a326f0 <col:34> 'int' <LValueToRValue>
|   |   |   |   | |     |   |   `-DeclRefExpr 0x167e9a326b8 <col:34> 'int' lvalue Var 0x167e9a27938 'ii' 'int'
|   |   |   |   | |     |   `-ImplicitCastExpr 0x167e9a327d0 <col:40, col:44> 'char' <IntegralCast>
|   |   |   |   | |     |     `-ImplicitCastExpr 0x167e9a327b8 <col:40, col:44> 'unsigned char' <LValueToRValue>
|   |   |   |   | |     |       `-ArraySubscriptExpr 0x167e9a32798 <col:40, col:44> 'unsigned char' lvalue
|   |   |   |   | |     |         |-ImplicitCastExpr 0x167e9a32768 <col:40> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |         | `-DeclRefExpr 0x167e9a32728 <col:40> 'unsigned char *' lvalue Var 0x167e9a27e00 'p' 'unsigned char *'
|   |   |   |   | |     |         `-ImplicitCastExpr 0x167e9a32780 <col:42> 'int' <LValueToRValue>
|   |   |   |   | |     |           `-DeclRefExpr 0x167e9a32748 <col:42> 'int' lvalue Var 0x167e9a27938 'ii' 'int'
|   |   |   |   | |     `-BinaryOperator 0x167e9a328e0 <line:245:21, col:36> 'int' '='
|   |   |   |   | |       |-MemberExpr 0x167e9a32878 <col:21, col:26> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   |   |   | |       | `-ImplicitCastExpr 0x167e9a32860 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | |       |   `-DeclRefExpr 0x167e9a32840 <col:21> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | |       `-ImplicitCastExpr 0x167e9a328c8 <col:36> 'int' <LValueToRValue>
|   |   |   |   | |         `-DeclRefExpr 0x167e9a328a8 <col:36> 'int' lvalue Var 0x167e9a27b38 'n' 'int'
|   |   |   |   | `-ContinueStmt 0x167e9a32968 <line:248:17>
|   |   |   |   `-CompoundStmt 0x167e9a32a40 <line:249:20, line:251:13>
|   |   |   |     `-BinaryOperator 0x167e9a32a20 <line:250:17, col:32> 'int' '='
|   |   |   |       |-MemberExpr 0x167e9a329c8 <col:17, col:22> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   |   |       | `-ImplicitCastExpr 0x167e9a329b0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |       |   `-DeclRefExpr 0x167e9a32990 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   |       `-IntegerLiteral 0x167e9a329f8 <col:32> 'int' 0
|   |   |   `-IfStmt 0x167e9a32c78 <line:252:16, line:258:9>
|   |   |     |-BinaryOperator 0x167e9a32c38 <line:252:20, col:58> 'int' '&&'
|   |   |     | |-ParenExpr 0x167e9a32b30 <col:20, col:39> 'int'
|   |   |     | | `-BinaryOperator 0x167e9a32b10 <col:21, line:27:25> 'int' '<'
|   |   |     | |   |-ImplicitCastExpr 0x167e9a32af8 <line:252:21> 'int' <LValueToRValue>
|   |   |     | |   | `-DeclRefExpr 0x167e9a32ab0 <col:21> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |     | |   `-IntegerLiteral 0x167e9a32ad0 <line:27:25> 'int' 1024
|   |   |     | `-ParenExpr 0x167e9a32c18 <line:252:44, col:58> 'int'
|   |   |     |   `-BinaryOperator 0x167e9a32bf8 <col:45, col:57> 'int' '>'
|   |   |     |     |-ImplicitCastExpr 0x167e9a32be0 <col:45, col:50> 'int' <LValueToRValue>
|   |   |     |     | `-MemberExpr 0x167e9a32b88 <col:45, col:50> 'int' lvalue ->cont 0x167e9a26578
|   |   |     |     |   `-ImplicitCastExpr 0x167e9a32b70 <col:45> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     |     `-DeclRefExpr 0x167e9a32b50 <col:45> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |     |     `-IntegerLiteral 0x167e9a32bb8 <col:57> 'int' 0
|   |   |     `-CompoundStmt 0x167e9a32c60 <col:61, line:258:9>
|   |   |       `-ContinueStmt 0x167e9a32c58 <line:257:13>
|   |   |-IfStmt 0x167e9a362f8 <line:260:9, line:290:9> has_else
|   |   | |-OpaqueValueExpr 0x167e9a362e0 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x167e9a35fc0 <line:260:56, line:285:9>
|   |   | | |-DeclStmt 0x167e9a32e30 <line:261:13, col:22>
|   |   | | | |-VarDecl 0x167e9a32d30 <col:13, col:17> col:17 used z 'int'
|   |   | | | `-VarDecl 0x167e9a32db0 <col:13, col:20> col:20 used jj 'int'
|   |   | | |-BinaryOperator 0x167e9a32f18 <line:263:13, col:23> 'int' '='
|   |   | | | |-DeclRefExpr 0x167e9a32e48 <col:13> 'int' lvalue Var 0x167e9a32db0 'jj' 'int'
|   |   | | | `-BinaryOperator 0x167e9a32ef8 <col:18, col:23> 'int' '&'
|   |   | | |   |-ImplicitCastExpr 0x167e9a32ee0 <col:18> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x167e9a32e80 <col:18> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | | |   `-UnaryOperator 0x167e9a32ec8 <col:22, col:23> 'int' prefix '~' cannot overflow
|   |   | | |     `-IntegerLiteral 0x167e9a32ea0 <col:23> 'int' 3
|   |   | | |-IfStmt 0x167e9a35630 <line:266:13, line:272:13>
|   |   | | | |-BinaryOperator 0x167e9a331f8 <line:266:17, col:22> 'int' '>'
|   |   | | | | |-ImplicitCastExpr 0x167e9a331e0 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x167e9a33198 <col:17> 'int' lvalue Var 0x167e9a32db0 'jj' 'int'
|   |   | | | | `-IntegerLiteral 0x167e9a331b8 <col:22> 'int' 2
|   |   | | | `-CompoundStmt 0x167e9a35618 <col:25, line:272:13>
|   |   | | |   `-IfStmt 0x167e9a35600 <line:267:17, line:271:17>
|   |   | | |     |-BinaryOperator 0x167e9a33380 <line:267:21, col:41> 'int' '=='
|   |   | | |     | |-ImplicitCastExpr 0x167e9a33368 <col:21, col:36> 'int' <IntegralCast>
|   |   | | |     | | `-ImplicitCastExpr 0x167e9a33350 <col:21, col:36> 'char' <LValueToRValue>
|   |   | | |     | |   `-ArraySubscriptExpr 0x167e9a33318 <col:21, col:36> 'char' lvalue
|   |   | | |     | |     |-ImplicitCastExpr 0x167e9a33300 <col:21, col:26> 'char *' <ArrayToPointerDecay>
|   |   | | |     | |     | `-MemberExpr 0x167e9a33250 <col:21, col:26> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   | | |     | |     |   `-ImplicitCastExpr 0x167e9a33238 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     | |     |     `-DeclRefExpr 0x167e9a33218 <col:21> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | | |     | |     `-BinaryOperator 0x167e9a332e0 <col:30, col:35> 'int' '-'
|   |   | | |     | |       |-ImplicitCastExpr 0x167e9a332c8 <col:30> 'int' <LValueToRValue>
|   |   | | |     | |       | `-DeclRefExpr 0x167e9a33280 <col:30> 'int' lvalue Var 0x167e9a32db0 'jj' 'int'
|   |   | | |     | |       `-IntegerLiteral 0x167e9a332a0 <col:35> 'int' 1
|   |   | | |     | `-CharacterLiteral 0x167e9a33338 <col:41> 'int' 61
|   |   | | |     `-CompoundStmt 0x167e9a355e0 <col:46, line:271:17>
|   |   | | |       |-UnaryOperator 0x167e9a333c0 <line:268:21, col:22> 'int' postfix '--'
|   |   | | |       | `-DeclRefExpr 0x167e9a333a0 <col:21> 'int' lvalue Var 0x167e9a32d30 'z' 'int'
|   |   | | |       `-IfStmt 0x167e9a355c8 <line:269:21, line:270:26>
|   |   | | |         |-BinaryOperator 0x167e9a35570 <line:269:25, col:45> 'int' '=='
|   |   | | |         | |-ImplicitCastExpr 0x167e9a33528 <col:25, col:40> 'int' <IntegralCast>
|   |   | | |         | | `-ImplicitCastExpr 0x167e9a33510 <col:25, col:40> 'char' <LValueToRValue>
|   |   | | |         | |   `-ArraySubscriptExpr 0x167e9a334d8 <col:25, col:40> 'char' lvalue
|   |   | | |         | |     |-ImplicitCastExpr 0x167e9a334c0 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   | | |         | |     | `-MemberExpr 0x167e9a33410 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   | | |         | |     |   `-ImplicitCastExpr 0x167e9a333f8 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |         | |     |     `-DeclRefExpr 0x167e9a333d8 <col:25> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | | |         | |     `-BinaryOperator 0x167e9a334a0 <col:34, col:39> 'int' '-'
|   |   | | |         | |       |-ImplicitCastExpr 0x167e9a33488 <col:34> 'int' <LValueToRValue>
|   |   | | |         | |       | `-DeclRefExpr 0x167e9a33440 <col:34> 'int' lvalue Var 0x167e9a32db0 'jj' 'int'
|   |   | | |         | |       `-IntegerLiteral 0x167e9a33460 <col:39> 'int' 2
|   |   | | |         | `-CharacterLiteral 0x167e9a334f8 <col:45> 'int' 61
|   |   | | |         `-UnaryOperator 0x167e9a355b0 <line:270:25, col:26> 'int' postfix '--'
|   |   | | |           `-DeclRefExpr 0x167e9a35590 <col:25> 'int' lvalue Var 0x167e9a32d30 'z' 'int'
|   |   | | |-IfStmt 0x167e9a35d10 <line:276:13, line:279:13>
|   |   | | | |-BinaryOperator 0x167e9a356b8 <line:276:17, col:23> 'int' '!='
|   |   | | | | |-ImplicitCastExpr 0x167e9a35688 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x167e9a35648 <col:17> 'int' lvalue Var 0x167e9a32db0 'jj' 'int'
|   |   | | | | `-ImplicitCastExpr 0x167e9a356a0 <col:23> 'int' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x167e9a35668 <col:23> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | | | `-CompoundStmt 0x167e9a35cf0 <col:26, line:279:13>
|   |   | | |   |-CallExpr 0x167e9a35b40 <line:277:17, col:56> 'void *'
|   |   | | |   | |-ImplicitCastExpr 0x167e9a35b28 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | |   | | `-DeclRefExpr 0x167e9a358c8 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x167e9a356d8 'memmove' 'void *(void *, const void *, unsigned long long)'
|   |   | | |   | |-ImplicitCastExpr 0x167e9a35b90 <col:25, col:30> 'void *' <BitCast>
|   |   | | |   | | `-ImplicitCastExpr 0x167e9a35b78 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   | | |   | |   `-MemberExpr 0x167e9a35938 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   | | |   | |     `-ImplicitCastExpr 0x167e9a35920 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x167e9a35900 <col:25> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | | |   | |-ImplicitCastExpr 0x167e9a35ba8 <col:35, col:47> 'const void *' <BitCast>
|   |   | | |   | | `-UnaryOperator 0x167e9a35a40 <col:35, col:47> 'char *' prefix '&' cannot overflow
|   |   | | |   | |   `-ArraySubscriptExpr 0x167e9a35a20 <col:36, col:47> 'char' lvalue
|   |   | | |   | |     |-ImplicitCastExpr 0x167e9a359f0 <col:36, col:41> 'char *' <ArrayToPointerDecay>
|   |   | | |   | |     | `-MemberExpr 0x167e9a359a0 <col:36, col:41> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   | | |   | |     |   `-ImplicitCastExpr 0x167e9a35988 <col:36> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |   | |     |     `-DeclRefExpr 0x167e9a35968 <col:36> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | | |   | |     `-ImplicitCastExpr 0x167e9a35a08 <col:45> 'int' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x167e9a359d0 <col:45> 'int' lvalue Var 0x167e9a32db0 'jj' 'int'
|   |   | | |   | `-ImplicitCastExpr 0x167e9a35bc0 <col:50, col:54> 'unsigned long long' <IntegralCast>
|   |   | | |   |   `-BinaryOperator 0x167e9a35ac8 <col:50, col:54> 'int' '-'
|   |   | | |   |     |-ImplicitCastExpr 0x167e9a35a98 <col:50> 'int' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x167e9a35a58 <col:50> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | | |   |     `-ImplicitCastExpr 0x167e9a35ab0 <col:54> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x167e9a35a78 <col:54> 'int' lvalue Var 0x167e9a32db0 'jj' 'int'
|   |   | | |   `-BinaryOperator 0x167e9a35cd0 <line:278:17, col:36> 'int' '='
|   |   | | |     |-MemberExpr 0x167e9a35c10 <col:17, col:22> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | | |     | `-ImplicitCastExpr 0x167e9a35bf8 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x167e9a35bd8 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | | |     `-BinaryOperator 0x167e9a35cb0 <col:32, col:36> 'int' '-'
|   |   | | |       |-ImplicitCastExpr 0x167e9a35c80 <col:32> 'int' <LValueToRValue>
|   |   | | |       | `-DeclRefExpr 0x167e9a35c40 <col:32> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | | |       `-ImplicitCastExpr 0x167e9a35c98 <col:36> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x167e9a35c60 <col:36> 'int' lvalue Var 0x167e9a32db0 'jj' 'int'
|   |   | | |-BinaryOperator 0x167e9a35db8 <line:280:13, col:28> 'int' '='
|   |   | | | |-MemberExpr 0x167e9a35d60 <col:13, col:18> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   | | | | `-ImplicitCastExpr 0x167e9a35d48 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x167e9a35d28 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | | | `-IntegerLiteral 0x167e9a35d90 <col:28> 'int' 0
|   |   | | |-IfStmt 0x167e9a35f30 <line:281:13, line:283:13>
|   |   | | | |-BinaryOperator 0x167e9a35e38 <line:281:17, col:21> 'int' '>'
|   |   | | | | |-ImplicitCastExpr 0x167e9a35e20 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x167e9a35dd8 <col:17> 'int' lvalue Var 0x167e9a32d30 'z' 'int'
|   |   | | | | `-IntegerLiteral 0x167e9a35df8 <col:21> 'int' 0
|   |   | | | `-CompoundStmt 0x167e9a35f18 <col:24, line:283:13>
|   |   | | |   `-BinaryOperator 0x167e9a35ef8 <line:282:17, col:32> 'int' '='
|   |   | | |     |-MemberExpr 0x167e9a35e90 <col:17, col:22> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   | | |     | `-ImplicitCastExpr 0x167e9a35e78 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x167e9a35e58 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | | |     `-ImplicitCastExpr 0x167e9a35ee0 <col:32> 'int' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x167e9a35ec0 <col:32> 'int' lvalue Var 0x167e9a32d30 'z' 'int'
|   |   | | `-BinaryOperator 0x167e9a35fa0 <line:284:13, col:17> 'int' '='
|   |   | |   |-DeclRefExpr 0x167e9a35f48 <col:13> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | |   `-ImplicitCastExpr 0x167e9a35f88 <col:17> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x167e9a35f68 <col:17> 'int' lvalue Var 0x167e9a32d30 'z' 'int'
|   |   | `-CompoundStmt 0x167e9a362c8 <line:285:16, line:290:9>
|   |   |   `-BinaryOperator 0x167e9a362a8 <line:289:13, col:28> 'int' '='
|   |   |     |-MemberExpr 0x167e9a36250 <col:13, col:18> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   |     | `-ImplicitCastExpr 0x167e9a36238 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x167e9a36218 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |     `-IntegerLiteral 0x167e9a36280 <col:28> 'int' 0
|   |   |-BinaryOperator 0x167e9a363c0 <line:297:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x167e9a36358 <col:9, col:14> 'int' lvalue ->cont 0x167e9a26578
|   |   | | `-ImplicitCastExpr 0x167e9a36340 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a36320 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x167e9a363a8 <col:21> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a36388 <col:21> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |-BinaryOperator 0x167e9a36470 <line:299:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x167e9a36418 <col:9, col:14> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | | `-ImplicitCastExpr 0x167e9a36400 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a363e0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a36448 <col:24> 'int' 0
|   |   |-IfStmt 0x167e9a37690 <line:300:9, line:304:9>
|   |   | |-BinaryOperator 0x167e9a364f0 <line:300:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x167e9a364d8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x167e9a36490 <col:13> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | | `-IntegerLiteral 0x167e9a364b0 <col:17> 'int' 0
|   |   | `-CompoundStmt 0x167e9a37668 <col:20, line:304:9>
|   |   |   |-BinaryOperator 0x167e9a37590 <line:301:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x167e9a36510 <col:13> 'int' lvalue Var 0x167e9a27c38 'ret_code' 'int'
|   |   |   | `-IntegerLiteral 0x167e9a36530 <col:24> 'int' 0
|   |   |   |-BinaryOperator 0x167e9a37640 <line:302:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x167e9a375e8 <col:13, col:18> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   | | `-ImplicitCastExpr 0x167e9a375d0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x167e9a375b0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-IntegerLiteral 0x167e9a37618 <col:28> 'int' 0
|   |   |   `-BreakStmt 0x167e9a37660 <line:303:13>
|   |   |-IfStmt 0x167e9a378b8 <line:306:9, line:309:17> has_else
|   |   | |-BinaryOperator 0x167e9a37760 <line:306:13, col:29> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x167e9a37730 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x167e9a376e0 <col:13, col:18> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   | | |   `-ImplicitCastExpr 0x167e9a376c8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x167e9a376a8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | | `-ImplicitCastExpr 0x167e9a37748 <col:29> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a37710 <col:29> 'int' lvalue ParmVar 0x167e9a27680 'outl' 'int'
|   |   | |-BinaryOperator 0x167e9a37820 <line:307:13, col:22> 'int' '='
|   |   | | |-DeclRefExpr 0x167e9a37780 <col:13> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x167e9a37808 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x167e9a377d8 <col:17, col:22> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   | |     `-ImplicitCastExpr 0x167e9a377c0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x167e9a377a0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | `-BinaryOperator 0x167e9a37898 <line:309:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x167e9a37840 <col:13> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x167e9a37880 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x167e9a37860 <col:17> 'int' lvalue ParmVar 0x167e9a27680 'outl' 'int'
|   |   |-CompoundAssignOperator 0x167e9a379d0 <line:312:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x167e9a37978 <col:9> 'int' lvalue Var 0x167e9a27810 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x167e9a379b8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a37998 <col:16> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |-BinaryOperator 0x167e9a37aa0 <line:313:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x167e9a37a38 <col:9, col:14> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | | `-ImplicitCastExpr 0x167e9a37a20 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a37a00 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x167e9a37a88 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a37a68 <col:24> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   |-IfStmt 0x167e9a37d60 <line:314:9, line:317:9>
|   |   | |-BinaryOperator 0x167e9a37bc0 <line:314:13, col:34> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x167e9a37b90 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x167e9a37af8 <col:13, col:18> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | | |   `-ImplicitCastExpr 0x167e9a37ae0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x167e9a37ac0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | | `-ImplicitCastExpr 0x167e9a37ba8 <col:29, col:34> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x167e9a37b60 <col:29, col:34> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   | |     `-ImplicitCastExpr 0x167e9a37b48 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x167e9a37b28 <col:29> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   | `-CompoundStmt 0x167e9a37d40 <col:43, line:317:9>
|   |   |   |-BinaryOperator 0x167e9a37c70 <line:315:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x167e9a37c18 <col:13, col:18> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   | | `-ImplicitCastExpr 0x167e9a37c00 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x167e9a37be0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-IntegerLiteral 0x167e9a37c48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x167e9a37d20 <line:316:13, col:28> 'int' '='
|   |   |     |-MemberExpr 0x167e9a37cc8 <col:13, col:18> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |     | `-ImplicitCastExpr 0x167e9a37cb0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x167e9a37c90 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a27d40 'ctx' 'BIO_B64_CTX *'
|   |   |     `-IntegerLiteral 0x167e9a37cf8 <col:28> 'int' 0
|   |   |-CompoundAssignOperator 0x167e9a37dd0 <line:318:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x167e9a37d78 <col:9> 'int' lvalue ParmVar 0x167e9a27680 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x167e9a37db8 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a37d98 <col:17> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   |   `-CompoundAssignOperator 0x167e9a37e58 <line:319:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x167e9a37e00 <col:9> 'char *' lvalue ParmVar 0x167e9a27600 'out' 'char *'
|   |     `-ImplicitCastExpr 0x167e9a37e40 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x167e9a37e20 <col:16> 'int' lvalue Var 0x167e9a278b8 'i' 'int'
|   `-ReturnStmt 0x167e9a38198 <line:323:5, col:40>
|     `-ParenExpr 0x167e9a38178 <col:12, col:40> 'int'
|       `-ConditionalOperator 0x167e9a38148 <col:13, col:37> 'int'
|         |-ParenExpr 0x167e9a380b8 <col:13, col:22> 'int'
|         | `-BinaryOperator 0x167e9a38098 <col:14, col:21> 'int' '=='
|         |   |-ImplicitCastExpr 0x167e9a38080 <col:14> 'int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x167e9a38038 <col:14> 'int' lvalue Var 0x167e9a27810 'ret' 'int'
|         |   `-IntegerLiteral 0x167e9a38058 <col:21> 'int' 0
|         |-ImplicitCastExpr 0x167e9a38118 <col:26> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x167e9a380d8 <col:26> 'int' lvalue Var 0x167e9a27c38 'ret_code' 'int'
|         `-ImplicitCastExpr 0x167e9a38130 <col:37> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x167e9a380f8 <col:37> 'int' lvalue Var 0x167e9a27810 'ret' 'int'
|-FunctionDecl 0x167e9a30270 <line:140:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x167e9a30310 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x167e9a30378 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x167e9a303e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x167e9a356d8 <line:277:17> col:17 implicit used memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x167e9a35778 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x167e9a357e0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x167e9a35848 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x167e9a383c8 <line:326:1, line:444:1> line:326:12 invalid b64_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x167e9a38220 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x167e9a382a0 <col:30, col:42> col:42 used in 'const char *'
| |-ParmVarDecl 0x167e9a38320 <col:46, col:50> col:50 used inl 'int'
| `-CompoundStmt 0x167e9a33f40 <line:327:1, line:444:1>
|   |-DeclStmt 0x167e9a38540 <line:328:5, col:16>
|   | `-VarDecl 0x167e9a384b0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x167e9a38518 <col:15> 'int' 0
|   |-DeclStmt 0x167e9a31598 <line:329:5, col:10>
|   | `-VarDecl 0x167e9a31530 <col:5, col:9> col:9 used n 'int'
|   |-DeclStmt 0x167e9a31630 <line:330:5, col:10>
|   | `-VarDecl 0x167e9a315c8 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x167e9a316c0 <line:331:5, col:21>
|   | `-VarDecl 0x167e9a31658 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-IfStmt 0x167e9a31940 <line:336:5, line:337:16>
|   | |-OpaqueValueExpr 0x167e9a31928 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x167e9a31918 <col:9, col:16>
|   |   `-IntegerLiteral 0x167e9a318f0 <col:16> 'int' 0
|   |-IfStmt 0x167e9a31e78 <line:341:5, line:347:5>
|   | |-BinaryOperator 0x167e9a31a20 <line:341:9, line:30:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x167e9a31a08 <line:341:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x167e9a319b0 <col:9, col:14> 'int' lvalue ->encode 0x167e9a26498
|   | | |   `-ImplicitCastExpr 0x167e9a31998 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x167e9a31978 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x167e9a319e0 <line:30:25> 'int' 1
|   | `-CompoundStmt 0x167e9a31e48 <line:341:36, line:347:5>
|   |   |-BinaryOperator 0x167e9a31ad0 <line:342:9, line:30:25> 'int' '='
|   |   | |-MemberExpr 0x167e9a31a78 <line:342:9, col:14> 'int' lvalue ->encode 0x167e9a26498
|   |   | | `-ImplicitCastExpr 0x167e9a31a60 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a31a40 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a31aa8 <line:30:25> 'int' 1
|   |   |-BinaryOperator 0x167e9a31b80 <line:343:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x167e9a31b28 <col:9, col:14> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   | | `-ImplicitCastExpr 0x167e9a31b10 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a31af0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a31b58 <col:24> 'int' 0
|   |   |-BinaryOperator 0x167e9a31c30 <line:344:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x167e9a31bd8 <col:9, col:14> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | | `-ImplicitCastExpr 0x167e9a31bc0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a31ba0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a31c08 <col:24> 'int' 0
|   |   `-BinaryOperator 0x167e9a31ce0 <line:345:9, col:24> 'int' '='
|   |     |-MemberExpr 0x167e9a31c88 <col:9, col:14> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |     | `-ImplicitCastExpr 0x167e9a31c70 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x167e9a31c50 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x167e9a31cb8 <col:24> 'int' 0
|   |-CallExpr 0x167e9a32168 <line:351:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x167e9a32150 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x167e9a32010 <col:5> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   | `-BinaryOperator 0x167e9a32130 <col:20, col:41> 'int' '>='
|   |   |-ImplicitCastExpr 0x167e9a32100 <col:20, col:25> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x167e9a32068 <col:20, col:25> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   `-ImplicitCastExpr 0x167e9a32050 <col:20> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x167e9a32030 <col:20> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   `-ImplicitCastExpr 0x167e9a32118 <col:36, col:41> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x167e9a320d0 <col:36, col:41> 'int' lvalue ->buf_off 0x167e9a26338
|   |       `-ImplicitCastExpr 0x167e9a320b8 <col:36> 'BIO_B64_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x167e9a32098 <col:36> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |-BinaryOperator 0x167e9a322e8 <line:352:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x167e9a32190 <col:5> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   | `-BinaryOperator 0x167e9a322c8 <col:9, col:29> 'int' '-'
|   |   |-ImplicitCastExpr 0x167e9a32298 <col:9, col:14> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x167e9a32200 <col:9, col:14> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   `-ImplicitCastExpr 0x167e9a321e8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x167e9a321c8 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   `-ImplicitCastExpr 0x167e9a322b0 <col:24, col:29> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x167e9a32268 <col:24, col:29> 'int' lvalue ->buf_off 0x167e9a26338
|   |       `-ImplicitCastExpr 0x167e9a32250 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x167e9a32230 <col:24> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |-WhileStmt 0x167e9a38c00 <line:353:5, line:364:5>
|   | |-BinaryOperator 0x167e9a32368 <line:353:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x167e9a32350 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x167e9a32308 <col:12> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   | | `-IntegerLiteral 0x167e9a32328 <col:16> 'int' 0
|   | `-CompoundStmt 0x167e9a38bc8 <col:19, line:364:5>
|   |   |-IfStmt 0x167e9a38728 <line:355:9, line:358:9>
|   |   | |-BinaryOperator 0x167e9a38668 <line:355:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x167e9a38650 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x167e9a38608 <col:13> 'int' lvalue Var 0x167e9a315c8 'i' 'int'
|   |   | | `-IntegerLiteral 0x167e9a38628 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x167e9a38710 <col:21, line:358:9>
|   |   |   `-ReturnStmt 0x167e9a38700 <line:357:13, col:22>
|   |   |     `-ImplicitCastExpr 0x167e9a386e8 <col:20, col:22> 'int' <LValueToRValue>
|   |   |       `-ParenExpr 0x167e9a386c8 <col:20, col:22> 'int' lvalue
|   |   |         `-DeclRefExpr 0x167e9a386a8 <col:21> 'int' lvalue Var 0x167e9a315c8 'i' 'int'
|   |   |-CallExpr 0x167e9a38808 <line:359:9, col:30> 'int'
|   |   | |-ImplicitCastExpr 0x167e9a387f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x167e9a38740 <col:9> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x167e9a387d0 <col:24, col:29> 'int' '<='
|   |   |   |-ImplicitCastExpr 0x167e9a387a0 <col:24> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x167e9a38760 <col:24> 'int' lvalue Var 0x167e9a315c8 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x167e9a387b8 <col:29> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x167e9a38780 <col:29> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   |-CompoundAssignOperator 0x167e9a388d0 <line:360:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x167e9a38868 <col:9, col:14> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | | `-ImplicitCastExpr 0x167e9a38850 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a38830 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x167e9a388b8 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a38898 <col:25> 'int' lvalue Var 0x167e9a315c8 'i' 'int'
|   |   |-CallExpr 0x167e9a38b18 <line:362:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x167e9a38b00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x167e9a389c0 <col:9> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x167e9a38ae0 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x167e9a38ab0 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x167e9a38a18 <col:24, col:29> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   |   `-ImplicitCastExpr 0x167e9a38a00 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x167e9a389e0 <col:24> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x167e9a38ac8 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x167e9a38a80 <col:40, col:45> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |       `-ImplicitCastExpr 0x167e9a38a68 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x167e9a38a48 <col:40> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   `-CompoundAssignOperator 0x167e9a38b98 <line:363:9, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x167e9a38b40 <col:9> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |     `-ImplicitCastExpr 0x167e9a38b80 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x167e9a38b60 <col:14> 'int' lvalue Var 0x167e9a315c8 'i' 'int'
|   |-BinaryOperator 0x167e9a38ca8 <line:366:5, col:20> 'int' '='
|   | |-MemberExpr 0x167e9a38c50 <col:5, col:10> 'int' lvalue ->buf_off 0x167e9a26338
|   | | `-ImplicitCastExpr 0x167e9a38c38 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x167e9a38c18 <col:5> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x167e9a38c80 <col:20> 'int' 0
|   |-BinaryOperator 0x167e9a38d58 <line:367:5, col:20> 'int' '='
|   | |-MemberExpr 0x167e9a38d00 <col:5, col:10> 'int' lvalue ->buf_len 0x167e9a262c8
|   | | `-ImplicitCastExpr 0x167e9a38ce8 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x167e9a38cc8 <col:5> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x167e9a38d30 <col:20> 'int' 0
|   |-IfStmt 0x167e9a38fd8 <line:369:5, line:370:18>
|   | |-BinaryOperator 0x167e9a38f60 <line:369:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x167e9a38e88 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x167e9a38e68 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x167e9a38e38 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:369:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x167e9a38d78 <col:10> 'const char *' lvalue ParmVar 0x167e9a382a0 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x167e9a38e50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x167e9a38e18 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x167e9a38df0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x167e9a38db0 <col:26> 'int' 0
|   | | `-ParenExpr 0x167e9a38f40 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:369:25, col:34> 'int'
|   | |   `-BinaryOperator 0x167e9a38f20 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x167e9a38f08 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x167e9a38ea8 <col:26> 'int' lvalue ParmVar 0x167e9a38320 'inl' 'int'
|   | |     `-IntegerLiteral 0x167e9a38ee0 <col:33> 'int' 0
|   | `-ReturnStmt 0x167e9a38fc8 <line:370:9, col:18>
|   |   `-ParenExpr 0x167e9a38fa8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x167e9a38f80 <col:17> 'int' 0
|   |-WhileStmt 0x167e9a33ec0 <line:372:5, line:442:5>
|   | |-BinaryOperator 0x167e9a39050 <line:372:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x167e9a39038 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x167e9a38ff0 <col:12> 'int' lvalue ParmVar 0x167e9a38320 'inl' 'int'
|   | | `-IntegerLiteral 0x167e9a39010 <col:18> 'int' 0
|   | `-CompoundStmt 0x167e9a33e68 <col:21, line:442:5>
|   |   |-BinaryOperator 0x167e9a391c0 <line:373:9, col:55> 'int' '='
|   |   | |-DeclRefExpr 0x167e9a39070 <col:9> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | `-ConditionalOperator 0x167e9a39190 <col:13, col:55> 'int'
|   |   |   |-ParenExpr 0x167e9a39110 <col:13, col:34> 'int'
|   |   |   | `-BinaryOperator 0x167e9a390f0 <col:14, line:27:25> 'int' '>'
|   |   |   |   |-ImplicitCastExpr 0x167e9a390d8 <line:373:14> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x167e9a39090 <col:14> 'int' lvalue ParmVar 0x167e9a38320 'inl' 'int'
|   |   |   |   `-IntegerLiteral 0x167e9a390b0 <line:27:25> 'int' 1024
|   |   |   |-IntegerLiteral 0x167e9a39130 <col:25> 'int' 1024
|   |   |   `-ImplicitCastExpr 0x167e9a39178 <line:373:55> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x167e9a39158 <col:55> 'int' lvalue ParmVar 0x167e9a38320 'inl' 'int'
|   |   |-IfStmt 0x167e9a3b228 <line:375:9, line:422:9> has_else
|   |   | |-OpaqueValueExpr 0x167e9a3b210 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x167e9a3aac8 <line:375:56, line:414:9>
|   |   | | `-IfStmt 0x167e9a3aaa0 <line:376:13, line:413:13> has_else
|   |   | |   |-BinaryOperator 0x167e9a392a8 <line:376:17, col:32> 'int' '>'
|   |   | |   | |-ImplicitCastExpr 0x167e9a39290 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   | | `-MemberExpr 0x167e9a39238 <col:17, col:22> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |   | |   `-ImplicitCastExpr 0x167e9a39220 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x167e9a39200 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-IntegerLiteral 0x167e9a39268 <col:32> 'int' 0
|   |   | |   |-CompoundStmt 0x167e9a3a110 <col:35, line:399:13>
|   |   | |   | |-CallExpr 0x167e9a393c8 <line:377:17, col:49> 'int'
|   |   | |   | | |-ImplicitCastExpr 0x167e9a393b0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x167e9a392c8 <col:17> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   | |   | | `-BinaryOperator 0x167e9a39390 <col:32, col:48> 'int' '<='
|   |   | |   | |   |-ImplicitCastExpr 0x167e9a39378 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |   | |   | `-MemberExpr 0x167e9a39320 <col:32, col:37> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |   | |   |   `-ImplicitCastExpr 0x167e9a39308 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |   |     `-DeclRefExpr 0x167e9a392e8 <col:32> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |   `-IntegerLiteral 0x167e9a39350 <col:48> 'int' 3
|   |   | |   | |-BinaryOperator 0x167e9a394d8 <line:378:17, col:30> 'int' '='
|   |   | |   | | |-DeclRefExpr 0x167e9a393f0 <col:17> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |   | | `-BinaryOperator 0x167e9a394b8 <col:21, col:30> 'int' '-'
|   |   | |   | |   |-IntegerLiteral 0x167e9a39410 <col:21> 'int' 3
|   |   | |   | |   `-ImplicitCastExpr 0x167e9a394a0 <col:25, col:30> 'int' <LValueToRValue>
|   |   | |   | |     `-MemberExpr 0x167e9a39470 <col:25, col:30> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |   | |       `-ImplicitCastExpr 0x167e9a39458 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |         `-DeclRefExpr 0x167e9a39438 <col:25> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |-IfStmt 0x167e9a39628 <line:382:17, line:383:25>
|   |   | |   | | |-BinaryOperator 0x167e9a39568 <line:382:21, col:25> 'int' '>'
|   |   | |   | | | |-ImplicitCastExpr 0x167e9a39538 <col:21> 'int' <LValueToRValue>
|   |   | |   | | | | `-DeclRefExpr 0x167e9a394f8 <col:21> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |   | | | `-ImplicitCastExpr 0x167e9a39550 <col:25> 'int' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x167e9a39518 <col:25> 'int' lvalue ParmVar 0x167e9a38320 'inl' 'int'
|   |   | |   | | `-BinaryOperator 0x167e9a39608 <line:383:21, col:25> 'int' '='
|   |   | |   | |   |-DeclRefExpr 0x167e9a395b0 <col:21> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |   | |   `-ImplicitCastExpr 0x167e9a395f0 <col:25> 'int' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x167e9a395d0 <col:25> 'int' lvalue ParmVar 0x167e9a38320 'inl' 'int'
|   |   | |   | |-CallExpr 0x167e9a39840 <line:384:17, col:56> 'void *'
|   |   | |   | | |-ImplicitCastExpr 0x167e9a39828 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x167e9a39640 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x167e9a30270 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |   | | |-ImplicitCastExpr 0x167e9a39878 <col:24, col:48> 'void *' <BitCast>
|   |   | |   | | | `-UnaryOperator 0x167e9a397a0 <col:24, col:48> 'char *' prefix '&' cannot overflow
|   |   | |   | | |   `-ParenExpr 0x167e9a39780 <col:25, col:48> 'char' lvalue
|   |   | |   | | |     `-ArraySubscriptExpr 0x167e9a39760 <col:26, col:47> 'char' lvalue
|   |   | |   | | |       |-ImplicitCastExpr 0x167e9a39730 <col:26, col:31> 'char *' <ArrayToPointerDecay>
|   |   | |   | | |       | `-MemberExpr 0x167e9a39698 <col:26, col:31> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   | |   | | |       |   `-ImplicitCastExpr 0x167e9a39680 <col:26> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |       |     `-DeclRefExpr 0x167e9a39660 <col:26> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | |       `-ImplicitCastExpr 0x167e9a39748 <col:35, col:40> 'int' <LValueToRValue>
|   |   | |   | | |         `-MemberExpr 0x167e9a39700 <col:35, col:40> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |   | | |           `-ImplicitCastExpr 0x167e9a396e8 <col:35> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |             `-DeclRefExpr 0x167e9a396c8 <col:35> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | |-ImplicitCastExpr 0x167e9a398a8 <col:51> 'const void *' <BitCast>
|   |   | |   | | | `-ImplicitCastExpr 0x167e9a39890 <col:51> 'const char *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x167e9a397b8 <col:51> 'const char *' lvalue ParmVar 0x167e9a382a0 'in' 'const char *'
|   |   | |   | | `-ImplicitCastExpr 0x167e9a398d8 <col:55> 'unsigned long long' <IntegralCast>
|   |   | |   | |   `-ImplicitCastExpr 0x167e9a398c0 <col:55> 'int' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x167e9a397d8 <col:55> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |   | |-CompoundAssignOperator 0x167e9a39990 <line:385:17, col:33> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   | | |-MemberExpr 0x167e9a39928 <col:17, col:22> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |   | | | `-ImplicitCastExpr 0x167e9a39910 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x167e9a398f0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | `-ImplicitCastExpr 0x167e9a39978 <col:33> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x167e9a39958 <col:33> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |   | |-CompoundAssignOperator 0x167e9a39a30 <line:386:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   | | |-DeclRefExpr 0x167e9a399c0 <col:17> 'int' lvalue Var 0x167e9a384b0 'ret' 'int'
|   |   | |   | | `-ImplicitCastExpr 0x167e9a39a18 <col:24> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x167e9a399f8 <col:24> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |   | |-IfStmt 0x167e9a39b30 <line:387:17, line:388:21>
|   |   | |   | | |-BinaryOperator 0x167e9a39b08 <line:387:21, col:36> 'int' '<'
|   |   | |   | | | |-ImplicitCastExpr 0x167e9a39af0 <col:21, col:26> 'int' <LValueToRValue>
|   |   | |   | | | | `-MemberExpr 0x167e9a39a98 <col:21, col:26> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |   | | | |   `-ImplicitCastExpr 0x167e9a39a80 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | | |     `-DeclRefExpr 0x167e9a39a60 <col:21> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | | `-IntegerLiteral 0x167e9a39ac8 <col:36> 'int' 3
|   |   | |   | | `-BreakStmt 0x167e9a39b28 <line:388:21>
|   |   | |   | |-CallExpr 0x167e9a3a038 <line:393:17, col:60> 'int'
|   |   | |   | | |-ImplicitCastExpr 0x167e9a3a020 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x167e9a39ee0 <col:17> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   | |   | | `-BinaryOperator 0x167e9a3a000 <col:32, col:53> 'int' '>='
|   |   | |   | |   |-ImplicitCastExpr 0x167e9a39fd0 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |   | |   | `-MemberExpr 0x167e9a39f38 <col:32, col:37> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   | |   | |   |   `-ImplicitCastExpr 0x167e9a39f20 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |   |     `-DeclRefExpr 0x167e9a39f00 <col:32> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |   `-ImplicitCastExpr 0x167e9a39fe8 <col:48, col:53> 'int' <LValueToRValue>
|   |   | |   | |     `-MemberExpr 0x167e9a39fa0 <col:48, col:53> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | |   | |       `-ImplicitCastExpr 0x167e9a39f88 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |         `-DeclRefExpr 0x167e9a39f68 <col:48> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-BinaryOperator 0x167e9a3a0f0 <line:398:17, col:32> 'int' '='
|   |   | |   |   |-MemberExpr 0x167e9a3a098 <col:17, col:22> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |   |   | `-ImplicitCastExpr 0x167e9a3a080 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x167e9a3a060 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |   |   `-IntegerLiteral 0x167e9a3a0c8 <col:32> 'int' 0
|   |   | |   `-CompoundStmt 0x167e9a3aa70 <line:399:20, line:413:13>
|   |   | |     |-IfStmt 0x167e9a3a558 <line:400:17, line:405:17>
|   |   | |     | |-BinaryOperator 0x167e9a3a1c8 <line:400:21, col:25> 'int' '<'
|   |   | |     | | |-ImplicitCastExpr 0x167e9a3a1b0 <col:21> 'int' <LValueToRValue>
|   |   | |     | | | `-DeclRefExpr 0x167e9a3a168 <col:21> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |     | | `-IntegerLiteral 0x167e9a3a188 <col:25> 'int' 3
|   |   | |     | `-CompoundStmt 0x167e9a3a528 <col:28, line:405:17>
|   |   | |     |   |-CallExpr 0x167e9a3a310 <line:401:21, col:43> 'void *'
|   |   | |     |   | |-ImplicitCastExpr 0x167e9a3a2f8 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | |     |   | | `-DeclRefExpr 0x167e9a3a1e8 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x167e9a30270 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |     |   | |-ImplicitCastExpr 0x167e9a3a360 <col:28, col:33> 'void *' <BitCast>
|   |   | |     |   | | `-ImplicitCastExpr 0x167e9a3a348 <col:28, col:33> 'char *' <ArrayToPointerDecay>
|   |   | |     |   | |   `-MemberExpr 0x167e9a3a240 <col:28, col:33> 'char [1024]' lvalue ->tmp 0x167e9a269a8
|   |   | |     |   | |     `-ImplicitCastExpr 0x167e9a3a228 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   | |       `-DeclRefExpr 0x167e9a3a208 <col:28> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   | |-ImplicitCastExpr 0x167e9a3a390 <col:38> 'const void *' <BitCast>
|   |   | |     |   | | `-ImplicitCastExpr 0x167e9a3a378 <col:38> 'const char *' <LValueToRValue>
|   |   | |     |   | |   `-DeclRefExpr 0x167e9a3a270 <col:38> 'const char *' lvalue ParmVar 0x167e9a382a0 'in' 'const char *'
|   |   | |     |   | `-ImplicitCastExpr 0x167e9a3a3c0 <col:42> 'unsigned long long' <IntegralCast>
|   |   | |     |   |   `-ImplicitCastExpr 0x167e9a3a3a8 <col:42> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x167e9a3a290 <col:42> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |     |   |-BinaryOperator 0x167e9a3a478 <line:402:21, col:36> 'int' '='
|   |   | |     |   | |-MemberExpr 0x167e9a3a410 <col:21, col:26> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |     |   | | `-ImplicitCastExpr 0x167e9a3a3f8 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   | |   `-DeclRefExpr 0x167e9a3a3d8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   | `-ImplicitCastExpr 0x167e9a3a460 <col:36> 'int' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x167e9a3a440 <col:36> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |     |   |-CompoundAssignOperator 0x167e9a3a4f0 <line:403:21, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |     |   | |-DeclRefExpr 0x167e9a3a498 <col:21> 'int' lvalue Var 0x167e9a384b0 'ret' 'int'
|   |   | |     |   | `-ImplicitCastExpr 0x167e9a3a4d8 <col:28> 'int' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x167e9a3a4b8 <col:28> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |     |   `-BreakStmt 0x167e9a3a520 <line:404:21>
|   |   | |     |-CompoundAssignOperator 0x167e9a3a620 <line:406:17, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |     | |-DeclRefExpr 0x167e9a3a570 <col:17> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |     | `-BinaryOperator 0x167e9a3a600 <col:22, col:26> 'int' '%'
|   |   | |     |   |-ImplicitCastExpr 0x167e9a3a5e8 <col:22> 'int' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x167e9a3a590 <col:22> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | |     |   `-IntegerLiteral 0x167e9a3a5c0 <col:26> 'int' 3
|   |   | |     |-CallExpr 0x167e9a3a9c0 <line:411:17, col:60> 'int'
|   |   | |     | |-ImplicitCastExpr 0x167e9a3a9a8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | | `-DeclRefExpr 0x167e9a3a868 <col:17> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   | |     | `-BinaryOperator 0x167e9a3a988 <col:32, col:53> 'int' '>='
|   |   | |     |   |-ImplicitCastExpr 0x167e9a3a958 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |     |   | `-MemberExpr 0x167e9a3a8c0 <col:32, col:37> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   | |     |   |   `-ImplicitCastExpr 0x167e9a3a8a8 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x167e9a3a888 <col:32> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   `-ImplicitCastExpr 0x167e9a3a970 <col:48, col:53> 'int' <LValueToRValue>
|   |   | |     |     `-MemberExpr 0x167e9a3a928 <col:48, col:53> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | |     |       `-ImplicitCastExpr 0x167e9a3a910 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |         `-DeclRefExpr 0x167e9a3a8f0 <col:48> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | |     `-CompoundAssignOperator 0x167e9a3aa40 <line:412:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |       |-DeclRefExpr 0x167e9a3a9e8 <col:17> 'int' lvalue Var 0x167e9a384b0 'ret' 'int'
|   |   | |       `-ImplicitCastExpr 0x167e9a3aa28 <col:24> 'int' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x167e9a3aa08 <col:24> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | `-CompoundStmt 0x167e9a3b1e8 <line:414:16, line:422:9>
|   |   |   |-IfStmt 0x167e9a3af08 <line:415:13, line:418:46>
|   |   |   | |-OpaqueValueExpr 0x167e9a3aef0 <<invalid sloc>> '_Bool'
|   |   |   | `-ReturnStmt 0x167e9a3aee0 <col:17, col:46>
|   |   |   |   `-ParenExpr 0x167e9a3aec0 <col:24, col:46> 'int'
|   |   |   |     `-ConditionalOperator 0x167e9a3ae90 <col:25, col:43> 'int'
|   |   |   |       |-ParenExpr 0x167e9a3adf8 <col:25, col:34> 'int'
|   |   |   |       | `-BinaryOperator 0x167e9a3add8 <col:26, col:33> 'int' '=='
|   |   |   |       |   |-ImplicitCastExpr 0x167e9a3adc0 <col:26> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x167e9a3ad78 <col:26> 'int' lvalue Var 0x167e9a384b0 'ret' 'int'
|   |   |   |       |   `-IntegerLiteral 0x167e9a3ad98 <col:33> 'int' 0
|   |   |   |       |-UnaryOperator 0x167e9a3ae40 <col:38, col:39> 'int' prefix '-'
|   |   |   |       | `-IntegerLiteral 0x167e9a3ae18 <col:39> 'int' 1
|   |   |   |       `-ImplicitCastExpr 0x167e9a3ae78 <col:43> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x167e9a3ae58 <col:43> 'int' lvalue Var 0x167e9a384b0 'ret' 'int'
|   |   |   |-CallExpr 0x167e9a3b138 <line:420:13, col:56> 'int'
|   |   |   | |-ImplicitCastExpr 0x167e9a3b120 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x167e9a3afe0 <col:13> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   |   | `-BinaryOperator 0x167e9a3b100 <col:28, col:49> 'int' '>='
|   |   |   |   |-ImplicitCastExpr 0x167e9a3b0d0 <col:28, col:33> 'int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x167e9a3b038 <col:28, col:33> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   |   |   `-ImplicitCastExpr 0x167e9a3b020 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x167e9a3b000 <col:28> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   |   |   `-ImplicitCastExpr 0x167e9a3b0e8 <col:44, col:49> 'int' <LValueToRValue>
|   |   |   |     `-MemberExpr 0x167e9a3b0a0 <col:44, col:49> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |   |       `-ImplicitCastExpr 0x167e9a3b088 <col:44> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x167e9a3b068 <col:44> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   |   `-CompoundAssignOperator 0x167e9a3b1b8 <line:421:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x167e9a3b160 <col:13> 'int' lvalue Var 0x167e9a384b0 'ret' 'int'
|   |   |     `-ImplicitCastExpr 0x167e9a3b1a0 <col:20> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x167e9a3b180 <col:20> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   |-CompoundAssignOperator 0x167e9a3b2a8 <line:423:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x167e9a3b250 <col:9> 'int' lvalue ParmVar 0x167e9a38320 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x167e9a3b290 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a3b270 <col:16> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   |-CompoundAssignOperator 0x167e9a3b330 <line:424:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x167e9a3b2d8 <col:9> 'const char *' lvalue ParmVar 0x167e9a382a0 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x167e9a3b318 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x167e9a3b2f8 <col:15> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   |-BinaryOperator 0x167e9a3b3f0 <line:426:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x167e9a3b398 <col:9, col:14> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | | `-ImplicitCastExpr 0x167e9a3b380 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a3b360 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a3b3c8 <col:24> 'int' 0
|   |   |-BinaryOperator 0x167e9a3b4b0 <line:427:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x167e9a3b410 <col:9> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | `-ImplicitCastExpr 0x167e9a3b498 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x167e9a3b468 <col:13, col:18> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |     `-ImplicitCastExpr 0x167e9a3b450 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x167e9a3b430 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   |-WhileStmt 0x167e9a33cf0 <line:428:9, line:439:9>
|   |   | |-BinaryOperator 0x167e9a3b530 <line:428:16, col:20> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x167e9a3b518 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x167e9a3b4d0 <col:16> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   | | `-IntegerLiteral 0x167e9a3b4f0 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x167e9a33cb8 <col:23, line:439:9>
|   |   |   |-IfStmt 0x167e9a33818 <line:430:13, line:433:13>
|   |   |   | |-BinaryOperator 0x167e9a33650 <line:430:17, col:22> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x167e9a33638 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x167e9a335f0 <col:17> 'int' lvalue Var 0x167e9a315c8 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x167e9a33610 <col:22> 'int' 0
|   |   |   | `-CompoundStmt 0x167e9a33800 <col:25, line:433:13>
|   |   |   |   `-ReturnStmt 0x167e9a337f0 <line:432:17, col:45>
|   |   |   |     `-ParenExpr 0x167e9a337d0 <col:24, col:45> 'int'
|   |   |   |       `-ConditionalOperator 0x167e9a337a0 <col:25, col:42> 'int'
|   |   |   |         |-ParenExpr 0x167e9a33710 <col:25, col:34> 'int'
|   |   |   |         | `-BinaryOperator 0x167e9a336f0 <col:26, col:33> 'int' '=='
|   |   |   |         |   |-ImplicitCastExpr 0x167e9a336d8 <col:26> 'int' <LValueToRValue>
|   |   |   |         |   | `-DeclRefExpr 0x167e9a33690 <col:26> 'int' lvalue Var 0x167e9a384b0 'ret' 'int'
|   |   |   |         |   `-IntegerLiteral 0x167e9a336b0 <col:33> 'int' 0
|   |   |   |         |-ImplicitCastExpr 0x167e9a33770 <col:38> 'int' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x167e9a33730 <col:38> 'int' lvalue Var 0x167e9a315c8 'i' 'int'
|   |   |   |         `-ImplicitCastExpr 0x167e9a33788 <col:42> 'int' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x167e9a33750 <col:42> 'int' lvalue Var 0x167e9a384b0 'ret' 'int'
|   |   |   |-CallExpr 0x167e9a338f8 <line:434:13, col:34> 'int'
|   |   |   | |-ImplicitCastExpr 0x167e9a338e0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x167e9a33830 <col:13> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   |   | `-BinaryOperator 0x167e9a338c0 <col:28, col:33> 'int' '<='
|   |   |   |   |-ImplicitCastExpr 0x167e9a33890 <col:28> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x167e9a33850 <col:28> 'int' lvalue Var 0x167e9a315c8 'i' 'int'
|   |   |   |   `-ImplicitCastExpr 0x167e9a338a8 <col:33> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x167e9a33870 <col:33> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   |   |-CompoundAssignOperator 0x167e9a33978 <line:435:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x167e9a33920 <col:13> 'int' lvalue Var 0x167e9a31530 'n' 'int'
|   |   |   | `-ImplicitCastExpr 0x167e9a33960 <col:18> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x167e9a33940 <col:18> 'int' lvalue Var 0x167e9a315c8 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x167e9a33a48 <line:436:13, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-MemberExpr 0x167e9a339e0 <col:13, col:18> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |   | | `-ImplicitCastExpr 0x167e9a339c8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x167e9a339a8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-ImplicitCastExpr 0x167e9a33a30 <col:29> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x167e9a33a10 <col:29> 'int' lvalue Var 0x167e9a315c8 'i' 'int'
|   |   |   `-CallExpr 0x167e9a33c90 <line:438:13, col:56> 'int'
|   |   |     |-ImplicitCastExpr 0x167e9a33c78 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x167e9a33b38 <col:13> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   |     `-BinaryOperator 0x167e9a33c58 <col:28, col:49> 'int' '>='
|   |   |       |-ImplicitCastExpr 0x167e9a33c28 <col:28, col:33> 'int' <LValueToRValue>
|   |   |       | `-MemberExpr 0x167e9a33b90 <col:28, col:33> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |       |   `-ImplicitCastExpr 0x167e9a33b78 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x167e9a33b58 <col:28> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   |       `-ImplicitCastExpr 0x167e9a33c40 <col:44, col:49> 'int' <LValueToRValue>
|   |   |         `-MemberExpr 0x167e9a33bf8 <col:44, col:49> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |           `-ImplicitCastExpr 0x167e9a33be0 <col:44> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x167e9a33bc0 <col:44> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x167e9a33d98 <line:440:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x167e9a33d40 <col:9, col:14> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   | | `-ImplicitCastExpr 0x167e9a33d28 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a33d08 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a33d70 <col:24> 'int' 0
|   |   `-BinaryOperator 0x167e9a33e48 <line:441:9, col:24> 'int' '='
|   |     |-MemberExpr 0x167e9a33df0 <col:9, col:14> 'int' lvalue ->buf_off 0x167e9a26338
|   |     | `-ImplicitCastExpr 0x167e9a33dd8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x167e9a33db8 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a31658 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x167e9a33e20 <col:24> 'int' 0
|   `-ReturnStmt 0x167e9a33f30 <line:443:5, col:16>
|     `-ImplicitCastExpr 0x167e9a33f18 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x167e9a33ef8 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x167e9a33ed8 <col:13> 'int' lvalue Var 0x167e9a384b0 'ret' 'int'
|-FunctionDecl 0x167e9a34208 <line:446:1, line:531:1> line:446:13 invalid b64_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x167e9a33fd8 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x167e9a34058 <col:30, col:34> col:34 used cmd 'int'
| |-ParmVarDecl 0x167e9a340d8 <col:39, col:44> col:44 used num 'long'
| |-ParmVarDecl 0x167e9a34158 <col:49, col:55> col:55 used ptr 'void *'
| `-CompoundStmt 0x167e9a42c40 <line:447:1, line:531:1>
|   |-DeclStmt 0x167e9a34358 <line:448:5, col:21>
|   | `-VarDecl 0x167e9a342f0 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-DeclStmt 0x167e9a34430 <line:449:5, col:17>
|   | `-VarDecl 0x167e9a34388 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x167e9a34418 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x167e9a343f0 <col:16> 'int' 1
|   |-DeclStmt 0x167e9a344c8 <line:450:5, col:10>
|   | `-VarDecl 0x167e9a34460 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x167e9a3b7f8 <line:455:5, line:456:16>
|   | |-OpaqueValueExpr 0x167e9a3b7e0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x167e9a3b7d0 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x167e9a3b7b8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x167e9a3b790 <col:16> 'int' 0
|   |-SwitchStmt 0x167e9a3b860 <line:458:5, line:529:5>
|   | |-ImplicitCastExpr 0x167e9a3b848 <line:458:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x167e9a3b810 <col:13> 'int' lvalue ParmVar 0x167e9a34058 'cmd' 'int'
|   | `-CompoundStmt 0x167e9a42b48 <col:18, line:529:5>
|   |   |-BinaryOperator 0x167e9a3b910 <line:460:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x167e9a3b8b8 <col:9, col:14> 'int' lvalue ->cont 0x167e9a26578
|   |   | | `-ImplicitCastExpr 0x167e9a3b8a0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a3b880 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a3b8e8 <col:21> 'int' 1
|   |   |-BinaryOperator 0x167e9a3b9c0 <line:461:9, col:22> 'int' '='
|   |   | |-MemberExpr 0x167e9a3b968 <col:9, col:14> 'int' lvalue ->start 0x167e9a26508
|   |   | | `-ImplicitCastExpr 0x167e9a3b950 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a3b930 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a3b998 <col:22> 'int' 1
|   |   |-BinaryOperator 0x167e9a3ba70 <line:462:9, line:29:25> 'int' '='
|   |   | |-MemberExpr 0x167e9a3ba18 <line:462:9, col:14> 'int' lvalue ->encode 0x167e9a26498
|   |   | | `-ImplicitCastExpr 0x167e9a3ba00 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x167e9a3b9e0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x167e9a3ba48 <line:29:25> 'int' 0
|   |   |-BreakStmt 0x167e9a3bc68 <line:464:9>
|   |   |-IfStmt 0x167e9a3be60 <line:466:9, line:469:13> has_else
|   |   | |-BinaryOperator 0x167e9a3bd18 <line:466:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x167e9a3bd00 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x167e9a3bca8 <col:13, col:18> 'int' lvalue ->cont 0x167e9a26578
|   |   | | |   `-ImplicitCastExpr 0x167e9a3bc90 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x167e9a3bc70 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-IntegerLiteral 0x167e9a3bcd8 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x167e9a3bd98 <line:467:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x167e9a3bd38 <col:13> 'long' lvalue Var 0x167e9a34388 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x167e9a3bd80 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x167e9a3bd58 <col:19> 'int' 1
|   |   | `-NullStmt 0x167e9a3be58 <line:469:13>
|   |   |-BreakStmt 0x167e9a3be88 <line:470:9>
|   |   |-CallExpr 0x167e9a3bfe8 <line:472:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x167e9a3bfd0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x167e9a3be90 <col:9> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x167e9a3bfb0 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x167e9a3bf80 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x167e9a3bee8 <col:24, col:29> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   |   `-ImplicitCastExpr 0x167e9a3bed0 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x167e9a3beb0 <col:24> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x167e9a3bf98 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x167e9a3bf50 <col:40, col:45> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |       `-ImplicitCastExpr 0x167e9a3bf38 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x167e9a3bf18 <col:40> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x167e9a3c168 <line:473:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x167e9a3c010 <col:9> 'long' lvalue Var 0x167e9a34388 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x167e9a3c150 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x167e9a3c130 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x167e9a3c100 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x167e9a3c068 <col:15, col:20> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |     |   `-ImplicitCastExpr 0x167e9a3c050 <col:15> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x167e9a3c030 <col:15> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |     `-ImplicitCastExpr 0x167e9a3c118 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x167e9a3c0d0 <col:30, col:35> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |         `-ImplicitCastExpr 0x167e9a3c0b8 <col:30> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x167e9a3c098 <col:30> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |-IfStmt 0x167e9a34620 <line:474:9, line:477:14> has_else
|   |   | |-OpaqueValueExpr 0x167e9a34608 <<invalid sloc>> '_Bool'
|   |   | |-BinaryOperator 0x167e9a3c518 <line:476:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x167e9a3c4b8 <col:13> 'long' lvalue Var 0x167e9a34388 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x167e9a3c500 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x167e9a3c4d8 <col:19> 'int' 1
|   |   | `-NullStmt 0x167e9a34600 <line:477:14>
|   |   |-BreakStmt 0x167e9a34648 <line:479:9>
|   |   |-CallExpr 0x167e9a347a8 <line:481:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x167e9a34790 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x167e9a34650 <col:9> 'int ()' Function 0x167e9a2fc00 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x167e9a34770 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x167e9a34740 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x167e9a346a8 <col:24, col:29> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   |   `-ImplicitCastExpr 0x167e9a34690 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x167e9a34670 <col:24> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x167e9a34758 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x167e9a34710 <col:40, col:45> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |       `-ImplicitCastExpr 0x167e9a346f8 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x167e9a346d8 <col:40> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x167e9a34928 <line:482:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x167e9a347d0 <col:9> 'long' lvalue Var 0x167e9a34388 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x167e9a34910 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x167e9a348f0 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x167e9a348c0 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x167e9a34828 <col:15, col:20> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |     |   `-ImplicitCastExpr 0x167e9a34810 <col:15> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x167e9a347f0 <col:15> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |     `-ImplicitCastExpr 0x167e9a348d8 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x167e9a34890 <col:30, col:35> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |         `-ImplicitCastExpr 0x167e9a34878 <col:30> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x167e9a34858 <col:30> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |-BreakStmt 0x167e9a34a80 <line:485:9>
|   |   |-LabelStmt 0x167e9a34e08 <line:488:2, line:493:9> 'again'
|   |   | `-WhileStmt 0x167e9a34da0 <line:489:9, line:493:9>
|   |   |   |-BinaryOperator 0x167e9a34b88 <line:489:16, col:37> 'int' '!='
|   |   |   | |-ImplicitCastExpr 0x167e9a34b58 <col:16, col:21> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x167e9a34ac0 <col:16, col:21> 'int' lvalue ->buf_len 0x167e9a262c8
|   |   |   | |   `-ImplicitCastExpr 0x167e9a34aa8 <col:16> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x167e9a34a88 <col:16> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-ImplicitCastExpr 0x167e9a34b70 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x167e9a34b28 <col:32, col:37> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |   |     `-ImplicitCastExpr 0x167e9a34b10 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x167e9a34af0 <col:32> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-CompoundStmt 0x167e9a34d88 <col:46, line:493:9>
|   |   |     `-IfStmt 0x167e9a34d70 <line:491:13, line:492:24>
|   |   |       |-BinaryOperator 0x167e9a34cf0 <line:491:17, col:21> 'int' '<'
|   |   |       | |-ImplicitCastExpr 0x167e9a34cd8 <col:17> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x167e9a34c90 <col:17> 'int' lvalue Var 0x167e9a34460 'i' 'int'
|   |   |       | `-IntegerLiteral 0x167e9a34cb0 <col:21> 'int' 0
|   |   |       `-ReturnStmt 0x167e9a34d60 <line:492:17, col:24>
|   |   |         `-ImplicitCastExpr 0x167e9a34d48 <col:24> 'long' <IntegralCast>
|   |   |           `-ImplicitCastExpr 0x167e9a34d30 <col:24> 'int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x167e9a34d10 <col:24> 'int' lvalue Var 0x167e9a34460 'i' 'int'
|   |   |-IfStmt 0x167e9a428b8 <line:494:9, line:510:9> has_else
|   |   | |-OpaqueValueExpr 0x167e9a428a0 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x167e9a352a8 <line:494:56, line:503:9>
|   |   | | `-IfStmt 0x167e9a35290 <line:495:13, line:502:13>
|   |   | |   |-BinaryOperator 0x167e9a34ee8 <line:495:17, col:33> 'int' '!='
|   |   | |   | |-ImplicitCastExpr 0x167e9a34ed0 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   | | `-MemberExpr 0x167e9a34e78 <col:17, col:22> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |   | |   `-ImplicitCastExpr 0x167e9a34e60 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x167e9a34e40 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-IntegerLiteral 0x167e9a34ea8 <col:33> 'int' 0
|   |   | |   `-CompoundStmt 0x167e9a35268 <col:36, line:502:13>
|   |   | |     |-BinaryOperator 0x167e9a35180 <line:499:17, col:32> 'int' '='
|   |   | |     | |-MemberExpr 0x167e9a35128 <col:17, col:22> 'int' lvalue ->buf_off 0x167e9a26338
|   |   | |     | | `-ImplicitCastExpr 0x167e9a35110 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     | |   `-DeclRefExpr 0x167e9a350f0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   | |     | `-IntegerLiteral 0x167e9a35158 <col:32> 'int' 0
|   |   | |     |-BinaryOperator 0x167e9a35230 <line:500:17, col:32> 'int' '='
|   |   | |     | |-MemberExpr 0x167e9a351d8 <col:17, col:22> 'int' lvalue ->tmp_len 0x167e9a263a8
|   |   | |     | | `-ImplicitCastExpr 0x167e9a351c0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     | |   `-DeclRefExpr 0x167e9a351a0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   | |     | `-IntegerLiteral 0x167e9a35208 <col:32> 'int' 0
|   |   | |     `-GotoStmt 0x167e9a35250 <line:501:17, col:22> 'again' 0x167e9a34db8
|   |   | `-IfStmt 0x167e9a42888 <line:503:16, line:510:9>
|   |   |   |-OpaqueValueExpr 0x167e9a42870 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x167e9a42850 <line:504:61, line:510:9>
|   |   |     |-BinaryOperator 0x167e9a35498 <line:505:13, col:28> 'int' '='
|   |   |     | |-MemberExpr 0x167e9a35440 <col:13, col:18> 'int' lvalue ->buf_off 0x167e9a26338
|   |   |     | | `-ImplicitCastExpr 0x167e9a35428 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x167e9a35408 <col:13> 'BIO_B64_CTX *' lvalue Var 0x167e9a342f0 'ctx' 'BIO_B64_CTX *'
|   |   |     | `-IntegerLiteral 0x167e9a35470 <col:28> 'int' 0
|   |   |     `-GotoStmt 0x167e9a42838 <line:509:13, col:18> 'again' 0x167e9a34db8
|   |   |-BreakStmt 0x167e9a42980 <line:513:9>
|   |   |-BreakStmt 0x167e9a42a68 <line:519:9>
|   |   |-BreakStmt 0x167e9a42a70 <line:522:9>
|   |   |-DefaultStmt 0x167e9a42b20 <line:526:5, col:12>
|   |   | `-NullStmt 0x167e9a42b18 <col:12>
|   |   `-BreakStmt 0x167e9a42b40 <line:528:9>
|   `-ReturnStmt 0x167e9a42c30 <line:530:5, col:12>
|     `-ImplicitCastExpr 0x167e9a42c18 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x167e9a42bf8 <col:12> 'long' lvalue Var 0x167e9a34388 'ret' 'long'
|-FunctionDecl 0x167e9a42e40 <line:533:1, line:546:1> line:533:13 invalid b64_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x167e9a42c98 <col:31, col:36> col:36 invalid b 'int *'
| |-ParmVarDecl 0x167e9a42d18 <col:39, col:43> col:43 used cmd 'int'
| |-ParmVarDecl 0x167e9a42d98 <col:48, col:61> col:61 invalid fp 'int *'
| `-CompoundStmt 0x167e9a433a0 <line:534:1, line:546:1>
|   |-DeclStmt 0x167e9a42fd0 <line:535:5, col:17>
|   | `-VarDecl 0x167e9a42f28 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x167e9a42fb8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x167e9a42f90 <col:16> 'int' 1
|   |-IfStmt 0x167e9a430f8 <line:538:5, line:539:16>
|   | |-OpaqueValueExpr 0x167e9a430e0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x167e9a430d0 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x167e9a430b8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x167e9a43090 <col:16> 'int' 0
|   |-SwitchStmt 0x167e9a43160 <line:540:5, line:544:5>
|   | |-ImplicitCastExpr 0x167e9a43148 <line:540:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x167e9a43110 <col:13> 'int' lvalue ParmVar 0x167e9a42d18 'cmd' 'int'
|   | `-CompoundStmt 0x167e9a43318 <col:18, line:544:5>
|   |   |-DefaultStmt 0x167e9a432f0 <line:541:5, col:12>
|   |   | `-NullStmt 0x167e9a432e8 <col:12>
|   |   `-BreakStmt 0x167e9a43310 <line:543:9>
|   `-ReturnStmt 0x167e9a43390 <line:545:5, col:16>
|     `-ImplicitCastExpr 0x167e9a43378 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x167e9a43358 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x167e9a43338 <col:13> 'long' lvalue Var 0x167e9a42f28 'ret' 'long'
|-FunctionDecl 0x167e9a43508 <line:548:1, line:551:1> line:548:12 invalid b64_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x167e9a433e8 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x167e9a43468 <col:29, col:41> col:41 used str 'const char *'
| `-CompoundStmt 0x167e9a41830 <line:549:1, line:551:1>
`-FunctionDecl 0x167e9a41630 <line:550:30> col:30 implicit used strlen 'unsigned long long (const char *)' extern
  `-ParmVarDecl 0x167e9a416d0 <<invalid sloc>> <invalid sloc> 'const char *'
