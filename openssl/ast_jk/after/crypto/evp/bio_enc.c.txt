TranslationUnitDecl 0x233d9d24ff8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x233d9d25890 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x233d9d25590 '__int128'
|-TypedefDecl 0x233d9d25900 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x233d9d255b0 'unsigned __int128'
|-TypedefDecl 0x233d9d25c38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x233d9d259f0 'struct __NSConstantString_tag'
|   `-Record 0x233d9d25958 '__NSConstantString_tag'
|-TypedefDecl 0x233d9d25ca8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x233d9d251d0 'unsigned long long'
|-TypedefDecl 0x233d9d25d40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x233d9d25d00 'char *'
|   `-BuiltinType 0x233d9d25090 'char'
|-TypedefDecl 0x233d9d25db0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x233d9d25d00 'char *'
|   `-BuiltinType 0x233d9d25090 'char'
|-TypedefDecl 0x233d9d25e70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x233d9d251d0 'unsigned long long'
|-TypedefDecl 0x233d9d25ee0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x233d9d25d00 'char *'
|   `-BuiltinType 0x233d9d25090 'char'
|-FunctionDecl 0x233db813430 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x233db8134d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x233db813540 <col:21> Implicit
|-FunctionDecl 0x233db813598 prev 0x233db813430 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x233db8132c0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x233db813688 <col:21> Inherited Implicit
|-TypedefDecl 0x233db8136c8 prev 0x233d9d25ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x233d9d251d0 'unsigned long long'
|-TypedefDecl 0x233db813770 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x233db813740 'size_t' sugar
|   |-Typedef 0x233db8136c8 'size_t'
|   `-BuiltinType 0x233d9d251d0 'unsigned long long'
|-TypedefDecl 0x233db8137e0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x233d9d25130 'long long'
|-TypedefDecl 0x233db813850 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x233d9d25130 'long long'
|-TypedefDecl 0x233db8138c0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x233d9d25170 'unsigned short'
|-TypedefDecl 0x233db813930 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x233d9d25170 'unsigned short'
|-TypedefDecl 0x233db8139a0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x233d9d25170 'unsigned short'
|-TypedefDecl 0x233db813a10 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x233d9d250f0 'int'
|-TypedefDecl 0x233db813a80 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x233d9d25110 'long'
|-TypedefDecl 0x233db813af0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x233d9d25130 'long long'
|-TypedefDecl 0x233db813b80 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x233db813b50 '__time64_t' sugar
|   |-Typedef 0x233db813af0 '__time64_t'
|   `-BuiltinType 0x233d9d25130 'long long'
|-FunctionDecl 0x233db813cf8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x233db813f18 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x233db847140 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x233db814058 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x233db8140d0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x233db814148 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x233db8141c8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x233db846ee0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x233db847220 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x233db8472e0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x233db847450 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x233db847400 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x233db8473a0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x233db8472c0 'struct threadlocaleinfostruct'
|       `-Record 0x233db855fd0 'threadlocaleinfostruct'
|-TypedefDecl 0x233db847560 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x233db847510 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x233db8474b0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x233db847380 'struct threadmbcinfostruct'
|       `-Record 0x233db8472e0 'threadmbcinfostruct'
|-RecordDecl 0x233db8475b8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x233db847670 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x233db847730 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x233db8477c0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x233db847850 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x233db847908 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x233db8478b0 'struct localeinfo_struct' sugar
|   `-RecordType 0x233db847710 'struct localeinfo_struct'
|     `-Record 0x233db847670 'localeinfo_struct'
|-TypedefDecl 0x233db8479e0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x233db847990 'struct localeinfo_struct *'
|   `-ElaboratedType 0x233db8478b0 'struct localeinfo_struct' sugar
|     `-RecordType 0x233db847710 'struct localeinfo_struct'
|       `-Record 0x233db847670 'localeinfo_struct'
|-RecordDecl 0x233db847a58 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x233db847b10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x233db847b88 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x233db847c48 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x233db847ce0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x233db847d50 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x233db847e08 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x233db847db0 'struct localerefcount' sugar
|   `-RecordType 0x233db847af0 'struct localerefcount'
|     `-Record 0x233db847a58 'localerefcount'
|-RecordDecl 0x233db855fd0 prev 0x233db847220 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x233db856050 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x233db8560c8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x233db856138 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x233db8561a8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x233db856218 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x233db8563d8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x233db856448 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x233db8564b8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x233db856528 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x233db856598 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x233db856608 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x233db856660 parent 0x233d9d24ff8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x233db8567f0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x233db856860 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x233db8568d0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x233db856940 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x233db8569e0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x233db856a50 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x233db856b60 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x233db856c98 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x233db856d48 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x233db856cf0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x233db8472c0 'struct threadlocaleinfostruct'
|     `-Record 0x233db855fd0 'threadlocaleinfostruct'
|-RecordDecl 0x233db856de0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x233db856ea0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x233db856f18 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x233db856fe0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x233db857050 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x233db8570c0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x233db857130 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x233db8571a0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x233db857210 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x233db857280 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x233db857330 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x233db8572e0 'struct _iobuf' sugar
|   `-RecordType 0x233db856e80 'struct _iobuf'
|     `-Record 0x233db856de0 '_iobuf'
|-FunctionDecl 0x233db857568 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x233db857638 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x233d9d25130 'long long'
|-FunctionDecl 0x233db857818 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db8576a0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x233db857b10 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x233db8578f0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x233db857968 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x233db857ec0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x233db857bf0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x233db857c70 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x233db857cf0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x233db859170 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x233db859000 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x233db8593a0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x233db859260 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x233db859550 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db859470 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x233db859740 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x233db859a38 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x233db859810 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x233db859890 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x233db859bf0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db859b10 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x233db859da0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db859cc0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x233db859f50 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db859e70 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x233db861188 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db8610a8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x233db861318 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x233db861680 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x233db8613e0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x233db8614d8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x233db861a38 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x233db861760 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x233db8617e0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x233db861858 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x233db861bf8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db861b18 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x233db861ec0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x233db861cd0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x233db861d50 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x233db85a010 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x233db85a408 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x233db85a4a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x233db85a510 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x233db85a588 prev 0x233db85a408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x233db85a1e0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x233db85a260 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x233db85a638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db85aab0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x233db85a7e0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x233db85a860 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x233db85a8e0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x233db85add0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x233db85ae70 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x233db85aed8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x233db85af50 <col:40> Implicit printf 2 3
|-FunctionDecl 0x233db85e050 prev 0x233db85add0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x233db85ab90 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x233db85ac10 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x233db85e148 <col:40> Inherited printf 2 3
|-FunctionDecl 0x233db85e310 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x233db85e190 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x233db85e210 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x233db85e568 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x233db85e3f0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x233db85e468 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x233db85e798 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x233db85e648 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x233db85ea90 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x233db85e870 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x233db85e8e8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x233db85ef28 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x233db85efc8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x233db862090 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x233db8620f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x233db862160 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x233db8621e8 prev 0x233db85ef28 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x233db85eb70 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x233db85ebe8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db85ec60 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db85ecd8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x233db8626f0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x233db8622d8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x233db862350 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8623c8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db862440 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8624b8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x233db862bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x233db8628e0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x233db862960 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x233db8629d8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x233db862c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db85f108 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x233db862db0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x233db862e30 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x233db862eb0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x233db862f28 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x233db85f4b0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x233db85f550 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x233db85f5b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x233db85f630 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x233db85f698 prev 0x233db85f4b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x233db85f2e8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x233db85f368 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x233db85f878 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x233db85f748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db85fcb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db85f9b8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x233db85fa38 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x233db85fad0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db85fd70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db85d040 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x233db85feb0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x233db85ff30 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x233db85d330 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db85d118 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x233db85d198 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x233db85d210 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db85d690 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x233db85d410 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x233db85d4e8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x233db85da48 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x233db85d768 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x233db85d7e8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x233db85d868 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x233db85dca8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x233db85db28 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x233db8600b8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x233db85dd78 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x233db85ddf8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x233db85de78 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x233db860318 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x233db860198 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x233db8607d8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x233db860878 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x233db8608e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x233db860948 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x233db8609b0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x233db860a38 prev 0x233db8607d8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x233db860420 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x233db860498 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db860510 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db860588 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x233db860c00 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db860b20 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x233db860d90 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x233db860f18 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x233db864270 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x233db860fe8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x233db8640c0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x233db864598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x233db864450 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x233db864640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db864860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db864780 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x233db864a80 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x233db864938 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x233db864c30 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db864b50 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x233db864e80 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x233db864d08 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x233db864d88 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x233db8650c0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x233db865160 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x233db8651d0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x233db865238 prev 0x233db8650c0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x233db864f60 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x233db865328 <col:40> Inherited printf 1 2
|-FunctionDecl 0x233db865458 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x233db865378 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x233db8656a8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x233db865530 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x233db8655a8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x233db865868 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x233db865788 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x233db865a88 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x233db865940 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x233db865cd8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x233db865b60 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x233db865bd8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x233db865e98 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x233db865db8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x233db8b5090 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x233db865f70 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x233db865ff0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x233db8b5250 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x233db8b5170 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x233db8b54e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x233db8b5400 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x233db8b5588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x233db8b5780 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x233db8b56a8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x233db8b5910 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x233db8b5bb8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x233db8b5c58 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x233db8b5cc8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x233db8b5d30 prev 0x233db8b5bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x233db8b5aa0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x233db8b5f08 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x233db8b5dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8b62e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8b60a8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x233db8b6120 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db8b6390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8b65b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x233db8b64d8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x233db8b6808 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8b6690 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x233db8b6708 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8b6bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x233db8b69a0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x233db8b6a20 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x233db8b6c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8b6ea0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x233db8b6dc0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x233db8b8138 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x233db8b7ff0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x233db8b8320 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x233db8b8770 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x233db8b83e8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x233db8b8468 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x233db8b84e8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x233db8b8560 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x233db8b8bf0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x233db8b8860 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8b88d8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8b8950 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8b89d0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x233db8b6fe0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x233db8b8ce0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8b8d58 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8b8dd8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x233db8b71a8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x233db8b70c8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x233db8b7580 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x233db8b7620 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x233db8b7688 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x233db8b7700 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x233db8b7768 prev 0x233db8b7580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x233db8b7340 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x233db8b73c0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x233db8b7948 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x233db8b7818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8b7d38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8b7a58 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x233db8b7ad8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x233db8b7b50 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db8b7df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8b1080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x233db8b7f38 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x233db8b0f80 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x233db8b1378 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8b1160 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x233db8b11e0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x233db8b1258 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8b1808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x233db8b1520 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x233db8b1598 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8b1618 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x233db8b18c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8b1e90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8b1b00 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x233db8b1b78 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8b1bf8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x233db8b1c70 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db8b9000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8b9360 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x233db8b9148 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x233db8b91c0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8b9240 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x233db8b96f8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8b9448 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x233db8b94c0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8b9540 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x233db8b95b8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8b9958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x233db8b99f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8b9cb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x233db8b9b40 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x233db8b1f90 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x233db8b9d88 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x233db8b9e00 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x233db8b2210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x233db8b2130 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x233db8b22b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8b2578 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x233db8b2400 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x233db8b2478 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x233db8b2990 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x233db8b2a30 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x233db8b2a98 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x233db8b2b00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x233db8b2b80 <col:40> Implicit printf 2 0
|-FunctionDecl 0x233db8b2be8 prev 0x233db8b2990 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x233db8b2650 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x233db8b26d0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x233db8b2748 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x233db8b2ce8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x233db8b3fb0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x233db8b4050 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x233db8b40b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x233db8b4120 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x233db8b41a0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x233db8b4208 prev 0x233db8b3fb0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x233db8b2d30 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x233db8b2db0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x233db8b2e28 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x233db8b4308 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x233db8b4568 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x233db8b4350 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x233db8b43d0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x233db8b4448 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8b4860 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x233db8b4648 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x233db8b46c8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x233db8b4740 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8b4ba8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x233db8b4c48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x233db8b4cb0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x233db8b4d28 <col:40> Implicit printf 1 0
|-FunctionDecl 0x233db8b4d90 prev 0x233db8b4ba8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x233db8b4948 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x233db8b49c0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x233db8b4e88 <col:40> Inherited printf 1 0
|-FunctionDecl 0x233db8ba148 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x233db8ba1e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x233db8ba250 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x233db8ba2c8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x233db8ba330 prev 0x233db8ba148 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x233db8b4ed8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x233db8ba010 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x233db8ba428 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x233db8ba5f0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x233db8ba478 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x233db8ba4f0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8ba848 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x233db8ba6d0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x233db8ba748 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8bada8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x233db8bae48 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x233db8baeb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x233db8baf18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x233db8baf80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x233db8b2fa0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x233db8b3008 prev 0x233db8bada8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x233db8ba9e8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8baa60 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8baae0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x233db8bab58 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x233db8b31f8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x233db8b30c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8b3668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x233db8b3248 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8b32c0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8b3338 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8b33b8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x233db8b3430 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8b3aa8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x233db8b3760 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8b37d8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8b3850 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8b38d0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x233db8b3948 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8b3e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x233db8b3c60 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x233db8b3cd8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8b3d58 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x233db8b3f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8c2500 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x233db8c2250 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x233db8c22c8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c2348 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x233db8c23c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x233db8c25c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8c29b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x233db8c2708 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c2780 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c2800 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x233db8c2878 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c2d78 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x233db8c2aa8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x233db8c2b28 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x233db8c2ba0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8bb0c0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x233db8bb160 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x233db8bb1c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x233db8bb240 <col:85> Implicit printf 2 3
|-FunctionDecl 0x233db8bb2a8 prev 0x233db8bb0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x233db8c2f20 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x233db8c2fa0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x233db8bb488 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x233db8bb358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8bb8b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x233db8bb950 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x233db8bb9b8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x233db8bba20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x233db8bbaa0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x233db8bbb08 prev 0x233db8bb8b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x233db8bb598 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x233db8bb618 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x233db8bb690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x233db8bbcf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x233db8bbbc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8c30a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x233db8c3140 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x233db8c31a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x233db8c3210 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x233db8c3290 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x233db8c32f8 prev 0x233db8c30a0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x233db8bbd40 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x233db8bbdc0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x233db8bbe38 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x233db8c33f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x233db8c35c0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x233db8c3448 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x233db8c34c0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c38b8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x233db8c36a0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c3718 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8c3798 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x233db8c3c50 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x233db8c39a0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c3a18 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c3a98 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x233db8c3b10 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c3eb8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x233db8c3d38 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x233db8c3db8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x233db8c1080 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x233db8c3f98 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x233db8c1370 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x233db8c1158 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x233db8c11d0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8c1250 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x233db8c1668 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x233db8c1450 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x233db8c14d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x233db8c1548 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c18c8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x233db8c1750 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x233db8c17c8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c1c58 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x233db8c19a8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x233db8c1a20 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c1aa0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x233db8c1b18 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c1e28 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x233db8c1d48 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x233db8bf060 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x233db8c1f00 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x233db8c1f78 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8bf220 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x233db8bf140 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x233db8bf3b0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x233db8bf5f8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8bf480 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x233db8bf4f8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8bf850 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8bf6d8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x233db8bf750 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8bfaa8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8bf930 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x233db8bf9a8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8bfe58 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8bfb88 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x233db8bfc00 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8bfc78 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8bc150 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8bff40 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x233db8bffb8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8bc030 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8bc448 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8bc238 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x233db8bc2b0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8bc328 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8bc740 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8bc528 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x233db8bc5a8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x233db8bc620 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8bca38 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8bc820 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x233db8bc8a0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x233db8bc918 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8bcd30 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8bcb18 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x233db8bcb98 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x233db8bcc10 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8c4210 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8bce10 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x233db8bce90 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x233db8bcf08 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8bcf80 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c45a8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8c42f8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x233db8c4378 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x233db8c43f0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8c4468 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c4940 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8c4690 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x233db8c4710 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x233db8c4788 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8c4800 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c4dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8c4af0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c4b70 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x233db8c4be8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db8c4e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8bd350 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8c4fd8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8bd040 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8bd0c0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x233db8bd138 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8bd6f0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8bd440 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8bd4b8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8bd538 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x233db8bd5b0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8bdc40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8bd8e0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8bd960 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x233db8bd9d8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x233db8bda50 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x233db8bdd00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8c52f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8bde48 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8bdec0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8bdf40 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x233db8bdfb8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8c50c0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c5738 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8c53f0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c5468 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c54e8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x233db8c5560 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8c55d8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c59a8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8c5830 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x233db8c58a8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8c5c00 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8c5a88 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x233db8c5b00 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8c5ef0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8c5ce0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x233db8c5d58 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8c5dd0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c6200 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8c5fd8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x233db8c6050 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8c60e0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c6658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8c63a8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c6420 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c64a0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x233db8c6518 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db8c6718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8c6b10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8c6860 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c68d8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c6958 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x233db8c69d0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8c70e0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8c6c00 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c6c78 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c6cf0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c6d70 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x233db8c6de8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8c7620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8c72d8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c7350 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c73d0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x233db8c7448 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x233db8c74c0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x233db8c76e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8c7b68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8c7838 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c78b0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c7930 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x233db8c79a8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8c7a20 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c00d0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8c7c60 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x233db8c7cd8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c7d50 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c7dd0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x233db8c7e48 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8c7ec0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c0490 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x233db8c01c8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x233db8c0240 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x233db8c02c0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x233db8c0700 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x233db8c0590 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x233db8c0918 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x233db8c0bf8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x233db8c09e0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x233db8c0a58 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x233db8c0e40 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x233db8c0cd0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x233db8cb120 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x233db8c0f10 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x233db8cb2a8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x233db8cb4e0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x233db8cb370 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x233db8cb3e8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x233db8cb690 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x233db8cb5b8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x233db8cb938 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x233db8cb760 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x233db8cb7d8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x233db8cbce0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x233db8cba10 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233db8cba90 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x233db8cbb08 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x233db8cbfe0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x233db8cbdc0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x233db8cbe38 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x233db8ca2c8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x233db8cc0b8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x233db8ca120 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x233db8ca5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x233db8ca460 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x233db8ca678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8ca938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x233db8ca7b8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x233db8cac40 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8caa08 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x233db8caa80 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8cae90 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8cad18 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x233db8cad90 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8cc130 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x233db8caf68 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8cc2e0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x233db8cc200 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8cc490 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x233db8cc3b0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8cc828 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8cc560 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x233db8cc5d8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8cc650 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8ccb18 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8cc908 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x233db8cc980 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8cc9f8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cce08 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8ccbf8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x233db8ccc70 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8ccce8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cd140 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8ccee8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x233db8ccf60 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8ccfd8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cd440 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8cd220 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8cd298 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cd690 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8cd518 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8cd590 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cd8e0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8cd768 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8cd7e0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cdb30 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8cd9b8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8cda30 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cdee8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8cdc08 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233db8cdc80 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8cdcf8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8ce360 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8cdfc8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x233db8ce040 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8ce0b8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8ce150 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8ce718 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8ce448 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x233db8ce4c0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8ce538 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cea08 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8ce7f8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x233db8ce870 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8ce8e8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cecf8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8ceae8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8ceb60 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8cebd8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8cf080 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8cedd8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8cee50 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8ceec8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8cef40 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cf510 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8cf188 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8cf200 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8cf278 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8cf2f0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8cfa18 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8cf5f8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8cf670 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8cf6e8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8cf760 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8cf7d8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8cfdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8cfbc8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x233db8cfc40 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8cfcb8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x233db8cfe90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8c8320 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8d0090 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x233db8c80f0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8c8168 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8c81e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x233db8c83e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8c8698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8c8520 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x233db8c8598 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8c8850 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x233db8c8770 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8c8b30 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8c8920 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x233db8c8998 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8c8a10 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8c8d88 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8c8c10 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8c8c88 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d3fd0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8c8e60 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8c8ed8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8c8f50 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8d4358 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8d40b0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8d4128 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d41a0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d4218 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d4520 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x233db8d4440 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8d4768 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8d45f0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d4668 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d4a70 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d4840 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d48b8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d4cc0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d4b48 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d4bc0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d4f10 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d4d98 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d4e10 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d22a8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d1fd8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d2050 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8d20c8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d2598 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d2388 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d2400 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8d2478 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d2888 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d2678 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d26f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8d2768 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d2c48 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d2968 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x233db8d29e0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d2a58 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d2fc0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d2d28 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x233db8d2da0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d2e18 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d32b0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d30a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x233db8d3118 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d3190 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d3700 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d3390 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x233db8d3408 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d3480 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8d34f8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d3a90 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d37e8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x233db8d3860 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d38d8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8d3950 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d3e20 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d3b78 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x233db8d3bf0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d3c68 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8d3ce0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d8320 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d3f08 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8d8010 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d8088 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d8100 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d86b0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d8408 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8d8480 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d84f8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d8570 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d8a40 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d8798 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8d8810 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d8888 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d8900 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d8f48 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d8b28 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8d8ba0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d8c18 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d8c90 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8d8d08 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d5348 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d5008 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8d5080 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d50f8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d5170 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8d51e8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d5778 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d5438 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8d54b0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d5528 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d55a0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8d5618 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d59e0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d5868 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d58e0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d5c30 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d5ab8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d5b30 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d5f18 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d5d08 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d5d80 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8d5df8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8d93b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d9110 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8d9188 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d9200 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d9278 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db8d9478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8d99e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8d95c0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8d9638 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d96b0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d9728 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8d97a0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8d9f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8d9be0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8d9c58 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8d9cd0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8d9d48 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x233db8d9dc0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x233db8da030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8da640 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8da178 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x233db8da1f0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8da268 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8da2e0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8da358 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8da3d0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8dab40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8da908 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x233db8da980 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x233db8dabf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x233db8dad08 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x233db8db2a8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8dafc0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x233db8db050 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8db0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x233db8db360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x233db8db478 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x233db8dba18 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8db738 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x233db8db7b0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8db828 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x233db8dbad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x233db8dbbf0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x233db8dc260 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8dbeb0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x233db8dbf28 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8dbfa0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x233db8dc050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x233db8dc320 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x233db8dc440 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x233db8dc748 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x233db8dc568 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x233db8dc5e0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8dc658 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x233db8e4370 <line:37:1, line:44:1>
|   |-DeclStmt 0x233db8dc890 <line:38:5, col:21>
|   | `-VarDecl 0x233db8dc828 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x233db8dc928 <line:39:5, col:13>
|   | `-VarDecl 0x233db8dc8c0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x233db8dcc80 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x233db8dcc68 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x233db8dcb80 <col:34> '<builtin fn type>' Function 0x233db8dca18 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x233db8dcbb8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x233db8dc828 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x233db8dcbf0 <col:29> 'const wchar_t *' lvalue ParmVar 0x233db8dc658 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x233db8dcf40 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x233db8dccb0 <col:5> 'int' lvalue Var 0x233db8dc8c0 '_Ret' 'int'
|   | `-CallExpr 0x233db8dce80 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x233db8dce68 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x233db8dcce8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x233db8d8f48 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x233db8dcec8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x233db8dcd08 <col:27> 'wchar_t *' lvalue ParmVar 0x233db8dc568 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x233db8dcee0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x233db8dcd28 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x233db8dc5e0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x233db8dcef8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x233db8dcd48 <col:44> 'const wchar_t *' lvalue ParmVar 0x233db8dc658 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x233db8dcf10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x233db8dcdd0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x233db8dcda8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x233db8dcd68 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x233db8dcf28 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x233db8dcdf0 <col:59> 'va_list':'char *' lvalue Var 0x233db8dc828 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x233db8e4300 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x233db8e42e8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x233db8e4238 <col:34> '<builtin fn type>' Function 0x233db8e40d0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x233db8e4270 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x233db8dc828 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x233db8e4360 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x233db8e4348 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x233db8e4328 <col:12> 'int' lvalue Var 0x233db8dc8c0 '_Ret' 'int'
|-FunctionDecl 0x233db8dca18 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x233db8dcab8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x233db8dcb28 <col:34> Implicit
|-FunctionDecl 0x233db8e40d0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x233db8e4170 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x233db8e41e0 <col:34> Implicit
|-FunctionDecl 0x233db8e4668 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x233db8e43c0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x233db8e4438 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8e44b0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8e4528 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x233db8e4950 <line:50:1, line:52:1>
|   `-ReturnStmt 0x233db8e4940 <line:51:5, col:62>
|     `-CallExpr 0x233db8e4880 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x233db8e4868 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x233db8e4740 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x233db8d8f48 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x233db8e48c8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x233db8e4760 <col:27> 'wchar_t *' lvalue ParmVar 0x233db8e43c0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x233db8e48e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x233db8e4780 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x233db8e4438 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x233db8e48f8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x233db8e47a0 <col:44> 'const wchar_t *' lvalue ParmVar 0x233db8e44b0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x233db8e4910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x233db8e4828 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x233db8e4800 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x233db8e47c0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x233db8e4928 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x233db8e4848 <col:59> 'va_list':'char *' lvalue ParmVar 0x233db8e4528 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x233db8e4bf0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x233db8e4978 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x233db8e49f0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8e4a68 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8e4ae0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x233db8dd108 <line:61:1, line:68:1>
|   |-DeclStmt 0x233db8e4d40 <line:62:5, col:21>
|   | `-VarDecl 0x233db8e4cd8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x233db8e4dd8 <line:63:5, col:13>
|   | `-VarDecl 0x233db8e4d70 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x233db8e4e80 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x233db8e4e68 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x233db8e4df0 <col:34> '<builtin fn type>' Function 0x233db8dca18 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x233db8e4e10 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x233db8e4cd8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x233db8e4e48 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x233db8e4ae0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x233db8e5080 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x233db8e4eb0 <col:5> 'int' lvalue Var 0x233db8e4d70 '_Ret' 'int'
|   | `-CallExpr 0x233db8e4fc0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x233db8e4fa8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x233db8e4ee8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x233db8d8f48 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x233db8e5008 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x233db8e4f08 <col:27> 'wchar_t *' lvalue ParmVar 0x233db8e4978 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x233db8e5020 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x233db8e4f28 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x233db8e49f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x233db8e5038 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x233db8e4f48 <col:44> 'const wchar_t *' lvalue ParmVar 0x233db8e4a68 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x233db8e5050 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x233db8e4f68 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x233db8e4ae0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x233db8e5068 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x233db8e4f88 <col:64> 'va_list':'char *' lvalue Var 0x233db8e4cd8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x233db8dd098 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x233db8dd080 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x233db8e50a0 <col:34> '<builtin fn type>' Function 0x233db8e40d0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x233db8dd060 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x233db8e4cd8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x233db8dd0f8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x233db8dd0e0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x233db8dd0c0 <col:12> 'int' lvalue Var 0x233db8e4d70 '_Ret' 'int'
|-FunctionDecl 0x233db8dd498 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x233db8dd158 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x233db8dd1d0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8dd248 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8dd2c0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x233db8dd338 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x233db8dd720 <line:74:1, line:76:1>
|   `-ReturnStmt 0x233db8dd710 <line:75:5, col:67>
|     `-CallExpr 0x233db8dd650 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x233db8dd638 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x233db8dd578 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x233db8d8f48 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x233db8dd698 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x233db8dd598 <col:27> 'wchar_t *' lvalue ParmVar 0x233db8dd158 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x233db8dd6b0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x233db8dd5b8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x233db8dd1d0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x233db8dd6c8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x233db8dd5d8 <col:44> 'const wchar_t *' lvalue ParmVar 0x233db8dd248 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x233db8dd6e0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x233db8dd5f8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x233db8dd2c0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x233db8dd6f8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x233db8dd618 <col:64> 'va_list':'char *' lvalue ParmVar 0x233db8dd338 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x233db8dd968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233db8dd748 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x233db8dd7c0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x233db8ddbb8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x233db8dda40 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8ddab8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8ddea0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x233db8ddc90 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8ddd08 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x233db8ddd80 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x233db8e2228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8e20b0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x233db8e2128 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x233db8e22d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8e26e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8e24d8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x233db8e2550 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8e25c8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db8e27a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8e2a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8e28e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x233db8e2958 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8e2d40 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8e2b30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x233db8e2ba8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8e2c20 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8e3130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8e2ee0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x233db8e2f58 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x233db8e31e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8e36b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8e33e0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x233db8e3458 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8e34d0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db8e3770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8e3a28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8e38b0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x233db8e3928 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8e3d10 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8e3b00 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x233db8e3b78 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8e3bf0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8e51c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8e3eb0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x233db8e3f28 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8e3fa0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x233db8e5280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8e5800 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8e5480 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x233db8e54f8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8e5570 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8e55e8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db8e58c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8e5c10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8e5a00 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x233db8e5a78 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8e5af0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8e5f98 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8e5cf0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x233db8e5d68 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8e5de0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8e5e58 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8e1250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x233db8e1170 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x233db8e12f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8e1670 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8e14f8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x233db8e1570 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x233db8e1720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8e1940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x233db8e1860 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x233db8e1b88 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x233db8e1a10 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x233db8e1a88 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x233db8e1e88 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x233db8e1c68 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x233db8e1ce0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x233db8de218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233db8e2020 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x233db8de070 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x233db8de2c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8de6d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233db8de410 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x233db8de488 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x233db8de500 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x233db8deb30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x233db8de870 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x233db8de8e8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x233db8de960 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x233db8debe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8e6138 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x233db8ded30 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x233db8deda8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x233db8dee20 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x233db8dee98 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x233db8e6390 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x233db8e6220 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x233db8e65d0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x233db8e6460 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x233db8e64d8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x233db8e6788 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x233db8e66a8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x233db8e6a78 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x233db8e6858 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x233db8e68d0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x233db8e6ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x233db8e6c10 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x233db8e6d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x233db8e6fa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x233db8e6ed0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x233db8df178 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x233db8e7078 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x233db8df080 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x233db8df3c0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x233db8df250 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x233db8df2c8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x233db8df570 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x233db8df498 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x233db8df718 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x233db8df640 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x233db8df8c8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db8df7e8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x233db8dfa78 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x233db8df998 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x233db8dfdf0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x233db8dfb50 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x233db8dfbc8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8dfc40 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8dfcb8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x233db8ec320 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x233db8dfee0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x233db8dff58 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8dffd0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8ec150 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8ec1c8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x233db8ec630 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x233db8ec410 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x233db8ec490 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x233db8ec510 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x233db8ec7f0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x233db8ec710 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x233db8ecae0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x233db8ec8c0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x233db8ec940 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x233db8ec9c0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x233db8ecca0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x233db8ecbc0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x233db8ed018 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x233db8ecd78 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x233db8ecdf0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x233db8ece68 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x233db8ecee0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x233db8e9298 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x233db8e9120 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x233db8e9198 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x233db8e95d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x233db8e9450 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x233db8e94d0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x233db8e9680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x233db8e9938 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x233db8e99d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x233db8e9d18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x233db8e9ba0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x233db8e9c20 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x233db8e9dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x233db8ea130 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x233db8ea1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x233db8ea470 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x233db8ea390 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x233db8ea518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x233db8ea798 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x233db8ea838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x233db8eaae0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x233db8eaa00 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x233db8eab88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x233db8eae68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x233db8ead88 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x233db8eaf10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x233db8e7278 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x233db8e7100 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x233db8e7178 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x233db8e7328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x233db8e75e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x233db8e7688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x233db8e78c0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x233db8e7ad0 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x233db8e7990 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x233db8e7d20 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x233db8e7ba8 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x233db8e7fe0 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:17:1, col:54> col:12 invalid enc_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x233db8e7df8 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x233db8e7e78 <col:30, col:42> col:42 buf 'const char *'
| `-ParmVarDecl 0x233db8e7ef8 <col:47, col:51> col:51 num 'int'
|-FunctionDecl 0x233db8f51e0 <line:18:1, col:48> col:12 invalid enc_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x233db8f4ff0 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x233db8f5070 <col:29, col:35> col:35 buf 'char *'
| `-ParmVarDecl 0x233db8f50f0 <col:40, col:44> col:44 size 'int'
|-FunctionDecl 0x233db8f5530 <line:25:1, col:60> col:13 invalid enc_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x233db8f52b0 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x233db8f5330 <col:30, col:34> col:34 cmd 'int'
| |-ParmVarDecl 0x233db8f53b0 <col:39, col:44> col:44 arg1 'long'
| `-ParmVarDecl 0x233db8f5430 <col:50, col:56> col:56 arg2 'void *'
|-FunctionDecl 0x233db8f56a0 <line:26:1, col:26> col:12 invalid enc_new 'int (int *)' static
| `-ParmVarDecl 0x233db8f5608 <col:20, col:25> col:25 invalid h 'int *'
|-FunctionDecl 0x233db8f57f8 <line:27:1, col:30> col:12 invalid enc_free 'int (int *)' static
| `-ParmVarDecl 0x233db8f5760 <col:21, col:26> col:26 invalid data 'int *'
|-FunctionDecl 0x233db8f5aa0 <line:28:1, col:64> col:13 invalid enc_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x233db8f58b8 <col:31, col:36> col:36 invalid h 'int *'
| |-ParmVarDecl 0x233db8f5938 <col:39, col:43> col:43 cmd 'int'
| `-ParmVarDecl 0x233db8f59b8 <col:48, col:61> col:61 invalid fps 'int *'
|-RecordDecl 0x233db8f5b58 <line:33:9, line:46:1> line:33:16 invalid struct enc_struct definition
| |-FieldDecl 0x233db8f5c28 <line:34:5, col:9> col:9 referenced buf_len 'int'
| |-FieldDecl 0x233db8f5c98 <line:35:5, col:9> col:9 referenced buf_off 'int'
| |-FieldDecl 0x233db8f5d08 <line:36:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x233db8f5d78 <line:37:5, col:9> col:9 referenced finished 'int'
| |-FieldDecl 0x233db8f5de8 <line:38:5, col:9> col:9 referenced ok 'int'
| |-FieldDecl 0x233db8f5e58 <line:39:5, col:21> col:21 invalid cipher 'int *'
| |-FieldDecl 0x233db8f5ef0 <line:40:5, col:20> col:20 referenced read_start 'unsigned char *'
| |-FieldDecl 0x233db8f5f60 <col:5, col:33> col:33 referenced read_end 'unsigned char *'
| `-FieldDecl 0x233db8f80e8 <line:45:5, col:19> col:19 invalid buf 'unsigned char'
|-TypedefDecl 0x233db8f8198 <line:33:1, line:46:3> col:3 referenced BIO_ENC_CTX 'struct enc_struct':'struct enc_struct'
| `-ElaboratedType 0x233db8f8140 'struct enc_struct' sugar
|   `-RecordType 0x233db8f5bf0 'struct enc_struct'
|     `-Record 0x233db8f5b58 'enc_struct'
|-VarDecl 0x233db8f8220 <line:48:1, col:25> col:25 invalid methods_enc 'const int' static
|-FunctionDecl 0x233db8f84c0 <line:61:1, line:64:1> line:61:19 invalid BIO_f_cipher 'const int *(void)'
| `-CompoundStmt 0x233db8f8578 <line:62:1, line:64:1>
|-FunctionDecl 0x233db8f8638 <line:66:1, line:86:1> line:66:12 invalid enc_new 'int (int *)' static
| |-ParmVarDecl 0x233db8f85a0 <col:20, col:25> col:25 invalid bi 'int *'
| `-CompoundStmt 0x233db8f95b0 <line:67:1, line:86:1>
|   |-DeclStmt 0x233db8f87f0 <line:68:5, col:21>
|   | `-VarDecl 0x233db8f8788 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   |-BinaryOperator 0x233db8f8a90 <line:70:5, col:38> 'BIO_ENC_CTX *' '='
|   | |-DeclRefExpr 0x233db8f8808 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x233db8f8788 'ctx' 'BIO_ENC_CTX *'
|   | `-ImplicitCastExpr 0x233db8f8a78 <col:11, col:38> 'BIO_ENC_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x233db8f8a50 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x233db8f8a38 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x233db8f8958 <col:11> 'int ()' Function 0x233db8f8890 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x233db8f89e8 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x233db8f89c8 <col:32, col:37> 'BIO_ENC_CTX':'struct enc_struct' lvalue
|   |         `-UnaryOperator 0x233db8f89b0 <col:33, col:34> 'BIO_ENC_CTX':'struct enc_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x233db8f8998 <col:34> 'BIO_ENC_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x233db8f8978 <col:34> 'BIO_ENC_CTX *' lvalue Var 0x233db8f8788 'ctx' 'BIO_ENC_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x233db8f8be0 <line:71:5, line:72:16>
|   | |-BinaryOperator 0x233db8f8b88 <line:71:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x233db8f8b58 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:71:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233db8f8ab0 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8f8788 'ctx' 'BIO_ENC_CTX *'
|   | | `-ImplicitCastExpr 0x233db8f8b70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
|   | |   `-ParenExpr 0x233db8f8b38 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x233db8f8b10 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x233db8f8ad0 <col:26> 'int' 0
|   | `-ReturnStmt 0x233db8f8bd0 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:72:9, col:16>
|   |   `-IntegerLiteral 0x233db8f8ba8 <col:16> 'int' 0
|   |-IfStmt 0x233db8f9048 <line:75:5, line:78:5>
|   | |-OpaqueValueExpr 0x233db8f9030 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x233db8f8ff8 <line:75:30, line:78:5>
|   |   |-CallExpr 0x233db8f8f80 <line:76:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x233db8f8f68 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x233db8f8f28 <col:9> 'int ()' Function 0x233db8f8e60 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x233db8f8fa8 <col:22> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8f8f48 <col:22> 'BIO_ENC_CTX *' lvalue Var 0x233db8f8788 'ctx' 'BIO_ENC_CTX *'
|   |   `-ReturnStmt 0x233db8f8fe8 <line:77:9, col:16>
|   |     `-IntegerLiteral 0x233db8f8fc0 <col:16> 'int' 0
|   |-BinaryOperator 0x233db8f90f0 <line:79:5, col:17> 'int' '='
|   | |-MemberExpr 0x233db8f9098 <col:5, col:10> 'int' lvalue ->cont 0x233db8f5d08
|   | | `-ImplicitCastExpr 0x233db8f9080 <col:5> 'BIO_ENC_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x233db8f9060 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x233db8f8788 'ctx' 'BIO_ENC_CTX *'
|   | `-IntegerLiteral 0x233db8f90c8 <col:17> 'int' 1
|   |-BinaryOperator 0x233db8f91a0 <line:80:5, col:15> 'int' '='
|   | |-MemberExpr 0x233db8f9148 <col:5, col:10> 'int' lvalue ->ok 0x233db8f5de8
|   | | `-ImplicitCastExpr 0x233db8f9130 <col:5> 'BIO_ENC_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x233db8f9110 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x233db8f8788 'ctx' 'BIO_ENC_CTX *'
|   | `-IntegerLiteral 0x233db8f9178 <col:15> 'int' 1
|   `-ReturnStmt 0x233db8f95a0 <line:85:5, col:12>
|     `-IntegerLiteral 0x233db8f9578 <col:12> 'int' 1
|-FunctionDecl 0x233db8f96a8 <line:88:1, line:105:1> line:88:12 invalid enc_free 'int (int *)' static
| |-ParmVarDecl 0x233db8f9610 <col:21, col:26> col:26 invalid a 'int *'
| `-CompoundStmt 0x233db8f9fa8 <line:89:1, line:105:1>
|   |-DeclStmt 0x233db8f97e0 <line:90:5, col:19>
|   | `-VarDecl 0x233db8f9778 <col:5, col:18> col:18 used b 'BIO_ENC_CTX *'
|   |-IfStmt 0x233db8f98d0 <line:92:5, line:93:16>
|   | |-OpaqueValueExpr 0x233db8f98b8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x233db8f98a8 <col:9, col:16>
|   |   `-IntegerLiteral 0x233db8f9880 <col:16> 'int' 0
|   |-IfStmt 0x233db8f9b60 <line:96:5, line:97:16>
|   | |-BinaryOperator 0x233db8f9b08 <line:96:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x233db8f9ad8 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:96:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233db8f9a30 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8f9778 'b' 'BIO_ENC_CTX *'
|   | | `-ImplicitCastExpr 0x233db8f9af0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
|   | |   `-ParenExpr 0x233db8f9ab8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x233db8f9a90 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x233db8f9a50 <col:26> 'int' 0
|   | `-ReturnStmt 0x233db8f9b50 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:97:9, col:16>
|   |   `-IntegerLiteral 0x233db8f9b28 <col:16> 'int' 0
|   |-CallExpr 0x233db8f9e38 <line:100:5, col:46> 'int'
|   | |-ImplicitCastExpr 0x233db8f9e20 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x233db8f9db0 <col:5> 'int ()' Function 0x233db8f9ce8 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x233db8f9e68 <col:24> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | `-DeclRefExpr 0x233db8f9dd0 <col:24> 'BIO_ENC_CTX *' lvalue Var 0x233db8f9778 'b' 'BIO_ENC_CTX *'
|   | `-UnaryExprOrTypeTraitExpr 0x233db8f9e00 <col:27, col:45> 'unsigned long long' sizeof 'BIO_ENC_CTX':'struct enc_struct'
|   `-ReturnStmt 0x233db8f9f98 <line:104:5, col:12>
|     `-IntegerLiteral 0x233db8f9f70 <col:12> 'int' 1
|-FunctionDecl 0x233db8fa1e8 <line:107:1, line:233:1> line:107:12 invalid enc_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x233db8fa040 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x233db8fa0c0 <col:29, col:35> col:35 used out 'char *'
| |-ParmVarDecl 0x233db8fa140 <col:40, col:44> col:44 used outl 'int'
| `-CompoundStmt 0x233db8fd758 <line:108:1, line:233:1>
|   |-DeclStmt 0x233db8fa480 <line:109:5, col:30>
|   | |-VarDecl 0x233db8fa2d0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x233db8fa338 <col:15> 'int' 0
|   | |-VarDecl 0x233db8fa378 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x233db8fa3f8 <col:5, col:21> col:21 used blocksize 'int'
|   |-DeclStmt 0x233db8fa510 <line:110:5, col:21>
|   | `-VarDecl 0x233db8fa4a8 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   |-IfStmt 0x233db8fa690 <line:113:5, line:114:18>
|   | |-BinaryOperator 0x233db8fa618 <line:113:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x233db8fa5e8 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:113:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233db8fa528 <col:9> 'char *' lvalue ParmVar 0x233db8fa0c0 'out' 'char *'
|   | | `-ImplicitCastExpr 0x233db8fa600 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x233db8fa5c8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x233db8fa5a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x233db8fa560 <col:26> 'int' 0
|   | `-ReturnStmt 0x233db8fa680 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:114:9, col:18>
|   |   `-ParenExpr 0x233db8fa660 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x233db8fa638 <col:17> 'int' 0
|   |-IfStmt 0x233db8faa00 <line:118:5, line:119:16>
|   | |-OpaqueValueExpr 0x233db8fa9e8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x233db8fa9d8 <col:9, col:16>
|   |   `-IntegerLiteral 0x233db8fa9b0 <col:16> 'int' 0
|   |-IfStmt 0x233db8f35e0 <line:122:5, line:135:5>
|   | |-BinaryOperator 0x233db8faac0 <line:122:9, col:24> 'int' '>'
|   | | |-ImplicitCastExpr 0x233db8faaa8 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x233db8faa50 <col:9, col:14> 'int' lvalue ->buf_len 0x233db8f5c28
|   | | |   `-ImplicitCastExpr 0x233db8faa38 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x233db8faa18 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   | | `-IntegerLiteral 0x233db8faa80 <col:24> 'int' 0
|   | `-CompoundStmt 0x233db8f3598 <col:27, line:135:5>
|   |   |-BinaryOperator 0x233db8fac38 <line:123:9, col:33> 'int' '='
|   |   | |-DeclRefExpr 0x233db8faae0 <col:9> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   | `-BinaryOperator 0x233db8fac18 <col:13, col:33> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x233db8fabe8 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x233db8fab50 <col:13, col:18> 'int' lvalue ->buf_len 0x233db8f5c28
|   |   |   |   `-ImplicitCastExpr 0x233db8fab38 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x233db8fab18 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |   `-ImplicitCastExpr 0x233db8fac00 <col:28, col:33> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x233db8fabb8 <col:28, col:33> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   |       `-ImplicitCastExpr 0x233db8faba0 <col:28> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x233db8fab80 <col:28> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |-IfStmt 0x233db8fad78 <line:124:9, line:125:17>
|   |   | |-BinaryOperator 0x233db8face0 <line:124:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x233db8facb0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x233db8fac58 <col:13> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x233db8facc8 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x233db8fac78 <col:17> 'int' lvalue ParmVar 0x233db8fa140 'outl' 'int'
|   |   | `-BinaryOperator 0x233db8fad58 <line:125:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x233db8fad00 <col:13> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x233db8fad40 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x233db8fad20 <col:17> 'int' lvalue ParmVar 0x233db8fa140 'outl' 'int'
|   |   |-BinaryOperator 0x233db8f30e0 <line:127:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x233db8f3070 <col:9> 'int' lvalue Var 0x233db8fa2d0 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x233db8f30c8 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8f30a8 <col:15> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |-CompoundAssignOperator 0x233db8f3158 <line:128:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x233db8f3100 <col:9> 'char *' lvalue ParmVar 0x233db8fa0c0 'out' 'char *'
|   |   | `-ImplicitCastExpr 0x233db8f3140 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8f3120 <col:16> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |-CompoundAssignOperator 0x233db8f31e0 <line:129:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x233db8f3188 <col:9> 'int' lvalue ParmVar 0x233db8fa140 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x233db8f31c8 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8f31a8 <col:17> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |-CompoundAssignOperator 0x233db8f32b0 <line:130:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x233db8f3248 <col:9, col:14> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   | | `-ImplicitCastExpr 0x233db8f3230 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x233db8f3210 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | `-ImplicitCastExpr 0x233db8f3298 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8f3278 <col:25> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   `-IfStmt 0x233db8f3580 <line:131:9, line:134:9>
|   |     |-BinaryOperator 0x233db8f33e0 <line:131:13, col:34> 'int' '=='
|   |     | |-ImplicitCastExpr 0x233db8f33b0 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x233db8f3318 <col:13, col:18> 'int' lvalue ->buf_len 0x233db8f5c28
|   |     | |   `-ImplicitCastExpr 0x233db8f3300 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x233db8f32e0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |     | `-ImplicitCastExpr 0x233db8f33c8 <col:29, col:34> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x233db8f3380 <col:29, col:34> 'int' lvalue ->buf_off 0x233db8f5c98
|   |     |     `-ImplicitCastExpr 0x233db8f3368 <col:29> 'BIO_ENC_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x233db8f3348 <col:29> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |     `-CompoundStmt 0x233db8f3560 <col:43, line:134:9>
|   |       |-BinaryOperator 0x233db8f3490 <line:132:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x233db8f3438 <col:13, col:18> 'int' lvalue ->buf_len 0x233db8f5c28
|   |       | | `-ImplicitCastExpr 0x233db8f3420 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x233db8f3400 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |       | `-IntegerLiteral 0x233db8f3468 <col:28> 'int' 0
|   |       `-BinaryOperator 0x233db8f3540 <line:133:13, col:28> 'int' '='
|   |         |-MemberExpr 0x233db8f34e8 <col:13, col:18> 'int' lvalue ->buf_off 0x233db8f5c98
|   |         | `-ImplicitCastExpr 0x233db8f34d0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x233db8f34b0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |         `-IntegerLiteral 0x233db8f3518 <col:28> 'int' 0
|   |-IfStmt 0x233db8f3860 <line:138:5, line:139:21>
|   | |-BinaryOperator 0x233db8f37d8 <line:138:9, col:22> 'int' '=='
|   | | |-ImplicitCastExpr 0x233db8f37c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233db8f3778 <col:9> 'int' lvalue Var 0x233db8fa3f8 'blocksize' 'int'
|   | | `-IntegerLiteral 0x233db8f3798 <col:22> 'int' 1
|   | `-BinaryOperator 0x233db8f3840 <line:139:9, col:21> 'int' '='
|   |   |-DeclRefExpr 0x233db8f37f8 <col:9> 'int' lvalue Var 0x233db8fa3f8 'blocksize' 'int'
|   |   `-IntegerLiteral 0x233db8f3818 <col:21> 'int' 0
|   |-WhileStmt 0x233db8fd458 <line:146:5, line:228:5>
|   | |-BinaryOperator 0x233db8f38d8 <line:146:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x233db8f38c0 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233db8f3878 <col:12> 'int' lvalue ParmVar 0x233db8fa140 'outl' 'int'
|   | | `-IntegerLiteral 0x233db8f3898 <col:19> 'int' 0
|   | `-CompoundStmt 0x233db8fd400 <col:22, line:228:5>
|   |   |-IfStmt 0x233db8f39c8 <line:147:9, line:148:13>
|   |   | |-BinaryOperator 0x233db8f39a0 <line:147:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x233db8f3988 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x233db8f3930 <col:13, col:18> 'int' lvalue ->cont 0x233db8f5d08
|   |   | | |   `-ImplicitCastExpr 0x233db8f3918 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x233db8f38f8 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-IntegerLiteral 0x233db8f3960 <col:26> 'int' 0
|   |   | `-BreakStmt 0x233db8f39c0 <line:148:13>
|   |   |-IfStmt 0x233db8fb210 <line:150:9, line:157:9> has_else
|   |   | |-BinaryOperator 0x233db8f3ae0 <line:150:13, col:37> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x233db8f3ab0 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x233db8f3a18 <col:13, col:18> 'unsigned char *' lvalue ->read_start 0x233db8f5ef0
|   |   | | |   `-ImplicitCastExpr 0x233db8f3a00 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x233db8f39e0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-ImplicitCastExpr 0x233db8f3ac8 <col:32, col:37> 'unsigned char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x233db8f3a80 <col:32, col:37> 'unsigned char *' lvalue ->read_end 0x233db8f5f60
|   |   | |     `-ImplicitCastExpr 0x233db8f3a68 <col:32> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x233db8f3a48 <col:32> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | |-CompoundStmt 0x233db8fb068 <col:47, line:155:9>
|   |   | | `-IfStmt 0x233db8fb050 <line:153:13, line:154:34>
|   |   | |   |-BinaryOperator 0x233db8f3ed8 <line:153:17, col:21> 'int' '>'
|   |   | |   | |-ImplicitCastExpr 0x233db8f3ec0 <col:17> 'int' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x233db8f3e78 <col:17> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   | |   | `-IntegerLiteral 0x233db8f3e98 <col:21> 'int' 0
|   |   | |   `-CompoundAssignOperator 0x233db8f3f98 <line:154:17, col:34> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |     |-MemberExpr 0x233db8f3f30 <col:17, col:22> 'unsigned char *' lvalue ->read_end 0x233db8f5f60
|   |   | |     | `-ImplicitCastExpr 0x233db8f3f18 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x233db8f3ef8 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | |     `-ImplicitCastExpr 0x233db8f3f80 <col:34> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x233db8f3f60 <col:34> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   | `-CompoundStmt 0x233db8fb1f8 <line:155:16, line:157:9>
|   |   |   `-BinaryOperator 0x233db8fb1d8 <line:156:13, col:38> 'int' '='
|   |   |     |-DeclRefExpr 0x233db8fb080 <col:13> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x233db8fb1c0 <col:17, col:38> 'int' <IntegralCast>
|   |   |       `-BinaryOperator 0x233db8fb1a0 <col:17, col:38> 'long long' '-'
|   |   |         |-ImplicitCastExpr 0x233db8fb170 <col:17, col:22> 'unsigned char *' <LValueToRValue>
|   |   |         | `-MemberExpr 0x233db8fb0d8 <col:17, col:22> 'unsigned char *' lvalue ->read_end 0x233db8f5f60
|   |   |         |   `-ImplicitCastExpr 0x233db8fb0c0 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |         |     `-DeclRefExpr 0x233db8fb0a0 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |         `-ImplicitCastExpr 0x233db8fb188 <col:33, col:38> 'unsigned char *' <LValueToRValue>
|   |   |           `-MemberExpr 0x233db8fb140 <col:33, col:38> 'unsigned char *' lvalue ->read_start 0x233db8f5ef0
|   |   |             `-ImplicitCastExpr 0x233db8fb128 <col:33> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |               `-DeclRefExpr 0x233db8fb108 <col:33> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |-IfStmt 0x233db8ffe28 <line:159:9, line:215:9> has_else
|   |   | |-BinaryOperator 0x233db8fb298 <line:159:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x233db8fb280 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x233db8fb238 <col:13> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   | | `-IntegerLiteral 0x233db8fb258 <col:18> 'int' 0
|   |   | |-CompoundStmt 0x233db8fba48 <col:21, line:171:9>
|   |   | | `-IfStmt 0x233db8fba20 <line:161:13, line:170:13> has_else
|   |   | |   |-OpaqueValueExpr 0x233db8fba08 <<invalid sloc>> '_Bool'
|   |   | |   |-CompoundStmt 0x233db8fb838 <line:161:42, line:167:13>
|   |   | |   | |-BinaryOperator 0x233db8fb468 <line:162:17, col:29> 'int' '='
|   |   | |   | | |-MemberExpr 0x233db8fb400 <col:17, col:22> 'int' lvalue ->cont 0x233db8f5d08
|   |   | |   | | | `-ImplicitCastExpr 0x233db8fb3e8 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x233db8fb3c8 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | |   | | `-ImplicitCastExpr 0x233db8fb450 <col:29> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x233db8fb430 <col:29> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   | |   | |-BinaryOperator 0x233db8fb768 <line:165:17, col:27> 'int' '='
|   |   | |   | | |-MemberExpr 0x233db8fb700 <col:17, col:22> 'int' lvalue ->ok 0x233db8f5de8
|   |   | |   | | | `-ImplicitCastExpr 0x233db8fb6e8 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x233db8fb6c8 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | |   | | `-ImplicitCastExpr 0x233db8fb750 <col:27> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x233db8fb730 <col:27> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   | |   | `-BinaryOperator 0x233db8fb818 <line:166:17, col:32> 'int' '='
|   |   | |   |   |-MemberExpr 0x233db8fb7c0 <col:17, col:22> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   | |   |   | `-ImplicitCastExpr 0x233db8fb7a8 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x233db8fb788 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | |   |   `-IntegerLiteral 0x233db8fb7f0 <col:32> 'int' 0
|   |   | |   `-CompoundStmt 0x233db8fb9e8 <line:167:20, line:170:13>
|   |   | |     |-BinaryOperator 0x233db8fb9c0 <line:168:17, col:40> 'int' '='
|   |   | |     | |-DeclRefExpr 0x233db8fb860 <col:17> 'int' lvalue Var 0x233db8fa2d0 'ret' 'int'
|   |   | |     | `-ConditionalOperator 0x233db8fb990 <col:23, col:40> 'int'
|   |   | |     |   |-ParenExpr 0x233db8fb900 <col:23, col:32> 'int'
|   |   | |     |   | `-BinaryOperator 0x233db8fb8e0 <col:24, col:31> 'int' '=='
|   |   | |     |   |   |-ImplicitCastExpr 0x233db8fb8c8 <col:24> 'int' <LValueToRValue>
|   |   | |     |   |   | `-DeclRefExpr 0x233db8fb880 <col:24> 'int' lvalue Var 0x233db8fa2d0 'ret' 'int'
|   |   | |     |   |   `-IntegerLiteral 0x233db8fb8a0 <col:31> 'int' 0
|   |   | |     |   |-ImplicitCastExpr 0x233db8fb960 <col:36> 'int' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x233db8fb920 <col:36> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   | |     |   `-ImplicitCastExpr 0x233db8fb978 <col:40> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x233db8fb940 <col:40> 'int' lvalue Var 0x233db8fa2d0 'ret' 'int'
|   |   | |     `-BreakStmt 0x233db8fb9e0 <line:169:17>
|   |   | `-CompoundStmt 0x233db8ffde8 <line:171:16, line:215:9>
|   |   |   |-IfStmt 0x233db8ff738 <line:172:13, line:195:13>
|   |   |   | |-BinaryOperator 0x233db8fbae0 <line:172:17, line:30:29> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x233db8fbac8 <line:172:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x233db8fba60 <col:17> 'int' lvalue ParmVar 0x233db8fa140 'outl' 'int'
|   |   |   | | `-ParenExpr 0x233db8fbaa8 <line:30:25, col:29> 'int'
|   |   |   | |   `-IntegerLiteral 0x233db8fba80 <col:26> 'int' 256
|   |   |   | `-CompoundStmt 0x233db8ff6f0 <line:172:39, line:195:13>
|   |   |   |   |-DeclStmt 0x233db8fbca8 <line:178:17, col:50>
|   |   |   |   | |-VarDecl 0x233db8fbb18 <col:17, col:32> col:21 used j 'int' cinit
|   |   |   |   | | `-BinaryOperator 0x233db8fbbf0 <col:25, col:32> 'int' '-'
|   |   |   |   | |   |-ImplicitCastExpr 0x233db8fbbc0 <col:25> 'int' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x233db8fbb80 <col:25> 'int' lvalue ParmVar 0x233db8fa140 'outl' 'int'
|   |   |   |   | |   `-ImplicitCastExpr 0x233db8fbbd8 <col:32> 'int' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x233db8fbba0 <col:32> 'int' lvalue Var 0x233db8fa3f8 'blocksize' 'int'
|   |   |   |   | `-VarDecl 0x233db8fbc28 <col:17, col:43> col:43 used buf_len 'int'
|   |   |   |   |-IfStmt 0x233db8ff238 <line:180:17, line:185:17>
|   |   |   |   | |-OpaqueValueExpr 0x233db8ff220 <<invalid sloc>> '_Bool'
|   |   |   |   | `-CompoundStmt 0x233db8ff208 <line:182:72, line:185:17>
|   |   |   |   |   `-ReturnStmt 0x233db8ff1f8 <line:184:21, col:28>
|   |   |   |   |     `-IntegerLiteral 0x233db8ff1d0 <col:28> 'int' 0
|   |   |   |   |-CompoundAssignOperator 0x233db8ff2a8 <line:186:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   | |-DeclRefExpr 0x233db8ff250 <col:17> 'int' lvalue Var 0x233db8fa2d0 'ret' 'int'
|   |   |   |   | `-ImplicitCastExpr 0x233db8ff290 <col:24> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x233db8ff270 <col:24> 'int' lvalue Var 0x233db8fbc28 'buf_len' 'int'
|   |   |   |   |-CompoundAssignOperator 0x233db8ff330 <line:187:17, col:24> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |   |   | |-DeclRefExpr 0x233db8ff2d8 <col:17> 'char *' lvalue ParmVar 0x233db8fa0c0 'out' 'char *'
|   |   |   |   | `-ImplicitCastExpr 0x233db8ff318 <col:24> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x233db8ff2f8 <col:24> 'int' lvalue Var 0x233db8fbc28 'buf_len' 'int'
|   |   |   |   |-CompoundAssignOperator 0x233db8ff3b8 <line:188:17, col:25> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   | |-DeclRefExpr 0x233db8ff360 <col:17> 'int' lvalue ParmVar 0x233db8fa140 'outl' 'int'
|   |   |   |   | `-ImplicitCastExpr 0x233db8ff3a0 <col:25> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x233db8ff380 <col:25> 'int' lvalue Var 0x233db8fbc28 'buf_len' 'int'
|   |   |   |   |-IfStmt 0x233db8ff608 <line:190:17, line:193:17>
|   |   |   |   | |-BinaryOperator 0x233db8ff4b8 <line:190:21, col:33> 'int' '<='
|   |   |   |   | | |-ParenExpr 0x233db8ff470 <col:21, col:28> 'int'
|   |   |   |   | | | `-CompoundAssignOperator 0x233db8ff440 <col:22, col:27> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   | | |   |-DeclRefExpr 0x233db8ff3e8 <col:22> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |   |   | | |   `-ImplicitCastExpr 0x233db8ff428 <col:27> 'int' <LValueToRValue>
|   |   |   |   | | |     `-DeclRefExpr 0x233db8ff408 <col:27> 'int' lvalue Var 0x233db8fbb18 'j' 'int'
|   |   |   |   | | `-IntegerLiteral 0x233db8ff490 <col:33> 'int' 0
|   |   |   |   | `-CompoundStmt 0x233db8ff5e8 <col:36, line:193:17>
|   |   |   |   |   |-BinaryOperator 0x233db8ff5c0 <line:191:21, col:44> 'unsigned char *' '='
|   |   |   |   |   | |-MemberExpr 0x233db8ff510 <col:21, col:26> 'unsigned char *' lvalue ->read_start 0x233db8f5ef0
|   |   |   |   |   | | `-ImplicitCastExpr 0x233db8ff4f8 <col:21> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |   |   | |   `-DeclRefExpr 0x233db8ff4d8 <col:21> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |   |   |   | `-ImplicitCastExpr 0x233db8ff5a8 <col:39, col:44> 'unsigned char *' <LValueToRValue>
|   |   |   |   |   |   `-MemberExpr 0x233db8ff578 <col:39, col:44> 'unsigned char *' lvalue ->read_end 0x233db8f5f60
|   |   |   |   |   |     `-ImplicitCastExpr 0x233db8ff560 <col:39> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |   |   |       `-DeclRefExpr 0x233db8ff540 <col:39> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |   |   |   `-ContinueStmt 0x233db8ff5e0 <line:192:21>
|   |   |   |   `-CompoundAssignOperator 0x233db8ff6c0 <line:194:17, col:36> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   |   |     |-MemberExpr 0x233db8ff658 <col:17, col:22> 'unsigned char *' lvalue ->read_start 0x233db8f5ef0
|   |   |   |     | `-ImplicitCastExpr 0x233db8ff640 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x233db8ff620 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |   |     `-ImplicitCastExpr 0x233db8ff6a8 <col:36> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x233db8ff688 <col:36> 'int' lvalue Var 0x233db8fbb18 'j' 'int'
|   |   |   |-IfStmt 0x233db8ff878 <line:196:13, line:30:29>
|   |   |   | |-BinaryOperator 0x233db8ff7d0 <line:196:17, line:30:29> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x233db8ff7b8 <line:196:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x233db8ff750 <col:17> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |   | | `-ParenExpr 0x233db8ff798 <line:30:25, col:29> 'int'
|   |   |   | |   `-IntegerLiteral 0x233db8ff770 <col:26> 'int' 256
|   |   |   | `-BinaryOperator 0x233db8ff858 <line:197:17, line:30:29> 'int' '='
|   |   |   |   |-DeclRefExpr 0x233db8ff7f0 <line:197:17> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |   |   `-ParenExpr 0x233db8ff838 <line:30:25, col:29> 'int'
|   |   |   |     `-IntegerLiteral 0x233db8ff810 <col:26> 'int' 256
|   |   |   |-IfStmt 0x233db8ffb68 <line:198:13, line:204:13>
|   |   |   | |-OpaqueValueExpr 0x233db8ffb50 <<invalid sloc>> '_Bool'
|   |   |   | `-CompoundStmt 0x233db8ffb30 <line:200:56, line:204:13>
|   |   |   |   |-BinaryOperator 0x233db8ffad8 <line:202:17, col:27> 'int' '='
|   |   |   |   | |-MemberExpr 0x233db8ffa80 <col:17, col:22> 'int' lvalue ->ok 0x233db8f5de8
|   |   |   |   | | `-ImplicitCastExpr 0x233db8ffa68 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |   | |   `-DeclRefExpr 0x233db8ffa48 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |   |   | `-IntegerLiteral 0x233db8ffab0 <col:27> 'int' 0
|   |   |   |   `-ReturnStmt 0x233db8ffb20 <line:203:17, col:24>
|   |   |   |     `-IntegerLiteral 0x233db8ffaf8 <col:24> 'int' 0
|   |   |   |-CompoundAssignOperator 0x233db8ffc20 <line:205:13, col:32> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   |   | |-MemberExpr 0x233db8ffbb8 <col:13, col:18> 'unsigned char *' lvalue ->read_start 0x233db8f5ef0
|   |   |   | | `-ImplicitCastExpr 0x233db8ffba0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x233db8ffb80 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-ImplicitCastExpr 0x233db8ffc08 <col:32> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x233db8ffbe8 <col:32> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |   |-BinaryOperator 0x233db8ffce0 <line:206:13, col:25> 'int' '='
|   |   |   | |-MemberExpr 0x233db8ffc88 <col:13, col:18> 'int' lvalue ->cont 0x233db8f5d08
|   |   |   | | `-ImplicitCastExpr 0x233db8ffc70 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x233db8ffc50 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x233db8ffcb8 <col:25> 'int' 1
|   |   |   `-IfStmt 0x233db8ffdd0 <line:213:13, line:214:17>
|   |   |     |-BinaryOperator 0x233db8ffda8 <line:213:17, col:33> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x233db8ffd90 <col:17, col:22> 'int' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x233db8ffd38 <col:17, col:22> 'int' lvalue ->buf_len 0x233db8f5c28
|   |   |     | |   `-ImplicitCastExpr 0x233db8ffd20 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x233db8ffd00 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   |     | `-IntegerLiteral 0x233db8ffd68 <col:33> 'int' 0
|   |   |     `-ContinueStmt 0x233db8ffdc8 <line:214:17>
|   |   |-IfStmt 0x233db900060 <line:217:9, line:220:17> has_else
|   |   | |-BinaryOperator 0x233db8fff08 <line:217:13, col:29> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x233db8ffed8 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x233db8ffe88 <col:13, col:18> 'int' lvalue ->buf_len 0x233db8f5c28
|   |   | | |   `-ImplicitCastExpr 0x233db8ffe70 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x233db8ffe50 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-ImplicitCastExpr 0x233db8ffef0 <col:29> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x233db8ffeb8 <col:29> 'int' lvalue ParmVar 0x233db8fa140 'outl' 'int'
|   |   | |-BinaryOperator 0x233db8fffc8 <line:218:13, col:22> 'int' '='
|   |   | | |-DeclRefExpr 0x233db8fff28 <col:13> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x233db8fffb0 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x233db8fff80 <col:17, col:22> 'int' lvalue ->buf_len 0x233db8f5c28
|   |   | |     `-ImplicitCastExpr 0x233db8fff68 <col:17> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x233db8fff48 <col:17> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | `-BinaryOperator 0x233db900040 <line:220:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x233db8fffe8 <col:13> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x233db900028 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x233db900008 <col:17> 'int' lvalue ParmVar 0x233db8fa140 'outl' 'int'
|   |   |-IfStmt 0x233db8fd0f8 <line:221:9, line:222:13>
|   |   | |-BinaryOperator 0x233db8fd0d0 <line:221:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x233db8fd0b8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x233db8fd070 <col:13> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   | | `-IntegerLiteral 0x233db8fd090 <col:18> 'int' 0
|   |   | `-BreakStmt 0x233db8fd0f0 <line:222:13>
|   |   |-CompoundAssignOperator 0x233db8fd200 <line:224:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x233db8fd1a8 <col:9> 'int' lvalue Var 0x233db8fa2d0 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x233db8fd1e8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8fd1c8 <col:16> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |-BinaryOperator 0x233db8fd2d0 <line:225:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x233db8fd268 <col:9, col:14> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   | | `-ImplicitCastExpr 0x233db8fd250 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x233db8fd230 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|   |   | `-ImplicitCastExpr 0x233db8fd2b8 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8fd298 <col:24> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   |-CompoundAssignOperator 0x233db8fd348 <line:226:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x233db8fd2f0 <col:9> 'int' lvalue ParmVar 0x233db8fa140 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x233db8fd330 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8fd310 <col:17> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   |   `-CompoundAssignOperator 0x233db8fd3d0 <line:227:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x233db8fd378 <col:9> 'char *' lvalue ParmVar 0x233db8fa0c0 'out' 'char *'
|   |     `-ImplicitCastExpr 0x233db8fd3b8 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x233db8fd398 <col:16> 'int' lvalue Var 0x233db8fa378 'i' 'int'
|   `-ReturnStmt 0x233db8fd748 <line:232:5, col:41>
|     `-ParenExpr 0x233db8fd728 <col:12, col:41> 'int'
|       `-ConditionalOperator 0x233db8fd6f8 <col:13, col:38> 'int'
|         |-ParenExpr 0x233db8fd620 <col:13, col:22> 'int'
|         | `-BinaryOperator 0x233db8fd600 <col:14, col:21> 'int' '=='
|         |   |-ImplicitCastExpr 0x233db8fd5e8 <col:14> 'int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x233db8fd5a0 <col:14> 'int' lvalue Var 0x233db8fa2d0 'ret' 'int'
|         |   `-IntegerLiteral 0x233db8fd5c0 <col:21> 'int' 0
|         |-ImplicitCastExpr 0x233db8fd6c8 <col:26, col:31> 'int' <LValueToRValue>
|         | `-MemberExpr 0x233db8fd678 <col:26, col:31> 'int' lvalue ->cont 0x233db8f5d08
|         |   `-ImplicitCastExpr 0x233db8fd660 <col:26> 'BIO_ENC_CTX *' <LValueToRValue>
|         |     `-DeclRefExpr 0x233db8fd640 <col:26> 'BIO_ENC_CTX *' lvalue Var 0x233db8fa4a8 'ctx' 'BIO_ENC_CTX *'
|         `-ImplicitCastExpr 0x233db8fd6e0 <col:38> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x233db8fd6a8 <col:38> 'int' lvalue Var 0x233db8fa2d0 'ret' 'int'
|-FunctionDecl 0x233db8fadd0 <line:126:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x233db8fae70 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x233db8faed8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x233db8faf40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x233db8fd968 <line:235:1, line:293:1> line:235:12 invalid enc_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x233db8fd7c0 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x233db8fd840 <col:30, col:42> col:42 used in 'const char *'
| |-ParmVarDecl 0x233db8fd8c0 <col:46, col:50> col:50 used inl 'int'
| `-CompoundStmt 0x233db900a50 <line:236:1, line:293:1>
|   |-DeclStmt 0x233db8fdc00 <line:237:5, col:22>
|   | |-VarDecl 0x233db8fda50 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x233db8fdab8 <col:15> 'int' 0
|   | |-VarDecl 0x233db8fdaf8 <col:5, col:18> col:18 used n 'int'
|   | `-VarDecl 0x233db8fdb78 <col:5, col:21> col:21 used i 'int'
|   |-DeclStmt 0x233db8fdc90 <line:238:5, col:21>
|   | `-VarDecl 0x233db8fdc28 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   |-IfStmt 0x233db8fdf10 <line:243:5, line:244:16>
|   | |-OpaqueValueExpr 0x233db8fdef8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x233db8fdee8 <col:9, col:16>
|   |   `-IntegerLiteral 0x233db8fdec0 <col:16> 'int' 0
|   |-BinaryOperator 0x233db8fdfb0 <line:246:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x233db8fdf28 <col:5> 'int' lvalue Var 0x233db8fda50 'ret' 'int'
|   | `-ImplicitCastExpr 0x233db8fdf98 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x233db8fdf60 <col:11> 'int' lvalue ParmVar 0x233db8fd8c0 'inl' 'int'
|   |-BinaryOperator 0x233db8fe168 <line:249:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x233db8fdff0 <col:5> 'int' lvalue Var 0x233db8fdaf8 'n' 'int'
|   | `-BinaryOperator 0x233db8fe148 <col:9, col:29> 'int' '-'
|   |   |-ImplicitCastExpr 0x233db8fe118 <col:9, col:14> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x233db8fe080 <col:9, col:14> 'int' lvalue ->buf_len 0x233db8f5c28
|   |   |   `-ImplicitCastExpr 0x233db8fe048 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x233db8fe028 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8fdc28 'ctx' 'BIO_ENC_CTX *'
|   |   `-ImplicitCastExpr 0x233db8fe130 <col:24, col:29> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x233db8fe0e8 <col:24, col:29> 'int' lvalue ->buf_off 0x233db8f5c98
|   |       `-ImplicitCastExpr 0x233db8fe0d0 <col:24> 'BIO_ENC_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x233db8fe0b0 <col:24> 'BIO_ENC_CTX *' lvalue Var 0x233db8fdc28 'ctx' 'BIO_ENC_CTX *'
|   |-WhileStmt 0x233db8fe6c8 <line:250:5, line:258:5>
|   | |-BinaryOperator 0x233db8fe1e8 <line:250:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x233db8fe1d0 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233db8fe188 <col:12> 'int' lvalue Var 0x233db8fdaf8 'n' 'int'
|   | | `-IntegerLiteral 0x233db8fe1a8 <col:16> 'int' 0
|   | `-CompoundStmt 0x233db8fe6a0 <col:19, line:258:5>
|   |   |-IfStmt 0x233db8fe530 <line:252:9, line:255:9>
|   |   | |-BinaryOperator 0x233db8fe470 <line:252:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x233db8fe458 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x233db8fe410 <col:13> 'int' lvalue Var 0x233db8fdb78 'i' 'int'
|   |   | | `-IntegerLiteral 0x233db8fe430 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x233db8fe518 <col:21, line:255:9>
|   |   |   `-ReturnStmt 0x233db8fe508 <line:254:13, col:22>
|   |   |     `-ImplicitCastExpr 0x233db8fe4f0 <col:20, col:22> 'int' <LValueToRValue>
|   |   |       `-ParenExpr 0x233db8fe4d0 <col:20, col:22> 'int' lvalue
|   |   |         `-DeclRefExpr 0x233db8fe4b0 <col:21> 'int' lvalue Var 0x233db8fdb78 'i' 'int'
|   |   |-CompoundAssignOperator 0x233db8fe5e8 <line:256:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x233db8fe580 <col:9, col:14> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   | | `-ImplicitCastExpr 0x233db8fe568 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x233db8fe548 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8fdc28 'ctx' 'BIO_ENC_CTX *'
|   |   | `-ImplicitCastExpr 0x233db8fe5d0 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8fe5b0 <col:25> 'int' lvalue Var 0x233db8fdb78 'i' 'int'
|   |   `-CompoundAssignOperator 0x233db8fe670 <line:257:9, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x233db8fe618 <col:9> 'int' lvalue Var 0x233db8fdaf8 'n' 'int'
|   |     `-ImplicitCastExpr 0x233db8fe658 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x233db8fe638 <col:14> 'int' lvalue Var 0x233db8fdb78 'i' 'int'
|   |-IfStmt 0x233db8fe928 <line:261:5, line:262:18>
|   | |-BinaryOperator 0x233db8fe8b0 <line:261:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x233db8fe7f0 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x233db8fe7d0 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x233db8fe7a0 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:261:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x233db8fe6e0 <col:10> 'const char *' lvalue ParmVar 0x233db8fd840 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x233db8fe7b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x233db8fe780 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x233db8fe758 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x233db8fe718 <col:26> 'int' 0
|   | | `-ParenExpr 0x233db8fe890 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:261:25, col:34> 'int'
|   | |   `-BinaryOperator 0x233db8fe870 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x233db8fe858 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x233db8fe810 <col:26> 'int' lvalue ParmVar 0x233db8fd8c0 'inl' 'int'
|   | |     `-IntegerLiteral 0x233db8fe830 <col:33> 'int' 0
|   | `-ReturnStmt 0x233db8fe918 <line:262:9, col:18>
|   |   `-ParenExpr 0x233db8fe8f8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x233db8fe8d0 <col:17> 'int' 0
|   |-BinaryOperator 0x233db8fe9d0 <line:264:5, col:20> 'int' '='
|   | |-MemberExpr 0x233db8fe978 <col:5, col:10> 'int' lvalue ->buf_off 0x233db8f5c98
|   | | `-ImplicitCastExpr 0x233db8fe960 <col:5> 'BIO_ENC_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x233db8fe940 <col:5> 'BIO_ENC_CTX *' lvalue Var 0x233db8fdc28 'ctx' 'BIO_ENC_CTX *'
|   | `-IntegerLiteral 0x233db8fe9a8 <col:20> 'int' 0
|   |-WhileStmt 0x233db9009b0 <line:265:5, line:290:5>
|   | |-BinaryOperator 0x233db8fea50 <line:265:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x233db8fea38 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233db8fe9f0 <col:12> 'int' lvalue ParmVar 0x233db8fd8c0 'inl' 'int'
|   | | `-IntegerLiteral 0x233db8fea10 <col:18> 'int' 0
|   | `-CompoundStmt 0x233db900958 <col:21, line:290:5>
|   |   |-BinaryOperator 0x233db8fec90 <line:266:9, col:55> 'int' '='
|   |   | |-DeclRefExpr 0x233db8fea70 <col:9> 'int' lvalue Var 0x233db8fdaf8 'n' 'int'
|   |   | `-ConditionalOperator 0x233db8fec60 <col:13, col:55> 'int'
|   |   |   |-ParenExpr 0x233db8feb78 <col:13, col:34> 'int'
|   |   |   | `-BinaryOperator 0x233db8feb58 <col:14, line:29:32> 'int' '>'
|   |   |   |   |-ImplicitCastExpr 0x233db8feb40 <line:266:14> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x233db8fea90 <col:14> 'int' lvalue ParmVar 0x233db8fd8c0 'inl' 'int'
|   |   |   |   `-ParenExpr 0x233db8feb20 <line:29:25, col:32> 'int'
|   |   |   |     `-BinaryOperator 0x233db8feb00 <col:26, col:31> 'int' '*'
|   |   |   |       |-IntegerLiteral 0x233db8feab0 <col:26> 'int' 1024
|   |   |   |       `-IntegerLiteral 0x233db8fead8 <col:31> 'int' 4
|   |   |   |-ParenExpr 0x233db8fec08 <col:25, col:32> 'int'
|   |   |   | `-BinaryOperator 0x233db8febe8 <col:26, col:31> 'int' '*'
|   |   |   |   |-IntegerLiteral 0x233db8feb98 <col:26> 'int' 1024
|   |   |   |   `-IntegerLiteral 0x233db8febc0 <col:31> 'int' 4
|   |   |   `-ImplicitCastExpr 0x233db8fec48 <line:266:55> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x233db8fec28 <col:55> 'int' lvalue ParmVar 0x233db8fd8c0 'inl' 'int'
|   |   |-IfStmt 0x233db8fef98 <line:267:9, line:273:9>
|   |   | |-OpaqueValueExpr 0x233db8fef80 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x233db8fef60 <line:269:62, line:273:9>
|   |   |   |-BinaryOperator 0x233db8fef08 <line:271:13, col:23> 'int' '='
|   |   |   | |-MemberExpr 0x233db8feeb0 <col:13, col:18> 'int' lvalue ->ok 0x233db8f5de8
|   |   |   | | `-ImplicitCastExpr 0x233db8fee98 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x233db8fee78 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fdc28 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x233db8feee0 <col:23> 'int' 0
|   |   |   `-ReturnStmt 0x233db8fef50 <line:272:13, col:20>
|   |   |     `-IntegerLiteral 0x233db8fef28 <col:20> 'int' 0
|   |   |-CompoundAssignOperator 0x233db8ff008 <line:274:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x233db8fefb0 <col:9> 'int' lvalue ParmVar 0x233db8fd8c0 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x233db8feff0 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8fefd0 <col:16> 'int' lvalue Var 0x233db8fdaf8 'n' 'int'
|   |   |-CompoundAssignOperator 0x233db9000b8 <line:275:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x233db8ff038 <col:9> 'const char *' lvalue ParmVar 0x233db8fd840 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x233db9000a0 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x233db8ff058 <col:15> 'int' lvalue Var 0x233db8fdaf8 'n' 'int'
|   |   |-BinaryOperator 0x233db900178 <line:277:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x233db900120 <col:9, col:14> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   | | `-ImplicitCastExpr 0x233db900108 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x233db9000e8 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8fdc28 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x233db900150 <col:24> 'int' 0
|   |   |-BinaryOperator 0x233db900238 <line:278:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x233db900198 <col:9> 'int' lvalue Var 0x233db8fdaf8 'n' 'int'
|   |   | `-ImplicitCastExpr 0x233db900220 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x233db9001f0 <col:13, col:18> 'int' lvalue ->buf_len 0x233db8f5c28
|   |   |     `-ImplicitCastExpr 0x233db9001d8 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x233db9001b8 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fdc28 'ctx' 'BIO_ENC_CTX *'
|   |   |-WhileStmt 0x233db9007e0 <line:279:9, line:287:9>
|   |   | |-BinaryOperator 0x233db9002b8 <line:279:16, col:20> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x233db9002a0 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x233db900258 <col:16> 'int' lvalue Var 0x233db8fdaf8 'n' 'int'
|   |   | | `-IntegerLiteral 0x233db900278 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x233db9007b8 <col:23, line:287:9>
|   |   |   |-IfStmt 0x233db900648 <line:281:13, line:284:13>
|   |   |   | |-BinaryOperator 0x233db900438 <line:281:17, col:22> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x233db900420 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x233db9003d8 <col:17> 'int' lvalue Var 0x233db8fdb78 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x233db9003f8 <col:22> 'int' 0
|   |   |   | `-CompoundStmt 0x233db900630 <col:25, line:284:13>
|   |   |   |   `-ReturnStmt 0x233db900620 <line:283:17, col:49>
|   |   |   |     `-ConditionalOperator 0x233db9005f0 <col:24, col:49> 'int'
|   |   |   |       |-ParenExpr 0x233db900508 <col:24, col:35> 'int'
|   |   |   |       | `-BinaryOperator 0x233db9004e8 <col:25, col:32> 'int' '=='
|   |   |   |       |   |-ImplicitCastExpr 0x233db9004b8 <col:25> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x233db900478 <col:25> 'int' lvalue Var 0x233db8fda50 'ret' 'int'
|   |   |   |       |   `-ImplicitCastExpr 0x233db9004d0 <col:32> 'int' <LValueToRValue>
|   |   |   |       |     `-DeclRefExpr 0x233db900498 <col:32> 'int' lvalue ParmVar 0x233db8fd8c0 'inl' 'int'
|   |   |   |       |-ImplicitCastExpr 0x233db9005d8 <col:39> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x233db900528 <col:39> 'int' lvalue Var 0x233db8fdb78 'i' 'int'
|   |   |   |       `-BinaryOperator 0x233db9005b8 <col:43, col:49> 'int' '-'
|   |   |   |         |-ImplicitCastExpr 0x233db900588 <col:43> 'int' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x233db900548 <col:43> 'int' lvalue Var 0x233db8fda50 'ret' 'int'
|   |   |   |         `-ImplicitCastExpr 0x233db9005a0 <col:49> 'int' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x233db900568 <col:49> 'int' lvalue ParmVar 0x233db8fd8c0 'inl' 'int'
|   |   |   |-CompoundAssignOperator 0x233db9006b8 <line:285:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x233db900660 <col:13> 'int' lvalue Var 0x233db8fdaf8 'n' 'int'
|   |   |   | `-ImplicitCastExpr 0x233db9006a0 <col:18> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x233db900680 <col:18> 'int' lvalue Var 0x233db8fdb78 'i' 'int'
|   |   |   `-CompoundAssignOperator 0x233db900788 <line:286:13, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-MemberExpr 0x233db900720 <col:13, col:18> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   |     | `-ImplicitCastExpr 0x233db900708 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x233db9006e8 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db8fdc28 'ctx' 'BIO_ENC_CTX *'
|   |   |     `-ImplicitCastExpr 0x233db900770 <col:29> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x233db900750 <col:29> 'int' lvalue Var 0x233db8fdb78 'i' 'int'
|   |   |-BinaryOperator 0x233db900888 <line:288:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x233db900830 <col:9, col:14> 'int' lvalue ->buf_len 0x233db8f5c28
|   |   | | `-ImplicitCastExpr 0x233db900818 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x233db9007f8 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8fdc28 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x233db900860 <col:24> 'int' 0
|   |   `-BinaryOperator 0x233db900938 <line:289:9, col:24> 'int' '='
|   |     |-MemberExpr 0x233db9008e0 <col:9, col:14> 'int' lvalue ->buf_off 0x233db8f5c98
|   |     | `-ImplicitCastExpr 0x233db9008c8 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x233db9008a8 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8fdc28 'ctx' 'BIO_ENC_CTX *'
|   |     `-IntegerLiteral 0x233db900910 <col:24> 'int' 0
|   `-ReturnStmt 0x233db900a40 <line:292:5, col:16>
|     `-ImplicitCastExpr 0x233db900a28 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x233db900a08 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x233db9009e8 <col:13> 'int' lvalue Var 0x233db8fda50 'ret' 'int'
|-FunctionDecl 0x233db900cf8 <line:295:1, line:388:1> line:295:13 invalid enc_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x233db900ac8 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x233db900b48 <col:30, col:34> col:34 used cmd 'int'
| |-ParmVarDecl 0x233db900bc8 <col:39, col:44> col:44 used num 'long'
| |-ParmVarDecl 0x233db900c48 <col:49, col:55> col:55 used ptr 'void *'
| `-CompoundStmt 0x233db903540 <line:296:1, line:388:1>
|   |-DeclStmt 0x233db900ed8 <line:298:5, col:28>
|   | |-VarDecl 0x233db900de0 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
|   | `-VarDecl 0x233db900e58 <col:5, col:24> col:24 used dctx 'BIO_ENC_CTX *'
|   |-DeclStmt 0x233db900fb0 <line:299:5, col:17>
|   | `-VarDecl 0x233db900f08 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x233db900f98 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x233db900f70 <col:16> 'int' 1
|   |-DeclStmt 0x233db901048 <line:300:5, col:10>
|   | `-VarDecl 0x233db900fe0 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x233db901238 <line:306:5, line:307:16>
|   | |-BinaryOperator 0x233db9011c8 <line:306:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x233db901198 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:306:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x233db9010f0 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   | | `-ImplicitCastExpr 0x233db9011b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
|   | |   `-ParenExpr 0x233db901178 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x233db901150 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x233db901110 <col:26> 'int' 0
|   | `-ReturnStmt 0x233db901228 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:307:9, col:16>
|   |   `-ImplicitCastExpr 0x233db901210 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x233db9011e8 <col:16> 'int' 0
|   |-SwitchStmt 0x233db9012a0 <line:309:5, line:386:5>
|   | |-ImplicitCastExpr 0x233db901288 <line:309:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x233db901250 <col:13> 'int' lvalue ParmVar 0x233db900b48 'cmd' 'int'
|   | `-CompoundStmt 0x233db903420 <col:18, line:386:5>
|   |   |-BinaryOperator 0x233db901350 <line:311:9, col:19> 'int' '='
|   |   | |-MemberExpr 0x233db9012f8 <col:9, col:14> 'int' lvalue ->ok 0x233db8f5de8
|   |   | | `-ImplicitCastExpr 0x233db9012e0 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x233db9012c0 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x233db901328 <col:19> 'int' 1
|   |   |-BinaryOperator 0x233db901400 <line:312:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x233db9013a8 <col:9, col:14> 'int' lvalue ->finished 0x233db8f5d78
|   |   | | `-ImplicitCastExpr 0x233db901390 <col:9> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x233db901370 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   | `-IntegerLiteral 0x233db9013d8 <col:25> 'int' 0
|   |   |-IfStmt 0x233db901938 <line:313:9, line:315:20>
|   |   | |-OpaqueValueExpr 0x233db901920 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x233db901910 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x233db9018f8 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x233db9018d0 <col:20> 'int' 0
|   |   |-BreakStmt 0x233db901b28 <line:317:9>
|   |   |-IfStmt 0x233db901d20 <line:319:9, line:322:13> has_else
|   |   | |-BinaryOperator 0x233db901bd8 <line:319:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x233db901bc0 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x233db901b68 <col:13, col:18> 'int' lvalue ->cont 0x233db8f5d08
|   |   | | |   `-ImplicitCastExpr 0x233db901b50 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x233db901b30 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   | | `-IntegerLiteral 0x233db901b98 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x233db901c58 <line:320:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x233db901bf8 <col:13> 'long' lvalue Var 0x233db900f08 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x233db901c40 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x233db901c18 <col:19> 'int' 1
|   |   | `-NullStmt 0x233db901d18 <line:322:13>
|   |   |-BreakStmt 0x233db901d48 <line:323:9>
|   |   |-BinaryOperator 0x233db901ea8 <line:325:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x233db901d50 <col:9> 'long' lvalue Var 0x233db900f08 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x233db901e90 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x233db901e70 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x233db901e40 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x233db901da8 <col:15, col:20> 'int' lvalue ->buf_len 0x233db8f5c28
|   |   |     |   `-ImplicitCastExpr 0x233db901d90 <col:15> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x233db901d70 <col:15> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   |     `-ImplicitCastExpr 0x233db901e58 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x233db901e10 <col:30, col:35> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   |         `-ImplicitCastExpr 0x233db901df8 <col:30> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x233db901dd8 <col:30> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   |-BreakStmt 0x233db902000 <line:328:9>
|   |   |-BinaryOperator 0x233db902170 <line:330:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x233db902008 <col:9> 'long' lvalue Var 0x233db900f08 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x233db902158 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x233db902138 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x233db902108 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x233db902060 <col:15, col:20> 'int' lvalue ->buf_len 0x233db8f5c28
|   |   |     |   `-ImplicitCastExpr 0x233db902048 <col:15> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x233db902028 <col:15> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   |     `-ImplicitCastExpr 0x233db902120 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x233db9020d8 <col:30, col:35> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   |         `-ImplicitCastExpr 0x233db9020c0 <col:30> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x233db902090 <col:30> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   |-BreakStmt 0x233db9022c8 <line:333:9>
|   |   |-LabelStmt 0x233db902650 <line:336:2, line:341:9> 'again'
|   |   | `-WhileStmt 0x233db9025e8 <line:337:9, line:341:9>
|   |   |   |-BinaryOperator 0x233db9023d0 <line:337:16, col:37> 'int' '!='
|   |   |   | |-ImplicitCastExpr 0x233db9023a0 <col:16, col:21> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x233db902308 <col:16, col:21> 'int' lvalue ->buf_len 0x233db8f5c28
|   |   |   | |   `-ImplicitCastExpr 0x233db9022f0 <col:16> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x233db9022d0 <col:16> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-ImplicitCastExpr 0x233db9023b8 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x233db902370 <col:32, col:37> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   |   |     `-ImplicitCastExpr 0x233db902358 <col:32> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x233db902338 <col:32> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   |   `-CompoundStmt 0x233db9025d0 <col:46, line:341:9>
|   |   |     `-IfStmt 0x233db9025b8 <line:339:13, line:340:24>
|   |   |       |-BinaryOperator 0x233db902538 <line:339:17, col:21> 'int' '<'
|   |   |       | |-ImplicitCastExpr 0x233db902520 <col:17> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x233db9024d8 <col:17> 'int' lvalue Var 0x233db900fe0 'i' 'int'
|   |   |       | `-IntegerLiteral 0x233db9024f8 <col:21> 'int' 0
|   |   |       `-ReturnStmt 0x233db9025a8 <line:340:17, col:24>
|   |   |         `-ImplicitCastExpr 0x233db902590 <col:24> 'long' <IntegralCast>
|   |   |           `-ImplicitCastExpr 0x233db902578 <col:24> 'int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x233db902558 <col:24> 'int' lvalue Var 0x233db900fe0 'i' 'int'
|   |   |-IfStmt 0x233db902bb8 <line:343:9, line:355:9>
|   |   | |-UnaryOperator 0x233db9026e8 <line:343:13, col:19> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x233db9026d0 <col:14, col:19> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x233db9026a0 <col:14, col:19> 'int' lvalue ->finished 0x233db8f5d78
|   |   | |     `-ImplicitCastExpr 0x233db902688 <col:14> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x233db902668 <col:14> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   | `-CompoundStmt 0x233db902b80 <col:29, line:355:9>
|   |   |   |-BinaryOperator 0x233db902790 <line:344:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x233db902738 <col:13, col:18> 'int' lvalue ->finished 0x233db8f5d78
|   |   |   | | `-ImplicitCastExpr 0x233db902720 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x233db902700 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x233db902768 <col:29> 'int' 1
|   |   |   |-BinaryOperator 0x233db902840 <line:345:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x233db9027e8 <col:13, col:18> 'int' lvalue ->buf_off 0x233db8f5c98
|   |   |   | | `-ImplicitCastExpr 0x233db9027d0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x233db9027b0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-IntegerLiteral 0x233db902818 <col:28> 'int' 0
|   |   |   |-BinaryOperator 0x233db902a90 <line:349:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x233db9029e8 <col:13, col:18> 'int' lvalue ->ok 0x233db8f5de8
|   |   |   | | `-ImplicitCastExpr 0x233db9029d0 <col:13> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x233db9029b0 <col:13> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   |   | `-CStyleCastExpr 0x233db902a68 <col:23, col:28> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x233db902a50 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |     `-DeclRefExpr 0x233db902a18 <col:28> 'long' lvalue Var 0x233db900f08 'ret' 'long'
|   |   |   |-IfStmt 0x233db902b50 <line:350:13, line:351:17>
|   |   |   | |-BinaryOperator 0x233db902b28 <line:350:17, col:24> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x233db902af8 <col:17> 'long' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x233db902ab0 <col:17> 'long' lvalue Var 0x233db900f08 'ret' 'long'
|   |   |   | | `-ImplicitCastExpr 0x233db902b10 <col:24> 'long' <IntegralCast>
|   |   |   | |   `-IntegerLiteral 0x233db902ad0 <col:24> 'int' 0
|   |   |   | `-BreakStmt 0x233db902b48 <line:351:17>
|   |   |   `-GotoStmt 0x233db902b68 <line:354:13, col:18> 'again' 0x233db902600
|   |   |-BreakStmt 0x233db902c70 <line:359:9>
|   |   |-BinaryOperator 0x233db902d58 <line:361:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x233db902c78 <col:9> 'long' lvalue Var 0x233db900f08 'ret' 'long'
|   |   | `-CStyleCastExpr 0x233db902d30 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x233db902d18 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x233db902cd0 <col:21, col:26> 'int' lvalue ->ok 0x233db8f5de8
|   |   |       `-ImplicitCastExpr 0x233db902cb8 <col:21> 'BIO_ENC_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x233db902c98 <col:21> 'BIO_ENC_CTX *' lvalue Var 0x233db900de0 'ctx' 'BIO_ENC_CTX *'
|   |   |-BreakStmt 0x233db902d78 <line:362:9>
|   |   |-BreakStmt 0x233db902e60 <line:367:9>
|   |   |-BreakStmt 0x233db902ee8 <line:372:9>
|   |   |-IfStmt 0x233db903110 <line:377:9, line:378:20>
|   |   | |-OpaqueValueExpr 0x233db9030f8 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x233db9030e8 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x233db9030d0 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x233db903098 <col:20> 'int' 0
|   |   |-BreakStmt 0x233db903348 <line:382:9>
|   |   |-DefaultStmt 0x233db9033f8 <line:383:5, col:12>
|   |   | `-NullStmt 0x233db9033f0 <col:12>
|   |   `-BreakStmt 0x233db903418 <line:385:9>
|   `-ReturnStmt 0x233db903530 <line:387:5, col:16>
|     `-ImplicitCastExpr 0x233db903518 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x233db9034f8 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x233db9034d8 <col:13> 'long' lvalue Var 0x233db900f08 'ret' 'long'
|-FunctionDecl 0x233db903740 <line:390:1, line:403:1> line:390:13 invalid enc_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x233db903598 <col:31, col:36> col:36 invalid b 'int *'
| |-ParmVarDecl 0x233db903618 <col:39, col:43> col:43 used cmd 'int'
| |-ParmVarDecl 0x233db903698 <col:48, col:61> col:61 invalid fp 'int *'
| `-CompoundStmt 0x233db903cc0 <line:391:1, line:403:1>
|   |-DeclStmt 0x233db9038d0 <line:392:5, col:17>
|   | `-VarDecl 0x233db903828 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x233db9038b8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x233db903890 <col:16> 'int' 1
|   |-IfStmt 0x233db903a18 <line:395:5, line:396:18>
|   | |-OpaqueValueExpr 0x233db903a00 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x233db9039f0 <col:9, col:18>
|   |   `-ImplicitCastExpr 0x233db9039d8 <col:16, col:18> 'long' <IntegralCast>
|   |     `-ParenExpr 0x233db9039b8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x233db903990 <col:17> 'int' 0
|   |-SwitchStmt 0x233db903a80 <line:397:5, line:401:5>
|   | |-ImplicitCastExpr 0x233db903a68 <line:397:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x233db903a30 <col:13> 'int' lvalue ParmVar 0x233db903618 'cmd' 'int'
|   | `-CompoundStmt 0x233db903c38 <col:18, line:401:5>
|   |   |-DefaultStmt 0x233db903c10 <line:398:5, col:12>
|   |   | `-NullStmt 0x233db903c08 <col:12>
|   |   `-BreakStmt 0x233db903c30 <line:400:9>
|   `-ReturnStmt 0x233db903cb0 <line:402:5, col:16>
|     `-ImplicitCastExpr 0x233db903c98 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x233db903c78 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x233db903c58 <col:13> 'long' lvalue Var 0x233db903828 'ret' 'long'
`-FunctionDecl 0x233db904010 <line:425:1, line:450:1> line:425:5 invalid BIO_set_cipher 'int (int *, const int *, const unsigned char *, const unsigned char *, int)'
  |-ParmVarDecl 0x233db903d08 <col:20, col:25> col:25 invalid b 'int *'
  |-ParmVarDecl 0x233db903d88 <col:28, col:46> col:46 invalid c 'const int *'
  |-ParmVarDecl 0x233db903e08 <col:49, col:70> col:70 used k 'const unsigned char *'
  |-ParmVarDecl 0x233db903e88 <line:426:20, col:41> col:41 used i 'const unsigned char *'
  |-ParmVarDecl 0x233db903f08 <col:44, col:48> col:48 used e 'int'
  `-CompoundStmt 0x233db909168 <line:427:1, line:450:1>
    |-DeclStmt 0x233db8fc118 <line:428:5, col:21>
    | `-VarDecl 0x233db8fc0b0 <col:5, col:18> col:18 used ctx 'BIO_ENC_CTX *'
    |-DeclStmt 0x233db8fc7b8 <line:429:5, col:75>
    | `-VarDecl 0x233db8fc750 <col:5, col:74> col:12 used callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
    |-IfStmt 0x233db8fc958 <line:432:5, line:433:16>
    | |-BinaryOperator 0x233db8fc900 <line:432:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
    | | |-ImplicitCastExpr 0x233db8fc8d0 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:432:9> 'BIO_ENC_CTX *' <LValueToRValue>
    | | | `-DeclRefExpr 0x233db8fc828 <col:9> 'BIO_ENC_CTX *' lvalue Var 0x233db8fc0b0 'ctx' 'BIO_ENC_CTX *'
    | | `-ImplicitCastExpr 0x233db8fc8e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_ENC_CTX *' <BitCast>
    | |   `-ParenExpr 0x233db8fc8b0 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x233db8fc888 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x233db8fc848 <col:26> 'int' 0
    | `-ReturnStmt 0x233db8fc948 <.//openssl//file_jk/after\crypto\evp\bio_enc.c:433:9, col:16>
    |   `-IntegerLiteral 0x233db8fc920 <col:16> 'int' 0
    |-IfStmt 0x233db8fccc8 <line:437:5, line:440:16>
    | |-OpaqueValueExpr 0x233db8fccb0 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x233db8fcca0 <col:9, col:16>
    |   `-IntegerLiteral 0x233db8fcc78 <col:16> 'int' 0
    |-IfStmt 0x233db8fcee8 <line:444:5, line:445:16>
    | |-OpaqueValueExpr 0x233db8fced0 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x233db8fcec0 <col:9, col:16>
    |   `-IntegerLiteral 0x233db8fce98 <col:16> 'int' 0
    `-ReturnStmt 0x233db909158 <line:449:5, col:12>
      `-IntegerLiteral 0x233db909130 <col:12> 'int' 1
