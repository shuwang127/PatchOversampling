TranslationUnitDecl 0x1efc63c8d38 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1efc63c95d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1efc63c92d0 '__int128'
|-TypedefDecl 0x1efc63c9640 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1efc63c92f0 'unsigned __int128'
|-TypedefDecl 0x1efc63c9978 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1efc63c9730 'struct __NSConstantString_tag'
|   `-Record 0x1efc63c9698 '__NSConstantString_tag'
|-TypedefDecl 0x1efc63c99e8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1efc63c8f10 'unsigned long long'
|-TypedefDecl 0x1efc63c9a80 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1efc63c9a40 'char *'
|   `-BuiltinType 0x1efc63c8dd0 'char'
|-TypedefDecl 0x1efc63c9af0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1efc63c9a40 'char *'
|   `-BuiltinType 0x1efc63c8dd0 'char'
|-TypedefDecl 0x1efc63c9bb0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1efc63c8f10 'unsigned long long'
|-TypedefDecl 0x1efc63c9c20 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1efc63c9a40 'char *'
|   `-BuiltinType 0x1efc63c8dd0 'char'
|-FunctionDecl 0x1efc7e85410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1efc7e854b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1efc7e85520 <col:21> Implicit
|-FunctionDecl 0x1efc7e85578 prev 0x1efc7e85410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1efc7e852a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1efc7e85668 <col:21> Inherited Implicit
|-TypedefDecl 0x1efc7e856a8 prev 0x1efc63c99e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1efc63c8f10 'unsigned long long'
|-TypedefDecl 0x1efc7e85750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1efc7e85720 'size_t' sugar
|   |-Typedef 0x1efc7e856a8 'size_t'
|   `-BuiltinType 0x1efc63c8f10 'unsigned long long'
|-TypedefDecl 0x1efc7e857c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1efc63c8e70 'long long'
|-TypedefDecl 0x1efc7e85830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1efc63c8e70 'long long'
|-TypedefDecl 0x1efc7e858a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1efc63c8eb0 'unsigned short'
|-TypedefDecl 0x1efc7e85910 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1efc63c8eb0 'unsigned short'
|-TypedefDecl 0x1efc7e85980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1efc63c8eb0 'unsigned short'
|-TypedefDecl 0x1efc7e859f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1efc63c8e30 'int'
|-TypedefDecl 0x1efc7e85a60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1efc63c8e50 'long'
|-TypedefDecl 0x1efc7e85ad0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1efc63c8e70 'long long'
|-TypedefDecl 0x1efc7e85b60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1efc7e85b30 '__time64_t' sugar
|   |-Typedef 0x1efc7e85ad0 '__time64_t'
|   `-BuiltinType 0x1efc63c8e70 'long long'
|-FunctionDecl 0x1efc7e85cd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1efc7e85ef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1efc7ec31c0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1efc7e86038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1efc7e860b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1efc7e86128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1efc7e861a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1efc7ec2f60 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1efc7ec32a0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1efc7ec3360 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1efc7ec34d0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1efc7ec3480 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1efc7ec3420 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1efc7ec3340 'struct threadlocaleinfostruct'
|       `-Record 0x1efc7ec6fa0 'threadlocaleinfostruct'
|-TypedefDecl 0x1efc7ec35e0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1efc7ec3590 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1efc7ec3530 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1efc7ec3400 'struct threadmbcinfostruct'
|       `-Record 0x1efc7ec3360 'threadmbcinfostruct'
|-RecordDecl 0x1efc7ec3638 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1efc7ec36f0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1efc7ec37b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1efc7ec3840 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1efc7ec38d0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1efc7ec3988 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1efc7ec3930 'struct localeinfo_struct' sugar
|   `-RecordType 0x1efc7ec3790 'struct localeinfo_struct'
|     `-Record 0x1efc7ec36f0 'localeinfo_struct'
|-TypedefDecl 0x1efc7ec3a60 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1efc7ec3a10 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1efc7ec3930 'struct localeinfo_struct' sugar
|     `-RecordType 0x1efc7ec3790 'struct localeinfo_struct'
|       `-Record 0x1efc7ec36f0 'localeinfo_struct'
|-RecordDecl 0x1efc7ec3ad8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1efc7ec3b90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1efc7ec3c08 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1efc7ec3cc8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1efc7ec3d60 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1efc7ec3dd0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1efc7ec3e88 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1efc7ec3e30 'struct localerefcount' sugar
|   `-RecordType 0x1efc7ec3b70 'struct localerefcount'
|     `-Record 0x1efc7ec3ad8 'localerefcount'
|-RecordDecl 0x1efc7ec6fa0 prev 0x1efc7ec32a0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1efc7ec7020 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1efc7ec7098 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1efc7ec7108 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1efc7ec7178 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1efc7ec71e8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1efc7ec73a8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1efc7ec7418 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1efc7ec7488 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1efc7ec74f8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1efc7ec7568 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1efc7ec75d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1efc7ec7630 parent 0x1efc63c8d38 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1efc7ec77c0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1efc7ec7830 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1efc7ec78a0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1efc7ec7910 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1efc7ec79b0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1efc7ec7a20 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1efc7ec7b30 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1efc7ec7c68 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1efc7ec7d18 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1efc7ec7cc0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1efc7ec3340 'struct threadlocaleinfostruct'
|     `-Record 0x1efc7ec6fa0 'threadlocaleinfostruct'
|-RecordDecl 0x1efc7ec7db0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1efc7ec7e70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1efc7ec7ee8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1efc7ed0030 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1efc7ed00a0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1efc7ed0110 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1efc7ed0180 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1efc7ed01f0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1efc7ed0260 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1efc7ed02d0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1efc7ed0380 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1efc7ed0330 'struct _iobuf' sugar
|   `-RecordType 0x1efc7ec7e50 'struct _iobuf'
|     `-Record 0x1efc7ec7db0 '_iobuf'
|-FunctionDecl 0x1efc7ed05b8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1efc7ed0688 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1efc63c8e70 'long long'
|-FunctionDecl 0x1efc7ed0868 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7ed06f0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1efc7ed0b60 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1efc7ed0940 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1efc7ed09b8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1efc7ed0f10 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1efc7ed0c40 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1efc7ed0cc0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1efc7ed0d40 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1efc7ed21c0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1efc7ed2050 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1efc7ed23f0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1efc7ed22b0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1efc7ed25a0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7ed24c0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1efc7ed2790 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1efc7ed2a88 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1efc7ed2860 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1efc7ed28e0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1efc7ed2c40 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7ed2b60 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1efc7ed2df0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7ed2d10 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1efc7ed2fa0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7ed2ec0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1efc7ecb0e8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7ecb008 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1efc7ecb278 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1efc7ecb5e0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1efc7ecb340 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1efc7ecb438 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1efc7ecb998 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1efc7ecb6c0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1efc7ecb740 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1efc7ecb7b8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1efc7ecbb58 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7ecba78 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1efc7ecbe20 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1efc7ecbc30 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1efc7ecbcb0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1efc7ecd000 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1efc7ecd3f8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1efc7ecd498 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1efc7ecd500 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1efc7ecd578 prev 0x1efc7ecd3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1efc7ecd1d0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1efc7ecd250 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1efc7ecd628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7ecdaa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1efc7ecd7d0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1efc7ecd850 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1efc7ecd8d0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1efc7ecddc0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1efc7ecde60 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1efc7ecdec8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1efc7ecdf40 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1efc7ece010 prev 0x1efc7ecddc0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1efc7ecdb80 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1efc7ecdc00 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1efc7ece108 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1efc7ece2d0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1efc7ece150 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1efc7ece1d0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1efc7ece528 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1efc7ece3b0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1efc7ece428 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1efc7ece758 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1efc7ece608 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1efc7ecea50 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1efc7ece830 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1efc7ece8a8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1efc7eceee8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1efc7ecef88 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1efc7ed4070 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1efc7ed40d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1efc7ed4140 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1efc7ed41c8 prev 0x1efc7eceee8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1efc7eceb30 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1efc7eceba8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7ecec20 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7ecec98 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1efc7ed46d0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1efc7ed42b8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1efc7ed4330 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7ed43a8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7ed4420 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7ed4498 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1efc7ed4b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1efc7ed48c0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1efc7ed4940 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1efc7ed49b8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1efc7ed4c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7ed5128 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1efc7ed4d90 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1efc7ed4e10 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1efc7ed4e90 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1efc7ed4f08 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1efc7ed54d0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1efc7ed5570 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1efc7ed55d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1efc7ed5650 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1efc7ed56b8 prev 0x1efc7ed54d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1efc7ed5308 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1efc7ed5388 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1efc7ed5898 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1efc7ed5768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7ed5cd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7ed59d8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1efc7ed5a58 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1efc7ed5af0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7ed5d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7ed80b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1efc7ed5ed0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1efc7ed5f50 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1efc7ed83a0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7ed8188 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1efc7ed8208 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1efc7ed8280 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7ed8700 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1efc7ed8480 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1efc7ed8558 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1efc7ed8ab8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1efc7ed87d8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1efc7ed8858 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1efc7ed88d8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1efc7ed8d18 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1efc7ed8b98 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1efc7ed30a8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1efc7ed8de8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1efc7ed8e68 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1efc7ed8ee8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1efc7ed3308 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1efc7ed3188 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1efc7ed37c8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1efc7ed3868 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1efc7ed38d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1efc7ed3938 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1efc7ed39a0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1efc7ed3a28 prev 0x1efc7ed37c8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1efc7ed3410 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1efc7ed3488 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7ed3500 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7ed3578 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1efc7ed3bf0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7ed3b10 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1efc7ed3d80 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1efc7ed3f08 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1efc7ed7260 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1efc7ed3fd8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1efc7ed70b0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1efc7ed7588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1efc7ed7440 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1efc7ed7630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7ed7850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7ed7770 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1efc7ed7a70 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1efc7ed7928 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1efc7ed7c20 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7ed7b40 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1efc7ed7e70 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1efc7ed7cf8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1efc7ed7d78 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1efc7ed90c0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1efc7ed9160 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1efc7ed91d0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1efc7ed9238 prev 0x1efc7ed90c0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1efc7ed7f50 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1efc7ed9328 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1efc7ed9458 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1efc7ed9378 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1efc7ed96a8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1efc7ed9530 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1efc7ed95a8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1efc7ed9868 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1efc7ed9788 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1efc7ed9a88 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1efc7ed9940 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1efc7ed9cd8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1efc7ed9b60 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1efc7ed9bd8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1efc7ed9e98 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1efc7ed9db8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1efc7f25020 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1efc7ed9f70 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1efc7ed9ff0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1efc7f251e0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1efc7f25100 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1efc7f25470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1efc7f25390 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1efc7f25518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1efc7f25710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1efc7f25638 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1efc7f258a0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1efc7f25b48 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1efc7f25be8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1efc7f25c58 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1efc7f25cc0 prev 0x1efc7f25b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1efc7f25a30 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1efc7f25e98 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1efc7f25d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f2b2c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f2b088 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f2b100 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7f2b370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f2b598 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1efc7f2b4b8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1efc7f2b7e8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f2b670 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f2b6e8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f2bba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1efc7f2b980 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f2ba00 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1efc7f2bc58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f2be80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1efc7f2bda0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1efc7f2a0e8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1efc7f29fa0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1efc7f2a2d0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1efc7f2a720 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1efc7f2a398 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f2a418 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1efc7f2a498 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1efc7f2a510 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1efc7f2aba0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1efc7f2a810 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f2a888 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f2a900 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f2a980 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1efc7f25f60 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1efc7f2ac90 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f2ad08 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f2ad88 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1efc7f26128 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1efc7f26048 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1efc7f26500 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1efc7f265a0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1efc7f26608 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1efc7f26680 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1efc7f266e8 prev 0x1efc7f26500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1efc7f262c0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1efc7f26340 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1efc7f268c8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1efc7f26798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f26cb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f269d8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1efc7f26a58 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f26ad0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7f26d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f24040 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1efc7f26eb8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1efc7f23f40 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1efc7f24338 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f24120 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1efc7f241a0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f24218 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f247c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1efc7f244e0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1efc7f24558 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f245d8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1efc7f24880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f24e50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f24ac0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1efc7f24b38 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f24bb8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f24c30 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7f27f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f282e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1efc7f280c8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1efc7f28140 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f281c0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1efc7f28678 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f283c8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1efc7f28440 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f284c0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f28538 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f288d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1efc7f28978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f28c30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1efc7f28ac0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1efc7f26f70 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1efc7f28d08 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1efc7f28d80 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1efc7f271f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1efc7f27110 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1efc7f27298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f27558 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1efc7f273e0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1efc7f27458 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1efc7f27970 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1efc7f27a10 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1efc7f27a78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1efc7f27ae0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1efc7f27b60 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1efc7f27bc8 prev 0x1efc7f27970 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1efc7f27630 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f276b0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f27728 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1efc7f27cc8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1efc7f2eff0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1efc7f2f090 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1efc7f2f0f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1efc7f2f160 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1efc7f2f1e0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1efc7f2f248 prev 0x1efc7f2eff0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1efc7f27d10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f27d90 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f27e08 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1efc7f2f348 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1efc7f2f5a8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1efc7f2f390 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f2f410 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f2f488 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f2f8a0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1efc7f2f688 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f2f708 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f2f780 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f2fbe8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1efc7f2fc88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1efc7f2fcf0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1efc7f2fd68 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1efc7f2fdd0 prev 0x1efc7f2fbe8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1efc7f2f988 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f2fa00 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1efc7f2fec8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1efc7f2e118 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1efc7f2e1b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1efc7f2e220 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1efc7f2e298 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1efc7f2e300 prev 0x1efc7f2e118 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1efc7f2ff18 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f2dfe0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1efc7f2e3f8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1efc7f2e5c0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1efc7f2e448 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f2e4c0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f2e818 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1efc7f2e6a0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f2e718 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f2ed78 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1efc7f2ee18 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1efc7f2ee80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1efc7f2eee8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1efc7f2ef50 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1efc7f2bfc0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1efc7f2c028 prev 0x1efc7f2ed78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1efc7f2e9b8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f2ea30 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f2eab0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f2eb28 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1efc7f2c218 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1efc7f2c0e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f2c688 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1efc7f2c268 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f2c2e0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f2c358 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f2c3d8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f2c450 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f2cac8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1efc7f2c780 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f2c7f8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f2c870 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f2c8f0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f2c968 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f2ce98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1efc7f2cc80 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1efc7f2ccf8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f2cd78 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1efc7f2cf50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f30470 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1efc7f301c0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1efc7f30238 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f302b8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f30330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1efc7f30530 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f30928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1efc7f30678 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f306f0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f30770 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f307e8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f30ce8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1efc7f30a18 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1efc7f30a98 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f30b10 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f2d070 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1efc7f2d110 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1efc7f2d178 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1efc7f2d1f0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1efc7f2d258 prev 0x1efc7f2d070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1efc7f30e90 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1efc7f30f10 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1efc7f2d438 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1efc7f2d308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f2d860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1efc7f2d900 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1efc7f2d968 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1efc7f2d9d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1efc7f2da50 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1efc7f2dab8 prev 0x1efc7f2d860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1efc7f2d548 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1efc7f2d5c8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f2d640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1efc7f2dca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1efc7f2db70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f28f90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1efc7f29030 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1efc7f29098 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1efc7f29100 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1efc7f29180 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1efc7f291e8 prev 0x1efc7f28f90 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1efc7f2dcf0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1efc7f2dd70 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f2dde8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1efc7f292e8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1efc7f294b0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1efc7f29338 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f293b0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f297a8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1efc7f29590 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f29608 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f29688 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1efc7f29b40 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1efc7f29890 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f29908 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f29988 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f29a00 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f29da8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1efc7f29c28 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1efc7f29ca8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1efc7f38080 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1efc7f29e88 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1efc7f38370 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1efc7f38158 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1efc7f381d0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f38250 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1efc7f38668 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1efc7f38450 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f384d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f38548 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f388c8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1efc7f38750 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f387c8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f38c58 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1efc7f389a8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1efc7f38a20 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f38aa0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f38b18 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f38e28 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1efc7f38d48 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1efc7f36060 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1efc7f38f00 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f38f78 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f36220 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1efc7f36140 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1efc7f363b0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1efc7f365f8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f36480 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f364f8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f36850 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f366d8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f36750 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f36aa8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f36930 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f369a8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f36e58 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f36b88 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f36c00 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f36c78 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f31130 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f36f40 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f36fb8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f31010 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f31428 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f31218 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f31290 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f31308 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f31720 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f31508 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f31588 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f31600 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f31a18 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f31800 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f31880 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f318f8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f31d10 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f31af8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f31b78 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f31bf0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f32180 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f31df0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f31e70 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f31ee8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f31f60 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f32518 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f32268 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f322e8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f32360 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f323d8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f328b0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f32600 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f32680 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f326f8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f32770 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f32d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f32a60 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f32ae0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f32b58 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7f32e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f34350 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f32f48 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f34040 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f340c0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f34138 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f346f0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f34440 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f344b8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f34538 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f345b0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f34c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f348e0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f34960 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f349d8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1efc7f34a50 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1efc7f34d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f33268 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f34e48 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f34ec0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f34f40 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f34fb8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f33030 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f336a8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f33360 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f333d8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f33458 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f334d0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f33548 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f33918 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f337a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f33818 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f33b70 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f339f8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f33a70 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f33e60 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f33c50 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f33cc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f33d40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f3e210 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f33f48 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f33fc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f3e0f0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f3e668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f3e3b8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f3e430 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f3e4b0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f3e528 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7f3e728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f3eb20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f3e870 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f3e8e8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f3e968 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f3e9e0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f3a0a0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f3ec10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f3ec88 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f3ed00 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f3ed80 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1efc7f3edf8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f3a5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f3a298 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f3a310 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f3a390 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f3a408 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1efc7f3a480 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1efc7f3a6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f3ab28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f3a7f8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f3a870 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f3a8f0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1efc7f3a968 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f3a9e0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f3c120 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f3ac20 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1efc7f3ac98 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f3ad10 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f3ad90 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1efc7f3ae08 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f3ae80 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f3c4e0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1efc7f3c218 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f3c290 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f3c310 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1efc7f3c750 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1efc7f3c5e0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1efc7f3c968 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1efc7f3cc48 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1efc7f3ca30 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1efc7f3caa8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1efc7f3ce90 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1efc7f3cd20 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1efc7f3d0d0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1efc7f3cf60 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1efc7f3d258 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1efc7f3d490 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1efc7f3d320 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1efc7f3d398 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1efc7f3d640 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1efc7f3d568 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1efc7f3d8e8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1efc7f3d710 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1efc7f3d788 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1efc7f3dc90 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1efc7f3d9c0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1efc7f3da40 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1efc7f3dab8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1efc7f3df90 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1efc7f3dd70 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f3dde8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1efc7f3f2a8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1efc7f3e068 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1efc7f3f100 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1efc7f3f5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1efc7f3f440 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1efc7f3f658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f3f918 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1efc7f3f798 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1efc7f3fc20 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f3f9e8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1efc7f3fa60 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f3fe70 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f3fcf8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1efc7f3fd70 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f40100 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1efc7f3ff48 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f402b0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1efc7f401d0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f40460 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1efc7f40380 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f407f8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f40530 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f405a8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f40620 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f40ae8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f408d8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f40950 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f409c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f40dd8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f40bc8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f40c40 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f40cb8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f39090 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f40eb8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f40f30 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f40fa8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f39390 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f39170 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f391e8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f395e0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f39468 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f394e0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f39830 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f396b8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f39730 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f39a80 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f39908 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f39980 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f39e38 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f39b58 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1efc7f39bd0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f39c48 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f41320 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f39f18 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1efc7f39f90 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f3a008 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f41110 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f416d8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f41408 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f41480 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f414f8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f419c8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f417b8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f41830 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f418a8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f41cb8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f41aa8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f41b20 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f41b98 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f42040 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f41d98 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f41e10 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f41e88 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f41f00 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f424d0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f42148 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f421c0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f42238 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f422b0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f429d8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f425b8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f42630 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f426a8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f42720 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f42798 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f42d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f42b88 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1efc7f42c00 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f42c78 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1efc7f42e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f3b2e0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f43050 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1efc7f3b0b0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f3b128 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f3b1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1efc7f3b3a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f3b658 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f3b4e0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1efc7f3b558 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f3b810 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1efc7f3b730 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f3baf0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f3b8e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f3b958 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f3b9d0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f3bd48 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f3bbd0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f3bc48 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f058e0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f3be20 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f3be98 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f3bf10 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f05c68 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f059c0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f05a38 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f05ab0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f05b28 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f05e30 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1efc7f05d50 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f06078 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f05f00 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f05f78 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f06380 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f06150 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f061c8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f065d0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f06458 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f064d0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f06820 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f066a8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f06720 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f08c08 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f08938 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f089b0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f08a28 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f08ef8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f08ce8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f08d60 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f08dd8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f091e8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f08fd8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f09050 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f090c8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f095a8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f092c8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f09340 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f093b8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f028b0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f09688 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f09700 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f09778 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f02ba0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f02990 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f02a08 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f02a80 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f02ff0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f02c80 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f02cf8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f02d70 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f02de8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f03380 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f030d8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f03150 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f031c8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f03240 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f03710 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f03468 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f034e0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f03558 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f035d0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f06c00 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f037f8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f068f0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f06968 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f069e0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f06f90 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f06ce8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f06d60 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f06dd8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f06e50 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f07320 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f07078 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f070f0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f07168 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f071e0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f07828 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f07408 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f07480 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f074f8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f07570 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f075e8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f01c08 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f018c8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f01940 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f019b8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f01a30 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f01aa8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f02038 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f01cf8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f01d70 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f01de8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f01e60 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f01ed8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f022a0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f02128 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f021a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f024f0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f02378 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f023f0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f027d8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f025c8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f02640 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f026b8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f09cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f09a10 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f09a88 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f09b00 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f09b78 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7f09d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f0a2e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f09ec0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f09f38 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f09fb0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f0a028 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f0a0a0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f0a820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f0a4e0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f0a558 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f0a5d0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0a648 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1efc7f0a6c0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1efc7f07900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f07f10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f07a48 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1efc7f07ac0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f07b38 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f07bb0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f07c28 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f07ca0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f08410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f081d8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1efc7f08250 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1efc7f084c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1efc7f085d8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1efc7f0ab98 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f08890 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1efc7f0a940 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0a9b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1efc7f0ac50 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1efc7f0ad68 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1efc7f0b308 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f0b028 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1efc7f0b0a0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0b118 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1efc7f0b3c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1efc7f0b4e0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1efc7f03ad0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f0b7a0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1efc7f0b818 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0b890 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1efc7f038c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1efc7f03b90 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1efc7f03cb0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1efc7f03fb8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1efc7f03dd8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1efc7f03e50 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f03ec8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1efc7f0ec10 <line:37:1, line:44:1>
|   |-DeclStmt 0x1efc7f04100 <line:38:5, col:21>
|   | `-VarDecl 0x1efc7f04098 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1efc7f04198 <line:39:5, col:13>
|   | `-VarDecl 0x1efc7f04130 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1efc7f044f0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1efc7f044d8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1efc7f043f0 <col:34> '<builtin fn type>' Function 0x1efc7f04288 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1efc7f04428 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1efc7f04098 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1efc7f04460 <col:29> 'const wchar_t *' lvalue ParmVar 0x1efc7f03ec8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1efc7f047b0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1efc7f04520 <col:5> 'int' lvalue Var 0x1efc7f04130 '_Ret' 'int'
|   | `-CallExpr 0x1efc7f046f0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1efc7f046d8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1efc7f04558 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1efc7f07828 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1efc7f04738 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1efc7f04578 <col:27> 'wchar_t *' lvalue ParmVar 0x1efc7f03dd8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1efc7f04750 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1efc7f04598 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1efc7f03e50 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1efc7f04768 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1efc7f045b8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1efc7f03ec8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1efc7f04780 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1efc7f04640 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1efc7f04618 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1efc7f045d8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1efc7f04798 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1efc7f04660 <col:59> 'va_list':'char *' lvalue Var 0x1efc7f04098 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1efc7f0eba0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1efc7f0eb88 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1efc7f0ead8 <col:34> '<builtin fn type>' Function 0x1efc7f0e970 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1efc7f0eb10 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1efc7f04098 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1efc7f0ec00 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1efc7f0ebe8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1efc7f0ebc8 <col:12> 'int' lvalue Var 0x1efc7f04130 '_Ret' 'int'
|-FunctionDecl 0x1efc7f04288 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1efc7f04328 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1efc7f04398 <col:34> Implicit
|-FunctionDecl 0x1efc7f0e970 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1efc7f0ea10 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1efc7f0ea80 <col:34> Implicit
|-FunctionDecl 0x1efc7f0ef08 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1efc7f0ec60 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1efc7f0ecd8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f0ed50 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0edc8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1efc7f0f1f0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1efc7f0f1e0 <line:51:5, col:62>
|     `-CallExpr 0x1efc7f0f120 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1efc7f0f108 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1efc7f0efe0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1efc7f07828 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1efc7f0f168 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1efc7f0f000 <col:27> 'wchar_t *' lvalue ParmVar 0x1efc7f0ec60 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1efc7f0f180 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1efc7f0f020 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1efc7f0ecd8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1efc7f0f198 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1efc7f0f040 <col:44> 'const wchar_t *' lvalue ParmVar 0x1efc7f0ed50 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1efc7f0f1b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1efc7f0f0c8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1efc7f0f0a0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1efc7f0f060 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1efc7f0f1c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1efc7f0f0e8 <col:59> 'va_list':'char *' lvalue ParmVar 0x1efc7f0edc8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1efc7f0f490 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1efc7f0f218 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1efc7f0f290 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f0f308 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0f380 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1efc7f11a48 <line:61:1, line:68:1>
|   |-DeclStmt 0x1efc7f0f5e0 <line:62:5, col:21>
|   | `-VarDecl 0x1efc7f0f578 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1efc7f0f678 <line:63:5, col:13>
|   | `-VarDecl 0x1efc7f0f610 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1efc7f0f720 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1efc7f0f708 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1efc7f0f690 <col:34> '<builtin fn type>' Function 0x1efc7f04288 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1efc7f0f6b0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1efc7f0f578 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1efc7f0f6e8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1efc7f0f380 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1efc7f0f920 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1efc7f0f750 <col:5> 'int' lvalue Var 0x1efc7f0f610 '_Ret' 'int'
|   | `-CallExpr 0x1efc7f0f860 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1efc7f0f848 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1efc7f0f788 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1efc7f07828 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1efc7f0f8a8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1efc7f0f7a8 <col:27> 'wchar_t *' lvalue ParmVar 0x1efc7f0f218 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1efc7f0f8c0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1efc7f0f7c8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1efc7f0f290 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1efc7f0f8d8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1efc7f0f7e8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1efc7f0f308 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1efc7f0f8f0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1efc7f0f808 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1efc7f0f380 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1efc7f0f908 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1efc7f0f828 <col:64> 'va_list':'char *' lvalue Var 0x1efc7f0f578 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1efc7f119d8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1efc7f119c0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1efc7f0f940 <col:34> '<builtin fn type>' Function 0x1efc7f0e970 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1efc7f119a0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1efc7f0f578 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1efc7f11a38 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1efc7f11a20 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1efc7f11a00 <col:12> 'int' lvalue Var 0x1efc7f0f610 '_Ret' 'int'
|-FunctionDecl 0x1efc7f11dd8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1efc7f11a98 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1efc7f11b10 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f11b88 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f11c00 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1efc7f11c78 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1efc7f12060 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1efc7f12050 <line:75:5, col:67>
|     `-CallExpr 0x1efc7f11f90 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1efc7f11f78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1efc7f11eb8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1efc7f07828 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1efc7f11fd8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1efc7f11ed8 <col:27> 'wchar_t *' lvalue ParmVar 0x1efc7f11a98 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1efc7f11ff0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1efc7f11ef8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1efc7f11b10 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1efc7f12008 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1efc7f11f18 <col:44> 'const wchar_t *' lvalue ParmVar 0x1efc7f11b88 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1efc7f12020 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1efc7f11f38 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1efc7f11c00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1efc7f12038 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1efc7f11f58 <col:64> 'va_list':'char *' lvalue ParmVar 0x1efc7f11c78 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1efc7f122a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1efc7f12088 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f12100 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1efc7f124f8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1efc7f12380 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f123f8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f127e0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1efc7f125d0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f12648 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1efc7f126c0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1efc7f0dad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f0d960 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f0d9d8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1efc7f0db88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f0df98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f0dd88 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f0de00 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0de78 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7f0e050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f0e308 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f0e190 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1efc7f0e208 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f0e5f0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f0e3e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f0e458 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f0e4d0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f0f9f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f0e790 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0e808 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1efc7f0faa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f0ff78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f0fca0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0fd18 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0fd90 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7f10030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f102e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f10170 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f101e8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f105d0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f103c0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f10438 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f104b0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f10a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f10770 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f107e8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f10860 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1efc7f10b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f110b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f10d30 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f10da8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f10e20 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f10e98 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7f11170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f114c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f112b0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f11328 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f113a0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f11848 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f115a0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f11618 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f11690 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f11708 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f0baf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1efc7f0ba10 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1efc7f0bb98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f0bf10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f0bd98 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f0be10 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1efc7f0bfc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f0c1e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1efc7f0c100 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1efc7f0c428 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1efc7f0c2b0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f0c328 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1efc7f0c728 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1efc7f0c508 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1efc7f0c580 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1efc7f14b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1efc7f0c8c0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f149d0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1efc7f14c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f15030 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1efc7f14d70 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1efc7f14de8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f14e60 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1efc7f15490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1efc7f151d0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f15248 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f152c0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1efc7f15548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f129f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1efc7f15690 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1efc7f15708 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f15780 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f157f8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1efc7f12c50 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1efc7f12ae0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1efc7f12e90 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1efc7f12d20 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f12d98 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1efc7f13048 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1efc7f12f68 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1efc7f13338 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1efc7f13118 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1efc7f13190 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1efc7f135a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1efc7f134d0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1efc7f13650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1efc7f13868 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1efc7f13790 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1efc7f13ab8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1efc7f13938 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1efc7f139c0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1efc7f13d00 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1efc7f13b90 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1efc7f13c08 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1efc7f13eb0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1efc7f13dd8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1efc7f14058 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1efc7f13f80 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1efc7f14208 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7f14128 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1efc7f143b8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1efc7f142d8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1efc7f14730 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1efc7f14490 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1efc7f14508 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f14580 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f145f8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1efc7f18be0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1efc7f14820 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1efc7f14898 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f14910 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f18a10 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f18a88 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1efc7f18ef0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1efc7f18cd0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f18d50 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1efc7f18dd0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1efc7f190b0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1efc7f18fd0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1efc7f193a0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1efc7f19180 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1efc7f19200 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1efc7f19280 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1efc7f19560 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1efc7f19480 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1efc7f198d8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1efc7f19638 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1efc7f196b0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1efc7f19728 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1efc7f197a0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1efc7f1aba8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1efc7f1aa30 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1efc7f1aaa8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1efc7f1aee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1efc7f1ad60 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1efc7f1ade0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1efc7f1af90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1efc7f1b248 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1efc7f1b2e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1efc7f1b628 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1efc7f1b4b0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1efc7f1b530 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1efc7f1b6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1efc7f169f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1efc7f16a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1efc7f16d30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1efc7f16c50 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1efc7f16dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1efc7f17058 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1efc7f170f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1efc7f173a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1efc7f172c0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1efc7f17448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1efc7f17728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1efc7f17648 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1efc7f177d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1efc7f1bbb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1efc7f1ba40 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1efc7f1bab8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1efc7f1bc68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1efc7f1bf28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1efc7f1bfc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1efc7f1c200 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1efc7f1c410 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1efc7f1c2d0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1efc7f1c660 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1efc7f1c4e8 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1efc7f6d000 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1efc7f1c730 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1efc7f1c7a8 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1efc7f1c828 <col:98, col:107> col:107 _Line 'unsigned int'
|-FunctionDecl 0x1efc7f6d2d0 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:81:1, col:53> col:12 invalid ok_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1efc7f6d0e8 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x1efc7f6d168 <col:29, col:41> col:41 buf 'const char *'
| `-ParmVarDecl 0x1efc7f6d1e8 <col:46, col:50> col:50 num 'int'
|-FunctionDecl 0x1efc7f6d590 <line:82:1, col:47> col:12 invalid ok_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1efc7f6d3a0 <col:20, col:25> col:25 invalid h 'int *'
| |-ParmVarDecl 0x1efc7f6d420 <col:28, col:34> col:34 buf 'char *'
| `-ParmVarDecl 0x1efc7f6d4a0 <col:39, col:43> col:43 size 'int'
|-FunctionDecl 0x1efc7f6d8e0 <line:83:1, col:59> col:13 invalid ok_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1efc7f6d660 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x1efc7f6d6e0 <col:29, col:33> col:33 cmd 'int'
| |-ParmVarDecl 0x1efc7f6d760 <col:38, col:43> col:43 arg1 'long'
| `-ParmVarDecl 0x1efc7f6d7e0 <col:49, col:55> col:55 arg2 'void *'
|-FunctionDecl 0x1efc7f6da50 <line:84:1, col:25> col:12 invalid ok_new 'int (int *)' static
| `-ParmVarDecl 0x1efc7f6d9b8 <col:19, col:24> col:24 invalid h 'int *'
|-FunctionDecl 0x1efc7f6dba8 <line:85:1, col:29> col:12 invalid ok_free 'int (int *)' static
| `-ParmVarDecl 0x1efc7f6db10 <col:20, col:25> col:25 invalid data 'int *'
|-FunctionDecl 0x1efc7f6de50 <line:86:1, col:62> col:13 invalid ok_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1efc7f6dc68 <col:30, col:35> col:35 invalid h 'int *'
| |-ParmVarDecl 0x1efc7f6dce8 <col:38, col:42> col:42 cmd 'int'
| `-ParmVarDecl 0x1efc7f6dd68 <col:47, col:60> col:60 invalid fp 'int *'
|-FunctionDecl 0x1efc7f75080 <line:88:1, col:33> col:19 invalid sig_out 'int (int *)' static
| `-ParmVarDecl 0x1efc7f6df20 <col:27, col:32> col:32 invalid b 'int *'
|-FunctionDecl 0x1efc7f751d8 <line:89:1, col:32> col:19 invalid sig_in 'int (int *)' static
| `-ParmVarDecl 0x1efc7f75140 <col:26, col:31> col:31 invalid b 'int *'
|-FunctionDecl 0x1efc7f75330 <line:90:1, col:35> col:19 invalid block_out 'int (int *)' static
| `-ParmVarDecl 0x1efc7f75298 <col:29, col:34> col:34 invalid b 'int *'
|-FunctionDecl 0x1efc7f75488 <line:91:1, col:34> col:19 invalid block_in 'int (int *)' static
| `-ParmVarDecl 0x1efc7f753f0 <col:28, col:33> col:33 invalid b 'int *'
|-RecordDecl 0x1efc7f75530 <line:97:9, line:108:1> line:97:16 invalid struct ok_struct definition
| |-FieldDecl 0x1efc7f75600 <line:98:5, col:12> col:12 referenced buf_len 'size_t':'unsigned long long'
| |-FieldDecl 0x1efc7f75668 <line:99:5, col:12> col:12 referenced buf_off 'size_t':'unsigned long long'
| |-FieldDecl 0x1efc7f756d0 <line:100:5, col:12> col:12 referenced buf_len_save 'size_t':'unsigned long long'
| |-FieldDecl 0x1efc7f75738 <line:101:5, col:12> col:12 referenced buf_off_save 'size_t':'unsigned long long'
| |-FieldDecl 0x1efc7f757a8 <line:102:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x1efc7f75818 <line:103:5, col:9> col:9 referenced finished 'int'
| |-FieldDecl 0x1efc7f75888 <line:104:5, col:17> col:17 invalid md 'int *'
| |-FieldDecl 0x1efc7f758f8 <line:105:5, col:9> col:9 referenced blockout 'int'
| |-FieldDecl 0x1efc7f75968 <line:106:5, col:9> col:9 referenced sigio 'int'
| `-FieldDecl 0x1efc7f75ad8 <line:107:5, col:19> col:19 invalid buf 'unsigned char'
|-TypedefDecl 0x1efc7f75b88 <line:97:1, line:108:3> col:3 referenced BIO_OK_CTX 'struct ok_struct':'struct ok_struct'
| `-ElaboratedType 0x1efc7f75b30 'struct ok_struct' sugar
|   `-RecordType 0x1efc7f755d0 'struct ok_struct'
|     `-Record 0x1efc7f75530 'ok_struct'
|-VarDecl 0x1efc7f75c10 <line:110:1, col:25> col:25 invalid methods_ok 'const int' static
|-FunctionDecl 0x1efc7f75eb0 <line:123:1, line:126:1> line:123:19 invalid BIO_f_reliable 'const int *(void)'
| `-CompoundStmt 0x1efc7f75f68 <line:124:1, line:126:1>
|-FunctionDecl 0x1efc7f6f020 <line:128:1, line:147:1> line:128:12 invalid ok_new 'int (int *)' static
| |-ParmVarDecl 0x1efc7f75f90 <col:19, col:24> col:24 invalid bi 'int *'
| `-CompoundStmt 0x1efc7f6fe28 <line:129:1, line:147:1>
|   |-DeclStmt 0x1efc7f6f1d0 <line:130:5, col:20>
|   | `-VarDecl 0x1efc7f6f168 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-BinaryOperator 0x1efc7f6f470 <line:132:5, col:38> 'BIO_OK_CTX *' '='
|   | |-DeclRefExpr 0x1efc7f6f1e8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f6f168 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1efc7f6f458 <col:11, col:38> 'BIO_OK_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x1efc7f6f430 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x1efc7f6f418 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1efc7f6f338 <col:11> 'int ()' Function 0x1efc7f6f270 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x1efc7f6f3c8 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x1efc7f6f3a8 <col:32, col:37> 'BIO_OK_CTX':'struct ok_struct' lvalue
|   |         `-UnaryOperator 0x1efc7f6f390 <col:33, col:34> 'BIO_OK_CTX':'struct ok_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x1efc7f6f378 <col:34> 'BIO_OK_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x1efc7f6f358 <col:34> 'BIO_OK_CTX *' lvalue Var 0x1efc7f6f168 'ctx' 'BIO_OK_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x1efc7f6f5c0 <line:133:5, line:134:16>
|   | |-BinaryOperator 0x1efc7f6f568 <line:133:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1efc7f6f538 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:133:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1efc7f6f490 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f6f168 'ctx' 'BIO_OK_CTX *'
|   | | `-ImplicitCastExpr 0x1efc7f6f550 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_OK_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1efc7f6f518 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1efc7f6f4f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1efc7f6f4b0 <col:26> 'int' 0
|   | `-ReturnStmt 0x1efc7f6f5b0 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:134:9, col:16>
|   |   `-IntegerLiteral 0x1efc7f6f588 <col:16> 'int' 0
|   |-BinaryOperator 0x1efc7f6f668 <line:136:5, col:17> 'int' '='
|   | |-MemberExpr 0x1efc7f6f610 <col:5, col:10> 'int' lvalue ->cont 0x1efc7f757a8
|   | | `-ImplicitCastExpr 0x1efc7f6f5f8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1efc7f6f5d8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f6f168 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x1efc7f6f640 <col:17> 'int' 1
|   |-BinaryOperator 0x1efc7f6f718 <line:137:5, col:18> 'int' '='
|   | |-MemberExpr 0x1efc7f6f6c0 <col:5, col:10> 'int' lvalue ->sigio 0x1efc7f75968
|   | | `-ImplicitCastExpr 0x1efc7f6f6a8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1efc7f6f688 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f6f168 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x1efc7f6f6f0 <col:18> 'int' 1
|   |-IfStmt 0x1efc7f6fb70 <line:139:5, line:142:5>
|   | |-OpaqueValueExpr 0x1efc7f6fb58 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1efc7f6fb38 <line:139:26, line:142:5>
|   |   |-CallExpr 0x1efc7f6fac0 <line:140:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1efc7f6faa8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1efc7f6fa68 <col:9> 'int ()' Function 0x1efc7f6f9a0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1efc7f6fae8 <col:22> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1efc7f6fa88 <col:22> 'BIO_OK_CTX *' lvalue Var 0x1efc7f6f168 'ctx' 'BIO_OK_CTX *'
|   |   `-ReturnStmt 0x1efc7f6fb28 <line:141:9, col:16>
|   |     `-IntegerLiteral 0x1efc7f6fb00 <col:16> 'int' 0
|   `-ReturnStmt 0x1efc7f6fe18 <line:146:5, col:12>
|     `-IntegerLiteral 0x1efc7f6fdf0 <col:12> 'int' 1
|-FunctionDecl 0x1efc7f6ff20 <line:149:1, line:164:1> line:149:12 invalid ok_free 'int (int *)' static
| |-ParmVarDecl 0x1efc7f6fe88 <col:20, col:25> col:25 invalid a 'int *'
| `-CompoundStmt 0x1efc7f77788 <line:150:1, line:164:1>
|   |-DeclStmt 0x1efc7f77108 <line:151:5, col:20>
|   | `-VarDecl 0x1efc7f770a0 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x1efc7f771f8 <line:153:5, line:154:16>
|   | |-OpaqueValueExpr 0x1efc7f771e0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1efc7f771d0 <col:9, col:16>
|   |   `-IntegerLiteral 0x1efc7f771a8 <col:16> 'int' 0
|   |-CallExpr 0x1efc7f77618 <line:159:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x1efc7f77600 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1efc7f77590 <col:5> 'int ()' Function 0x1efc7f774c8 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x1efc7f77648 <col:24> 'BIO_OK_CTX *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1efc7f775b0 <col:24> 'BIO_OK_CTX *' lvalue Var 0x1efc7f770a0 'ctx' 'BIO_OK_CTX *'
|   | `-UnaryExprOrTypeTraitExpr 0x1efc7f775e0 <col:29, col:46> 'unsigned long long' sizeof 'BIO_OK_CTX':'struct ok_struct'
|   `-ReturnStmt 0x1efc7f77778 <line:163:5, col:12>
|     `-IntegerLiteral 0x1efc7f77750 <col:12> 'int' 1
|-FunctionDecl 0x1efc7f77978 <line:166:1, line:250:1> line:166:12 invalid ok_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1efc7f777d0 <col:20, col:25> col:25 invalid b 'int *'
| |-ParmVarDecl 0x1efc7f77850 <col:28, col:34> col:34 used out 'char *'
| |-ParmVarDecl 0x1efc7f778d0 <col:39, col:43> col:43 used outl 'int'
| `-CompoundStmt 0x1efc7f713d0 <line:167:1, line:250:1>
|   |-DeclStmt 0x1efc7f77c10 <line:168:5, col:22>
|   | |-VarDecl 0x1efc7f77a60 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1efc7f77ac8 <col:15> 'int' 0
|   | |-VarDecl 0x1efc7f77b08 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x1efc7f77b88 <col:5, col:21> col:21 used n 'int'
|   |-DeclStmt 0x1efc7f77ca0 <line:169:5, col:20>
|   | `-VarDecl 0x1efc7f77c38 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x1efc7f77e00 <line:172:5, line:173:16>
|   | |-BinaryOperator 0x1efc7f77da8 <line:172:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1efc7f77d78 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:172:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1efc7f77cb8 <col:9> 'char *' lvalue ParmVar 0x1efc7f77850 'out' 'char *'
|   | | `-ImplicitCastExpr 0x1efc7f77d90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1efc7f77d58 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1efc7f77d30 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1efc7f77cf0 <col:26> 'int' 0
|   | `-ReturnStmt 0x1efc7f77df0 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:173:9, col:16>
|   |   `-IntegerLiteral 0x1efc7f77dc8 <col:16> 'int' 0
|   |-IfStmt 0x1efc7f70240 <line:178:5, line:179:16>
|   | |-OpaqueValueExpr 0x1efc7f70228 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1efc7f70218 <col:9, col:16>
|   |   `-IntegerLiteral 0x1efc7f701f0 <col:16> 'int' 0
|   |-WhileStmt 0x1efc7f71240 <line:181:5, line:245:5>
|   | |-BinaryOperator 0x1efc7f702d0 <line:181:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x1efc7f702b8 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1efc7f70258 <col:12> 'int' lvalue ParmVar 0x1efc7f778d0 'outl' 'int'
|   | | `-IntegerLiteral 0x1efc7f70290 <col:19> 'int' 0
|   | `-CompoundStmt 0x1efc7f711f8 <col:22, line:245:5>
|   |   |-IfStmt 0x1efc7f78778 <line:184:9, line:210:9>
|   |   | |-ImplicitCastExpr 0x1efc7f70358 <line:184:13, col:18> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x1efc7f70328 <col:13, col:18> 'int' lvalue ->blockout 0x1efc7f758f8
|   |   | |   `-ImplicitCastExpr 0x1efc7f70310 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1efc7f702f0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   | `-CompoundStmt 0x1efc7f78730 <col:28, line:210:9>
|   |   |   |-BinaryOperator 0x1efc7f704e0 <line:185:13, col:37> 'int' '='
|   |   |   | |-DeclRefExpr 0x1efc7f70370 <col:13> 'int' lvalue Var 0x1efc7f77b08 'i' 'int'
|   |   |   | `-ImplicitCastExpr 0x1efc7f704c8 <col:17, col:37> 'int' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1efc7f704a8 <col:17, col:37> 'unsigned long long' '-'
|   |   |   |     |-ImplicitCastExpr 0x1efc7f70478 <col:17, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |     | `-MemberExpr 0x1efc7f703e0 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   |   |   |     |   `-ImplicitCastExpr 0x1efc7f703c8 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |     |     `-DeclRefExpr 0x1efc7f703a8 <col:17> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |   |     `-ImplicitCastExpr 0x1efc7f70490 <col:32, col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x1efc7f70448 <col:32, col:37> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   |   |   |         `-ImplicitCastExpr 0x1efc7f70430 <col:32> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x1efc7f70410 <col:32> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |   |-IfStmt 0x1efc7f70608 <line:186:13, line:187:21>
|   |   |   | |-BinaryOperator 0x1efc7f70570 <line:186:17, col:21> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x1efc7f70540 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1efc7f70500 <col:17> 'int' lvalue Var 0x1efc7f77b08 'i' 'int'
|   |   |   | | `-ImplicitCastExpr 0x1efc7f70558 <col:21> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1efc7f70520 <col:21> 'int' lvalue ParmVar 0x1efc7f778d0 'outl' 'int'
|   |   |   | `-BinaryOperator 0x1efc7f705e8 <line:187:17, col:21> 'int' '='
|   |   |   |   |-DeclRefExpr 0x1efc7f70590 <col:17> 'int' lvalue Var 0x1efc7f77b08 'i' 'int'
|   |   |   |   `-ImplicitCastExpr 0x1efc7f705d0 <col:21> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1efc7f705b0 <col:21> 'int' lvalue ParmVar 0x1efc7f778d0 'outl' 'int'
|   |   |   |-CompoundAssignOperator 0x1efc7f709d8 <line:189:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x1efc7f70968 <col:13> 'int' lvalue Var 0x1efc7f77a60 'ret' 'int'
|   |   |   | `-ImplicitCastExpr 0x1efc7f709c0 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1efc7f709a0 <col:20> 'int' lvalue Var 0x1efc7f77b08 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1efc7f70a60 <line:190:13, col:20> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |   | |-DeclRefExpr 0x1efc7f70a08 <col:13> 'char *' lvalue ParmVar 0x1efc7f77850 'out' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1efc7f70a48 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1efc7f70a28 <col:20> 'int' lvalue Var 0x1efc7f77b08 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1efc7f70ae8 <line:191:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x1efc7f70a90 <col:13> 'int' lvalue ParmVar 0x1efc7f778d0 'outl' 'int'
|   |   |   | `-ImplicitCastExpr 0x1efc7f70ad0 <col:21> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1efc7f70ab0 <col:21> 'int' lvalue Var 0x1efc7f77b08 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1efc7f70bd0 <line:192:13, col:29> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-MemberExpr 0x1efc7f70b50 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   |   |   | | `-ImplicitCastExpr 0x1efc7f70b38 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1efc7f70b18 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1efc7f70bb8 <col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1efc7f70ba0 <col:29> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1efc7f70b80 <col:29> 'int' lvalue Var 0x1efc7f77b08 'i' 'int'
|   |   |   `-IfStmt 0x1efc7f78718 <line:195:13, line:209:13>
|   |   |     |-BinaryOperator 0x1efc7f70d00 <line:195:17, col:38> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1efc7f70cd0 <col:17, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x1efc7f70c38 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   |   |     | |   `-ImplicitCastExpr 0x1efc7f70c20 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x1efc7f70c00 <col:17> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |     | `-ImplicitCastExpr 0x1efc7f70ce8 <col:33, col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |   `-MemberExpr 0x1efc7f70ca0 <col:33, col:38> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   |   |     |     `-ImplicitCastExpr 0x1efc7f70c88 <col:33> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x1efc7f70c68 <col:33> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |     `-CompoundStmt 0x1efc7f786f0 <col:47, line:209:13>
|   |   |       |-BinaryOperator 0x1efc7f70dc8 <line:196:17, col:32> 'size_t':'unsigned long long' '='
|   |   |       | |-MemberExpr 0x1efc7f70d58 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   |   |       | | `-ImplicitCastExpr 0x1efc7f70d40 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x1efc7f70d20 <col:17> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |       | `-ImplicitCastExpr 0x1efc7f70db0 <col:32> 'size_t':'unsigned long long' <IntegralCast>
|   |   |       |   `-IntegerLiteral 0x1efc7f70d88 <col:32> 'int' 0
|   |   |       |-IfStmt 0x1efc7f78618 <line:201:17, line:207:17> has_else
|   |   |       | |-BinaryOperator 0x1efc7f70f48 <line:201:21, col:61> 'int' '>'
|   |   |       | | |-BinaryOperator 0x1efc7f70ee8 <col:21, col:46> 'unsigned long long' '-'
|   |   |       | | | |-ImplicitCastExpr 0x1efc7f70eb8 <col:21, col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | | | | `-MemberExpr 0x1efc7f70e20 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x1efc7f756d0
|   |   |       | | | |   `-ImplicitCastExpr 0x1efc7f70e08 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | | | |     `-DeclRefExpr 0x1efc7f70de8 <col:21> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |       | | | `-ImplicitCastExpr 0x1efc7f70ed0 <col:41, col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | | |   `-MemberExpr 0x1efc7f70e88 <col:41, col:46> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x1efc7f75738
|   |   |       | | |     `-ImplicitCastExpr 0x1efc7f70e70 <col:41> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | | |       `-DeclRefExpr 0x1efc7f70e50 <col:41> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |       | | `-ImplicitCastExpr 0x1efc7f70f30 <col:61> 'unsigned long long' <IntegralCast>
|   |   |       | |   `-IntegerLiteral 0x1efc7f70f08 <col:61> 'int' 0
|   |   |       | |-CompoundStmt 0x1efc7f78520 <col:64, line:205:17>
|   |   |       | | `-BinaryOperator 0x1efc7f78198 <line:202:21, col:61> 'size_t':'unsigned long long' '='
|   |   |       | |   |-MemberExpr 0x1efc7f70fa0 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   |   |       | |   | `-ImplicitCastExpr 0x1efc7f70f88 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |   |   `-DeclRefExpr 0x1efc7f70f68 <col:21> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |       | |   `-BinaryOperator 0x1efc7f78178 <col:36, col:61> 'unsigned long long' '-'
|   |   |       | |     |-ImplicitCastExpr 0x1efc7f78148 <col:36, col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | |     | `-MemberExpr 0x1efc7f780b0 <col:36, col:41> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x1efc7f756d0
|   |   |       | |     |   `-ImplicitCastExpr 0x1efc7f70ff0 <col:36> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |     |     `-DeclRefExpr 0x1efc7f70fd0 <col:36> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |       | |     `-ImplicitCastExpr 0x1efc7f78160 <col:56, col:61> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | |       `-MemberExpr 0x1efc7f78118 <col:56, col:61> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x1efc7f75738
|   |   |       | |         `-ImplicitCastExpr 0x1efc7f78100 <col:56> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |           `-DeclRefExpr 0x1efc7f780e0 <col:56> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |       | `-CompoundStmt 0x1efc7f78600 <line:205:24, line:207:17>
|   |   |       |   `-BinaryOperator 0x1efc7f785e0 <line:206:21, col:36> 'size_t':'unsigned long long' '='
|   |   |       |     |-MemberExpr 0x1efc7f78570 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   |   |       |     | `-ImplicitCastExpr 0x1efc7f78558 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       |     |   `-DeclRefExpr 0x1efc7f78538 <col:21> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |       |     `-ImplicitCastExpr 0x1efc7f785c8 <col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   |       |       `-IntegerLiteral 0x1efc7f785a0 <col:36> 'int' 0
|   |   |       `-BinaryOperator 0x1efc7f786d0 <line:208:17, col:33> 'int' '='
|   |   |         |-MemberExpr 0x1efc7f78678 <col:17, col:22> 'int' lvalue ->blockout 0x1efc7f758f8
|   |   |         | `-ImplicitCastExpr 0x1efc7f78660 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x1efc7f78640 <col:17> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   |         `-IntegerLiteral 0x1efc7f786a8 <col:33> 'int' 0
|   |   |-IfStmt 0x1efc7f78818 <line:213:9, line:214:13>
|   |   | |-BinaryOperator 0x1efc7f787f0 <line:213:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1efc7f787d8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1efc7f78790 <col:13> 'int' lvalue ParmVar 0x1efc7f778d0 'outl' 'int'
|   |   | | `-IntegerLiteral 0x1efc7f787b0 <col:21> 'int' 0
|   |   | `-BreakStmt 0x1efc7f78810 <line:214:13>
|   |   |-IfStmt 0x1efc7f78c48 <line:220:9, line:221:13>
|   |   | |-BinaryOperator 0x1efc7f78c20 <line:220:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1efc7f78c08 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1efc7f78bc0 <col:13> 'int' lvalue Var 0x1efc7f77b08 'i' 'int'
|   |   | | `-IntegerLiteral 0x1efc7f78be0 <col:18> 'int' 0
|   |   | `-BreakStmt 0x1efc7f78c40 <line:221:13>
|   |   |-CompoundAssignOperator 0x1efc7f78d18 <line:223:9, col:25> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-MemberExpr 0x1efc7f78c98 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   |   | | `-ImplicitCastExpr 0x1efc7f78c80 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f78c60 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x1efc7f78d00 <col:25> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1efc7f78ce8 <col:25> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1efc7f78cc8 <col:25> 'int' lvalue Var 0x1efc7f77b08 'i' 'int'
|   |   |-IfStmt 0x1efc7f78fb8 <line:226:9, line:231:9>
|   |   | |-BinaryOperator 0x1efc7f78df0 <line:226:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1efc7f78dd8 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1efc7f78d80 <col:13, col:18> 'int' lvalue ->sigio 0x1efc7f75968
|   |   | | |   `-ImplicitCastExpr 0x1efc7f78d68 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1efc7f78d48 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x1efc7f78db0 <col:27> 'int' 1
|   |   | `-CompoundStmt 0x1efc7f78fa0 <col:30, line:231:9>
|   |   |   `-IfStmt 0x1efc7f78f88 <line:227:13, line:230:13>
|   |   |     |-OpaqueValueExpr 0x1efc7f78f70 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x1efc7f78f58 <line:227:29, line:230:13>
|   |   |       `-ReturnStmt 0x1efc7f78f48 <line:229:17, col:24>
|   |   |         `-IntegerLiteral 0x1efc7f78f20 <col:24> 'int' 0
|   |   |-IfStmt 0x1efc7f710f8 <line:234:9, line:239:9>
|   |   | |-BinaryOperator 0x1efc7f79078 <line:234:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1efc7f79060 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1efc7f79008 <col:13, col:18> 'int' lvalue ->sigio 0x1efc7f75968
|   |   | | |   `-ImplicitCastExpr 0x1efc7f78ff0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1efc7f78fd0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x1efc7f79038 <col:27> 'int' 0
|   |   | `-CompoundStmt 0x1efc7f710e0 <col:30, line:239:9>
|   |   |   `-IfStmt 0x1efc7f710c8 <line:235:13, line:238:13>
|   |   |     |-OpaqueValueExpr 0x1efc7f710b0 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x1efc7f71098 <line:235:31, line:238:13>
|   |   |       `-ReturnStmt 0x1efc7f71088 <line:237:17, col:24>
|   |   |         `-IntegerLiteral 0x1efc7f71060 <col:24> 'int' 0
|   |   `-IfStmt 0x1efc7f711e0 <line:242:9, line:243:13>
|   |     |-BinaryOperator 0x1efc7f711b8 <line:242:13, col:26> 'int' '<='
|   |     | |-ImplicitCastExpr 0x1efc7f711a0 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x1efc7f71148 <col:13, col:18> 'int' lvalue ->cont 0x1efc7f757a8
|   |     | |   `-ImplicitCastExpr 0x1efc7f71130 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1efc7f71110 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f77c38 'ctx' 'BIO_OK_CTX *'
|   |     | `-IntegerLiteral 0x1efc7f71178 <col:26> 'int' 0
|   |     `-BreakStmt 0x1efc7f711d8 <line:243:13>
|   `-ReturnStmt 0x1efc7f713c0 <line:249:5, col:12>
|     `-ImplicitCastExpr 0x1efc7f713a8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1efc7f71388 <col:12> 'int' lvalue Var 0x1efc7f77a60 'ret' 'int'
|-FunctionDecl 0x1efc7f70660 <line:188:13> col:13 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1efc7f70700 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1efc7f70768 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1efc7f707d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1efc7f781b8 <line:203:21> col:21 implicit used memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1efc7f78258 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1efc7f782c0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1efc7f78328 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1efc7f715d0 <line:252:1, line:315:1> line:252:12 invalid ok_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1efc7f71428 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x1efc7f714a8 <col:29, col:41> col:41 used in 'const char *'
| |-ParmVarDecl 0x1efc7f71528 <col:45, col:49> col:49 used inl 'int'
| `-CompoundStmt 0x1efc7f79a78 <line:253:1, line:315:1>
|   |-DeclStmt 0x1efc7f71868 <line:254:5, col:22>
|   | |-VarDecl 0x1efc7f716b8 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1efc7f71720 <col:15> 'int' 0
|   | |-VarDecl 0x1efc7f71760 <col:5, col:18> col:18 used n 'int'
|   | `-VarDecl 0x1efc7f717e0 <col:5, col:21> col:21 used i 'int'
|   |-DeclStmt 0x1efc7f718f8 <line:255:5, col:20>
|   | `-VarDecl 0x1efc7f71890 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x1efc7f719f0 <line:258:5, line:259:16>
|   | |-BinaryOperator 0x1efc7f71988 <line:258:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1efc7f71970 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1efc7f71910 <col:9> 'int' lvalue ParmVar 0x1efc7f71528 'inl' 'int'
|   | | `-IntegerLiteral 0x1efc7f71948 <col:16> 'int' 0
|   | `-ReturnStmt 0x1efc7f719e0 <line:259:9, col:16>
|   |   `-ImplicitCastExpr 0x1efc7f719c8 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1efc7f719a8 <col:16> 'int' lvalue ParmVar 0x1efc7f71528 'inl' 'int'
|   |-BinaryOperator 0x1efc7f71af0 <line:263:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1efc7f71a80 <col:5> 'int' lvalue Var 0x1efc7f716b8 'ret' 'int'
|   | `-ImplicitCastExpr 0x1efc7f71ad8 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1efc7f71ab8 <col:11> 'int' lvalue ParmVar 0x1efc7f71528 'inl' 'int'
|   |-IfStmt 0x1efc7f71d68 <line:265:5, line:266:18>
|   | |-OpaqueValueExpr 0x1efc7f71d50 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1efc7f71d40 <col:9, col:18>
|   |   `-ParenExpr 0x1efc7f71d20 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1efc7f71cf8 <col:17> 'int' 0
|   |-IfStmt 0x1efc7f71e38 <line:268:5, line:269:16>
|   | |-OpaqueValueExpr 0x1efc7f71e20 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1efc7f71e10 <col:9, col:16>
|   |   `-IntegerLiteral 0x1efc7f71de8 <col:16> 'int' 0
|   |-DoStmt 0x1efc7f799b0 <line:271:5, line:310:21>
|   | |-CompoundStmt 0x1efc7f798d0 <line:271:8, line:310:5>
|   | | |-BinaryOperator 0x1efc7f71fe0 <line:273:9, col:33> 'int' '='
|   | | | |-DeclRefExpr 0x1efc7f71e70 <col:9> 'int' lvalue Var 0x1efc7f71760 'n' 'int'
|   | | | `-ImplicitCastExpr 0x1efc7f71fc8 <col:13, col:33> 'int' <IntegralCast>
|   | | |   `-BinaryOperator 0x1efc7f71fa8 <col:13, col:33> 'unsigned long long' '-'
|   | | |     |-ImplicitCastExpr 0x1efc7f71f78 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |     | `-MemberExpr 0x1efc7f71ee0 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | |     |   `-ImplicitCastExpr 0x1efc7f71ec8 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x1efc7f71ea8 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x1efc7f71f90 <col:28, col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       `-MemberExpr 0x1efc7f71f48 <col:28, col:33> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   | | |         `-ImplicitCastExpr 0x1efc7f71f30 <col:28> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x1efc7f71f10 <col:28> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | |-WhileStmt 0x1efc7f7a888 <line:274:9, line:284:9>
|   | | | |-BinaryOperator 0x1efc7f7a198 <line:274:16, col:37> 'int' '&&'
|   | | | | |-ImplicitCastExpr 0x1efc7f7a180 <col:16, col:21> 'int' <LValueToRValue>
|   | | | | | `-MemberExpr 0x1efc7f7a0d0 <col:16, col:21> 'int' lvalue ->blockout 0x1efc7f758f8
|   | | | | |   `-ImplicitCastExpr 0x1efc7f72020 <col:16> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x1efc7f72000 <col:16> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | | | `-BinaryOperator 0x1efc7f7a160 <col:33, col:37> 'int' '>'
|   | | | |   |-ImplicitCastExpr 0x1efc7f7a148 <col:33> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x1efc7f7a100 <col:33> 'int' lvalue Var 0x1efc7f71760 'n' 'int'
|   | | | |   `-IntegerLiteral 0x1efc7f7a120 <col:37> 'int' 0
|   | | | `-CompoundStmt 0x1efc7f7a860 <col:40, line:284:9>
|   | | |   |-IfStmt 0x1efc7f7a6d8 <line:276:13, line:281:13>
|   | | |   | |-BinaryOperator 0x1efc7f7a420 <line:276:17, col:22> 'int' '<='
|   | | |   | | |-ImplicitCastExpr 0x1efc7f7a408 <col:17> 'int' <LValueToRValue>
|   | | |   | | | `-DeclRefExpr 0x1efc7f7a3c0 <col:17> 'int' lvalue Var 0x1efc7f717e0 'i' 'int'
|   | | |   | | `-IntegerLiteral 0x1efc7f7a3e0 <col:22> 'int' 0
|   | | |   | `-CompoundStmt 0x1efc7f7a6b8 <col:25, line:281:13>
|   | | |   |   |-IfStmt 0x1efc7f7a638 <line:278:17, line:279:33>
|   | | |   |   | |-OpaqueValueExpr 0x1efc7f7a620 <<invalid sloc>> '_Bool'
|   | | |   |   | `-BinaryOperator 0x1efc7f7a600 <col:21, col:33> 'int' '='
|   | | |   |   |   |-MemberExpr 0x1efc7f7a5a8 <col:21, col:26> 'int' lvalue ->cont 0x1efc7f757a8
|   | | |   |   |   | `-ImplicitCastExpr 0x1efc7f7a590 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |   |   |   `-DeclRefExpr 0x1efc7f7a570 <col:21> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | |   |   |   `-IntegerLiteral 0x1efc7f7a5d8 <col:33> 'int' 0
|   | | |   |   `-ReturnStmt 0x1efc7f7a6a8 <line:280:17, col:26>
|   | | |   |     `-ImplicitCastExpr 0x1efc7f7a690 <col:24, col:26> 'int' <LValueToRValue>
|   | | |   |       `-ParenExpr 0x1efc7f7a670 <col:24, col:26> 'int' lvalue
|   | | |   |         `-DeclRefExpr 0x1efc7f7a650 <col:25> 'int' lvalue Var 0x1efc7f717e0 'i' 'int'
|   | | |   |-CompoundAssignOperator 0x1efc7f7a7a8 <line:282:13, col:29> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | |   | |-MemberExpr 0x1efc7f7a728 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   | | |   | | `-ImplicitCastExpr 0x1efc7f7a710 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x1efc7f7a6f0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | |   | `-ImplicitCastExpr 0x1efc7f7a790 <col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   `-ImplicitCastExpr 0x1efc7f7a778 <col:29> 'int' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x1efc7f7a758 <col:29> 'int' lvalue Var 0x1efc7f717e0 'i' 'int'
|   | | |   `-CompoundAssignOperator 0x1efc7f7a830 <line:283:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |     |-DeclRefExpr 0x1efc7f7a7d8 <col:13> 'int' lvalue Var 0x1efc7f71760 'n' 'int'
|   | | |     `-ImplicitCastExpr 0x1efc7f7a818 <col:18> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1efc7f7a7f8 <col:18> 'int' lvalue Var 0x1efc7f717e0 'i' 'int'
|   | | |-BinaryOperator 0x1efc7f7a930 <line:287:9, col:25> 'int' '='
|   | | | |-MemberExpr 0x1efc7f7a8d8 <col:9, col:14> 'int' lvalue ->blockout 0x1efc7f758f8
|   | | | | `-ImplicitCastExpr 0x1efc7f7a8c0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1efc7f7a8a0 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | | `-IntegerLiteral 0x1efc7f7a908 <col:25> 'int' 0
|   | | |-IfStmt 0x1efc7f7ac20 <line:288:9, line:291:9>
|   | | | |-BinaryOperator 0x1efc7f7aa50 <line:288:13, col:34> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x1efc7f7aa20 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | | `-MemberExpr 0x1efc7f7a988 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | | | |   `-ImplicitCastExpr 0x1efc7f7a970 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x1efc7f7a950 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | | | `-ImplicitCastExpr 0x1efc7f7aa38 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | |   `-MemberExpr 0x1efc7f7a9f0 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   | | | |     `-ImplicitCastExpr 0x1efc7f7a9d8 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1efc7f7a9b8 <col:29> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | | `-CompoundStmt 0x1efc7f7ac00 <col:43, line:291:9>
|   | | |   |-BinaryOperator 0x1efc7f7ab18 <line:289:13, line:93:25> 'size_t':'unsigned long long' '='
|   | | |   | |-MemberExpr 0x1efc7f7aaa8 <line:289:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | |   | | `-ImplicitCastExpr 0x1efc7f7aa90 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x1efc7f7aa70 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | |   | `-ImplicitCastExpr 0x1efc7f7ab00 <line:93:25> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   |   `-IntegerLiteral 0x1efc7f7aad8 <col:25> 'int' 4
|   | | |   `-BinaryOperator 0x1efc7f7abe0 <line:290:13, col:28> 'size_t':'unsigned long long' '='
|   | | |     |-MemberExpr 0x1efc7f7ab70 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   | | |     | `-ImplicitCastExpr 0x1efc7f7ab58 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x1efc7f7ab38 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x1efc7f7abc8 <col:28> 'size_t':'unsigned long long' <IntegralCast>
|   | | |       `-IntegerLiteral 0x1efc7f7aba0 <col:28> 'int' 0
|   | | |-IfStmt 0x1efc7f7ae80 <line:293:9, line:294:22>
|   | | | |-BinaryOperator 0x1efc7f7ae08 <line:293:13, col:38> 'int' '||'
|   | | | | |-ParenExpr 0x1efc7f7ad48 <col:13, col:24> 'int'
|   | | | | | `-BinaryOperator 0x1efc7f7ad28 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | | | |   |-ImplicitCastExpr 0x1efc7f7acf8 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:293:14> 'const char *' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x1efc7f7ac38 <col:14> 'const char *' lvalue ParmVar 0x1efc7f714a8 'in' 'const char *'
|   | | | | |   `-ImplicitCastExpr 0x1efc7f7ad10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | | | |     `-ParenExpr 0x1efc7f7acd8 <col:17, col:27> 'void *'
|   | | | | |       `-CStyleCastExpr 0x1efc7f7acb0 <col:18, col:26> 'void *' <NullToPointer>
|   | | | | |         `-IntegerLiteral 0x1efc7f7ac70 <col:26> 'int' 0
|   | | | | `-ParenExpr 0x1efc7f7ade8 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:293:29, col:38> 'int'
|   | | | |   `-BinaryOperator 0x1efc7f7adc8 <col:30, col:37> 'int' '<='
|   | | | |     |-ImplicitCastExpr 0x1efc7f7adb0 <col:30> 'int' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x1efc7f7ad68 <col:30> 'int' lvalue ParmVar 0x1efc7f71528 'inl' 'int'
|   | | | |     `-IntegerLiteral 0x1efc7f7ad88 <col:37> 'int' 0
|   | | | `-ReturnStmt 0x1efc7f7ae70 <line:294:13, col:22>
|   | | |   `-ParenExpr 0x1efc7f7ae50 <col:20, col:22> 'int'
|   | | |     `-IntegerLiteral 0x1efc7f7ae28 <col:21> 'int' 0
|   | | |-BinaryOperator 0x1efc7f79358 <line:296:9, line:297:68> 'int' '='
|   | | | |-DeclRefExpr 0x1efc7f7ae98 <line:296:9> 'int' lvalue Var 0x1efc7f71760 'n' 'int'
|   | | | `-ConditionalOperator 0x1efc7f79328 <col:13, line:297:68> 'int'
|   | | |   |-ParenExpr 0x1efc7f790c0 <line:296:13, col:65> 'int'
|   | | |   | `-BinaryOperator 0x1efc7f7b098 <col:14, line:93:25> 'int' '>'
|   | | |   |   |-BinaryOperator 0x1efc7f7af88 <line:296:14, col:25> 'unsigned long long' '+'
|   | | |   |   | |-ImplicitCastExpr 0x1efc7f7af70 <col:14> 'unsigned long long' <IntegralCast>
|   | | |   |   | | `-ImplicitCastExpr 0x1efc7f7af40 <col:14> 'int' <LValueToRValue>
|   | | |   |   | |   `-DeclRefExpr 0x1efc7f7aeb8 <col:14> 'int' lvalue ParmVar 0x1efc7f71528 'inl' 'int'
|   | | |   |   | `-ImplicitCastExpr 0x1efc7f7af58 <col:20, col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   |   |   `-MemberExpr 0x1efc7f7af10 <col:20, col:25> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | |   |   |     `-ImplicitCastExpr 0x1efc7f7aef8 <col:20> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |   |       `-DeclRefExpr 0x1efc7f7aed8 <col:20> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | |   |   `-ImplicitCastExpr 0x1efc7f7b080 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | | |   |     `-BinaryOperator 0x1efc7f7b060 <line:92:25, line:93:25> 'int' '+'
|   | | |   |       |-ParenExpr 0x1efc7f7b018 <line:92:25, col:32> 'int'
|   | | |   |       | `-BinaryOperator 0x1efc7f7aff8 <col:26, col:31> 'int' '*'
|   | | |   |       |   |-IntegerLiteral 0x1efc7f7afa8 <col:26> 'int' 1024
|   | | |   |       |   `-IntegerLiteral 0x1efc7f7afd0 <col:31> 'int' 4
|   | | |   |       `-IntegerLiteral 0x1efc7f7b038 <line:93:25> 'int' 4
|   | | |   |-CStyleCastExpr 0x1efc7f792c8 <line:297:13, col:64> 'int' <IntegralCast>
|   | | |   | `-ParenExpr 0x1efc7f792a8 <col:18, col:64> 'unsigned long long'
|   | | |   |   `-BinaryOperator 0x1efc7f79250 <line:92:25, line:297:57> 'unsigned long long' '-'
|   | | |   |     |-ImplicitCastExpr 0x1efc7f79238 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | | |   |     | `-BinaryOperator 0x1efc7f79198 <line:92:25, line:93:25> 'int' '+'
|   | | |   |     |   |-ParenExpr 0x1efc7f79150 <line:92:25, col:32> 'int'
|   | | |   |     |   | `-BinaryOperator 0x1efc7f79130 <col:26, col:31> 'int' '*'
|   | | |   |     |   |   |-IntegerLiteral 0x1efc7f790e0 <col:26> 'int' 1024
|   | | |   |     |   |   `-IntegerLiteral 0x1efc7f79108 <col:31> 'int' 4
|   | | |   |     |   `-IntegerLiteral 0x1efc7f79170 <line:93:25> 'int' 4
|   | | |   |     `-ImplicitCastExpr 0x1efc7f79220 <line:297:52, col:57> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   |       `-MemberExpr 0x1efc7f791f0 <col:52, col:57> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | |   |         `-ImplicitCastExpr 0x1efc7f791d8 <col:52> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |           `-DeclRefExpr 0x1efc7f791b8 <col:52> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | |   `-ImplicitCastExpr 0x1efc7f79310 <col:68> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1efc7f792f0 <col:68> 'int' lvalue ParmVar 0x1efc7f71528 'inl' 'int'
|   | | |-CompoundAssignOperator 0x1efc7f79530 <line:300:9, col:25> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | | |-MemberExpr 0x1efc7f794b0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | | | `-ImplicitCastExpr 0x1efc7f79498 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1efc7f79478 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x1efc7f79518 <col:25> 'unsigned long long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1efc7f79500 <col:25> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1efc7f794e0 <col:25> 'int' lvalue Var 0x1efc7f71760 'n' 'int'
|   | | |-CompoundAssignOperator 0x1efc7f795b8 <line:301:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | | |-DeclRefExpr 0x1efc7f79560 <col:9> 'int' lvalue ParmVar 0x1efc7f71528 'inl' 'int'
|   | | | `-ImplicitCastExpr 0x1efc7f795a0 <col:16> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1efc7f79580 <col:16> 'int' lvalue Var 0x1efc7f71760 'n' 'int'
|   | | |-CompoundAssignOperator 0x1efc7f79640 <line:302:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | | |-DeclRefExpr 0x1efc7f795e8 <col:9> 'const char *' lvalue ParmVar 0x1efc7f714a8 'in' 'const char *'
|   | | | `-ImplicitCastExpr 0x1efc7f79628 <col:15> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1efc7f79608 <col:15> 'int' lvalue Var 0x1efc7f71760 'n' 'int'
|   | | `-IfStmt 0x1efc7f798b8 <line:304:9, line:309:9>
|   | |   |-BinaryOperator 0x1efc7f797e0 <line:304:13, line:93:25> 'int' '>='
|   | |   | |-ImplicitCastExpr 0x1efc7f797b0 <line:304:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | `-MemberExpr 0x1efc7f796a8 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | |   | |   `-ImplicitCastExpr 0x1efc7f79690 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   | |     `-DeclRefExpr 0x1efc7f79670 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f71890 'ctx' 'BIO_OK_CTX *'
|   | |   | `-ImplicitCastExpr 0x1efc7f797c8 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | |   |   `-BinaryOperator 0x1efc7f79790 <line:92:25, line:93:25> 'int' '+'
|   | |   |     |-ParenExpr 0x1efc7f79748 <line:92:25, col:32> 'int'
|   | |   |     | `-BinaryOperator 0x1efc7f79728 <col:26, col:31> 'int' '*'
|   | |   |     |   |-IntegerLiteral 0x1efc7f796d8 <col:26> 'int' 1024
|   | |   |     |   `-IntegerLiteral 0x1efc7f79700 <col:31> 'int' 4
|   | |   |     `-IntegerLiteral 0x1efc7f79768 <line:93:25> 'int' 4
|   | |   `-CompoundStmt 0x1efc7f798a0 <line:304:61, line:309:9>
|   | |     `-IfStmt 0x1efc7f79888 <line:305:13, line:308:13>
|   | |       |-OpaqueValueExpr 0x1efc7f79870 <<invalid sloc>> '_Bool'
|   | |       `-CompoundStmt 0x1efc7f79858 <line:305:32, line:308:13>
|   | |         `-ReturnStmt 0x1efc7f79848 <line:307:17, col:24>
|   | |           `-IntegerLiteral 0x1efc7f79820 <col:24> 'int' 0
|   | `-BinaryOperator 0x1efc7f79990 <line:310:14, col:20> 'int' '>'
|   |   |-ImplicitCastExpr 0x1efc7f79978 <col:14> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1efc7f79930 <col:14> 'int' lvalue ParmVar 0x1efc7f71528 'inl' 'int'
|   |   `-IntegerLiteral 0x1efc7f79950 <col:20> 'int' 0
|   `-ReturnStmt 0x1efc7f79a68 <line:314:5, col:16>
|     `-ImplicitCastExpr 0x1efc7f79a50 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1efc7f79a30 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1efc7f79a10 <col:13> 'int' lvalue Var 0x1efc7f716b8 'ret' 'int'
|-FunctionDecl 0x1efc7f79d10 <line:317:1, line:400:1> line:317:13 invalid ok_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1efc7f79ae0 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x1efc7f79b60 <col:29, col:33> col:33 used cmd 'int'
| |-ParmVarDecl 0x1efc7f79be0 <col:38, col:43> col:43 used num 'long'
| |-ParmVarDecl 0x1efc7f79c60 <col:48, col:54> col:54 used ptr 'void *'
| `-CompoundStmt 0x1efc7f7c068 <line:318:1, line:400:1>
|   |-DeclStmt 0x1efc7f79e60 <line:319:5, col:20>
|   | `-VarDecl 0x1efc7f79df8 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x1efc7f79f30 <line:321:5, col:24>
|   | `-VarDecl 0x1efc7f79ec8 <col:5, col:20> col:20 invalid ppmd 'const int **'
|   |-DeclStmt 0x1efc7f7a008 <line:322:5, col:17>
|   | `-VarDecl 0x1efc7f79f60 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1efc7f79ff0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1efc7f79fc8 <col:16> 'int' 1
|   |-DeclStmt 0x1efc7f7a0a0 <line:323:5, col:10>
|   | `-VarDecl 0x1efc7f7a038 <col:5, col:9> col:9 used i 'int'
|   |-SwitchStmt 0x1efc7f7e1d8 <line:329:5, line:398:5>
|   | |-ImplicitCastExpr 0x1efc7f7e1c0 <line:329:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1efc7f7e188 <col:13> 'int' lvalue ParmVar 0x1efc7f79b60 'cmd' 'int'
|   | `-CompoundStmt 0x1efc7f7bf30 <col:18, line:398:5>
|   |   |-BinaryOperator 0x1efc7f7e2a0 <line:331:9, col:24> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x1efc7f7e230 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   |   | | `-ImplicitCastExpr 0x1efc7f7e218 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7e1f8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x1efc7f7e288 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1efc7f7e260 <col:24> 'int' 0
|   |   |-BinaryOperator 0x1efc7f7e368 <line:332:9, col:24> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x1efc7f7e2f8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   |   | | `-ImplicitCastExpr 0x1efc7f7e2e0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7e2c0 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x1efc7f7e350 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1efc7f7e328 <col:24> 'int' 0
|   |   |-BinaryOperator 0x1efc7f7e430 <line:333:9, col:29> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x1efc7f7e3c0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x1efc7f756d0
|   |   | | `-ImplicitCastExpr 0x1efc7f7e3a8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7e388 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x1efc7f7e418 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1efc7f7e3f0 <col:29> 'int' 0
|   |   |-BinaryOperator 0x1efc7f7e4f8 <line:334:9, col:29> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x1efc7f7e488 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x1efc7f75738
|   |   | | `-ImplicitCastExpr 0x1efc7f7e470 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7e450 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x1efc7f7e4e0 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1efc7f7e4b8 <col:29> 'int' 0
|   |   |-BinaryOperator 0x1efc7f7e5a8 <line:335:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x1efc7f7e550 <col:9, col:14> 'int' lvalue ->cont 0x1efc7f757a8
|   |   | | `-ImplicitCastExpr 0x1efc7f7e538 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7e518 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x1efc7f7e580 <col:21> 'int' 1
|   |   |-BinaryOperator 0x1efc7f7e658 <line:336:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1efc7f7e600 <col:9, col:14> 'int' lvalue ->finished 0x1efc7f75818
|   |   | | `-ImplicitCastExpr 0x1efc7f7e5e8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7e5c8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x1efc7f7e630 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1efc7f7e708 <line:337:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1efc7f7e6b0 <col:9, col:14> 'int' lvalue ->blockout 0x1efc7f758f8
|   |   | | `-ImplicitCastExpr 0x1efc7f7e698 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7e678 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x1efc7f7e6e0 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1efc7f7e7b8 <line:338:9, col:22> 'int' '='
|   |   | |-MemberExpr 0x1efc7f7e760 <col:9, col:14> 'int' lvalue ->sigio 0x1efc7f75968
|   |   | | `-ImplicitCastExpr 0x1efc7f7e748 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7e728 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x1efc7f7e790 <col:22> 'int' 1
|   |   |-BreakStmt 0x1efc7f7e9b0 <line:340:9>
|   |   |-IfStmt 0x1efc7f7eba8 <line:342:9, line:345:13> has_else
|   |   | |-BinaryOperator 0x1efc7f7ea60 <line:342:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1efc7f7ea48 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1efc7f7e9f0 <col:13, col:18> 'int' lvalue ->cont 0x1efc7f757a8
|   |   | | |   `-ImplicitCastExpr 0x1efc7f7e9d8 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1efc7f7e9b8 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x1efc7f7ea20 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x1efc7f7eae0 <line:343:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x1efc7f7ea80 <col:13> 'long' lvalue Var 0x1efc7f79f60 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x1efc7f7eac8 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1efc7f7eaa0 <col:19> 'int' 1
|   |   | `-NullStmt 0x1efc7f7eba0 <line:345:13>
|   |   |-BreakStmt 0x1efc7f7ebd0 <line:346:9>
|   |   |-BinaryOperator 0x1efc7f7ee20 <line:349:9, col:61> 'long' '='
|   |   | |-DeclRefExpr 0x1efc7f7ebd8 <col:9> 'long' lvalue Var 0x1efc7f79f60 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1efc7f7ee08 <col:15, col:61> 'long' <IntegralCast>
|   |   |   `-ConditionalOperator 0x1efc7f7edd8 <col:15, col:61> 'unsigned long long'
|   |   |     |-ImplicitCastExpr 0x1efc7f7eda8 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x1efc7f7ec30 <col:15, col:20> 'int' lvalue ->blockout 0x1efc7f758f8
|   |   |     |   `-ImplicitCastExpr 0x1efc7f7ec18 <col:15> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1efc7f7ebf8 <col:15> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   |     |-BinaryOperator 0x1efc7f7ed60 <col:31, col:51> 'unsigned long long' '-'
|   |   |     | |-ImplicitCastExpr 0x1efc7f7ed30 <col:31, col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x1efc7f7ec98 <col:31, col:36> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   |   |     | |   `-ImplicitCastExpr 0x1efc7f7ec80 <col:31> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x1efc7f7ec60 <col:31> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   |     | `-ImplicitCastExpr 0x1efc7f7ed48 <col:46, col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |   `-MemberExpr 0x1efc7f7ed00 <col:46, col:51> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   |   |     |     `-ImplicitCastExpr 0x1efc7f7ece8 <col:46> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x1efc7f7ecc8 <col:46> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   |     `-ImplicitCastExpr 0x1efc7f7edc0 <col:61> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1efc7f7ed80 <col:61> 'int' 0
|   |   |-BreakStmt 0x1efc7f7ef78 <line:352:9>
|   |   |-IfStmt 0x1efc7f7f0c8 <line:355:9, line:357:24>
|   |   | |-BinaryOperator 0x1efc7f7f028 <line:355:13, col:30> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1efc7f7f010 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1efc7f7efb8 <col:13, col:18> 'int' lvalue ->blockout 0x1efc7f758f8
|   |   | | |   `-ImplicitCastExpr 0x1efc7f7efa0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1efc7f7ef80 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x1efc7f7efe8 <col:30> 'int' 0
|   |   | `-IfStmt 0x1efc7f7f0b0 <line:356:13, line:357:24>
|   |   |   |-OpaqueValueExpr 0x1efc7f7f098 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x1efc7f7f088 <col:17, col:24>
|   |   |     `-ImplicitCastExpr 0x1efc7f7f070 <col:24> 'long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1efc7f7f048 <col:24> 'int' 0
|   |   |-WhileStmt 0x1efc7f7b390 <line:359:9, line:365:9>
|   |   | |-ImplicitCastExpr 0x1efc7f7b128 <line:359:16, col:21> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x1efc7f7b0f8 <col:16, col:21> 'int' lvalue ->blockout 0x1efc7f758f8
|   |   | |   `-ImplicitCastExpr 0x1efc7f7b0e0 <col:16> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1efc7f7f0e0 <col:16> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-CompoundStmt 0x1efc7f7b378 <col:31, line:365:9>
|   |   |   `-IfStmt 0x1efc7f7b360 <line:361:13, line:364:13>
|   |   |     |-BinaryOperator 0x1efc7f7b288 <line:361:17, col:21> 'int' '<'
|   |   |     | |-ImplicitCastExpr 0x1efc7f7b270 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1efc7f7b228 <col:17> 'int' lvalue Var 0x1efc7f7a038 'i' 'int'
|   |   |     | `-IntegerLiteral 0x1efc7f7b248 <col:21> 'int' 0
|   |   |     `-CompoundStmt 0x1efc7f7b340 <col:24, line:364:13>
|   |   |       |-BinaryOperator 0x1efc7f7b318 <line:362:17, col:23> 'long' '='
|   |   |       | |-DeclRefExpr 0x1efc7f7b2a8 <col:17> 'long' lvalue Var 0x1efc7f79f60 'ret' 'long'
|   |   |       | `-ImplicitCastExpr 0x1efc7f7b300 <col:23> 'long' <IntegralCast>
|   |   |       |   `-ImplicitCastExpr 0x1efc7f7b2e8 <col:23> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x1efc7f7b2c8 <col:23> 'int' lvalue Var 0x1efc7f7a038 'i' 'int'
|   |   |       `-BreakStmt 0x1efc7f7b338 <line:363:17>
|   |   |-BinaryOperator 0x1efc7f7b438 <line:367:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1efc7f7b3e0 <col:9, col:14> 'int' lvalue ->finished 0x1efc7f75818
|   |   | | `-ImplicitCastExpr 0x1efc7f7b3c8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7b3a8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x1efc7f7b410 <col:25> 'int' 1
|   |   |-BinaryOperator 0x1efc7f7b588 <line:368:9, col:39> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x1efc7f7b490 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   |   | | `-ImplicitCastExpr 0x1efc7f7b478 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7b458 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-BinaryOperator 0x1efc7f7b568 <col:24, col:39> 'size_t':'unsigned long long' '='
|   |   |   |-MemberExpr 0x1efc7f7b4f8 <col:24, col:29> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   |   |   | `-ImplicitCastExpr 0x1efc7f7b4e0 <col:24> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1efc7f7b4c0 <col:24> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   |   `-ImplicitCastExpr 0x1efc7f7b550 <col:39> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1efc7f7b528 <col:39> 'int' 0
|   |   |-BinaryOperator 0x1efc7f7b688 <line:369:9, col:26> 'int' '='
|   |   | |-MemberExpr 0x1efc7f7b5e0 <col:9, col:14> 'int' lvalue ->cont 0x1efc7f757a8
|   |   | | `-ImplicitCastExpr 0x1efc7f7b5c8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1efc7f7b5a8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   | `-CStyleCastExpr 0x1efc7f7b660 <col:21, col:26> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1efc7f7b648 <col:26> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x1efc7f7b610 <col:26> 'long' lvalue Var 0x1efc7f79f60 'ret' 'long'
|   |   |-BreakStmt 0x1efc7f7b748 <line:373:9>
|   |   |-BreakStmt 0x1efc7f7b830 <line:378:9>
|   |   |-BinaryOperator 0x1efc7f7b918 <line:380:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1efc7f7b838 <col:9> 'long' lvalue Var 0x1efc7f79f60 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1efc7f7b8f0 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1efc7f7b8d8 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1efc7f7b890 <col:21, col:26> 'int' lvalue ->cont 0x1efc7f757a8
|   |   |       `-ImplicitCastExpr 0x1efc7f7b878 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1efc7f7b858 <col:21> 'BIO_OK_CTX *' lvalue Var 0x1efc7f79df8 'ctx' 'BIO_OK_CTX *'
|   |   |-BreakStmt 0x1efc7f7b938 <line:381:9>
|   |   |-IfStmt 0x1efc7f7bb98 <line:384:9, line:385:20>
|   |   | |-OpaqueValueExpr 0x1efc7f7bb80 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1efc7f7bb70 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x1efc7f7bb58 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1efc7f7bb30 <col:20> 'int' 0
|   |   |-BreakStmt 0x1efc7f7bbf8 <line:387:9>
|   |   |-IfStmt 0x1efc7f7be30 <line:389:9, line:393:19> has_else
|   |   | |-OpaqueValueExpr 0x1efc7f7be18 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1efc7f7bd88 <line:389:30, line:392:9>
|   |   | `-BinaryOperator 0x1efc7f7bdf8 <line:393:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x1efc7f7bd98 <col:13> 'long' lvalue Var 0x1efc7f79f60 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1efc7f7bde0 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1efc7f7bdb8 <col:19> 'int' 0
|   |   |-BreakStmt 0x1efc7f7be58 <line:394:9>
|   |   |-DefaultStmt 0x1efc7f7bf08 <line:395:5, col:12>
|   |   | `-NullStmt 0x1efc7f7bf00 <col:12>
|   |   `-BreakStmt 0x1efc7f7bf28 <line:397:9>
|   `-ReturnStmt 0x1efc7f7c058 <line:399:5, col:12>
|     `-ImplicitCastExpr 0x1efc7f7c040 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x1efc7f7c020 <col:12> 'long' lvalue Var 0x1efc7f79f60 'ret' 'long'
|-FunctionDecl 0x1efc7f7f2c8 <line:402:1, line:419:1> line:402:13 invalid ok_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1efc7f7f120 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x1efc7f7f1a0 <col:38, col:42> col:42 used cmd 'int'
| |-ParmVarDecl 0x1efc7f7f220 <col:47, col:60> col:60 invalid fp 'int *'
| `-CompoundStmt 0x1efc7f7f808 <line:403:1, line:419:1>
|   |-DeclStmt 0x1efc7f7f458 <line:404:5, col:17>
|   | `-VarDecl 0x1efc7f7f3b0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1efc7f7f440 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1efc7f7f418 <col:16> 'int' 1
|   |-IfStmt 0x1efc7f7f580 <line:409:5, line:410:16>
|   | |-OpaqueValueExpr 0x1efc7f7f568 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1efc7f7f558 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x1efc7f7f540 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1efc7f7f518 <col:16> 'int' 0
|   |-SwitchStmt 0x1efc7f7f5e8 <line:412:5, line:416:5>
|   | |-ImplicitCastExpr 0x1efc7f7f5d0 <line:412:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1efc7f7f598 <col:13> 'int' lvalue ParmVar 0x1efc7f7f1a0 'cmd' 'int'
|   | `-CompoundStmt 0x1efc7f7f7a0 <col:18, line:416:5>
|   |   |-DefaultStmt 0x1efc7f7f778 <line:413:5, col:12>
|   |   | `-NullStmt 0x1efc7f7f770 <col:12>
|   |   `-BreakStmt 0x1efc7f7f798 <line:415:9>
|   `-ReturnStmt 0x1efc7f7f7f8 <line:418:5, col:12>
|     `-ImplicitCastExpr 0x1efc7f7f7e0 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x1efc7f7f7c0 <col:12> 'long' lvalue Var 0x1efc7f7f3b0 'ret' 'long'
|-FunctionDecl 0x1efc7f7fa08 <line:421:1, line:439:1> line:421:13 used longswap 'void (void *, size_t)' static
| |-ParmVarDecl 0x1efc7f7f850 <col:22, col:28> col:28 used _ptr 'void *'
| |-ParmVarDecl 0x1efc7f7f8c8 <col:34, col:41> col:41 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1efc7f819f0 <line:422:1, line:439:1>
|   |-DeclStmt 0x1efc7f7fe28 <line:423:5, line:428:6>
|   | |-RecordDecl 0x1efc7f7fad0 <line:423:11, line:426:5> line:423:11 union definition
|   | | |-FieldDecl 0x1efc7f7fba8 <line:424:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x1efc7f7fc10 <line:425:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x1efc7f7fcc8 <line:423:5, line:428:5> line:426:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)' cinit
|   |   `-InitListExpr 0x1efc7f7fdb0 <col:19, line:428:5> 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)' field Field 0x1efc7f7fba8 'one' 'long'
|   |     `-ImplicitCastExpr 0x1efc7f7fdf8 <line:427:9> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x1efc7f7fd30 <col:9> 'int' 1
|   `-IfStmt 0x1efc7f819d8 <line:430:5, line:438:5>
|     |-ImplicitCastExpr 0x1efc7f7fea8 <line:430:9, col:19> 'char' <LValueToRValue>
|     | `-MemberExpr 0x1efc7f7fe78 <col:9, col:19> 'const char' lvalue .little 0x1efc7f7fc10
|     |   `-DeclRefExpr 0x1efc7f7fe40 <col:9> 'const union (anonymous union at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)' lvalue Var 0x1efc7f7fcc8 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)'
|     `-CompoundStmt 0x1efc7f819b0 <col:27, line:438:5>
|       |-DeclStmt 0x1efc7f7ff38 <line:431:9, col:17>
|       | `-VarDecl 0x1efc7f7fed0 <col:9, col:16> col:16 used i 'size_t':'unsigned long long'
|       |-DeclStmt 0x1efc7f800e0 <line:432:9, col:35>
|       | |-VarDecl 0x1efc7f7ff90 <col:9, col:28> col:24 used p 'unsigned char *' cinit
|       | | `-ImplicitCastExpr 0x1efc7f80030 <col:28> 'unsigned char *' <BitCast>
|       | |   `-ImplicitCastExpr 0x1efc7f80018 <col:28> 'void *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x1efc7f7fff8 <col:28> 'void *' lvalue ParmVar 0x1efc7f7f850 '_ptr' 'void *'
|       | `-VarDecl 0x1efc7f80060 <col:9, col:34> col:34 used c 'unsigned char'
|       `-ForStmt 0x1efc7f81978 <line:434:9, line:437:9>
|         |-BinaryOperator 0x1efc7f81198 <line:434:14, col:18> 'size_t':'unsigned long long' '='
|         | |-DeclRefExpr 0x1efc7f800f8 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1efc7f7fed0 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x1efc7f81180 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|         |   `-IntegerLiteral 0x1efc7f81158 <col:18> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x1efc7f81228 <col:21, col:25> 'int' '<'
|         | |-ImplicitCastExpr 0x1efc7f811f8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|         | | `-DeclRefExpr 0x1efc7f811b8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1efc7f7fed0 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x1efc7f81210 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|         |   `-DeclRefExpr 0x1efc7f811d8 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1efc7f7f8c8 'len' 'size_t':'unsigned long long'
|         |-CompoundAssignOperator 0x1efc7f812a8 <col:30, col:35> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|         | |-DeclRefExpr 0x1efc7f81248 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1efc7f7fed0 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x1efc7f81290 <col:35> 'unsigned long long' <IntegralCast>
|         |   `-IntegerLiteral 0x1efc7f81268 <col:35> 'int' 4
|         `-CompoundStmt 0x1efc7f81958 <col:38, line:437:9>
|           |-BinaryOperator 0x1efc7f81610 <line:435:13, col:43> 'unsigned char' ','
|           | |-BinaryOperator 0x1efc7f81518 <col:13, col:33> 'unsigned char' ','
|           | | |-BinaryOperator 0x1efc7f813c0 <col:13, col:20> 'unsigned char' '='
|           | | | |-DeclRefExpr 0x1efc7f812d8 <col:13> 'unsigned char' lvalue Var 0x1efc7f80060 'c' 'unsigned char'
|           | | | `-ImplicitCastExpr 0x1efc7f813a8 <col:17, col:20> 'unsigned char' <LValueToRValue>
|           | | |   `-ArraySubscriptExpr 0x1efc7f81388 <col:17, col:20> 'unsigned char' lvalue
|           | | |     |-ImplicitCastExpr 0x1efc7f81370 <col:17> 'unsigned char *' <LValueToRValue>
|           | | |     | `-DeclRefExpr 0x1efc7f81310 <col:17> 'unsigned char *' lvalue Var 0x1efc7f7ff90 'p' 'unsigned char *'
|           | | |     `-IntegerLiteral 0x1efc7f81348 <col:19> 'int' 0
|           | | `-BinaryOperator 0x1efc7f814f8 <col:23, col:33> 'unsigned char' '='
|           | |   |-ArraySubscriptExpr 0x1efc7f81440 <col:23, col:26> 'unsigned char' lvalue
|           | |   | |-ImplicitCastExpr 0x1efc7f81428 <col:23> 'unsigned char *' <LValueToRValue>
|           | |   | | `-DeclRefExpr 0x1efc7f813e0 <col:23> 'unsigned char *' lvalue Var 0x1efc7f7ff90 'p' 'unsigned char *'
|           | |   | `-IntegerLiteral 0x1efc7f81400 <col:25> 'int' 0
|           | |   `-ImplicitCastExpr 0x1efc7f814e0 <col:30, col:33> 'unsigned char' <LValueToRValue>
|           | |     `-ArraySubscriptExpr 0x1efc7f814c0 <col:30, col:33> 'unsigned char' lvalue
|           | |       |-ImplicitCastExpr 0x1efc7f814a8 <col:30> 'unsigned char *' <LValueToRValue>
|           | |       | `-DeclRefExpr 0x1efc7f81460 <col:30> 'unsigned char *' lvalue Var 0x1efc7f7ff90 'p' 'unsigned char *'
|           | |       `-IntegerLiteral 0x1efc7f81480 <col:32> 'int' 3
|           | `-BinaryOperator 0x1efc7f815f0 <col:36, col:43> 'unsigned char' '='
|           |   |-ArraySubscriptExpr 0x1efc7f81598 <col:36, col:39> 'unsigned char' lvalue
|           |   | |-ImplicitCastExpr 0x1efc7f81580 <col:36> 'unsigned char *' <LValueToRValue>
|           |   | | `-DeclRefExpr 0x1efc7f81538 <col:36> 'unsigned char *' lvalue Var 0x1efc7f7ff90 'p' 'unsigned char *'
|           |   | `-IntegerLiteral 0x1efc7f81558 <col:38> 'int' 3
|           |   `-ImplicitCastExpr 0x1efc7f815d8 <col:43> 'unsigned char' <LValueToRValue>
|           |     `-DeclRefExpr 0x1efc7f815b8 <col:43> 'unsigned char' lvalue Var 0x1efc7f80060 'c' 'unsigned char'
|           `-BinaryOperator 0x1efc7f81938 <line:436:13, col:43> 'unsigned char' ','
|             |-BinaryOperator 0x1efc7f81840 <col:13, col:33> 'unsigned char' ','
|             | |-BinaryOperator 0x1efc7f816e8 <col:13, col:20> 'unsigned char' '='
|             | | |-DeclRefExpr 0x1efc7f81630 <col:13> 'unsigned char' lvalue Var 0x1efc7f80060 'c' 'unsigned char'
|             | | `-ImplicitCastExpr 0x1efc7f816d0 <col:17, col:20> 'unsigned char' <LValueToRValue>
|             | |   `-ArraySubscriptExpr 0x1efc7f816b0 <col:17, col:20> 'unsigned char' lvalue
|             | |     |-ImplicitCastExpr 0x1efc7f81698 <col:17> 'unsigned char *' <LValueToRValue>
|             | |     | `-DeclRefExpr 0x1efc7f81650 <col:17> 'unsigned char *' lvalue Var 0x1efc7f7ff90 'p' 'unsigned char *'
|             | |     `-IntegerLiteral 0x1efc7f81670 <col:19> 'int' 1
|             | `-BinaryOperator 0x1efc7f81820 <col:23, col:33> 'unsigned char' '='
|             |   |-ArraySubscriptExpr 0x1efc7f81768 <col:23, col:26> 'unsigned char' lvalue
|             |   | |-ImplicitCastExpr 0x1efc7f81750 <col:23> 'unsigned char *' <LValueToRValue>
|             |   | | `-DeclRefExpr 0x1efc7f81708 <col:23> 'unsigned char *' lvalue Var 0x1efc7f7ff90 'p' 'unsigned char *'
|             |   | `-IntegerLiteral 0x1efc7f81728 <col:25> 'int' 1
|             |   `-ImplicitCastExpr 0x1efc7f81808 <col:30, col:33> 'unsigned char' <LValueToRValue>
|             |     `-ArraySubscriptExpr 0x1efc7f817e8 <col:30, col:33> 'unsigned char' lvalue
|             |       |-ImplicitCastExpr 0x1efc7f817d0 <col:30> 'unsigned char *' <LValueToRValue>
|             |       | `-DeclRefExpr 0x1efc7f81788 <col:30> 'unsigned char *' lvalue Var 0x1efc7f7ff90 'p' 'unsigned char *'
|             |       `-IntegerLiteral 0x1efc7f817a8 <col:32> 'int' 2
|             `-BinaryOperator 0x1efc7f81918 <col:36, col:43> 'unsigned char' '='
|               |-ArraySubscriptExpr 0x1efc7f818c0 <col:36, col:39> 'unsigned char' lvalue
|               | |-ImplicitCastExpr 0x1efc7f818a8 <col:36> 'unsigned char *' <LValueToRValue>
|               | | `-DeclRefExpr 0x1efc7f81860 <col:36> 'unsigned char *' lvalue Var 0x1efc7f7ff90 'p' 'unsigned char *'
|               | `-IntegerLiteral 0x1efc7f81880 <col:38> 'int' 2
|               `-ImplicitCastExpr 0x1efc7f81900 <col:43> 'unsigned char' <LValueToRValue>
|                 `-DeclRefExpr 0x1efc7f818e0 <col:43> 'unsigned char' lvalue Var 0x1efc7f80060 'c' 'unsigned char'
|-FunctionDecl 0x1efc7f81ac0 <line:441:1, line:481:1> line:441:12 invalid sig_out 'int (int *)' static
| |-ParmVarDecl 0x1efc7f81a28 <col:20, col:25> col:25 invalid b 'int *'
| `-CompoundStmt 0x1efc7f7c348 <line:442:1, line:481:1>
|   |-DeclStmt 0x1efc7f81bf8 <line:443:5, col:20>
|   | `-VarDecl 0x1efc7f81b90 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x1efc7f81c90 <line:445:5, col:25>
|   | `-VarDecl 0x1efc7f81c28 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x1efc7f81d28 <line:446:5, col:16>
|   | `-VarDecl 0x1efc7f81cc0 <col:5, col:9> col:9 used md_size 'int'
|   |-DeclStmt 0x1efc7f81dc0 <line:447:5, col:18>
|   | `-VarDecl 0x1efc7f81d58 <col:5, col:11> col:11 used md_data 'void *'
|   |-IfStmt 0x1efc7f82368 <line:455:5, line:456:16>
|   | |-BinaryOperator 0x1efc7f82310 <line:455:9, line:92:32> 'int' '>'
|   | | |-BinaryOperator 0x1efc7f82248 <line:455:9, col:28> 'unsigned long long' '+'
|   | | | |-ImplicitCastExpr 0x1efc7f82218 <col:9, col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-MemberExpr 0x1efc7f82168 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | | |   `-ImplicitCastExpr 0x1efc7f82150 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x1efc7f82118 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f81b90 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x1efc7f82230 <col:24, col:28> 'unsigned long long' <IntegralCast>
|   | | |   `-BinaryOperator 0x1efc7f821f8 <col:24, col:28> 'int' '*'
|   | | |     |-IntegerLiteral 0x1efc7f82198 <col:24> 'int' 2
|   | | |     `-ImplicitCastExpr 0x1efc7f821e0 <col:28> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1efc7f821c0 <col:28> 'int' lvalue Var 0x1efc7f81cc0 'md_size' 'int'
|   | | `-ImplicitCastExpr 0x1efc7f822f8 <line:92:25, col:32> 'unsigned long long' <IntegralCast>
|   | |   `-ParenExpr 0x1efc7f822d8 <col:25, col:32> 'int'
|   | |     `-BinaryOperator 0x1efc7f822b8 <col:26, col:31> 'int' '*'
|   | |       |-IntegerLiteral 0x1efc7f82268 <col:26> 'int' 1024
|   | |       `-IntegerLiteral 0x1efc7f82290 <col:31> 'int' 4
|   | `-ReturnStmt 0x1efc7f82358 <line:456:9, col:16>
|   |   `-IntegerLiteral 0x1efc7f82330 <col:16> 'int' 1
|   |-IfStmt 0x1efc7f824a8 <line:458:5, line:459:14>
|   | |-OpaqueValueExpr 0x1efc7f82490 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1efc7f82478 <col:9, col:14> 'berr' 0x1efc7f82428
|   |-IfStmt 0x1efc7f826e8 <line:464:5, line:465:14>
|   | |-BinaryOperator 0x1efc7f826b0 <line:464:9, col:41> 'int' '<='
|   | | |-CallExpr 0x1efc7f82628 <col:9, col:36> 'int'
|   | | | |-ImplicitCastExpr 0x1efc7f82610 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1efc7f825b0 <col:9> 'int ()' Function 0x1efc7f824e8 'RAND_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x1efc7f82658 <col:20> 'void *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1efc7f825d0 <col:20> 'void *' lvalue Var 0x1efc7f81d58 'md_data' 'void *'
|   | | | `-ImplicitCastExpr 0x1efc7f82670 <col:29> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1efc7f825f0 <col:29> 'int' lvalue Var 0x1efc7f81cc0 'md_size' 'int'
|   | | `-IntegerLiteral 0x1efc7f82688 <col:41> 'int' 0
|   | `-GotoStmt 0x1efc7f826d0 <line:465:9, col:14> 'berr' 0x1efc7f82428
|   |-CompoundAssignOperator 0x1efc7f82998 <line:468:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x1efc7f82918 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | `-ImplicitCastExpr 0x1efc7f82900 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1efc7f828e0 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f81b90 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1efc7f82980 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1efc7f82968 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1efc7f82948 <col:21> 'int' lvalue Var 0x1efc7f81cc0 'md_size' 'int'
|   |-IfStmt 0x1efc7f82e18 <line:470:5, line:471:14>
|   | |-OpaqueValueExpr 0x1efc7f82e00 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1efc7f82de8 <col:9, col:14> 'berr' 0x1efc7f82428
|   |-IfStmt 0x1efc7f83098 <line:472:5, line:473:14>
|   | |-OpaqueValueExpr 0x1efc7f83080 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1efc7f83068 <col:9, col:14> 'berr' 0x1efc7f82428
|   |-CompoundAssignOperator 0x1efc7f7c108 <line:474:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x1efc7f830e8 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | `-ImplicitCastExpr 0x1efc7f830d0 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1efc7f830b0 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f81b90 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1efc7f7c0f0 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1efc7f83138 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1efc7f83118 <col:21> 'int' lvalue Var 0x1efc7f81cc0 'md_size' 'int'
|   |-BinaryOperator 0x1efc7f7c1c8 <line:475:5, col:21> 'int' '='
|   | |-MemberExpr 0x1efc7f7c170 <col:5, col:10> 'int' lvalue ->blockout 0x1efc7f758f8
|   | | `-ImplicitCastExpr 0x1efc7f7c158 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1efc7f7c138 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f81b90 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x1efc7f7c1a0 <col:21> 'int' 1
|   |-BinaryOperator 0x1efc7f7c278 <line:476:5, col:18> 'int' '='
|   | |-MemberExpr 0x1efc7f7c220 <col:5, col:10> 'int' lvalue ->sigio 0x1efc7f75968
|   | | `-ImplicitCastExpr 0x1efc7f7c208 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1efc7f7c1e8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f81b90 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x1efc7f7c250 <col:18> 'int' 0
|   |-ReturnStmt 0x1efc7f7c2c0 <line:477:5, col:12>
|   | `-IntegerLiteral 0x1efc7f7c298 <col:12> 'int' 1
|   |-LabelStmt 0x1efc7f7c2f8 <line:478:2, col:6> 'berr'
|   | `-NullStmt 0x1efc7f7c2f0 <col:6>
|   `-ReturnStmt 0x1efc7f7c338 <line:480:5, col:12>
|     `-IntegerLiteral 0x1efc7f7c310 <col:12> 'int' 0
|-FunctionDecl 0x1efc7f82ba0 <line:470:42> col:42 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1efc7f82c40 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1efc7f7c488 <line:483:1, line:529:1> line:483:12 invalid sig_in 'int (int *)' static
| |-ParmVarDecl 0x1efc7f7c3f0 <col:19, col:24> col:24 invalid b 'int *'
| `-CompoundStmt 0x1efc7f80130 <line:484:1, line:529:1>
|   |-DeclStmt 0x1efc7f7c5c0 <line:485:5, col:20>
|   | `-VarDecl 0x1efc7f7c558 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x1efc7f7c658 <line:487:5, col:39>
|   | `-VarDecl 0x1efc7f7c5f0 <col:5, col:19> col:19 invalid tmp 'unsigned char'
|   |-DeclStmt 0x1efc7f7c718 <line:488:5, col:16>
|   | `-VarDecl 0x1efc7f7c688 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1efc7f7c6f0 <col:15> 'int' 0
|   |-DeclStmt 0x1efc7f7c7b0 <line:489:5, col:25>
|   | `-VarDecl 0x1efc7f7c748 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x1efc7f7c848 <line:490:5, col:16>
|   | `-VarDecl 0x1efc7f7c7e0 <col:5, col:9> col:9 used md_size 'int'
|   |-DeclStmt 0x1efc7f7c8e0 <line:491:5, col:18>
|   | `-VarDecl 0x1efc7f7c878 <col:5, col:11> col:11 used md_data 'void *'
|   |-IfStmt 0x1efc7f7ccd0 <line:499:5, line:500:16>
|   | |-BinaryOperator 0x1efc7f7cc78 <line:499:9, col:50> 'int' '<'
|   | | |-CStyleCastExpr 0x1efc7f7cbd0 <col:9, col:42> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x1efc7f7cbb0 <col:14, col:42> 'unsigned long long'
|   | | |   `-BinaryOperator 0x1efc7f7cb58 <col:15, col:35> 'unsigned long long' '-'
|   | | |     |-ImplicitCastExpr 0x1efc7f7cb28 <col:15, col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |     | `-MemberExpr 0x1efc7f7ca90 <col:15, col:20> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | |     |   `-ImplicitCastExpr 0x1efc7f7ca78 <col:15> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x1efc7f7ca58 <col:15> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x1efc7f7cb40 <col:30, col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       `-MemberExpr 0x1efc7f7caf8 <col:30, col:35> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   | | |         `-ImplicitCastExpr 0x1efc7f7cae0 <col:30> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x1efc7f7cac0 <col:30> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   | | `-BinaryOperator 0x1efc7f7cc58 <col:46, col:50> 'int' '*'
|   | |   |-IntegerLiteral 0x1efc7f7cbf8 <col:46> 'int' 2
|   | |   `-ImplicitCastExpr 0x1efc7f7cc40 <col:50> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1efc7f7cc20 <col:50> 'int' lvalue Var 0x1efc7f7c7e0 'md_size' 'int'
|   | `-ReturnStmt 0x1efc7f7ccc0 <line:500:9, col:16>
|   |   `-IntegerLiteral 0x1efc7f7cc98 <col:16> 'int' 1
|   |-IfStmt 0x1efc7f7ce10 <line:502:5, line:503:14>
|   | |-OpaqueValueExpr 0x1efc7f7cdf8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1efc7f7cde0 <col:9, col:14> 'berr' 0x1efc7f7cd90
|   |-CallExpr 0x1efc7f7d000 <line:505:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x1efc7f7cfe8 <col:5> 'void (*)(void *, size_t)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1efc7f7cf28 <col:5> 'void (void *, size_t)' Function 0x1efc7f7fa08 'longswap' 'void (void *, size_t)'
|   | |-ImplicitCastExpr 0x1efc7f7d030 <col:14> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1efc7f7cf48 <col:14> 'void *' lvalue Var 0x1efc7f7c878 'md_data' 'void *'
|   | `-ImplicitCastExpr 0x1efc7f7d060 <col:23> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1efc7f7d048 <col:23> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1efc7f7cf68 <col:23> 'int' lvalue Var 0x1efc7f7c7e0 'md_size' 'int'
|   |-CompoundAssignOperator 0x1efc7f841c0 <line:506:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x1efc7f7d0b0 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   | | `-ImplicitCastExpr 0x1efc7f7d098 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1efc7f7d078 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1efc7f841a8 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1efc7f84190 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1efc7f84170 <col:21> 'int' lvalue Var 0x1efc7f7c7e0 'md_size' 'int'
|   |-IfStmt 0x1efc7f84388 <line:508:5, line:509:14>
|   | |-OpaqueValueExpr 0x1efc7f84370 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1efc7f84358 <col:9, col:14> 'berr' 0x1efc7f7cd90
|   |-IfStmt 0x1efc7f84478 <line:510:5, line:511:14>
|   | |-OpaqueValueExpr 0x1efc7f84460 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1efc7f84448 <col:9, col:14> 'berr' 0x1efc7f7cd90
|   |-CompoundAssignOperator 0x1efc7f848d8 <line:513:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x1efc7f84858 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   | | `-ImplicitCastExpr 0x1efc7f84840 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1efc7f84820 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1efc7f848c0 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1efc7f848a8 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1efc7f84888 <col:21> 'int' lvalue Var 0x1efc7f7c7e0 'md_size' 'int'
|   |-IfStmt 0x1efc7f85070 <line:514:5, line:524:5> has_else
|   | |-BinaryOperator 0x1efc7f84968 <line:514:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x1efc7f84950 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1efc7f84908 <col:9> 'int' lvalue Var 0x1efc7f7c688 'ret' 'int'
|   | | `-IntegerLiteral 0x1efc7f84928 <col:16> 'int' 1
|   | |-CompoundStmt 0x1efc7f84f78 <col:19, line:522:5>
|   | | |-BinaryOperator 0x1efc7f84a18 <line:515:9, col:22> 'int' '='
|   | | | |-MemberExpr 0x1efc7f849c0 <col:9, col:14> 'int' lvalue ->sigio 0x1efc7f75968
|   | | | | `-ImplicitCastExpr 0x1efc7f849a8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1efc7f84988 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   | | | `-IntegerLiteral 0x1efc7f849f0 <col:22> 'int' 0
|   | | |-IfStmt 0x1efc7f84d80 <line:516:9, line:519:9>
|   | | | |-BinaryOperator 0x1efc7f84b38 <line:516:13, col:34> 'int' '!='
|   | | | | |-ImplicitCastExpr 0x1efc7f84b08 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | | `-MemberExpr 0x1efc7f84a70 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | | | |   `-ImplicitCastExpr 0x1efc7f84a58 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x1efc7f84a38 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   | | | | `-ImplicitCastExpr 0x1efc7f84b20 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | |   `-MemberExpr 0x1efc7f84ad8 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   | | | |     `-ImplicitCastExpr 0x1efc7f84ac0 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1efc7f84aa0 <col:29> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   | | | `-CompoundStmt 0x1efc7f84d70 <col:43, line:519:9>
|   | | |-CompoundAssignOperator 0x1efc7f84e80 <line:520:9, col:30> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | | |-MemberExpr 0x1efc7f84dd0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | | | `-ImplicitCastExpr 0x1efc7f84db8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1efc7f84d98 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x1efc7f84e68 <col:25, col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-MemberExpr 0x1efc7f84e38 <col:25, col:30> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   | | |     `-ImplicitCastExpr 0x1efc7f84e20 <col:25> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1efc7f84e00 <col:25> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   | | `-BinaryOperator 0x1efc7f84f58 <line:521:9, col:24> 'size_t':'unsigned long long' '='
|   | |   |-MemberExpr 0x1efc7f84ee8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
|   | |   | `-ImplicitCastExpr 0x1efc7f84ed0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1efc7f84eb0 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   | |   `-ImplicitCastExpr 0x1efc7f84f40 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1efc7f84f18 <col:24> 'int' 0
|   | `-CompoundStmt 0x1efc7f85058 <line:522:12, line:524:5>
|   |   `-BinaryOperator 0x1efc7f85038 <line:523:9, col:21> 'int' '='
|   |     |-MemberExpr 0x1efc7f84fe0 <col:9, col:14> 'int' lvalue ->cont 0x1efc7f757a8
|   |     | `-ImplicitCastExpr 0x1efc7f84fc8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1efc7f84fa8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7c558 'ctx' 'BIO_OK_CTX *'
|   |     `-IntegerLiteral 0x1efc7f85010 <col:21> 'int' 0
|   |-ReturnStmt 0x1efc7f850c0 <line:525:5, col:12>
|   | `-IntegerLiteral 0x1efc7f85098 <col:12> 'int' 1
|   |-LabelStmt 0x1efc7f850f8 <line:526:2, col:6> 'berr'
|   | `-NullStmt 0x1efc7f850f0 <col:6>
|   `-ReturnStmt 0x1efc7f85138 <line:528:5, col:12>
|     `-IntegerLiteral 0x1efc7f85110 <col:12> 'int' 0
|-FunctionDecl 0x1efc7f84510 <line:512:11> col:11 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1efc7f845b0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1efc7f84618 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1efc7f84680 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1efc7f80278 <line:531:1, line:560:1> line:531:12 invalid block_out 'int (int *)' static
| |-ParmVarDecl 0x1efc7f801e0 <col:22, col:27> col:27 invalid b 'int *'
| `-CompoundStmt 0x1efc7f7d228 <line:532:1, line:560:1>
|   |-DeclStmt 0x1efc7f803b0 <line:533:5, col:20>
|   | `-VarDecl 0x1efc7f80348 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x1efc7f80448 <line:535:5, col:21>
|   | `-VarDecl 0x1efc7f803e0 <col:5, col:19> col:19 used tl 'unsigned long'
|   |-DeclStmt 0x1efc7f804e0 <line:536:5, col:25>
|   | `-VarDecl 0x1efc7f80478 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x1efc7f80578 <line:537:5, col:16>
|   | `-VarDecl 0x1efc7f80510 <col:5, col:9> col:9 used md_size 'int'
|   |-BinaryOperator 0x1efc7f807c8 <line:544:5, line:93:25> 'unsigned long' '='
|   | |-DeclRefExpr 0x1efc7f80698 <line:544:5> 'unsigned long' lvalue Var 0x1efc7f803e0 'tl' 'unsigned long'
|   | `-ImplicitCastExpr 0x1efc7f807b0 <col:10, line:93:25> 'unsigned long' <IntegralCast>
|   |   `-BinaryOperator 0x1efc7f80790 <line:544:10, line:93:25> 'unsigned long long' '-'
|   |     |-ImplicitCastExpr 0x1efc7f80760 <line:544:10, col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x1efc7f80708 <col:10, col:15> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   |     |   `-ImplicitCastExpr 0x1efc7f806f0 <col:10> 'BIO_OK_CTX *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1efc7f806d0 <col:10> 'BIO_OK_CTX *' lvalue Var 0x1efc7f80348 'ctx' 'BIO_OK_CTX *'
|   |     `-ImplicitCastExpr 0x1efc7f80778 <line:93:25> 'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x1efc7f80738 <col:25> 'int' 4
|   |-IfStmt 0x1efc7f80e40 <line:549:5, line:551:14>
|   | |-OpaqueValueExpr 0x1efc7f80e28 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1efc7f80e10 <col:9, col:14> 'berr' 0x1efc7f80dc0
|   |-IfStmt 0x1efc7f80fd0 <line:552:5, line:553:14>
|   | |-OpaqueValueExpr 0x1efc7f80fb8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1efc7f80fa0 <col:9, col:14> 'berr' 0x1efc7f80dc0
|   |-CompoundAssignOperator 0x1efc7f810a0 <line:554:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x1efc7f81020 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
|   | | `-ImplicitCastExpr 0x1efc7f81008 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1efc7f80fe8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f80348 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1efc7f81088 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1efc7f81070 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1efc7f81050 <col:21> 'int' lvalue Var 0x1efc7f80510 'md_size' 'int'
|   |-BinaryOperator 0x1efc7f7d158 <line:555:5, col:21> 'int' '='
|   | |-MemberExpr 0x1efc7f7d100 <col:5, col:10> 'int' lvalue ->blockout 0x1efc7f758f8
|   | | `-ImplicitCastExpr 0x1efc7f810f0 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1efc7f810d0 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1efc7f80348 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x1efc7f7d130 <col:21> 'int' 1
|   |-ReturnStmt 0x1efc7f7d1a0 <line:556:5, col:12>
|   | `-IntegerLiteral 0x1efc7f7d178 <col:12> 'int' 1
|   |-LabelStmt 0x1efc7f7d1d8 <line:557:2, col:6> 'berr'
|   | `-NullStmt 0x1efc7f7d1d0 <col:6>
|   `-ReturnStmt 0x1efc7f7d218 <line:559:5, col:12>
|     `-IntegerLiteral 0x1efc7f7d1f0 <col:12> 'int' 0
`-FunctionDecl 0x1efc7f7d348 <line:562:1, line:605:1> line:562:12 invalid block_in 'int (int *)' static
  |-ParmVarDecl 0x1efc7f7d2b0 <col:21, col:26> col:26 invalid b 'int *'
  `-CompoundStmt 0x1efc7f88de8 <line:563:1, line:605:1>
    |-DeclStmt 0x1efc7f7d480 <line:564:5, col:20>
    | `-VarDecl 0x1efc7f7d418 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
    |-DeclStmt 0x1efc7f7d558 <line:566:5, col:25>
    | `-VarDecl 0x1efc7f7d4b0 <col:5, col:24> col:19 used tl 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x1efc7f7d540 <col:24> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x1efc7f7d518 <col:24> 'int' 0
    |-DeclStmt 0x1efc7f7d5f0 <line:567:5, col:39>
    | `-VarDecl 0x1efc7f7d588 <col:5, col:19> col:19 invalid tmp 'unsigned char'
    |-DeclStmt 0x1efc7f7d688 <line:568:5, col:16>
    | `-VarDecl 0x1efc7f7d620 <col:5, col:9> col:9 used md_size 'int'
    |-CStyleCastExpr 0x1efc7f7dc68 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x1efc7f7dc48 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x1efc7f7dbf8 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x1efc7f7d8b8 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x1efc7f7d8a0 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x1efc7f7d888 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x1efc7f7d868 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x1efc7f7d848 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:574:12, line:93:25> 'int' '>='
    |     |         |-UnaryExprOrTypeTraitExpr 0x1efc7f7d7e8 <line:574:12, col:21> 'unsigned long long' sizeof
    |     |         | `-ParenExpr 0x1efc7f7d7c8 <col:18, col:21> 'unsigned long' lvalue
    |     |         |   `-DeclRefExpr 0x1efc7f7d7a8 <col:19> 'unsigned long' lvalue Var 0x1efc7f7d4b0 'tl' 'unsigned long' non_odr_use_unevaluated
    |     |         `-ImplicitCastExpr 0x1efc7f7d830 <line:93:25> 'unsigned long long' <IntegralCast>
    |     |           `-IntegerLiteral 0x1efc7f7d808 <col:25> 'int' 4
    |     `-ParenExpr 0x1efc7f7dbd8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x1efc7f7dbb8 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x1efc7f7dae0 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x1efc7f7dac8 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x1efc7f7d8d8 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1efc7f6d000 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x1efc7f7db30 <<scratch space>:199:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1efc7f7db18 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1efc7f7d938 <col:1> 'unsigned short [29]' lvalue L"sizeof(tl) >= OK_BLOCK_BLOCK"
    |         | |-ImplicitCastExpr 0x1efc7f7db60 <line:201:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1efc7f7db48 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1efc7f7d9c8 <col:1> 'unsigned short [46]' lvalue L".//openssl//file_jk/after\\crypto\\evp\\bio_ok.c"
    |         | `-ImplicitCastExpr 0x1efc7f7db78 <line:202:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x1efc7f7da40 <col:1> 'int' 574
    |         `-IntegerLiteral 0x1efc7f7db90 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-CompoundAssignOperator 0x1efc7f7dd88 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:576:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x1efc7f7dd28 <col:5> 'unsigned long' lvalue Var 0x1efc7f7d4b0 'tl' 'unsigned long'
    | `-IntegerLiteral 0x1efc7f7dd48 <col:12> 'int' 8
    |-CompoundAssignOperator 0x1efc7f7de98 <line:578:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x1efc7f7de38 <col:5> 'unsigned long' lvalue Var 0x1efc7f7d4b0 'tl' 'unsigned long'
    | `-IntegerLiteral 0x1efc7f7de58 <col:12> 'int' 8
    |-CompoundAssignOperator 0x1efc7f7dfa8 <line:580:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x1efc7f7df48 <col:5> 'unsigned long' lvalue Var 0x1efc7f7d4b0 'tl' 'unsigned long'
    | `-IntegerLiteral 0x1efc7f7df68 <col:12> 'int' 8
    |-IfStmt 0x1efc7f88320 <line:583:5, line:584:16>
    | |-BinaryOperator 0x1efc7f882c8 <line:583:9, col:46> 'int' '<'
    | | |-ImplicitCastExpr 0x1efc7f88298 <col:9, col:14> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-MemberExpr 0x1efc7f7e090 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
    | | |   `-ImplicitCastExpr 0x1efc7f7e078 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | |     `-DeclRefExpr 0x1efc7f7e058 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7d418 'ctx' 'BIO_OK_CTX *'
    | | `-ImplicitCastExpr 0x1efc7f882b0 <col:24, col:46> 'unsigned long long' <IntegralCast>
    | |   `-BinaryOperator 0x1efc7f88278 <col:24, col:46> 'unsigned long' '+'
    | |     |-BinaryOperator 0x1efc7f88208 <col:24, line:93:25> 'unsigned long' '+'
    | |     | |-ImplicitCastExpr 0x1efc7f881d8 <line:583:24> 'unsigned long' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x1efc7f7e0c0 <col:24> 'unsigned long' lvalue Var 0x1efc7f7d4b0 'tl' 'unsigned long'
    | |     | `-ImplicitCastExpr 0x1efc7f881f0 <line:93:25> 'unsigned long' <IntegralCast>
    | |     |   `-IntegerLiteral 0x1efc7f881b0 <col:25> 'int' 4
    | |     `-ImplicitCastExpr 0x1efc7f88260 <line:583:46> 'unsigned long' <IntegralCast>
    | |       `-ImplicitCastExpr 0x1efc7f88248 <col:46> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x1efc7f88228 <col:46> 'int' lvalue Var 0x1efc7f7d620 'md_size' 'int'
    | `-ReturnStmt 0x1efc7f88310 <line:584:9, col:16>
    |   `-IntegerLiteral 0x1efc7f882e8 <col:16> 'int' 1
    |-IfStmt 0x1efc7f88458 <line:586:5, line:588:14>
    | |-OpaqueValueExpr 0x1efc7f88440 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1efc7f88428 <col:9, col:14> 'berr' 0x1efc7f883d8
    |-IfStmt 0x1efc7f88548 <line:589:5, line:590:14>
    | |-OpaqueValueExpr 0x1efc7f88530 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1efc7f88518 <col:9, col:14> 'berr' 0x1efc7f883d8
    |-IfStmt 0x1efc7f88d10 <line:591:5, line:600:5> has_else
    | |-OpaqueValueExpr 0x1efc7f88cf8 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x1efc7f88bf8 <line:591:70, line:598:5>
    | | |-BinaryOperator 0x1efc7f88820 <line:593:9, col:51> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x1efc7f886d0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x1efc7f75738
    | | | | `-ImplicitCastExpr 0x1efc7f886b8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1efc7f88698 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7d418 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x1efc7f88808 <col:29, col:51> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-BinaryOperator 0x1efc7f887e8 <col:29, col:51> 'unsigned long' '+'
    | | |     |-BinaryOperator 0x1efc7f88778 <col:29, line:93:25> 'unsigned long' '+'
    | | |     | |-ImplicitCastExpr 0x1efc7f88748 <line:593:29> 'unsigned long' <LValueToRValue>
    | | |     | | `-DeclRefExpr 0x1efc7f88700 <col:29> 'unsigned long' lvalue Var 0x1efc7f7d4b0 'tl' 'unsigned long'
    | | |     | `-ImplicitCastExpr 0x1efc7f88760 <line:93:25> 'unsigned long' <IntegralCast>
    | | |     |   `-IntegerLiteral 0x1efc7f88720 <col:25> 'int' 4
    | | |     `-ImplicitCastExpr 0x1efc7f887d0 <line:593:51> 'unsigned long' <IntegralCast>
    | | |       `-ImplicitCastExpr 0x1efc7f887b8 <col:51> 'int' <LValueToRValue>
    | | |         `-DeclRefExpr 0x1efc7f88798 <col:51> 'int' lvalue Var 0x1efc7f7d620 'md_size' 'int'
    | | |-BinaryOperator 0x1efc7f88928 <line:594:9, col:34> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x1efc7f88878 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x1efc7f756d0
    | | | | `-ImplicitCastExpr 0x1efc7f88860 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1efc7f88840 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7d418 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x1efc7f88910 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
    | | |   `-MemberExpr 0x1efc7f888e0 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
    | | |     `-ImplicitCastExpr 0x1efc7f888c8 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1efc7f888a8 <col:29> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7d418 'ctx' 'BIO_OK_CTX *'
    | | |-BinaryOperator 0x1efc7f889f0 <line:595:9, line:93:25> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x1efc7f88980 <line:595:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x1efc7f75668
    | | | | `-ImplicitCastExpr 0x1efc7f88968 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1efc7f88948 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7d418 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x1efc7f889d8 <line:93:25> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-IntegerLiteral 0x1efc7f889b0 <col:25> 'int' 4
    | | |-BinaryOperator 0x1efc7f88b28 <line:596:9, line:93:25> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x1efc7f88a48 <line:596:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1efc7f75600
    | | | | `-ImplicitCastExpr 0x1efc7f88a30 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1efc7f88a10 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7d418 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x1efc7f88b10 <col:24, line:93:25> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-BinaryOperator 0x1efc7f88af0 <line:596:24, line:93:25> 'unsigned long' '+'
    | | |     |-ImplicitCastExpr 0x1efc7f88ac0 <line:596:24> 'unsigned long' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x1efc7f88a78 <col:24> 'unsigned long' lvalue Var 0x1efc7f7d4b0 'tl' 'unsigned long'
    | | |     `-ImplicitCastExpr 0x1efc7f88ad8 <line:93:25> 'unsigned long' <IntegralCast>
    | | |       `-IntegerLiteral 0x1efc7f88a98 <col:25> 'int' 4
    | | `-BinaryOperator 0x1efc7f88bd8 <line:597:9, col:25> 'int' '='
    | |   |-MemberExpr 0x1efc7f88b80 <col:9, col:14> 'int' lvalue ->blockout 0x1efc7f758f8
    | |   | `-ImplicitCastExpr 0x1efc7f88b68 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x1efc7f88b48 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7d418 'ctx' 'BIO_OK_CTX *'
    | |   `-IntegerLiteral 0x1efc7f88bb0 <col:25> 'int' 1
    | `-CompoundStmt 0x1efc7f88ce0 <line:598:12, line:600:5>
    |   `-BinaryOperator 0x1efc7f88cc0 <line:599:9, col:21> 'int' '='
    |     |-MemberExpr 0x1efc7f88c68 <col:9, col:14> 'int' lvalue ->cont 0x1efc7f757a8
    |     | `-ImplicitCastExpr 0x1efc7f88c50 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1efc7f88c30 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1efc7f7d418 'ctx' 'BIO_OK_CTX *'
    |     `-IntegerLiteral 0x1efc7f88c98 <col:21> 'int' 0
    |-ReturnStmt 0x1efc7f88d60 <line:601:5, col:12>
    | `-IntegerLiteral 0x1efc7f88d38 <col:12> 'int' 1
    |-LabelStmt 0x1efc7f88d98 <line:602:2, col:6> 'berr'
    | `-NullStmt 0x1efc7f88d90 <col:6>
    `-ReturnStmt 0x1efc7f88dd8 <line:604:5, col:12>
      `-IntegerLiteral 0x1efc7f88db0 <col:12> 'int' 0
