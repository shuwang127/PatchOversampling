TranslationUnitDecl 0x1f5d2771c68 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1f5d2772500 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1f5d2772200 '__int128'
|-TypedefDecl 0x1f5d2772570 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1f5d2772220 'unsigned __int128'
|-TypedefDecl 0x1f5d27728a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1f5d2772660 'struct __NSConstantString_tag'
|   `-Record 0x1f5d27725c8 '__NSConstantString_tag'
|-TypedefDecl 0x1f5d2772918 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1f5d2771e40 'unsigned long long'
|-TypedefDecl 0x1f5d27729b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1f5d2772970 'char *'
|   `-BuiltinType 0x1f5d2771d00 'char'
|-TypedefDecl 0x1f5d2772a20 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1f5d2772970 'char *'
|   `-BuiltinType 0x1f5d2771d00 'char'
|-TypedefDecl 0x1f5d2772ae0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1f5d2771e40 'unsigned long long'
|-TypedefDecl 0x1f5d2772b50 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1f5d2772970 'char *'
|   `-BuiltinType 0x1f5d2771d00 'char'
|-FunctionDecl 0x1f5d43bf420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1f5d43bf4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1f5d43bf530 <col:21> Implicit
|-FunctionDecl 0x1f5d43bf588 prev 0x1f5d43bf420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1f5d43bf2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1f5d43bf678 <col:21> Inherited Implicit
|-TypedefDecl 0x1f5d43bf6b8 prev 0x1f5d2772918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1f5d2771e40 'unsigned long long'
|-TypedefDecl 0x1f5d43bf760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1f5d43bf730 'size_t' sugar
|   |-Typedef 0x1f5d43bf6b8 'size_t'
|   `-BuiltinType 0x1f5d2771e40 'unsigned long long'
|-TypedefDecl 0x1f5d43bf7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1f5d2771da0 'long long'
|-TypedefDecl 0x1f5d43bf840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1f5d2771da0 'long long'
|-TypedefDecl 0x1f5d43bf8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1f5d2771de0 'unsigned short'
|-TypedefDecl 0x1f5d43bf920 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1f5d2771de0 'unsigned short'
|-TypedefDecl 0x1f5d43bf990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1f5d2771de0 'unsigned short'
|-TypedefDecl 0x1f5d43bfa00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1f5d2771d60 'int'
|-TypedefDecl 0x1f5d43bfa70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1f5d2771d80 'long'
|-TypedefDecl 0x1f5d43bfae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1f5d2771da0 'long long'
|-TypedefDecl 0x1f5d43bfb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1f5d43bfb40 '__time64_t' sugar
|   |-Typedef 0x1f5d43bfae0 '__time64_t'
|   `-BuiltinType 0x1f5d2771da0 'long long'
|-FunctionDecl 0x1f5d43bfce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1f5d43bff08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1f5d43f51f0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1f5d43c0048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1f5d43c00c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1f5d43c0138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1f5d43c01b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1f5d43f4f90 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1f5d43f52d0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1f5d43f5390 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1f5d43f5500 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1f5d43f54b0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1f5d43f5450 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1f5d43f5370 'struct threadlocaleinfostruct'
|       `-Record 0x1f5d44080c0 'threadlocaleinfostruct'
|-TypedefDecl 0x1f5d43f5610 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1f5d43f55c0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1f5d43f5560 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1f5d43f5430 'struct threadmbcinfostruct'
|       `-Record 0x1f5d43f5390 'threadmbcinfostruct'
|-RecordDecl 0x1f5d43f5668 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1f5d43f5720 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1f5d43f57e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f5d43f5870 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1f5d43f5900 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1f5d43f59b8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1f5d43f5960 'struct localeinfo_struct' sugar
|   `-RecordType 0x1f5d43f57c0 'struct localeinfo_struct'
|     `-Record 0x1f5d43f5720 'localeinfo_struct'
|-TypedefDecl 0x1f5d43f5a90 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1f5d43f5a40 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1f5d43f5960 'struct localeinfo_struct' sugar
|     `-RecordType 0x1f5d43f57c0 'struct localeinfo_struct'
|       `-Record 0x1f5d43f5720 'localeinfo_struct'
|-RecordDecl 0x1f5d43f5b08 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1f5d43f5bc0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f5d43f5c38 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1f5d43f5cf8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1f5d43f5d90 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1f5d43f5e00 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1f5d43f5eb8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1f5d43f5e60 'struct localerefcount' sugar
|   `-RecordType 0x1f5d43f5ba0 'struct localerefcount'
|     `-Record 0x1f5d43f5b08 'localerefcount'
|-RecordDecl 0x1f5d44080c0 prev 0x1f5d43f52d0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1f5d4408140 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f5d44081b8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1f5d4408228 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1f5d4408298 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1f5d4408308 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1f5d44084c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1f5d4408538 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1f5d44085a8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1f5d4408618 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1f5d4408688 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1f5d44086f8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1f5d4408750 parent 0x1f5d2771c68 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1f5d44088e0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1f5d4408950 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1f5d44089c0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1f5d4408a30 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1f5d4408ad0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1f5d4408b40 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1f5d4408c50 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1f5d4408d88 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1f5d4408e38 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1f5d4408de0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1f5d43f5370 'struct threadlocaleinfostruct'
|     `-Record 0x1f5d44080c0 'threadlocaleinfostruct'
|-RecordDecl 0x1f5d4408ed0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1f5d4408f90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f5d4409008 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1f5d44060a0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1f5d4406110 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1f5d4406180 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1f5d44061f0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1f5d4406260 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1f5d44062d0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1f5d4406340 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1f5d44063f0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1f5d44063a0 'struct _iobuf' sugar
|   `-RecordType 0x1f5d4408f70 'struct _iobuf'
|     `-Record 0x1f5d4408ed0 '_iobuf'
|-FunctionDecl 0x1f5d4406628 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1f5d44066f8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1f5d2771da0 'long long'
|-FunctionDecl 0x1f5d44068d8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d4406760 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1f5d4406bd0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f5d44069b0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1f5d4406a28 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1f5d4406f80 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1f5d4406cb0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1f5d4406d30 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1f5d4406db0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1f5d4409240 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f5d44090d0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1f5d4409470 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1f5d4409330 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1f5d4409620 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d4409540 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1f5d4409810 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f5d4409b08 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1f5d44098e0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1f5d4409960 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1f5d4409cc0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d4409be0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1f5d4409e70 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d4409d90 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1f5d440a020 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d4409f40 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1f5d440b1f8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d440b118 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1f5d440b388 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f5d440b6f0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1f5d440b450 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1f5d440b548 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1f5d440baa8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1f5d440b7d0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1f5d440b850 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1f5d440b8c8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1f5d440bc68 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d440bb88 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1f5d440bf30 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1f5d440bd40 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1f5d440bdc0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1f5d440a0e0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f5d440a4d8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1f5d440a578 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f5d440a5e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f5d440a658 prev 0x1f5d440a4d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1f5d440a2b0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1f5d440a330 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1f5d440a708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d440ab80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1f5d440a8b0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1f5d440a930 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1f5d440a9b0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1f5d440aea0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1f5d440af40 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1f5d440afa8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1f5d440b020 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1f5d440c100 prev 0x1f5d440aea0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f5d440ac60 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1f5d440ace0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1f5d440c1f8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1f5d440c3c0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f5d440c240 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1f5d440c2c0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1f5d440c618 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f5d440c4a0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1f5d440c518 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1f5d440c848 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f5d440c6f8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1f5d440cb40 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1f5d440c920 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1f5d440c998 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1f5d440cfd8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1f5d440d078 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1f5d4405090 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1f5d44050f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1f5d4405160 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1f5d44051e8 prev 0x1f5d440cfd8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1f5d440cc20 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1f5d440cc98 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d440cd10 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d440cd88 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1f5d44056f0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f5d44052d8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1f5d4405350 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d44053c8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4405440 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d44054b8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1f5d4405bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1f5d44058e0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1f5d4405960 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1f5d44059d8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1f5d4405c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d440e1c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1f5d4405db0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1f5d4405e30 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1f5d4405eb0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1f5d4405f28 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1f5d440e570 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1f5d440e610 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1f5d440e678 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1f5d440e6f0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1f5d440e758 prev 0x1f5d440e570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1f5d440e3a8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1f5d440e428 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1f5d440e938 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1f5d440e808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d440ed78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d440ea78 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1f5d440eaf8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1f5d440eb90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d440ee30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4412160 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f5d440ef70 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1f5d440eff0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1f5d4412450 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4412238 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f5d44122b8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4412330 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d44127b0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1f5d4412530 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1f5d4412608 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1f5d4412b68 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1f5d4412888 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4412908 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1f5d4412988 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1f5d4412dc8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1f5d4412c48 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1f5d440f178 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1f5d4412e98 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4412f18 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1f5d4412f98 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1f5d440f3d8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1f5d440f258 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1f5d440f898 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1f5d440f938 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1f5d440f9a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1f5d440fa08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1f5d440fa70 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1f5d440faf8 prev 0x1f5d440f898 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1f5d440f4e0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1f5d440f558 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d440f5d0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d440f648 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1f5d440fcc0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d440fbe0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1f5d440fe50 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f5d440ffd8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f5d4411310 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1f5d44100a8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1f5d4411160 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f5d4411638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f5d44114f0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1f5d44116e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4411900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d4411820 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1f5d4411b20 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1f5d44119d8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1f5d4411cd0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d4411bf0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1f5d4411f20 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1f5d4411da8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1f5d4411e28 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1f5d440d110 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1f5d440d1b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1f5d440d220 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1f5d440d288 prev 0x1f5d440d110 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1f5d4412000 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1f5d440d378 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1f5d440d4a8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f5d440d3c8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1f5d440d6f8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f5d440d580 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1f5d440d5f8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1f5d440d8b8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f5d440d7d8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1f5d440dad8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1f5d440d990 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1f5d440dd28 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f5d440dbb0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1f5d440dc28 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1f5d440dee8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1f5d440de08 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1f5d44640e0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1f5d440dfc0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1f5d440e040 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1f5d44642a0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1f5d44641c0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1f5d4464530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1f5d4464450 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1f5d44645d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1f5d44647d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f5d44646f8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1f5d4464960 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f5d4464c08 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1f5d4464ca8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1f5d4464d18 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1f5d4464d80 prev 0x1f5d4464c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1f5d4464af0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1f5d4464f58 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1f5d4464e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4462300 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d44620c8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4462140 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d44623b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d44625d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f5d44624f8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1f5d4462828 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d44626b0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4462728 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4462be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1f5d44629c0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4462a40 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1f5d4462c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4462ec0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f5d4462de0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1f5d4463148 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1f5d4463000 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1f5d4463330 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1f5d4463780 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1f5d44633f8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4463478 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1f5d44634f8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1f5d4463570 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f5d4463c00 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f5d4463870 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d44638e8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4463960 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d44639e0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1f5d4465020 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f5d4463cf0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d4463d68 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d4463de8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1f5d44651e8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f5d4465108 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1f5d44655c0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1f5d4465660 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f5d44656c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1f5d4465740 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1f5d44657a8 prev 0x1f5d44655c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1f5d4465380 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1f5d4465400 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1f5d4465988 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1f5d4465858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4465d78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4465a98 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1f5d4465b18 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4465b90 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d4465e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d44610e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1f5d4465f78 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1f5d4460fe0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1f5d44613d8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d44611c0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1f5d4461240 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1f5d44612b8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4461868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f5d4461580 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1f5d44615f8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4461678 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1f5d4461920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4461ef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4461b60 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1f5d4461bd8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4461c58 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4461cd0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d445ffd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4460330 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f5d4460118 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1f5d4460190 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d4460210 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1f5d44606c8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4460418 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1f5d4460490 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4460510 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4460588 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4460928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1f5d44609c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4460c80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1f5d4460b10 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1f5d445dfb0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1f5d4460d58 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1f5d4460dd0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f5d445e230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f5d445e150 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1f5d445e2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d445e598 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f5d445e420 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1f5d445e498 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1f5d445e9b0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f5d445ea50 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1f5d445eab8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f5d445eb20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f5d445eba0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1f5d445ec08 prev 0x1f5d445e9b0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f5d445e670 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1f5d445e6f0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1f5d445e768 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f5d445ed08 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1f5d4466030 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f5d44660d0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1f5d4466138 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f5d44661a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f5d4466220 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1f5d4466288 prev 0x1f5d4466030 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1f5d445ed50 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1f5d445edd0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1f5d445ee48 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f5d4466388 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1f5d44665e8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1f5d44663d0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4466450 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1f5d44664c8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d44668e0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1f5d44666c8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4466748 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1f5d44667c0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4466c28 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f5d4466cc8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f5d4466d30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f5d4466da8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1f5d4466e10 prev 0x1f5d4466c28 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f5d44669c8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4466a40 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f5d4466f08 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1f5d445f0f8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f5d445f198 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f5d445f200 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f5d445f278 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1f5d445f2e0 prev 0x1f5d445f0f8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1f5d4466f58 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1f5d445efc0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f5d445f3d8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1f5d445f5a0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f5d445f428 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1f5d445f4a0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d445f7f8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f5d445f680 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1f5d445f6f8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d445fd58 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f5d445fdf8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f5d445fe60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1f5d445fec8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f5d445ff30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f5d446c090 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1f5d446c0f8 prev 0x1f5d445fd58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f5d445f998 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d445fa10 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d445fa90 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1f5d445fb08 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1f5d446c2e8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1f5d446c1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d446c758 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f5d446c338 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d446c3b0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d446c428 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d446c4a8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446c520 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d446cb98 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f5d446c850 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d446c8c8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d446c940 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d446c9c0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446ca38 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d446cf68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f5d446cd50 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1f5d446cdc8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d446ce48 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1f5d446d020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d44674b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f5d4467200 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1f5d4467278 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d44672f8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4467370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1f5d4467570 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4467968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f5d44676b8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d4467730 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d44677b0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4467828 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4467d28 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1f5d4467a58 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1f5d4467ad8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4467b50 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d446a110 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1f5d446a1b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f5d446a218 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1f5d446a290 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1f5d446a2f8 prev 0x1f5d446a110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1f5d4467ed0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1f5d4467f50 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1f5d446a4d8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1f5d446a3a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d446a900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f5d446a9a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f5d446aa08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f5d446aa70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f5d446aaf0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1f5d446ab58 prev 0x1f5d446a900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f5d446a5e8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1f5d446a668 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1f5d446a6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1f5d446ad40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1f5d446ac10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d446d0a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f5d446d140 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f5d446d1a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f5d446d210 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f5d446d290 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1f5d446d2f8 prev 0x1f5d446d0a0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1f5d446ad90 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1f5d446ae10 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1f5d446ae88 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f5d446d3f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1f5d446d5c0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f5d446d448 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446d4c0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d446d8b8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f5d446d6a0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d446d718 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d446d798 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1f5d446dc50 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f5d446d9a0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d446da18 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d446da98 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446db10 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d446deb8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f5d446dd38 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1f5d446ddb8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1f5d446e0b0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f5d446df98 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1f5d446e3a0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f5d446e188 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1f5d446e200 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d446e280 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1f5d446e698 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1f5d446e480 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f5d446e500 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446e578 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d446e8f8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f5d446e780 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446e7f8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d446ec88 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f5d446e9d8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1f5d446ea50 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d446ead0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446eb48 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d446ee58 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f5d446ed78 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1f5d446f0c0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f5d446ef30 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446efa8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d446f280 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f5d446f1a0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1f5d446f410 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f5d446f658 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d446f4e0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446f558 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d446f8b0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d446f738 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446f7b0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d446fb08 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d446f990 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1f5d446fa08 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d446feb8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d446fbe8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1f5d446fc60 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d446fcd8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4468170 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d446ffa0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4470018 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4468050 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4468468 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4468258 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1f5d44682d0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4468348 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4468760 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4468548 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1f5d44685c8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4468640 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4468a58 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4468840 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f5d44688c0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4468938 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4468d50 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4468b38 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4468bb8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4468c30 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4470230 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4468e30 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4468eb0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4468f28 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4468fa0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d44705c8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4470318 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4470398 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4470410 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4470488 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4470960 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d44706b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4470730 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1f5d44707a8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4470820 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4470df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4470b10 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d4470b90 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4470c08 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d4470eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4469370 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4470ff8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d4469060 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d44690e0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4469158 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4469710 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4469460 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d44694d8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4469558 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1f5d44695d0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4469c60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4469900 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d4469980 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1f5d44699f8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f5d4469a70 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1f5d4469d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4473338 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4469e68 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d4469ee0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4469f60 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4469fd8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4473100 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4473778 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4473430 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d44734a8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4473528 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1f5d44735a0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4473618 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d44739e8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4473870 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1f5d44738e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4473c40 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4473ac8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4473b40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4473f30 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4473d20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4473d98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4473e10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4472220 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4474018 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4474090 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4472100 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4472678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d44723c8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d4472440 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d44724c0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4472538 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d4472738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4472b30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4472880 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d44728f8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4472978 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1f5d44729f0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4474110 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4472c20 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d4472c98 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4472d10 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4472d90 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1f5d4472e08 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4474650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4474308 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d4474380 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4474400 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4474478 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f5d44744f0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1f5d4474718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4474b98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4474868 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d44748e0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4474960 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1f5d44749d8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4474a50 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4475180 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4474c90 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1f5d4474d08 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4474d80 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4474e00 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1f5d4474e78 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4474ef0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4475540 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1f5d4475278 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f5d44752f0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4475370 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1f5d44757b0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1f5d4475640 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1f5d44759c8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1f5d4475ca8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1f5d4475a90 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1f5d4475b08 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1f5d4475ef0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1f5d4475d80 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1f5d4476130 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1f5d4475fc0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1f5d44762b8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1f5d44764f0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1f5d4476380 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1f5d44763f8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1f5d44766a0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1f5d44765c8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1f5d4476948 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1f5d4476770 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f5d44767e8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1f5d4476cf0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1f5d4476a20 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f5d4476aa0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1f5d4476b18 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1f5d4476ff0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1f5d4476dd0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4476e48 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1f5d44772f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1f5d44770c8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1f5d4477150 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1f5d4477600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f5d4477490 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1f5d44776a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4477968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1f5d44777e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1f5d4477c70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d4477a38 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1f5d4477ab0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d4477ec0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d4477d48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1f5d4477dc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d44710e0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f5d4477f98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d4471290 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f5d44711b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d4471440 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f5d4471360 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d44717d8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d4471510 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4471588 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4471600 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4471ac8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d44718b8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4471930 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d44719a8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4471db8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d4471ba8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4471c20 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4471c98 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4479160 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d4471e98 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4471f10 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4471f88 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4479460 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d4479240 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d44792b8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d44796b0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d4479538 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d44795b0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4479900 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d4479788 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4479800 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4479b50 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d44799d8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4479a50 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4479f08 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d4479c28 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f5d4479ca0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d4479d18 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d447a380 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d4479fe8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f5d447a060 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d447a0d8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d447a170 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d447a738 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d447a468 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f5d447a4e0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d447a558 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d447aa28 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d447a818 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1f5d447a890 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d447a908 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d447ad18 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d447ab08 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d447ab80 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d447abf8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d447b0a0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d447adf8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d447ae70 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d447aee8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d447af60 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d447b530 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d447b1a8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d447b220 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d447b298 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d447b310 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d447ba38 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d447b618 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d447b690 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d447b708 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d447b780 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d447b7f8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d447bdf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d447bbe8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f5d447bc60 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d447bcd8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f5d447beb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d447c3c0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d447c0b0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f5d447c190 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d447c208 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d447c280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1f5d447c480 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d447c738 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d447c5c0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1f5d447c638 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d447c8f0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f5d447c810 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d447cbd0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d447c9c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f5d447ca38 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d447cab0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d447ce28 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d447ccb0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d447cd28 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4483020 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d447cf00 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d447cf78 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d447cff0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d44833a8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d4483100 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d4483178 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d44831f0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4483268 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4483570 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f5d4483490 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d44837b8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d4483640 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d44836b8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4483ac0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4483890 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4483908 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4483d10 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4483b98 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4483c10 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4483f60 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4483de8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4483e60 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4485338 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4485068 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d44850e0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4485158 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4485628 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4485418 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4485490 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4485508 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4485918 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4485708 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4485780 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d44857f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4485cd8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d44859f8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4485a70 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4485ae8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d447efe0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4485db8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4485e30 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4485ea8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d447f2d0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d447f0c0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f5d447f138 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d447f1b0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d447f720 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d447f3b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f5d447f428 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d447f4a0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d447f518 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d447fab0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d447f808 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1f5d447f880 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d447f8f8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d447f970 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d447fe40 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d447fb98 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1f5d447fc10 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d447fc88 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d447fd00 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4486360 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d447ff28 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d4486050 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d44860c8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4486140 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d44866f0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4486448 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d44864c0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4486538 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d44865b0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4486a80 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d44867d8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d4486850 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d44868c8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4486940 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4486f88 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4486b68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d4486be0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4486c58 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4486cd0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4486d48 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4484398 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4484058 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d44840d0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4484148 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d44841c0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4484238 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d44847c8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4484488 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d4484500 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4484578 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d44845f0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4484668 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4484a30 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d44848b8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4484930 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4484c80 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4484b08 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4484b80 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4484f68 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4484d58 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4484dd0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4484e48 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d44873f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4487150 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d44871c8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4487240 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d44872b8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d44874b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4487a28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4487600 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d4487678 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d44876f0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4487768 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d44877e0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4487f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4487c20 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d4487c98 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4487d10 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4487d88 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f5d4487e00 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1f5d447fff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4480600 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4480138 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f5d44801b0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4480228 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d44802a0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4480318 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d4480390 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d4480b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d44808c8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f5d4480940 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1f5d4480bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f5d4480cc8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f5d44882d8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d4480f80 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f5d4488080 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d44880f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1f5d4488390 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f5d44884a8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f5d4488a48 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4488768 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f5d44887e0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4488858 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1f5d4488b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f5d4488c20 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f5d4481210 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d4488ee0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f5d4488f58 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4488fd0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f5d4481000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1f5d44812d0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f5d44813f0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f5d44816f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1f5d4481518 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f5d4481590 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4481608 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1f5d448f380 <line:37:1, line:44:1>
|   |-DeclStmt 0x1f5d4481840 <line:38:5, col:21>
|   | `-VarDecl 0x1f5d44817d8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1f5d44818d8 <line:39:5, col:13>
|   | `-VarDecl 0x1f5d4481870 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1f5d4481c30 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1f5d4481c18 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f5d4481b30 <col:34> '<builtin fn type>' Function 0x1f5d44819c8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1f5d4481b68 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1f5d44817d8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1f5d4481ba0 <col:29> 'const wchar_t *' lvalue ParmVar 0x1f5d4481608 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1f5d4481ef0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1f5d4481c60 <col:5> 'int' lvalue Var 0x1f5d4481870 '_Ret' 'int'
|   | `-CallExpr 0x1f5d4481e30 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1f5d4481e18 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f5d4481c98 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f5d4486f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1f5d4481e78 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f5d4481cb8 <col:27> 'wchar_t *' lvalue ParmVar 0x1f5d4481518 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1f5d4481e90 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f5d4481cd8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f5d4481590 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1f5d4481ea8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f5d4481cf8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f5d4481608 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1f5d4481ec0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1f5d4481d80 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1f5d4481d58 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1f5d4481d18 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1f5d4481ed8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f5d4481da0 <col:59> 'va_list':'char *' lvalue Var 0x1f5d44817d8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1f5d448f310 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1f5d448f2f8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f5d448f248 <col:34> '<builtin fn type>' Function 0x1f5d448f0e0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1f5d448f280 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1f5d44817d8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1f5d448f370 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1f5d448f358 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1f5d448f338 <col:12> 'int' lvalue Var 0x1f5d4481870 '_Ret' 'int'
|-FunctionDecl 0x1f5d44819c8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1f5d4481a68 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1f5d4481ad8 <col:34> Implicit
|-FunctionDecl 0x1f5d448f0e0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1f5d448f180 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1f5d448f1f0 <col:34> Implicit
|-FunctionDecl 0x1f5d448f678 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1f5d448f3d0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f5d448f448 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d448f4c0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448f538 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1f5d448f960 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1f5d448f950 <line:51:5, col:62>
|     `-CallExpr 0x1f5d448f890 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1f5d448f878 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1f5d448f750 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f5d4486f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1f5d448f8d8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f5d448f770 <col:27> 'wchar_t *' lvalue ParmVar 0x1f5d448f3d0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1f5d448f8f0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1f5d448f790 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f5d448f448 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1f5d448f908 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f5d448f7b0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f5d448f4c0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1f5d448f920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1f5d448f838 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1f5d448f810 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1f5d448f7d0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1f5d448f938 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1f5d448f858 <col:59> 'va_list':'char *' lvalue ParmVar 0x1f5d448f538 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1f5d448fc00 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1f5d448f988 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f5d448fa00 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d448fa78 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448faf0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1f5d448a138 <line:61:1, line:68:1>
|   |-DeclStmt 0x1f5d448fd50 <line:62:5, col:21>
|   | `-VarDecl 0x1f5d448fce8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1f5d448fde8 <line:63:5, col:13>
|   | `-VarDecl 0x1f5d448fd80 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1f5d448fe90 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1f5d448fe78 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f5d448fe00 <col:34> '<builtin fn type>' Function 0x1f5d44819c8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1f5d448fe20 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1f5d448fce8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1f5d448fe58 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1f5d448faf0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1f5d4490090 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1f5d448fec0 <col:5> 'int' lvalue Var 0x1f5d448fd80 '_Ret' 'int'
|   | `-CallExpr 0x1f5d448ffd0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1f5d448ffb8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f5d448fef8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f5d4486f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1f5d4490018 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f5d448ff18 <col:27> 'wchar_t *' lvalue ParmVar 0x1f5d448f988 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1f5d4490030 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f5d448ff38 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f5d448fa00 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1f5d4490048 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f5d448ff58 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f5d448fa78 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1f5d4490060 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f5d448ff78 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1f5d448faf0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1f5d4490078 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f5d448ff98 <col:64> 'va_list':'char *' lvalue Var 0x1f5d448fce8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1f5d448a0c8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1f5d448a0b0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f5d44900b0 <col:34> '<builtin fn type>' Function 0x1f5d448f0e0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1f5d448a090 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1f5d448fce8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1f5d448a128 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1f5d448a110 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1f5d448a0f0 <col:12> 'int' lvalue Var 0x1f5d448fd80 '_Ret' 'int'
|-FunctionDecl 0x1f5d448a4c8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1f5d448a188 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f5d448a200 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d448a278 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448a2f0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f5d448a368 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1f5d448a750 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1f5d448a740 <line:75:5, col:67>
|     `-CallExpr 0x1f5d448a680 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1f5d448a668 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1f5d448a5a8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f5d4486f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1f5d448a6c8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f5d448a5c8 <col:27> 'wchar_t *' lvalue ParmVar 0x1f5d448a188 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1f5d448a6e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1f5d448a5e8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f5d448a200 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1f5d448a6f8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f5d448a608 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f5d448a278 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1f5d448a710 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f5d448a628 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1f5d448a2f0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1f5d448a728 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1f5d448a648 <col:64> 'va_list':'char *' lvalue ParmVar 0x1f5d448a368 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1f5d448a998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f5d448a778 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1f5d448a7f0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1f5d448abe8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f5d448aa70 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d448aae8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d448aed0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f5d448acc0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448ad38 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f5d448adb0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f5d448c228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d448c0b0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1f5d448c128 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f5d448c2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d448c6e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d448c4d8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1f5d448c550 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448c5c8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d448c7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d448ca58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d448c8e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1f5d448c958 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d448cd40 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d448cb30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f5d448cba8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d448cc20 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d448b110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d448cee0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448cf58 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f5d448b1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d448b698 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d448b3c0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448b438 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448b4b0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d448b750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d448ba08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d448b890 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1f5d448b908 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d448bcf0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d448bae0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448bb58 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d448bbd0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d448e1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d448be90 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448bf08 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d448bf80 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f5d448e270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d448e7f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d448e470 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448e4e8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d448e560 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448e5d8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d448e8b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d448ec00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d448e9f0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448ea68 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d448eae0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d448ef88 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d448ece0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f5d448ed58 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d448edd0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d448ee48 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d44902a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1f5d44901c0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f5d4490348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d44906c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4490548 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f5d44905c0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f5d4490770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4490990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f5d44908b0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1f5d4490bd8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f5d4490a60 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4490ad8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f5d4490ed8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1f5d4490cb8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1f5d4490d30 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1f5d4489228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f5d4491070 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4489080 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1f5d44892d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d44896e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f5d4489420 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1f5d4489498 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4489510 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1f5d4489b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1f5d4489880 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f5d44898f8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4489970 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1f5d4489bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4494178 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1f5d4489d40 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1f5d4489db8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4489e30 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4489ea8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1f5d44943d0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1f5d4494260 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1f5d4494610 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f5d44944a0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4494518 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1f5d44947c8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1f5d44946e8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1f5d4494ab8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1f5d4494898 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1f5d4494910 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1f5d4494d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f5d4494c50 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1f5d4494dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f5d4494fe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1f5d4494f10 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1f5d44911f8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1f5d44950b8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1f5d4491100 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1f5d4491440 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1f5d44912d0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f5d4491348 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1f5d44915f0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f5d4491518 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1f5d4491798 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f5d44916c0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1f5d4491948 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d4491868 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1f5d4491af8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f5d4491a18 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1f5d4491e70 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f5d4491bd0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1f5d4491c48 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4491cc0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d4491d38 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1f5d4498340 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f5d4491f60 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1f5d4491fd8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4492050 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4498170 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d44981e8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1f5d4498650 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1f5d4498430 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f5d44984b0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1f5d4498530 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1f5d4498810 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1f5d4498730 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1f5d4498b00 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1f5d44988e0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1f5d4498960 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1f5d44989e0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1f5d4498cc0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1f5d4498be0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1f5d4499038 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f5d4498d98 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1f5d4498e10 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f5d4498e88 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f5d4498f00 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1f5d44962c8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f5d4496150 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1f5d44961c8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1f5d4496600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1f5d4496480 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1f5d4496500 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1f5d44966b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1f5d4496968 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f5d4496a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1f5d4496d48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1f5d4496bd0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1f5d4496c50 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1f5d4496df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1f5d4493120 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f5d44931c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1f5d4493460 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1f5d4493380 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1f5d4493508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1f5d4493788 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f5d4493828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1f5d4493ad0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1f5d44939f0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1f5d4493b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1f5d4493e58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1f5d4493d78 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1f5d4493f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1f5d44992f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f5d4499180 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1f5d44991f8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1f5d44993a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1f5d4499668 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f5d4499708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1f5d4499940 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1f5d4499b50 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1f5d4499a10 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1f5d4499da0 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1f5d4499c28 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1f5d44a71d0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1f5d4499e70 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1f5d4499ee8 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1f5d4499f68 <col:98, col:107> col:107 _Line 'unsigned int'
|-FunctionDecl 0x1f5d44a74a0 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:81:1, col:53> col:12 invalid ok_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1f5d44a72b8 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x1f5d44a7338 <col:29, col:41> col:41 buf 'const char *'
| `-ParmVarDecl 0x1f5d44a73b8 <col:46, col:50> col:50 num 'int'
|-FunctionDecl 0x1f5d44a7760 <line:82:1, col:47> col:12 invalid ok_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1f5d44a7570 <col:20, col:25> col:25 invalid h 'int *'
| |-ParmVarDecl 0x1f5d44a75f0 <col:28, col:34> col:34 buf 'char *'
| `-ParmVarDecl 0x1f5d44a7670 <col:39, col:43> col:43 size 'int'
|-FunctionDecl 0x1f5d44a7ab0 <line:83:1, col:59> col:13 invalid ok_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1f5d44a7830 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x1f5d44a78b0 <col:29, col:33> col:33 cmd 'int'
| |-ParmVarDecl 0x1f5d44a7930 <col:38, col:43> col:43 arg1 'long'
| `-ParmVarDecl 0x1f5d44a79b0 <col:49, col:55> col:55 arg2 'void *'
|-FunctionDecl 0x1f5d44a7c20 <line:84:1, col:25> col:12 invalid ok_new 'int (int *)' static
| `-ParmVarDecl 0x1f5d44a7b88 <col:19, col:24> col:24 invalid h 'int *'
|-FunctionDecl 0x1f5d44a7d78 <line:85:1, col:29> col:12 invalid ok_free 'int (int *)' static
| `-ParmVarDecl 0x1f5d44a7ce0 <col:20, col:25> col:25 invalid data 'int *'
|-FunctionDecl 0x1f5d44a8020 <line:86:1, col:62> col:13 invalid ok_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1f5d44a7e38 <col:30, col:35> col:35 invalid h 'int *'
| |-ParmVarDecl 0x1f5d44a7eb8 <col:38, col:42> col:42 cmd 'int'
| `-ParmVarDecl 0x1f5d44a7f38 <col:47, col:60> col:60 invalid fp 'int *'
|-FunctionDecl 0x1f5d44a3190 <line:88:1, col:33> col:19 invalid sig_out 'int (int *)' static
| `-ParmVarDecl 0x1f5d44a80f0 <col:27, col:32> col:32 invalid b 'int *'
|-FunctionDecl 0x1f5d44a32e8 <line:89:1, col:32> col:19 invalid sig_in 'int (int *)' static
| `-ParmVarDecl 0x1f5d44a3250 <col:26, col:31> col:31 invalid b 'int *'
|-FunctionDecl 0x1f5d44a3440 <line:90:1, col:35> col:19 invalid block_out 'int (int *)' static
| `-ParmVarDecl 0x1f5d44a33a8 <col:29, col:34> col:34 invalid b 'int *'
|-FunctionDecl 0x1f5d44a3598 <line:91:1, col:34> col:19 invalid block_in 'int (int *)' static
| `-ParmVarDecl 0x1f5d44a3500 <col:28, col:33> col:33 invalid b 'int *'
|-RecordDecl 0x1f5d44a3640 <line:97:9, line:108:1> line:97:16 invalid struct ok_struct definition
| |-FieldDecl 0x1f5d44a3710 <line:98:5, col:12> col:12 referenced buf_len 'size_t':'unsigned long long'
| |-FieldDecl 0x1f5d44a3778 <line:99:5, col:12> col:12 referenced buf_off 'size_t':'unsigned long long'
| |-FieldDecl 0x1f5d44a37e0 <line:100:5, col:12> col:12 referenced buf_len_save 'size_t':'unsigned long long'
| |-FieldDecl 0x1f5d44a3848 <line:101:5, col:12> col:12 referenced buf_off_save 'size_t':'unsigned long long'
| |-FieldDecl 0x1f5d44a38b8 <line:102:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x1f5d44a3928 <line:103:5, col:9> col:9 referenced finished 'int'
| |-FieldDecl 0x1f5d44a3998 <line:104:5, col:17> col:17 invalid md 'int *'
| |-FieldDecl 0x1f5d44a3a08 <line:105:5, col:9> col:9 referenced blockout 'int'
| |-FieldDecl 0x1f5d44a3a78 <line:106:5, col:9> col:9 referenced sigio 'int'
| `-FieldDecl 0x1f5d44a3be8 <line:107:5, col:19> col:19 invalid buf 'unsigned char'
|-TypedefDecl 0x1f5d44a3c98 <line:97:1, line:108:3> col:3 referenced BIO_OK_CTX 'struct ok_struct':'struct ok_struct'
| `-ElaboratedType 0x1f5d44a3c40 'struct ok_struct' sugar
|   `-RecordType 0x1f5d44a36e0 'struct ok_struct'
|     `-Record 0x1f5d44a3640 'ok_struct'
|-VarDecl 0x1f5d44a3d20 <line:110:1, col:25> col:25 invalid methods_ok 'const int' static
|-FunctionDecl 0x1f5d44a3fc0 <line:123:1, line:126:1> line:123:19 invalid BIO_f_reliable 'const int *(void)'
| `-CompoundStmt 0x1f5d44a4078 <line:124:1, line:126:1>
|-FunctionDecl 0x1f5d44a91f0 <line:128:1, line:147:1> line:128:12 invalid ok_new 'int (int *)' static
| |-ParmVarDecl 0x1f5d44a40a0 <col:19, col:24> col:24 invalid bi 'int *'
| `-CompoundStmt 0x1f5d44a9ff8 <line:129:1, line:147:1>
|   |-DeclStmt 0x1f5d44a93a0 <line:130:5, col:20>
|   | `-VarDecl 0x1f5d44a9338 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-BinaryOperator 0x1f5d44a9640 <line:132:5, col:38> 'BIO_OK_CTX *' '='
|   | |-DeclRefExpr 0x1f5d44a93b8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44a9338 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1f5d44a9628 <col:11, col:38> 'BIO_OK_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x1f5d44a9600 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x1f5d44a95e8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f5d44a9508 <col:11> 'int ()' Function 0x1f5d44a9440 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x1f5d44a9598 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x1f5d44a9578 <col:32, col:37> 'BIO_OK_CTX':'struct ok_struct' lvalue
|   |         `-UnaryOperator 0x1f5d44a9560 <col:33, col:34> 'BIO_OK_CTX':'struct ok_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x1f5d44a9548 <col:34> 'BIO_OK_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x1f5d44a9528 <col:34> 'BIO_OK_CTX *' lvalue Var 0x1f5d44a9338 'ctx' 'BIO_OK_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x1f5d44a9790 <line:133:5, line:134:16>
|   | |-BinaryOperator 0x1f5d44a9738 <line:133:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1f5d44a9708 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:133:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f5d44a9660 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44a9338 'ctx' 'BIO_OK_CTX *'
|   | | `-ImplicitCastExpr 0x1f5d44a9720 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_OK_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1f5d44a96e8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f5d44a96c0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f5d44a9680 <col:26> 'int' 0
|   | `-ReturnStmt 0x1f5d44a9780 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:134:9, col:16>
|   |   `-IntegerLiteral 0x1f5d44a9758 <col:16> 'int' 0
|   |-BinaryOperator 0x1f5d44a9838 <line:136:5, col:17> 'int' '='
|   | |-MemberExpr 0x1f5d44a97e0 <col:5, col:10> 'int' lvalue ->cont 0x1f5d44a38b8
|   | | `-ImplicitCastExpr 0x1f5d44a97c8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f5d44a97a8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44a9338 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x1f5d44a9810 <col:17> 'int' 1
|   |-BinaryOperator 0x1f5d44a98e8 <line:137:5, col:18> 'int' '='
|   | |-MemberExpr 0x1f5d44a9890 <col:5, col:10> 'int' lvalue ->sigio 0x1f5d44a3a78
|   | | `-ImplicitCastExpr 0x1f5d44a9878 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f5d44a9858 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44a9338 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x1f5d44a98c0 <col:18> 'int' 1
|   |-IfStmt 0x1f5d44a9d40 <line:139:5, line:142:5>
|   | |-OpaqueValueExpr 0x1f5d44a9d28 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1f5d44a9d08 <line:139:26, line:142:5>
|   |   |-CallExpr 0x1f5d44a9c90 <line:140:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1f5d44a9c78 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1f5d44a9c38 <col:9> 'int ()' Function 0x1f5d44a9b70 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1f5d44a9cb8 <col:22> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1f5d44a9c58 <col:22> 'BIO_OK_CTX *' lvalue Var 0x1f5d44a9338 'ctx' 'BIO_OK_CTX *'
|   |   `-ReturnStmt 0x1f5d44a9cf8 <line:141:9, col:16>
|   |     `-IntegerLiteral 0x1f5d44a9cd0 <col:16> 'int' 0
|   `-ReturnStmt 0x1f5d44a9fe8 <line:146:5, col:12>
|     `-IntegerLiteral 0x1f5d44a9fc0 <col:12> 'int' 1
|-FunctionDecl 0x1f5d44aa0f0 <line:149:1, line:164:1> line:149:12 invalid ok_free 'int (int *)' static
| |-ParmVarDecl 0x1f5d44aa058 <col:20, col:25> col:25 invalid a 'int *'
| `-CompoundStmt 0x1f5d44ab8f8 <line:150:1, line:164:1>
|   |-DeclStmt 0x1f5d44ab278 <line:151:5, col:20>
|   | `-VarDecl 0x1f5d44ab210 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x1f5d44ab368 <line:153:5, line:154:16>
|   | |-OpaqueValueExpr 0x1f5d44ab350 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1f5d44ab340 <col:9, col:16>
|   |   `-IntegerLiteral 0x1f5d44ab318 <col:16> 'int' 0
|   |-CallExpr 0x1f5d44ab788 <line:159:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x1f5d44ab770 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f5d44ab700 <col:5> 'int ()' Function 0x1f5d44ab638 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x1f5d44ab7b8 <col:24> 'BIO_OK_CTX *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1f5d44ab720 <col:24> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ab210 'ctx' 'BIO_OK_CTX *'
|   | `-UnaryExprOrTypeTraitExpr 0x1f5d44ab750 <col:29, col:46> 'unsigned long long' sizeof 'BIO_OK_CTX':'struct ok_struct'
|   `-ReturnStmt 0x1f5d44ab8e8 <line:163:5, col:12>
|     `-IntegerLiteral 0x1f5d44ab8c0 <col:12> 'int' 1
|-FunctionDecl 0x1f5d44abae8 <line:166:1, line:250:1> line:166:12 invalid ok_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1f5d44ab940 <col:20, col:25> col:25 invalid b 'int *'
| |-ParmVarDecl 0x1f5d44ab9c0 <col:28, col:34> col:34 used out 'char *'
| |-ParmVarDecl 0x1f5d44aba40 <col:39, col:43> col:43 used outl 'int'
| `-CompoundStmt 0x1f5d44ac5b0 <line:167:1, line:250:1>
|   |-DeclStmt 0x1f5d44abd80 <line:168:5, col:22>
|   | |-VarDecl 0x1f5d44abbd0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1f5d44abc38 <col:15> 'int' 0
|   | |-VarDecl 0x1f5d44abc78 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x1f5d44abcf8 <col:5, col:21> col:21 used n 'int'
|   |-DeclStmt 0x1f5d44abe10 <line:169:5, col:20>
|   | `-VarDecl 0x1f5d44abda8 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x1f5d44abf70 <line:172:5, line:173:16>
|   | |-BinaryOperator 0x1f5d44abf18 <line:172:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1f5d44abee8 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:172:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f5d44abe28 <col:9> 'char *' lvalue ParmVar 0x1f5d44ab9c0 'out' 'char *'
|   | | `-ImplicitCastExpr 0x1f5d44abf00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1f5d44abec8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f5d44abea0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f5d44abe60 <col:26> 'int' 0
|   | `-ReturnStmt 0x1f5d44abf60 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:173:9, col:16>
|   |   `-IntegerLiteral 0x1f5d44abf38 <col:16> 'int' 0
|   |-IfStmt 0x1f5d44a53c0 <line:178:5, line:179:16>
|   | |-OpaqueValueExpr 0x1f5d44a53a8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1f5d44a5398 <col:9, col:16>
|   |   `-IntegerLiteral 0x1f5d44a5370 <col:16> 'int' 0
|   |-WhileStmt 0x1f5d44ac420 <line:181:5, line:245:5>
|   | |-BinaryOperator 0x1f5d44a5450 <line:181:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x1f5d44a5438 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f5d44a53d8 <col:12> 'int' lvalue ParmVar 0x1f5d44aba40 'outl' 'int'
|   | | `-IntegerLiteral 0x1f5d44a5410 <col:19> 'int' 0
|   | `-CompoundStmt 0x1f5d44ac3d8 <col:22, line:245:5>
|   |   |-IfStmt 0x1f5d44ad8f8 <line:184:9, line:210:9>
|   |   | |-ImplicitCastExpr 0x1f5d44a54d8 <line:184:13, col:18> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x1f5d44a54a8 <col:13, col:18> 'int' lvalue ->blockout 0x1f5d44a3a08
|   |   | |   `-ImplicitCastExpr 0x1f5d44a5490 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1f5d44a5470 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   | `-CompoundStmt 0x1f5d44ad8b0 <col:28, line:210:9>
|   |   |   |-BinaryOperator 0x1f5d44a5660 <line:185:13, col:37> 'int' '='
|   |   |   | |-DeclRefExpr 0x1f5d44a54f0 <col:13> 'int' lvalue Var 0x1f5d44abc78 'i' 'int'
|   |   |   | `-ImplicitCastExpr 0x1f5d44a5648 <col:17, col:37> 'int' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1f5d44a5628 <col:17, col:37> 'unsigned long long' '-'
|   |   |   |     |-ImplicitCastExpr 0x1f5d44a55f8 <col:17, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |     | `-MemberExpr 0x1f5d44a5560 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   |   |   |     |   `-ImplicitCastExpr 0x1f5d44a5548 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |     |     `-DeclRefExpr 0x1f5d44a5528 <col:17> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |   |     `-ImplicitCastExpr 0x1f5d44a5610 <col:32, col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x1f5d44a55c8 <col:32, col:37> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   |   |   |         `-ImplicitCastExpr 0x1f5d44a55b0 <col:32> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x1f5d44a5590 <col:32> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |   |-IfStmt 0x1f5d44a5788 <line:186:13, line:187:21>
|   |   |   | |-BinaryOperator 0x1f5d44a56f0 <line:186:17, col:21> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x1f5d44a56c0 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1f5d44a5680 <col:17> 'int' lvalue Var 0x1f5d44abc78 'i' 'int'
|   |   |   | | `-ImplicitCastExpr 0x1f5d44a56d8 <col:21> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1f5d44a56a0 <col:21> 'int' lvalue ParmVar 0x1f5d44aba40 'outl' 'int'
|   |   |   | `-BinaryOperator 0x1f5d44a5768 <line:187:17, col:21> 'int' '='
|   |   |   |   |-DeclRefExpr 0x1f5d44a5710 <col:17> 'int' lvalue Var 0x1f5d44abc78 'i' 'int'
|   |   |   |   `-ImplicitCastExpr 0x1f5d44a5750 <col:21> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1f5d44a5730 <col:21> 'int' lvalue ParmVar 0x1f5d44aba40 'outl' 'int'
|   |   |   |-CompoundAssignOperator 0x1f5d44a5b58 <line:189:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x1f5d44a5ae8 <col:13> 'int' lvalue Var 0x1f5d44abbd0 'ret' 'int'
|   |   |   | `-ImplicitCastExpr 0x1f5d44a5b40 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1f5d44a5b20 <col:20> 'int' lvalue Var 0x1f5d44abc78 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1f5d44a5be0 <line:190:13, col:20> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   |   | |-DeclRefExpr 0x1f5d44a5b88 <col:13> 'char *' lvalue ParmVar 0x1f5d44ab9c0 'out' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1f5d44a5bc8 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1f5d44a5ba8 <col:20> 'int' lvalue Var 0x1f5d44abc78 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1f5d44a5c68 <line:191:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x1f5d44a5c10 <col:13> 'int' lvalue ParmVar 0x1f5d44aba40 'outl' 'int'
|   |   |   | `-ImplicitCastExpr 0x1f5d44a5c50 <col:21> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1f5d44a5c30 <col:21> 'int' lvalue Var 0x1f5d44abc78 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1f5d44a5d50 <line:192:13, col:29> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-MemberExpr 0x1f5d44a5cd0 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   |   |   | | `-ImplicitCastExpr 0x1f5d44a5cb8 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1f5d44a5c98 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1f5d44a5d38 <col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1f5d44a5d20 <col:29> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1f5d44a5d00 <col:29> 'int' lvalue Var 0x1f5d44abc78 'i' 'int'
|   |   |   `-IfStmt 0x1f5d44ad898 <line:195:13, line:209:13>
|   |   |     |-BinaryOperator 0x1f5d44a5e80 <line:195:17, col:38> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1f5d44a5e50 <col:17, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x1f5d44a5db8 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   |   |     | |   `-ImplicitCastExpr 0x1f5d44a5da0 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x1f5d44a5d80 <col:17> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |     | `-ImplicitCastExpr 0x1f5d44a5e68 <col:33, col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |   `-MemberExpr 0x1f5d44a5e20 <col:33, col:38> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   |   |     |     `-ImplicitCastExpr 0x1f5d44a5e08 <col:33> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x1f5d44a5de8 <col:33> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |     `-CompoundStmt 0x1f5d44ad870 <col:47, line:209:13>
|   |   |       |-BinaryOperator 0x1f5d44a5f48 <line:196:17, col:32> 'size_t':'unsigned long long' '='
|   |   |       | |-MemberExpr 0x1f5d44a5ed8 <col:17, col:22> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   |   |       | | `-ImplicitCastExpr 0x1f5d44a5ec0 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x1f5d44a5ea0 <col:17> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |       | `-ImplicitCastExpr 0x1f5d44a5f30 <col:32> 'size_t':'unsigned long long' <IntegralCast>
|   |   |       |   `-IntegerLiteral 0x1f5d44a5f08 <col:32> 'int' 0
|   |   |       |-IfStmt 0x1f5d44ad798 <line:201:17, line:207:17> has_else
|   |   |       | |-BinaryOperator 0x1f5d44a60c8 <line:201:21, col:61> 'int' '>'
|   |   |       | | |-BinaryOperator 0x1f5d44a6068 <col:21, col:46> 'unsigned long long' '-'
|   |   |       | | | |-ImplicitCastExpr 0x1f5d44a6038 <col:21, col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | | | | `-MemberExpr 0x1f5d44a5fa0 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x1f5d44a37e0
|   |   |       | | | |   `-ImplicitCastExpr 0x1f5d44a5f88 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | | | |     `-DeclRefExpr 0x1f5d44a5f68 <col:21> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |       | | | `-ImplicitCastExpr 0x1f5d44a6050 <col:41, col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | | |   `-MemberExpr 0x1f5d44a6008 <col:41, col:46> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x1f5d44a3848
|   |   |       | | |     `-ImplicitCastExpr 0x1f5d44a5ff0 <col:41> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | | |       `-DeclRefExpr 0x1f5d44a5fd0 <col:41> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |       | | `-ImplicitCastExpr 0x1f5d44a60b0 <col:61> 'unsigned long long' <IntegralCast>
|   |   |       | |   `-IntegerLiteral 0x1f5d44a6088 <col:61> 'int' 0
|   |   |       | |-CompoundStmt 0x1f5d44ad6a0 <col:64, line:205:17>
|   |   |       | | `-BinaryOperator 0x1f5d44ad318 <line:202:21, col:61> 'size_t':'unsigned long long' '='
|   |   |       | |   |-MemberExpr 0x1f5d44a6120 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   |   |       | |   | `-ImplicitCastExpr 0x1f5d44a6108 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |   |   `-DeclRefExpr 0x1f5d44a60e8 <col:21> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |       | |   `-BinaryOperator 0x1f5d44ad2f8 <col:36, col:61> 'unsigned long long' '-'
|   |   |       | |     |-ImplicitCastExpr 0x1f5d44ad2c8 <col:36, col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | |     | `-MemberExpr 0x1f5d44ad230 <col:36, col:41> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x1f5d44a37e0
|   |   |       | |     |   `-ImplicitCastExpr 0x1f5d44a6170 <col:36> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |     |     `-DeclRefExpr 0x1f5d44a6150 <col:36> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |       | |     `-ImplicitCastExpr 0x1f5d44ad2e0 <col:56, col:61> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | |       `-MemberExpr 0x1f5d44ad298 <col:56, col:61> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x1f5d44a3848
|   |   |       | |         `-ImplicitCastExpr 0x1f5d44ad280 <col:56> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       | |           `-DeclRefExpr 0x1f5d44ad260 <col:56> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |       | `-CompoundStmt 0x1f5d44ad780 <line:205:24, line:207:17>
|   |   |       |   `-BinaryOperator 0x1f5d44ad760 <line:206:21, col:36> 'size_t':'unsigned long long' '='
|   |   |       |     |-MemberExpr 0x1f5d44ad6f0 <col:21, col:26> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   |   |       |     | `-ImplicitCastExpr 0x1f5d44ad6d8 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |       |     |   `-DeclRefExpr 0x1f5d44ad6b8 <col:21> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |       |     `-ImplicitCastExpr 0x1f5d44ad748 <col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   |       |       `-IntegerLiteral 0x1f5d44ad720 <col:36> 'int' 0
|   |   |       `-BinaryOperator 0x1f5d44ad850 <line:208:17, col:33> 'int' '='
|   |   |         |-MemberExpr 0x1f5d44ad7f8 <col:17, col:22> 'int' lvalue ->blockout 0x1f5d44a3a08
|   |   |         | `-ImplicitCastExpr 0x1f5d44ad7e0 <col:17> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x1f5d44ad7c0 <col:17> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   |         `-IntegerLiteral 0x1f5d44ad828 <col:33> 'int' 0
|   |   |-IfStmt 0x1f5d44ad998 <line:213:9, line:214:13>
|   |   | |-BinaryOperator 0x1f5d44ad970 <line:213:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1f5d44ad958 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1f5d44ad910 <col:13> 'int' lvalue ParmVar 0x1f5d44aba40 'outl' 'int'
|   |   | | `-IntegerLiteral 0x1f5d44ad930 <col:21> 'int' 0
|   |   | `-BreakStmt 0x1f5d44ad990 <line:214:13>
|   |   |-IfStmt 0x1f5d44addc8 <line:220:9, line:221:13>
|   |   | |-BinaryOperator 0x1f5d44adda0 <line:220:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1f5d44add88 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1f5d44add40 <col:13> 'int' lvalue Var 0x1f5d44abc78 'i' 'int'
|   |   | | `-IntegerLiteral 0x1f5d44add60 <col:18> 'int' 0
|   |   | `-BreakStmt 0x1f5d44addc0 <line:221:13>
|   |   |-CompoundAssignOperator 0x1f5d44ade98 <line:223:9, col:25> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-MemberExpr 0x1f5d44ade18 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   |   | | `-ImplicitCastExpr 0x1f5d44ade00 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44adde0 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x1f5d44ade80 <col:25> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1f5d44ade68 <col:25> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1f5d44ade48 <col:25> 'int' lvalue Var 0x1f5d44abc78 'i' 'int'
|   |   |-IfStmt 0x1f5d44ae138 <line:226:9, line:231:9>
|   |   | |-BinaryOperator 0x1f5d44adf70 <line:226:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1f5d44adf58 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1f5d44adf00 <col:13, col:18> 'int' lvalue ->sigio 0x1f5d44a3a78
|   |   | | |   `-ImplicitCastExpr 0x1f5d44adee8 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1f5d44adec8 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x1f5d44adf30 <col:27> 'int' 1
|   |   | `-CompoundStmt 0x1f5d44ae120 <col:30, line:231:9>
|   |   |   `-IfStmt 0x1f5d44ae108 <line:227:13, line:230:13>
|   |   |     |-OpaqueValueExpr 0x1f5d44ae0f0 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x1f5d44ae0d8 <line:227:29, line:230:13>
|   |   |       `-ReturnStmt 0x1f5d44ae0c8 <line:229:17, col:24>
|   |   |         `-IntegerLiteral 0x1f5d44ae0a0 <col:24> 'int' 0
|   |   |-IfStmt 0x1f5d44ac2d8 <line:234:9, line:239:9>
|   |   | |-BinaryOperator 0x1f5d44ae1f8 <line:234:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1f5d44ae1e0 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1f5d44ae188 <col:13, col:18> 'int' lvalue ->sigio 0x1f5d44a3a78
|   |   | | |   `-ImplicitCastExpr 0x1f5d44ae170 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1f5d44ae150 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x1f5d44ae1b8 <col:27> 'int' 0
|   |   | `-CompoundStmt 0x1f5d44ac2c0 <col:30, line:239:9>
|   |   |   `-IfStmt 0x1f5d44ac2a8 <line:235:13, line:238:13>
|   |   |     |-OpaqueValueExpr 0x1f5d44ac290 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x1f5d44ac278 <line:235:31, line:238:13>
|   |   |       `-ReturnStmt 0x1f5d44ac268 <line:237:17, col:24>
|   |   |         `-IntegerLiteral 0x1f5d44ac240 <col:24> 'int' 0
|   |   `-IfStmt 0x1f5d44ac3c0 <line:242:9, line:243:13>
|   |     |-BinaryOperator 0x1f5d44ac398 <line:242:13, col:26> 'int' '<='
|   |     | |-ImplicitCastExpr 0x1f5d44ac380 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x1f5d44ac328 <col:13, col:18> 'int' lvalue ->cont 0x1f5d44a38b8
|   |     | |   `-ImplicitCastExpr 0x1f5d44ac310 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1f5d44ac2f0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44abda8 'ctx' 'BIO_OK_CTX *'
|   |     | `-IntegerLiteral 0x1f5d44ac358 <col:26> 'int' 0
|   |     `-BreakStmt 0x1f5d44ac3b8 <line:243:13>
|   `-ReturnStmt 0x1f5d44ac5a0 <line:249:5, col:12>
|     `-ImplicitCastExpr 0x1f5d44ac588 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1f5d44ac568 <col:12> 'int' lvalue Var 0x1f5d44abbd0 'ret' 'int'
|-FunctionDecl 0x1f5d44a57e0 <line:188:13> col:13 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1f5d44a5880 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1f5d44a58e8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1f5d44a5950 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f5d44ad338 <line:203:21> col:21 implicit used memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1f5d44ad3d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1f5d44ad440 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1f5d44ad4a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f5d44ac7b0 <line:252:1, line:315:1> line:252:12 invalid ok_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1f5d44ac608 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x1f5d44ac688 <col:29, col:41> col:41 used in 'const char *'
| |-ParmVarDecl 0x1f5d44ac708 <col:45, col:49> col:49 used inl 'int'
| `-CompoundStmt 0x1f5d44b0c18 <line:253:1, line:315:1>
|   |-DeclStmt 0x1f5d44aca48 <line:254:5, col:22>
|   | |-VarDecl 0x1f5d44ac898 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1f5d44ac900 <col:15> 'int' 0
|   | |-VarDecl 0x1f5d44ac940 <col:5, col:18> col:18 used n 'int'
|   | `-VarDecl 0x1f5d44ac9c0 <col:5, col:21> col:21 used i 'int'
|   |-DeclStmt 0x1f5d44acad8 <line:255:5, col:20>
|   | `-VarDecl 0x1f5d44aca70 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-IfStmt 0x1f5d44acbd0 <line:258:5, line:259:16>
|   | |-BinaryOperator 0x1f5d44acb68 <line:258:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1f5d44acb50 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f5d44acaf0 <col:9> 'int' lvalue ParmVar 0x1f5d44ac708 'inl' 'int'
|   | | `-IntegerLiteral 0x1f5d44acb28 <col:16> 'int' 0
|   | `-ReturnStmt 0x1f5d44acbc0 <line:259:9, col:16>
|   |   `-ImplicitCastExpr 0x1f5d44acba8 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f5d44acb88 <col:16> 'int' lvalue ParmVar 0x1f5d44ac708 'inl' 'int'
|   |-BinaryOperator 0x1f5d44accd0 <line:263:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1f5d44acc60 <col:5> 'int' lvalue Var 0x1f5d44ac898 'ret' 'int'
|   | `-ImplicitCastExpr 0x1f5d44accb8 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1f5d44acc98 <col:11> 'int' lvalue ParmVar 0x1f5d44ac708 'inl' 'int'
|   |-IfStmt 0x1f5d44acf48 <line:265:5, line:266:18>
|   | |-OpaqueValueExpr 0x1f5d44acf30 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1f5d44acf20 <col:9, col:18>
|   |   `-ParenExpr 0x1f5d44acf00 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1f5d44aced8 <col:17> 'int' 0
|   |-IfStmt 0x1f5d44ad018 <line:268:5, line:269:16>
|   | |-OpaqueValueExpr 0x1f5d44ad000 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1f5d44acff0 <col:9, col:16>
|   |   `-IntegerLiteral 0x1f5d44acfc8 <col:16> 'int' 0
|   |-DoStmt 0x1f5d44b0b50 <line:271:5, line:310:21>
|   | |-CompoundStmt 0x1f5d44b0a70 <line:271:8, line:310:5>
|   | | |-BinaryOperator 0x1f5d44ad1c0 <line:273:9, col:33> 'int' '='
|   | | | |-DeclRefExpr 0x1f5d44ad050 <col:9> 'int' lvalue Var 0x1f5d44ac940 'n' 'int'
|   | | | `-ImplicitCastExpr 0x1f5d44ad1a8 <col:13, col:33> 'int' <IntegralCast>
|   | | |   `-BinaryOperator 0x1f5d44ad188 <col:13, col:33> 'unsigned long long' '-'
|   | | |     |-ImplicitCastExpr 0x1f5d44ad158 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |     | `-MemberExpr 0x1f5d44ad0c0 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | |     |   `-ImplicitCastExpr 0x1f5d44ad0a8 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x1f5d44ad088 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x1f5d44ad170 <col:28, col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       `-MemberExpr 0x1f5d44ad128 <col:28, col:33> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   | | |         `-ImplicitCastExpr 0x1f5d44ad110 <col:28> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x1f5d44ad0f0 <col:28> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | |-WhileStmt 0x1f5d44a6978 <line:274:9, line:284:9>
|   | | | |-BinaryOperator 0x1f5d44a6288 <line:274:16, col:37> 'int' '&&'
|   | | | | |-ImplicitCastExpr 0x1f5d44a6270 <col:16, col:21> 'int' <LValueToRValue>
|   | | | | | `-MemberExpr 0x1f5d44a61c0 <col:16, col:21> 'int' lvalue ->blockout 0x1f5d44a3a08
|   | | | | |   `-ImplicitCastExpr 0x1f5d44ad200 <col:16> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x1f5d44ad1e0 <col:16> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | | | `-BinaryOperator 0x1f5d44a6250 <col:33, col:37> 'int' '>'
|   | | | |   |-ImplicitCastExpr 0x1f5d44a6238 <col:33> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x1f5d44a61f0 <col:33> 'int' lvalue Var 0x1f5d44ac940 'n' 'int'
|   | | | |   `-IntegerLiteral 0x1f5d44a6210 <col:37> 'int' 0
|   | | | `-CompoundStmt 0x1f5d44a6950 <col:40, line:284:9>
|   | | |   |-IfStmt 0x1f5d44a67c8 <line:276:13, line:281:13>
|   | | |   | |-BinaryOperator 0x1f5d44a6510 <line:276:17, col:22> 'int' '<='
|   | | |   | | |-ImplicitCastExpr 0x1f5d44a64f8 <col:17> 'int' <LValueToRValue>
|   | | |   | | | `-DeclRefExpr 0x1f5d44a64b0 <col:17> 'int' lvalue Var 0x1f5d44ac9c0 'i' 'int'
|   | | |   | | `-IntegerLiteral 0x1f5d44a64d0 <col:22> 'int' 0
|   | | |   | `-CompoundStmt 0x1f5d44a67a8 <col:25, line:281:13>
|   | | |   |   |-IfStmt 0x1f5d44a6728 <line:278:17, line:279:33>
|   | | |   |   | |-OpaqueValueExpr 0x1f5d44a6710 <<invalid sloc>> '_Bool'
|   | | |   |   | `-BinaryOperator 0x1f5d44a66f0 <col:21, col:33> 'int' '='
|   | | |   |   |   |-MemberExpr 0x1f5d44a6698 <col:21, col:26> 'int' lvalue ->cont 0x1f5d44a38b8
|   | | |   |   |   | `-ImplicitCastExpr 0x1f5d44a6680 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |   |   |   `-DeclRefExpr 0x1f5d44a6660 <col:21> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | |   |   |   `-IntegerLiteral 0x1f5d44a66c8 <col:33> 'int' 0
|   | | |   |   `-ReturnStmt 0x1f5d44a6798 <line:280:17, col:26>
|   | | |   |     `-ImplicitCastExpr 0x1f5d44a6780 <col:24, col:26> 'int' <LValueToRValue>
|   | | |   |       `-ParenExpr 0x1f5d44a6760 <col:24, col:26> 'int' lvalue
|   | | |   |         `-DeclRefExpr 0x1f5d44a6740 <col:25> 'int' lvalue Var 0x1f5d44ac9c0 'i' 'int'
|   | | |   |-CompoundAssignOperator 0x1f5d44a6898 <line:282:13, col:29> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | |   | |-MemberExpr 0x1f5d44a6818 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   | | |   | | `-ImplicitCastExpr 0x1f5d44a6800 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x1f5d44a67e0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | |   | `-ImplicitCastExpr 0x1f5d44a6880 <col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   `-ImplicitCastExpr 0x1f5d44a6868 <col:29> 'int' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x1f5d44a6848 <col:29> 'int' lvalue Var 0x1f5d44ac9c0 'i' 'int'
|   | | |   `-CompoundAssignOperator 0x1f5d44a6920 <line:283:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |     |-DeclRefExpr 0x1f5d44a68c8 <col:13> 'int' lvalue Var 0x1f5d44ac940 'n' 'int'
|   | | |     `-ImplicitCastExpr 0x1f5d44a6908 <col:18> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f5d44a68e8 <col:18> 'int' lvalue Var 0x1f5d44ac9c0 'i' 'int'
|   | | |-BinaryOperator 0x1f5d44a6a20 <line:287:9, col:25> 'int' '='
|   | | | |-MemberExpr 0x1f5d44a69c8 <col:9, col:14> 'int' lvalue ->blockout 0x1f5d44a3a08
|   | | | | `-ImplicitCastExpr 0x1f5d44a69b0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1f5d44a6990 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | | `-IntegerLiteral 0x1f5d44a69f8 <col:25> 'int' 0
|   | | |-IfStmt 0x1f5d44a6d10 <line:288:9, line:291:9>
|   | | | |-BinaryOperator 0x1f5d44a6b40 <line:288:13, col:34> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x1f5d44a6b10 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | | `-MemberExpr 0x1f5d44a6a78 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | | | |   `-ImplicitCastExpr 0x1f5d44a6a60 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x1f5d44a6a40 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | | | `-ImplicitCastExpr 0x1f5d44a6b28 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | |   `-MemberExpr 0x1f5d44a6ae0 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   | | | |     `-ImplicitCastExpr 0x1f5d44a6ac8 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1f5d44a6aa8 <col:29> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | | `-CompoundStmt 0x1f5d44a6cf0 <col:43, line:291:9>
|   | | |   |-BinaryOperator 0x1f5d44a6c08 <line:289:13, line:93:25> 'size_t':'unsigned long long' '='
|   | | |   | |-MemberExpr 0x1f5d44a6b98 <line:289:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | |   | | `-ImplicitCastExpr 0x1f5d44a6b80 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x1f5d44a6b60 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | |   | `-ImplicitCastExpr 0x1f5d44a6bf0 <line:93:25> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   |   `-IntegerLiteral 0x1f5d44a6bc8 <col:25> 'int' 4
|   | | |   `-BinaryOperator 0x1f5d44a6cd0 <line:290:13, col:28> 'size_t':'unsigned long long' '='
|   | | |     |-MemberExpr 0x1f5d44a6c60 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   | | |     | `-ImplicitCastExpr 0x1f5d44a6c48 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x1f5d44a6c28 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x1f5d44a6cb8 <col:28> 'size_t':'unsigned long long' <IntegralCast>
|   | | |       `-IntegerLiteral 0x1f5d44a6c90 <col:28> 'int' 0
|   | | |-IfStmt 0x1f5d44a6f70 <line:293:9, line:294:22>
|   | | | |-BinaryOperator 0x1f5d44a6ef8 <line:293:13, col:38> 'int' '||'
|   | | | | |-ParenExpr 0x1f5d44a6e38 <col:13, col:24> 'int'
|   | | | | | `-BinaryOperator 0x1f5d44a6e18 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | | | |   |-ImplicitCastExpr 0x1f5d44a6de8 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:293:14> 'const char *' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x1f5d44a6d28 <col:14> 'const char *' lvalue ParmVar 0x1f5d44ac688 'in' 'const char *'
|   | | | | |   `-ImplicitCastExpr 0x1f5d44a6e00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | | | |     `-ParenExpr 0x1f5d44a6dc8 <col:17, col:27> 'void *'
|   | | | | |       `-CStyleCastExpr 0x1f5d44a6da0 <col:18, col:26> 'void *' <NullToPointer>
|   | | | | |         `-IntegerLiteral 0x1f5d44a6d60 <col:26> 'int' 0
|   | | | | `-ParenExpr 0x1f5d44a6ed8 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:293:29, col:38> 'int'
|   | | | |   `-BinaryOperator 0x1f5d44a6eb8 <col:30, col:37> 'int' '<='
|   | | | |     |-ImplicitCastExpr 0x1f5d44a6ea0 <col:30> 'int' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x1f5d44a6e58 <col:30> 'int' lvalue ParmVar 0x1f5d44ac708 'inl' 'int'
|   | | | |     `-IntegerLiteral 0x1f5d44a6e78 <col:37> 'int' 0
|   | | | `-ReturnStmt 0x1f5d44a6f60 <line:294:13, col:22>
|   | | |   `-ParenExpr 0x1f5d44a6f40 <col:20, col:22> 'int'
|   | | |     `-IntegerLiteral 0x1f5d44a6f18 <col:21> 'int' 0
|   | | |-BinaryOperator 0x1f5d44b04f8 <line:296:9, line:297:68> 'int' '='
|   | | | |-DeclRefExpr 0x1f5d44a6f88 <line:296:9> 'int' lvalue Var 0x1f5d44ac940 'n' 'int'
|   | | | `-ConditionalOperator 0x1f5d44b04c8 <col:13, line:297:68> 'int'
|   | | |   |-ParenExpr 0x1f5d44b0260 <line:296:13, col:65> 'int'
|   | | |   | `-BinaryOperator 0x1f5d44a7188 <col:14, line:93:25> 'int' '>'
|   | | |   |   |-BinaryOperator 0x1f5d44a7078 <line:296:14, col:25> 'unsigned long long' '+'
|   | | |   |   | |-ImplicitCastExpr 0x1f5d44a7060 <col:14> 'unsigned long long' <IntegralCast>
|   | | |   |   | | `-ImplicitCastExpr 0x1f5d44a7030 <col:14> 'int' <LValueToRValue>
|   | | |   |   | |   `-DeclRefExpr 0x1f5d44a6fa8 <col:14> 'int' lvalue ParmVar 0x1f5d44ac708 'inl' 'int'
|   | | |   |   | `-ImplicitCastExpr 0x1f5d44a7048 <col:20, col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   |   |   `-MemberExpr 0x1f5d44a7000 <col:20, col:25> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | |   |   |     `-ImplicitCastExpr 0x1f5d44a6fe8 <col:20> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |   |       `-DeclRefExpr 0x1f5d44a6fc8 <col:20> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | |   |   `-ImplicitCastExpr 0x1f5d44a7170 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | | |   |     `-BinaryOperator 0x1f5d44a7150 <line:92:25, line:93:25> 'int' '+'
|   | | |   |       |-ParenExpr 0x1f5d44a7108 <line:92:25, col:32> 'int'
|   | | |   |       | `-BinaryOperator 0x1f5d44a70e8 <col:26, col:31> 'int' '*'
|   | | |   |       |   |-IntegerLiteral 0x1f5d44a7098 <col:26> 'int' 1024
|   | | |   |       |   `-IntegerLiteral 0x1f5d44a70c0 <col:31> 'int' 4
|   | | |   |       `-IntegerLiteral 0x1f5d44a7128 <line:93:25> 'int' 4
|   | | |   |-CStyleCastExpr 0x1f5d44b0468 <line:297:13, col:64> 'int' <IntegralCast>
|   | | |   | `-ParenExpr 0x1f5d44b0448 <col:18, col:64> 'unsigned long long'
|   | | |   |   `-BinaryOperator 0x1f5d44b03f0 <line:92:25, line:297:57> 'unsigned long long' '-'
|   | | |   |     |-ImplicitCastExpr 0x1f5d44b03d8 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | | |   |     | `-BinaryOperator 0x1f5d44b0338 <line:92:25, line:93:25> 'int' '+'
|   | | |   |     |   |-ParenExpr 0x1f5d44b02f0 <line:92:25, col:32> 'int'
|   | | |   |     |   | `-BinaryOperator 0x1f5d44b02d0 <col:26, col:31> 'int' '*'
|   | | |   |     |   |   |-IntegerLiteral 0x1f5d44b0280 <col:26> 'int' 1024
|   | | |   |     |   |   `-IntegerLiteral 0x1f5d44b02a8 <col:31> 'int' 4
|   | | |   |     |   `-IntegerLiteral 0x1f5d44b0310 <line:93:25> 'int' 4
|   | | |   |     `-ImplicitCastExpr 0x1f5d44b03c0 <line:297:52, col:57> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   |       `-MemberExpr 0x1f5d44b0390 <col:52, col:57> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | |   |         `-ImplicitCastExpr 0x1f5d44b0378 <col:52> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |   |           `-DeclRefExpr 0x1f5d44b0358 <col:52> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | |   `-ImplicitCastExpr 0x1f5d44b04b0 <col:68> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1f5d44b0490 <col:68> 'int' lvalue ParmVar 0x1f5d44ac708 'inl' 'int'
|   | | |-CompoundAssignOperator 0x1f5d44b06d0 <line:300:9, col:25> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | | |-MemberExpr 0x1f5d44b0650 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | | | `-ImplicitCastExpr 0x1f5d44b0638 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1f5d44b0618 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x1f5d44b06b8 <col:25> 'unsigned long long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1f5d44b06a0 <col:25> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1f5d44b0680 <col:25> 'int' lvalue Var 0x1f5d44ac940 'n' 'int'
|   | | |-CompoundAssignOperator 0x1f5d44b0758 <line:301:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | | |-DeclRefExpr 0x1f5d44b0700 <col:9> 'int' lvalue ParmVar 0x1f5d44ac708 'inl' 'int'
|   | | | `-ImplicitCastExpr 0x1f5d44b0740 <col:16> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1f5d44b0720 <col:16> 'int' lvalue Var 0x1f5d44ac940 'n' 'int'
|   | | |-CompoundAssignOperator 0x1f5d44b07e0 <line:302:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | | |-DeclRefExpr 0x1f5d44b0788 <col:9> 'const char *' lvalue ParmVar 0x1f5d44ac688 'in' 'const char *'
|   | | | `-ImplicitCastExpr 0x1f5d44b07c8 <col:15> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1f5d44b07a8 <col:15> 'int' lvalue Var 0x1f5d44ac940 'n' 'int'
|   | | `-IfStmt 0x1f5d44b0a58 <line:304:9, line:309:9>
|   | |   |-BinaryOperator 0x1f5d44b0980 <line:304:13, line:93:25> 'int' '>='
|   | |   | |-ImplicitCastExpr 0x1f5d44b0950 <line:304:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | | `-MemberExpr 0x1f5d44b0848 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | |   | |   `-ImplicitCastExpr 0x1f5d44b0830 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   | |     `-DeclRefExpr 0x1f5d44b0810 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44aca70 'ctx' 'BIO_OK_CTX *'
|   | |   | `-ImplicitCastExpr 0x1f5d44b0968 <line:92:25, line:93:25> 'unsigned long long' <IntegralCast>
|   | |   |   `-BinaryOperator 0x1f5d44b0930 <line:92:25, line:93:25> 'int' '+'
|   | |   |     |-ParenExpr 0x1f5d44b08e8 <line:92:25, col:32> 'int'
|   | |   |     | `-BinaryOperator 0x1f5d44b08c8 <col:26, col:31> 'int' '*'
|   | |   |     |   |-IntegerLiteral 0x1f5d44b0878 <col:26> 'int' 1024
|   | |   |     |   `-IntegerLiteral 0x1f5d44b08a0 <col:31> 'int' 4
|   | |   |     `-IntegerLiteral 0x1f5d44b0908 <line:93:25> 'int' 4
|   | |   `-CompoundStmt 0x1f5d44b0a40 <line:304:61, line:309:9>
|   | |     `-IfStmt 0x1f5d44b0a28 <line:305:13, line:308:13>
|   | |       |-OpaqueValueExpr 0x1f5d44b0a10 <<invalid sloc>> '_Bool'
|   | |       `-CompoundStmt 0x1f5d44b09f8 <line:305:32, line:308:13>
|   | |         `-ReturnStmt 0x1f5d44b09e8 <line:307:17, col:24>
|   | |           `-IntegerLiteral 0x1f5d44b09c0 <col:24> 'int' 0
|   | `-BinaryOperator 0x1f5d44b0b30 <line:310:14, col:20> 'int' '>'
|   |   |-ImplicitCastExpr 0x1f5d44b0b18 <col:14> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f5d44b0ad0 <col:14> 'int' lvalue ParmVar 0x1f5d44ac708 'inl' 'int'
|   |   `-IntegerLiteral 0x1f5d44b0af0 <col:20> 'int' 0
|   `-ReturnStmt 0x1f5d44b0c08 <line:314:5, col:16>
|     `-ImplicitCastExpr 0x1f5d44b0bf0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1f5d44b0bd0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1f5d44b0bb0 <col:13> 'int' lvalue Var 0x1f5d44ac898 'ret' 'int'
|-FunctionDecl 0x1f5d44b0eb0 <line:317:1, line:400:1> line:317:13 invalid ok_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1f5d44b0c80 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x1f5d44b0d00 <col:29, col:33> col:33 used cmd 'int'
| |-ParmVarDecl 0x1f5d44b0d80 <col:38, col:43> col:43 used num 'long'
| |-ParmVarDecl 0x1f5d44b0e00 <col:48, col:54> col:54 used ptr 'void *'
| `-CompoundStmt 0x1f5d44b21f8 <line:318:1, line:400:1>
|   |-DeclStmt 0x1f5d44b1000 <line:319:5, col:20>
|   | `-VarDecl 0x1f5d44b0f98 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x1f5d44b10d0 <line:321:5, col:24>
|   | `-VarDecl 0x1f5d44b1068 <col:5, col:20> col:20 invalid ppmd 'const int **'
|   |-DeclStmt 0x1f5d44b11a8 <line:322:5, col:17>
|   | `-VarDecl 0x1f5d44b1100 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1f5d44b1190 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f5d44b1168 <col:16> 'int' 1
|   |-DeclStmt 0x1f5d44b1240 <line:323:5, col:10>
|   | `-VarDecl 0x1f5d44b11d8 <col:5, col:9> col:9 used i 'int'
|   |-SwitchStmt 0x1f5d44af318 <line:329:5, line:398:5>
|   | |-ImplicitCastExpr 0x1f5d44af300 <line:329:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1f5d44af2c8 <col:13> 'int' lvalue ParmVar 0x1f5d44b0d00 'cmd' 'int'
|   | `-CompoundStmt 0x1f5d44b20c0 <col:18, line:398:5>
|   |   |-BinaryOperator 0x1f5d44af3e0 <line:331:9, col:24> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x1f5d44af370 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   |   | | `-ImplicitCastExpr 0x1f5d44af358 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44af338 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x1f5d44af3c8 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1f5d44af3a0 <col:24> 'int' 0
|   |   |-BinaryOperator 0x1f5d44af4a8 <line:332:9, col:24> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x1f5d44af438 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   |   | | `-ImplicitCastExpr 0x1f5d44af420 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44af400 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x1f5d44af490 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1f5d44af468 <col:24> 'int' 0
|   |   |-BinaryOperator 0x1f5d44af570 <line:333:9, col:29> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x1f5d44af500 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x1f5d44a37e0
|   |   | | `-ImplicitCastExpr 0x1f5d44af4e8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44af4c8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x1f5d44af558 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1f5d44af530 <col:29> 'int' 0
|   |   |-BinaryOperator 0x1f5d44af638 <line:334:9, col:29> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x1f5d44af5c8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x1f5d44a3848
|   |   | | `-ImplicitCastExpr 0x1f5d44af5b0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44af590 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-ImplicitCastExpr 0x1f5d44af620 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1f5d44af5f8 <col:29> 'int' 0
|   |   |-BinaryOperator 0x1f5d44af6e8 <line:335:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x1f5d44af690 <col:9, col:14> 'int' lvalue ->cont 0x1f5d44a38b8
|   |   | | `-ImplicitCastExpr 0x1f5d44af678 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44af658 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x1f5d44af6c0 <col:21> 'int' 1
|   |   |-BinaryOperator 0x1f5d44af798 <line:336:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1f5d44af740 <col:9, col:14> 'int' lvalue ->finished 0x1f5d44a3928
|   |   | | `-ImplicitCastExpr 0x1f5d44af728 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44af708 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x1f5d44af770 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1f5d44af848 <line:337:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1f5d44af7f0 <col:9, col:14> 'int' lvalue ->blockout 0x1f5d44a3a08
|   |   | | `-ImplicitCastExpr 0x1f5d44af7d8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44af7b8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x1f5d44af820 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1f5d44af8f8 <line:338:9, col:22> 'int' '='
|   |   | |-MemberExpr 0x1f5d44af8a0 <col:9, col:14> 'int' lvalue ->sigio 0x1f5d44a3a78
|   |   | | `-ImplicitCastExpr 0x1f5d44af888 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44af868 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x1f5d44af8d0 <col:22> 'int' 1
|   |   |-BreakStmt 0x1f5d44afaf0 <line:340:9>
|   |   |-IfStmt 0x1f5d44afce8 <line:342:9, line:345:13> has_else
|   |   | |-BinaryOperator 0x1f5d44afba0 <line:342:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1f5d44afb88 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1f5d44afb30 <col:13, col:18> 'int' lvalue ->cont 0x1f5d44a38b8
|   |   | | |   `-ImplicitCastExpr 0x1f5d44afb18 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1f5d44afaf8 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x1f5d44afb60 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x1f5d44afc20 <line:343:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x1f5d44afbc0 <col:13> 'long' lvalue Var 0x1f5d44b1100 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x1f5d44afc08 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1f5d44afbe0 <col:19> 'int' 1
|   |   | `-NullStmt 0x1f5d44afce0 <line:345:13>
|   |   |-BreakStmt 0x1f5d44afd10 <line:346:9>
|   |   |-BinaryOperator 0x1f5d44aff60 <line:349:9, col:61> 'long' '='
|   |   | |-DeclRefExpr 0x1f5d44afd18 <col:9> 'long' lvalue Var 0x1f5d44b1100 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1f5d44aff48 <col:15, col:61> 'long' <IntegralCast>
|   |   |   `-ConditionalOperator 0x1f5d44aff18 <col:15, col:61> 'unsigned long long'
|   |   |     |-ImplicitCastExpr 0x1f5d44afee8 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x1f5d44afd70 <col:15, col:20> 'int' lvalue ->blockout 0x1f5d44a3a08
|   |   |     |   `-ImplicitCastExpr 0x1f5d44afd58 <col:15> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1f5d44afd38 <col:15> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   |     |-BinaryOperator 0x1f5d44afea0 <col:31, col:51> 'unsigned long long' '-'
|   |   |     | |-ImplicitCastExpr 0x1f5d44afe70 <col:31, col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x1f5d44afdd8 <col:31, col:36> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   |   |     | |   `-ImplicitCastExpr 0x1f5d44afdc0 <col:31> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x1f5d44afda0 <col:31> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   |     | `-ImplicitCastExpr 0x1f5d44afe88 <col:46, col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |   `-MemberExpr 0x1f5d44afe40 <col:46, col:51> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   |   |     |     `-ImplicitCastExpr 0x1f5d44afe28 <col:46> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x1f5d44afe08 <col:46> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   |     `-ImplicitCastExpr 0x1f5d44aff00 <col:61> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1f5d44afec0 <col:61> 'int' 0
|   |   |-BreakStmt 0x1f5d44b00b8 <line:352:9>
|   |   |-IfStmt 0x1f5d44b0208 <line:355:9, line:357:24>
|   |   | |-BinaryOperator 0x1f5d44b0168 <line:355:13, col:30> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1f5d44b0150 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1f5d44b00f8 <col:13, col:18> 'int' lvalue ->blockout 0x1f5d44a3a08
|   |   | | |   `-ImplicitCastExpr 0x1f5d44b00e0 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1f5d44b00c0 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | | `-IntegerLiteral 0x1f5d44b0128 <col:30> 'int' 0
|   |   | `-IfStmt 0x1f5d44b01f0 <line:356:13, line:357:24>
|   |   |   |-OpaqueValueExpr 0x1f5d44b01d8 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x1f5d44b01c8 <col:17, col:24>
|   |   |     `-ImplicitCastExpr 0x1f5d44b01b0 <col:24> 'long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1f5d44b0188 <col:24> 'int' 0
|   |   |-WhileStmt 0x1f5d44b1520 <line:359:9, line:365:9>
|   |   | |-ImplicitCastExpr 0x1f5d44b12b8 <line:359:16, col:21> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x1f5d44b1288 <col:16, col:21> 'int' lvalue ->blockout 0x1f5d44a3a08
|   |   | |   `-ImplicitCastExpr 0x1f5d44b1270 <col:16> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1f5d44b0220 <col:16> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-CompoundStmt 0x1f5d44b1508 <col:31, line:365:9>
|   |   |   `-IfStmt 0x1f5d44b14f0 <line:361:13, line:364:13>
|   |   |     |-BinaryOperator 0x1f5d44b1418 <line:361:17, col:21> 'int' '<'
|   |   |     | |-ImplicitCastExpr 0x1f5d44b1400 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1f5d44b13b8 <col:17> 'int' lvalue Var 0x1f5d44b11d8 'i' 'int'
|   |   |     | `-IntegerLiteral 0x1f5d44b13d8 <col:21> 'int' 0
|   |   |     `-CompoundStmt 0x1f5d44b14d0 <col:24, line:364:13>
|   |   |       |-BinaryOperator 0x1f5d44b14a8 <line:362:17, col:23> 'long' '='
|   |   |       | |-DeclRefExpr 0x1f5d44b1438 <col:17> 'long' lvalue Var 0x1f5d44b1100 'ret' 'long'
|   |   |       | `-ImplicitCastExpr 0x1f5d44b1490 <col:23> 'long' <IntegralCast>
|   |   |       |   `-ImplicitCastExpr 0x1f5d44b1478 <col:23> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x1f5d44b1458 <col:23> 'int' lvalue Var 0x1f5d44b11d8 'i' 'int'
|   |   |       `-BreakStmt 0x1f5d44b14c8 <line:363:17>
|   |   |-BinaryOperator 0x1f5d44b15c8 <line:367:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1f5d44b1570 <col:9, col:14> 'int' lvalue ->finished 0x1f5d44a3928
|   |   | | `-ImplicitCastExpr 0x1f5d44b1558 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44b1538 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-IntegerLiteral 0x1f5d44b15a0 <col:25> 'int' 1
|   |   |-BinaryOperator 0x1f5d44b1718 <line:368:9, col:39> 'size_t':'unsigned long long' '='
|   |   | |-MemberExpr 0x1f5d44b1620 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   |   | | `-ImplicitCastExpr 0x1f5d44b1608 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44b15e8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-BinaryOperator 0x1f5d44b16f8 <col:24, col:39> 'size_t':'unsigned long long' '='
|   |   |   |-MemberExpr 0x1f5d44b1688 <col:24, col:29> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   |   |   | `-ImplicitCastExpr 0x1f5d44b1670 <col:24> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1f5d44b1650 <col:24> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   |   `-ImplicitCastExpr 0x1f5d44b16e0 <col:39> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1f5d44b16b8 <col:39> 'int' 0
|   |   |-BinaryOperator 0x1f5d44b1818 <line:369:9, col:26> 'int' '='
|   |   | |-MemberExpr 0x1f5d44b1770 <col:9, col:14> 'int' lvalue ->cont 0x1f5d44a38b8
|   |   | | `-ImplicitCastExpr 0x1f5d44b1758 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f5d44b1738 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   | `-CStyleCastExpr 0x1f5d44b17f0 <col:21, col:26> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1f5d44b17d8 <col:26> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x1f5d44b17a0 <col:26> 'long' lvalue Var 0x1f5d44b1100 'ret' 'long'
|   |   |-BreakStmt 0x1f5d44b18d8 <line:373:9>
|   |   |-BreakStmt 0x1f5d44b19c0 <line:378:9>
|   |   |-BinaryOperator 0x1f5d44b1aa8 <line:380:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1f5d44b19c8 <col:9> 'long' lvalue Var 0x1f5d44b1100 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1f5d44b1a80 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1f5d44b1a68 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1f5d44b1a20 <col:21, col:26> 'int' lvalue ->cont 0x1f5d44a38b8
|   |   |       `-ImplicitCastExpr 0x1f5d44b1a08 <col:21> 'BIO_OK_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1f5d44b19e8 <col:21> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b0f98 'ctx' 'BIO_OK_CTX *'
|   |   |-BreakStmt 0x1f5d44b1ac8 <line:381:9>
|   |   |-IfStmt 0x1f5d44b1d28 <line:384:9, line:385:20>
|   |   | |-OpaqueValueExpr 0x1f5d44b1d10 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1f5d44b1d00 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x1f5d44b1ce8 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1f5d44b1cc0 <col:20> 'int' 0
|   |   |-BreakStmt 0x1f5d44b1d88 <line:387:9>
|   |   |-IfStmt 0x1f5d44b1fc0 <line:389:9, line:393:19> has_else
|   |   | |-OpaqueValueExpr 0x1f5d44b1fa8 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1f5d44b1f18 <line:389:30, line:392:9>
|   |   | `-BinaryOperator 0x1f5d44b1f88 <line:393:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x1f5d44b1f28 <col:13> 'long' lvalue Var 0x1f5d44b1100 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1f5d44b1f70 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1f5d44b1f48 <col:19> 'int' 0
|   |   |-BreakStmt 0x1f5d44b1fe8 <line:394:9>
|   |   |-DefaultStmt 0x1f5d44b2098 <line:395:5, col:12>
|   |   | `-NullStmt 0x1f5d44b2090 <col:12>
|   |   `-BreakStmt 0x1f5d44b20b8 <line:397:9>
|   `-ReturnStmt 0x1f5d44b21e8 <line:399:5, col:12>
|     `-ImplicitCastExpr 0x1f5d44b21d0 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x1f5d44b21b0 <col:12> 'long' lvalue Var 0x1f5d44b1100 'ret' 'long'
|-FunctionDecl 0x1f5d44b2428 <line:402:1, line:419:1> line:402:13 invalid ok_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1f5d44b2280 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x1f5d44b2300 <col:38, col:42> col:42 used cmd 'int'
| |-ParmVarDecl 0x1f5d44b2380 <col:47, col:60> col:60 invalid fp 'int *'
| `-CompoundStmt 0x1f5d44b2968 <line:403:1, line:419:1>
|   |-DeclStmt 0x1f5d44b25b8 <line:404:5, col:17>
|   | `-VarDecl 0x1f5d44b2510 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1f5d44b25a0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f5d44b2578 <col:16> 'int' 1
|   |-IfStmt 0x1f5d44b26e0 <line:409:5, line:410:16>
|   | |-OpaqueValueExpr 0x1f5d44b26c8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1f5d44b26b8 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x1f5d44b26a0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f5d44b2678 <col:16> 'int' 0
|   |-SwitchStmt 0x1f5d44b2748 <line:412:5, line:416:5>
|   | |-ImplicitCastExpr 0x1f5d44b2730 <line:412:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1f5d44b26f8 <col:13> 'int' lvalue ParmVar 0x1f5d44b2300 'cmd' 'int'
|   | `-CompoundStmt 0x1f5d44b2900 <col:18, line:416:5>
|   |   |-DefaultStmt 0x1f5d44b28d8 <line:413:5, col:12>
|   |   | `-NullStmt 0x1f5d44b28d0 <col:12>
|   |   `-BreakStmt 0x1f5d44b28f8 <line:415:9>
|   `-ReturnStmt 0x1f5d44b2958 <line:418:5, col:12>
|     `-ImplicitCastExpr 0x1f5d44b2940 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x1f5d44b2920 <col:12> 'long' lvalue Var 0x1f5d44b2510 'ret' 'long'
|-FunctionDecl 0x1f5d44b2b68 <line:421:1, line:439:1> line:421:13 used longswap 'void (void *, size_t)' static
| |-ParmVarDecl 0x1f5d44b29b0 <col:22, col:28> col:28 used _ptr 'void *'
| |-ParmVarDecl 0x1f5d44b2a28 <col:34, col:41> col:41 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1f5d44b3b40 <line:422:1, line:439:1>
|   |-DeclStmt 0x1f5d44b2f88 <line:423:5, line:428:6>
|   | |-RecordDecl 0x1f5d44b2c30 <line:423:11, line:426:5> line:423:11 union definition
|   | | |-FieldDecl 0x1f5d44b2d08 <line:424:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x1f5d44b2d70 <line:425:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x1f5d44b2e28 <line:423:5, line:428:5> line:426:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)' cinit
|   |   `-InitListExpr 0x1f5d44b2f10 <col:19, line:428:5> 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)' field Field 0x1f5d44b2d08 'one' 'long'
|   |     `-ImplicitCastExpr 0x1f5d44b2f58 <line:427:9> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x1f5d44b2e90 <col:9> 'int' 1
|   `-IfStmt 0x1f5d44b3b28 <line:430:5, line:438:5>
|     |-ImplicitCastExpr 0x1f5d44b3008 <line:430:9, col:19> 'char' <LValueToRValue>
|     | `-MemberExpr 0x1f5d44b2fd8 <col:9, col:19> 'const char' lvalue .little 0x1f5d44b2d70
|     |   `-DeclRefExpr 0x1f5d44b2fa0 <col:9> 'const union (anonymous union at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)' lvalue Var 0x1f5d44b2e28 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\evp\bio_ok.c:423:11)'
|     `-CompoundStmt 0x1f5d44b3b00 <col:27, line:438:5>
|       |-DeclStmt 0x1f5d44b3098 <line:431:9, col:17>
|       | `-VarDecl 0x1f5d44b3030 <col:9, col:16> col:16 used i 'size_t':'unsigned long long'
|       |-DeclStmt 0x1f5d44b3240 <line:432:9, col:35>
|       | |-VarDecl 0x1f5d44b30f0 <col:9, col:28> col:24 used p 'unsigned char *' cinit
|       | | `-ImplicitCastExpr 0x1f5d44b3190 <col:28> 'unsigned char *' <BitCast>
|       | |   `-ImplicitCastExpr 0x1f5d44b3178 <col:28> 'void *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x1f5d44b3158 <col:28> 'void *' lvalue ParmVar 0x1f5d44b29b0 '_ptr' 'void *'
|       | `-VarDecl 0x1f5d44b31c0 <col:9, col:34> col:34 used c 'unsigned char'
|       `-ForStmt 0x1f5d44b3ac8 <line:434:9, line:437:9>
|         |-BinaryOperator 0x1f5d44b32e8 <line:434:14, col:18> 'size_t':'unsigned long long' '='
|         | |-DeclRefExpr 0x1f5d44b3258 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1f5d44b3030 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x1f5d44b32d0 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|         |   `-IntegerLiteral 0x1f5d44b32a8 <col:18> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x1f5d44b3378 <col:21, col:25> 'int' '<'
|         | |-ImplicitCastExpr 0x1f5d44b3348 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|         | | `-DeclRefExpr 0x1f5d44b3308 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1f5d44b3030 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x1f5d44b3360 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|         |   `-DeclRefExpr 0x1f5d44b3328 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1f5d44b2a28 'len' 'size_t':'unsigned long long'
|         |-CompoundAssignOperator 0x1f5d44b33f8 <col:30, col:35> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|         | |-DeclRefExpr 0x1f5d44b3398 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1f5d44b3030 'i' 'size_t':'unsigned long long'
|         | `-ImplicitCastExpr 0x1f5d44b33e0 <col:35> 'unsigned long long' <IntegralCast>
|         |   `-IntegerLiteral 0x1f5d44b33b8 <col:35> 'int' 4
|         `-CompoundStmt 0x1f5d44b3aa8 <col:38, line:437:9>
|           |-BinaryOperator 0x1f5d44b3760 <line:435:13, col:43> 'unsigned char' ','
|           | |-BinaryOperator 0x1f5d44b3668 <col:13, col:33> 'unsigned char' ','
|           | | |-BinaryOperator 0x1f5d44b3510 <col:13, col:20> 'unsigned char' '='
|           | | | |-DeclRefExpr 0x1f5d44b3428 <col:13> 'unsigned char' lvalue Var 0x1f5d44b31c0 'c' 'unsigned char'
|           | | | `-ImplicitCastExpr 0x1f5d44b34f8 <col:17, col:20> 'unsigned char' <LValueToRValue>
|           | | |   `-ArraySubscriptExpr 0x1f5d44b34d8 <col:17, col:20> 'unsigned char' lvalue
|           | | |     |-ImplicitCastExpr 0x1f5d44b34c0 <col:17> 'unsigned char *' <LValueToRValue>
|           | | |     | `-DeclRefExpr 0x1f5d44b3460 <col:17> 'unsigned char *' lvalue Var 0x1f5d44b30f0 'p' 'unsigned char *'
|           | | |     `-IntegerLiteral 0x1f5d44b3498 <col:19> 'int' 0
|           | | `-BinaryOperator 0x1f5d44b3648 <col:23, col:33> 'unsigned char' '='
|           | |   |-ArraySubscriptExpr 0x1f5d44b3590 <col:23, col:26> 'unsigned char' lvalue
|           | |   | |-ImplicitCastExpr 0x1f5d44b3578 <col:23> 'unsigned char *' <LValueToRValue>
|           | |   | | `-DeclRefExpr 0x1f5d44b3530 <col:23> 'unsigned char *' lvalue Var 0x1f5d44b30f0 'p' 'unsigned char *'
|           | |   | `-IntegerLiteral 0x1f5d44b3550 <col:25> 'int' 0
|           | |   `-ImplicitCastExpr 0x1f5d44b3630 <col:30, col:33> 'unsigned char' <LValueToRValue>
|           | |     `-ArraySubscriptExpr 0x1f5d44b3610 <col:30, col:33> 'unsigned char' lvalue
|           | |       |-ImplicitCastExpr 0x1f5d44b35f8 <col:30> 'unsigned char *' <LValueToRValue>
|           | |       | `-DeclRefExpr 0x1f5d44b35b0 <col:30> 'unsigned char *' lvalue Var 0x1f5d44b30f0 'p' 'unsigned char *'
|           | |       `-IntegerLiteral 0x1f5d44b35d0 <col:32> 'int' 3
|           | `-BinaryOperator 0x1f5d44b3740 <col:36, col:43> 'unsigned char' '='
|           |   |-ArraySubscriptExpr 0x1f5d44b36e8 <col:36, col:39> 'unsigned char' lvalue
|           |   | |-ImplicitCastExpr 0x1f5d44b36d0 <col:36> 'unsigned char *' <LValueToRValue>
|           |   | | `-DeclRefExpr 0x1f5d44b3688 <col:36> 'unsigned char *' lvalue Var 0x1f5d44b30f0 'p' 'unsigned char *'
|           |   | `-IntegerLiteral 0x1f5d44b36a8 <col:38> 'int' 3
|           |   `-ImplicitCastExpr 0x1f5d44b3728 <col:43> 'unsigned char' <LValueToRValue>
|           |     `-DeclRefExpr 0x1f5d44b3708 <col:43> 'unsigned char' lvalue Var 0x1f5d44b31c0 'c' 'unsigned char'
|           `-BinaryOperator 0x1f5d44b3a88 <line:436:13, col:43> 'unsigned char' ','
|             |-BinaryOperator 0x1f5d44b3990 <col:13, col:33> 'unsigned char' ','
|             | |-BinaryOperator 0x1f5d44b3838 <col:13, col:20> 'unsigned char' '='
|             | | |-DeclRefExpr 0x1f5d44b3780 <col:13> 'unsigned char' lvalue Var 0x1f5d44b31c0 'c' 'unsigned char'
|             | | `-ImplicitCastExpr 0x1f5d44b3820 <col:17, col:20> 'unsigned char' <LValueToRValue>
|             | |   `-ArraySubscriptExpr 0x1f5d44b3800 <col:17, col:20> 'unsigned char' lvalue
|             | |     |-ImplicitCastExpr 0x1f5d44b37e8 <col:17> 'unsigned char *' <LValueToRValue>
|             | |     | `-DeclRefExpr 0x1f5d44b37a0 <col:17> 'unsigned char *' lvalue Var 0x1f5d44b30f0 'p' 'unsigned char *'
|             | |     `-IntegerLiteral 0x1f5d44b37c0 <col:19> 'int' 1
|             | `-BinaryOperator 0x1f5d44b3970 <col:23, col:33> 'unsigned char' '='
|             |   |-ArraySubscriptExpr 0x1f5d44b38b8 <col:23, col:26> 'unsigned char' lvalue
|             |   | |-ImplicitCastExpr 0x1f5d44b38a0 <col:23> 'unsigned char *' <LValueToRValue>
|             |   | | `-DeclRefExpr 0x1f5d44b3858 <col:23> 'unsigned char *' lvalue Var 0x1f5d44b30f0 'p' 'unsigned char *'
|             |   | `-IntegerLiteral 0x1f5d44b3878 <col:25> 'int' 1
|             |   `-ImplicitCastExpr 0x1f5d44b3958 <col:30, col:33> 'unsigned char' <LValueToRValue>
|             |     `-ArraySubscriptExpr 0x1f5d44b3938 <col:30, col:33> 'unsigned char' lvalue
|             |       |-ImplicitCastExpr 0x1f5d44b3920 <col:30> 'unsigned char *' <LValueToRValue>
|             |       | `-DeclRefExpr 0x1f5d44b38d8 <col:30> 'unsigned char *' lvalue Var 0x1f5d44b30f0 'p' 'unsigned char *'
|             |       `-IntegerLiteral 0x1f5d44b38f8 <col:32> 'int' 2
|             `-BinaryOperator 0x1f5d44b3a68 <col:36, col:43> 'unsigned char' '='
|               |-ArraySubscriptExpr 0x1f5d44b3a10 <col:36, col:39> 'unsigned char' lvalue
|               | |-ImplicitCastExpr 0x1f5d44b39f8 <col:36> 'unsigned char *' <LValueToRValue>
|               | | `-DeclRefExpr 0x1f5d44b39b0 <col:36> 'unsigned char *' lvalue Var 0x1f5d44b30f0 'p' 'unsigned char *'
|               | `-IntegerLiteral 0x1f5d44b39d0 <col:38> 'int' 2
|               `-ImplicitCastExpr 0x1f5d44b3a50 <col:43> 'unsigned char' <LValueToRValue>
|                 `-DeclRefExpr 0x1f5d44b3a30 <col:43> 'unsigned char' lvalue Var 0x1f5d44b31c0 'c' 'unsigned char'
|-FunctionDecl 0x1f5d44b3c10 <line:441:1, line:481:1> line:441:12 invalid sig_out 'int (int *)' static
| |-ParmVarDecl 0x1f5d44b3b78 <col:20, col:25> col:25 invalid b 'int *'
| `-CompoundStmt 0x1f5d44ae498 <line:442:1, line:481:1>
|   |-DeclStmt 0x1f5d44b3d48 <line:443:5, col:20>
|   | `-VarDecl 0x1f5d44b3ce0 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x1f5d44b3de0 <line:445:5, col:25>
|   | `-VarDecl 0x1f5d44b3d78 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x1f5d44b3e78 <line:446:5, col:16>
|   | `-VarDecl 0x1f5d44b3e10 <col:5, col:9> col:9 used md_size 'int'
|   |-DeclStmt 0x1f5d44b3f10 <line:447:5, col:18>
|   | `-VarDecl 0x1f5d44b3ea8 <col:5, col:11> col:11 used md_data 'void *'
|   |-IfStmt 0x1f5d44b54c8 <line:455:5, line:456:16>
|   | |-BinaryOperator 0x1f5d44b5470 <line:455:9, line:92:32> 'int' '>'
|   | | |-BinaryOperator 0x1f5d44b53a8 <line:455:9, col:28> 'unsigned long long' '+'
|   | | | |-ImplicitCastExpr 0x1f5d44b5378 <col:9, col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-MemberExpr 0x1f5d44b52c8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | | |   `-ImplicitCastExpr 0x1f5d44b52b0 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x1f5d44b4268 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b3ce0 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x1f5d44b5390 <col:24, col:28> 'unsigned long long' <IntegralCast>
|   | | |   `-BinaryOperator 0x1f5d44b5358 <col:24, col:28> 'int' '*'
|   | | |     |-IntegerLiteral 0x1f5d44b52f8 <col:24> 'int' 2
|   | | |     `-ImplicitCastExpr 0x1f5d44b5340 <col:28> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f5d44b5320 <col:28> 'int' lvalue Var 0x1f5d44b3e10 'md_size' 'int'
|   | | `-ImplicitCastExpr 0x1f5d44b5458 <line:92:25, col:32> 'unsigned long long' <IntegralCast>
|   | |   `-ParenExpr 0x1f5d44b5438 <col:25, col:32> 'int'
|   | |     `-BinaryOperator 0x1f5d44b5418 <col:26, col:31> 'int' '*'
|   | |       |-IntegerLiteral 0x1f5d44b53c8 <col:26> 'int' 1024
|   | |       `-IntegerLiteral 0x1f5d44b53f0 <col:31> 'int' 4
|   | `-ReturnStmt 0x1f5d44b54b8 <line:456:9, col:16>
|   |   `-IntegerLiteral 0x1f5d44b5490 <col:16> 'int' 1
|   |-IfStmt 0x1f5d44b5608 <line:458:5, line:459:14>
|   | |-OpaqueValueExpr 0x1f5d44b55f0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1f5d44b55d8 <col:9, col:14> 'berr' 0x1f5d44b5588
|   |-IfStmt 0x1f5d44b5848 <line:464:5, line:465:14>
|   | |-BinaryOperator 0x1f5d44b5810 <line:464:9, col:41> 'int' '<='
|   | | |-CallExpr 0x1f5d44b5788 <col:9, col:36> 'int'
|   | | | |-ImplicitCastExpr 0x1f5d44b5770 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1f5d44b5710 <col:9> 'int ()' Function 0x1f5d44b5648 'RAND_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x1f5d44b57b8 <col:20> 'void *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1f5d44b5730 <col:20> 'void *' lvalue Var 0x1f5d44b3ea8 'md_data' 'void *'
|   | | | `-ImplicitCastExpr 0x1f5d44b57d0 <col:29> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1f5d44b5750 <col:29> 'int' lvalue Var 0x1f5d44b3e10 'md_size' 'int'
|   | | `-IntegerLiteral 0x1f5d44b57e8 <col:41> 'int' 0
|   | `-GotoStmt 0x1f5d44b5830 <line:465:9, col:14> 'berr' 0x1f5d44b5588
|   |-CompoundAssignOperator 0x1f5d44b5af8 <line:468:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x1f5d44b5a78 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | `-ImplicitCastExpr 0x1f5d44b5a60 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f5d44b5a40 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b3ce0 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1f5d44b5ae0 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1f5d44b5ac8 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f5d44b5aa8 <col:21> 'int' lvalue Var 0x1f5d44b3e10 'md_size' 'int'
|   |-IfStmt 0x1f5d44b5f78 <line:470:5, line:471:14>
|   | |-OpaqueValueExpr 0x1f5d44b5f60 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1f5d44b5f48 <col:9, col:14> 'berr' 0x1f5d44b5588
|   |-IfStmt 0x1f5d44b61f8 <line:472:5, line:473:14>
|   | |-OpaqueValueExpr 0x1f5d44b61e0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1f5d44b61c8 <col:9, col:14> 'berr' 0x1f5d44b5588
|   |-CompoundAssignOperator 0x1f5d44ae258 <line:474:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x1f5d44b6248 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | `-ImplicitCastExpr 0x1f5d44b6230 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f5d44b6210 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b3ce0 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1f5d44ae240 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1f5d44b6298 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f5d44b6278 <col:21> 'int' lvalue Var 0x1f5d44b3e10 'md_size' 'int'
|   |-BinaryOperator 0x1f5d44ae318 <line:475:5, col:21> 'int' '='
|   | |-MemberExpr 0x1f5d44ae2c0 <col:5, col:10> 'int' lvalue ->blockout 0x1f5d44a3a08
|   | | `-ImplicitCastExpr 0x1f5d44ae2a8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f5d44ae288 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b3ce0 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x1f5d44ae2f0 <col:21> 'int' 1
|   |-BinaryOperator 0x1f5d44ae3c8 <line:476:5, col:18> 'int' '='
|   | |-MemberExpr 0x1f5d44ae370 <col:5, col:10> 'int' lvalue ->sigio 0x1f5d44a3a78
|   | | `-ImplicitCastExpr 0x1f5d44ae358 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f5d44ae338 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44b3ce0 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x1f5d44ae3a0 <col:18> 'int' 0
|   |-ReturnStmt 0x1f5d44ae410 <line:477:5, col:12>
|   | `-IntegerLiteral 0x1f5d44ae3e8 <col:12> 'int' 1
|   |-LabelStmt 0x1f5d44ae448 <line:478:2, col:6> 'berr'
|   | `-NullStmt 0x1f5d44ae440 <col:6>
|   `-ReturnStmt 0x1f5d44ae488 <line:480:5, col:12>
|     `-IntegerLiteral 0x1f5d44ae460 <col:12> 'int' 0
|-FunctionDecl 0x1f5d44b5d00 <line:470:42> col:42 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1f5d44b5da0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f5d44ae5d8 <line:483:1, line:529:1> line:483:12 invalid sig_in 'int (int *)' static
| |-ParmVarDecl 0x1f5d44ae540 <col:19, col:24> col:24 invalid b 'int *'
| `-CompoundStmt 0x1f5d44bb310 <line:484:1, line:529:1>
|   |-DeclStmt 0x1f5d44ae710 <line:485:5, col:20>
|   | `-VarDecl 0x1f5d44ae6a8 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x1f5d44ae7a8 <line:487:5, col:39>
|   | `-VarDecl 0x1f5d44ae740 <col:5, col:19> col:19 invalid tmp 'unsigned char'
|   |-DeclStmt 0x1f5d44ae868 <line:488:5, col:16>
|   | `-VarDecl 0x1f5d44ae7d8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1f5d44ae840 <col:15> 'int' 0
|   |-DeclStmt 0x1f5d44ae900 <line:489:5, col:25>
|   | `-VarDecl 0x1f5d44ae898 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x1f5d44ae998 <line:490:5, col:16>
|   | `-VarDecl 0x1f5d44ae930 <col:5, col:9> col:9 used md_size 'int'
|   |-DeclStmt 0x1f5d44aea30 <line:491:5, col:18>
|   | `-VarDecl 0x1f5d44ae9c8 <col:5, col:11> col:11 used md_data 'void *'
|   |-IfStmt 0x1f5d44aee20 <line:499:5, line:500:16>
|   | |-BinaryOperator 0x1f5d44aedc8 <line:499:9, col:50> 'int' '<'
|   | | |-CStyleCastExpr 0x1f5d44aed20 <col:9, col:42> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x1f5d44aed00 <col:14, col:42> 'unsigned long long'
|   | | |   `-BinaryOperator 0x1f5d44aeca8 <col:15, col:35> 'unsigned long long' '-'
|   | | |     |-ImplicitCastExpr 0x1f5d44aec78 <col:15, col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |     | `-MemberExpr 0x1f5d44aebe0 <col:15, col:20> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | |     |   `-ImplicitCastExpr 0x1f5d44aebc8 <col:15> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |     |     `-DeclRefExpr 0x1f5d44aeba8 <col:15> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   | | |     `-ImplicitCastExpr 0x1f5d44aec90 <col:30, col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       `-MemberExpr 0x1f5d44aec48 <col:30, col:35> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   | | |         `-ImplicitCastExpr 0x1f5d44aec30 <col:30> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x1f5d44aec10 <col:30> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   | | `-BinaryOperator 0x1f5d44aeda8 <col:46, col:50> 'int' '*'
|   | |   |-IntegerLiteral 0x1f5d44aed48 <col:46> 'int' 2
|   | |   `-ImplicitCastExpr 0x1f5d44aed90 <col:50> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1f5d44aed70 <col:50> 'int' lvalue Var 0x1f5d44ae930 'md_size' 'int'
|   | `-ReturnStmt 0x1f5d44aee10 <line:500:9, col:16>
|   |   `-IntegerLiteral 0x1f5d44aede8 <col:16> 'int' 1
|   |-IfStmt 0x1f5d44aef60 <line:502:5, line:503:14>
|   | |-OpaqueValueExpr 0x1f5d44aef48 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1f5d44aef30 <col:9, col:14> 'berr' 0x1f5d44aeee0
|   |-CallExpr 0x1f5d44af150 <line:505:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x1f5d44af138 <col:5> 'void (*)(void *, size_t)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f5d44af078 <col:5> 'void (void *, size_t)' Function 0x1f5d44b2b68 'longswap' 'void (void *, size_t)'
|   | |-ImplicitCastExpr 0x1f5d44af180 <col:14> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1f5d44af098 <col:14> 'void *' lvalue Var 0x1f5d44ae9c8 'md_data' 'void *'
|   | `-ImplicitCastExpr 0x1f5d44af1b0 <col:23> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1f5d44af198 <col:23> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f5d44af0b8 <col:23> 'int' lvalue Var 0x1f5d44ae930 'md_size' 'int'
|   |-CompoundAssignOperator 0x1f5d44b6310 <line:506:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x1f5d44af200 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   | | `-ImplicitCastExpr 0x1f5d44af1e8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f5d44af1c8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1f5d44b62f8 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1f5d44b62e0 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f5d44b62c0 <col:21> 'int' lvalue Var 0x1f5d44ae930 'md_size' 'int'
|   |-IfStmt 0x1f5d44b64d8 <line:508:5, line:509:14>
|   | |-OpaqueValueExpr 0x1f5d44b64c0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1f5d44b64a8 <col:9, col:14> 'berr' 0x1f5d44aeee0
|   |-IfStmt 0x1f5d44b65c8 <line:510:5, line:511:14>
|   | |-OpaqueValueExpr 0x1f5d44b65b0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1f5d44b6598 <col:9, col:14> 'berr' 0x1f5d44aeee0
|   |-CompoundAssignOperator 0x1f5d44b6a28 <line:513:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x1f5d44b69a8 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   | | `-ImplicitCastExpr 0x1f5d44b6990 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f5d44b6970 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1f5d44b6a10 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1f5d44b69f8 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f5d44b69d8 <col:21> 'int' lvalue Var 0x1f5d44ae930 'md_size' 'int'
|   |-IfStmt 0x1f5d44b71c0 <line:514:5, line:524:5> has_else
|   | |-BinaryOperator 0x1f5d44b6ab8 <line:514:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x1f5d44b6aa0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f5d44b6a58 <col:9> 'int' lvalue Var 0x1f5d44ae7d8 'ret' 'int'
|   | | `-IntegerLiteral 0x1f5d44b6a78 <col:16> 'int' 1
|   | |-CompoundStmt 0x1f5d44b70c8 <col:19, line:522:5>
|   | | |-BinaryOperator 0x1f5d44b6b68 <line:515:9, col:22> 'int' '='
|   | | | |-MemberExpr 0x1f5d44b6b10 <col:9, col:14> 'int' lvalue ->sigio 0x1f5d44a3a78
|   | | | | `-ImplicitCastExpr 0x1f5d44b6af8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1f5d44b6ad8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   | | | `-IntegerLiteral 0x1f5d44b6b40 <col:22> 'int' 0
|   | | |-IfStmt 0x1f5d44b6ed0 <line:516:9, line:519:9>
|   | | | |-BinaryOperator 0x1f5d44b6c88 <line:516:13, col:34> 'int' '!='
|   | | | | |-ImplicitCastExpr 0x1f5d44b6c58 <col:13, col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | | `-MemberExpr 0x1f5d44b6bc0 <col:13, col:18> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | | | |   `-ImplicitCastExpr 0x1f5d44b6ba8 <col:13> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x1f5d44b6b88 <col:13> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   | | | | `-ImplicitCastExpr 0x1f5d44b6c70 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | |   `-MemberExpr 0x1f5d44b6c28 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   | | | |     `-ImplicitCastExpr 0x1f5d44b6c10 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1f5d44b6bf0 <col:29> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   | | | `-CompoundStmt 0x1f5d44b6ec0 <col:43, line:519:9>
|   | | |-CompoundAssignOperator 0x1f5d44b6fd0 <line:520:9, col:30> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | | | |-MemberExpr 0x1f5d44b6f20 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | | | `-ImplicitCastExpr 0x1f5d44b6f08 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1f5d44b6ee8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   | | | `-ImplicitCastExpr 0x1f5d44b6fb8 <col:25, col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-MemberExpr 0x1f5d44b6f88 <col:25, col:30> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   | | |     `-ImplicitCastExpr 0x1f5d44b6f70 <col:25> 'BIO_OK_CTX *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1f5d44b6f50 <col:25> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   | | `-BinaryOperator 0x1f5d44b70a8 <line:521:9, col:24> 'size_t':'unsigned long long' '='
|   | |   |-MemberExpr 0x1f5d44b7038 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
|   | |   | `-ImplicitCastExpr 0x1f5d44b7020 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1f5d44b7000 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   | |   `-ImplicitCastExpr 0x1f5d44b7090 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1f5d44b7068 <col:24> 'int' 0
|   | `-CompoundStmt 0x1f5d44b71a8 <line:522:12, line:524:5>
|   |   `-BinaryOperator 0x1f5d44b7188 <line:523:9, col:21> 'int' '='
|   |     |-MemberExpr 0x1f5d44b7130 <col:9, col:14> 'int' lvalue ->cont 0x1f5d44a38b8
|   |     | `-ImplicitCastExpr 0x1f5d44b7118 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1f5d44b70f8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44ae6a8 'ctx' 'BIO_OK_CTX *'
|   |     `-IntegerLiteral 0x1f5d44b7160 <col:21> 'int' 0
|   |-ReturnStmt 0x1f5d44b7210 <line:525:5, col:12>
|   | `-IntegerLiteral 0x1f5d44b71e8 <col:12> 'int' 1
|   |-LabelStmt 0x1f5d44b7248 <line:526:2, col:6> 'berr'
|   | `-NullStmt 0x1f5d44b7240 <col:6>
|   `-ReturnStmt 0x1f5d44b7288 <line:528:5, col:12>
|     `-IntegerLiteral 0x1f5d44b7260 <col:12> 'int' 0
|-FunctionDecl 0x1f5d44b6660 <line:512:11> col:11 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1f5d44b6700 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1f5d44b6768 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1f5d44b67d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1f5d44bb458 <line:531:1, line:560:1> line:531:12 invalid block_out 'int (int *)' static
| |-ParmVarDecl 0x1f5d44bb3c0 <col:22, col:27> col:27 invalid b 'int *'
| `-CompoundStmt 0x1f5d44bc448 <line:532:1, line:560:1>
|   |-DeclStmt 0x1f5d44bb590 <line:533:5, col:20>
|   | `-VarDecl 0x1f5d44bb528 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
|   |-DeclStmt 0x1f5d44bb628 <line:535:5, col:21>
|   | `-VarDecl 0x1f5d44bb5c0 <col:5, col:19> col:19 used tl 'unsigned long'
|   |-DeclStmt 0x1f5d44bb6c0 <line:536:5, col:25>
|   | `-VarDecl 0x1f5d44bb658 <col:5, col:19> col:19 invalid digest 'const int *'
|   |-DeclStmt 0x1f5d44bb758 <line:537:5, col:16>
|   | `-VarDecl 0x1f5d44bb6f0 <col:5, col:9> col:9 used md_size 'int'
|   |-BinaryOperator 0x1f5d44bb9a8 <line:544:5, line:93:25> 'unsigned long' '='
|   | |-DeclRefExpr 0x1f5d44bb878 <line:544:5> 'unsigned long' lvalue Var 0x1f5d44bb5c0 'tl' 'unsigned long'
|   | `-ImplicitCastExpr 0x1f5d44bb990 <col:10, line:93:25> 'unsigned long' <IntegralCast>
|   |   `-BinaryOperator 0x1f5d44bb970 <line:544:10, line:93:25> 'unsigned long long' '-'
|   |     |-ImplicitCastExpr 0x1f5d44bb940 <line:544:10, col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x1f5d44bb8e8 <col:10, col:15> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   |     |   `-ImplicitCastExpr 0x1f5d44bb8d0 <col:10> 'BIO_OK_CTX *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1f5d44bb8b0 <col:10> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bb528 'ctx' 'BIO_OK_CTX *'
|   |     `-ImplicitCastExpr 0x1f5d44bb958 <line:93:25> 'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x1f5d44bb918 <col:25> 'int' 4
|   |-IfStmt 0x1f5d44bc020 <line:549:5, line:551:14>
|   | |-OpaqueValueExpr 0x1f5d44bc008 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1f5d44bbff0 <col:9, col:14> 'berr' 0x1f5d44bbfa0
|   |-IfStmt 0x1f5d44bc1b0 <line:552:5, line:553:14>
|   | |-OpaqueValueExpr 0x1f5d44bc198 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1f5d44bc180 <col:9, col:14> 'berr' 0x1f5d44bbfa0
|   |-CompoundAssignOperator 0x1f5d44bc280 <line:554:5, col:21> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-MemberExpr 0x1f5d44bc200 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
|   | | `-ImplicitCastExpr 0x1f5d44bc1e8 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f5d44bc1c8 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bb528 'ctx' 'BIO_OK_CTX *'
|   | `-ImplicitCastExpr 0x1f5d44bc268 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1f5d44bc250 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f5d44bc230 <col:21> 'int' lvalue Var 0x1f5d44bb6f0 'md_size' 'int'
|   |-BinaryOperator 0x1f5d44bc378 <line:555:5, col:21> 'int' '='
|   | |-MemberExpr 0x1f5d44bc320 <col:5, col:10> 'int' lvalue ->blockout 0x1f5d44a3a08
|   | | `-ImplicitCastExpr 0x1f5d44bc2d0 <col:5> 'BIO_OK_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f5d44bc2b0 <col:5> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bb528 'ctx' 'BIO_OK_CTX *'
|   | `-IntegerLiteral 0x1f5d44bc350 <col:21> 'int' 1
|   |-ReturnStmt 0x1f5d44bc3c0 <line:556:5, col:12>
|   | `-IntegerLiteral 0x1f5d44bc398 <col:12> 'int' 1
|   |-LabelStmt 0x1f5d44bc3f8 <line:557:2, col:6> 'berr'
|   | `-NullStmt 0x1f5d44bc3f0 <col:6>
|   `-ReturnStmt 0x1f5d44bc438 <line:559:5, col:12>
|     `-IntegerLiteral 0x1f5d44bc410 <col:12> 'int' 0
`-FunctionDecl 0x1f5d44bc568 <line:562:1, line:605:1> line:562:12 invalid block_in 'int (int *)' static
  |-ParmVarDecl 0x1f5d44bc4d0 <col:21, col:26> col:26 invalid b 'int *'
  `-CompoundStmt 0x1f5d44b8f18 <line:563:1, line:605:1>
    |-DeclStmt 0x1f5d44bc6a0 <line:564:5, col:20>
    | `-VarDecl 0x1f5d44bc638 <col:5, col:17> col:17 used ctx 'BIO_OK_CTX *'
    |-DeclStmt 0x1f5d44bc778 <line:566:5, col:25>
    | `-VarDecl 0x1f5d44bc6d0 <col:5, col:24> col:19 used tl 'unsigned long' cinit
    |   `-ImplicitCastExpr 0x1f5d44bc760 <col:24> 'unsigned long' <IntegralCast>
    |     `-IntegerLiteral 0x1f5d44bc738 <col:24> 'int' 0
    |-DeclStmt 0x1f5d44bc810 <line:567:5, col:39>
    | `-VarDecl 0x1f5d44bc7a8 <col:5, col:19> col:19 invalid tmp 'unsigned char'
    |-DeclStmt 0x1f5d44bc8a8 <line:568:5, col:16>
    | `-VarDecl 0x1f5d44bc840 <col:5, col:9> col:9 used md_size 'int'
    |-CStyleCastExpr 0x1f5d44bce88 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x1f5d44bce68 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x1f5d44bce18 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x1f5d44bcad8 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x1f5d44bcac0 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x1f5d44bcaa8 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x1f5d44bca88 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x1f5d44bca68 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:574:12, line:93:25> 'int' '>='
    |     |         |-UnaryExprOrTypeTraitExpr 0x1f5d44bca08 <line:574:12, col:21> 'unsigned long long' sizeof
    |     |         | `-ParenExpr 0x1f5d44bc9e8 <col:18, col:21> 'unsigned long' lvalue
    |     |         |   `-DeclRefExpr 0x1f5d44bc9c8 <col:19> 'unsigned long' lvalue Var 0x1f5d44bc6d0 'tl' 'unsigned long' non_odr_use_unevaluated
    |     |         `-ImplicitCastExpr 0x1f5d44bca50 <line:93:25> 'unsigned long long' <IntegralCast>
    |     |           `-IntegerLiteral 0x1f5d44bca28 <col:25> 'int' 4
    |     `-ParenExpr 0x1f5d44bcdf8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x1f5d44bcdd8 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x1f5d44bcd00 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x1f5d44bcce8 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x1f5d44bcaf8 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1f5d44a71d0 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x1f5d44bcd50 <<scratch space>:199:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1f5d44bcd38 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1f5d44bcb58 <col:1> 'unsigned short [29]' lvalue L"sizeof(tl) >= OK_BLOCK_BLOCK"
    |         | |-ImplicitCastExpr 0x1f5d44bcd80 <line:201:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1f5d44bcd68 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1f5d44bcbe8 <col:1> 'unsigned short [46]' lvalue L".//openssl//file_jk/after\\crypto\\evp\\bio_ok.c"
    |         | `-ImplicitCastExpr 0x1f5d44bcd98 <line:202:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x1f5d44bcc60 <col:1> 'int' 574
    |         `-IntegerLiteral 0x1f5d44bcdb0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-CompoundAssignOperator 0x1f5d44bcfa8 <.//openssl//file_jk/after\crypto\evp\bio_ok.c:576:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x1f5d44bcf48 <col:5> 'unsigned long' lvalue Var 0x1f5d44bc6d0 'tl' 'unsigned long'
    | `-IntegerLiteral 0x1f5d44bcf68 <col:12> 'int' 8
    |-CompoundAssignOperator 0x1f5d44bd0b8 <line:578:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x1f5d44bd058 <col:5> 'unsigned long' lvalue Var 0x1f5d44bc6d0 'tl' 'unsigned long'
    | `-IntegerLiteral 0x1f5d44bd078 <col:12> 'int' 8
    |-CompoundAssignOperator 0x1f5d44bd1c8 <line:580:5, col:12> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    | |-DeclRefExpr 0x1f5d44bd168 <col:5> 'unsigned long' lvalue Var 0x1f5d44bc6d0 'tl' 'unsigned long'
    | `-IntegerLiteral 0x1f5d44bd188 <col:12> 'int' 8
    |-IfStmt 0x1f5d44b8450 <line:583:5, line:584:16>
    | |-BinaryOperator 0x1f5d44b83f8 <line:583:9, col:46> 'int' '<'
    | | |-ImplicitCastExpr 0x1f5d44b83c8 <col:9, col:14> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-MemberExpr 0x1f5d44bd2b0 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
    | | |   `-ImplicitCastExpr 0x1f5d44bd298 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | |     `-DeclRefExpr 0x1f5d44bd278 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bc638 'ctx' 'BIO_OK_CTX *'
    | | `-ImplicitCastExpr 0x1f5d44b83e0 <col:24, col:46> 'unsigned long long' <IntegralCast>
    | |   `-BinaryOperator 0x1f5d44b83a8 <col:24, col:46> 'unsigned long' '+'
    | |     |-BinaryOperator 0x1f5d44b8338 <col:24, line:93:25> 'unsigned long' '+'
    | |     | |-ImplicitCastExpr 0x1f5d44b8308 <line:583:24> 'unsigned long' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x1f5d44bd2e0 <col:24> 'unsigned long' lvalue Var 0x1f5d44bc6d0 'tl' 'unsigned long'
    | |     | `-ImplicitCastExpr 0x1f5d44b8320 <line:93:25> 'unsigned long' <IntegralCast>
    | |     |   `-IntegerLiteral 0x1f5d44b82e0 <col:25> 'int' 4
    | |     `-ImplicitCastExpr 0x1f5d44b8390 <line:583:46> 'unsigned long' <IntegralCast>
    | |       `-ImplicitCastExpr 0x1f5d44b8378 <col:46> 'int' <LValueToRValue>
    | |         `-DeclRefExpr 0x1f5d44b8358 <col:46> 'int' lvalue Var 0x1f5d44bc840 'md_size' 'int'
    | `-ReturnStmt 0x1f5d44b8440 <line:584:9, col:16>
    |   `-IntegerLiteral 0x1f5d44b8418 <col:16> 'int' 1
    |-IfStmt 0x1f5d44b8588 <line:586:5, line:588:14>
    | |-OpaqueValueExpr 0x1f5d44b8570 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1f5d44b8558 <col:9, col:14> 'berr' 0x1f5d44b8508
    |-IfStmt 0x1f5d44b8678 <line:589:5, line:590:14>
    | |-OpaqueValueExpr 0x1f5d44b8660 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1f5d44b8648 <col:9, col:14> 'berr' 0x1f5d44b8508
    |-IfStmt 0x1f5d44b8e40 <line:591:5, line:600:5> has_else
    | |-OpaqueValueExpr 0x1f5d44b8e28 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x1f5d44b8d28 <line:591:70, line:598:5>
    | | |-BinaryOperator 0x1f5d44b8950 <line:593:9, col:51> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x1f5d44b8800 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off_save 0x1f5d44a3848
    | | | | `-ImplicitCastExpr 0x1f5d44b87e8 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1f5d44b87c8 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bc638 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x1f5d44b8938 <col:29, col:51> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-BinaryOperator 0x1f5d44b8918 <col:29, col:51> 'unsigned long' '+'
    | | |     |-BinaryOperator 0x1f5d44b88a8 <col:29, line:93:25> 'unsigned long' '+'
    | | |     | |-ImplicitCastExpr 0x1f5d44b8878 <line:593:29> 'unsigned long' <LValueToRValue>
    | | |     | | `-DeclRefExpr 0x1f5d44b8830 <col:29> 'unsigned long' lvalue Var 0x1f5d44bc6d0 'tl' 'unsigned long'
    | | |     | `-ImplicitCastExpr 0x1f5d44b8890 <line:93:25> 'unsigned long' <IntegralCast>
    | | |     |   `-IntegerLiteral 0x1f5d44b8850 <col:25> 'int' 4
    | | |     `-ImplicitCastExpr 0x1f5d44b8900 <line:593:51> 'unsigned long' <IntegralCast>
    | | |       `-ImplicitCastExpr 0x1f5d44b88e8 <col:51> 'int' <LValueToRValue>
    | | |         `-DeclRefExpr 0x1f5d44b88c8 <col:51> 'int' lvalue Var 0x1f5d44bc840 'md_size' 'int'
    | | |-BinaryOperator 0x1f5d44b8a58 <line:594:9, col:34> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x1f5d44b89a8 <col:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len_save 0x1f5d44a37e0
    | | | | `-ImplicitCastExpr 0x1f5d44b8990 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1f5d44b8970 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bc638 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x1f5d44b8a40 <col:29, col:34> 'size_t':'unsigned long long' <LValueToRValue>
    | | |   `-MemberExpr 0x1f5d44b8a10 <col:29, col:34> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
    | | |     `-ImplicitCastExpr 0x1f5d44b89f8 <col:29> 'BIO_OK_CTX *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1f5d44b89d8 <col:29> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bc638 'ctx' 'BIO_OK_CTX *'
    | | |-BinaryOperator 0x1f5d44b8b20 <line:595:9, line:93:25> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x1f5d44b8ab0 <line:595:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_off 0x1f5d44a3778
    | | | | `-ImplicitCastExpr 0x1f5d44b8a98 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1f5d44b8a78 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bc638 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x1f5d44b8b08 <line:93:25> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-IntegerLiteral 0x1f5d44b8ae0 <col:25> 'int' 4
    | | |-BinaryOperator 0x1f5d44b8c58 <line:596:9, line:93:25> 'size_t':'unsigned long long' '='
    | | | |-MemberExpr 0x1f5d44b8b78 <line:596:9, col:14> 'size_t':'unsigned long long' lvalue ->buf_len 0x1f5d44a3710
    | | | | `-ImplicitCastExpr 0x1f5d44b8b60 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1f5d44b8b40 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bc638 'ctx' 'BIO_OK_CTX *'
    | | | `-ImplicitCastExpr 0x1f5d44b8c40 <col:24, line:93:25> 'size_t':'unsigned long long' <IntegralCast>
    | | |   `-BinaryOperator 0x1f5d44b8c20 <line:596:24, line:93:25> 'unsigned long' '+'
    | | |     |-ImplicitCastExpr 0x1f5d44b8bf0 <line:596:24> 'unsigned long' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x1f5d44b8ba8 <col:24> 'unsigned long' lvalue Var 0x1f5d44bc6d0 'tl' 'unsigned long'
    | | |     `-ImplicitCastExpr 0x1f5d44b8c08 <line:93:25> 'unsigned long' <IntegralCast>
    | | |       `-IntegerLiteral 0x1f5d44b8bc8 <col:25> 'int' 4
    | | `-BinaryOperator 0x1f5d44b8d08 <line:597:9, col:25> 'int' '='
    | |   |-MemberExpr 0x1f5d44b8cb0 <col:9, col:14> 'int' lvalue ->blockout 0x1f5d44a3a08
    | |   | `-ImplicitCastExpr 0x1f5d44b8c98 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x1f5d44b8c78 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bc638 'ctx' 'BIO_OK_CTX *'
    | |   `-IntegerLiteral 0x1f5d44b8ce0 <col:25> 'int' 1
    | `-CompoundStmt 0x1f5d44b8e10 <line:598:12, line:600:5>
    |   `-BinaryOperator 0x1f5d44b8df0 <line:599:9, col:21> 'int' '='
    |     |-MemberExpr 0x1f5d44b8d98 <col:9, col:14> 'int' lvalue ->cont 0x1f5d44a38b8
    |     | `-ImplicitCastExpr 0x1f5d44b8d80 <col:9> 'BIO_OK_CTX *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1f5d44b8d60 <col:9> 'BIO_OK_CTX *' lvalue Var 0x1f5d44bc638 'ctx' 'BIO_OK_CTX *'
    |     `-IntegerLiteral 0x1f5d44b8dc8 <col:21> 'int' 0
    |-ReturnStmt 0x1f5d44b8e90 <line:601:5, col:12>
    | `-IntegerLiteral 0x1f5d44b8e68 <col:12> 'int' 1
    |-LabelStmt 0x1f5d44b8ec8 <line:602:2, col:6> 'berr'
    | `-NullStmt 0x1f5d44b8ec0 <col:6>
    `-ReturnStmt 0x1f5d44b8f08 <line:604:5, col:12>
      `-IntegerLiteral 0x1f5d44b8ee0 <col:12> 'int' 0
