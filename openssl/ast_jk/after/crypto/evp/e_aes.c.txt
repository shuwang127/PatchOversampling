TranslationUnitDecl 0x19556c15f18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x19556c167b0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x19556c164b0 '__int128'
|-TypedefDecl 0x19556c16820 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x19556c164d0 'unsigned __int128'
|-TypedefDecl 0x19556c16b58 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x19556c16910 'struct __NSConstantString_tag'
|   `-Record 0x19556c16878 '__NSConstantString_tag'
|-TypedefDecl 0x19556c16bc8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x19556c160f0 'unsigned long long'
|-TypedefDecl 0x19556c16c60 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x19556c16c20 'char *'
|   `-BuiltinType 0x19556c15fb0 'char'
|-TypedefDecl 0x19556c16cd0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x19556c16c20 'char *'
|   `-BuiltinType 0x19556c15fb0 'char'
|-TypedefDecl 0x19556c16d90 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x19556c160f0 'unsigned long long'
|-TypedefDecl 0x19556c16e00 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x19556c16c20 'char *'
|   `-BuiltinType 0x19556c15fb0 'char'
|-FunctionDecl 0x1955870b440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1955870b4e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1955870b550 <col:21> Implicit
|-FunctionDecl 0x1955870b5a8 prev 0x1955870b440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1955870b2d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1955870b698 <col:21> Inherited Implicit
|-TypedefDecl 0x1955870b6d8 prev 0x19556c16bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x19556c160f0 'unsigned long long'
|-TypedefDecl 0x1955870b780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1955870b750 'size_t' sugar
|   |-Typedef 0x1955870b6d8 'size_t'
|   `-BuiltinType 0x19556c160f0 'unsigned long long'
|-TypedefDecl 0x1955870b7f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x19556c16050 'long long'
|-TypedefDecl 0x1955870b860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x19556c16050 'long long'
|-TypedefDecl 0x1955870b8d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x19556c16090 'unsigned short'
|-TypedefDecl 0x1955870b940 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x19556c16090 'unsigned short'
|-TypedefDecl 0x1955870b9b0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x19556c16090 'unsigned short'
|-TypedefDecl 0x1955870ba20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x19556c16010 'int'
|-TypedefDecl 0x1955870ba90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x19556c16030 'long'
|-TypedefDecl 0x1955870bb00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x19556c16050 'long long'
|-TypedefDecl 0x1955870bb90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1955870bb60 '__time64_t' sugar
|   |-Typedef 0x1955870bb00 '__time64_t'
|   `-BuiltinType 0x19556c16050 'long long'
|-FunctionDecl 0x1955870bd08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1955870bf28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1955873c6d0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1955870c068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1955870c0e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1955870c158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1955870c1d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1955873c470 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1955873c7b0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1955873c870 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1955873c9e0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1955873c990 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1955873c930 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1955873c850 'struct threadlocaleinfostruct'
|       `-Record 0x19558748530 'threadlocaleinfostruct'
|-TypedefDecl 0x1955873caf0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1955873caa0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1955873ca40 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1955873c910 'struct threadmbcinfostruct'
|       `-Record 0x1955873c870 'threadmbcinfostruct'
|-RecordDecl 0x1955873cb48 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1955873cc00 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1955873ccc0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1955873cd50 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1955873cde0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1955873ce98 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1955873ce40 'struct localeinfo_struct' sugar
|   `-RecordType 0x1955873cca0 'struct localeinfo_struct'
|     `-Record 0x1955873cc00 'localeinfo_struct'
|-TypedefDecl 0x1955873cf70 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1955873cf20 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1955873ce40 'struct localeinfo_struct' sugar
|     `-RecordType 0x1955873cca0 'struct localeinfo_struct'
|       `-Record 0x1955873cc00 'localeinfo_struct'
|-RecordDecl 0x1955873cfe8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1955873d0a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1955873d118 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1955873d1d8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1955873d270 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1955873d2e0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1955873d398 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1955873d340 'struct localerefcount' sugar
|   `-RecordType 0x1955873d080 'struct localerefcount'
|     `-Record 0x1955873cfe8 'localerefcount'
|-RecordDecl 0x19558748530 prev 0x1955873c7b0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x195587485b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x19558748628 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x19558748698 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x19558748708 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x19558748778 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x19558748938 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x195587489a8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x19558748a18 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x19558748a88 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x19558748af8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x19558748b68 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x19558748bc0 parent 0x19556c15f18 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x19558748d50 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x19558748dc0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x19558748e30 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x19558748ea0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x19558748f40 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x19558748fb0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x195587490c0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x195587491f8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x195587492a8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x19558749250 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1955873c850 'struct threadlocaleinfostruct'
|     `-Record 0x19558748530 'threadlocaleinfostruct'
|-FunctionDecl 0x195587436f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x19558749330 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x195587493e0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x19558749460 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x195587434e0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x19558743ab8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x19558743b58 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x19558743bc0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x19558743c28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x19558743ca8 prev 0x19558743ab8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x195587437e0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x19558743860 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x195587438d8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x19558744068 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x19558743d90 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x19558743e10 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x19558743e88 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x19558744540 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x19558744150 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x195587441d0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x19558744248 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195587442e0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x19558744848 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x195587448e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x19558744950 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x195587449b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x19558744a38 prev 0x19558744848 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x19558744630 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x195587446b0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x19558744728 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x19558744df8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x19558744e98 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x19558744f00 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x19558744f68 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x19558744fe8 prev 0x19558744df8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x19558744b20 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x19558744ba0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x19558744c18 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x19558747520 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x195587450f8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x19558745190 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x19558745210 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x19558745288 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x195587478e8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x19558747988 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x195587479f0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x19558747a58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x19558747ad8 prev 0x195587478e8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x19558747610 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x19558747690 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x19558747708 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x19558747f58 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x19558747ff8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x19558748060 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x195587480c8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x19558748130 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x195587481b8 prev 0x19558747f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x19558747ca0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x19558747d20 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x19558747da0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x19558747e18 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x19558748278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x19558741658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x19558748440 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x195587414c0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x19558741538 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x19558741710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x19558741b00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x19558741838 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x195587418b0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x19558741930 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x19558741ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x19558741ce0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x19558741d60 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x19558741f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558742390 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x195587420c8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x19558742140 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x195587421c0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1955874c830 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1955874c8d0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1955874c938 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1955874c9b0 prev 0x1955874c830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1955874c648 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1955874c6c8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1955874ca60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955874cdb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1955874cba8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1955874cc20 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1955874cca0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1955874d0e0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1955874d180 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1955874d1e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1955874d260 prev 0x1955874d0e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1955874cf60 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1955874cfe0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1955874d310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955874e660 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1955874e700 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1955874e768 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1955874e7e0 prev 0x1955874e660 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1955874d458 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1955874d4d8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1955874ea30 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1955874ead0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1955874eb40 prev 0x1955874ea30 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1955874e8c0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1955874ee38 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1955874ec18 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1955874ec90 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1955874f088 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1955874ef18 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1955874ef90 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1955874f3b8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1955874f3a8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1955874f378 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1955874f1e8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1955874f1c8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1955874f198 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1955874f150 <col:13> 'const char *' lvalue ParmVar 0x1955874ef18 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1955874f1b0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1955874f170 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1955874f360 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1955874f208 <col:24> 'int' 0
|       `-CallExpr 0x1955874f300 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1955874f2e8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1955874f230 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1955874ee38 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1955874f330 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1955874f250 <col:36> 'const char *' lvalue ParmVar 0x1955874ef18 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1955874f348 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1955874f270 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1955874ef90 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x19558749678 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1955874f3e8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1955874f460 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1955874f4e0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x19558749540 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x19558749980 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x19558749a20 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x19558749a88 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x19558749af0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x19558749b70 prev 0x19558749980 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x19558749768 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x195587497e8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x19558749860 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x19558749da8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x19558749c58 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1955874a070 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1955874a110 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1955874a178 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1955874a1f0 prev 0x1955874a070 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x19558749e80 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x19558749f00 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1955874a450 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1955874a2d0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1955874a350 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x19558751740 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x195587515c0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x19558751640 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x19558751af8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x19558751820 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x195587518a0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x19558751918 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x19558751d60 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x19558751be0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x19558751c60 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x19558752058 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x19558751e40 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x19558751ec0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x19558751f38 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195587522c0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x19558752140 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x195587521c0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1955874d580 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x195587523a0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x19558752420 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x19558752498 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1955874d938 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1955874d668 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1955874d6e8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1955874d760 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1955874dda0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1955874da20 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1955874daa0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1955874db18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955874db90 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1955874e0a8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1955874de90 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1955874df10 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1955874df88 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1955874e440 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1955874e190 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1955874e210 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1955874e288 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955874e300 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1955874f7c8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1955874f868 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1955874f8d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1955874f948 prev 0x1955874f7c8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1955874f5a0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1955874f620 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1955874fc00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1955874fb20 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1955874fca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558750080 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1955874fdf0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1955874fe68 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955874fee8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x19558750398 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x19558750438 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x195587504a8 prev 0x19558750398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x19558750260 <col:90> col:93 'int'
| `-DeprecatedAttr 0x19558750550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955874a860 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1955874a650 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1955874a6c8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955874a748 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1955874ab68 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1955874a948 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1955874a9c0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1955874ae58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1955874ad08 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1955874af00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955874b310 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1955874b048 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1955874b0c0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955874b138 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x19558752780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1955874b4b8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x195587525d0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x19558752830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558752ce8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x19558752978 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x195587529f0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x19558752a70 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x19558752ae8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x19558753168 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x19558753208 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x19558753270 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x195587532d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x19558753358 prev 0x19558753168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x19558752e98 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x19558752f18 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x19558752f90 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x19558753410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955874b710 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1955874b7b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1955874b818 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1955874b880 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1955874b900 prev 0x1955874b710 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x19558753558 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1955874b578 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1955874b5f0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1955874bc00 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1955874b9e8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1955874ba68 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1955874bae0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1955874bf98 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1955874bce8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1955874bd68 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1955874bde0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955874be58 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1955874c330 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1955874c088 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1955874c100 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1955874c180 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1955874c1f8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x19558753778 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x19558753818 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x19558753880 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x195587538e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x19558753968 prev 0x19558753778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1955874c4e0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x195587535e0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x19558753658 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x19558753a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558753ed8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x19558753b68 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x19558753be0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x19558753c60 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x19558753cd8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x19558754358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x19558754088 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x19558754108 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x19558754180 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x19558754410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558754760 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x19558754800 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x19558754868 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x195587548e0 prev 0x19558754760 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x19558754558 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x195587545f0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x19558754b40 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x19558754be0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x19558754c48 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x19558754cc0 prev 0x19558754b40 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x195587549c0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x19558754a40 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x19558754e80 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x19558754da0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x195587550d0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x19558755170 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x195587551d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x19558755250 prev 0x195587550d0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x19558754f58 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x19558754fd8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x195587554b0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x19558755550 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x19558756610 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x19558756688 prev 0x195587554b0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x19558755330 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x195587553b0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x195587569a8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x19558756a48 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x19558756ab0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x19558756b28 prev 0x195587569a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x19558756828 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x195587568a8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x19558756bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558756fb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x19558756d20 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x19558756da0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x19558756e20 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x19558757210 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x195587570a0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x19558757118 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x19558757490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x195587573b0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x19558757538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558755908 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x19558755700 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x19558755778 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x195587557f0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x19558755c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x19558755ab0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x19558755b28 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x19558755cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x195587560f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x19558756190 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x195587561f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x19558756260 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x195587562e0 prev 0x195587560f0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x19558755e20 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x19558755ea0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x19558755f18 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x19558784b08 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x195587563c8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x19558756448 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x195587564c0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x19558756538 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x19558784db0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x19558784e50 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x19558784ec0 prev 0x19558784db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x19558784cd0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x19558784f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x195587852b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x19558785130 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x195587851b0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x19558785360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x195587856a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x19558785528 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x195587855a8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x19558785758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x19558786a28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x19558785920 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x19558786ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x19558786ee8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x19558786cd0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x19558786d50 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x19558786dc8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x19558786fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x19558787380 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x19558787168 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x195587871e8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x19558787260 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x19558787438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x195587876e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x19558787600 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x19558787788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x19558780a90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x19558787950 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x19558780990 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x19558780b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x19558780de8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x19558780d08 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x19558780e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x19558781120 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x19558780fb0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x195587814b0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x195587811f0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x19558781268 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x195587812e0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x19558781868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x19558781650 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x195587816c8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x19558781918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558787d18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x19558787db8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x19558787e20 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x19558787e98 prev 0x19558787d18 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x19558787af8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x19558787b70 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x19558788190 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x19558788230 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x19558788298 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x19558788310 prev 0x19558788190 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x19558787f70 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x19558787fe8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x195587885f0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x195587883e8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x19558788460 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x195587884d8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x19558788900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x19558788790 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x19558788808 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x195587889b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558783cd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x19558783ab8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x19558783b30 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x19558783f20 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x19558783fc0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x19558784030 prev 0x19558783f20 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x19558783db0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x19558784318 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x19558784100 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x19558784178 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x19558784560 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x195587843f0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x19558784468 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x195587848f8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x195587848e8 <line:307:5, col:56>
|     `-ConditionalOperator 0x195587848b8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x19558784720 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x19558784700 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x195587846d0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x19558784628 <col:13> 'const wchar_t *' lvalue ParmVar 0x195587843f0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x195587846e8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x195587846b0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x19558784688 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x19558784648 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x195587848a0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x19558784740 <col:29> 'int' 0
|       `-CallExpr 0x19558784840 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x19558784828 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x19558784768 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x19558784318 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x19558784870 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x19558784788 <col:41> 'const wchar_t *' lvalue ParmVar 0x195587843f0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x19558784888 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x195587847a8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x19558784468 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x19558785cd8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x19558784920 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x195587859e0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x19558785a58 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x19558785ad0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x19558786140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x19558785e80 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x19558785ef8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x19558785f70 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x195587861f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558786608 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x195587866a8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x19558786710 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x19558786778 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x195587867f8 prev 0x19558786608 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x19558786338 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x195587863b0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x19558786428 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x19558788bc0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x195587868d8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x19558786950 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x19558788a10 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x19558788a88 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x19558788f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x19558788d68 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x19558788de0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x19558788e58 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x19558789028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558789388 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x19558789168 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x195587891e0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x195587895d0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x19558789460 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x195587894d8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x19558789818 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x195587896a8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x19558789720 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x19558789a80 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x195587898f0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x19558789968 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x19558789d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x19558789c18 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x19558789c90 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x19558789e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955878a2a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x19558789f78 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x19558789ff0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1955878a0d0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1955878a5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1955878a448 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1955878a668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955878faf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1955878a7a8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1955878a820 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955878a8a0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1955878fda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1955878fcc8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1955878fe48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558790210 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1955878ff88 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x19558790000 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x19558790078 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x19558790468 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x195587902f0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x19558790368 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x19558790808 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x19558790540 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x195587905b8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x19558790630 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x19558790b18 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x195587908e8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x19558790960 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x195587909d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x19558790f70 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x19558790bf8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x19558790c70 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x19558790ce8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x19558790d60 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x195587913c8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x19558791058 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x195587910d0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x19558791148 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x195587911c0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x19558791830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x19558791570 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x195587915e8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x19558791660 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x195587918e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955878eb80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x19558791a28 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1955878ef10 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1955878ec50 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1955878ecc8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955878ed40 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1955878f2c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1955878f0b0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1955878f128 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1955878f378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955878f6d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1955878f4b8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1955878f530 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1955878f948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1955878f870 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1955878f9f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558791e60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x19558791b98 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x19558791c10 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x19558791c88 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x19558792218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x19558792000 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x19558792078 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x195587922c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x19558792578 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x19558792408 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x19558792480 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x195587927e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x19558792710 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x19558792890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955878bbd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x195587929d0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1955878ba40 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955878bab8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1955878bee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1955878bd70 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1955878bde8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1955878bf90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1955878c390 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1955878c0d0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1955878c148 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1955878c1c0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1955878c7d8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1955878c470 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1955878c4e8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1955878c560 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955878c5d8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1955878ca50 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1955878c8c0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1955878c938 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1955878cd38 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1955878cb28 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1955878cba0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1955878cc18 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1955878cf90 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1955878ce18 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1955878ce90 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1955878d278 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1955878d068 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1955878d0e0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1955878d158 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1955878d568 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1955878d358 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1955878d3d0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1955878d448 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1955878d8f0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1955878d648 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1955878d6c0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1955878d738 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955878d7b0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1955878abc8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1955878d9d8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1955878aa30 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1955878aaa8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1955878af50 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1955878aca8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1955878ad20 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1955878ad98 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1955878ae10 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1955878b1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1955878b0d8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1955878b258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1955878b590 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1955878b418 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1955878b490 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1955878b640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1955878da60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1955878b800 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1955878b878 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1955878b8f0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1955878db18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1955878dee0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1955878dcd8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1955878dd50 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1955878ddc8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1955878df98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1955878e230 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1955878e158 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1955878e2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1955878e608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1955878e498 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1955878e510 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1955878e6b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1955878e950 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1955878e878 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1955878e9f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x19558798d60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x19558798c88 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x19558798e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x19558799140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x19558798fc8 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x19558799040 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x195587991f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x195587995e0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x19558799310 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x19558799388 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x19558799408 <col:98, col:107> col:107 _Line 'unsigned int'
|-RecordDecl 0x195587996b0 <.//openssl//file_jk/after\crypto\evp/evp_locl.h:12:1, line:22:1> line:12:8 invalid struct evp_md_ctx_st definition
| |-FieldDecl 0x19558799788 <line:13:5, col:19> col:19 invalid digest 'const int *'
| |-FieldDecl 0x195587997f8 <line:14:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x19558799868 <line:16:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x195587998d8 <line:17:5, col:11> col:11 md_data 'void *'
| |-FieldDecl 0x19558799948 <line:19:5, col:19> col:19 invalid pctx 'int *'
| `-FieldDecl 0x19558792c78 <line:21:5, col:67> col:11 update 'int (*)(int *, const void *, size_t)'
|-RecordDecl 0x19558792cd0 <line:24:1, line:42:1> line:24:8 invalid struct evp_cipher_ctx_st definition
| |-FieldDecl 0x19558792da8 <line:25:5, col:23> col:23 invalid cipher 'const int *'
| |-FieldDecl 0x19558792e18 <line:26:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x19558792e88 <line:28:5, col:9> col:9 encrypt 'int'
| |-FieldDecl 0x19558792ef8 <line:29:5, col:9> col:9 buf_len 'int'
| |-FieldDecl 0x19558792f68 <line:30:5, col:19> col:19 invalid oiv 'unsigned char'
| |-FieldDecl 0x19558792fd8 <line:31:5, col:19> col:19 invalid iv 'unsigned char'
| |-FieldDecl 0x19558793048 <line:32:5, col:19> col:19 invalid buf 'unsigned char'
| |-FieldDecl 0x195587930b8 <line:33:5, col:9> col:9 num 'int'
| |-FieldDecl 0x19558793128 <line:35:5, col:11> col:11 app_data 'void *'
| |-FieldDecl 0x19558793198 <line:36:5, col:9> col:9 key_len 'int'
| |-FieldDecl 0x19558793208 <line:37:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x19558793278 <line:38:5, col:11> col:11 cipher_data 'void *'
| |-FieldDecl 0x195587932e8 <line:39:5, col:9> col:9 final_used 'int'
| |-FieldDecl 0x19558793358 <line:40:5, col:9> col:9 block_mask 'int'
| `-FieldDecl 0x195587933c8 <line:41:5, col:19> col:19 invalid final 'unsigned char'
|-FunctionDecl 0x19558793860 <line:44:1, line:47:39> line:44:5 invalid PKCS5_v2_PBKDF2_keyivgen 'int (int *, const char *, int, int *, const int *, const int *, int)'
| |-ParmVarDecl 0x19558793438 <col:30, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x195587934b8 <col:51, col:63> col:63 pass 'const char *'
| |-ParmVarDecl 0x19558793538 <line:45:30, col:34> col:34 passlen 'int'
| |-ParmVarDecl 0x195587935b8 <col:43, col:54> col:54 invalid param 'int *'
| |-ParmVarDecl 0x19558793638 <line:46:30, col:48> col:48 invalid c 'const int *'
| |-ParmVarDecl 0x195587936b8 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x19558793738 <line:47:30, col:34> col:34 en_de 'int'
|-RecordDecl 0x19558793938 <line:49:1, line:63:1> line:49:8 struct evp_Encode_Ctx_st definition
| |-FieldDecl 0x19558793a08 <line:51:5, col:9> col:9 num 'int'
| |-FieldDecl 0x19558795ae0 <line:57:5, col:9> col:9 length 'int'
| |-FieldDecl 0x19558795be0 <line:59:5, col:30> col:19 enc_data 'unsigned char [80]'
| |-FieldDecl 0x19558795c50 <line:61:5, col:9> col:9 line_num 'int'
| `-FieldDecl 0x19558795cc0 <line:62:5, col:9> col:9 expect_nl 'int'
|-RecordDecl 0x19558795d18 <line:65:9, col:16> col:16 struct evp_pbe_st
|-TypedefDecl 0x19558795e28 <col:1, col:27> col:27 referenced EVP_PBE_CTL 'struct evp_pbe_st':'struct evp_pbe_st'
| `-ElaboratedType 0x19558795dd0 'struct evp_pbe_st' sugar
|   `-RecordType 0x19558795db0 'struct evp_pbe_st'
|     `-Record 0x19558795d18 'evp_pbe_st'
|-FunctionDecl 0x19558795fd0 <line:66:1, col:28> col:1 DEFINE_STACK_OF 'int (EVP_PBE_CTL)'
| `-ParmVarDecl 0x19558795ed0 <col:17> col:28 'EVP_PBE_CTL':'struct evp_pbe_st'
|-FunctionDecl 0x195587962e0 <line:68:1, col:73> col:5 used is_partially_overlapping 'int (const void *, const void *, int)'
| |-ParmVarDecl 0x195587960a8 <col:30, col:42> col:42 ptr1 'const void *'
| |-ParmVarDecl 0x19558796128 <col:48, col:60> col:60 ptr2 'const void *'
| `-ParmVarDecl 0x195587961a8 <col:66, col:70> col:70 len 'int'
|-RecordDecl 0x195587963b0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:22:9, line:32:1> line:22:9 invalid struct definition
| |-RecordDecl 0x19558796470 <line:23:5, line:26:5> line:23:5 invalid union definition
| | |-FieldDecl 0x19558796548 <line:24:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x195587965b8 <line:25:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x19558796668 <line:23:5, line:26:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\e_aes.c:23:5)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:23:5)'
| |-FieldDecl 0x195587966d8 <line:27:5, col:16> col:16 invalid block 'int'
| |-RecordDecl 0x19558796730 <line:28:5, line:31:5> line:28:5 invalid union definition
| | |-FieldDecl 0x19558796808 <line:29:9, col:18> col:18 invalid cbc 'int'
| | `-FieldDecl 0x19558796878 <line:30:9, col:18> col:18 invalid ctr 'int'
| `-FieldDecl 0x19558796928 <line:28:5, line:31:7> col:7 invalid stream 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\e_aes.c:28:5)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:28:5)'
|-TypedefDecl 0x195587969d8 <line:22:1, line:32:3> col:3 referenced EVP_AES_KEY 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:22:9)':'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:22:9)'
| `-ElaboratedType 0x19558796980 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:22:9)' sugar
|   `-RecordType 0x19558796450 'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:22:9)'
|     `-Record 0x195587963b0 ''
|-RecordDecl 0x19558796a48 <line:34:9, line:48:1> line:34:9 invalid struct definition
| |-RecordDecl 0x19558796b10 <line:35:5, line:38:5> line:35:5 invalid union definition
| | |-FieldDecl 0x19558796be8 <line:36:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x19558796c58 <line:37:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x19558796d08 <line:35:5, line:38:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\e_aes.c:35:5)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:35:5)'
| |-FieldDecl 0x19558796d78 <line:39:5, col:9> col:9 referenced key_set 'int'
| |-FieldDecl 0x19558796de8 <line:40:5, col:9> col:9 referenced iv_set 'int'
| |-FieldDecl 0x19558796e58 <line:41:5, col:20> col:20 invalid gcm 'int'
| |-FieldDecl 0x19558796ef0 <line:42:5, col:20> col:20 referenced iv 'unsigned char *'
| |-FieldDecl 0x19558796f60 <line:43:5, col:9> col:9 referenced ivlen 'int'
| |-FieldDecl 0x19558796fd0 <line:44:5, col:9> col:9 referenced taglen 'int'
| |-FieldDecl 0x19558797040 <line:45:5, col:9> col:9 referenced iv_gen 'int'
| |-FieldDecl 0x195587970b0 <line:46:5, col:9> col:9 referenced tls_aad_len 'int'
| `-FieldDecl 0x19558797120 <line:47:5, col:14> col:14 invalid ctr 'int'
|-TypedefDecl 0x195587971d8 <line:34:1, line:48:3> col:3 referenced EVP_AES_GCM_CTX 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:34:9)':'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:34:9)'
| `-ElaboratedType 0x19558797180 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:34:9)' sugar
|   `-RecordType 0x19558796af0 'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:34:9)'
|     `-Record 0x19558796a48 ''
|-RecordDecl 0x19558797248 <line:50:9, line:60:1> line:50:9 invalid struct definition
| |-RecordDecl 0x19558797300 <line:51:5, line:54:5> line:51:5 invalid union definition
| | |-FieldDecl 0x195587973d8 <line:52:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x19558797448 <line:53:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x195587974f8 <line:51:5, line:54:7> col:7 invalid ks1 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\e_aes.c:51:5)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:51:5)'
| |-FieldDecl 0x19558797570 <line:51:5, line:54:12> col:12 invalid ks2 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\e_aes.c:51:5)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:51:5)'
| |-FieldDecl 0x195587975e0 <line:55:5, col:20> col:20 invalid xts 'int'
| `-FieldDecl 0x19558797be8 <line:56:5, line:59:47> line:56:12 referenced stream 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)'
|-TypedefDecl 0x19558797c98 <line:50:1, line:60:3> col:3 referenced EVP_AES_XTS_CTX 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:50:9)':'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:50:9)'
| `-ElaboratedType 0x19558797c40 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:50:9)' sugar
|   `-RecordType 0x195587972e0 'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:50:9)'
|     `-Record 0x19558797248 ''
|-RecordDecl 0x19558797d08 <line:62:9, line:75:1> line:62:9 invalid struct definition
| |-RecordDecl 0x19558797dc0 <line:63:5, line:66:5> line:63:5 invalid union definition
| | |-FieldDecl 0x19558797e98 <line:64:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x19558797f08 <line:65:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x19558797fb8 <line:63:5, line:66:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\e_aes.c:63:5)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:63:5)'
| |-FieldDecl 0x19558798028 <line:67:5, col:9> col:9 referenced key_set 'int'
| |-FieldDecl 0x19558798098 <line:68:5, col:9> col:9 referenced iv_set 'int'
| |-FieldDecl 0x19558798108 <line:69:5, col:9> col:9 referenced tag_set 'int'
| |-FieldDecl 0x19558798178 <line:70:5, col:9> col:9 referenced len_set 'int'
| |-FieldDecl 0x195587981e8 <line:71:5, col:9> col:9 referenced L 'int'
| |-FieldDecl 0x19558798258 <col:5, col:12> col:12 referenced M 'int'
| |-FieldDecl 0x195587982c8 <line:72:5, col:9> col:9 referenced tls_aad_len 'int'
| |-FieldDecl 0x19558798338 <line:73:5, col:20> col:20 invalid ccm 'int'
| `-FieldDecl 0x195587983a8 <line:74:5, col:14> col:14 invalid str 'int'
|-TypedefDecl 0x19558798458 <line:62:1, line:75:3> col:3 referenced EVP_AES_CCM_CTX 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:62:9)':'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:62:9)'
| `-ElaboratedType 0x19558798400 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:62:9)' sugar
|   `-RecordType 0x19558797da0 'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:62:9)'
|     `-Record 0x19558797d08 ''
|-RecordDecl 0x195587984c8 <line:78:9, line:98:1> line:78:9 invalid struct definition
| |-RecordDecl 0x19558798580 <line:79:5, line:82:5> line:79:5 invalid union definition
| | |-FieldDecl 0x19558798658 <line:80:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x195587986c8 <line:81:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x19558798778 <line:79:5, line:82:7> col:7 invalid ksenc 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\e_aes.c:79:5)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:79:5)'
| |-RecordDecl 0x195587987d0 <line:83:5, line:86:5> line:83:5 invalid union definition
| | |-FieldDecl 0x195587988a8 <line:84:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x19558798918 <line:85:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x195587989c8 <line:83:5, line:86:7> col:7 invalid ksdec 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\e_aes.c:83:5)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:83:5)'
| |-FieldDecl 0x19558798a38 <line:87:5, col:9> col:9 referenced key_set 'int'
| |-FieldDecl 0x19558798aa8 <line:88:5, col:9> col:9 referenced iv_set 'int'
| |-FieldDecl 0x19558793ad8 <line:89:5, col:20> col:20 invalid ocb 'int'
| |-FieldDecl 0x19558793b48 <line:90:5, col:20> col:20 referenced iv 'unsigned char *'
| |-FieldDecl 0x19558793c08 <line:91:5, col:25> col:19 referenced tag 'unsigned char [16]'
| |-FieldDecl 0x19558793cc8 <line:92:5, col:30> col:19 referenced data_buf 'unsigned char [16]'
| |-FieldDecl 0x19558793d88 <line:93:5, col:29> col:19 referenced aad_buf 'unsigned char [16]'
| |-FieldDecl 0x19558793df8 <line:94:5, col:9> col:9 referenced data_buf_len 'int'
| |-FieldDecl 0x19558793e68 <line:95:5, col:9> col:9 referenced aad_buf_len 'int'
| |-FieldDecl 0x19558793ed8 <line:96:5, col:9> col:9 referenced ivlen 'int'
| `-FieldDecl 0x19558793f48 <line:97:5, col:9> col:9 referenced taglen 'int'
|-TypedefDecl 0x19558793ff8 <line:78:1, line:98:3> col:3 referenced EVP_AES_OCB_CTX 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:78:9)':'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:78:9)'
| `-ElaboratedType 0x19558793fa0 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:78:9)' sugar
|   `-RecordType 0x19558798560 'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:78:9)'
|     `-Record 0x195587984c8 ''
|-FunctionDecl 0x19558794300 <line:1033:1, line:1136:1> line:1033:12 invalid aes_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x19558794080 <col:25, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x19558794100 <col:46, col:67> col:67 used key 'const unsigned char *'
| |-ParmVarDecl 0x19558794180 <line:1034:25, col:46> col:46 iv 'const unsigned char *'
| |-ParmVarDecl 0x19558794200 <col:50, col:54> col:54 used enc 'int'
| `-CompoundStmt 0x1955879d270 <line:1035:1, line:1136:1>
|   |-DeclStmt 0x195587944f0 <line:1036:5, col:18>
|   | |-VarDecl 0x195587943f0 <col:5, col:9> col:9 used ret 'int'
|   | `-VarDecl 0x19558794470 <col:5, col:14> col:14 used mode 'int'
|   |-DeclStmt 0x19558794738 <line:1037:5, col:51>
|   | `-VarDecl 0x19558794598 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-IfStmt 0x1955879d018 <line:1040:5, line:1128:5> has_else
|   | |-OpaqueValueExpr 0x1955879d000 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1955879cd78 <line:1041:18, line:1081:5>
|   | | `-CompoundStmt 0x1955879cd68 <line:1073:9, line:1080:9>
|   | `-CompoundStmt 0x1955879cff0 <line:1118:5, line:1128:5>
|   |-IfStmt 0x1955879d220 <line:1130:5, line:1133:5>
|   | |-BinaryOperator 0x1955879d0a0 <line:1130:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1955879d088 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1955879d040 <col:9> 'int' lvalue Var 0x195587943f0 'ret' 'int'
|   | | `-IntegerLiteral 0x1955879d060 <col:15> 'int' 0
|   | `-CompoundStmt 0x1955879d208 <col:18, line:1133:5>
|   |   `-ReturnStmt 0x1955879d1f8 <line:1132:9, col:16>
|   |     `-IntegerLiteral 0x1955879d1d0 <col:16> 'int' 0
|   `-ReturnStmt 0x1955879d260 <line:1135:5, col:12>
|     `-IntegerLiteral 0x1955879d238 <col:12> 'int' 1
|-FunctionDecl 0x1955879d580 <line:1138:1, line:1155:1> line:1138:12 invalid aes_cbc_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1955879d2c0 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1955879d340 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1955879d3c0 <line:1139:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1955879d438 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1955879df70 <line:1140:1, line:1155:1>
|   |-DeclStmt 0x1955879d6f0 <line:1141:5, col:51>
|   | `-VarDecl 0x1955879d668 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   `-ReturnStmt 0x1955879df60 <line:1154:5, col:12>
|     `-IntegerLiteral 0x1955879df38 <col:12> 'int' 1
|-FunctionDecl 0x1955879e1d0 <line:1157:1, line:1171:1> line:1157:12 invalid aes_ecb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1955879dfa8 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1955879e028 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1955879e0a8 <line:1158:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1955879e120 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1955879eb00 <line:1159:1, line:1171:1>
|   |-DeclStmt 0x1955879e430 <line:1160:5, col:47>
|   | `-VarDecl 0x1955879e2b8 <col:5, col:12> col:12 used bl 'size_t':'unsigned long long'
|   |-DeclStmt 0x1955879e4c0 <line:1161:5, col:13>
|   | `-VarDecl 0x1955879e458 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x1955879e570 <line:1162:5, col:51>
|   | `-VarDecl 0x1955879e4e8 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-IfStmt 0x1955879e680 <line:1164:5, line:1165:16>
|   | |-BinaryOperator 0x1955879e628 <line:1164:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1955879e5f8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1955879e588 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1955879e120 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1955879e610 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1955879e5c0 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1955879e2b8 'bl' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1955879e670 <line:1165:9, col:16>
|   |   `-IntegerLiteral 0x1955879e648 <col:16> 'int' 1
|   `-ReturnStmt 0x1955879eaf0 <line:1170:5, col:12>
|     `-IntegerLiteral 0x1955879eac8 <col:12> 'int' 1
|-FunctionDecl 0x1955879ed98 <line:1173:1, line:1183:1> line:1173:12 invalid aes_ofb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1955879eb70 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1955879ebf0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1955879ec70 <line:1174:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1955879ece8 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1955879f4e0 <line:1175:1, line:1183:1>
|   |-DeclStmt 0x1955879ef08 <line:1176:5, col:51>
|   | `-VarDecl 0x1955879ee80 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-DeclStmt 0x1955879f0b0 <line:1178:5, col:38>
|   | `-VarDecl 0x1955879ef38 <col:5, col:9> col:9 used num 'int'
|   `-ReturnStmt 0x1955879f4d0 <line:1182:5, col:12>
|     `-IntegerLiteral 0x1955879f4a8 <col:12> 'int' 1
|-FunctionDecl 0x1955879f748 <line:1185:1, line:1196:1> line:1185:12 invalid aes_cfb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1955879f520 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1955879f5a0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1955879f620 <line:1186:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1955879f698 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1955881b100 <line:1187:1, line:1196:1>
|   |-DeclStmt 0x1955879f8b8 <line:1188:5, col:51>
|   | `-VarDecl 0x1955879f830 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-DeclStmt 0x1955879f970 <line:1190:5, col:38>
|   | `-VarDecl 0x1955879f8e8 <col:5, col:9> col:9 used num 'int'
|   `-ReturnStmt 0x1955881b0f0 <line:1195:5, col:12>
|     `-IntegerLiteral 0x1955881b0c8 <col:12> 'int' 1
|-FunctionDecl 0x1955881b368 <line:1198:1, line:1209:1> line:1198:12 invalid aes_cfb8_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1955881b140 <col:28, col:44> col:44 invalid ctx 'int *'
| |-ParmVarDecl 0x1955881b1c0 <col:49, col:64> col:64 used out 'unsigned char *'
| |-ParmVarDecl 0x1955881b240 <line:1199:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x1955881b2b8 <col:53, col:60> col:60 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1955881b8f0 <line:1200:1, line:1209:1>
|   |-DeclStmt 0x1955881b4d8 <line:1201:5, col:51>
|   | `-VarDecl 0x1955881b450 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-DeclStmt 0x1955881b590 <line:1203:5, col:38>
|   | `-VarDecl 0x1955881b508 <col:5, col:9> col:9 used num 'int'
|   `-ReturnStmt 0x1955881b8e0 <line:1208:5, col:12>
|     `-IntegerLiteral 0x1955881b8b8 <col:12> 'int' 1
|-FunctionDecl 0x1955881bb58 <line:1211:1, line:1244:1> line:1211:12 invalid aes_cfb1_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1955881b930 <col:28, col:44> col:44 invalid ctx 'int *'
| |-ParmVarDecl 0x1955881b9b0 <col:49, col:64> col:64 used out 'unsigned char *'
| |-ParmVarDecl 0x1955881ba30 <line:1212:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x1955881baa8 <col:53, col:60> col:60 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1955881a2c0 <line:1213:1, line:1244:1>
|   |-DeclStmt 0x1955881bcc8 <line:1214:5, col:51>
|   | `-VarDecl 0x1955881bc40 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   |-IfStmt 0x1955881f278 <line:1216:5, line:1223:5>
|   | |-OpaqueValueExpr 0x1955881f260 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1955881f240 <line:1216:68, line:1223:5>
|   |   |-DeclStmt 0x1955881be90 <line:1217:9, col:42>
|   |   | `-VarDecl 0x1955881be08 <col:9, col:13> col:13 used num 'int'
|   |   `-ReturnStmt 0x1955881f230 <line:1222:9, col:16>
|   |     `-IntegerLiteral 0x1955881f208 <col:16> 'int' 1
|   |-WhileStmt 0x1955881ff30 <line:1225:5, line:1234:5>
|   | |-BinaryOperator 0x1955881f478 <line:1225:12, line:101:57> 'int' '>='
|   | | |-ImplicitCastExpr 0x1955881f460 <line:1225:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1955881f290 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1955881baa8 'len' 'size_t':'unsigned long long'
|   | | `-ParenExpr 0x1955881f440 <line:101:25, col:57> 'size_t':'unsigned long long'
|   | |   `-BinaryOperator 0x1955881f420 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   | |     |-CStyleCastExpr 0x1955881f2e8 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   | |     | `-IntegerLiteral 0x1955881f2b0 <col:34> 'int' 1
|   | |     `-ParenExpr 0x1955881f400 <col:37, col:56> 'unsigned long long'
|   | |       `-BinaryOperator 0x1955881f3e0 <col:38, col:55> 'unsigned long long' '-'
|   | |         |-BinaryOperator 0x1955881f380 <col:38, col:53> 'unsigned long long' '*'
|   | |         | |-UnaryExprOrTypeTraitExpr 0x1955881f320 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |         | `-ImplicitCastExpr 0x1955881f368 <col:53> 'unsigned long long' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x1955881f340 <col:53> 'int' 8
|   | |         `-ImplicitCastExpr 0x1955881f3c8 <col:55> 'unsigned long long' <IntegralCast>
|   | |           `-IntegerLiteral 0x1955881f3a0 <col:55> 'int' 4
|   | `-CompoundStmt 0x1955881ff00 <line:1225:32, line:1234:5>
|   |   |-DeclStmt 0x1955881f538 <line:1226:9, col:42>
|   |   | `-VarDecl 0x1955881f4b0 <col:9, col:13> col:13 used num 'int'
|   |   |-CompoundAssignOperator 0x1955881fad0 <line:1231:9, line:101:57> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x1955881f900 <line:1231:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1955881baa8 'len' 'size_t':'unsigned long long'
|   |   | `-ParenExpr 0x1955881fab0 <line:101:25, col:57> 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x1955881fa90 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   |   |     |-CStyleCastExpr 0x1955881f958 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     | `-IntegerLiteral 0x1955881f920 <col:34> 'int' 1
|   |   |     `-ParenExpr 0x1955881fa70 <col:37, col:56> 'unsigned long long'
|   |   |       `-BinaryOperator 0x1955881fa50 <col:38, col:55> 'unsigned long long' '-'
|   |   |         |-BinaryOperator 0x1955881f9f0 <col:38, col:53> 'unsigned long long' '*'
|   |   |         | |-UnaryExprOrTypeTraitExpr 0x1955881f990 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   |         | `-ImplicitCastExpr 0x1955881f9d8 <col:53> 'unsigned long long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x1955881f9b0 <col:53> 'int' 8
|   |   |         `-ImplicitCastExpr 0x1955881fa38 <col:55> 'unsigned long long' <IntegralCast>
|   |   |           `-IntegerLiteral 0x1955881fa10 <col:55> 'int' 4
|   |   |-CompoundAssignOperator 0x1955881fcd0 <line:1232:9, line:101:57> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x1955881fb00 <line:1232:9> 'unsigned char *' lvalue ParmVar 0x1955881b9b0 'out' 'unsigned char *'
|   |   | `-ParenExpr 0x1955881fcb0 <line:101:25, col:57> 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x1955881fc90 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   |   |     |-CStyleCastExpr 0x1955881fb58 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     | `-IntegerLiteral 0x1955881fb20 <col:34> 'int' 1
|   |   |     `-ParenExpr 0x1955881fc70 <col:37, col:56> 'unsigned long long'
|   |   |       `-BinaryOperator 0x1955881fc50 <col:38, col:55> 'unsigned long long' '-'
|   |   |         |-BinaryOperator 0x1955881fbf0 <col:38, col:53> 'unsigned long long' '*'
|   |   |         | |-UnaryExprOrTypeTraitExpr 0x1955881fb90 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   |         | `-ImplicitCastExpr 0x1955881fbd8 <col:53> 'unsigned long long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x1955881fbb0 <col:53> 'int' 8
|   |   |         `-ImplicitCastExpr 0x1955881fc38 <col:55> 'unsigned long long' <IntegralCast>
|   |   |           `-IntegerLiteral 0x1955881fc10 <col:55> 'int' 4
|   |   `-CompoundAssignOperator 0x1955881fed0 <line:1233:9, line:101:57> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     |-DeclRefExpr 0x1955881fd00 <line:1233:9> 'const unsigned char *' lvalue ParmVar 0x1955881ba30 'in' 'const unsigned char *'
|   |     `-ParenExpr 0x1955881feb0 <line:101:25, col:57> 'size_t':'unsigned long long'
|   |       `-BinaryOperator 0x1955881fe90 <col:26, col:56> 'size_t':'unsigned long long' '<<'
|   |         |-CStyleCastExpr 0x1955881fd58 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |         | `-IntegerLiteral 0x1955881fd20 <col:34> 'int' 1
|   |         `-ParenExpr 0x1955881fe70 <col:37, col:56> 'unsigned long long'
|   |           `-BinaryOperator 0x1955881fe50 <col:38, col:55> 'unsigned long long' '-'
|   |             |-BinaryOperator 0x1955881fdf0 <col:38, col:53> 'unsigned long long' '*'
|   |             | |-UnaryExprOrTypeTraitExpr 0x1955881fd90 <col:38, col:51> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |             | `-ImplicitCastExpr 0x1955881fdd8 <col:53> 'unsigned long long' <IntegralCast>
|   |             |   `-IntegerLiteral 0x1955881fdb0 <col:53> 'int' 8
|   |             `-ImplicitCastExpr 0x1955881fe38 <col:55> 'unsigned long long' <IntegralCast>
|   |               `-IntegerLiteral 0x1955881fe10 <col:55> 'int' 4
|   |-IfStmt 0x1955881a270 <line:1235:5, line:1241:5>
|   | |-ImplicitCastExpr 0x1955881ff68 <line:1235:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1955881ff48 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1955881baa8 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1955881a258 <col:14, line:1241:5>
|   |   `-DeclStmt 0x1955881a008 <line:1236:9, col:42>
|   |     `-VarDecl 0x19558819f80 <col:9, col:13> col:13 used num 'int'
|   `-ReturnStmt 0x1955881a2b0 <line:1243:5, col:12>
|     `-IntegerLiteral 0x1955881a288 <col:12> 'int' 1
|-FunctionDecl 0x1955881a538 <line:1246:1, line:1264:1> line:1246:12 invalid aes_ctr_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1955881a310 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1955881a390 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x1955881a410 <line:1247:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x1955881a488 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1955881ae68 <line:1248:1, line:1264:1>
|   |-DeclStmt 0x1955881a6b0 <line:1249:5, col:47>
|   | `-VarDecl 0x1955881a628 <col:5, col:18> col:18 used num 'unsigned int'
|   |-DeclStmt 0x1955881a760 <line:1250:5, col:51>
|   | `-VarDecl 0x1955881a6d8 <col:5, col:18> col:18 used dat 'EVP_AES_KEY *'
|   `-ReturnStmt 0x1955881ae58 <line:1263:5, col:12>
|     `-IntegerLiteral 0x1955881ae30 <col:12> 'int' 1
|-VarDecl 0x1955881aea8 <line:955:81, <scratch space>:301:1> col:1 invalid aes_128_cbc 'const int' static
|-FunctionDecl 0x19558820420 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:312:1 invalid EVP_aes_128_cbc 'const int *(void)'
| `-CompoundStmt 0x195588204d8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x19558820500 <line:955:81, <scratch space>:7:1> col:1 invalid aes_128_ecb 'const int' static
|-FunctionDecl 0x195588209c8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:18:1 invalid EVP_aes_128_ecb 'const int *(void)'
| `-CompoundStmt 0x19558820a80 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x19558820aa8 <line:955:81, <scratch space>:24:1> col:1 invalid aes_128_ofb 'const int' static
|-FunctionDecl 0x1955881bfa0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:35:1 invalid EVP_aes_128_ofb 'const int *(void)'
| `-CompoundStmt 0x1955881c058 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1955881c080 <line:955:81, <scratch space>:41:1> col:1 invalid aes_128_cfb 'const int' static
|-FunctionDecl 0x1955881c548 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:52:1 invalid EVP_aes_128_cfb 'const int *(void)'
| `-CompoundStmt 0x1955881c600 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1955881c628 <line:955:81, <scratch space>:58:1> col:1 invalid aes_128_cfb1 'const int' static
|-FunctionDecl 0x1955881caf0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:69:1 invalid EVP_aes_128_cfb1 'const int *(void)'
| `-CompoundStmt 0x1955881cba8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1955881cbd0 <line:955:81, <scratch space>:75:1> col:1 invalid aes_128_cfb8 'const int' static
|-FunctionDecl 0x19558822100 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:86:1 invalid EVP_aes_128_cfb8 'const int *(void)'
| `-CompoundStmt 0x195588221b8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x195588221e0 <line:955:81, <scratch space>:92:1> col:1 invalid aes_128_ctr 'const int' static
|-FunctionDecl 0x195588226a8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:103:1 invalid EVP_aes_128_ctr 'const int *(void)'
| `-CompoundStmt 0x19558822760 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x19558822788 <line:955:81, <scratch space>:109:1> col:1 invalid aes_192_cbc 'const int' static
|-FunctionDecl 0x19558822c50 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:120:1 invalid EVP_aes_192_cbc 'const int *(void)'
| `-CompoundStmt 0x19558822d08 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x19558822d30 <line:955:81, <scratch space>:126:1> col:1 invalid aes_192_ecb 'const int' static
|-FunctionDecl 0x19558824218 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:137:1 invalid EVP_aes_192_ecb 'const int *(void)'
| `-CompoundStmt 0x195588242d0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x195588242f8 <line:955:81, <scratch space>:143:1> col:1 invalid aes_192_ofb 'const int' static
|-FunctionDecl 0x195588247c0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:154:1 invalid EVP_aes_192_ofb 'const int *(void)'
| `-CompoundStmt 0x19558824878 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x195588248a0 <line:955:81, <scratch space>:160:1> col:1 invalid aes_192_cfb 'const int' static
|-FunctionDecl 0x19558824d68 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:171:1 invalid EVP_aes_192_cfb 'const int *(void)'
| `-CompoundStmt 0x19558824e20 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x19558824e48 <line:955:81, <scratch space>:177:1> col:1 invalid aes_192_cfb1 'const int' static
|-FunctionDecl 0x195588212e0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:188:1 invalid EVP_aes_192_cfb1 'const int *(void)'
| `-CompoundStmt 0x19558821398 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x195588213c0 <line:955:81, <scratch space>:194:1> col:1 invalid aes_192_cfb8 'const int' static
|-FunctionDecl 0x19558821888 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:205:1 invalid EVP_aes_192_cfb8 'const int *(void)'
| `-CompoundStmt 0x19558821940 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x19558821968 <line:955:81, <scratch space>:211:1> col:1 invalid aes_192_ctr 'const int' static
|-FunctionDecl 0x19558821e30 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:222:1 invalid EVP_aes_192_ctr 'const int *(void)'
| `-CompoundStmt 0x19558821ee8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x19558821f10 <line:955:81, <scratch space>:228:1> col:1 invalid aes_256_cbc 'const int' static
|-FunctionDecl 0x19558825418 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:239:1 invalid EVP_aes_256_cbc 'const int *(void)'
| `-CompoundStmt 0x195588254d0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x195588254f8 <line:955:81, <scratch space>:245:1> col:1 invalid aes_256_ecb 'const int' static
|-FunctionDecl 0x195588259c0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:256:1 invalid EVP_aes_256_ecb 'const int *(void)'
| `-CompoundStmt 0x19558825a78 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x19558825aa0 <line:955:81, <scratch space>:262:1> col:1 invalid aes_256_ofb 'const int' static
|-FunctionDecl 0x19558825f68 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:273:1 invalid EVP_aes_256_ofb 'const int *(void)'
| `-CompoundStmt 0x19558826020 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1955881dfd8 <line:955:81, <scratch space>:279:1> col:1 invalid aes_256_cfb 'const int' static
|-FunctionDecl 0x1955881e4a0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:290:1 invalid EVP_aes_256_cfb 'const int *(void)'
| `-CompoundStmt 0x1955881e558 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1955881e580 <line:955:81, <scratch space>:296:1> col:1 invalid aes_256_cfb1 'const int' static
|-FunctionDecl 0x1955881ea48 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:307:1 invalid EVP_aes_256_cfb1 'const int *(void)'
| `-CompoundStmt 0x1955881eb00 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1955881eb28 <line:955:81, <scratch space>:2:1> col:1 invalid aes_256_cfb8 'const int' static
|-FunctionDecl 0x1955882a110 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:13:1 invalid EVP_aes_256_cfb8 'const int *(void)'
| `-CompoundStmt 0x1955882a1c8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-VarDecl 0x1955882a1f0 <line:955:81, <scratch space>:19:1> col:1 invalid aes_256_ctr 'const int' static
|-FunctionDecl 0x1955882a6b8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:963:32, line:965:34> <scratch space>:30:1 invalid EVP_aes_256_ctr 'const int *(void)'
| `-CompoundStmt 0x1955882a770 <.//openssl//file_jk/after\crypto\evp\e_aes.c:964:51, line:965:34>
|-FunctionDecl 0x1955882a860 <line:1270:1, line:1279:1> line:1270:12 invalid aes_gcm_cleanup 'int (int *)' static
| |-ParmVarDecl 0x1955882a798 <col:28, col:44> col:44 invalid c 'int *'
| `-CompoundStmt 0x1955882b018 <line:1271:1, line:1279:1>
|   |-DeclStmt 0x1955882aa30 <line:1272:5, col:58>
|   | `-VarDecl 0x1955882a9a8 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-IfStmt 0x1955882ab90 <line:1273:5, line:1274:16>
|   | |-BinaryOperator 0x1955882ab38 <line:1273:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1955882ab08 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1273:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1955882aa48 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882a9a8 'gctx' 'EVP_AES_GCM_CTX *'
|   | | `-ImplicitCastExpr 0x1955882ab20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EVP_AES_GCM_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1955882aae8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1955882aac0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1955882aa80 <col:26> 'int' 0
|   | `-ReturnStmt 0x1955882ab80 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1274:9, col:16>
|   |   `-IntegerLiteral 0x1955882ab58 <col:16> 'int' 0
|   |-IfStmt 0x1955882afc8 <line:1276:5, line:1277:30>
|   | |-OpaqueValueExpr 0x1955882afb0 <<invalid sloc>> '_Bool'
|   | `-CallExpr 0x1955882af70 <col:9, col:30> 'int'
|   |   |-ImplicitCastExpr 0x1955882af58 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1955882aea0 <col:9> 'int ()' Function 0x1955882add8 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x1955882af98 <col:22, col:28> 'unsigned char *' <LValueToRValue>
|   |     `-MemberExpr 0x1955882aef8 <col:22, col:28> 'unsigned char *' lvalue ->iv 0x19558796ef0
|   |       `-ImplicitCastExpr 0x1955882aee0 <col:22> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1955882aec0 <col:22> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882a9a8 'gctx' 'EVP_AES_GCM_CTX *'
|   `-ReturnStmt 0x1955882b008 <line:1278:5, col:12>
|     `-IntegerLiteral 0x1955882afe0 <col:12> 'int' 1
|-FunctionDecl 0x19558828138 <line:1282:1, line:1295:1> line:1282:13 used ctr64_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x19558828060 <col:23, col:38> col:38 used counter 'unsigned char *'
| `-CompoundStmt 0x195588286b0 <line:1283:1, line:1295:1>
|   |-DeclStmt 0x195588282a0 <line:1284:5, col:14>
|   | `-VarDecl 0x19558828210 <col:5, col:13> col:9 used n 'int' cinit
|   |   `-IntegerLiteral 0x19558828278 <col:13> 'int' 8
|   |-DeclStmt 0x19558828338 <line:1285:5, col:20>
|   | `-VarDecl 0x195588282d0 <col:5, col:19> col:19 used c 'unsigned char'
|   `-DoStmt 0x19558828690 <line:1287:5, line:1294:15>
|     |-CompoundStmt 0x19558828620 <line:1287:8, line:1294:5>
|     | |-UnaryOperator 0x19558828388 <line:1288:9, col:11> 'int' prefix '--'
|     | | `-DeclRefExpr 0x19558828350 <col:11> 'int' lvalue Var 0x19558828210 'n' 'int'
|     | |-BinaryOperator 0x19558828480 <line:1289:9, col:22> 'unsigned char' '='
|     | | |-DeclRefExpr 0x195588283a0 <col:9> 'unsigned char' lvalue Var 0x195588282d0 'c' 'unsigned char'
|     | | `-ImplicitCastExpr 0x19558828468 <col:13, col:22> 'unsigned char' <LValueToRValue>
|     | |   `-ArraySubscriptExpr 0x19558828448 <col:13, col:22> 'unsigned char' lvalue
|     | |     |-ImplicitCastExpr 0x19558828418 <col:13> 'unsigned char *' <LValueToRValue>
|     | |     | `-DeclRefExpr 0x195588283d8 <col:13> 'unsigned char *' lvalue ParmVar 0x19558828060 'counter' 'unsigned char *'
|     | |     `-ImplicitCastExpr 0x19558828430 <col:21> 'int' <LValueToRValue>
|     | |       `-DeclRefExpr 0x195588283f8 <col:21> 'int' lvalue Var 0x19558828210 'n' 'int'
|     | |-UnaryOperator 0x195588284c0 <line:1290:9, col:11> 'unsigned char' prefix '++' cannot overflow
|     | | `-DeclRefExpr 0x195588284a0 <col:11> 'unsigned char' lvalue Var 0x195588282d0 'c' 'unsigned char'
|     | |-BinaryOperator 0x195588285a0 <line:1291:9, col:22> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x19558828548 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x19558828518 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x195588284d8 <col:9> 'unsigned char *' lvalue ParmVar 0x19558828060 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x19558828530 <col:17> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x195588284f8 <col:17> 'int' lvalue Var 0x19558828210 'n' 'int'
|     | | `-ImplicitCastExpr 0x19558828588 <col:22> 'unsigned char' <LValueToRValue>
|     | |   `-DeclRefExpr 0x19558828568 <col:22> 'unsigned char' lvalue Var 0x195588282d0 'c' 'unsigned char'
|     | `-IfStmt 0x19558828608 <line:1292:9, line:1293:13>
|     |   |-ImplicitCastExpr 0x195588285e0 <line:1292:13> 'unsigned char' <LValueToRValue>
|     |   | `-DeclRefExpr 0x195588285c0 <col:13> 'unsigned char' lvalue Var 0x195588282d0 'c' 'unsigned char'
|     |   `-ReturnStmt 0x195588285f8 <line:1293:13>
|     `-ImplicitCastExpr 0x19558828678 <line:1294:14> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x19558828658 <col:14> 'int' lvalue Var 0x19558828210 'n' 'int'
|-FunctionDecl 0x19558828970 <line:1297:1, line:1434:1> line:1297:12 invalid aes_gcm_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x195588286f0 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x19558828770 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x195588287f0 <col:54, col:58> col:58 used arg 'int'
| |-ParmVarDecl 0x19558828870 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x1955882e598 <line:1298:1, line:1434:1>
|   |-DeclStmt 0x19558828ae0 <line:1299:5, col:58>
|   | `-VarDecl 0x19558828a58 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   `-SwitchStmt 0x19558828b48 <line:1300:5, line:1433:5>
|     |-ImplicitCastExpr 0x19558828b30 <line:1300:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x19558828af8 <col:13> 'int' lvalue ParmVar 0x19558828770 'type' 'int'
|     `-CompoundStmt 0x1955882e468 <col:19, line:1433:5>
|       |-BinaryOperator 0x19558828c10 <line:1302:9, col:25> 'int' '='
|       | |-MemberExpr 0x19558828bb8 <col:9, col:15> 'int' lvalue ->key_set 0x19558796d78
|       | | `-ImplicitCastExpr 0x19558828ba0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x19558828b68 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x19558828be8 <col:25> 'int' 0
|       |-BinaryOperator 0x19558828cc0 <line:1303:9, col:24> 'int' '='
|       | |-MemberExpr 0x19558828c68 <col:9, col:15> 'int' lvalue ->iv_set 0x19558796de8
|       | | `-ImplicitCastExpr 0x19558828c50 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x19558828c30 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x19558828c98 <col:24> 'int' 0
|       |-BinaryOperator 0x19558828f88 <line:1306:9, col:25> 'int' '='
|       | |-MemberExpr 0x19558828f18 <col:9, col:15> 'int' lvalue ->taglen 0x19558796fd0
|       | | `-ImplicitCastExpr 0x19558828f00 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x19558828ee0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-UnaryOperator 0x19558828f70 <col:24, col:25> 'int' prefix '-'
|       |   `-IntegerLiteral 0x19558828f48 <col:25> 'int' 1
|       |-BinaryOperator 0x19558829038 <line:1307:9, col:24> 'int' '='
|       | |-MemberExpr 0x19558828fe0 <col:9, col:15> 'int' lvalue ->iv_gen 0x19558797040
|       | | `-ImplicitCastExpr 0x19558828fc8 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x19558828fa8 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x19558829010 <col:24> 'int' 0
|       |-BinaryOperator 0x1955882b138 <line:1308:9, col:30> 'int' '='
|       | |-MemberExpr 0x1955882b0c8 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x195587970b0
|       | | `-ImplicitCastExpr 0x1955882b0b0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955882b090 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-UnaryOperator 0x1955882b120 <col:29, col:30> 'int' prefix '-'
|       |   `-IntegerLiteral 0x1955882b0f8 <col:30> 'int' 1
|       |-ReturnStmt 0x1955882b180 <line:1309:9, col:16>
|       | `-IntegerLiteral 0x1955882b158 <col:16> 'int' 1
|       |-IfStmt 0x1955882b260 <line:1312:9, line:1313:20>
|       | |-BinaryOperator 0x1955882b208 <line:1312:13, col:20> 'int' '<='
|       | | |-ImplicitCastExpr 0x1955882b1f0 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1955882b190 <col:13> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       | | `-IntegerLiteral 0x1955882b1c8 <col:20> 'int' 0
|       | `-ReturnStmt 0x1955882b250 <line:1313:13, col:20>
|       |   `-IntegerLiteral 0x1955882b228 <col:20> 'int' 0
|       |-IfStmt 0x1955882b920 <line:1315:9, line:1321:9>
|       | |-OpaqueValueExpr 0x1955882b908 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x1955882b8e0 <line:1315:63, line:1321:9>
|       |   |-IfStmt 0x1955882b510 <line:1316:13, line:1317:38>
|       |   | |-OpaqueValueExpr 0x1955882b4f8 <<invalid sloc>> '_Bool'
|       |   | `-CallExpr 0x1955882b4b8 <col:17, col:38> 'int'
|       |   |   |-ImplicitCastExpr 0x1955882b4a0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|       |   |   | `-DeclRefExpr 0x1955882b418 <col:17> 'int ()' Function 0x1955882add8 'OPENSSL_free' 'int ()'
|       |   |   `-ImplicitCastExpr 0x1955882b4e0 <col:30, col:36> 'unsigned char *' <LValueToRValue>
|       |   |     `-MemberExpr 0x1955882b470 <col:30, col:36> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       |   |       `-ImplicitCastExpr 0x1955882b458 <col:30> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |         `-DeclRefExpr 0x1955882b438 <col:30> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       |   |-BinaryOperator 0x1955882b730 <line:1318:13, col:42> 'unsigned char *' '='
|       |   | |-MemberExpr 0x1955882b560 <col:13, col:19> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       |   | | `-ImplicitCastExpr 0x1955882b548 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1955882b528 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-ImplicitCastExpr 0x1955882b718 <col:24, col:42> 'unsigned char *' <IntegralToPointer>
|       |   |   `-CallExpr 0x1955882b6d8 <col:24, col:42> 'int'
|       |   |     |-ImplicitCastExpr 0x1955882b6c0 <col:24> 'int (*)()' <FunctionToPointerDecay>
|       |   |     | `-DeclRefExpr 0x1955882b680 <col:24> 'int ()' Function 0x1955882b5b8 'OPENSSL_malloc' 'int ()'
|       |   |     `-ImplicitCastExpr 0x1955882b700 <col:39> 'int' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x1955882b6a0 <col:39> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       |   `-IfStmt 0x1955882b8c8 <line:1319:13, line:1320:24>
|       |     |-BinaryOperator 0x1955882b870 <line:1319:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|       |     | |-ImplicitCastExpr 0x1955882b840 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1319:17, col:23> 'unsigned char *' <LValueToRValue>
|       |     | | `-MemberExpr 0x1955882b788 <col:17, col:23> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       |     | |   `-ImplicitCastExpr 0x1955882b770 <col:17> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |     | |     `-DeclRefExpr 0x1955882b750 <col:17> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       |     | `-ImplicitCastExpr 0x1955882b858 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|       |     |   `-ParenExpr 0x1955882b820 <col:17, col:27> 'void *'
|       |     |     `-CStyleCastExpr 0x1955882b7f8 <col:18, col:26> 'void *' <NullToPointer>
|       |     |       `-IntegerLiteral 0x1955882b7b8 <col:26> 'int' 0
|       |     `-ReturnStmt 0x1955882b8b8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1320:17, col:24>
|       |       `-IntegerLiteral 0x1955882b890 <col:24> 'int' 0
|       |-BinaryOperator 0x1955882b9d8 <line:1322:9, col:23> 'int' '='
|       | |-MemberExpr 0x1955882b970 <col:9, col:15> 'int' lvalue ->ivlen 0x19558796f60
|       | | `-ImplicitCastExpr 0x1955882b958 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955882b938 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ImplicitCastExpr 0x1955882b9c0 <col:23> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1955882b9a0 <col:23> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       |-ReturnStmt 0x1955882ba20 <line:1323:9, col:16>
|       | `-IntegerLiteral 0x1955882b9f8 <col:16> 'int' 1
|       |-IfStmt 0x1955882bbc0 <line:1326:9, line:1327:20>
|       | |-OpaqueValueExpr 0x1955882bba8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1955882bb98 <col:13, col:20>
|       |   `-IntegerLiteral 0x1955882bb70 <col:20> 'int' 0
|       |-BinaryOperator 0x1955882bd10 <line:1329:9, col:24> 'int' '='
|       | |-MemberExpr 0x1955882bca8 <col:9, col:15> 'int' lvalue ->taglen 0x19558796fd0
|       | | `-ImplicitCastExpr 0x1955882bc90 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955882bc70 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ImplicitCastExpr 0x1955882bcf8 <col:24> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1955882bcd8 <col:24> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       |-ReturnStmt 0x1955882bd58 <line:1330:9, col:16>
|       | `-IntegerLiteral 0x1955882bd30 <col:16> 'int' 1
|       |-IfStmt 0x1955882bfc0 <line:1333:9, line:1335:20>
|       | |-OpaqueValueExpr 0x1955882bfa8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1955882bf98 <col:13, col:20>
|       |   `-IntegerLiteral 0x1955882bf70 <col:20> 'int' 0
|       |-ReturnStmt 0x1955882c080 <line:1337:9, col:16>
|       | `-IntegerLiteral 0x1955882c058 <col:16> 'int' 1
|       |-IfStmt 0x19558827458 <line:1341:9, line:1345:9>
|       | |-BinaryOperator 0x195588270c8 <line:1341:13, col:21> 'int' '=='
|       | | |-ImplicitCastExpr 0x195588270b0 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x19558827050 <col:13> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       | | `-UnaryOperator 0x19558827098 <col:20, col:21> 'int' prefix '-'
|       | |   `-IntegerLiteral 0x19558827070 <col:21> 'int' 1
|       | `-CompoundStmt 0x19558827430 <col:24, line:1345:9>
|       |   |-CallExpr 0x19558827280 <line:1342:13, col:46> 'void *'
|       |   | |-ImplicitCastExpr 0x19558827268 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       |   | | `-DeclRefExpr 0x195588270e8 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       |   | |-ImplicitCastExpr 0x195588272d0 <col:20, col:26> 'void *' <BitCast>
|       |   | | `-ImplicitCastExpr 0x195588272b8 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|       |   | |   `-MemberExpr 0x19558827140 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       |   | |     `-ImplicitCastExpr 0x19558827128 <col:20> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |       `-DeclRefExpr 0x19558827108 <col:20> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | |-ImplicitCastExpr 0x19558827300 <col:30> 'const void *' <NoOp>
|       |   | | `-ImplicitCastExpr 0x195588272e8 <col:30> 'void *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x19558827170 <col:30> 'void *' lvalue ParmVar 0x19558828870 'ptr' 'void *'
|       |   | `-ImplicitCastExpr 0x19558827330 <col:35, col:41> 'unsigned long long' <IntegralCast>
|       |   |   `-ImplicitCastExpr 0x19558827318 <col:35, col:41> 'int' <LValueToRValue>
|       |   |     `-MemberExpr 0x195588271c8 <col:35, col:41> 'int' lvalue ->ivlen 0x19558796f60
|       |   |       `-ImplicitCastExpr 0x195588271b0 <col:35> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |         `-DeclRefExpr 0x19558827190 <col:35> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       |   |-BinaryOperator 0x195588273d8 <line:1343:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x19558827380 <col:13, col:19> 'int' lvalue ->iv_gen 0x19558797040
|       |   | | `-ImplicitCastExpr 0x19558827368 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x19558827348 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-IntegerLiteral 0x195588273b0 <col:28> 'int' 1
|       |   `-ReturnStmt 0x19558827420 <line:1344:13, col:20>
|       |     `-IntegerLiteral 0x195588273f8 <col:20> 'int' 1
|       |-IfStmt 0x195588276a8 <line:1350:9, line:1351:20>
|       | |-BinaryOperator 0x19558827650 <line:1350:13, col:48> 'int' '||'
|       | | |-ParenExpr 0x195588274f0 <col:13, col:21> 'int'
|       | | | `-BinaryOperator 0x195588274d0 <col:14, col:20> 'int' '<'
|       | | |   |-ImplicitCastExpr 0x195588274b8 <col:14> 'int' <LValueToRValue>
|       | | |   | `-DeclRefExpr 0x19558827470 <col:14> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       | | |   `-IntegerLiteral 0x19558827490 <col:20> 'int' 4
|       | | `-BinaryOperator 0x19558827630 <col:26, col:48> 'int' '<'
|       | |   |-ParenExpr 0x195588275e8 <col:26, col:44> 'int'
|       | |   | `-BinaryOperator 0x195588275c8 <col:27, col:41> 'int' '-'
|       | |   |   |-ImplicitCastExpr 0x19558827598 <col:27, col:33> 'int' <LValueToRValue>
|       | |   |   | `-MemberExpr 0x19558827548 <col:27, col:33> 'int' lvalue ->ivlen 0x19558796f60
|       | |   |   |   `-ImplicitCastExpr 0x19558827530 <col:27> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |   |     `-DeclRefExpr 0x19558827510 <col:27> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   |   `-ImplicitCastExpr 0x195588275b0 <col:41> 'int' <LValueToRValue>
|       | |   |     `-DeclRefExpr 0x19558827578 <col:41> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       | |   `-IntegerLiteral 0x19558827608 <col:48> 'int' 8
|       | `-ReturnStmt 0x19558827698 <line:1351:13, col:20>
|       |   `-IntegerLiteral 0x19558827670 <col:20> 'int' 0
|       |-IfStmt 0x195588278e8 <line:1352:9, line:1353:38>
|       | |-ImplicitCastExpr 0x195588276e0 <line:1352:13> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x195588276c0 <col:13> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       | `-CallExpr 0x19558827820 <line:1353:13, col:38> 'void *'
|       |   |-ImplicitCastExpr 0x19558827808 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x195588276f8 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       |   |-ImplicitCastExpr 0x19558827870 <col:20, col:26> 'void *' <BitCast>
|       |   | `-ImplicitCastExpr 0x19558827858 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|       |   |   `-MemberExpr 0x19558827750 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       |   |     `-ImplicitCastExpr 0x19558827738 <col:20> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x19558827718 <col:20> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       |   |-ImplicitCastExpr 0x195588278a0 <col:30> 'const void *' <NoOp>
|       |   | `-ImplicitCastExpr 0x19558827888 <col:30> 'void *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x19558827780 <col:30> 'void *' lvalue ParmVar 0x19558828870 'ptr' 'void *'
|       |   `-ImplicitCastExpr 0x195588278d0 <col:35> 'unsigned long long' <IntegralCast>
|       |     `-ImplicitCastExpr 0x195588278b8 <col:35> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x195588277a0 <col:35> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       |-IfStmt 0x19558827cc0 <line:1354:9, line:1356:20>
|       | |-OpaqueValueExpr 0x19558827ca8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x19558827c98 <col:13, col:20>
|       |   `-IntegerLiteral 0x19558827c70 <col:20> 'int' 0
|       |-BinaryOperator 0x19558827d68 <line:1357:9, col:24> 'int' '='
|       | |-MemberExpr 0x19558827d10 <col:9, col:15> 'int' lvalue ->iv_gen 0x19558797040
|       | | `-ImplicitCastExpr 0x19558827cf8 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x19558827cd8 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x19558827d40 <col:24> 'int' 1
|       |-ReturnStmt 0x19558827db0 <line:1358:9, col:16>
|       | `-IntegerLiteral 0x19558827d88 <col:16> 'int' 1
|       |-IfStmt 0x19558827fa8 <line:1361:9, line:1362:20>
|       | |-BinaryOperator 0x19558827f50 <line:1361:13, col:51> 'int' '||'
|       | | |-BinaryOperator 0x19558827e68 <col:13, col:29> 'int' '=='
|       | | | |-ImplicitCastExpr 0x19558827e50 <col:13, col:19> 'int' <LValueToRValue>
|       | | | | `-MemberExpr 0x19558827df8 <col:13, col:19> 'int' lvalue ->iv_gen 0x19558797040
|       | | | |   `-ImplicitCastExpr 0x19558827de0 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | | | |     `-DeclRefExpr 0x19558827dc0 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | | | `-IntegerLiteral 0x19558827e28 <col:29> 'int' 0
|       | | `-BinaryOperator 0x19558827f30 <col:34, col:51> 'int' '=='
|       | |   |-ImplicitCastExpr 0x19558827f18 <col:34, col:40> 'int' <LValueToRValue>
|       | |   | `-MemberExpr 0x19558827ec0 <col:34, col:40> 'int' lvalue ->key_set 0x19558796d78
|       | |   |   `-ImplicitCastExpr 0x19558827ea8 <col:34> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |     `-DeclRefExpr 0x19558827e88 <col:34> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   `-IntegerLiteral 0x19558827ef0 <col:51> 'int' 0
|       | `-ReturnStmt 0x19558827f98 <line:1362:13, col:20>
|       |   `-IntegerLiteral 0x19558827f70 <col:20> 'int' 0
|       |-IfStmt 0x1955882d4d8 <line:1364:9, line:1365:25>
|       | |-BinaryOperator 0x1955882d3f8 <line:1364:13, col:37> 'int' '||'
|       | | |-BinaryOperator 0x1955882d300 <col:13, col:20> 'int' '<='
|       | | | |-ImplicitCastExpr 0x1955882d2e8 <col:13> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x1955882d2a0 <col:13> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       | | | `-IntegerLiteral 0x1955882d2c0 <col:20> 'int' 0
|       | | `-BinaryOperator 0x1955882d3d8 <col:25, col:37> 'int' '>'
|       | |   |-ImplicitCastExpr 0x1955882d3a8 <col:25> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1955882d320 <col:25> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       | |   `-ImplicitCastExpr 0x1955882d3c0 <col:31, col:37> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x1955882d378 <col:31, col:37> 'int' lvalue ->ivlen 0x19558796f60
|       | |       `-ImplicitCastExpr 0x1955882d360 <col:31> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |         `-DeclRefExpr 0x1955882d340 <col:31> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-BinaryOperator 0x1955882d4b8 <line:1365:13, col:25> 'int' '='
|       |   |-DeclRefExpr 0x1955882d418 <col:13> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       |   `-ImplicitCastExpr 0x1955882d4a0 <col:19, col:25> 'int' <LValueToRValue>
|       |     `-MemberExpr 0x1955882d470 <col:19, col:25> 'int' lvalue ->ivlen 0x19558796f60
|       |       `-ImplicitCastExpr 0x1955882d458 <col:19> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |         `-DeclRefExpr 0x1955882d438 <col:19> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       |-CallExpr 0x1955882d710 <line:1366:9, col:54> 'void *'
|       | |-ImplicitCastExpr 0x1955882d6f8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1955882d4f0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x1955882d748 <col:16> 'void *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1955882d510 <col:16> 'void *' lvalue ParmVar 0x19558828870 'ptr' 'void *'
|       | |-ImplicitCastExpr 0x1955882d760 <col:21, col:46> 'const void *' <BitCast>
|       | | `-BinaryOperator 0x1955882d688 <col:21, col:46> 'unsigned char *' '-'
|       | |   |-BinaryOperator 0x1955882d630 <col:21, col:38> 'unsigned char *' '+'
|       | |   | |-ImplicitCastExpr 0x1955882d600 <col:21, col:27> 'unsigned char *' <LValueToRValue>
|       | |   | | `-MemberExpr 0x1955882d568 <col:21, col:27> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       | |   | |   `-ImplicitCastExpr 0x1955882d550 <col:21> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | |     `-DeclRefExpr 0x1955882d530 <col:21> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   | `-ImplicitCastExpr 0x1955882d618 <col:32, col:38> 'int' <LValueToRValue>
|       | |   |   `-MemberExpr 0x1955882d5d0 <col:32, col:38> 'int' lvalue ->ivlen 0x19558796f60
|       | |   |     `-ImplicitCastExpr 0x1955882d5b8 <col:32> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |       `-DeclRefExpr 0x1955882d598 <col:32> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   `-ImplicitCastExpr 0x1955882d670 <col:46> 'int' <LValueToRValue>
|       | |     `-DeclRefExpr 0x1955882d650 <col:46> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       | `-ImplicitCastExpr 0x1955882d790 <col:51> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x1955882d778 <col:51> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1955882d6a8 <col:51> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       |-CallExpr 0x1955882d970 <line:1371:9, col:45> 'void'
|       | |-ImplicitCastExpr 0x1955882d958 <col:9> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1955882d7a8 <col:9> 'void (unsigned char *)' Function 0x19558828138 'ctr64_inc' 'void (unsigned char *)'
|       | `-BinaryOperator 0x1955882d910 <col:19, col:44> 'unsigned char *' '-'
|       |   |-BinaryOperator 0x1955882d8c8 <col:19, col:36> 'unsigned char *' '+'
|       |   | |-ImplicitCastExpr 0x1955882d898 <col:19, col:25> 'unsigned char *' <LValueToRValue>
|       |   | | `-MemberExpr 0x1955882d800 <col:19, col:25> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       |   | |   `-ImplicitCastExpr 0x1955882d7e8 <col:19> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |     `-DeclRefExpr 0x1955882d7c8 <col:19> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-ImplicitCastExpr 0x1955882d8b0 <col:30, col:36> 'int' <LValueToRValue>
|       |   |   `-MemberExpr 0x1955882d868 <col:30, col:36> 'int' lvalue ->ivlen 0x19558796f60
|       |   |     `-ImplicitCastExpr 0x1955882d850 <col:30> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x1955882d830 <col:30> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       |   `-IntegerLiteral 0x1955882d8e8 <col:44> 'int' 8
|       |-BinaryOperator 0x1955882da28 <line:1372:9, col:24> 'int' '='
|       | |-MemberExpr 0x1955882d9d0 <col:9, col:15> 'int' lvalue ->iv_set 0x19558796de8
|       | | `-ImplicitCastExpr 0x1955882d9b8 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955882d998 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x1955882da00 <col:24> 'int' 1
|       |-ReturnStmt 0x1955882da70 <line:1373:9, col:16>
|       | `-IntegerLiteral 0x1955882da48 <col:16> 'int' 1
|       |-IfStmt 0x1955882dca0 <line:1376:9, line:1378:20>
|       | |-OpaqueValueExpr 0x1955882dc88 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1955882dc78 <col:13, col:20>
|       |   `-IntegerLiteral 0x1955882dc50 <col:20> 'int' 0
|       |-CallExpr 0x1955882ded8 <line:1379:9, col:54> 'void *'
|       | |-ImplicitCastExpr 0x1955882dec0 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1955882dcb8 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x1955882df10 <col:16, col:41> 'void *' <BitCast>
|       | | `-BinaryOperator 0x1955882de30 <col:16, col:41> 'unsigned char *' '-'
|       | |   |-BinaryOperator 0x1955882ddd8 <col:16, col:33> 'unsigned char *' '+'
|       | |   | |-ImplicitCastExpr 0x1955882dda8 <col:16, col:22> 'unsigned char *' <LValueToRValue>
|       | |   | | `-MemberExpr 0x1955882dd10 <col:16, col:22> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       | |   | |   `-ImplicitCastExpr 0x1955882dcf8 <col:16> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | |     `-DeclRefExpr 0x1955882dcd8 <col:16> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   | `-ImplicitCastExpr 0x1955882ddc0 <col:27, col:33> 'int' <LValueToRValue>
|       | |   |   `-MemberExpr 0x1955882dd78 <col:27, col:33> 'int' lvalue ->ivlen 0x19558796f60
|       | |   |     `-ImplicitCastExpr 0x1955882dd60 <col:27> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |       `-DeclRefExpr 0x1955882dd40 <col:27> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   `-ImplicitCastExpr 0x1955882de18 <col:41> 'int' <LValueToRValue>
|       | |     `-DeclRefExpr 0x1955882ddf8 <col:41> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       | |-ImplicitCastExpr 0x1955882df40 <col:46> 'const void *' <NoOp>
|       | | `-ImplicitCastExpr 0x1955882df28 <col:46> 'void *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955882de50 <col:46> 'void *' lvalue ParmVar 0x19558828870 'ptr' 'void *'
|       | `-ImplicitCastExpr 0x1955882df70 <col:51> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x1955882df58 <col:51> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1955882de70 <col:51> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       |-BinaryOperator 0x195588260d0 <line:1381:9, col:24> 'int' '='
|       | |-MemberExpr 0x19558826078 <col:9, col:15> 'int' lvalue ->iv_set 0x19558796de8
|       | | `-ImplicitCastExpr 0x19558826060 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x19558826040 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x195588260a8 <col:24> 'int' 1
|       |-ReturnStmt 0x19558826118 <line:1382:9, col:16>
|       | `-IntegerLiteral 0x195588260f0 <col:16> 'int' 1
|       |-IfStmt 0x19558826198 <line:1386:9, line:1387:20>
|       | |-OpaqueValueExpr 0x19558826180 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x19558826170 <col:13, col:20>
|       |   `-IntegerLiteral 0x19558826148 <col:20> 'int' 0
|       |-BinaryOperator 0x195588262d0 <line:1389:9, col:29> 'int' '='
|       | |-MemberExpr 0x19558826268 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x195587970b0
|       | | `-ImplicitCastExpr 0x19558826250 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x19558826230 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ImplicitCastExpr 0x195588262b8 <col:29> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x19558826298 <col:29> 'int' lvalue ParmVar 0x195588287f0 'arg' 'int'
|       |-CompoundStmt 0x19558826918 <line:1390:9, line:1406:9>
|       | |-DeclStmt 0x195588264d8 <line:1391:13, line:1393:57>
|       | | `-VarDecl 0x19558826308 <line:1391:13, col:26> col:26 used len 'unsigned int'
|       | |-IfStmt 0x19558826578 <line:1395:13, line:1396:24>
|       | | |-OpaqueValueExpr 0x19558826560 <<invalid sloc>> '_Bool'
|       | | `-ReturnStmt 0x19558826550 <col:17, col:24>
|       | |   `-IntegerLiteral 0x19558826528 <col:24> 'int' 0
|       | `-IfStmt 0x195588266a8 <line:1399:13, line:1403:13>
|       |   |-OpaqueValueExpr 0x19558826690 <<invalid sloc>> '_Bool'
|       |   `-CompoundStmt 0x19558826678 <line:1399:48, line:1403:13>
|       |     `-IfStmt 0x19558826640 <line:1400:17, line:1401:28>
|       |       |-OpaqueValueExpr 0x19558826628 <<invalid sloc>> '_Bool'
|       |       `-ReturnStmt 0x19558826618 <col:21, col:28>
|       |         `-IntegerLiteral 0x195588265f0 <col:28> 'int' 0
|       |-CompoundStmt 0x1955882e3c8 <line:1411:9, line:1428:9>
|       | |-DeclStmt 0x195588269f8 <line:1413:13, col:72>
|       | | `-VarDecl 0x19558826970 <col:13, col:30> col:30 used gctx_out 'EVP_AES_GCM_CTX *'
|       | |-IfStmt 0x19558826bd8 <line:1414:13, line:1418:13>
|       | | |-OpaqueValueExpr 0x19558826bc0 <<invalid sloc>> '_Bool'
|       | | `-CompoundStmt 0x19558826ba8 <line:1414:32, line:1418:13>
|       | |   `-IfStmt 0x19558826b08 <line:1415:17, line:1416:28>
|       | |     |-OpaqueValueExpr 0x19558826af0 <<invalid sloc>> '_Bool'
|       | |     `-ReturnStmt 0x19558826ae0 <col:21, col:28>
|       | |       `-IntegerLiteral 0x19558826ab8 <col:28> 'int' 0
|       | |-IfStmt 0x1955882e368 <line:1419:13, line:1426:13> has_else
|       | | |-OpaqueValueExpr 0x1955882e350 <<invalid sloc>> '_Bool'
|       | | |-NullStmt 0x1955882e348 <line:1420:17>
|       | | `-CompoundStmt 0x1955882e320 <line:1421:18, line:1426:13>
|       | |   |-BinaryOperator 0x19558826e60 <line:1422:17, col:58> 'unsigned char *' '='
|       | |   | |-MemberExpr 0x19558826d38 <col:17, col:27> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       | |   | | `-ImplicitCastExpr 0x19558826d20 <col:17> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | |   `-DeclRefExpr 0x19558826d00 <col:17> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558826970 'gctx_out' 'EVP_AES_GCM_CTX *'
|       | |   | `-ImplicitCastExpr 0x19558826e48 <col:32, col:58> 'unsigned char *' <IntegralToPointer>
|       | |   |   `-CallExpr 0x19558826e08 <col:32, col:58> 'int'
|       | |   |     |-ImplicitCastExpr 0x19558826df0 <col:32> 'int (*)()' <FunctionToPointerDecay>
|       | |   |     | `-DeclRefExpr 0x19558826d68 <col:32> 'int ()' Function 0x1955882b5b8 'OPENSSL_malloc' 'int ()'
|       | |   |     `-ImplicitCastExpr 0x19558826e30 <col:47, col:53> 'int' <LValueToRValue>
|       | |   |       `-MemberExpr 0x19558826dc0 <col:47, col:53> 'int' lvalue ->ivlen 0x19558796f60
|       | |   |         `-ImplicitCastExpr 0x19558826da8 <col:47> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   |           `-DeclRefExpr 0x19558826d88 <col:47> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | |   |-IfStmt 0x19558826ff8 <line:1423:17, line:1424:28>
|       | |   | |-BinaryOperator 0x19558826fa0 <line:1423:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|       | |   | | |-ImplicitCastExpr 0x19558826f70 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1423:21, col:31> 'unsigned char *' <LValueToRValue>
|       | |   | | | `-MemberExpr 0x19558826eb8 <col:21, col:31> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       | |   | | |   `-ImplicitCastExpr 0x19558826ea0 <col:21> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   | | |     `-DeclRefExpr 0x19558826e80 <col:21> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558826970 'gctx_out' 'EVP_AES_GCM_CTX *'
|       | |   | | `-ImplicitCastExpr 0x19558826f88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|       | |   | |   `-ParenExpr 0x19558826f50 <col:17, col:27> 'void *'
|       | |   | |     `-CStyleCastExpr 0x19558826f28 <col:18, col:26> 'void *' <NullToPointer>
|       | |   | |       `-IntegerLiteral 0x19558826ee8 <col:26> 'int' 0
|       | |   | `-ReturnStmt 0x19558826fe8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1424:21, col:28>
|       | |   |   `-IntegerLiteral 0x19558826fc0 <col:28> 'int' 0
|       | |   `-CallExpr 0x1955882e258 <line:1425:17, col:59> 'void *'
|       | |     |-ImplicitCastExpr 0x1955882e240 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | |     | `-DeclRefExpr 0x19558827010 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |     |-ImplicitCastExpr 0x1955882e2a8 <col:24, col:34> 'void *' <BitCast>
|       | |     | `-ImplicitCastExpr 0x1955882e290 <col:24, col:34> 'unsigned char *' <LValueToRValue>
|       | |     |   `-MemberExpr 0x1955882e0f8 <col:24, col:34> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       | |     |     `-ImplicitCastExpr 0x1955882e0e0 <col:24> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |     |       `-DeclRefExpr 0x1955882e0c0 <col:24> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558826970 'gctx_out' 'EVP_AES_GCM_CTX *'
|       | |     |-ImplicitCastExpr 0x1955882e2d8 <col:38, col:44> 'const void *' <BitCast>
|       | |     | `-ImplicitCastExpr 0x1955882e2c0 <col:38, col:44> 'unsigned char *' <LValueToRValue>
|       | |     |   `-MemberExpr 0x1955882e160 <col:38, col:44> 'unsigned char *' lvalue ->iv 0x19558796ef0
|       | |     |     `-ImplicitCastExpr 0x1955882e148 <col:38> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |     |       `-DeclRefExpr 0x1955882e128 <col:38> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | |     `-ImplicitCastExpr 0x1955882e308 <col:48, col:54> 'unsigned long long' <IntegralCast>
|       | |       `-ImplicitCastExpr 0x1955882e2f0 <col:48, col:54> 'int' <LValueToRValue>
|       | |         `-MemberExpr 0x1955882e1c8 <col:48, col:54> 'int' lvalue ->ivlen 0x19558796f60
|       | |           `-ImplicitCastExpr 0x1955882e1b0 <col:48> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |             `-DeclRefExpr 0x1955882e190 <col:48> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558828a58 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-ReturnStmt 0x1955882e3b8 <line:1427:13, col:20>
|       |   `-IntegerLiteral 0x1955882e390 <col:20> 'int' 1
|       `-DefaultStmt 0x1955882e448 <line:1430:5, line:1431:17>
|         `-ReturnStmt 0x1955882e438 <col:9, col:17>
|           `-UnaryOperator 0x1955882e420 <col:16, col:17> 'int' prefix '-'
|             `-IntegerLiteral 0x1955882e3f8 <col:17> 'int' 1
|-FunctionDecl 0x1955882e800 <line:1436:1, line:1511:1> line:1436:12 invalid aes_gcm_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x1955882e5d0 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x1955882e650 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x1955882e6d0 <line:1437:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x1955882e750 <col:54, col:58> col:58 enc 'int'
| `-CompoundStmt 0x19558835a68 <line:1438:1, line:1511:1>
|   |-DeclStmt 0x1955882e970 <line:1439:5, col:60>
|   | `-VarDecl 0x1955882e8e8 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-IfStmt 0x1955882eab0 <line:1440:5, line:1441:16>
|   | |-BinaryOperator 0x1955882ea58 <line:1440:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x1955882e9d8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1955882e9c0 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1955882e988 <col:10> 'const unsigned char *' lvalue ParmVar 0x1955882e6d0 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x1955882ea40 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1955882ea28 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1955882e9f0 <col:17> 'const unsigned char *' lvalue ParmVar 0x1955882e650 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x1955882eaa0 <line:1441:9, col:16>
|   |   `-IntegerLiteral 0x1955882ea78 <col:16> 'int' 1
|   |-IfStmt 0x19558835a08 <line:1442:5, line:1509:5> has_else
|   | |-ImplicitCastExpr 0x1955882eae8 <line:1442:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1955882eac8 <col:9> 'const unsigned char *' lvalue ParmVar 0x1955882e650 'key' 'const unsigned char *'
|   | |-CompoundStmt 0x19558835488 <col:14, line:1501:5>
|   | | |-DoStmt 0x1955882eeb8 <line:1443:9, line:1489:19>
|   | | | |-CompoundStmt 0x1955882ee78 <line:1443:12, line:1489:9>
|   | | | | `-CStyleCastExpr 0x1955882eb38 <line:1478:17, col:23> 'void' <ToVoid>
|   | | | |   `-IntegerLiteral 0x1955882eb00 <col:23> 'int' 0
|   | | | `-IntegerLiteral 0x1955882ee90 <line:1489:18> 'int' 0
|   | | |-IfStmt 0x195588351c8 <line:1494:9, line:1495:24>
|   | | | |-BinaryOperator 0x1955882f050 <line:1494:13, col:33> 'int' '&&'
|   | | | | |-BinaryOperator 0x1955882efb0 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x1955882ef80 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1494:13> 'const unsigned char *' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1955882eed8 <col:13> 'const unsigned char *' lvalue ParmVar 0x1955882e6d0 'iv' 'const unsigned char *'
|   | | | | | `-ImplicitCastExpr 0x1955882ef98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|   | | | | |   `-ParenExpr 0x1955882ef60 <col:17, col:27> 'void *'
|   | | | | |     `-CStyleCastExpr 0x1955882ef38 <col:18, col:26> 'void *' <NullToPointer>
|   | | | | |       `-IntegerLiteral 0x1955882eef8 <col:26> 'int' 0
|   | | | | `-ImplicitCastExpr 0x1955882f038 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1494:27, col:33> 'int' <LValueToRValue>
|   | | | |   `-MemberExpr 0x1955882f008 <col:27, col:33> 'int' lvalue ->iv_set 0x19558796de8
|   | | | |     `-ImplicitCastExpr 0x1955882eff0 <col:27> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1955882efd0 <col:27> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882e8e8 'gctx' 'EVP_AES_GCM_CTX *'
|   | | | `-BinaryOperator 0x195588351a8 <line:1495:13, col:24> 'const unsigned char *' '='
|   | | |   |-DeclRefExpr 0x1955882f070 <col:13> 'const unsigned char *' lvalue ParmVar 0x1955882e6d0 'iv' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x19558835190 <col:18, col:24> 'const unsigned char *' <NoOp>
|   | | |     `-ImplicitCastExpr 0x19558835178 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|   | | |       `-MemberExpr 0x19558835148 <col:18, col:24> 'unsigned char *' lvalue ->iv 0x19558796ef0
|   | | |         `-ImplicitCastExpr 0x19558835130 <col:18> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x1955882f090 <col:18> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882e8e8 'gctx' 'EVP_AES_GCM_CTX *'
|   | | |-IfStmt 0x195588353c0 <line:1496:9, line:1499:9>
|   | | | |-ImplicitCastExpr 0x19558835200 <line:1496:13> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x195588351e0 <col:13> 'const unsigned char *' lvalue ParmVar 0x1955882e6d0 'iv' 'const unsigned char *'
|   | | | `-CompoundStmt 0x195588353a8 <col:17, line:1499:9>
|   | | |   `-BinaryOperator 0x19558835388 <line:1498:13, col:28> 'int' '='
|   | | |     |-MemberExpr 0x19558835330 <col:13, col:19> 'int' lvalue ->iv_set 0x19558796de8
|   | | |     | `-ImplicitCastExpr 0x19558835318 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x195588352f8 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882e8e8 'gctx' 'EVP_AES_GCM_CTX *'
|   | | |     `-IntegerLiteral 0x19558835360 <col:28> 'int' 1
|   | | `-BinaryOperator 0x19558835468 <line:1500:9, col:25> 'int' '='
|   | |   |-MemberExpr 0x19558835410 <col:9, col:15> 'int' lvalue ->key_set 0x19558796d78
|   | |   | `-ImplicitCastExpr 0x195588353f8 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x195588353d8 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882e8e8 'gctx' 'EVP_AES_GCM_CTX *'
|   | |   `-IntegerLiteral 0x19558835440 <col:25> 'int' 1
|   | `-CompoundStmt 0x195588359e0 <line:1501:12, line:1509:5>
|   |   |-IfStmt 0x19558835858 <line:1503:9, line:1506:45> has_else
|   |   | |-ImplicitCastExpr 0x19558835520 <line:1503:13, col:19> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x195588354f0 <col:13, col:19> 'int' lvalue ->key_set 0x19558796d78
|   |   | |   `-ImplicitCastExpr 0x195588354d8 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x195588354b8 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882e8e8 'gctx' 'EVP_AES_GCM_CTX *'
|   |   | |-NullStmt 0x19558835850 <line:1504:13>
|   |   | `-CallExpr 0x19558835788 <line:1506:13, col:45> 'void *'
|   |   |   |-ImplicitCastExpr 0x19558835770 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x19558835618 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   |-ImplicitCastExpr 0x195588357d8 <col:20, col:26> 'void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x195588357c0 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x19558835670 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x19558796ef0
|   |   |   |     `-ImplicitCastExpr 0x19558835658 <col:20> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x19558835638 <col:20> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882e8e8 'gctx' 'EVP_AES_GCM_CTX *'
|   |   |   |-ImplicitCastExpr 0x19558835808 <col:30> 'const void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x195588357f0 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x195588356a0 <col:30> 'const unsigned char *' lvalue ParmVar 0x1955882e6d0 'iv' 'const unsigned char *'
|   |   |   `-ImplicitCastExpr 0x19558835838 <col:34, col:40> 'unsigned long long' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x19558835820 <col:34, col:40> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x195588356f8 <col:34, col:40> 'int' lvalue ->ivlen 0x19558796f60
|   |   |         `-ImplicitCastExpr 0x195588356e0 <col:34> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x195588356c0 <col:34> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882e8e8 'gctx' 'EVP_AES_GCM_CTX *'
|   |   |-BinaryOperator 0x19558835910 <line:1507:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x195588358b8 <col:9, col:15> 'int' lvalue ->iv_set 0x19558796de8
|   |   | | `-ImplicitCastExpr 0x195588358a0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x19558835880 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882e8e8 'gctx' 'EVP_AES_GCM_CTX *'
|   |   | `-IntegerLiteral 0x195588358e8 <col:24> 'int' 1
|   |   `-BinaryOperator 0x195588359c0 <line:1508:9, col:24> 'int' '='
|   |     |-MemberExpr 0x19558835968 <col:9, col:15> 'int' lvalue ->iv_gen 0x19558797040
|   |     | `-ImplicitCastExpr 0x19558835950 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x19558835930 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x1955882e8e8 'gctx' 'EVP_AES_GCM_CTX *'
|   |     `-IntegerLiteral 0x19558835998 <col:24> 'int' 0
|   `-ReturnStmt 0x19558835a58 <line:1510:5, col:12>
|     `-IntegerLiteral 0x19558835a30 <col:12> 'int' 1
|-FunctionDecl 0x19558835cd8 <line:1520:1, line:1639:1> line:1520:12 invalid aes_gcm_tls_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x19558835ab0 <col:31, col:47> col:47 invalid ctx 'int *'
| |-ParmVarDecl 0x19558835b30 <col:52, col:67> col:67 used out 'unsigned char *'
| |-ParmVarDecl 0x19558835bb0 <line:1521:31, col:52> col:52 used in 'const unsigned char *'
| |-ParmVarDecl 0x19558835c28 <col:56, col:63> col:63 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x19558832100 <line:1522:1, line:1639:1>
|   |-DeclStmt 0x19558835e48 <line:1523:5, col:60>
|   | `-VarDecl 0x19558835dc0 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-DeclStmt 0x19558835f20 <line:1524:5, col:16>
|   | `-VarDecl 0x19558835e78 <col:5, col:15> col:9 used rv 'int' cinit
|   |   `-UnaryOperator 0x19558835f08 <col:14, col:15> 'int' prefix '-'
|   |     `-IntegerLiteral 0x19558835ee0 <col:15> 'int' 1
|   |-IfStmt 0x195588360b0 <line:1526:5, line:1528:17>
|   | |-OpaqueValueExpr 0x19558836098 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x19558836088 <col:9, col:17>
|   |   `-UnaryOperator 0x19558836070 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x19558836048 <col:17> 'int' 1
|   |-IfStmt 0x195588302b0 <line:1533:5, line:1536:14>
|   | |-OpaqueValueExpr 0x19558830298 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x19558830280 <col:9, col:14> 'err' 0x19558830230
|   |-IfStmt 0x195588304e0 <line:1538:5, line:1540:14>
|   | |-OpaqueValueExpr 0x195588304c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x195588304b0 <col:9, col:14> 'err' 0x19558830230
|   |-IfStmt 0x19558831eb8 <line:1545:5, line:1633:5> has_else
|   | |-OpaqueValueExpr 0x19558831ea0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x19558831110 <line:1545:41, line:1586:5>
|   | | |-IfStmt 0x19558830e90 <line:1547:9, line:1581:9> has_else
|   | | | |-OpaqueValueExpr 0x19558830e78 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x19558830a10 <line:1547:24, line:1565:9>
|   | | | | |-DeclStmt 0x19558830668 <line:1548:13, col:28>
|   | | | | | `-VarDecl 0x195588305c0 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   | | | | |   `-ImplicitCastExpr 0x19558830650 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   | | | | |     `-IntegerLiteral 0x19558830628 <col:27> 'int' 0
|   | | | | `-IfStmt 0x195588309f8 <line:1560:13, line:1564:22>
|   | | | |   |-OpaqueValueExpr 0x195588309e0 <<invalid sloc>> '_Bool'
|   | | | |   `-GotoStmt 0x195588309c8 <col:17, col:22> 'err' 0x19558830230
|   | | | `-CompoundStmt 0x19558830e58 <line:1565:16, line:1581:9>
|   | | |   |-DeclStmt 0x19558830ae8 <line:1566:13, col:28>
|   | | |   | `-VarDecl 0x19558830a40 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   | | |   |   `-ImplicitCastExpr 0x19558830ad0 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   |     `-IntegerLiteral 0x19558830aa8 <col:27> 'int' 0
|   | | |   `-IfStmt 0x19558830e40 <line:1578:13, line:1580:22>
|   | | |     |-OpaqueValueExpr 0x19558830e28 <<invalid sloc>> '_Bool'
|   | | |     `-GotoStmt 0x19558830e10 <col:17, col:22> 'err' 0x19558830230
|   | | `-CompoundAssignOperator 0x19558830f10 <line:1582:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |   |-DeclRefExpr 0x19558830eb8 <col:9> 'unsigned char *' lvalue ParmVar 0x19558835b30 'out' 'unsigned char *'
|   | |   `-ImplicitCastExpr 0x19558830ef8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x19558830ed8 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x19558835c28 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x19558831e78 <line:1586:12, line:1633:5>
|   |   |-IfStmt 0x19558831a48 <line:1588:9, line:1622:9> has_else
|   |   | |-OpaqueValueExpr 0x19558831a30 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x195588315c8 <line:1588:24, line:1606:9>
|   |   | | |-DeclStmt 0x19558831220 <line:1589:13, col:28>
|   |   | | | `-VarDecl 0x19558831178 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   |   | | |   `-ImplicitCastExpr 0x19558831208 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x195588311e0 <col:27> 'int' 0
|   |   | | `-IfStmt 0x195588315b0 <line:1601:13, line:1605:22>
|   |   | |   |-OpaqueValueExpr 0x19558831598 <<invalid sloc>> '_Bool'
|   |   | |   `-GotoStmt 0x19558831580 <col:17, col:22> 'err' 0x19558830230
|   |   | `-CompoundStmt 0x19558831a10 <line:1606:16, line:1622:9>
|   |   |   |-DeclStmt 0x195588316a0 <line:1607:13, col:28>
|   |   |   | `-VarDecl 0x195588315f8 <col:13, col:27> col:20 used bulk 'size_t':'unsigned long long' cinit
|   |   |   |   `-ImplicitCastExpr 0x19558831688 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   |     `-IntegerLiteral 0x19558831660 <col:27> 'int' 0
|   |   |   `-IfStmt 0x195588319f8 <line:1619:13, line:1621:22>
|   |   |     |-OpaqueValueExpr 0x195588319e0 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x195588319c8 <col:17, col:22> 'err' 0x19558830230
|   |   |-IfStmt 0x19558831dd0 <line:1627:9, line:1631:9>
|   |   | |-OpaqueValueExpr 0x19558831db8 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x19558831d98 <line:1628:49, line:1631:9>
|   |   |   |-CallExpr 0x19558831d20 <line:1629:13, col:37> 'int'
|   |   |   | |-ImplicitCastExpr 0x19558831d08 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x19558831ca8 <col:13> 'int ()' Function 0x1955882abd0 'OPENSSL_cleanse' 'int ()'
|   |   |   | |-ImplicitCastExpr 0x19558831d50 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x19558831cc8 <col:29> 'unsigned char *' lvalue ParmVar 0x19558835b30 'out' 'unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x19558831d68 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x19558831ce8 <col:34> 'size_t':'unsigned long long' lvalue ParmVar 0x19558835c28 'len' 'size_t':'unsigned long long'
|   |   |   `-GotoStmt 0x19558831d80 <line:1630:13, col:18> 'err' 0x19558830230
|   |   `-BinaryOperator 0x19558831e58 <line:1632:9, col:14> 'int' '='
|   |     |-DeclRefExpr 0x19558831de8 <col:9> 'int' lvalue Var 0x19558835e78 'rv' 'int'
|   |     `-ImplicitCastExpr 0x19558831e40 <col:14> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x19558831e28 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x19558831e08 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x19558835c28 'len' 'size_t':'unsigned long long'
|   |-LabelStmt 0x19558831f90 <line:1635:2, line:1636:20> 'err'
|   | `-BinaryOperator 0x19558831f70 <col:5, col:20> 'int' '='
|   |   |-MemberExpr 0x19558831f18 <col:5, col:11> 'int' lvalue ->iv_set 0x19558796de8
|   |   | `-ImplicitCastExpr 0x19558831f00 <col:5> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x19558831ee0 <col:5> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558835dc0 'gctx' 'EVP_AES_GCM_CTX *'
|   |   `-IntegerLiteral 0x19558831f48 <col:20> 'int' 0
|   |-BinaryOperator 0x19558832050 <line:1637:5, col:26> 'int' '='
|   | |-MemberExpr 0x19558831fe0 <col:5, col:11> 'int' lvalue ->tls_aad_len 0x195587970b0
|   | | `-ImplicitCastExpr 0x19558831fc8 <col:5> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x19558831fa8 <col:5> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558835dc0 'gctx' 'EVP_AES_GCM_CTX *'
|   | `-UnaryOperator 0x19558832038 <col:25, col:26> 'int' prefix '-'
|   |   `-IntegerLiteral 0x19558832010 <col:26> 'int' 1
|   `-ReturnStmt 0x195588320a8 <line:1638:5, col:12>
|     `-ImplicitCastExpr 0x19558832090 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x19558832070 <col:12> 'int' lvalue Var 0x19558835e78 'rv' 'int'
|-FunctionDecl 0x19558832398 <line:1641:1, line:1766:1> line:1641:12 invalid aes_gcm_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x19558832170 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x195588321f0 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x19558832270 <line:1642:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x195588322e8 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x195588363d0 <line:1643:1, line:1766:1>
|   |-DeclStmt 0x19558832508 <line:1644:5, col:60>
|   | `-VarDecl 0x19558832480 <col:5, col:22> col:22 used gctx 'EVP_AES_GCM_CTX *'
|   |-IfStmt 0x19558832620 <line:1646:5, line:1647:17>
|   | |-UnaryOperator 0x195588325b8 <line:1646:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x195588325a0 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x19558832570 <col:10, col:16> 'int' lvalue ->key_set 0x19558796d78
|   | |     `-ImplicitCastExpr 0x19558832558 <col:10> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x19558832520 <col:10> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558832480 'gctx' 'EVP_AES_GCM_CTX *'
|   | `-ReturnStmt 0x19558832610 <line:1647:9, col:17>
|   |   `-UnaryOperator 0x195588325f8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x195588325d0 <col:17> 'int' 1
|   |-IfStmt 0x19558832890 <line:1652:5, line:1653:17>
|   | |-UnaryOperator 0x19558832828 <line:1652:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x19558832810 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x195588327e0 <col:10, col:16> 'int' lvalue ->iv_set 0x19558796de8
|   | |     `-ImplicitCastExpr 0x195588327c8 <col:10> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x195588327a8 <col:10> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558832480 'gctx' 'EVP_AES_GCM_CTX *'
|   | `-ReturnStmt 0x19558832880 <line:1653:9, col:17>
|   |   `-UnaryOperator 0x19558832868 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x19558832840 <col:17> 'int' 1
|   `-IfStmt 0x195588363a8 <line:1654:5, line:1764:5> has_else
|     |-ImplicitCastExpr 0x195588328c8 <line:1654:9> 'const unsigned char *' <LValueToRValue>
|     | `-DeclRefExpr 0x195588328a8 <col:9> 'const unsigned char *' lvalue ParmVar 0x19558832270 'in' 'const unsigned char *'
|     |-CompoundStmt 0x19558833bd8 <col:13, line:1748:5>
|     | |-IfStmt 0x19558833b50 <line:1655:9, line:1746:9> has_else
|     | | |-BinaryOperator 0x195588329b8 <line:1655:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | | | |-ImplicitCastExpr 0x19558832988 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1655:13> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x195588328e0 <col:13> 'unsigned char *' lvalue ParmVar 0x195588321f0 'out' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x195588329a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | | |   `-ParenExpr 0x19558832968 <col:17, col:27> 'void *'
|     | | |     `-CStyleCastExpr 0x19558832940 <col:18, col:26> 'void *' <NullToPointer>
|     | | |       `-IntegerLiteral 0x19558832900 <col:26> 'int' 0
|     | | |-CompoundStmt 0x19558832af0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1655:26, line:1658:9>
|     | | | `-IfStmt 0x19558832ad8 <line:1656:13, line:1657:25>
|     | | |   |-OpaqueValueExpr 0x19558832ac0 <<invalid sloc>> '_Bool'
|     | | |   `-ReturnStmt 0x19558832ab0 <col:17, col:25>
|     | | |     `-UnaryOperator 0x19558832a98 <col:24, col:25> 'int' prefix '-'
|     | | |       `-IntegerLiteral 0x19558832a70 <col:25> 'int' 1
|     | | `-IfStmt 0x19558833b28 <line:1658:16, line:1746:9> has_else
|     | |   |-OpaqueValueExpr 0x19558833b10 <<invalid sloc>> '_Bool'
|     | |   |-CompoundStmt 0x19558833310 <line:1658:52, line:1702:9>
|     | |   | `-IfStmt 0x195588332e8 <line:1659:13, line:1701:13> has_else
|     | |   |   |-OpaqueValueExpr 0x195588332d0 <<invalid sloc>> '_Bool'
|     | |   |   |-CompoundStmt 0x19558832f08 <line:1659:28, line:1681:13>
|     | |   |   | |-DeclStmt 0x19558832c18 <line:1660:17, col:32>
|     | |   |   | | `-VarDecl 0x19558832b70 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |   |   | |   `-ImplicitCastExpr 0x19558832c00 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |   |   | |     `-IntegerLiteral 0x19558832bd8 <col:31> 'int' 0
|     | |   |   | `-IfStmt 0x19558832ef0 <line:1676:17, line:1680:29>
|     | |   |   |   |-OpaqueValueExpr 0x19558832ed8 <<invalid sloc>> '_Bool'
|     | |   |   |   `-ReturnStmt 0x19558832ec8 <col:21, col:29>
|     | |   |   |     `-UnaryOperator 0x19558832eb0 <col:28, col:29> 'int' prefix '-'
|     | |   |   |       `-IntegerLiteral 0x19558832e88 <col:29> 'int' 1
|     | |   |   `-CompoundStmt 0x195588332b0 <line:1681:20, line:1701:13>
|     | |   |     |-DeclStmt 0x19558832fe0 <line:1682:17, col:32>
|     | |   |     | `-VarDecl 0x19558832f38 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |   |     |   `-ImplicitCastExpr 0x19558832fc8 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |   |     |     `-IntegerLiteral 0x19558832fa0 <col:31> 'int' 0
|     | |   |     `-IfStmt 0x19558833298 <line:1698:17, line:1700:29>
|     | |   |       |-OpaqueValueExpr 0x19558833280 <<invalid sloc>> '_Bool'
|     | |   |       `-ReturnStmt 0x19558833270 <col:21, col:29>
|     | |   |         `-UnaryOperator 0x19558833258 <col:28, col:29> 'int' prefix '-'
|     | |   |           `-IntegerLiteral 0x19558833230 <col:29> 'int' 1
|     | |   `-CompoundStmt 0x19558833af8 <line:1702:16, line:1746:9>
|     | |     `-IfStmt 0x19558833ad0 <line:1703:13, line:1745:13> has_else
|     | |       |-OpaqueValueExpr 0x19558833ab8 <<invalid sloc>> '_Bool'
|     | |       |-CompoundStmt 0x19558833708 <line:1703:28, line:1725:13>
|     | |       | |-DeclStmt 0x19558833418 <line:1704:17, col:32>
|     | |       | | `-VarDecl 0x19558833370 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |       | |   `-ImplicitCastExpr 0x19558833400 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |       | |     `-IntegerLiteral 0x195588333d8 <col:31> 'int' 0
|     | |       | `-IfStmt 0x195588336f0 <line:1720:17, line:1724:29>
|     | |       |   |-OpaqueValueExpr 0x195588336d8 <<invalid sloc>> '_Bool'
|     | |       |   `-ReturnStmt 0x195588336c8 <col:21, col:29>
|     | |       |     `-UnaryOperator 0x195588336b0 <col:28, col:29> 'int' prefix '-'
|     | |       |       `-IntegerLiteral 0x19558833688 <col:29> 'int' 1
|     | |       `-CompoundStmt 0x19558833a98 <line:1725:20, line:1745:13>
|     | |         |-DeclStmt 0x195588337e0 <line:1726:17, col:32>
|     | |         | `-VarDecl 0x19558833738 <col:17, col:31> col:24 used bulk 'size_t':'unsigned long long' cinit
|     | |         |   `-ImplicitCastExpr 0x195588337c8 <col:31> 'size_t':'unsigned long long' <IntegralCast>
|     | |         |     `-IntegerLiteral 0x195588337a0 <col:31> 'int' 0
|     | |         `-IfStmt 0x19558833a80 <line:1742:17, line:1744:29>
|     | |           |-OpaqueValueExpr 0x19558833a68 <<invalid sloc>> '_Bool'
|     | |           `-ReturnStmt 0x19558833a58 <col:21, col:29>
|     | |             `-UnaryOperator 0x19558833a40 <col:28, col:29> 'int' prefix '-'
|     | |               `-IntegerLiteral 0x19558833a18 <col:29> 'int' 1
|     | `-ReturnStmt 0x19558833bc8 <line:1747:9, col:16>
|     |   `-ImplicitCastExpr 0x19558833bb0 <col:16> 'int' <IntegralCast>
|     |     `-ImplicitCastExpr 0x19558833b98 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|     |       `-DeclRefExpr 0x19558833b78 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x195588322e8 'len' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x19558836378 <line:1748:12, line:1764:5>
|       |-IfStmt 0x195588340f0 <line:1749:9, line:1758:9>
|       | |-OpaqueValueExpr 0x195588340d8 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x195588340a8 <line:1749:46, line:1758:9>
|       |   |-IfStmt 0x19558833d30 <line:1750:13, line:1751:25>
|       |   | |-BinaryOperator 0x19558833cc0 <line:1750:17, col:32> 'int' '<'
|       |   | | |-ImplicitCastExpr 0x19558833ca8 <col:17, col:23> 'int' <LValueToRValue>
|       |   | | | `-MemberExpr 0x19558833c50 <col:17, col:23> 'int' lvalue ->taglen 0x19558796fd0
|       |   | | |   `-ImplicitCastExpr 0x19558833c38 <col:17> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x19558833c18 <col:17> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558832480 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | | `-IntegerLiteral 0x19558833c80 <col:32> 'int' 0
|       |   | `-ReturnStmt 0x19558833d20 <line:1751:17, col:25>
|       |   |   `-UnaryOperator 0x19558833d08 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x19558833ce0 <col:25> 'int' 1
|       |   |-IfStmt 0x19558833fa8 <line:1752:13, line:1755:25>
|       |   | |-OpaqueValueExpr 0x19558833f90 <<invalid sloc>> '_Bool'
|       |   | `-ReturnStmt 0x19558833f80 <col:17, col:25>
|       |   |   `-UnaryOperator 0x19558833f68 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x19558833f40 <col:25> 'int' 1
|       |   |-BinaryOperator 0x19558834050 <line:1756:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x19558833ff8 <col:13, col:19> 'int' lvalue ->iv_set 0x19558796de8
|       |   | | `-ImplicitCastExpr 0x19558833fe0 <col:13> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x19558833fc0 <col:13> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558832480 'gctx' 'EVP_AES_GCM_CTX *'
|       |   | `-IntegerLiteral 0x19558834028 <col:28> 'int' 0
|       |   `-ReturnStmt 0x19558834098 <line:1757:13, col:20>
|       |     `-IntegerLiteral 0x19558834070 <col:20> 'int' 0
|       |-BinaryOperator 0x19558836270 <line:1760:9, col:24> 'int' '='
|       | |-MemberExpr 0x19558836218 <col:9, col:15> 'int' lvalue ->taglen 0x19558796fd0
|       | | `-ImplicitCastExpr 0x19558836200 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x195588361e0 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558832480 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x19558836248 <col:24> 'int' 16
|       |-BinaryOperator 0x19558836320 <line:1762:9, col:24> 'int' '='
|       | |-MemberExpr 0x195588362c8 <col:9, col:15> 'int' lvalue ->iv_set 0x19558796de8
|       | | `-ImplicitCastExpr 0x195588362b0 <col:9> 'EVP_AES_GCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x19558836290 <col:9> 'EVP_AES_GCM_CTX *' lvalue Var 0x19558832480 'gctx' 'EVP_AES_GCM_CTX *'
|       | `-IntegerLiteral 0x195588362f8 <col:24> 'int' 0
|       `-ReturnStmt 0x19558836368 <line:1763:9, col:16>
|         `-IntegerLiteral 0x19558836340 <col:16> 'int' 0
|-VarDecl 0x19558836418 <line:967:74, <scratch space>:36:1> col:1 invalid aes_128_gcm 'const int' static
|-FunctionDecl 0x195588367d8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:57:1 invalid EVP_aes_128_gcm 'const int *(void)'
| `-CompoundStmt 0x19558836890 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x195588368b8 <line:967:74, <scratch space>:63:1> col:1 invalid aes_192_gcm 'const int' static
|-FunctionDecl 0x19558836c78 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:84:1 invalid EVP_aes_192_gcm 'const int *(void)'
| `-CompoundStmt 0x19558836d30 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x19558836d58 <line:967:74, <scratch space>:90:1> col:1 invalid aes_256_gcm 'const int' static
|-FunctionDecl 0x19558834120 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:111:1 invalid EVP_aes_256_gcm 'const int *(void)'
| `-CompoundStmt 0x195588341d8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
|-FunctionDecl 0x19558834430 <line:1780:1, line:1803:1> line:1780:12 invalid aes_xts_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x19558834200 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x19558834280 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x19558834300 <col:54, col:58> col:58 arg 'int'
| |-ParmVarDecl 0x19558834380 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x19558834e18 <line:1781:1, line:1803:1>
|   |-DeclStmt 0x19558834620 <line:1782:5, col:58>
|   | `-VarDecl 0x19558834598 <col:5, col:22> col:22 used xctx 'EVP_AES_XTS_CTX *'
|   |-IfStmt 0x19558834c38 <line:1783:5, line:1798:17> has_else
|   | |-OpaqueValueExpr 0x19558834c20 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x19558834b50 <line:1783:32, line:1797:5>
|   | | |-DeclStmt 0x19558834740 <line:1785:9, col:68>
|   | | | `-VarDecl 0x195588346b8 <col:9, col:26> col:26 used xctx_out 'EVP_AES_XTS_CTX *'
|   | | |-IfStmt 0x19558834938 <line:1786:9, line:1790:9>
|   | | | |-OpaqueValueExpr 0x19558834920 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x19558834908 <line:1786:29, line:1790:9>
|   | | |   `-IfStmt 0x19558834868 <line:1787:13, line:1788:24>
|   | | |     |-OpaqueValueExpr 0x19558834850 <<invalid sloc>> '_Bool'
|   | | |     `-ReturnStmt 0x19558834840 <col:17, col:24>
|   | | |       `-IntegerLiteral 0x19558834818 <col:24> 'int' 0
|   | | |-IfStmt 0x19558834b00 <line:1791:9, line:1795:9>
|   | | | |-OpaqueValueExpr 0x19558834ae8 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x19558834ad0 <line:1791:29, line:1795:9>
|   | | |   `-IfStmt 0x19558834a48 <line:1792:13, line:1793:24>
|   | | |     |-OpaqueValueExpr 0x19558834a30 <<invalid sloc>> '_Bool'
|   | | |     `-ReturnStmt 0x19558834a20 <col:17, col:24>
|   | | |       `-IntegerLiteral 0x195588349f8 <col:24> 'int' 0
|   | | `-ReturnStmt 0x19558834b40 <line:1796:9, col:16>
|   | |   `-IntegerLiteral 0x19558834b18 <col:16> 'int' 1
|   | `-IfStmt 0x19558834c08 <line:1797:12, line:1798:17>
|   |   |-OpaqueValueExpr 0x19558834bf0 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x19558834be0 <col:9, col:17>
|   |     `-UnaryOperator 0x19558834bc8 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x19558834ba0 <col:17> 'int' 1
|   `-ReturnStmt 0x19558834e08 <line:1802:5, col:12>
|     `-IntegerLiteral 0x19558834de0 <col:12> 'int' 1
|-FunctionDecl 0x19558837150 <line:1805:1, line:1903:1> line:1805:12 invalid aes_xts_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x19558834e58 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x19558834ed8 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x19558834f58 <line:1806:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x19558834fd8 <col:54, col:58> col:58 used enc 'int'
| `-CompoundStmt 0x19558837c40 <line:1807:1, line:1903:1>
|   |-DeclStmt 0x195588372c0 <line:1808:5, col:60>
|   | `-VarDecl 0x19558837238 <col:5, col:22> col:22 used xctx 'EVP_AES_XTS_CTX *'
|   |-IfStmt 0x19558837400 <line:1809:5, line:1810:16>
|   | |-BinaryOperator 0x195588373a8 <line:1809:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x19558837328 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x19558837310 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x195588372d8 <col:10> 'const unsigned char *' lvalue ParmVar 0x19558834f58 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x19558837390 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x19558837378 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x19558837340 <col:17> 'const unsigned char *' lvalue ParmVar 0x19558834ed8 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x195588373f0 <line:1810:9, col:16>
|   |   `-IntegerLiteral 0x195588373c8 <col:16> 'int' 1
|   |-IfStmt 0x19558837a98 <line:1812:5, line:1895:19>
|   | |-ImplicitCastExpr 0x19558837438 <line:1812:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x19558837418 <col:9> 'const unsigned char *' lvalue ParmVar 0x19558834ed8 'key' 'const unsigned char *'
|   | `-DoStmt 0x19558837a78 <line:1813:9, line:1895:19>
|   |   |-CompoundStmt 0x19558837a28 <line:1813:12, line:1895:9>
|   |   | |-BinaryOperator 0x19558837570 <line:1817:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' '='
|   |   | | |-MemberExpr 0x195588374a0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1817:13, col:19> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' lvalue ->stream 0x19558797be8
|   |   | | | `-ImplicitCastExpr 0x19558837488 <col:13> 'EVP_AES_XTS_CTX *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x19558837450 <col:13> 'EVP_AES_XTS_CTX *' lvalue Var 0x19558837238 'xctx' 'EVP_AES_XTS_CTX *'
|   |   | | `-ImplicitCastExpr 0x19558837558 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' <NullToPointer>
|   |   | |   `-ParenExpr 0x19558837538 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x19558837510 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x195588374d0 <col:26> 'int' 0
|   |   | |-CStyleCastExpr 0x195588375c8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:1877:17, col:23> 'void' <ToVoid>
|   |   | | `-IntegerLiteral 0x19558837590 <col:23> 'int' 0
|   |   | `-IfStmt 0x19558837850 <line:1879:13, line:1887:13> has_else
|   |   |   |-ImplicitCastExpr 0x19558837628 <line:1879:17> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x195588375f0 <col:17> 'int' lvalue ParmVar 0x19558834fd8 'enc' 'int'
|   |   |   |-CompoundStmt 0x19558837738 <col:22, line:1883:13>
|   |   |   `-CompoundStmt 0x19558837840 <col:20, line:1887:13>
|   |   `-IntegerLiteral 0x19558837a50 <line:1895:18> 'int' 0
|   |-IfStmt 0x19558837bf0 <line:1897:5, line:1900:5>
|   | |-ImplicitCastExpr 0x19558837ad0 <line:1897:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x19558837ab0 <col:9> 'const unsigned char *' lvalue ParmVar 0x19558834f58 'iv' 'const unsigned char *'
|   | `-CompoundStmt 0x19558837be0 <col:13, line:1900:5>
|   `-ReturnStmt 0x19558837c30 <line:1902:5, col:12>
|     `-IntegerLiteral 0x19558837c08 <col:12> 'int' 1
|-FunctionDecl 0x19558837eb8 <line:1905:1, line:1922:1> line:1905:12 invalid aes_xts_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x19558837c90 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x19558837d10 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x19558837d90 <line:1906:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x19558837e08 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x195588387b0 <line:1907:1, line:1922:1>
|   |-DeclStmt 0x19558838028 <line:1908:5, col:60>
|   | `-VarDecl 0x19558837fa0 <col:5, col:22> col:22 used xctx 'EVP_AES_XTS_CTX *'
|   |-IfStmt 0x19558838118 <line:1909:5, line:1910:16>
|   | |-OpaqueValueExpr 0x19558838100 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x195588380f0 <col:9, col:16>
|   |   `-IntegerLiteral 0x195588380c8 <col:16> 'int' 0
|   |-IfStmt 0x195588382b8 <line:1911:5, line:1912:16>
|   | |-OpaqueValueExpr 0x195588382a0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x19558838290 <col:9, col:16>
|   |   `-IntegerLiteral 0x19558838268 <col:16> 'int' 0
|   |-IfStmt 0x19558838750 <line:1913:5, line:1920:16> has_else
|   | |-ImplicitCastExpr 0x19558838338 <line:1913:9, col:15> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' <LValueToRValue>
|   | | `-MemberExpr 0x19558838308 <col:9, col:15> 'void (*)(const unsigned char *, unsigned char *, size_t, const int *, const int *, const unsigned char *)' lvalue ->stream 0x19558797be8
|   | |   `-ImplicitCastExpr 0x195588382f0 <col:9> 'EVP_AES_XTS_CTX *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x195588382d0 <col:9> 'EVP_AES_XTS_CTX *' lvalue Var 0x19558837fa0 'xctx' 'EVP_AES_XTS_CTX *'
|   | |-NullStmt 0x19558838748 <line:1914:9>
|   | `-IfStmt 0x19558838730 <line:1917:10, line:1920:16>
|   |   |-OpaqueValueExpr 0x19558838718 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x19558838708 <col:9, col:16>
|   |     `-IntegerLiteral 0x195588386e0 <col:16> 'int' 0
|   `-ReturnStmt 0x195588387a0 <line:1921:5, col:12>
|     `-IntegerLiteral 0x19558838778 <col:12> 'int' 1
|-VarDecl 0x19558838800 <line:967:74, <scratch space>:117:1> col:1 invalid aes_128_xts 'const int' static
|-FunctionDecl 0x19558838c48 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:138:1 invalid EVP_aes_128_xts 'const int *(void)'
| `-CompoundStmt 0x19558838d00 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x19558838d28 <line:967:74, <scratch space>:144:1> col:1 invalid aes_256_xts 'const int' static
|-FunctionDecl 0x1955883afd8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:165:1 invalid EVP_aes_256_xts 'const int *(void)'
| `-CompoundStmt 0x1955883b090 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
|-FunctionDecl 0x1955883b2e8 <line:1933:1, line:2028:1> line:1933:12 invalid aes_ccm_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x1955883b0b8 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x1955883b138 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x1955883b1b8 <col:54, col:58> col:58 used arg 'int'
| |-ParmVarDecl 0x1955883b238 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x19558841548 <line:1934:1, line:2028:1>
|   |-DeclStmt 0x1955883b4d0 <line:1935:5, col:58>
|   | `-VarDecl 0x1955883b448 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   `-SwitchStmt 0x1955883b538 <line:1936:5, line:2027:5>
|     |-ImplicitCastExpr 0x1955883b520 <line:1936:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x1955883b4e8 <col:13> 'int' lvalue ParmVar 0x1955883b138 'type' 'int'
|     `-CompoundStmt 0x19558841440 <col:19, line:2027:5>
|       |-BinaryOperator 0x1955883b600 <line:1938:9, col:25> 'int' '='
|       | |-MemberExpr 0x1955883b5a8 <col:9, col:15> 'int' lvalue ->key_set 0x19558798028
|       | | `-ImplicitCastExpr 0x1955883b590 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883b558 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883b5d8 <col:25> 'int' 0
|       |-BinaryOperator 0x1955883b6b0 <line:1939:9, col:24> 'int' '='
|       | |-MemberExpr 0x1955883b658 <col:9, col:15> 'int' lvalue ->iv_set 0x19558798098
|       | | `-ImplicitCastExpr 0x1955883b640 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883b620 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883b688 <col:24> 'int' 0
|       |-BinaryOperator 0x1955883b760 <line:1940:9, col:19> 'int' '='
|       | |-MemberExpr 0x1955883b708 <col:9, col:15> 'int' lvalue ->L 0x195587981e8
|       | | `-ImplicitCastExpr 0x1955883b6f0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883b6d0 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883b738 <col:19> 'int' 8
|       |-BinaryOperator 0x1955883b810 <line:1941:9, col:19> 'int' '='
|       | |-MemberExpr 0x1955883b7b8 <col:9, col:15> 'int' lvalue ->M 0x19558798258
|       | | `-ImplicitCastExpr 0x1955883b7a0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883b780 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883b7e8 <col:19> 'int' 12
|       |-BinaryOperator 0x1955883b8c0 <line:1942:9, col:25> 'int' '='
|       | |-MemberExpr 0x1955883b868 <col:9, col:15> 'int' lvalue ->tag_set 0x19558798108
|       | | `-ImplicitCastExpr 0x1955883b850 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883b830 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883b898 <col:25> 'int' 0
|       |-BinaryOperator 0x1955883b970 <line:1943:9, col:25> 'int' '='
|       | |-MemberExpr 0x1955883b918 <col:9, col:15> 'int' lvalue ->len_set 0x19558798178
|       | | `-ImplicitCastExpr 0x1955883b900 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883b8e0 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883b948 <col:25> 'int' 0
|       |-BinaryOperator 0x1955883ba38 <line:1944:9, col:30> 'int' '='
|       | |-MemberExpr 0x1955883b9c8 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x195587982c8
|       | | `-ImplicitCastExpr 0x1955883b9b0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883b990 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-UnaryOperator 0x1955883ba20 <col:29, col:30> 'int' prefix '-'
|       |   `-IntegerLiteral 0x1955883b9f8 <col:30> 'int' 1
|       |-ReturnStmt 0x1955883ba80 <line:1945:9, col:16>
|       | `-IntegerLiteral 0x1955883ba58 <col:16> 'int' 1
|       |-IfStmt 0x1955883bb18 <line:1949:9, line:1950:20>
|       | |-OpaqueValueExpr 0x1955883bb00 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1955883baf0 <col:13, col:20>
|       |   `-IntegerLiteral 0x1955883bac8 <col:20> 'int' 0
|       |-BinaryOperator 0x1955883bc68 <line:1952:9, col:29> 'int' '='
|       | |-MemberExpr 0x1955883bc00 <col:9, col:15> 'int' lvalue ->tls_aad_len 0x195587982c8
|       | | `-ImplicitCastExpr 0x1955883bbe8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883bbc8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-ImplicitCastExpr 0x1955883bc50 <col:29> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1955883bc30 <col:29> 'int' lvalue ParmVar 0x1955883b1b8 'arg' 'int'
|       |-CompoundStmt 0x1955883e068 <line:1953:9, line:1969:9>
|       | |-IfStmt 0x1955883bcd8 <line:1958:13, line:1959:24>
|       | | |-OpaqueValueExpr 0x1955883bcc0 <<invalid sloc>> '_Bool'
|       | | `-ReturnStmt 0x1955883bcb0 <col:17, col:24>
|       | |   `-IntegerLiteral 0x1955883bc88 <col:24> 'int' 0
|       | `-IfStmt 0x1955883be78 <line:1962:13, line:1966:13>
|       |   |-OpaqueValueExpr 0x1955883be60 <<invalid sloc>> '_Bool'
|       |   `-CompoundStmt 0x1955883be48 <line:1962:48, line:1966:13>
|       |     `-IfStmt 0x1955883bdc8 <line:1963:17, line:1964:28>
|       |       |-OpaqueValueExpr 0x1955883bdb0 <<invalid sloc>> '_Bool'
|       |       `-ReturnStmt 0x1955883bda0 <col:21, col:28>
|       |         `-IntegerLiteral 0x1955883bd78 <col:28> 'int' 0
|       |-ReturnStmt 0x1955883e108 <line:1971:9, col:22>
|       | `-ImplicitCastExpr 0x1955883e0f0 <col:16, col:22> 'int' <LValueToRValue>
|       |   `-MemberExpr 0x1955883e0c0 <col:16, col:22> 'int' lvalue ->M 0x19558798258
|       |     `-ImplicitCastExpr 0x1955883e0a8 <col:16> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       |       `-DeclRefExpr 0x1955883e088 <col:16> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       |-IfStmt 0x1955883e188 <line:1975:9, line:1976:20>
|       | |-OpaqueValueExpr 0x1955883e170 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1955883e160 <col:13, col:20>
|       |   `-IntegerLiteral 0x1955883e138 <col:20> 'int' 0
|       |-ReturnStmt 0x1955883e248 <line:1979:9, col:16>
|       | `-IntegerLiteral 0x1955883e220 <col:16> 'int' 1
|       |-BinaryOperator 0x1955883e2f8 <line:1982:9, col:20> 'int' '='
|       | |-DeclRefExpr 0x1955883e258 <col:9> 'int' lvalue ParmVar 0x1955883b1b8 'arg' 'int'
|       | `-BinaryOperator 0x1955883e2d8 <col:15, col:20> 'int' '-'
|       |   |-IntegerLiteral 0x1955883e278 <col:15> 'int' 15
|       |   `-ImplicitCastExpr 0x1955883e2c0 <col:20> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1955883e2a0 <col:20> 'int' lvalue ParmVar 0x1955883b1b8 'arg' 'int'
|       |-IfStmt 0x1955883e470 <line:1985:9, line:1986:20>
|       | |-BinaryOperator 0x1955883e418 <line:1985:13, col:30> 'int' '||'
|       | | |-BinaryOperator 0x1955883e378 <col:13, col:19> 'int' '<'
|       | | | |-ImplicitCastExpr 0x1955883e360 <col:13> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x1955883e318 <col:13> 'int' lvalue ParmVar 0x1955883b1b8 'arg' 'int'
|       | | | `-IntegerLiteral 0x1955883e338 <col:19> 'int' 2
|       | | `-BinaryOperator 0x1955883e3f8 <col:24, col:30> 'int' '>'
|       | |   |-ImplicitCastExpr 0x1955883e3e0 <col:24> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1955883e398 <col:24> 'int' lvalue ParmVar 0x1955883b1b8 'arg' 'int'
|       | |   `-IntegerLiteral 0x1955883e3b8 <col:30> 'int' 8
|       | `-ReturnStmt 0x1955883e460 <line:1986:13, col:20>
|       |   `-IntegerLiteral 0x1955883e438 <col:20> 'int' 0
|       |-BinaryOperator 0x1955883e528 <line:1987:9, col:19> 'int' '='
|       | |-MemberExpr 0x1955883e4c0 <col:9, col:15> 'int' lvalue ->L 0x195587981e8
|       | | `-ImplicitCastExpr 0x1955883e4a8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883e488 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-ImplicitCastExpr 0x1955883e510 <col:19> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1955883e4f0 <col:19> 'int' lvalue ParmVar 0x1955883b1b8 'arg' 'int'
|       |-ReturnStmt 0x1955883e570 <line:1988:9, col:16>
|       | `-IntegerLiteral 0x1955883e548 <col:16> 'int' 1
|       |-IfStmt 0x1955883e798 <line:1991:9, line:1992:20>
|       | |-BinaryOperator 0x1955883e740 <line:1991:13, col:43> 'int' '||'
|       | | |-BinaryOperator 0x1955883e6a0 <col:13, col:32> 'int' '||'
|       | | | |-ParenExpr 0x1955883e600 <col:13, col:21> 'int'
|       | | | | `-BinaryOperator 0x1955883e5e0 <col:14, col:20> 'int' '&'
|       | | | |   |-ImplicitCastExpr 0x1955883e5c8 <col:14> 'int' <LValueToRValue>
|       | | | |   | `-DeclRefExpr 0x1955883e580 <col:14> 'int' lvalue ParmVar 0x1955883b1b8 'arg' 'int'
|       | | | |   `-IntegerLiteral 0x1955883e5a0 <col:20> 'int' 1
|       | | | `-BinaryOperator 0x1955883e680 <col:26, col:32> 'int' '<'
|       | | |   |-ImplicitCastExpr 0x1955883e668 <col:26> 'int' <LValueToRValue>
|       | | |   | `-DeclRefExpr 0x1955883e620 <col:26> 'int' lvalue ParmVar 0x1955883b1b8 'arg' 'int'
|       | | |   `-IntegerLiteral 0x1955883e640 <col:32> 'int' 4
|       | | `-BinaryOperator 0x1955883e720 <col:37, col:43> 'int' '>'
|       | |   |-ImplicitCastExpr 0x1955883e708 <col:37> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1955883e6c0 <col:37> 'int' lvalue ParmVar 0x1955883b1b8 'arg' 'int'
|       | |   `-IntegerLiteral 0x1955883e6e0 <col:43> 'int' 16
|       | `-ReturnStmt 0x1955883e788 <line:1992:13, col:20>
|       |   `-IntegerLiteral 0x1955883e760 <col:20> 'int' 0
|       |-IfStmt 0x1955883e840 <line:1993:9, line:1994:20>
|       | |-OpaqueValueExpr 0x1955883e828 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1955883e818 <col:13, col:20>
|       |   `-IntegerLiteral 0x1955883e7f0 <col:20> 'int' 0
|       |-IfStmt 0x1955883e9d8 <line:1995:9, line:1998:9>
|       | |-ImplicitCastExpr 0x1955883e878 <line:1995:13> 'void *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1955883e858 <col:13> 'void *' lvalue ParmVar 0x1955883b238 'ptr' 'void *'
|       | `-CompoundStmt 0x1955883e9c0 <col:18, line:1998:9>
|       |   `-BinaryOperator 0x1955883e920 <line:1996:13, col:29> 'int' '='
|       |     |-MemberExpr 0x1955883e8c8 <col:13, col:19> 'int' lvalue ->tag_set 0x19558798108
|       |     | `-ImplicitCastExpr 0x1955883e8b0 <col:13> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x1955883e890 <col:13> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       |     `-IntegerLiteral 0x1955883e8f8 <col:29> 'int' 1
|       |-BinaryOperator 0x1955883ea90 <line:1999:9, col:19> 'int' '='
|       | |-MemberExpr 0x1955883ea28 <col:9, col:15> 'int' lvalue ->M 0x19558798258
|       | | `-ImplicitCastExpr 0x1955883ea10 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883e9f0 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-ImplicitCastExpr 0x1955883ea78 <col:19> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1955883ea58 <col:19> 'int' lvalue ParmVar 0x1955883b1b8 'arg' 'int'
|       |-ReturnStmt 0x1955883ead8 <line:2000:9, col:16>
|       | `-IntegerLiteral 0x1955883eab0 <col:16> 'int' 1
|       |-IfStmt 0x1955883ebf0 <line:2003:9, line:2004:20>
|       | |-OpaqueValueExpr 0x1955883ebd8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1955883ebc8 <col:13, col:20>
|       |   `-IntegerLiteral 0x1955883eba0 <col:20> 'int' 0
|       |-IfStmt 0x1955883ee30 <line:2005:9, line:2006:20>
|       | |-OpaqueValueExpr 0x1955883ee18 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1955883ee08 <col:13, col:20>
|       |   `-IntegerLiteral 0x1955883ede0 <col:20> 'int' 0
|       |-BinaryOperator 0x1955883eed8 <line:2007:9, col:25> 'int' '='
|       | |-MemberExpr 0x1955883ee80 <col:9, col:15> 'int' lvalue ->tag_set 0x19558798108
|       | | `-ImplicitCastExpr 0x1955883ee68 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883ee48 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883eeb0 <col:25> 'int' 0
|       |-BinaryOperator 0x1955883ef88 <line:2008:9, col:24> 'int' '='
|       | |-MemberExpr 0x1955883ef30 <col:9, col:15> 'int' lvalue ->iv_set 0x19558798098
|       | | `-ImplicitCastExpr 0x1955883ef18 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883eef8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883ef60 <col:24> 'int' 0
|       |-BinaryOperator 0x19558841068 <line:2009:9, col:25> 'int' '='
|       | |-MemberExpr 0x19558841010 <col:9, col:15> 'int' lvalue ->len_set 0x19558798178
|       | | `-ImplicitCastExpr 0x1955883efc8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883efa8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883b448 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x19558841040 <col:25> 'int' 0
|       |-ReturnStmt 0x195588410b0 <line:2010:9, col:16>
|       | `-IntegerLiteral 0x19558841088 <col:16> 'int' 1
|       |-CompoundStmt 0x195588413a8 <line:2013:9, line:2022:9>
|       | |-DeclStmt 0x19558841178 <line:2015:13, col:72>
|       | | `-VarDecl 0x195588410f0 <col:13, col:30> col:30 used cctx_out 'EVP_AES_CCM_CTX *'
|       | |-IfStmt 0x19558841358 <line:2016:13, line:2020:13>
|       | | |-OpaqueValueExpr 0x19558841340 <<invalid sloc>> '_Bool'
|       | | `-CompoundStmt 0x19558841328 <line:2016:32, line:2020:13>
|       | |   `-IfStmt 0x19558841288 <line:2017:17, line:2018:28>
|       | |     |-OpaqueValueExpr 0x19558841270 <<invalid sloc>> '_Bool'
|       | |     `-ReturnStmt 0x19558841260 <col:21, col:28>
|       | |       `-IntegerLiteral 0x19558841238 <col:28> 'int' 0
|       | `-ReturnStmt 0x19558841398 <line:2021:13, col:20>
|       |   `-IntegerLiteral 0x19558841370 <col:20> 'int' 1
|       `-DefaultStmt 0x19558841420 <line:2024:5, line:2025:17>
|         `-ReturnStmt 0x19558841410 <col:9, col:17>
|           `-UnaryOperator 0x195588413f8 <col:16, col:17> 'int' prefix '-'
|             `-IntegerLiteral 0x195588413d0 <col:17> 'int' 1
|-FunctionDecl 0x195588417b0 <line:2030:1, line:2073:1> line:2030:12 invalid aes_ccm_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x19558841580 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x19558841600 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x19558841680 <line:2031:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x19558841700 <col:54, col:58> col:58 enc 'int'
| `-CompoundStmt 0x1955883f230 <line:2032:1, line:2073:1>
|   |-DeclStmt 0x19558841920 <line:2033:5, col:60>
|   | `-VarDecl 0x19558841898 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   |-IfStmt 0x19558841a60 <line:2034:5, line:2035:16>
|   | |-BinaryOperator 0x19558841a08 <line:2034:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x19558841988 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x19558841970 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x19558841938 <col:10> 'const unsigned char *' lvalue ParmVar 0x19558841680 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x195588419f0 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x195588419d8 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x195588419a0 <col:17> 'const unsigned char *' lvalue ParmVar 0x19558841600 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x19558841a50 <line:2035:9, col:16>
|   |   `-IntegerLiteral 0x19558841a28 <col:16> 'int' 1
|   |-IfStmt 0x19558841fa8 <line:2036:5, line:2067:19>
|   | |-ImplicitCastExpr 0x19558841a98 <line:2036:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x19558841a78 <col:9> 'const unsigned char *' lvalue ParmVar 0x19558841600 'key' 'const unsigned char *'
|   | `-DoStmt 0x19558841f88 <line:2037:9, line:2067:19>
|   |   |-CompoundStmt 0x19558841f48 <line:2037:12, line:2067:9>
|   |   | `-BinaryOperator 0x19558841f28 <line:2066:13, col:29> 'int' '='
|   |   |   |-MemberExpr 0x19558841ed0 <col:13, col:19> 'int' lvalue ->key_set 0x19558798028
|   |   |   | `-ImplicitCastExpr 0x19558841eb8 <col:13> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x19558841e98 <col:13> 'EVP_AES_CCM_CTX *' lvalue Var 0x19558841898 'cctx' 'EVP_AES_CCM_CTX *'
|   |   |   `-IntegerLiteral 0x19558841f00 <col:29> 'int' 1
|   |   `-IntegerLiteral 0x19558841f60 <line:2067:18> 'int' 0
|   |-IfStmt 0x1955883f1e0 <line:2068:5, line:2071:5>
|   | |-ImplicitCastExpr 0x19558841fe0 <line:2068:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x19558841fc0 <col:9> 'const unsigned char *' lvalue ParmVar 0x19558841680 'iv' 'const unsigned char *'
|   | `-CompoundStmt 0x1955883f1c8 <col:13, line:2071:5>
|   |   `-BinaryOperator 0x1955883f1a8 <line:2070:9, col:24> 'int' '='
|   |     |-MemberExpr 0x1955883f150 <col:9, col:15> 'int' lvalue ->iv_set 0x19558798098
|   |     | `-ImplicitCastExpr 0x1955883f138 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1955883f118 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x19558841898 'cctx' 'EVP_AES_CCM_CTX *'
|   |     `-IntegerLiteral 0x1955883f180 <col:24> 'int' 1
|   `-ReturnStmt 0x1955883f220 <line:2072:5, col:12>
|     `-IntegerLiteral 0x1955883f1f8 <col:12> 'int' 1
|-FunctionDecl 0x1955883f4a8 <line:2075:1, line:2121:1> line:2075:12 invalid aes_ccm_tls_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x1955883f280 <col:31, col:47> col:47 invalid ctx 'int *'
| |-ParmVarDecl 0x1955883f300 <col:52, col:67> col:67 used out 'unsigned char *'
| |-ParmVarDecl 0x1955883f380 <line:2076:31, col:52> col:52 used in 'const unsigned char *'
| |-ParmVarDecl 0x1955883f3f8 <col:56, col:63> col:63 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x19558843e80 <line:2077:1, line:2121:1>
|   |-DeclStmt 0x1955883f618 <line:2078:5, col:60>
|   | `-VarDecl 0x1955883f590 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   |-IfStmt 0x1955883f8b0 <line:2081:5, line:2082:17>
|   | |-OpaqueValueExpr 0x1955883f898 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1955883f888 <col:9, col:17>
|   |   `-UnaryOperator 0x1955883f870 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1955883f848 <col:17> 'int' 1
|   |-IfStmt 0x1955883fcb0 <line:2092:5, line:2094:21>
|   | |-OpaqueValueExpr 0x1955883fc98 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1955883fc88 <col:13, col:21>
|   |   `-UnaryOperator 0x1955883fc70 <col:20, col:21> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1955883fc48 <col:21> 'int' 1
|   `-IfStmt 0x19558843e58 <line:2100:5, line:2120:5> has_else
|     |-OpaqueValueExpr 0x19558843e40 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x195588434f8 <line:2100:41, line:2108:5>
|     | |-IfStmt 0x195588432c0 <line:2101:9, line:2104:21>
|     | | |-OpaqueValueExpr 0x195588432a8 <<invalid sloc>> '_Bool'
|     | | `-ReturnStmt 0x19558843298 <col:13, col:21>
|     | |   `-UnaryOperator 0x19558843280 <col:20, col:21> 'int' prefix '-'
|     | |     `-IntegerLiteral 0x19558843258 <col:21> 'int' 1
|     | `-IfStmt 0x19558843458 <line:2105:9, line:2106:21>
|     |   |-OpaqueValueExpr 0x19558843440 <<invalid sloc>> '_Bool'
|     |   `-ReturnStmt 0x19558843430 <col:13, col:21>
|     |     `-UnaryOperator 0x19558843418 <col:20, col:21> 'int' prefix '-'
|     |       `-IntegerLiteral 0x195588433f0 <col:21> 'int' 1
|     `-CompoundStmt 0x19558843e18 <line:2108:12, line:2120:5>
|       |-IfStmt 0x19558843cd8 <line:2109:9, line:2117:9>
|       | |-OpaqueValueExpr 0x19558843cc0 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x19558843ca0 <line:2111:56, line:2117:9>
|       |   |-DeclStmt 0x19558843938 <line:2112:13, col:34>
|       |   | `-VarDecl 0x195588438d0 <col:13, col:33> col:27 used tag 'unsigned char [16]'
|       |   `-IfStmt 0x19558843c88 <line:2113:13, line:2116:13>
|       |     |-OpaqueValueExpr 0x19558843c70 <<invalid sloc>> '_Bool'
|       |     `-CompoundStmt 0x19558843c58 <line:2113:55, line:2116:13>
|       |       `-IfStmt 0x19558843c40 <line:2114:17, line:2115:28>
|       |         |-UnaryOperator 0x19558843bc8 <line:2114:21, col:58> 'int' prefix '!' cannot overflow
|       |         | `-CallExpr 0x19558843b60 <col:22, col:58> 'int'
|       |         |   |-ImplicitCastExpr 0x19558843b48 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |         |   | `-DeclRefExpr 0x19558843a10 <col:22> 'int ()' Function 0x19558831b10 'CRYPTO_memcmp' 'int ()'
|       |         |   |-ImplicitCastExpr 0x19558843b98 <col:36> 'unsigned char *' <ArrayToPointerDecay>
|       |         |   | `-DeclRefExpr 0x19558843a30 <col:36> 'unsigned char [16]' lvalue Var 0x195588438d0 'tag' 'unsigned char [16]'
|       |         |   |-BinaryOperator 0x19558843ac0 <col:41, col:46> 'const unsigned char *' '+'
|       |         |   | |-ImplicitCastExpr 0x19558843a90 <col:41> 'const unsigned char *' <LValueToRValue>
|       |         |   | | `-DeclRefExpr 0x19558843a50 <col:41> 'const unsigned char *' lvalue ParmVar 0x1955883f380 'in' 'const unsigned char *'
|       |         |   | `-ImplicitCastExpr 0x19558843aa8 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|       |         |   |   `-DeclRefExpr 0x19558843a70 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x1955883f3f8 'len' 'size_t':'unsigned long long'
|       |         |   `-ImplicitCastExpr 0x19558843bb0 <col:51, col:57> 'int' <LValueToRValue>
|       |         |     `-MemberExpr 0x19558843b18 <col:51, col:57> 'int' lvalue ->M 0x19558798258
|       |         |       `-ImplicitCastExpr 0x19558843b00 <col:51> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       |         |         `-DeclRefExpr 0x19558843ae0 <col:51> 'EVP_AES_CCM_CTX *' lvalue Var 0x1955883f590 'cctx' 'EVP_AES_CCM_CTX *'
|       |         `-ReturnStmt 0x19558843c30 <line:2115:21, col:28>
|       |           `-ImplicitCastExpr 0x19558843c18 <col:28> 'int' <IntegralCast>
|       |             `-ImplicitCastExpr 0x19558843c00 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|       |               `-DeclRefExpr 0x19558843be0 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1955883f3f8 'len' 'size_t':'unsigned long long'
|       |-CallExpr 0x19558843d68 <line:2118:9, col:33> 'int'
|       | |-ImplicitCastExpr 0x19558843d50 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x19558843cf0 <col:9> 'int ()' Function 0x1955882abd0 'OPENSSL_cleanse' 'int ()'
|       | |-ImplicitCastExpr 0x19558843d98 <col:25> 'unsigned char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x19558843d10 <col:25> 'unsigned char *' lvalue ParmVar 0x1955883f300 'out' 'unsigned char *'
|       | `-ImplicitCastExpr 0x19558843db0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|       |   `-DeclRefExpr 0x19558843d30 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x1955883f3f8 'len' 'size_t':'unsigned long long'
|       `-ReturnStmt 0x19558843e08 <line:2119:9, col:17>
|         `-UnaryOperator 0x19558843df0 <col:16, col:17> 'int' prefix '-'
|           `-IntegerLiteral 0x19558843dc8 <col:17> 'int' 1
|-FunctionDecl 0x195588400c0 <line:2123:1, line:2190:1> line:2123:12 invalid aes_ccm_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x19558843ec8 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x19558843f48 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x19558843fc8 <line:2124:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x19558840010 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1955883ce98 <line:2125:1, line:2190:1>
|   |-DeclStmt 0x19558840230 <line:2126:5, col:60>
|   | `-VarDecl 0x195588401a8 <col:5, col:22> col:22 used cctx 'EVP_AES_CCM_CTX *'
|   |-IfStmt 0x19558840380 <line:2129:5, line:2130:17>
|   | |-UnaryOperator 0x19558840318 <line:2129:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x19558840300 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x195588402d0 <col:10, col:16> 'int' lvalue ->key_set 0x19558798028
|   | |     `-ImplicitCastExpr 0x195588402b8 <col:10> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x19558840298 <col:10> 'EVP_AES_CCM_CTX *' lvalue Var 0x195588401a8 'cctx' 'EVP_AES_CCM_CTX *'
|   | `-ReturnStmt 0x19558840370 <line:2130:9, col:17>
|   |   `-UnaryOperator 0x19558840358 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x19558840330 <col:17> 'int' 1
|   |-IfStmt 0x195588405f0 <line:2135:5, line:2136:17>
|   | |-UnaryOperator 0x19558840588 <line:2135:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x19558840570 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x19558840540 <col:10, col:16> 'int' lvalue ->iv_set 0x19558798098
|   | |     `-ImplicitCastExpr 0x19558840528 <col:10> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x19558840508 <col:10> 'EVP_AES_CCM_CTX *' lvalue Var 0x195588401a8 'cctx' 'EVP_AES_CCM_CTX *'
|   | `-ReturnStmt 0x195588405e0 <line:2136:9, col:17>
|   |   `-UnaryOperator 0x195588405c8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x195588405a0 <col:17> 'int' 1
|   |-IfStmt 0x19558840728 <line:2138:5, line:2139:17>
|   | |-OpaqueValueExpr 0x19558840710 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x19558840700 <col:9, col:17>
|   |   `-UnaryOperator 0x195588406e8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x195588406c0 <col:17> 'int' 1
|   |-IfStmt 0x19558840d18 <line:2140:5, line:2153:5>
|   | |-UnaryOperator 0x19558840778 <line:2140:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x19558840760 <col:10> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x19558840740 <col:10> 'unsigned char *' lvalue ParmVar 0x19558843f48 'out' 'unsigned char *'
|   | `-CompoundStmt 0x19558840cf0 <col:15, line:2153:5>
|   |   |-IfStmt 0x19558840ac0 <line:2141:9, line:2147:9>
|   |   | |-UnaryOperator 0x195588407c8 <line:2141:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x195588407b0 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x19558840790 <col:14> 'const unsigned char *' lvalue ParmVar 0x19558843fc8 'in' 'const unsigned char *'
|   |   | `-CompoundStmt 0x19558840a98 <col:18, line:2147:9>
|   |   |   |-IfStmt 0x19558840970 <line:2142:13, line:2144:25>
|   |   |   | |-OpaqueValueExpr 0x19558840958 <<invalid sloc>> '_Bool'
|   |   |   | `-ReturnStmt 0x19558840948 <col:17, col:25>
|   |   |   |   `-UnaryOperator 0x19558840930 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x19558840908 <col:25> 'int' 1
|   |   |   |-BinaryOperator 0x19558840a18 <line:2145:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x195588409c0 <col:13, col:19> 'int' lvalue ->len_set 0x19558798178
|   |   |   | | `-ImplicitCastExpr 0x195588409a8 <col:13> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x19558840988 <col:13> 'EVP_AES_CCM_CTX *' lvalue Var 0x195588401a8 'cctx' 'EVP_AES_CCM_CTX *'
|   |   |   | `-IntegerLiteral 0x195588409f0 <col:29> 'int' 1
|   |   |   `-ReturnStmt 0x19558840a88 <line:2146:13, col:20>
|   |   |     `-ImplicitCastExpr 0x19558840a70 <col:20> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x19558840a58 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x19558840a38 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x19558840010 'len' 'size_t':'unsigned long long'
|   |   |-IfStmt 0x19558840c18 <line:2149:9, line:2150:21>
|   |   | |-BinaryOperator 0x19558840ba8 <line:2149:13, col:31> 'int' '&&'
|   |   | | |-UnaryOperator 0x19558840b58 <col:13, col:20> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x19558840b40 <col:14, col:20> 'int' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x19558840b10 <col:14, col:20> 'int' lvalue ->len_set 0x19558798178
|   |   | | |     `-ImplicitCastExpr 0x19558840af8 <col:14> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x19558840ad8 <col:14> 'EVP_AES_CCM_CTX *' lvalue Var 0x195588401a8 'cctx' 'EVP_AES_CCM_CTX *'
|   |   | | `-ImplicitCastExpr 0x19558840b90 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x19558840b70 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x19558840010 'len' 'size_t':'unsigned long long'
|   |   | `-ReturnStmt 0x19558840c08 <line:2150:13, col:21>
|   |   |   `-UnaryOperator 0x19558840bf0 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x19558840bc8 <col:21> 'int' 1
|   |   `-ReturnStmt 0x19558840ce0 <line:2152:9, col:16>
|   |     `-ImplicitCastExpr 0x19558840cc8 <col:16> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x19558840cb0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x19558840c90 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x19558840010 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x19558840db8 <line:2155:5, line:2156:16>
|   | |-UnaryOperator 0x19558840d68 <line:2155:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x19558840d50 <col:10> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x19558840d30 <col:10> 'const unsigned char *' lvalue ParmVar 0x19558843fc8 'in' 'const unsigned char *'
|   | `-ReturnStmt 0x19558840da8 <line:2156:9, col:16>
|   |   `-IntegerLiteral 0x19558840d80 <col:16> 'int' 0
|   |-IfStmt 0x1955883c0a8 <line:2158:5, line:2163:5>
|   | |-UnaryOperator 0x19558840e50 <line:2158:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x19558840e38 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x19558840e08 <col:10, col:16> 'int' lvalue ->len_set 0x19558798178
|   | |     `-ImplicitCastExpr 0x19558840df0 <col:10> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x19558840dd0 <col:10> 'EVP_AES_CCM_CTX *' lvalue Var 0x195588401a8 'cctx' 'EVP_AES_CCM_CTX *'
|   | `-CompoundStmt 0x1955883c088 <col:25, line:2163:5>
|   |   |-IfStmt 0x1955883bfc0 <line:2159:9, line:2161:21>
|   |   | |-OpaqueValueExpr 0x19558840fe0 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x19558840fd0 <col:13, col:21>
|   |   |   `-UnaryOperator 0x19558840fb8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x19558840f90 <col:21> 'int' 1
|   |   `-BinaryOperator 0x1955883c068 <line:2162:9, col:25> 'int' '='
|   |     |-MemberExpr 0x1955883c010 <col:9, col:15> 'int' lvalue ->len_set 0x19558798178
|   |     | `-ImplicitCastExpr 0x1955883bff8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1955883bfd8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x195588401a8 'cctx' 'EVP_AES_CCM_CTX *'
|   |     `-IntegerLiteral 0x1955883c040 <col:25> 'int' 1
|   `-IfStmt 0x1955883ce70 <line:2164:5, line:2189:5> has_else
|     |-OpaqueValueExpr 0x1955883ce58 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x1955883c3e0 <line:2164:41, line:2171:5>
|     | |-IfStmt 0x1955883c2b8 <line:2165:9, line:2168:21>
|     | | |-OpaqueValueExpr 0x1955883c2a0 <<invalid sloc>> '_Bool'
|     | | `-ReturnStmt 0x1955883c290 <col:13, col:21>
|     | |   `-UnaryOperator 0x1955883c278 <col:20, col:21> 'int' prefix '-'
|     | |     `-IntegerLiteral 0x1955883c250 <col:21> 'int' 1
|     | |-BinaryOperator 0x1955883c360 <line:2169:9, col:25> 'int' '='
|     | | |-MemberExpr 0x1955883c308 <col:9, col:15> 'int' lvalue ->tag_set 0x19558798108
|     | | | `-ImplicitCastExpr 0x1955883c2f0 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1955883c2d0 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x195588401a8 'cctx' 'EVP_AES_CCM_CTX *'
|     | | `-IntegerLiteral 0x1955883c338 <col:25> 'int' 1
|     | `-ReturnStmt 0x1955883c3d0 <line:2170:9, col:16>
|     |   `-ImplicitCastExpr 0x1955883c3b8 <col:16> 'int' <IntegralCast>
|     |     `-ImplicitCastExpr 0x1955883c3a0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|     |       `-DeclRefExpr 0x1955883c380 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x19558840010 'len' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x1955883ce10 <line:2171:12, line:2189:5>
|       |-DeclStmt 0x1955883c4c8 <line:2172:9, col:20>
|       | `-VarDecl 0x1955883c420 <col:9, col:19> col:13 used rv 'int' cinit
|       |   `-UnaryOperator 0x1955883c4b0 <col:18, col:19> 'int' prefix '-'
|       |     `-IntegerLiteral 0x1955883c488 <col:19> 'int' 1
|       |-IfStmt 0x1955883ca18 <line:2173:9, line:2182:9>
|       | |-OpaqueValueExpr 0x1955883ca00 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x1955883c9e0 <line:2175:56, line:2182:9>
|       |   |-DeclStmt 0x1955883c720 <line:2176:13, col:34>
|       |   | `-VarDecl 0x1955883c6b8 <col:13, col:33> col:27 used tag 'unsigned char [16]'
|       |   `-IfStmt 0x1955883c9c8 <line:2177:13, line:2181:13>
|       |     |-OpaqueValueExpr 0x1955883c9b0 <<invalid sloc>> '_Bool'
|       |     `-CompoundStmt 0x1955883c998 <line:2177:55, line:2181:13>
|       |       `-IfStmt 0x1955883c980 <line:2178:17, line:2180:26>
|       |         |-OpaqueValueExpr 0x1955883c968 <<invalid sloc>> '_Bool'
|       |         `-BinaryOperator 0x1955883c948 <col:21, col:26> 'int' '='
|       |           |-DeclRefExpr 0x1955883c8c0 <col:21> 'int' lvalue Var 0x1955883c420 'rv' 'int'
|       |           `-ImplicitCastExpr 0x1955883c930 <col:26> 'int' <IntegralCast>
|       |             `-ImplicitCastExpr 0x1955883c918 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|       |               `-DeclRefExpr 0x1955883c8f8 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x19558840010 'len' 'size_t':'unsigned long long'
|       |-IfStmt 0x1955883cba0 <line:2183:9, line:2184:37>
|       | |-BinaryOperator 0x1955883caa8 <line:2183:13, col:20> 'int' '=='
|       | | |-ImplicitCastExpr 0x1955883ca90 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1955883ca30 <col:13> 'int' lvalue Var 0x1955883c420 'rv' 'int'
|       | | `-UnaryOperator 0x1955883ca78 <col:19, col:20> 'int' prefix '-'
|       | |   `-IntegerLiteral 0x1955883ca50 <col:20> 'int' 1
|       | `-CallExpr 0x1955883cb40 <line:2184:13, col:37> 'int'
|       |   |-ImplicitCastExpr 0x1955883cb28 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1955883cac8 <col:13> 'int ()' Function 0x1955882abd0 'OPENSSL_cleanse' 'int ()'
|       |   |-ImplicitCastExpr 0x1955883cb70 <col:29> 'unsigned char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1955883cae8 <col:29> 'unsigned char *' lvalue ParmVar 0x19558843f48 'out' 'unsigned char *'
|       |   `-ImplicitCastExpr 0x1955883cb88 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|       |     `-DeclRefExpr 0x1955883cb08 <col:34> 'size_t':'unsigned long long' lvalue ParmVar 0x19558840010 'len' 'size_t':'unsigned long long'
|       |-BinaryOperator 0x1955883cc48 <line:2185:9, col:24> 'int' '='
|       | |-MemberExpr 0x1955883cbf0 <col:9, col:15> 'int' lvalue ->iv_set 0x19558798098
|       | | `-ImplicitCastExpr 0x1955883cbd8 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883cbb8 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x195588401a8 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883cc20 <col:24> 'int' 0
|       |-BinaryOperator 0x1955883ccf8 <line:2186:9, col:25> 'int' '='
|       | |-MemberExpr 0x1955883cca0 <col:9, col:15> 'int' lvalue ->tag_set 0x19558798108
|       | | `-ImplicitCastExpr 0x1955883cc88 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883cc68 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x195588401a8 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883ccd0 <col:25> 'int' 0
|       |-BinaryOperator 0x1955883cda8 <line:2187:9, col:25> 'int' '='
|       | |-MemberExpr 0x1955883cd50 <col:9, col:15> 'int' lvalue ->len_set 0x19558798178
|       | | `-ImplicitCastExpr 0x1955883cd38 <col:9> 'EVP_AES_CCM_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955883cd18 <col:9> 'EVP_AES_CCM_CTX *' lvalue Var 0x195588401a8 'cctx' 'EVP_AES_CCM_CTX *'
|       | `-IntegerLiteral 0x1955883cd80 <col:25> 'int' 0
|       `-ReturnStmt 0x1955883ce00 <line:2188:9, col:16>
|         `-ImplicitCastExpr 0x1955883cde8 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x1955883cdc8 <col:16> 'int' lvalue Var 0x1955883c420 'rv' 'int'
|-VarDecl 0x1955883cf00 <line:967:74, <scratch space>:171:1> col:1 invalid aes_128_ccm 'const int' static
|-FunctionDecl 0x195588423b0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:192:1 invalid EVP_aes_128_ccm 'const int *(void)'
| `-CompoundStmt 0x19558842468 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x19558842490 <line:967:74, <scratch space>:198:1> col:1 invalid aes_192_ccm 'const int' static
|-FunctionDecl 0x195588428d8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:219:1 invalid EVP_aes_192_ccm 'const int *(void)'
| `-CompoundStmt 0x19558842990 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x195588429b8 <line:967:74, <scratch space>:225:1> col:1 invalid aes_256_ccm 'const int' static
|-FunctionDecl 0x19558842e00 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:246:1 invalid EVP_aes_256_ccm 'const int *(void)'
| `-CompoundStmt 0x19558842eb8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
|-RecordDecl 0x19558842ec8 <line:2201:9, line:2208:1> line:2201:9 invalid struct definition
| |-RecordDecl 0x19558842f80 <line:2202:5, line:2205:5> line:2202:5 invalid union definition
| | |-FieldDecl 0x19558844078 <line:2203:9, col:16> col:16 align 'double'
| | `-FieldDecl 0x195588440e8 <line:2204:9, col:17> col:17 invalid ks 'int'
| |-FieldDecl 0x19558844198 <line:2202:5, line:2205:7> col:7 invalid ks 'union (anonymous union at .//openssl//file_jk/after\crypto\evp\e_aes.c:2202:5)':'union (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:2202:5)'
| `-FieldDecl 0x19558844208 <line:2207:5, col:20> col:20 referenced iv 'unsigned char *'
|-TypedefDecl 0x195588442b8 <line:2201:1, line:2208:3> col:3 referenced EVP_AES_WRAP_CTX 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:2201:9)':'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:2201:9)'
| `-ElaboratedType 0x19558844260 'struct (anonymous struct at .//openssl//file_jk/after\crypto\evp\e_aes.c:2201:9)' sugar
|   `-RecordType 0x19558842f60 'struct (anonymous at .//openssl//file_jk/after\crypto\evp\e_aes.c:2201:9)'
|     `-Record 0x19558842ec8 ''
|-FunctionDecl 0x19558844570 <line:2210:1, line:2231:1> line:2210:12 invalid aes_wrap_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x19558844340 <col:30, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x195588443c0 <col:51, col:72> col:72 used key 'const unsigned char *'
| |-ParmVarDecl 0x19558844440 <line:2211:30, col:51> col:51 used iv 'const unsigned char *'
| |-ParmVarDecl 0x195588444c0 <col:55, col:59> col:59 enc 'int'
| `-CompoundStmt 0x19558844e08 <line:2212:1, line:2231:1>
|   |-DeclStmt 0x19558844760 <line:2213:5, col:62>
|   | `-VarDecl 0x195588446d8 <col:5, col:23> col:23 used wctx 'EVP_AES_WRAP_CTX *'
|   |-IfStmt 0x195588448a0 <line:2214:5, line:2215:16>
|   | |-BinaryOperator 0x19558844848 <line:2214:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x195588447c8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x195588447b0 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x19558844778 <col:10> 'const unsigned char *' lvalue ParmVar 0x19558844440 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x19558844830 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x19558844818 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x195588447e0 <col:17> 'const unsigned char *' lvalue ParmVar 0x195588443c0 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x19558844890 <line:2215:9, col:16>
|   |   `-IntegerLiteral 0x19558844868 <col:16> 'int' 1
|   |-IfStmt 0x19558844c50 <line:2216:5, line:2225:5>
|   | |-ImplicitCastExpr 0x195588448d8 <line:2216:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x195588448b8 <col:9> 'const unsigned char *' lvalue ParmVar 0x195588443c0 'key' 'const unsigned char *'
|   | `-CompoundStmt 0x19558844c38 <col:14, line:2225:5>
|   |   `-IfStmt 0x19558844c20 <line:2223:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |     |-UnaryOperator 0x19558844ae0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2223:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x19558844ac8 <col:14> 'const unsigned char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x19558844aa8 <col:14> 'const unsigned char *' lvalue ParmVar 0x19558844440 'iv' 'const unsigned char *'
|   |     `-BinaryOperator 0x19558844c00 <line:2224:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|   |       |-MemberExpr 0x19558844b30 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2224:13, col:19> 'unsigned char *' lvalue ->iv 0x19558844208
|   |       | `-ImplicitCastExpr 0x19558844b18 <col:13> 'EVP_AES_WRAP_CTX *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x19558844af8 <col:13> 'EVP_AES_WRAP_CTX *' lvalue Var 0x195588446d8 'wctx' 'EVP_AES_WRAP_CTX *'
|   |       `-ImplicitCastExpr 0x19558844be8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |         `-ParenExpr 0x19558844bc8 <col:17, col:27> 'void *'
|   |           `-CStyleCastExpr 0x19558844ba0 <col:18, col:26> 'void *' <NullToPointer>
|   |             `-IntegerLiteral 0x19558844b60 <col:26> 'int' 0
|   |-IfStmt 0x19558844db8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2226:5, line:2229:5>
|   | |-ImplicitCastExpr 0x19558844c88 <line:2226:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x19558844c68 <col:9> 'const unsigned char *' lvalue ParmVar 0x19558844440 'iv' 'const unsigned char *'
|   | `-CompoundStmt 0x19558844da8 <col:13, line:2229:5>
|   `-ReturnStmt 0x19558844df8 <line:2230:5, col:12>
|     `-IntegerLiteral 0x19558844dd0 <col:12> 'int' 1
|-FunctionDecl 0x1955883d018 <line:2233:1, line:2290:1> line:2233:12 invalid aes_wrap_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x19558844e58 <col:28, col:44> col:44 invalid ctx 'int *'
| |-ParmVarDecl 0x19558844ed8 <col:49, col:64> col:64 used out 'unsigned char *'
| |-ParmVarDecl 0x19558844f58 <line:2234:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x19558844fd0 <col:53, col:60> col:60 used inlen 'size_t':'unsigned long long'
| `-CompoundStmt 0x1955884cae8 <line:2235:1, line:2290:1>
|   |-DeclStmt 0x1955883d188 <line:2236:5, col:62>
|   | `-VarDecl 0x1955883d100 <col:5, col:23> col:23 used wctx 'EVP_AES_WRAP_CTX *'
|   |-DeclStmt 0x1955883d218 <line:2237:5, col:14>
|   | `-VarDecl 0x1955883d1b0 <col:5, col:12> col:12 used rv 'size_t':'unsigned long long'
|   |-DeclStmt 0x1955883d2f8 <line:2239:5, col:49>
|   | `-VarDecl 0x1955883d248 <col:5, col:9> col:9 used pad 'int'
|   |-IfStmt 0x1955883d3b0 <line:2241:5, line:2242:16>
|   | |-UnaryOperator 0x1955883d360 <line:2241:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1955883d348 <col:10> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1955883d310 <col:10> 'const unsigned char *' lvalue ParmVar 0x19558844f58 'in' 'const unsigned char *'
|   | `-ReturnStmt 0x1955883d3a0 <line:2242:9, col:16>
|   |   `-IntegerLiteral 0x1955883d378 <col:16> 'int' 0
|   |-IfStmt 0x1955883d480 <line:2244:5, line:2245:17>
|   | |-UnaryOperator 0x1955883d418 <line:2244:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1955883d400 <col:10> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1955883d3c8 <col:10> 'size_t':'unsigned long long' lvalue ParmVar 0x19558844fd0 'inlen' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1955883d470 <line:2245:9, col:17>
|   |   `-UnaryOperator 0x1955883d458 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1955883d430 <col:17> 'int' 1
|   |-IfStmt 0x1955883d690 <line:2247:5, line:2248:17>
|   | |-OpaqueValueExpr 0x1955883d678 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1955883d668 <col:9, col:17>
|   |   `-UnaryOperator 0x1955883d650 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1955883d628 <col:17> 'int' 1
|   |-IfStmt 0x1955883d818 <line:2250:5, line:2251:17>
|   | |-BinaryOperator 0x1955883d7a8 <line:2250:9, col:25> 'int' '&&'
|   | | |-UnaryOperator 0x1955883d6f8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1955883d6e0 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1955883d6a8 <col:10> 'int' lvalue Var 0x1955883d248 'pad' 'int'
|   | | `-BinaryOperator 0x1955883d788 <col:17, col:25> 'unsigned long long' '&'
|   | |   |-ImplicitCastExpr 0x1955883d758 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1955883d710 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x19558844fd0 'inlen' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1955883d770 <col:25> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1955883d730 <col:25> 'int' 7
|   | `-ReturnStmt 0x1955883d808 <line:2251:9, col:17>
|   |   `-UnaryOperator 0x1955883d7f0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1955883d7c8 <col:17> 'int' 1
|   |-IfStmt 0x1955883da48 <line:2252:5, line:2255:5>
|   | |-CallExpr 0x1955883d910 <line:2252:9, col:48> 'int'
|   | | |-ImplicitCastExpr 0x1955883d8f8 <col:9> 'int (*)(const void *, const void *, int)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1955883d830 <col:9> 'int (const void *, const void *, int)' Function 0x195587962e0 'is_partially_overlapping' 'int (const void *, const void *, int)'
|   | | |-ImplicitCastExpr 0x1955883d960 <col:34> 'const void *' <BitCast>
|   | | | `-ImplicitCastExpr 0x1955883d948 <col:34> 'unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1955883d850 <col:34> 'unsigned char *' lvalue ParmVar 0x19558844ed8 'out' 'unsigned char *'
|   | | |-ImplicitCastExpr 0x1955883d990 <col:39> 'const void *' <BitCast>
|   | | | `-ImplicitCastExpr 0x1955883d978 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1955883d888 <col:39> 'const unsigned char *' lvalue ParmVar 0x19558844f58 'in' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x1955883d9c0 <col:43> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1955883d9a8 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1955883d8a8 <col:43> 'size_t':'unsigned long long' lvalue ParmVar 0x19558844fd0 'inlen' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1955883da30 <col:51, line:2255:5>
|   |   `-ReturnStmt 0x1955883da20 <line:2254:9, col:16>
|   |     `-IntegerLiteral 0x1955883d9f8 <col:16> 'int' 0
|   |-IfStmt 0x1955883dee8 <line:2256:5, line:2271:5>
|   | |-UnaryOperator 0x1955883da98 <line:2256:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1955883da80 <col:10> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1955883da60 <col:10> 'unsigned char *' lvalue ParmVar 0x19558844ed8 'out' 'unsigned char *'
|   | `-CompoundStmt 0x1955883ded0 <col:15, line:2271:5>
|   |   `-IfStmt 0x1955883dea8 <line:2257:9, line:2270:9> has_else
|   |     |-OpaqueValueExpr 0x1955883de90 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x1955883dd98 <line:2257:45, line:2263:9>
|   |     | |-IfStmt 0x1955883dcc0 <line:2259:13, line:2260:43>
|   |     | | |-ImplicitCastExpr 0x1955883daf0 <line:2259:17> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x1955883dad0 <col:17> 'int' lvalue Var 0x1955883d248 'pad' 'int'
|   |     | | `-BinaryOperator 0x1955883dca0 <line:2260:17, col:43> 'size_t':'unsigned long long' '='
|   |     | |   |-DeclRefExpr 0x1955883db08 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x19558844fd0 'inlen' 'size_t':'unsigned long long'
|   |     | |   `-BinaryOperator 0x1955883dc80 <col:25, col:43> 'unsigned long long' '*'
|   |     | |     |-BinaryOperator 0x1955883dc20 <col:25, col:39> 'unsigned long long' '/'
|   |     | |     | |-ParenExpr 0x1955883dbc0 <col:25, col:35> 'unsigned long long'
|   |     | |     | | `-BinaryOperator 0x1955883dba0 <col:26, col:34> 'unsigned long long' '+'
|   |     | |     | |   |-ImplicitCastExpr 0x1955883db70 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | |   | `-DeclRefExpr 0x1955883db28 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x19558844fd0 'inlen' 'size_t':'unsigned long long'
|   |     | |     | |   `-ImplicitCastExpr 0x1955883db88 <col:34> 'unsigned long long' <IntegralCast>
|   |     | |     | |     `-IntegerLiteral 0x1955883db48 <col:34> 'int' 7
|   |     | |     | `-ImplicitCastExpr 0x1955883dc08 <col:39> 'unsigned long long' <IntegralCast>
|   |     | |     |   `-IntegerLiteral 0x1955883dbe0 <col:39> 'int' 8
|   |     | |     `-ImplicitCastExpr 0x1955883dc68 <col:43> 'unsigned long long' <IntegralCast>
|   |     | |       `-IntegerLiteral 0x1955883dc40 <col:43> 'int' 8
|   |     | `-ReturnStmt 0x1955883dd88 <line:2262:13, col:28>
|   |     |   `-ImplicitCastExpr 0x1955883dd70 <col:20, col:28> 'int' <IntegralCast>
|   |     |     `-BinaryOperator 0x1955883dd50 <col:20, col:28> 'unsigned long long' '+'
|   |     |       |-ImplicitCastExpr 0x1955883dd20 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x1955883dcd8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x19558844fd0 'inlen' 'size_t':'unsigned long long'
|   |     |       `-ImplicitCastExpr 0x1955883dd38 <col:28> 'unsigned long long' <IntegralCast>
|   |     |         `-IntegerLiteral 0x1955883dcf8 <col:28> 'int' 8
|   |     `-CompoundStmt 0x1955883de78 <line:2263:16, line:2270:9>
|   |       `-ReturnStmt 0x1955883de68 <line:2269:13, col:28>
|   |         `-ImplicitCastExpr 0x1955883de50 <col:20, col:28> 'int' <IntegralCast>
|   |           `-BinaryOperator 0x1955883de30 <col:20, col:28> 'unsigned long long' '-'
|   |             |-ImplicitCastExpr 0x1955883de00 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1955883ddb8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x19558844fd0 'inlen' 'size_t':'unsigned long long'
|   |             `-ImplicitCastExpr 0x1955883de18 <col:28> 'unsigned long long' <IntegralCast>
|   |               `-IntegerLiteral 0x1955883ddd8 <col:28> 'int' 8
|   |-IfStmt 0x1955884c990 <line:2272:5, line:2288:5> has_else
|   | |-ImplicitCastExpr 0x1955883df20 <line:2272:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1955883df00 <col:9> 'int' lvalue Var 0x1955883d248 'pad' 'int'
|   | |-CompoundStmt 0x1955884c4f0 <col:14, line:2281:5>
|   | `-CompoundStmt 0x1955884c980 <col:12, line:2288:5>
|   `-ReturnStmt 0x1955884cad8 <line:2289:5, col:28>
|     `-ConditionalOperator 0x1955884caa8 <col:12, col:28> 'int'
|       |-ImplicitCastExpr 0x1955884ca90 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1955884c9b8 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1955883d1b0 'rv' 'size_t':'unsigned long long'
|       |-CStyleCastExpr 0x1955884ca28 <col:17, col:22> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x1955884ca10 <col:22> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x1955884c9d8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1955883d1b0 'rv' 'size_t':'unsigned long long'
|       `-UnaryOperator 0x1955884ca78 <col:27, col:28> 'int' prefix '-'
|         `-IntegerLiteral 0x1955884ca50 <col:28> 'int' 1
|-VarDecl 0x1955884cb68 <line:2296:1, col:25> col:25 invalid aes_128_wrap 'const int' static
|-FunctionDecl 0x1955884cfc0 <line:2305:1, line:2308:1> line:2305:19 invalid EVP_aes_128_wrap 'const int *(void)'
| `-CompoundStmt 0x1955884d078 <line:2306:1, line:2308:1>
|-VarDecl 0x19558845050 <line:2310:1, col:25> col:25 invalid aes_192_wrap 'const int' static
|-FunctionDecl 0x195588454a8 <line:2319:1, line:2322:1> line:2319:19 invalid EVP_aes_192_wrap 'const int *(void)'
| `-CompoundStmt 0x19558845560 <line:2320:1, line:2322:1>
|-VarDecl 0x19558845588 <line:2324:1, col:25> col:25 invalid aes_256_wrap 'const int' static
|-FunctionDecl 0x195588459e0 <line:2333:1, line:2336:1> line:2333:19 invalid EVP_aes_256_wrap 'const int *(void)'
| `-CompoundStmt 0x19558845a98 <line:2334:1, line:2336:1>
|-VarDecl 0x19558845ac0 <line:2338:1, col:25> col:25 invalid aes_128_wrap_pad 'const int' static
|-FunctionDecl 0x19558845f18 <line:2347:1, line:2350:1> line:2347:19 invalid EVP_aes_128_wrap_pad 'const int *(void)'
| `-CompoundStmt 0x19558845fd0 <line:2348:1, line:2350:1>
|-VarDecl 0x19558847070 <line:2352:1, col:25> col:25 invalid aes_192_wrap_pad 'const int' static
|-FunctionDecl 0x195588474c8 <line:2361:1, line:2364:1> line:2361:19 invalid EVP_aes_192_wrap_pad 'const int *(void)'
| `-CompoundStmt 0x19558847580 <line:2362:1, line:2364:1>
|-VarDecl 0x195588475a8 <line:2366:1, col:25> col:25 invalid aes_256_wrap_pad 'const int' static
|-FunctionDecl 0x19558847a00 <line:2375:1, line:2378:1> line:2375:19 invalid EVP_aes_256_wrap_pad 'const int *(void)'
| `-CompoundStmt 0x19558847ab8 <line:2376:1, line:2378:1>
|-FunctionDecl 0x19558847d10 <line:2381:1, line:2438:1> line:2381:12 invalid aes_ocb_ctrl 'int (int *, int, int, void *)' static
| |-ParmVarDecl 0x19558847ae0 <col:25, col:41> col:41 invalid c 'int *'
| |-ParmVarDecl 0x19558847b60 <col:44, col:48> col:48 used type 'int'
| |-ParmVarDecl 0x19558847be0 <col:54, col:58> col:58 used arg 'int'
| |-ParmVarDecl 0x19558847c60 <col:63, col:69> col:69 used ptr 'void *'
| `-CompoundStmt 0x195588464c8 <line:2382:1, line:2438:1>
|   |-DeclStmt 0x19558847f00 <line:2383:5, col:58>
|   | `-VarDecl 0x19558847e78 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   |-DeclStmt 0x19558847f90 <line:2385:5, col:30>
|   | `-VarDecl 0x19558847f28 <col:5, col:22> col:22 used new_octx 'EVP_AES_OCB_CTX *'
|   `-SwitchStmt 0x19558847ff8 <line:2387:5, line:2437:5>
|     |-ImplicitCastExpr 0x19558847fe0 <line:2387:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x19558847fa8 <col:13> 'int' lvalue ParmVar 0x19558847b60 'type' 'int'
|     `-CompoundStmt 0x19558846430 <col:19, line:2437:5>
|       |-BinaryOperator 0x1955884b108 <line:2389:9, col:25> 'int' '='
|       | |-MemberExpr 0x1955884b0b0 <col:9, col:15> 'int' lvalue ->key_set 0x19558798a38
|       | | `-ImplicitCastExpr 0x19558848050 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x19558848018 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558847e78 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1955884b0e0 <col:25> 'int' 0
|       |-BinaryOperator 0x1955884b1b8 <line:2390:9, col:24> 'int' '='
|       | |-MemberExpr 0x1955884b160 <col:9, col:15> 'int' lvalue ->iv_set 0x19558798aa8
|       | | `-ImplicitCastExpr 0x1955884b148 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955884b128 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558847e78 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1955884b190 <col:24> 'int' 0
|       |-BinaryOperator 0x1955884b378 <line:2393:9, col:24> 'int' '='
|       | |-MemberExpr 0x1955884b320 <col:9, col:15> 'int' lvalue ->taglen 0x19558793f48
|       | | `-ImplicitCastExpr 0x1955884b308 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955884b2e8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558847e78 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1955884b350 <col:24> 'int' 16
|       |-BinaryOperator 0x1955884b428 <line:2394:9, col:30> 'int' '='
|       | |-MemberExpr 0x1955884b3d0 <col:9, col:15> 'int' lvalue ->data_buf_len 0x19558793df8
|       | | `-ImplicitCastExpr 0x1955884b3b8 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955884b398 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558847e78 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1955884b400 <col:30> 'int' 0
|       |-BinaryOperator 0x1955884b4d8 <line:2395:9, col:29> 'int' '='
|       | |-MemberExpr 0x1955884b480 <col:9, col:15> 'int' lvalue ->aad_buf_len 0x19558793e68
|       | | `-ImplicitCastExpr 0x1955884b468 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955884b448 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558847e78 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x1955884b4b0 <col:29> 'int' 0
|       |-ReturnStmt 0x1955884b520 <line:2396:9, col:16>
|       | `-IntegerLiteral 0x1955884b4f8 <col:16> 'int' 1
|       |-IfStmt 0x1955884b6a0 <line:2400:9, line:2401:20>
|       | |-BinaryOperator 0x1955884b648 <line:2400:13, col:31> 'int' '||'
|       | | |-BinaryOperator 0x1955884b5a8 <col:13, col:20> 'int' '<='
|       | | | |-ImplicitCastExpr 0x1955884b590 <col:13> 'int' <LValueToRValue>
|       | | | | `-DeclRefExpr 0x1955884b530 <col:13> 'int' lvalue ParmVar 0x19558847be0 'arg' 'int'
|       | | | `-IntegerLiteral 0x1955884b568 <col:20> 'int' 0
|       | | `-BinaryOperator 0x1955884b628 <col:25, col:31> 'int' '>'
|       | |   |-ImplicitCastExpr 0x1955884b610 <col:25> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1955884b5c8 <col:25> 'int' lvalue ParmVar 0x19558847be0 'arg' 'int'
|       | |   `-IntegerLiteral 0x1955884b5e8 <col:31> 'int' 15
|       | `-ReturnStmt 0x1955884b690 <line:2401:13, col:20>
|       |   `-IntegerLiteral 0x1955884b668 <col:20> 'int' 0
|       |-BinaryOperator 0x1955884b758 <line:2403:9, col:23> 'int' '='
|       | |-MemberExpr 0x1955884b6f0 <col:9, col:15> 'int' lvalue ->ivlen 0x19558793ed8
|       | | `-ImplicitCastExpr 0x1955884b6d8 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955884b6b8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558847e78 'octx' 'EVP_AES_OCB_CTX *'
|       | `-ImplicitCastExpr 0x1955884b740 <col:23> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1955884b720 <col:23> 'int' lvalue ParmVar 0x19558847be0 'arg' 'int'
|       |-ReturnStmt 0x1955884b7a0 <line:2404:9, col:16>
|       | `-IntegerLiteral 0x1955884b778 <col:16> 'int' 1
|       |-IfStmt 0x1955884baa8 <line:2407:9, line:2414:9>
|       | |-UnaryOperator 0x1955884b800 <line:2407:13, col:14> 'int' prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x1955884b7e8 <col:14> 'void *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955884b7b0 <col:14> 'void *' lvalue ParmVar 0x19558847c60 'ptr' 'void *'
|       | `-CompoundStmt 0x1955884ba80 <col:19, line:2414:9>
|       |   |-IfStmt 0x1955884b970 <line:2409:13, line:2410:24>
|       |   | |-BinaryOperator 0x1955884b918 <line:2409:17, col:34> 'int' '||'
|       |   | | |-BinaryOperator 0x1955884b878 <col:17, col:23> 'int' '<'
|       |   | | | |-ImplicitCastExpr 0x1955884b860 <col:17> 'int' <LValueToRValue>
|       |   | | | | `-DeclRefExpr 0x1955884b818 <col:17> 'int' lvalue ParmVar 0x19558847be0 'arg' 'int'
|       |   | | | `-IntegerLiteral 0x1955884b838 <col:23> 'int' 0
|       |   | | `-BinaryOperator 0x1955884b8f8 <col:28, col:34> 'int' '>'
|       |   | |   |-ImplicitCastExpr 0x1955884b8e0 <col:28> 'int' <LValueToRValue>
|       |   | |   | `-DeclRefExpr 0x1955884b898 <col:28> 'int' lvalue ParmVar 0x19558847be0 'arg' 'int'
|       |   | |   `-IntegerLiteral 0x1955884b8b8 <col:34> 'int' 16
|       |   | `-ReturnStmt 0x1955884b960 <line:2410:17, col:24>
|       |   |   `-IntegerLiteral 0x1955884b938 <col:24> 'int' 0
|       |   |-BinaryOperator 0x1955884ba28 <line:2412:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x1955884b9c0 <col:13, col:19> 'int' lvalue ->taglen 0x19558793f48
|       |   | | `-ImplicitCastExpr 0x1955884b9a8 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x1955884b988 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558847e78 'octx' 'EVP_AES_OCB_CTX *'
|       |   | `-ImplicitCastExpr 0x1955884ba10 <col:28> 'int' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1955884b9f0 <col:28> 'int' lvalue ParmVar 0x19558847be0 'arg' 'int'
|       |   `-ReturnStmt 0x1955884ba70 <line:2413:13, col:20>
|       |     `-IntegerLiteral 0x1955884ba48 <col:20> 'int' 1
|       |-IfStmt 0x1955884bc08 <line:2415:9, line:2416:20>
|       | |-OpaqueValueExpr 0x1955884bbf0 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1955884bbe0 <col:13, col:20>
|       |   `-IntegerLiteral 0x1955884bbb8 <col:20> 'int' 0
|       |-CallExpr 0x1955884bd48 <line:2417:9, col:35> 'void *'
|       | |-ImplicitCastExpr 0x1955884bd30 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1955884bc20 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x1955884bd98 <col:16, col:22> 'void *' <BitCast>
|       | | `-ImplicitCastExpr 0x1955884bd80 <col:16, col:22> 'unsigned char *' <ArrayToPointerDecay>
|       | |   `-MemberExpr 0x1955884bc78 <col:16, col:22> 'unsigned char [16]' lvalue ->tag 0x19558793c08
|       | |     `-ImplicitCastExpr 0x1955884bc60 <col:16> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x1955884bc40 <col:16> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558847e78 'octx' 'EVP_AES_OCB_CTX *'
|       | |-ImplicitCastExpr 0x1955884bdc8 <col:27> 'const void *' <NoOp>
|       | | `-ImplicitCastExpr 0x1955884bdb0 <col:27> 'void *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1955884bca8 <col:27> 'void *' lvalue ParmVar 0x19558847c60 'ptr' 'void *'
|       | `-ImplicitCastExpr 0x1955884bdf8 <col:32> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x1955884bde0 <col:32> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1955884bcc8 <col:32> 'int' lvalue ParmVar 0x19558847be0 'arg' 'int'
|       |-ReturnStmt 0x1955884be38 <line:2418:9, col:16>
|       | `-IntegerLiteral 0x1955884be10 <col:16> 'int' 1
|       |-IfStmt 0x1955884bf90 <line:2421:9, line:2422:20>
|       | |-OpaqueValueExpr 0x1955884bf78 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x1955884bf68 <col:13, col:20>
|       |   `-IntegerLiteral 0x1955884bf40 <col:20> 'int' 0
|       |-CallExpr 0x19558846090 <line:2424:9, col:35> 'void *'
|       | |-ImplicitCastExpr 0x19558846078 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x1955884bfa8 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|       | |-ImplicitCastExpr 0x195588460c8 <col:16> 'void *' <LValueToRValue>
|       | | `-DeclRefExpr 0x1955884bfc8 <col:16> 'void *' lvalue ParmVar 0x19558847c60 'ptr' 'void *'
|       | |-ImplicitCastExpr 0x195588460f8 <col:21, col:27> 'const void *' <BitCast>
|       | | `-ImplicitCastExpr 0x195588460e0 <col:21, col:27> 'unsigned char *' <ArrayToPointerDecay>
|       | |   `-MemberExpr 0x1955884c020 <col:21, col:27> 'unsigned char [16]' lvalue ->tag 0x19558793c08
|       | |     `-ImplicitCastExpr 0x1955884c008 <col:21> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |       `-DeclRefExpr 0x1955884bfe8 <col:21> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558847e78 'octx' 'EVP_AES_OCB_CTX *'
|       | `-ImplicitCastExpr 0x19558846128 <col:32> 'unsigned long long' <IntegralCast>
|       |   `-ImplicitCastExpr 0x19558846110 <col:32> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1955884c050 <col:32> 'int' lvalue ParmVar 0x19558847be0 'arg' 'int'
|       |-ReturnStmt 0x19558846168 <line:2425:9, col:16>
|       | `-IntegerLiteral 0x19558846140 <col:16> 'int' 1
|       `-DefaultStmt 0x19558846410 <line:2434:5, line:2435:17>
|         `-ReturnStmt 0x19558846400 <col:9, col:17>
|           `-UnaryOperator 0x195588463e8 <col:16, col:17> 'int' prefix '-'
|             `-IntegerLiteral 0x195588463c0 <col:17> 'int' 1
|-FunctionDecl 0x19558846738 <line:2463:1, line:2541:1> line:2463:12 invalid aes_ocb_init_key 'int (int *, const unsigned char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x19558846508 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x19558846588 <col:50, col:71> col:71 used key 'const unsigned char *'
| |-ParmVarDecl 0x19558846608 <line:2464:29, col:50> col:50 used iv 'const unsigned char *'
| |-ParmVarDecl 0x19558846688 <col:54, col:58> col:58 enc 'int'
| `-CompoundStmt 0x19558849bc8 <line:2465:1, line:2541:1>
|   |-DeclStmt 0x195588468a8 <line:2466:5, col:60>
|   | `-VarDecl 0x19558846820 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   |-IfStmt 0x195588469e8 <line:2467:5, line:2468:16>
|   | |-BinaryOperator 0x19558846990 <line:2467:9, col:17> 'int' '&&'
|   | | |-UnaryOperator 0x19558846910 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x195588468f8 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x195588468c0 <col:10> 'const unsigned char *' lvalue ParmVar 0x19558846608 'iv' 'const unsigned char *'
|   | | `-UnaryOperator 0x19558846978 <col:16, col:17> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x19558846960 <col:17> 'const unsigned char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x19558846928 <col:17> 'const unsigned char *' lvalue ParmVar 0x19558846588 'key' 'const unsigned char *'
|   | `-ReturnStmt 0x195588469d8 <line:2468:9, col:16>
|   |   `-IntegerLiteral 0x195588469b0 <col:16> 'int' 1
|   |-IfStmt 0x19558849b68 <line:2469:5, line:2539:5> has_else
|   | |-ImplicitCastExpr 0x19558846a20 <line:2469:9> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x19558846a00 <col:9> 'const unsigned char *' lvalue ParmVar 0x19558846588 'key' 'const unsigned char *'
|   | |-CompoundStmt 0x19558849638 <col:14, line:2532:5>
|   | | |-DoStmt 0x19558846eb8 <line:2470:9, line:2518:17>
|   | | | |-CompoundStmt 0x19558846e78 <line:2470:12, line:2517:9>
|   | | | | `-IfStmt 0x19558846e60 <line:2511:13, line:2516:24>
|   | | | |   |-OpaqueValueExpr 0x19558846e48 <<invalid sloc>> '_Bool'
|   | | | |   `-ReturnStmt 0x19558846e38 <col:17, col:24>
|   | | | |     `-IntegerLiteral 0x19558846e10 <col:24> 'int' 0
|   | | | `-IntegerLiteral 0x19558846e90 <line:2518:16> 'int' 0
|   | | |-IfStmt 0x19558849188 <line:2523:9, line:2524:24>
|   | | | |-BinaryOperator 0x19558849090 <line:2523:13, col:33> 'int' '&&'
|   | | | | |-BinaryOperator 0x19558846fb0 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x19558846f80 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2523:13> 'const unsigned char *' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x19558846ed8 <col:13> 'const unsigned char *' lvalue ParmVar 0x19558846608 'iv' 'const unsigned char *'
|   | | | | | `-ImplicitCastExpr 0x19558846f98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|   | | | | |   `-ParenExpr 0x19558846f60 <col:17, col:27> 'void *'
|   | | | | |     `-CStyleCastExpr 0x19558846f38 <col:18, col:26> 'void *' <NullToPointer>
|   | | | | |       `-IntegerLiteral 0x19558846ef8 <col:26> 'int' 0
|   | | | | `-ImplicitCastExpr 0x19558847038 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2523:27, col:33> 'int' <LValueToRValue>
|   | | | |   `-MemberExpr 0x19558847008 <col:27, col:33> 'int' lvalue ->iv_set 0x19558798aa8
|   | | | |     `-ImplicitCastExpr 0x19558846ff0 <col:27> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x19558846fd0 <col:27> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558846820 'octx' 'EVP_AES_OCB_CTX *'
|   | | | `-BinaryOperator 0x19558849168 <line:2524:13, col:24> 'const unsigned char *' '='
|   | | |   |-DeclRefExpr 0x195588490b0 <col:13> 'const unsigned char *' lvalue ParmVar 0x19558846608 'iv' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x19558849150 <col:18, col:24> 'const unsigned char *' <NoOp>
|   | | |     `-ImplicitCastExpr 0x19558849138 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|   | | |       `-MemberExpr 0x19558849108 <col:18, col:24> 'unsigned char *' lvalue ->iv 0x19558793b48
|   | | |         `-ImplicitCastExpr 0x195588490f0 <col:18> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x195588490d0 <col:18> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558846820 'octx' 'EVP_AES_OCB_CTX *'
|   | | |-IfStmt 0x19558849570 <line:2525:9, line:2530:9>
|   | | | |-ImplicitCastExpr 0x195588491c0 <line:2525:13> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x195588491a0 <col:13> 'const unsigned char *' lvalue ParmVar 0x19558846608 'iv' 'const unsigned char *'
|   | | | `-CompoundStmt 0x19558849550 <col:17, line:2530:9>
|   | | |   |-IfStmt 0x19558849488 <line:2526:13, line:2528:24>
|   | | |   | |-OpaqueValueExpr 0x19558849470 <<invalid sloc>> '_Bool'
|   | | |   | `-ReturnStmt 0x19558849460 <col:17, col:24>
|   | | |   |   `-IntegerLiteral 0x19558849438 <col:24> 'int' 0
|   | | |   `-BinaryOperator 0x19558849530 <line:2529:13, col:28> 'int' '='
|   | | |     |-MemberExpr 0x195588494d8 <col:13, col:19> 'int' lvalue ->iv_set 0x19558798aa8
|   | | |     | `-ImplicitCastExpr 0x195588494c0 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x195588494a0 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558846820 'octx' 'EVP_AES_OCB_CTX *'
|   | | |     `-IntegerLiteral 0x19558849508 <col:28> 'int' 1
|   | | `-BinaryOperator 0x19558849618 <line:2531:9, col:25> 'int' '='
|   | |   |-MemberExpr 0x195588495c0 <col:9, col:15> 'int' lvalue ->key_set 0x19558798a38
|   | |   | `-ImplicitCastExpr 0x195588495a8 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x19558849588 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558846820 'octx' 'EVP_AES_OCB_CTX *'
|   | |   `-IntegerLiteral 0x195588495f0 <col:25> 'int' 1
|   | `-CompoundStmt 0x19558849b48 <line:2532:12, line:2539:5>
|   |   |-IfStmt 0x19558849a70 <line:2534:9, line:2537:45> has_else
|   |   | |-ImplicitCastExpr 0x195588496d0 <line:2534:13, col:19> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x195588496a0 <col:13, col:19> 'int' lvalue ->key_set 0x19558798a38
|   |   | |   `-ImplicitCastExpr 0x19558849688 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x19558849668 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558846820 'octx' 'EVP_AES_OCB_CTX *'
|   |   | |-NullStmt 0x19558849a68 <line:2535:13>
|   |   | `-CallExpr 0x195588499a0 <line:2537:13, col:45> 'void *'
|   |   |   |-ImplicitCastExpr 0x19558849988 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x19558849830 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   |-ImplicitCastExpr 0x195588499f0 <col:20, col:26> 'void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x195588499d8 <col:20, col:26> 'unsigned char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x19558849888 <col:20, col:26> 'unsigned char *' lvalue ->iv 0x19558793b48
|   |   |   |     `-ImplicitCastExpr 0x19558849870 <col:20> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x19558849850 <col:20> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558846820 'octx' 'EVP_AES_OCB_CTX *'
|   |   |   |-ImplicitCastExpr 0x19558849a20 <col:30> 'const void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x19558849a08 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x195588498b8 <col:30> 'const unsigned char *' lvalue ParmVar 0x19558846608 'iv' 'const unsigned char *'
|   |   |   `-ImplicitCastExpr 0x19558849a50 <col:34, col:40> 'unsigned long long' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x19558849a38 <col:34, col:40> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x19558849910 <col:34, col:40> 'int' lvalue ->ivlen 0x19558793ed8
|   |   |         `-ImplicitCastExpr 0x195588498f8 <col:34> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x195588498d8 <col:34> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558846820 'octx' 'EVP_AES_OCB_CTX *'
|   |   `-BinaryOperator 0x19558849b28 <line:2538:9, col:24> 'int' '='
|   |     |-MemberExpr 0x19558849ad0 <col:9, col:15> 'int' lvalue ->iv_set 0x19558798aa8
|   |     | `-ImplicitCastExpr 0x19558849ab8 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x19558849a98 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x19558846820 'octx' 'EVP_AES_OCB_CTX *'
|   |     `-IntegerLiteral 0x19558849b00 <col:24> 'int' 1
|   `-ReturnStmt 0x19558849bb8 <line:2540:5, col:12>
|     `-IntegerLiteral 0x19558849b90 <col:12> 'int' 1
|-FunctionDecl 0x19558849e38 <line:2543:1, line:2690:1> line:2543:12 invalid aes_ocb_cipher 'int (int *, unsigned char *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x19558849c10 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x19558849c90 <col:48, col:63> col:63 used out 'unsigned char *'
| |-ParmVarDecl 0x19558849d10 <line:2544:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x19558849d88 <col:52, col:59> col:59 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x19558853200 <line:2545:1, line:2690:1>
|   |-DeclStmt 0x19558849f90 <line:2546:5, col:23>
|   | `-VarDecl 0x19558849f28 <col:5, col:20> col:20 used buf 'unsigned char *'
|   |-DeclStmt 0x1955884a028 <line:2547:5, col:17>
|   | `-VarDecl 0x19558849fc0 <col:5, col:10> col:10 used buf_len 'int *'
|   |-DeclStmt 0x1955884e170 <line:2548:5, col:24>
|   | `-VarDecl 0x1955884e0e0 <col:5, col:23> col:9 used written_len 'int' cinit
|   |   `-IntegerLiteral 0x1955884e148 <col:23> 'int' 0
|   |-DeclStmt 0x1955884e200 <line:2549:5, col:24>
|   | `-VarDecl 0x1955884e198 <col:5, col:12> col:12 used trailing_len 'size_t':'unsigned long long'
|   |-DeclStmt 0x1955884e2b0 <line:2550:5, col:60>
|   | `-VarDecl 0x1955884e228 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   |-IfStmt 0x1955884e3c8 <line:2553:5, line:2554:17>
|   | |-UnaryOperator 0x1955884e360 <line:2553:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1955884e348 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1955884e318 <col:10, col:16> 'int' lvalue ->iv_set 0x19558798aa8
|   | |     `-ImplicitCastExpr 0x1955884e300 <col:10> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1955884e2c8 <col:10> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|   | `-ReturnStmt 0x1955884e3b8 <line:2554:9, col:17>
|   |   `-UnaryOperator 0x1955884e3a0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1955884e378 <col:17> 'int' 1
|   |-IfStmt 0x1955884e4c8 <line:2556:5, line:2557:17>
|   | |-UnaryOperator 0x1955884e460 <line:2556:9, col:16> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1955884e448 <col:10, col:16> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1955884e418 <col:10, col:16> 'int' lvalue ->key_set 0x19558798a38
|   | |     `-ImplicitCastExpr 0x1955884e400 <col:10> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1955884e3e0 <col:10> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|   | `-ReturnStmt 0x1955884e4b8 <line:2557:9, col:17>
|   |   `-UnaryOperator 0x1955884e4a0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1955884e478 <col:17> 'int' 1
|   `-IfStmt 0x195588531d8 <line:2559:5, line:2689:5> has_else
|     |-BinaryOperator 0x1955884e5d0 <line:2559:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|     | |-ImplicitCastExpr 0x1955884e5a0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2559:9> 'const unsigned char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1955884e4e0 <col:9> 'const unsigned char *' lvalue ParmVar 0x19558849d10 'in' 'const unsigned char *'
|     | `-ImplicitCastExpr 0x1955884e5b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|     |   `-ParenExpr 0x1955884e580 <col:17, col:27> 'void *'
|     |     `-CStyleCastExpr 0x1955884e558 <col:18, col:26> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0x1955884e518 <col:26> 'int' 0
|     |-CompoundStmt 0x1955884fe40 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2559:21, line:2649:5>
|     | |-IfStmt 0x1955884ed68 <line:2568:9, line:2579:9> has_else
|     | | |-BinaryOperator 0x1955884e6e0 <line:2568:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | | | |-ImplicitCastExpr 0x1955884e6b0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2568:13> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1955884e5f0 <col:13> 'unsigned char *' lvalue ParmVar 0x19558849c90 'out' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x1955884e6c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | | |   `-ParenExpr 0x1955884e690 <col:17, col:27> 'void *'
|     | | |     `-CStyleCastExpr 0x1955884e668 <col:18, col:26> 'void *' <NullToPointer>
|     | | |       `-IntegerLiteral 0x1955884e628 <col:26> 'int' 0
|     | | |-CompoundStmt 0x1955884e8d0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2568:26, line:2571:9>
|     | | | |-BinaryOperator 0x1955884e7b8 <line:2569:13, col:25> 'unsigned char *' '='
|     | | | | |-DeclRefExpr 0x1955884e700 <col:13> 'unsigned char *' lvalue Var 0x19558849f28 'buf' 'unsigned char *'
|     | | | | `-ImplicitCastExpr 0x1955884e7a0 <col:19, col:25> 'unsigned char *' <ArrayToPointerDecay>
|     | | | |   `-MemberExpr 0x1955884e770 <col:19, col:25> 'unsigned char [16]' lvalue ->aad_buf 0x19558793d88
|     | | | |     `-ImplicitCastExpr 0x1955884e758 <col:19> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | | | |       `-DeclRefExpr 0x1955884e738 <col:19> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|     | | | `-BinaryOperator 0x1955884e8b0 <line:2570:13, col:42> 'int *' '='
|     | | |   |-DeclRefExpr 0x1955884e7d8 <col:13> 'int *' lvalue Var 0x19558849fc0 'buf_len' 'int *'
|     | | |   `-UnaryOperator 0x1955884e898 <col:23, col:42> 'int *' prefix '&' cannot overflow
|     | | |     `-ParenExpr 0x1955884e878 <col:24, col:42> 'int' lvalue
|     | | |       `-MemberExpr 0x1955884e848 <col:25, col:31> 'int' lvalue ->aad_buf_len 0x19558793e68
|     | | |         `-ImplicitCastExpr 0x1955884e830 <col:25> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | | |           `-DeclRefExpr 0x1955884e810 <col:25> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|     | | `-CompoundStmt 0x1955884ed40 <line:2571:16, line:2579:9>
|     | |   |-BinaryOperator 0x1955884e990 <line:2572:13, col:25> 'unsigned char *' '='
|     | |   | |-DeclRefExpr 0x1955884e8f0 <col:13> 'unsigned char *' lvalue Var 0x19558849f28 'buf' 'unsigned char *'
|     | |   | `-ImplicitCastExpr 0x1955884e978 <col:19, col:25> 'unsigned char *' <ArrayToPointerDecay>
|     | |   |   `-MemberExpr 0x1955884e948 <col:19, col:25> 'unsigned char [16]' lvalue ->data_buf 0x19558793cc8
|     | |   |     `-ImplicitCastExpr 0x1955884e930 <col:19> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | |   |       `-DeclRefExpr 0x1955884e910 <col:19> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|     | |   |-BinaryOperator 0x1955884ea70 <line:2573:13, col:43> 'int *' '='
|     | |   | |-DeclRefExpr 0x1955884e9b0 <col:13> 'int *' lvalue Var 0x19558849fc0 'buf_len' 'int *'
|     | |   | `-UnaryOperator 0x1955884ea58 <col:23, col:43> 'int *' prefix '&' cannot overflow
|     | |   |   `-ParenExpr 0x1955884ea38 <col:24, col:43> 'int' lvalue
|     | |   |     `-MemberExpr 0x1955884ea08 <col:25, col:31> 'int' lvalue ->data_buf_len 0x19558793df8
|     | |   |       `-ImplicitCastExpr 0x1955884e9f0 <col:25> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|     | |   |         `-DeclRefExpr 0x1955884e9d0 <col:25> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|     | |   `-IfStmt 0x1955884ed28 <line:2575:13, line:2578:13>
|     | |     |-CallExpr 0x1955884ec08 <line:2575:17, col:65> 'int'
|     | |     | |-ImplicitCastExpr 0x1955884ebf0 <col:17> 'int (*)(const void *, const void *, int)' <FunctionToPointerDecay>
|     | |     | | `-DeclRefExpr 0x1955884ea90 <col:17> 'int (const void *, const void *, int)' Function 0x195587962e0 'is_partially_overlapping' 'int (const void *, const void *, int)'
|     | |     | |-ImplicitCastExpr 0x1955884ec40 <col:42, col:49> 'const void *' <BitCast>
|     | |     | | `-BinaryOperator 0x1955884eb78 <col:42, col:49> 'unsigned char *' '+'
|     | |     | |   |-ImplicitCastExpr 0x1955884eb48 <col:42> 'unsigned char *' <LValueToRValue>
|     | |     | |   | `-DeclRefExpr 0x1955884eab0 <col:42> 'unsigned char *' lvalue ParmVar 0x19558849c90 'out' 'unsigned char *'
|     | |     | |   `-ImplicitCastExpr 0x1955884eb60 <col:48, col:49> 'int' <LValueToRValue>
|     | |     | |     `-UnaryOperator 0x1955884eb30 <col:48, col:49> 'int' lvalue prefix '*' cannot overflow
|     | |     | |       `-ImplicitCastExpr 0x1955884eb18 <col:49> 'int *' <LValueToRValue>
|     | |     | |         `-DeclRefExpr 0x1955884eaf8 <col:49> 'int *' lvalue Var 0x19558849fc0 'buf_len' 'int *'
|     | |     | |-ImplicitCastExpr 0x1955884ec70 <col:58> 'const void *' <BitCast>
|     | |     | | `-ImplicitCastExpr 0x1955884ec58 <col:58> 'const unsigned char *' <LValueToRValue>
|     | |     | |   `-DeclRefExpr 0x1955884eb98 <col:58> 'const unsigned char *' lvalue ParmVar 0x19558849d10 'in' 'const unsigned char *'
|     | |     | `-ImplicitCastExpr 0x1955884eca0 <col:62> 'int' <IntegralCast>
|     | |     |   `-ImplicitCastExpr 0x1955884ec88 <col:62> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     |     `-DeclRefExpr 0x1955884ebb8 <col:62> 'size_t':'unsigned long long' lvalue ParmVar 0x19558849d88 'len' 'size_t':'unsigned long long'
|     | |     `-CompoundStmt 0x1955884ed10 <col:68, line:2578:13>
|     | |       `-ReturnStmt 0x1955884ed00 <line:2577:17, col:24>
|     | |         `-IntegerLiteral 0x1955884ecd8 <col:24> 'int' 0
|     | |-IfStmt 0x1955884f138 <line:2585:9, line:2617:9>
|     | | |-BinaryOperator 0x1955884ee20 <line:2585:13, col:24> 'int' '>'
|     | | | |-ImplicitCastExpr 0x1955884ee08 <col:13, col:14> 'int' <LValueToRValue>
|     | | | | `-UnaryOperator 0x1955884edc8 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|     | | | |   `-ImplicitCastExpr 0x1955884edb0 <col:14> 'int *' <LValueToRValue>
|     | | | |     `-DeclRefExpr 0x1955884ed90 <col:14> 'int *' lvalue Var 0x19558849fc0 'buf_len' 'int *'
|     | | | `-IntegerLiteral 0x1955884ede0 <col:24> 'int' 0
|     | | `-CompoundStmt 0x1955884f0f0 <col:27, line:2617:9>
|     | |   |-DeclStmt 0x1955884eec0 <line:2586:13, col:35>
|     | |   | `-VarDecl 0x1955884ee58 <col:13, col:26> col:26 used remaining 'unsigned int'
|     | |   |-IfStmt 0x1955884d378 <line:2589:13, line:2593:13>
|     | |   | |-BinaryOperator 0x1955884f008 <line:2589:17, col:29> 'int' '>'
|     | |   | | |-ImplicitCastExpr 0x1955884eff0 <col:17> 'unsigned long long' <IntegralCast>
|     | |   | | | `-ImplicitCastExpr 0x1955884efc0 <col:17> 'unsigned int' <LValueToRValue>
|     | |   | | |   `-DeclRefExpr 0x1955884ef80 <col:17> 'unsigned int' lvalue Var 0x1955884ee58 'remaining' 'unsigned int'
|     | |   | | `-ImplicitCastExpr 0x1955884efd8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x1955884efa0 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x19558849d88 'len' 'size_t':'unsigned long long'
|     | |   | `-CompoundStmt 0x1955884d350 <col:34, line:2593:13>
|     | |   |   |-CallExpr 0x1955884d1a8 <line:2590:17, col:49> 'void *'
|     | |   |   | |-ImplicitCastExpr 0x1955884d190 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | |   |   | | `-DeclRefExpr 0x1955884f028 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |   |   | |-ImplicitCastExpr 0x1955884d1e0 <col:24, col:39> 'void *' <BitCast>
|     | |   |   | | `-BinaryOperator 0x1955884d100 <col:24, col:39> 'unsigned char *' '+'
|     | |   |   | |   |-ImplicitCastExpr 0x1955884d0d0 <col:24> 'unsigned char *' <LValueToRValue>
|     | |   |   | |   | `-DeclRefExpr 0x1955884f048 <col:24> 'unsigned char *' lvalue Var 0x19558849f28 'buf' 'unsigned char *'
|     | |   |   | |   `-ImplicitCastExpr 0x1955884d0e8 <col:30, col:39> 'int' <LValueToRValue>
|     | |   |   | |     `-ParenExpr 0x1955884f0b8 <col:30, col:39> 'int' lvalue
|     | |   |   | |       `-UnaryOperator 0x1955884f0a0 <col:31, col:32> 'int' lvalue prefix '*' cannot overflow
|     | |   |   | |         `-ImplicitCastExpr 0x1955884f088 <col:32> 'int *' <LValueToRValue>
|     | |   |   | |           `-DeclRefExpr 0x1955884f068 <col:32> 'int *' lvalue Var 0x19558849fc0 'buf_len' 'int *'
|     | |   |   | |-ImplicitCastExpr 0x1955884d210 <col:42> 'const void *' <BitCast>
|     | |   |   | | `-ImplicitCastExpr 0x1955884d1f8 <col:42> 'const unsigned char *' <LValueToRValue>
|     | |   |   | |   `-DeclRefExpr 0x1955884d120 <col:42> 'const unsigned char *' lvalue ParmVar 0x19558849d10 'in' 'const unsigned char *'
|     | |   |   | `-ImplicitCastExpr 0x1955884d228 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   |   `-DeclRefExpr 0x1955884d140 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x19558849d88 'len' 'size_t':'unsigned long long'
|     | |   |   |-CompoundAssignOperator 0x1955884d2e8 <line:2591:17, col:31> 'int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   |   | |-UnaryOperator 0x1955884d298 <col:17, col:26> 'int' lvalue prefix '*' cannot overflow
|     | |   |   | | `-ImplicitCastExpr 0x1955884d280 <col:18, col:26> 'int *' <LValueToRValue>
|     | |   |   | |   `-ParenExpr 0x1955884d260 <col:18, col:26> 'int *' lvalue
|     | |   |   | |     `-DeclRefExpr 0x1955884d240 <col:19> 'int *' lvalue Var 0x19558849fc0 'buf_len' 'int *'
|     | |   |   | `-ImplicitCastExpr 0x1955884d2d0 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   |   `-DeclRefExpr 0x1955884d2b0 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x19558849d88 'len' 'size_t':'unsigned long long'
|     | |   |   `-ReturnStmt 0x1955884d340 <line:2592:17, col:24>
|     | |   |     `-IntegerLiteral 0x1955884d318 <col:24> 'int' 0
|     | |   |-CallExpr 0x1955884d518 <line:2594:13, col:51> 'void *'
|     | |   | |-ImplicitCastExpr 0x1955884d500 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | |   | | `-DeclRefExpr 0x1955884d390 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |   | |-ImplicitCastExpr 0x1955884d550 <col:20, col:35> 'void *' <BitCast>
|     | |   | | `-BinaryOperator 0x1955884d470 <col:20, col:35> 'unsigned char *' '+'
|     | |   | |   |-ImplicitCastExpr 0x1955884d440 <col:20> 'unsigned char *' <LValueToRValue>
|     | |   | |   | `-DeclRefExpr 0x1955884d3b0 <col:20> 'unsigned char *' lvalue Var 0x19558849f28 'buf' 'unsigned char *'
|     | |   | |   `-ImplicitCastExpr 0x1955884d458 <col:26, col:35> 'int' <LValueToRValue>
|     | |   | |     `-ParenExpr 0x1955884d420 <col:26, col:35> 'int' lvalue
|     | |   | |       `-UnaryOperator 0x1955884d408 <col:27, col:28> 'int' lvalue prefix '*' cannot overflow
|     | |   | |         `-ImplicitCastExpr 0x1955884d3f0 <col:28> 'int *' <LValueToRValue>
|     | |   | |           `-DeclRefExpr 0x1955884d3d0 <col:28> 'int *' lvalue Var 0x19558849fc0 'buf_len' 'int *'
|     | |   | |-ImplicitCastExpr 0x1955884d580 <col:38> 'const void *' <BitCast>
|     | |   | | `-ImplicitCastExpr 0x1955884d568 <col:38> 'const unsigned char *' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x1955884d490 <col:38> 'const unsigned char *' lvalue ParmVar 0x19558849d10 'in' 'const unsigned char *'
|     | |   | `-ImplicitCastExpr 0x1955884d5b0 <col:42> 'unsigned long long' <IntegralCast>
|     | |   |   `-ImplicitCastExpr 0x1955884d598 <col:42> 'unsigned int' <LValueToRValue>
|     | |   |     `-DeclRefExpr 0x1955884d4b0 <col:42> 'unsigned int' lvalue Var 0x1955884ee58 'remaining' 'unsigned int'
|     | |   |-CompoundAssignOperator 0x1955884d638 <line:2599:13, col:20> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-DeclRefExpr 0x1955884d5c8 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x19558849d88 'len' 'size_t':'unsigned long long'
|     | |   | `-ImplicitCastExpr 0x1955884d620 <col:20> 'unsigned long long' <IntegralCast>
|     | |   |   `-ImplicitCastExpr 0x1955884d608 <col:20> 'unsigned int' <LValueToRValue>
|     | |   |     `-DeclRefExpr 0x1955884d5e8 <col:20> 'unsigned int' lvalue Var 0x1955884ee58 'remaining' 'unsigned int'
|     | |   |-CompoundAssignOperator 0x1955884d6c0 <line:2600:13, col:19> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|     | |   | |-DeclRefExpr 0x1955884d668 <col:13> 'const unsigned char *' lvalue ParmVar 0x19558849d10 'in' 'const unsigned char *'
|     | |   | `-ImplicitCastExpr 0x1955884d6a8 <col:19> 'unsigned int' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x1955884d688 <col:19> 'unsigned int' lvalue Var 0x1955884ee58 'remaining' 'unsigned int'
|     | |   |-IfStmt 0x1955884de88 <line:2601:13, line:2612:13> has_else
|     | |   | |-BinaryOperator 0x1955884d7c8 <line:2601:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x1955884d798 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2601:17> 'unsigned char *' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x1955884d6f0 <col:17> 'unsigned char *' lvalue ParmVar 0x19558849c90 'out' 'unsigned char *'
|     | |   | | `-ImplicitCastExpr 0x1955884d7b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | |   | |   `-ParenExpr 0x1955884d778 <col:17, col:27> 'void *'
|     | |   | |     `-CStyleCastExpr 0x1955884d750 <col:18, col:26> 'void *' <NullToPointer>
|     | |   | |       `-IntegerLiteral 0x1955884d710 <col:26> 'int' 0
|     | |   | |-CompoundStmt 0x1955884d9d0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2601:30, line:2604:13>
|     | |   | | `-IfStmt 0x1955884d9b8 <line:2602:17, line:2603:29>
|     | |   | |   |-OpaqueValueExpr 0x1955884d9a0 <<invalid sloc>> '_Bool'
|     | |   | |   `-ReturnStmt 0x1955884d990 <col:21, col:29>
|     | |   | |     `-UnaryOperator 0x1955884d978 <col:28, col:29> 'int' prefix '-'
|     | |   | |       `-IntegerLiteral 0x1955884d950 <col:29> 'int' 1
|     | |   | `-IfStmt 0x1955884de60 <line:2604:20, line:2612:13> has_else
|     | |   |   |-OpaqueValueExpr 0x1955884de48 <<invalid sloc>> '_Bool'
|     | |   |   |-CompoundStmt 0x1955884dc10 <line:2604:56, line:2608:13>
|     | |   |   | `-IfStmt 0x1955884dbf8 <line:2605:17, line:2607:29>
|     | |   |   |   |-OpaqueValueExpr 0x1955884dbe0 <<invalid sloc>> '_Bool'
|     | |   |   |   `-ReturnStmt 0x1955884dbd0 <col:21, col:29>
|     | |   |   |     `-UnaryOperator 0x1955884dbb8 <col:28, col:29> 'int' prefix '-'
|     | |   |   |       `-IntegerLiteral 0x1955884db90 <col:29> 'int' 1
|     | |   |   `-CompoundStmt 0x1955884de30 <line:2608:20, line:2612:13>
|     | |   |     `-IfStmt 0x1955884de18 <line:2609:17, line:2611:29>
|     | |   |       |-OpaqueValueExpr 0x1955884de00 <<invalid sloc>> '_Bool'
|     | |   |       `-ReturnStmt 0x1955884ddf0 <col:21, col:29>
|     | |   |         `-UnaryOperator 0x1955884ddd8 <col:28, col:29> 'int' prefix '-'
|     | |   |           `-IntegerLiteral 0x1955884ddb0 <col:29> 'int' 1
|     | |   `-BinaryOperator 0x1955884df60 <line:2614:13, col:24> 'int' '='
|     | |     |-UnaryOperator 0x1955884df20 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|     | |     | `-ImplicitCastExpr 0x1955884df08 <col:14> 'int *' <LValueToRValue>
|     | |     |   `-DeclRefExpr 0x1955884dee8 <col:14> 'int *' lvalue Var 0x19558849fc0 'buf_len' 'int *'
|     | |     `-IntegerLiteral 0x1955884df38 <col:24> 'int' 0
|     | |-IfStmt 0x1955884fac0 <line:2625:9, line:2640:9>
|     | | |-BinaryOperator 0x1955884f218 <line:2625:13, col:20> 'int' '!='
|     | | | |-ImplicitCastExpr 0x1955884f1e8 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1955884f1a8 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x19558849d88 'len' 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x1955884f200 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1955884f1c8 <col:20> 'size_t':'unsigned long long' lvalue Var 0x1955884e198 'trailing_len' 'size_t':'unsigned long long'
|     | | `-CompoundStmt 0x1955884fa98 <col:34, line:2640:9>
|     | |   |-IfStmt 0x1955884f8b0 <line:2626:13, line:2637:13> has_else
|     | |   | |-BinaryOperator 0x1955884f310 <line:2626:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x1955884f2e0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2626:17> 'unsigned char *' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x1955884f238 <col:17> 'unsigned char *' lvalue ParmVar 0x19558849c90 'out' 'unsigned char *'
|     | |   | | `-ImplicitCastExpr 0x1955884f2f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|     | |   | |   `-ParenExpr 0x1955884f2c0 <col:17, col:27> 'void *'
|     | |   | |     `-CStyleCastExpr 0x1955884f298 <col:18, col:26> 'void *' <NullToPointer>
|     | |   | |       `-IntegerLiteral 0x1955884f258 <col:26> 'int' 0
|     | |   | |-CompoundStmt 0x1955884f4b8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:2626:30, line:2629:13>
|     | |   | | `-IfStmt 0x1955884f4a0 <line:2627:17, line:2628:29>
|     | |   | |   |-OpaqueValueExpr 0x1955884f488 <<invalid sloc>> '_Bool'
|     | |   | |   `-ReturnStmt 0x1955884f478 <col:21, col:29>
|     | |   | |     `-UnaryOperator 0x1955884f460 <col:28, col:29> 'int' prefix '-'
|     | |   | |       `-IntegerLiteral 0x1955884f438 <col:29> 'int' 1
|     | |   | `-IfStmt 0x1955884f888 <line:2629:20, line:2637:13> has_else
|     | |   |   |-OpaqueValueExpr 0x1955884f870 <<invalid sloc>> '_Bool'
|     | |   |   |-CompoundStmt 0x1955884f698 <line:2629:56, line:2633:13>
|     | |   |   | `-IfStmt 0x1955884f680 <line:2630:17, line:2632:29>
|     | |   |   |   |-OpaqueValueExpr 0x1955884f668 <<invalid sloc>> '_Bool'
|     | |   |   |   `-ReturnStmt 0x1955884f658 <col:21, col:29>
|     | |   |   |     `-UnaryOperator 0x1955884f640 <col:28, col:29> 'int' prefix '-'
|     | |   |   |       `-IntegerLiteral 0x1955884f618 <col:29> 'int' 1
|     | |   |   `-CompoundStmt 0x1955884f858 <line:2633:20, line:2637:13>
|     | |   |     `-IfStmt 0x1955884f840 <line:2634:17, line:2636:29>
|     | |   |       |-OpaqueValueExpr 0x1955884f828 <<invalid sloc>> '_Bool'
|     | |   |       `-ReturnStmt 0x1955884f818 <col:21, col:29>
|     | |   |         `-UnaryOperator 0x1955884f800 <col:28, col:29> 'int' prefix '-'
|     | |   |           `-IntegerLiteral 0x1955884f7d8 <col:29> 'int' 1
|     | |   |-CompoundAssignOperator 0x1955884f988 <line:2638:13, col:34> 'int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-DeclRefExpr 0x1955884f8d8 <col:13> 'int' lvalue Var 0x1955884e0e0 'written_len' 'int'
|     | |   | `-BinaryOperator 0x1955884f968 <col:28, col:34> 'unsigned long long' '-'
|     | |   |   |-ImplicitCastExpr 0x1955884f938 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   | `-DeclRefExpr 0x1955884f8f8 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x19558849d88 'len' 'size_t':'unsigned long long'
|     | |   |   `-ImplicitCastExpr 0x1955884f950 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |     `-DeclRefExpr 0x1955884f918 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1955884e198 'trailing_len' 'size_t':'unsigned long long'
|     | |   `-CompoundAssignOperator 0x1955884fa68 <line:2639:13, col:25> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|     | |     |-DeclRefExpr 0x1955884f9b8 <col:13> 'const unsigned char *' lvalue ParmVar 0x19558849d10 'in' 'const unsigned char *'
|     | |     `-BinaryOperator 0x1955884fa48 <col:19, col:25> 'unsigned long long' '-'
|     | |       |-ImplicitCastExpr 0x1955884fa18 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x1955884f9d8 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x19558849d88 'len' 'size_t':'unsigned long long'
|     | |       `-ImplicitCastExpr 0x1955884fa30 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|     | |         `-DeclRefExpr 0x1955884f9f8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1955884e198 'trailing_len' 'size_t':'unsigned long long'
|     | |-IfStmt 0x1955884fde0 <line:2643:9, line:2646:9>
|     | | |-BinaryOperator 0x1955884fb50 <line:2643:13, col:28> 'int' '>'
|     | | | |-ImplicitCastExpr 0x1955884fb20 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1955884fad8 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1955884e198 'trailing_len' 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x1955884fb38 <col:28> 'unsigned long long' <IntegralCast>
|     | | |   `-IntegerLiteral 0x1955884faf8 <col:28> 'int' 0
|     | | `-CompoundStmt 0x1955884fdc0 <col:31, line:2646:9>
|     | |   |-CallExpr 0x1955884fc50 <line:2644:13, col:41> 'void *'
|     | |   | |-ImplicitCastExpr 0x1955884fc38 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | |   | | `-DeclRefExpr 0x1955884fb70 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x19558744fe8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |   | |-ImplicitCastExpr 0x1955884fca0 <col:20> 'void *' <BitCast>
|     | |   | | `-ImplicitCastExpr 0x1955884fc88 <col:20> 'unsigned char *' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x1955884fb90 <col:20> 'unsigned char *' lvalue Var 0x19558849f28 'buf' 'unsigned char *'
|     | |   | |-ImplicitCastExpr 0x1955884fcd0 <col:25> 'const void *' <BitCast>
|     | |   | | `-ImplicitCastExpr 0x1955884fcb8 <col:25> 'const unsigned char *' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x1955884fbb0 <col:25> 'const unsigned char *' lvalue ParmVar 0x19558849d10 'in' 'const unsigned char *'
|     | |   | `-ImplicitCastExpr 0x1955884fce8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x1955884fbd0 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1955884e198 'trailing_len' 'size_t':'unsigned long long'
|     | |   `-BinaryOperator 0x1955884fda0 <line:2645:13, col:24> 'int' '='
|     | |     |-UnaryOperator 0x1955884fd38 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|     | |     | `-ImplicitCastExpr 0x1955884fd20 <col:14> 'int *' <LValueToRValue>
|     | |     |   `-DeclRefExpr 0x1955884fd00 <col:14> 'int *' lvalue Var 0x19558849fc0 'buf_len' 'int *'
|     | |     `-ImplicitCastExpr 0x1955884fd88 <col:24> 'int' <IntegralCast>
|     | |       `-ImplicitCastExpr 0x1955884fd70 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |         `-DeclRefExpr 0x1955884fd50 <col:24> 'size_t':'unsigned long long' lvalue Var 0x1955884e198 'trailing_len' 'size_t':'unsigned long long'
|     | `-ReturnStmt 0x1955884fe30 <line:2648:9, col:16>
|     |   `-ImplicitCastExpr 0x1955884fe18 <col:16> 'int' <LValueToRValue>
|     |     `-DeclRefExpr 0x1955884fdf8 <col:16> 'int' lvalue Var 0x1955884e0e0 'written_len' 'int'
|     `-CompoundStmt 0x19558853198 <line:2649:12, line:2689:5>
|       |-IfStmt 0x19558848490 <line:2654:9, line:2666:9>
|       | |-BinaryOperator 0x1955884ff20 <line:2654:13, col:34> 'int' '>'
|       | | |-ImplicitCastExpr 0x1955884ff08 <col:13, col:19> 'int' <LValueToRValue>
|       | | | `-MemberExpr 0x1955884feb0 <col:13, col:19> 'int' lvalue ->data_buf_len 0x19558793df8
|       | | |   `-ImplicitCastExpr 0x1955884fe98 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | | |     `-DeclRefExpr 0x1955884fe78 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|       | | `-IntegerLiteral 0x1955884fee0 <col:34> 'int' 0
|       | `-CompoundStmt 0x19558848468 <col:37, line:2666:9>
|       |   |-IfStmt 0x195588482d0 <line:2655:13, line:2663:13> has_else
|       |   | |-OpaqueValueExpr 0x195588482b8 <<invalid sloc>> '_Bool'
|       |   | |-CompoundStmt 0x195588480c0 <line:2655:49, line:2659:13>
|       |   | | `-IfStmt 0x195588480a8 <line:2656:17, line:2658:29>
|       |   | |   |-OpaqueValueExpr 0x19558848090 <<invalid sloc>> '_Bool'
|       |   | |   `-ReturnStmt 0x19558848080 <col:21, col:29>
|       |   | |     `-UnaryOperator 0x195588500d0 <col:28, col:29> 'int' prefix '-'
|       |   | |       `-IntegerLiteral 0x195588500a8 <col:29> 'int' 1
|       |   | `-CompoundStmt 0x195588482a0 <line:2659:20, line:2663:13>
|       |   |   `-IfStmt 0x19558848288 <line:2660:17, line:2662:29>
|       |   |     |-OpaqueValueExpr 0x19558848270 <<invalid sloc>> '_Bool'
|       |   |     `-ReturnStmt 0x19558848260 <col:21, col:29>
|       |   |       `-UnaryOperator 0x19558848248 <col:28, col:29> 'int' prefix '-'
|       |   |         `-IntegerLiteral 0x19558848220 <col:29> 'int' 1
|       |   |-BinaryOperator 0x19558848398 <line:2664:13, col:33> 'int' '='
|       |   | |-DeclRefExpr 0x195588482f8 <col:13> 'int' lvalue Var 0x1955884e0e0 'written_len' 'int'
|       |   | `-ImplicitCastExpr 0x19558848380 <col:27, col:33> 'int' <LValueToRValue>
|       |   |   `-MemberExpr 0x19558848350 <col:27, col:33> 'int' lvalue ->data_buf_len 0x19558793df8
|       |   |     `-ImplicitCastExpr 0x19558848338 <col:27> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   |       `-DeclRefExpr 0x19558848318 <col:27> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|       |   `-BinaryOperator 0x19558848448 <line:2665:13, col:34> 'int' '='
|       |     |-MemberExpr 0x195588483f0 <col:13, col:19> 'int' lvalue ->data_buf_len 0x19558793df8
|       |     | `-ImplicitCastExpr 0x195588483d8 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x195588483b8 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|       |     `-IntegerLiteral 0x19558848420 <col:34> 'int' 0
|       |-IfStmt 0x195588487e8 <line:2667:9, line:2672:9>
|       | |-BinaryOperator 0x19558848550 <line:2667:13, col:33> 'int' '>'
|       | | |-ImplicitCastExpr 0x19558848538 <col:13, col:19> 'int' <LValueToRValue>
|       | | | `-MemberExpr 0x195588484e0 <col:13, col:19> 'int' lvalue ->aad_buf_len 0x19558793e68
|       | | |   `-ImplicitCastExpr 0x195588484c8 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | | |     `-DeclRefExpr 0x195588484a8 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|       | | `-IntegerLiteral 0x19558848510 <col:33> 'int' 0
|       | `-CompoundStmt 0x195588487c8 <col:36, line:2672:9>
|       |   |-IfStmt 0x19558848700 <line:2668:13, line:2670:25>
|       |   | |-OpaqueValueExpr 0x195588486e8 <<invalid sloc>> '_Bool'
|       |   | `-ReturnStmt 0x195588486d8 <col:17, col:25>
|       |   |   `-UnaryOperator 0x195588486c0 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x19558848698 <col:25> 'int' 1
|       |   `-BinaryOperator 0x195588487a8 <line:2671:13, col:33> 'int' '='
|       |     |-MemberExpr 0x19558848750 <col:13, col:19> 'int' lvalue ->aad_buf_len 0x19558793e68
|       |     | `-ImplicitCastExpr 0x19558848738 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x19558848718 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|       |     `-IntegerLiteral 0x19558848780 <col:33> 'int' 0
|       |-IfStmt 0x19558848d50 <line:2674:9, line:2682:9>
|       | |-OpaqueValueExpr 0x19558848d38 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x19558848d08 <line:2674:46, line:2682:9>
|       |   |-IfStmt 0x19558848938 <line:2675:13, line:2676:25>
|       |   | |-BinaryOperator 0x195588488c8 <line:2675:17, col:32> 'int' '<'
|       |   | | |-ImplicitCastExpr 0x195588488b0 <col:17, col:23> 'int' <LValueToRValue>
|       |   | | | `-MemberExpr 0x19558848858 <col:17, col:23> 'int' lvalue ->taglen 0x19558793f48
|       |   | | |   `-ImplicitCastExpr 0x19558848840 <col:17> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   | | |     `-DeclRefExpr 0x19558848820 <col:17> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|       |   | | `-IntegerLiteral 0x19558848888 <col:32> 'int' 0
|       |   | `-ReturnStmt 0x19558848928 <line:2676:17, col:25>
|       |   |   `-UnaryOperator 0x19558848910 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x195588488e8 <col:25> 'int' 1
|       |   |-IfStmt 0x19558848bf8 <line:2677:13, line:2679:25>
|       |   | |-OpaqueValueExpr 0x19558848be0 <<invalid sloc>> '_Bool'
|       |   | `-ReturnStmt 0x19558848bd0 <col:17, col:25>
|       |   |   `-UnaryOperator 0x19558848bb8 <col:24, col:25> 'int' prefix '-'
|       |   |     `-IntegerLiteral 0x19558848b90 <col:25> 'int' 1
|       |   |-BinaryOperator 0x19558848ca0 <line:2680:13, col:28> 'int' '='
|       |   | |-MemberExpr 0x19558848c48 <col:13, col:19> 'int' lvalue ->iv_set 0x19558798aa8
|       |   | | `-ImplicitCastExpr 0x19558848c30 <col:13> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x19558848c10 <col:13> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|       |   | `-IntegerLiteral 0x19558848c78 <col:28> 'int' 0
|       |   `-ReturnStmt 0x19558848cf8 <line:2681:13, col:20>
|       |     `-ImplicitCastExpr 0x19558848ce0 <col:20> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x19558848cc0 <col:20> 'int' lvalue Var 0x1955884e0e0 'written_len' 'int'
|       |-IfStmt 0x19558848fd0 <line:2684:9, line:2685:21>
|       | |-OpaqueValueExpr 0x19558848fb8 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x19558848fa8 <col:13, col:21>
|       |   `-UnaryOperator 0x19558848f90 <col:20, col:21> 'int' prefix '-'
|       |     `-IntegerLiteral 0x19558848f68 <col:21> 'int' 1
|       |-BinaryOperator 0x19558853130 <line:2687:9, col:24> 'int' '='
|       | |-MemberExpr 0x19558849020 <col:9, col:15> 'int' lvalue ->iv_set 0x19558798aa8
|       | | `-ImplicitCastExpr 0x19558849008 <col:9> 'EVP_AES_OCB_CTX *' <LValueToRValue>
|       | |   `-DeclRefExpr 0x19558848fe8 <col:9> 'EVP_AES_OCB_CTX *' lvalue Var 0x1955884e228 'octx' 'EVP_AES_OCB_CTX *'
|       | `-IntegerLiteral 0x19558849050 <col:24> 'int' 0
|       `-ReturnStmt 0x19558853188 <line:2688:9, col:16>
|         `-ImplicitCastExpr 0x19558853170 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x19558853150 <col:16> 'int' lvalue Var 0x1955884e0e0 'written_len' 'int'
|-FunctionDecl 0x19558853300 <line:2692:1, line:2697:1> line:2692:12 invalid aes_ocb_cleanup 'int (int *)' static
| |-ParmVarDecl 0x19558853268 <col:28, col:44> col:44 invalid c 'int *'
| `-CompoundStmt 0x19558853608 <line:2693:1, line:2697:1>
|   |-DeclStmt 0x19558853458 <line:2694:5, col:58>
|   | `-VarDecl 0x195588533d0 <col:5, col:22> col:22 used octx 'EVP_AES_OCB_CTX *'
|   `-ReturnStmt 0x195588535f8 <line:2696:5, col:12>
|     `-IntegerLiteral 0x195588535d0 <col:12> 'int' 1
|-VarDecl 0x19558853640 <line:967:74, <scratch space>:252:1> col:1 invalid aes_128_ocb 'const int' static
|-FunctionDecl 0x19558853a00 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:273:1 invalid EVP_aes_128_ocb 'const int *(void)'
| `-CompoundStmt 0x19558853ab8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x19558853ae0 <line:967:74, <scratch space>:279:1> col:1 invalid aes_192_ocb 'const int' static
|-FunctionDecl 0x19558853ea0 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:300:1 invalid EVP_aes_192_ocb 'const int *(void)'
| `-CompoundStmt 0x19558853f58 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
|-VarDecl 0x19558853f80 <line:967:74, <scratch space>:306:1> col:1 invalid aes_256_ocb 'const int' static
`-FunctionDecl 0x19558850310 <.//openssl//file_jk/after\crypto\evp\e_aes.c:976:45, line:978:34> <scratch space>:21:1 invalid EVP_aes_256_ocb 'const int *(void)'
  `-CompoundStmt 0x195588503c8 <.//openssl//file_jk/after\crypto\evp\e_aes.c:977:51, line:978:34>
