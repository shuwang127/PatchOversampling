TranslationUnitDecl 0x1b76fde3708 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1b76fde3fa0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1b76fde3ca0 '__int128'
|-TypedefDecl 0x1b76fde4010 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1b76fde3cc0 'unsigned __int128'
|-TypedefDecl 0x1b76fde4348 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1b76fde4100 'struct __NSConstantString_tag'
|   `-Record 0x1b76fde4068 '__NSConstantString_tag'
|-TypedefDecl 0x1b76fde43b8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1b76fde38e0 'unsigned long long'
|-TypedefDecl 0x1b76fde4450 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1b76fde4410 'char *'
|   `-BuiltinType 0x1b76fde37a0 'char'
|-TypedefDecl 0x1b76fde44c0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1b76fde4410 'char *'
|   `-BuiltinType 0x1b76fde37a0 'char'
|-TypedefDecl 0x1b76fde4580 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1b76fde38e0 'unsigned long long'
|-TypedefDecl 0x1b76fde45f0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1b76fde4410 'char *'
|   `-BuiltinType 0x1b76fde37a0 'char'
|-FunctionDecl 0x1b7718cf420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b7718cf4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1b7718cf530 <col:21> Implicit
|-FunctionDecl 0x1b7718cf588 prev 0x1b7718cf420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b7718cf2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1b7718cf678 <col:21> Inherited Implicit
|-TypedefDecl 0x1b7718cf6b8 prev 0x1b76fde43b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1b76fde38e0 'unsigned long long'
|-TypedefDecl 0x1b7718cf760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1b7718cf730 'size_t' sugar
|   |-Typedef 0x1b7718cf6b8 'size_t'
|   `-BuiltinType 0x1b76fde38e0 'unsigned long long'
|-TypedefDecl 0x1b7718cf7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1b76fde3840 'long long'
|-TypedefDecl 0x1b7718cf840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1b76fde3840 'long long'
|-TypedefDecl 0x1b7718cf8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1b76fde3880 'unsigned short'
|-TypedefDecl 0x1b7718cf920 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1b76fde3880 'unsigned short'
|-TypedefDecl 0x1b7718cf990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1b76fde3880 'unsigned short'
|-TypedefDecl 0x1b7718cfa00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1b76fde3800 'int'
|-TypedefDecl 0x1b7718cfa70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1b76fde3820 'long'
|-TypedefDecl 0x1b7718cfae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1b76fde3840 'long long'
|-TypedefDecl 0x1b7718cfb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1b7718cfb40 '__time64_t' sugar
|   |-Typedef 0x1b7718cfae0 '__time64_t'
|   `-BuiltinType 0x1b76fde3840 'long long'
|-FunctionDecl 0x1b7718cfce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1b7718cff08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1b771903f10 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1b7718d0048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1b7718d00c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1b7718d0138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1b7718d01b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1b771903cb0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1b771903ff0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1b7719040b0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1b771904220 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1b7719041d0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1b771904170 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1b771904090 'struct threadlocaleinfostruct'
|       `-Record 0x1b771912da0 'threadlocaleinfostruct'
|-TypedefDecl 0x1b771904330 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1b7719042e0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1b771904280 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1b771904150 'struct threadmbcinfostruct'
|       `-Record 0x1b7719040b0 'threadmbcinfostruct'
|-RecordDecl 0x1b771904388 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1b771904440 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1b771904500 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b771904590 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1b771904620 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1b7719046d8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1b771904680 'struct localeinfo_struct' sugar
|   `-RecordType 0x1b7719044e0 'struct localeinfo_struct'
|     `-Record 0x1b771904440 'localeinfo_struct'
|-TypedefDecl 0x1b7719047b0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1b771904760 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1b771904680 'struct localeinfo_struct' sugar
|     `-RecordType 0x1b7719044e0 'struct localeinfo_struct'
|       `-Record 0x1b771904440 'localeinfo_struct'
|-RecordDecl 0x1b771904828 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1b7719048e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b771904958 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1b771904a18 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1b771904ab0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1b771904b20 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1b771904bd8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1b771904b80 'struct localerefcount' sugar
|   `-RecordType 0x1b7719048c0 'struct localerefcount'
|     `-Record 0x1b771904828 'localerefcount'
|-RecordDecl 0x1b771912da0 prev 0x1b771903ff0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1b771912e20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b771912e98 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1b771912f08 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1b771912f78 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1b771912fe8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1b7719131a8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1b771913218 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1b771913288 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1b7719132f8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1b771913368 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1b7719133d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1b771913430 parent 0x1b76fde3708 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1b7719135c0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1b771913630 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1b7719136a0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1b771913710 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1b7719137b0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1b771913820 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1b771913930 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1b771913a68 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1b771913b18 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1b771913ac0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1b771904090 'struct threadlocaleinfostruct'
|     `-Record 0x1b771912da0 'threadlocaleinfostruct'
|-RecordDecl 0x1b771913bb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1b771913c70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b771913ce8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1b771913db0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1b771913e20 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1b771913e90 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1b771913f00 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1b771913f70 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1b771913fe0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1b771914050 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1b771914100 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1b7719140b0 'struct _iobuf' sugar
|   `-RecordType 0x1b771913c50 'struct _iobuf'
|     `-Record 0x1b771913bb0 '_iobuf'
|-FunctionDecl 0x1b771914338 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1b771914408 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1b76fde3840 'long long'
|-FunctionDecl 0x1b7719145e8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b771914470 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1b7719148e0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b7719146c0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1b771914738 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1b771914c90 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1b7719149c0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1b771914a40 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1b771914ac0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1b77191bfa0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1b77191be30 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1b77191c1d0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1b77191c090 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1b77191c380 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b77191c2a0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1b77191c570 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b77191c868 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1b77191c640 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1b77191c6c0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1b77191ca20 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b77191c940 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1b77191cbd0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b77191caf0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1b77191cd80 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b77191cca0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1b771917ef8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b771917e18 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1b771918088 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b7719183f0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1b771918150 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1b771918248 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1b7719187a8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1b7719184d0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1b771918550 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1b7719185c8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1b771918968 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b771918888 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1b771918c30 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1b771918a40 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1b771918ac0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1b771915dd0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b7719161c8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1b771916268 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b7719162d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b771916348 prev 0x1b7719161c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1b771915fa0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1b771916020 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1b7719163f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771916870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1b7719165a0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1b771916620 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1b7719166a0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1b771916b90 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1b771916c30 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1b771916c98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1b771916d10 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1b77191de50 prev 0x1b771916b90 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1b771916950 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1b7719169d0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1b77191df48 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1b77191e110 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1b77191df90 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1b77191e010 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1b77191e368 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b77191e1f0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1b77191e268 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1b77191e598 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1b77191e448 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1b77191e890 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1b77191e670 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1b77191e6e8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1b77191ed28 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1b77191edc8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b771916de0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1b771916e48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1b771916eb0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1b771916f38 prev 0x1b77191ed28 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1b77191e970 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1b77191e9e8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77191ea60 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b77191ead8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1b771917440 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1b771917028 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1b7719170a0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771917118 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771917190 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b771917208 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1b771917900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1b771917630 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1b7719176b0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1b771917728 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1b7719179b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77191ef08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1b771917b00 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1b771917b80 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1b771917c00 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1b771917c78 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1b77191f2b0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1b77191f350 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1b77191f3b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1b77191f430 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1b77191f498 prev 0x1b77191f2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1b77191f0e8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1b77191f168 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1b77191f678 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1b77191f548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77191fab8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77191f7b8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1b77191f838 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1b77191f8d0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b77191fb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77191fe70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1b77191fcb0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1b77191fd30 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1b771920160 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77191ff48 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1b77191ffc8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1b771920040 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b7719204c0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1b771920240 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1b771920318 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1b771920878 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1b771920598 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1b771920618 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1b771920698 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1b771920ad8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1b771920958 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1b771918e48 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1b771920ba8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1b771920c28 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1b771920ca8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1b7719190a8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1b771918f28 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1b771919568 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1b771919608 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b771919670 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1b7719196d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1b771919740 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1b7719197c8 prev 0x1b771919568 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1b7719191b0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1b771919228 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719192a0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b771919318 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1b771919990 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b7719198b0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1b771919b20 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b771919ca8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b771919fd0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1b771919d78 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1b771919e20 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b77191a2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b77191a1b0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1b77191a3a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77191a5c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b77191a4e0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1b77191a7e0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1b77191a698 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1b77191a990 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b77191a8b0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1b77191abe0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1b77191aa68 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1b77191aae8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1b77191ae20 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1b77191aec0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1b77191af30 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1b77191af98 prev 0x1b77191ae20 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1b77191acc0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1b77191b088 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1b77191b1b8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1b77191b0d8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1b77191b408 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b77191b290 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1b77191b308 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1b77191b5c8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1b77191b4e8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1b77191b7e8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1b77191b6a0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1b77191ba38 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b77191b8c0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1b77191b938 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1b77191bbf8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1b77191bb18 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1b7719700e0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b77191bcd0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1b77191bd50 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1b7719702a0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1b7719701c0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1b771970530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1b771970450 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1b7719705d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1b7719707d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1b7719706f8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1b771970960 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b771970c08 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1b771970ca8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1b771970d18 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1b771970d80 prev 0x1b771970c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1b771970af0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1b771970f58 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1b771970e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771971330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b7719710f8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1b771971170 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b7719713e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771971608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1b771971528 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1b771971858 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b7719716e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1b771971758 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771971c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1b7719719f0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1b771971a70 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1b771971cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771971ef0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1b771971e10 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1b771974198 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1b771974050 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1b771974380 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1b7719747d0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1b771974448 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1b7719744c8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1b771974548 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1b7719745c0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b771974c50 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b7719748c0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1b771974938 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719749b0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b771974a30 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1b77196f000 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b771974d40 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1b771974db8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b771974e38 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1b77196f1c8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1b77196f0e8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1b77196f5a0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1b77196f640 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1b77196f6a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1b77196f720 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1b77196f788 prev 0x1b77196f5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1b77196f360 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1b77196f3e0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1b77196f968 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1b77196f838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77196fd58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77196fa78 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1b77196faf8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1b77196fb70 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b77196fe10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771972130 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1b77196ff58 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1b771972030 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1b771972428 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771972210 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1b771972290 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1b771972308 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b7719728b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b7719725d0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1b771972648 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719726c8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1b771972970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771972f40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771972bb0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1b771972c28 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771972ca8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1b771972d20 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b77196dff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77196e350 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b77196e138 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1b77196e1b0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b77196e230 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1b77196e6e8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77196e438 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1b77196e4b0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77196e530 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1b77196e5a8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b77196e948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1b77196e9e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77196eca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1b77196eb30 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1b77196cfe0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1b77196ed78 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1b77196edf0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b77196d260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b77196d180 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1b77196d308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77196d5c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b77196d450 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1b77196d4c8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1b77196d9e0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b77196da80 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1b77196dae8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b77196db50 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b77196dbd0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1b77196dc38 prev 0x1b77196d9e0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1b77196d6a0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1b77196d720 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1b77196d798 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1b77196dd38 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1b771976070 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b771976110 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1b771976178 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1b7719761e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b771976260 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1b7719762c8 prev 0x1b771976070 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1b77196dd80 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1b77196de00 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1b77196de78 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1b7719763c8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1b771976628 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1b771976410 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1b771976490 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1b771976508 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771976920 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1b771976708 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1b771976788 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1b771976800 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771976c68 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b771976d08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b771976d70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b771976de8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1b771976e50 prev 0x1b771976c68 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1b771976a08 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1b771976a80 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1b771976f48 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1b7719771b8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b771977258 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1b7719772c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b771977338 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1b7719773a0 prev 0x1b7719771b8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1b771976f98 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1b771977080 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1b771977498 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1b771977660 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1b7719774e8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1b771977560 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b7719778b8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1b771977740 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1b7719777b8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771977e18 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b771977eb8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b771977f20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1b771977f88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b771977ff0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b771978090 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1b7719780f8 prev 0x1b771977e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1b771977a58 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1b771977ad0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771977b50 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1b771977bc8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1b7719782e8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1b7719781b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771978758 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b771978338 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1b7719783b0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771978428 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719784a8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1b771978520 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771978b98 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b771978850 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1b7719788c8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771978940 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719789c0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1b771978a38 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771978f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b771978d50 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1b771978dc8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771978e48 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1b771979020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b7719754d0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b771975220 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1b771975298 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771975318 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1b771975390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1b771975590 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771975988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b7719756d8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1b771975750 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719757d0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1b771975848 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771975d48 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1b771975a78 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1b771975af8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1b771975b70 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771979140 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1b7719791e0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b771979248 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1b7719792c0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1b771979328 prev 0x1b771979140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1b771975ef0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1b771975f70 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1b771979508 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1b7719793d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771979930 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b7719799d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b771979a38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b771979aa0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b771979b20 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1b771979b88 prev 0x1b771979930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1b771979618 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1b771979698 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1b771979710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1b771979d70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1b771979c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77197a0b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b77197a150 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1b77197a1b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1b77197a220 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b77197a2a0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1b77197a308 prev 0x1b77197a0b0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1b771979dc0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1b771979e40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1b771979eb8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1b77197a408 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1b77197a5d0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1b77197a458 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1b77197a4d0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77197a8c8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b77197a6b0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1b77197a728 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b77197a7a8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1b77197ac60 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b77197a9b0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1b77197aa28 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77197aaa8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1b77197ab20 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77197aec8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1b77197ad48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1b77197adc8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1b771973040 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1b77197afa8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1b771973330 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b771973118 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1b771973190 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b771973210 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1b771973628 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1b771973410 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1b771973490 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1b771973508 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771973888 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1b771973710 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1b771973788 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771973c18 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b771973968 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1b7719739e0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771973a60 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1b771973ad8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771973de8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1b771973d08 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1b771981120 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1b771973ec0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1b771973f38 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b7719812e0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1b771981200 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1b771981470 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b7719816b8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771981540 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1b7719815b8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771981910 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771981798 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1b771981810 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771981b68 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b7719819f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1b771981a68 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771981f18 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771981c48 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1b771981cc0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771981d38 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77197d200 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771982000 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1b771982078 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b77197d0e0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77197d4f8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b77197d2e8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1b77197d360 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b77197d3d8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77197d7f0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77197d5d8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1b77197d658 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1b77197d6d0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b77197dae8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77197d8d0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1b77197d950 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1b77197d9c8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b77197dde0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77197dbc8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1b77197dc48 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1b77197dcc0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b77197f260 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b77197dec0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1b77197df40 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1b77197dfb8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b77197e030 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77197f5f8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b77197f348 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1b77197f3c8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1b77197f440 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b77197f4b8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77197f990 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b77197f6e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1b77197f760 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1b77197f7d8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b77197f850 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77197fe28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77197fb40 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1b77197fbc0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1b77197fc38 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b77197fee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771982440 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771980028 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1b771982130 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719821b0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1b771982228 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b7719827e0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771982530 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1b7719825a8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771982628 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1b7719826a0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771982d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b7719829d0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1b771982a50 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1b771982ac8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1b771982b40 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1b771982df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771980348 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771982f38 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1b771982fb0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771983030 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1b7719830a8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771980110 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771980788 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771980440 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1b7719804b8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771980538 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1b7719805b0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771980628 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b7719809f8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771980880 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1b7719808f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771980c50 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771980ad8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1b771980b50 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771980f40 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771980d30 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1b771980da8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771980e20 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77197b1f0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771981028 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1b7719810a0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b77197b0d0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77197b648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77197b398 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1b77197b410 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77197b490 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1b77197b508 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b77197b708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77197bb00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77197b850 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1b77197b8c8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77197b948 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1b77197b9c0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b77197c0d0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77197bbf0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1b77197bc68 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77197bce0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77197bd60 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1b77197bdd8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b77197c610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b77197c2c8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1b77197c340 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77197c3c0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1b77197c438 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1b77197c4b0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1b77197c6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77197cb58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b77197c828 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1b77197c8a0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77197c920 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1b77197c998 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b77197ca10 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b7719861d0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b77197cc50 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1b77197ccc8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77197cd40 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77197cdc0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1b77197ce38 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b77197ceb0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771986590 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1b7719862c8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1b771986340 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1b7719863c0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1b771986800 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1b771986690 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1b771986a18 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1b771986cf8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1b771986ae0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1b771986b58 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1b771986f40 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1b771986dd0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b771988190 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1b771987010 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1b771988318 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1b771988550 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1b7719883e0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1b771988458 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1b771988700 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1b771988628 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b7719889a8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1b7719887d0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1b771988848 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1b771988d50 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1b771988a80 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b771988b00 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1b771988b78 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1b771989050 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1b771988e30 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b771988ea8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1b77198a368 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1b771989128 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1b77198a1c0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1b77198a670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b77198a500 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1b77198a718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77198a9d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1b77198a858 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1b77198ace0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b77198aaa8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1b77198ab20 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1b77198af30 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b77198adb8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1b77198ae30 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1b771987180 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b77198b008 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1b771987330 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b771987250 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1b7719874e0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b771987400 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1b771987878 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b7719875b0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1b771987628 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b7719876a0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771987b68 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771987958 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1b7719879d0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771987a48 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771987e58 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771987c48 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1b771987cc0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771987d38 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771985160 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771987f38 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1b771987fb0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771988028 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771985460 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771985240 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b7719852b8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b7719856b0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771985538 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b7719855b0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771985900 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771985788 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771985800 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771985b50 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b7719859d8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771985a50 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771985f08 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b771985c28 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b771985ca0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b771985d18 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1b7719893b0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771985fe8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b771986060 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719860d8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b7719891a0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771989768 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771989498 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b771989510 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771989588 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771989a58 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771989848 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1b7719898c0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771989938 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771989d48 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b771989b38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771989bb0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b771989c28 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1b77198a0d0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771989e28 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771989ea0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771989f18 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771989f90 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77198b570 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b77198b1e8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b77198b260 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77198b2d8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b77198b350 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1b77198ba78 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b77198b658 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b77198b6d0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77198b748 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77198b7c0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b77198b838 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77198be38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b77198bc28 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b77198bca0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77198bd18 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1b77198bef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771984380 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b77198c0f0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b771984150 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719841c8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771984240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1b771984440 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b7719846f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b771984580 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1b7719845f8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1b7719848b0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b7719847d0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1b771984b90 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771984980 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1b7719849f8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771984a70 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771984de8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771984c70 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771984ce8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771991050 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b771984ec0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771984f38 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b771984fb0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1b7719913d8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771991130 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b7719911a8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771991220 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771991298 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b7719915a0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b7719914c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1b7719917e8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771991670 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b7719916e8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771991af0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b7719918c0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771991938 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771991d40 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771991bc8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771991c40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771991f90 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771991e18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771991e90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771992358 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771992088 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771992100 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771992178 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771992648 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771992438 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b7719924b0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771992528 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771992938 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771992728 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b7719927a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771992818 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771992cf8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771992a18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1b771992a90 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771992b08 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771990040 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771992dd8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1b771992e50 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771992ec8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771990330 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771990120 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1b771990198 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771990210 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771990780 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771990410 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1b771990488 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771990500 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771990578 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771990b10 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771990868 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1b7719908e0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771990958 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b7719909d0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771990ea0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771990bf8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1b771990c70 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771990ce8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771990d60 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b7719953a0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771990f88 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771995090 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771995108 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771995180 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771995730 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771995488 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771995500 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771995578 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b7719955f0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771995ac0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771995818 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771995890 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771995908 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771995980 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771995fc8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771995ba8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771995c20 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771995c98 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771995d10 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771995d88 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771996408 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b7719960c8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771996140 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719961b8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771996230 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b7719962a8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771996838 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b7719964f8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771996570 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719965e8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771996660 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b7719966d8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771996aa0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771996928 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b7719969a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771996cf0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771996b78 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771996bf0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771996fd8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771996dc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771996e40 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771996eb8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771993408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771993160 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b7719931d8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771993250 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b7719932c8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b7719934c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771993a38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771993610 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771993688 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771993700 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771993778 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b7719937f0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b771993f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b771993c30 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771993ca8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771993d20 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771993d98 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1b771993e10 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1b771994080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771994690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b7719941c8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b771994240 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719942b8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771994330 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b7719943a8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b771994420 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b771994b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b771994958 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b7719949d0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1b771994c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1b771994d58 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1b77198f298 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b771995010 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b77198f040 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b77198f0b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1b77198f350 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1b77198f468 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1b77198fa08 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77198f728 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b77198f7a0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b77198f818 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1b77198fac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1b77198fbe0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1b77199b300 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b77198fea0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b77198ff18 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b77198ff90 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1b77199b0f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1b77199b3c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1b77199b4e0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1b77199b7e8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1b77199b608 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1b77199b680 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77199b6f8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1b771999370 <line:37:1, line:44:1>
|   |-DeclStmt 0x1b77199b930 <line:38:5, col:21>
|   | `-VarDecl 0x1b77199b8c8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1b77199b9c8 <line:39:5, col:13>
|   | `-VarDecl 0x1b77199b960 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1b77199bd20 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1b77199bd08 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1b77199bc20 <col:34> '<builtin fn type>' Function 0x1b77199bab8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1b77199bc58 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1b77199b8c8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1b77199bc90 <col:29> 'const wchar_t *' lvalue ParmVar 0x1b77199b6f8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1b77199bfe0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1b77199bd50 <col:5> 'int' lvalue Var 0x1b77199b960 '_Ret' 'int'
|   | `-CallExpr 0x1b77199bf20 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1b77199bf08 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1b77199bd88 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1b771995fc8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1b77199bf68 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b77199bda8 <col:27> 'wchar_t *' lvalue ParmVar 0x1b77199b608 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1b77199bf80 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b77199bdc8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1b77199b680 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1b77199bf98 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b77199bde8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1b77199b6f8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1b77199bfb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1b77199be70 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1b77199be48 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1b77199be08 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1b77199bfc8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b77199be90 <col:59> 'va_list':'char *' lvalue Var 0x1b77199b8c8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1b771999300 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1b7719992e8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1b771999238 <col:34> '<builtin fn type>' Function 0x1b7719990d0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1b771999270 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1b77199b8c8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1b771999360 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1b771999348 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1b771999328 <col:12> 'int' lvalue Var 0x1b77199b960 '_Ret' 'int'
|-FunctionDecl 0x1b77199bab8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1b77199bb58 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1b77199bbc8 <col:34> Implicit
|-FunctionDecl 0x1b7719990d0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1b771999170 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1b7719991e0 <col:34> Implicit
|-FunctionDecl 0x1b771999668 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1b7719993c0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1b771999438 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719994b0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771999528 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1b771999950 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1b771999940 <line:51:5, col:62>
|     `-CallExpr 0x1b771999880 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1b771999868 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1b771999740 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1b771995fc8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1b7719998c8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1b771999760 <col:27> 'wchar_t *' lvalue ParmVar 0x1b7719993c0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1b7719998e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1b771999780 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1b771999438 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1b7719998f8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1b7719997a0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1b7719994b0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1b771999910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1b771999828 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1b771999800 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1b7719997c0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1b771999928 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1b771999848 <col:59> 'va_list':'char *' lvalue ParmVar 0x1b771999528 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1b771999bf0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1b771999978 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1b7719999f0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771999a68 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b771999ae0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1b77199a188 <line:61:1, line:68:1>
|   |-DeclStmt 0x1b771999d40 <line:62:5, col:21>
|   | `-VarDecl 0x1b771999cd8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1b771999dd8 <line:63:5, col:13>
|   | `-VarDecl 0x1b771999d70 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1b771999e80 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1b771999e68 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1b771999df0 <col:34> '<builtin fn type>' Function 0x1b77199bab8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1b771999e10 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1b771999cd8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1b771999e48 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1b771999ae0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1b77199a080 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1b771999eb0 <col:5> 'int' lvalue Var 0x1b771999d70 '_Ret' 'int'
|   | `-CallExpr 0x1b771999fc0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1b771999fa8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1b771999ee8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1b771995fc8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1b77199a008 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b771999f08 <col:27> 'wchar_t *' lvalue ParmVar 0x1b771999978 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1b77199a020 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b771999f28 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1b7719999f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1b77199a038 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b771999f48 <col:44> 'const wchar_t *' lvalue ParmVar 0x1b771999a68 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1b77199a050 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b771999f68 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1b771999ae0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1b77199a068 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b771999f88 <col:64> 'va_list':'char *' lvalue Var 0x1b771999cd8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1b77199a118 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1b77199a100 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1b77199a0a0 <col:34> '<builtin fn type>' Function 0x1b7719990d0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1b77199a0e0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1b771999cd8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1b77199a178 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1b77199a160 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1b77199a140 <col:12> 'int' lvalue Var 0x1b771999d70 '_Ret' 'int'
|-FunctionDecl 0x1b77199a518 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1b77199a1d8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1b77199a250 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b77199a2c8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b77199a340 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1b77199a3b8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1b77199a7a0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1b77199a790 <line:75:5, col:67>
|     `-CallExpr 0x1b77199a6d0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1b77199a6b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1b77199a5f8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1b771995fc8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1b77199a718 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1b77199a618 <col:27> 'wchar_t *' lvalue ParmVar 0x1b77199a1d8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1b77199a730 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1b77199a638 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1b77199a250 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1b77199a748 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1b77199a658 <col:44> 'const wchar_t *' lvalue ParmVar 0x1b77199a2c8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1b77199a760 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1b77199a678 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1b77199a340 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1b77199a778 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1b77199a698 <col:64> 'va_list':'char *' lvalue ParmVar 0x1b77199a3b8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1b77199a9e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b77199a7c8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1b77199a840 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1b77199ac38 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b77199aac0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b77199ab38 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77199af20 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b77199ad10 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b77199ad88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b77199ae00 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b77199c278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b77199c100 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1b77199c178 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1b77199c328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77199c738 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77199c528 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1b77199c5a0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b77199c618 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b77199c7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77199caa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b77199c930 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1b77199c9a8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1b77199cd90 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77199cb80 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1b77199cbf8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b77199cc70 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b77199f1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b77199cf30 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b77199cfa8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1b77199f250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77199f728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77199f450 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b77199f4c8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b77199f540 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b77199f7e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b77199fa98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b77199f920 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b77199f998 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1b77199fd80 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b77199fb70 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b77199fbe8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b77199fc60 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b7719981a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b77199ff20 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b77199ff98 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719a0010 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1b771998260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b7719987e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771998460 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b7719984d8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771998550 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b7719985c8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b7719988a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b771998bf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b7719989e0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b771998a58 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b771998ad0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1b771998f78 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b771998cd0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b771998d48 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b771998dc0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b771998e38 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b7719a02f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1b7719a0210 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1b7719a0398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b7719a0710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b7719a0598 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b7719a0610 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b7719a07c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b7719a09e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b7719a0900 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1b7719a0c28 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b7719a0ab0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b7719a0b28 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b7719a0f28 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1b7719a0d08 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1b7719a0d80 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1b7719a12f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b7719a10c0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1b7719a1150 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1b7719a13a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b7719a17b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b7719a14f0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1b7719a1568 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1b7719a15e0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1b7719a1c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1b7719a1950 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1b7719a19c8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1b7719a1a40 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1b7719a1cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b7719a31b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1b7719a1e10 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1b7719a1e88 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1b7719a1f00 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1b7719a1f78 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1b7719a3410 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1b7719a32a0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1b7719a3650 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b7719a34e0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1b7719a3558 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1b7719a3808 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1b7719a3728 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1b7719a3af8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1b7719a38d8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1b7719a3950 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1b7719a3d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b7719a3c90 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1b7719a3e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b7719a4028 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1b7719a3f50 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1b7719a2258 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1b7719a40f8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1b7719a2160 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1b7719a24a0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1b7719a2330 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1b7719a23a8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1b7719a2650 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1b7719a2578 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1b7719a27f8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1b7719a2720 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1b7719a29a8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b7719a28c8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1b7719a2b58 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b7719a2a78 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1b7719a2ed0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1b7719a2c30 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1b7719a2ca8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719a2d20 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b7719a2d98 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1b7719a5360 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1b7719a2fc0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1b7719a3038 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719a30b0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719a5190 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b7719a5208 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1b7719a5670 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1b7719a5450 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1b7719a54d0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1b7719a5550 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1b7719a5830 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1b7719a5750 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1b7719a5b20 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1b7719a5900 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1b7719a5980 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1b7719a5a00 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1b7719a5ce0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1b7719a5c00 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1b7719a6058 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1b7719a5db8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1b7719a5e30 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b7719a5ea8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b7719a5f20 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1b77199e298 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b77199e120 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1b77199e198 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1b77199e5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1b77199e450 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1b77199e4d0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1b77199e680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1b77199e938 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1b77199e9d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1b77199ed18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1b77199eba0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1b77199ec20 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1b77199edc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1b7719a81c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1b7719a8260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1b7719a8500 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1b7719a8420 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1b7719a85a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1b7719a8828 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1b7719a88c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1b7719a8b70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1b7719a8a90 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1b7719a8c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1b7719a8ef8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1b7719a8e18 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1b7719a8fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1b7719a6318 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b7719a61a0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1b7719a6218 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1b7719a63c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1b7719a6688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1b7719a6728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1b7719a6b10 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1b7719a6848 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1b7719a68c0 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1b7719a6940 <col:98, col:107> col:107 _Line 'unsigned int'
|-RecordDecl 0x1b7719a6be0 <.//openssl//file_jk/after\crypto\evp/evp_locl.h:12:1, line:22:1> line:12:8 invalid struct evp_md_ctx_st definition
| |-FieldDecl 0x1b7719a6cb8 <line:13:5, col:19> col:19 invalid digest 'const int *'
| |-FieldDecl 0x1b7719a6d28 <line:14:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x1b7719a6d98 <line:16:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x1b7719a6e08 <line:17:5, col:11> col:11 md_data 'void *'
| |-FieldDecl 0x1b7719a6e78 <line:19:5, col:19> col:19 invalid pctx 'int *'
| `-FieldDecl 0x1b7719a7200 <line:21:5, col:67> col:11 update 'int (*)(int *, const void *, size_t)'
|-RecordDecl 0x1b7719a7258 <line:24:1, line:42:1> line:24:8 invalid struct evp_cipher_ctx_st definition
| |-FieldDecl 0x1b7719a7328 <line:25:5, col:23> col:23 invalid cipher 'const int *'
| |-FieldDecl 0x1b7719a7398 <line:26:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x1b7719a7408 <line:28:5, col:9> col:9 encrypt 'int'
| |-FieldDecl 0x1b7719a7478 <line:29:5, col:9> col:9 buf_len 'int'
| |-FieldDecl 0x1b7719a74e8 <line:30:5, col:19> col:19 invalid oiv 'unsigned char'
| |-FieldDecl 0x1b7719a7558 <line:31:5, col:19> col:19 invalid iv 'unsigned char'
| |-FieldDecl 0x1b7719a75c8 <line:32:5, col:19> col:19 invalid buf 'unsigned char'
| |-FieldDecl 0x1b7719a7638 <line:33:5, col:9> col:9 num 'int'
| |-FieldDecl 0x1b7719a76a8 <line:35:5, col:11> col:11 app_data 'void *'
| |-FieldDecl 0x1b7719a7718 <line:36:5, col:9> col:9 key_len 'int'
| |-FieldDecl 0x1b7719a7788 <line:37:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x1b7719a77f8 <line:38:5, col:11> col:11 cipher_data 'void *'
| |-FieldDecl 0x1b7719a7868 <line:39:5, col:9> col:9 final_used 'int'
| |-FieldDecl 0x1b7719a78d8 <line:40:5, col:9> col:9 block_mask 'int'
| `-FieldDecl 0x1b7719a7948 <line:41:5, col:19> col:19 invalid final 'unsigned char'
|-FunctionDecl 0x1b7719a7de0 <line:44:1, line:47:39> line:44:5 invalid PKCS5_v2_PBKDF2_keyivgen 'int (int *, const char *, int, int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1b7719a79b8 <col:30, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719a7a38 <col:51, col:63> col:63 pass 'const char *'
| |-ParmVarDecl 0x1b7719a7ab8 <line:45:30, col:34> col:34 passlen 'int'
| |-ParmVarDecl 0x1b7719a7b38 <col:43, col:54> col:54 invalid param 'int *'
| |-ParmVarDecl 0x1b7719a7bb8 <line:46:30, col:48> col:48 invalid c 'const int *'
| |-ParmVarDecl 0x1b7719a7c38 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x1b7719a7cb8 <line:47:30, col:34> col:34 en_de 'int'
|-RecordDecl 0x1b7719a7eb8 <line:49:1, line:63:1> line:49:8 struct evp_Encode_Ctx_st definition
| |-FieldDecl 0x1b7719a7f88 <line:51:5, col:9> col:9 num 'int'
| |-FieldDecl 0x1b7719a7ff8 <line:57:5, col:9> col:9 length 'int'
| |-FieldDecl 0x1b7719a80f0 <line:59:5, col:30> col:19 enc_data 'unsigned char [80]'
| |-FieldDecl 0x1b7719a91d0 <line:61:5, col:9> col:9 line_num 'int'
| `-FieldDecl 0x1b7719a9240 <line:62:5, col:9> col:9 expect_nl 'int'
|-RecordDecl 0x1b7719a9298 <line:65:9, col:16> col:16 struct evp_pbe_st
|-TypedefDecl 0x1b7719a93a8 <col:1, col:27> col:27 referenced EVP_PBE_CTL 'struct evp_pbe_st':'struct evp_pbe_st'
| `-ElaboratedType 0x1b7719a9350 'struct evp_pbe_st' sugar
|   `-RecordType 0x1b7719a9330 'struct evp_pbe_st'
|     `-Record 0x1b7719a9298 'evp_pbe_st'
|-FunctionDecl 0x1b7719a9550 <line:66:1, col:28> col:1 DEFINE_STACK_OF 'int (EVP_PBE_CTL)'
| `-ParmVarDecl 0x1b7719a9450 <col:17> col:28 'EVP_PBE_CTL':'struct evp_pbe_st'
|-FunctionDecl 0x1b7719a9860 <line:68:1, col:73> col:5 used is_partially_overlapping 'int (const void *, const void *, int)'
| |-ParmVarDecl 0x1b7719a9628 <col:30, col:42> col:42 ptr1 'const void *'
| |-ParmVarDecl 0x1b7719a96a8 <col:48, col:60> col:60 ptr2 'const void *'
| `-ParmVarDecl 0x1b7719a9728 <col:66, col:70> col:70 len 'int'
|-FunctionDecl 0x1b7719a9a10 <.//openssl//file_jk/after\crypto\evp\evp_enc.c:20:1, line:37:1> line:20:5 invalid EVP_CIPHER_CTX_reset 'int (int *)'
| |-ParmVarDecl 0x1b7719a9948 <col:26, col:42> col:42 invalid c 'int *'
| `-CompoundStmt 0x1b7719b21f0 <line:21:1, line:37:1>
|   |-IfStmt 0x1b7719a9ba8 <line:22:5, line:23:16>
|   | |-OpaqueValueExpr 0x1b7719a9b90 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b7719a9b80 <col:9, col:16>
|   |   `-IntegerLiteral 0x1b7719a9b58 <col:16> 'int' 1
|   |-IfStmt 0x1b7719a9e18 <line:24:5, line:30:5>
|   | |-OpaqueValueExpr 0x1b7719a9e00 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719a9de8 <line:24:28, line:30:5>
|   |   `-IfStmt 0x1b7719a9c98 <line:25:9, line:26:20>
|   |     |-OpaqueValueExpr 0x1b7719a9c80 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x1b7719a9c70 <col:13, col:20>
|   |       `-IntegerLiteral 0x1b7719a9c48 <col:20> 'int' 0
|   `-ReturnStmt 0x1b7719b21e0 <line:36:5, col:12>
|     `-IntegerLiteral 0x1b7719b21b8 <col:12> 'int' 1
|-FunctionDecl 0x1b7719aa090 <line:35:5> col:5 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1b7719aa130 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b7719b2070 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1b7719b20d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b7719b22e0 <line:39:1, line:42:1> line:39:17 invalid EVP_CIPHER_CTX_new 'int *(void)'
| `-CompoundStmt 0x1b7719b24a8 <line:40:1, line:42:1>
|-FunctionDecl 0x1b7719b2598 <line:44:1, line:48:1> line:44:6 invalid EVP_CIPHER_CTX_free 'void (int *)'
| |-ParmVarDecl 0x1b7719b24d0 <col:26, col:42> col:42 invalid ctx 'int *'
| `-CompoundStmt 0x1b7719b2678 <line:45:1, line:48:1>
|-FunctionDecl 0x1b7719b29b0 <line:50:1, line:56:1> line:50:5 invalid EVP_CipherInit 'int (int *, const int *, const unsigned char *, const unsigned char *, int)'
| |-ParmVarDecl 0x1b7719b26a0 <col:20, col:36> col:36 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719b2720 <col:41, col:59> col:59 invalid cipher 'const int *'
| |-ParmVarDecl 0x1b7719b27a0 <line:51:20, col:41> col:41 used key 'const unsigned char *'
| |-ParmVarDecl 0x1b7719b2820 <col:46, col:67> col:67 used iv 'const unsigned char *'
| |-ParmVarDecl 0x1b7719b28a0 <col:71, col:75> col:75 used enc 'int'
| `-CompoundStmt 0x1b7719b2d58 <line:52:1, line:56:1>
|-FunctionDecl 0x1b7719b4140 <line:58:1, line:206:1> line:58:5 invalid EVP_CipherInit_ex 'int (int *, const int *, int *, const unsigned char *, const unsigned char *, int)'
| |-ParmVarDecl 0x1b7719b2d80 <col:23, col:39> col:39 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719b2e00 <col:44, col:62> col:62 invalid cipher 'const int *'
| |-ParmVarDecl 0x1b7719b2e80 <line:59:23, col:31> col:31 invalid impl 'int *'
| |-ParmVarDecl 0x1b7719b2f00 <col:37, col:58> col:58 used key 'const unsigned char *'
| |-ParmVarDecl 0x1b7719b2f80 <line:60:23, col:44> col:44 used iv 'const unsigned char *'
| |-ParmVarDecl 0x1b7719b3000 <col:48, col:52> col:52 used enc 'int'
| `-CompoundStmt 0x1b7719b0278 <line:61:1, line:206:1>
|   |-IfStmt 0x1b7719b43f0 <line:62:5, line:68:5> has_else
|   | |-BinaryOperator 0x1b7719b42b8 <line:62:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1b7719b42a0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b7719b4228 <col:9> 'int' lvalue ParmVar 0x1b7719b3000 'enc' 'int'
|   | | `-UnaryOperator 0x1b7719b4288 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1b7719b4260 <col:17> 'int' 1
|   | |-NullStmt 0x1b7719b43e8 <line:63:9>
|   | `-CompoundStmt 0x1b7719b43d0 <line:64:10, line:68:5>
|   |   `-IfStmt 0x1b7719b4398 <line:65:9, line:66:19>
|   |     |-ImplicitCastExpr 0x1b7719b4318 <line:65:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1b7719b42f8 <col:13> 'int' lvalue ParmVar 0x1b7719b3000 'enc' 'int'
|   |     `-BinaryOperator 0x1b7719b4378 <line:66:13, col:19> 'int' '='
|   |       |-DeclRefExpr 0x1b7719b4330 <col:13> 'int' lvalue ParmVar 0x1b7719b3000 'enc' 'int'
|   |       `-IntegerLiteral 0x1b7719b4350 <col:19> 'int' 1
|   |-IfStmt 0x1b7719b4520 <line:76:5, line:78:14>
|   | |-OpaqueValueExpr 0x1b7719b4508 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1b7719b44f0 <col:9, col:14> 'skip_to_init' 0x1b7719b44a0
|   |-IfStmt 0x1b7719b1480 <line:80:5, line:149:5> has_else
|   | |-OpaqueValueExpr 0x1b7719b1468 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1b7719b1390 <line:80:17, line:146:5>
|   | | |-IfStmt 0x1b7719b4658 <line:86:9, line:92:9>
|   | | | |-OpaqueValueExpr 0x1b7719b4640 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x1b7719b4628 <line:86:26, line:92:9>
|   | | |   `-DeclStmt 0x1b7719b45b8 <line:87:13, col:45>
|   | | |     `-VarDecl 0x1b7719b4550 <col:13, col:27> col:27 used flags 'unsigned long'
|   | | |-IfStmt 0x1b7719b4a58 <line:94:9, line:101:13> has_else
|   | | | |-OpaqueValueExpr 0x1b7719b4a40 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x1b7719b4910 <line:94:19, line:99:9>
|   | | | | `-IfStmt 0x1b7719b48f8 <line:95:13, line:98:13>
|   | | | |   |-OpaqueValueExpr 0x1b7719b48e0 <<invalid sloc>> '_Bool'
|   | | | |   `-CompoundStmt 0x1b7719b48c8 <line:95:37, line:98:13>
|   | | | |     `-ReturnStmt 0x1b7719b48b8 <line:97:17, col:24>
|   | | | |       `-IntegerLiteral 0x1b7719b4890 <col:24> 'int' 0
|   | | | `-NullStmt 0x1b7719b4a38 <line:101:13>
|   | | |-IfStmt 0x1b7719b4d90 <line:102:9, line:122:13> has_else
|   | | | |-OpaqueValueExpr 0x1b7719b4d78 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x1b7719b4cc8 <line:102:19, line:121:9>
|   | | | | |-DeclStmt 0x1b7719b4c10 <line:104:13, col:71>
|   | | | | | `-VarDecl 0x1b7719b4a98 <col:13, col:31> col:31 invalid c 'const int *'
|   | | | | `-IfStmt 0x1b7719b4cb0 <line:105:13, line:113:13>
|   | | | |   |-OpaqueValueExpr 0x1b7719b4c98 <<invalid sloc>> '_Bool'
|   | | | |   `-CompoundStmt 0x1b7719b4c80 <line:105:21, line:113:13>
|   | | | |     `-ReturnStmt 0x1b7719b4c70 <line:112:17, col:24>
|   | | | |       `-IntegerLiteral 0x1b7719b4c48 <col:24> 'int' 0
|   | | | `-NullStmt 0x1b7719b4d70 <line:122:13>
|   | | |-IfStmt 0x1b7719b5050 <line:126:9, line:135:9> has_else
|   | | | |-OpaqueValueExpr 0x1b7719b5038 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x1b7719b4f88 <line:126:36, line:133:9>
|   | | | | `-IfStmt 0x1b7719b4f70 <line:128:13, line:132:13>
|   | | | |   |-OpaqueValueExpr 0x1b7719b4f58 <<invalid sloc>> '_Bool'
|   | | | |   `-CompoundStmt 0x1b7719b4f40 <line:128:43, line:132:13>
|   | | | |     `-ReturnStmt 0x1b7719b4f30 <line:131:17, col:24>
|   | | | |       `-IntegerLiteral 0x1b7719b4f08 <col:24> 'int' 0
|   | | | `-CompoundStmt 0x1b7719b5028 <line:133:16, line:135:9>
|   | | `-IfStmt 0x1b7719b1378 <line:139:9, line:145:9>
|   | |   |-OpaqueValueExpr 0x1b7719b1360 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1b7719b1348 <line:139:54, line:145:9>
|   | |     `-IfStmt 0x1b7719b1330 <line:140:13, line:144:13>
|   | |       |-OpaqueValueExpr 0x1b7719b1318 <<invalid sloc>> '_Bool'
|   | |       `-CompoundStmt 0x1b7719b1300 <line:140:68, line:144:13>
|   | |         `-ReturnStmt 0x1b7719b12f0 <line:143:17, col:24>
|   | |           `-IntegerLiteral 0x1b7719b12c8 <col:24> 'int' 0
|   | `-IfStmt 0x1b7719b1450 <line:146:12, line:149:5>
|   |   |-OpaqueValueExpr 0x1b7719b1438 <<invalid sloc>> '_Bool'
|   |   `-CompoundStmt 0x1b7719b1420 <line:146:30, line:149:5>
|   |     `-ReturnStmt 0x1b7719b1410 <line:148:9, col:16>
|   |       `-IntegerLiteral 0x1b7719b13e8 <col:16> 'int' 0
|   |-LabelStmt 0x1b7719b1638 <line:151:2, col:14> 'skip_to_init'
|   | `-NullStmt 0x1b7719b1630 <col:14>
|   |-IfStmt 0x1b7719b17e8 <line:158:5, line:162:5>
|   | |-OpaqueValueExpr 0x1b7719b17d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719b17b8 <line:159:60, line:162:5>
|   |   `-ReturnStmt 0x1b7719b17a8 <line:161:9, col:16>
|   |     `-IntegerLiteral 0x1b7719b1780 <col:16> 'int' 0
|   |-IfStmt 0x1b7719b0068 <line:164:5, line:196:5>
|   | |-OpaqueValueExpr 0x1b7719b0050 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719b2050 <line:164:79, line:196:5>
|   |-IfStmt 0x1b7719b01b0 <line:198:5, line:201:5>
|   | |-OpaqueValueExpr 0x1b7719b0198 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719b0180 <line:198:66, line:201:5>
|   |   `-IfStmt 0x1b7719b0168 <line:199:9, line:200:20>
|   |     |-OpaqueValueExpr 0x1b7719b0150 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x1b7719b0140 <col:13, col:20>
|   |       `-IntegerLiteral 0x1b7719b0118 <col:20> 'int' 0
|   `-ReturnStmt 0x1b7719b0268 <line:205:5, col:12>
|     `-IntegerLiteral 0x1b7719b0240 <col:12> 'int' 1
|-FunctionDecl 0x1b7719b1c50 <line:182:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b7719b1cf0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b7719b1d58 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b7719b1dc0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b7719b0620 <line:208:1, line:215:1> line:208:5 invalid EVP_CipherUpdate 'int (int *, unsigned char *, int *, const unsigned char *, int)'
| |-ParmVarDecl 0x1b7719b02e0 <col:22, col:38> col:38 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719b0390 <col:43, col:58> col:58 used out 'unsigned char *'
| |-ParmVarDecl 0x1b7719b0410 <col:63, col:68> col:68 used outl 'int *'
| |-ParmVarDecl 0x1b7719b0490 <line:209:22, col:43> col:43 used in 'const unsigned char *'
| |-ParmVarDecl 0x1b7719b0510 <col:47, col:51> col:51 used inl 'int'
| `-CompoundStmt 0x1b7719b0a80 <line:210:1, line:215:1>
|-FunctionDecl 0x1b7719b0c90 <line:217:1, line:223:1> line:217:5 invalid EVP_CipherFinal_ex 'int (int *, unsigned char *, int *)'
| |-ParmVarDecl 0x1b7719b0aa8 <col:24, col:40> col:40 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719b0b28 <col:45, col:60> col:60 used out 'unsigned char *'
| |-ParmVarDecl 0x1b7719b0ba8 <col:65, col:70> col:70 used outl 'int *'
| `-CompoundStmt 0x1b7719b1030 <line:218:1, line:223:1>
|-FunctionDecl 0x1b7719af200 <line:225:1, line:231:1> line:225:5 invalid EVP_CipherFinal 'int (int *, unsigned char *, int *)'
| |-ParmVarDecl 0x1b7719af058 <col:21, col:37> col:37 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719af0d8 <col:42, col:57> col:57 used out 'unsigned char *'
| |-ParmVarDecl 0x1b7719af158 <col:62, col:67> col:67 used outl 'int *'
| `-CompoundStmt 0x1b7719af5a0 <line:226:1, line:231:1>
|-FunctionDecl 0x1b7719af840 <line:233:1, line:237:1> line:233:5 invalid EVP_EncryptInit 'int (int *, const int *, const unsigned char *, const unsigned char *)'
| |-ParmVarDecl 0x1b7719af5c8 <col:21, col:37> col:37 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719af648 <col:42, col:60> col:60 invalid cipher 'const int *'
| |-ParmVarDecl 0x1b7719af6c8 <line:234:21, col:42> col:42 used key 'const unsigned char *'
| |-ParmVarDecl 0x1b7719af748 <col:47, col:68> col:68 used iv 'const unsigned char *'
| `-CompoundStmt 0x1b7719af9b0 <line:235:1, line:237:1>
|-FunctionDecl 0x1b7719afce0 <line:239:1, line:244:1> line:239:5 invalid EVP_EncryptInit_ex 'int (int *, const int *, int *, const unsigned char *, const unsigned char *)'
| |-ParmVarDecl 0x1b7719af9d8 <col:24, col:40> col:40 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719afa58 <col:45, col:63> col:63 invalid cipher 'const int *'
| |-ParmVarDecl 0x1b7719afad8 <line:240:24, col:32> col:32 invalid impl 'int *'
| |-ParmVarDecl 0x1b7719afb58 <col:38, col:59> col:59 used key 'const unsigned char *'
| |-ParmVarDecl 0x1b7719afbd8 <line:241:24, col:45> col:45 used iv 'const unsigned char *'
| `-CompoundStmt 0x1b7719afe58 <line:242:1, line:244:1>
|-FunctionDecl 0x1b7719ae0e0 <line:246:1, line:250:1> line:246:5 invalid EVP_DecryptInit 'int (int *, const int *, const unsigned char *, const unsigned char *)'
| |-ParmVarDecl 0x1b7719afe80 <col:21, col:37> col:37 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719aff00 <col:42, col:60> col:60 invalid cipher 'const int *'
| |-ParmVarDecl 0x1b7719aff80 <line:247:21, col:42> col:42 used key 'const unsigned char *'
| |-ParmVarDecl 0x1b7719ae030 <col:47, col:68> col:68 used iv 'const unsigned char *'
| `-CompoundStmt 0x1b7719ae250 <line:248:1, line:250:1>
|-FunctionDecl 0x1b7719ae530 <line:252:1, line:257:1> line:252:5 invalid EVP_DecryptInit_ex 'int (int *, const int *, int *, const unsigned char *, const unsigned char *)'
| |-ParmVarDecl 0x1b7719ae278 <col:24, col:40> col:40 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719ae2f8 <col:45, col:63> col:63 invalid cipher 'const int *'
| |-ParmVarDecl 0x1b7719ae378 <line:253:24, col:32> col:32 invalid impl 'int *'
| |-ParmVarDecl 0x1b7719ae3f8 <col:38, col:59> col:59 used key 'const unsigned char *'
| |-ParmVarDecl 0x1b7719ae478 <line:254:24, col:45> col:45 used iv 'const unsigned char *'
| `-CompoundStmt 0x1b7719ae6a8 <line:255:1, line:257:1>
|-FunctionDecl 0x1b7719ae8c0 prev 0x1b7719a9860 <line:282:1, line:294:1> line:282:5 used is_partially_overlapping 'int (const void *, const void *, int)'
| |-ParmVarDecl 0x1b7719ae6d0 <col:30, col:42> col:42 used ptr1 'const void *'
| |-ParmVarDecl 0x1b7719ae750 <col:48, col:60> col:60 used ptr2 'const void *'
| |-ParmVarDecl 0x1b7719ae7d0 <col:66, col:70> col:70 used len 'int'
| `-CompoundStmt 0x1b7719b60c0 <line:283:1, line:294:1>
|   |-DeclStmt 0x1b7719aeaf0 <line:279:20, line:284:53>
|   | `-VarDecl 0x1b7719ae988 <line:279:20, line:284:49> col:15 used diff 'size_t':'unsigned long long' cinit
|   |   `-BinaryOperator 0x1b7719aead0 <col:22, col:49> 'unsigned long long' '-'
|   |     |-CStyleCastExpr 0x1b7719aea38 <col:22, col:33> 'size_t':'unsigned long long' <PointerToIntegral>
|   |     | `-ImplicitCastExpr 0x1b7719aea20 <col:33> 'const void *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x1b7719ae9f0 <col:33> 'const void *' lvalue ParmVar 0x1b7719ae6d0 'ptr1' 'const void *'
|   |     `-CStyleCastExpr 0x1b7719aeaa8 <col:38, col:49> 'size_t':'unsigned long long' <PointerToIntegral>
|   |       `-ImplicitCastExpr 0x1b7719aea90 <col:49> 'const void *' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x1b7719aea60 <col:49> 'const void *' lvalue ParmVar 0x1b7719ae750 'ptr2' 'const void *'
|   |-DeclStmt 0x1b7719aefc8 <line:290:5, line:291:79>
|   | `-VarDecl 0x1b7719aeb20 <line:290:5, line:291:78> line:290:9 used overlapped 'int' cinit
|   |   `-BinaryOperator 0x1b7719aefa8 <col:22, line:291:78> 'int' '&'
|   |     |-BinaryOperator 0x1b7719aecf8 <line:290:22, col:44> 'int' '&'
|   |     | |-ParenExpr 0x1b7719aec08 <col:22, col:30> 'int'
|   |     | | `-BinaryOperator 0x1b7719aebe8 <col:23, col:29> 'int' '>'
|   |     | |   |-ImplicitCastExpr 0x1b7719aebd0 <col:23> 'int' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x1b7719aeb88 <col:23> 'int' lvalue ParmVar 0x1b7719ae7d0 'len' 'int'
|   |     | |   `-IntegerLiteral 0x1b7719aeba8 <col:29> 'int' 0
|   |     | `-ParenExpr 0x1b7719aecd8 <col:34, col:44> 'int'
|   |     |   `-BinaryOperator 0x1b7719aecb8 <col:35, col:43> 'int' '!='
|   |     |     |-ImplicitCastExpr 0x1b7719aec88 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x1b7719aec28 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1b7719ae988 'diff' 'size_t':'unsigned long long'
|   |     |     `-ImplicitCastExpr 0x1b7719aeca0 <col:43> 'unsigned long long' <IntegralCast>
|   |     |       `-IntegerLiteral 0x1b7719aec60 <col:43> 'int' 0
|   |     `-ParenExpr 0x1b7719aef88 <col:48, line:291:78> 'int'
|   |       `-BinaryOperator 0x1b7719aef68 <line:290:49, line:291:77> 'int' '|'
|   |         |-ParenExpr 0x1b7719aede0 <line:290:49, col:71> 'int'
|   |         | `-BinaryOperator 0x1b7719aedc0 <col:50, col:68> 'int' '<'
|   |         |   |-ImplicitCastExpr 0x1b7719aeda8 <col:50> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |   | `-DeclRefExpr 0x1b7719aed18 <col:50> 'size_t':'unsigned long long' lvalue Var 0x1b7719ae988 'diff' 'size_t':'unsigned long long'
|   |         |   `-CStyleCastExpr 0x1b7719aed80 <col:57, col:68> 'size_t':'unsigned long long' <IntegralCast>
|   |         |     `-ImplicitCastExpr 0x1b7719aed68 <col:68> 'int' <LValueToRValue> part_of_explicit_cast
|   |         |       `-DeclRefExpr 0x1b7719aed38 <col:68> 'int' lvalue ParmVar 0x1b7719ae7d0 'len' 'int'
|   |         `-ParenExpr 0x1b7719aef48 <line:291:49, col:77> 'int'
|   |           `-BinaryOperator 0x1b7719aef28 <col:50, col:76> 'int' '>'
|   |             |-ImplicitCastExpr 0x1b7719aef10 <col:50> 'size_t':'unsigned long long' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1b7719aee00 <col:50> 'size_t':'unsigned long long' lvalue Var 0x1b7719ae988 'diff' 'size_t':'unsigned long long'
|   |             `-ParenExpr 0x1b7719aeef0 <col:57, col:76> 'unsigned long long'
|   |               `-BinaryOperator 0x1b7719aeed0 <col:58, col:73> 'unsigned long long' '-'
|   |                 |-ImplicitCastExpr 0x1b7719aeeb8 <col:58> 'unsigned long long' <IntegralCast>
|   |                 | `-IntegerLiteral 0x1b7719aee20 <col:58> 'int' 0
|   |                 `-CStyleCastExpr 0x1b7719aee90 <col:62, col:73> 'size_t':'unsigned long long' <IntegralCast>
|   |                   `-ImplicitCastExpr 0x1b7719aee78 <col:73> 'int' <LValueToRValue> part_of_explicit_cast
|   |                     `-DeclRefExpr 0x1b7719aee48 <col:73> 'int' lvalue ParmVar 0x1b7719ae7d0 'len' 'int'
|   `-ReturnStmt 0x1b7719b60b0 <line:293:5, col:12>
|     `-ImplicitCastExpr 0x1b7719af018 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1b7719aefe0 <col:12> 'int' lvalue Var 0x1b7719aeb20 'overlapped' 'int'
|-FunctionDecl 0x1b7719b63b8 <line:296:1, line:371:1> line:296:5 invalid EVP_EncryptUpdate 'int (int *, unsigned char *, int *, const unsigned char *, int)'
| |-ParmVarDecl 0x1b7719b6100 <col:23, col:39> col:39 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719b6180 <col:44, col:59> col:59 used out 'unsigned char *'
| |-ParmVarDecl 0x1b7719b6200 <col:64, col:69> col:69 used outl 'int *'
| |-ParmVarDecl 0x1b7719b6280 <line:297:23, col:44> col:44 used in 'const unsigned char *'
| |-ParmVarDecl 0x1b7719b6300 <col:48, col:52> col:52 used inl 'int'
| `-CompoundStmt 0x1b7719b84a0 <line:298:1, line:371:1>
|   |-DeclStmt 0x1b7719b6710 <line:299:5, col:29>
|   | |-VarDecl 0x1b7719b64b0 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1b7719b6530 <col:5, col:12> col:12 used j 'int'
|   | |-VarDecl 0x1b7719b65b0 <col:5, col:15> col:15 used bl 'int'
|   | `-VarDecl 0x1b7719b6630 <col:5, col:26> col:19 used cmpl 'int' cinit
|   |   `-ImplicitCastExpr 0x1b7719b66d0 <col:26> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b7719b6698 <col:26> 'int' lvalue ParmVar 0x1b7719b6300 'inl' 'int'
|   |-IfStmt 0x1b7719b6990 <line:301:5, line:302:29>
|   | |-OpaqueValueExpr 0x1b7719b6978 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1b7719b6958 <col:9, col:29> 'int' '='
|   |   |-DeclRefExpr 0x1b7719b6838 <col:9> 'int' lvalue Var 0x1b7719b6630 'cmpl' 'int'
|   |   `-BinaryOperator 0x1b7719b6938 <col:16, col:29> 'int' '/'
|   |     |-ParenExpr 0x1b7719b68f0 <col:16, col:25> 'int'
|   |     | `-BinaryOperator 0x1b7719b68d0 <col:17, col:24> 'int' '+'
|   |     |   |-ImplicitCastExpr 0x1b7719b68b8 <col:17> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1b7719b6870 <col:17> 'int' lvalue Var 0x1b7719b6630 'cmpl' 'int'
|   |     |   `-IntegerLiteral 0x1b7719b6890 <col:24> 'int' 7
|   |     `-IntegerLiteral 0x1b7719b6910 <col:29> 'int' 8
|   |-IfStmt 0x1b7719b6f58 <line:306:5, line:319:5>
|   | |-OpaqueValueExpr 0x1b7719b6f40 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719b6f18 <line:306:59, line:319:5>
|   |   |-IfStmt 0x1b7719b6c90 <line:308:9, line:311:9>
|   |   | |-BinaryOperator 0x1b7719b6c00 <line:308:13, col:62> 'int' '&&'
|   |   | | |-BinaryOperator 0x1b7719b6a40 <col:13, col:19> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x1b7719b6a28 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1b7719b69e0 <col:13> 'int' lvalue Var 0x1b7719b65b0 'bl' 'int'
|   |   | | | `-IntegerLiteral 0x1b7719b6a00 <col:19> 'int' 1
|   |   | | `-CallExpr 0x1b7719b6b50 <col:24, col:62> 'int'
|   |   | |   |-ImplicitCastExpr 0x1b7719b6b38 <col:24> 'int (*)(const void *, const void *, int)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x1b7719b6a60 <col:24> 'int (const void *, const void *, int)' Function 0x1b7719ae8c0 'is_partially_overlapping' 'int (const void *, const void *, int)'
|   |   | |   |-ImplicitCastExpr 0x1b7719b6ba0 <col:49> 'const void *' <BitCast>
|   |   | |   | `-ImplicitCastExpr 0x1b7719b6b88 <col:49> 'unsigned char *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x1b7719b6a80 <col:49> 'unsigned char *' lvalue ParmVar 0x1b7719b6180 'out' 'unsigned char *'
|   |   | |   |-ImplicitCastExpr 0x1b7719b6bd0 <col:54> 'const void *' <BitCast>
|   |   | |   | `-ImplicitCastExpr 0x1b7719b6bb8 <col:54> 'const unsigned char *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x1b7719b6ab8 <col:54> 'const unsigned char *' lvalue ParmVar 0x1b7719b6280 'in' 'const unsigned char *'
|   |   | |   `-ImplicitCastExpr 0x1b7719b6be8 <col:58> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1b7719b6af0 <col:58> 'int' lvalue Var 0x1b7719b6630 'cmpl' 'int'
|   |   | `-CompoundStmt 0x1b7719b6c78 <col:65, line:311:9>
|   |   |   `-ReturnStmt 0x1b7719b6c68 <line:310:13, col:20>
|   |   |     `-IntegerLiteral 0x1b7719b6c40 <col:20> 'int' 0
|   |   |-IfStmt 0x1b7719b6eb8 <line:314:9, line:317:21> has_else
|   |   | |-BinaryOperator 0x1b7719b6da0 <line:314:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1b7719b6d88 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b7719b6d40 <col:13> 'int' lvalue Var 0x1b7719b64b0 'i' 'int'
|   |   | | `-IntegerLiteral 0x1b7719b6d60 <col:17> 'int' 0
|   |   | |-ReturnStmt 0x1b7719b6de8 <line:315:13, col:20>
|   |   | | `-IntegerLiteral 0x1b7719b6dc0 <col:20> 'int' 0
|   |   | `-BinaryOperator 0x1b7719b6e98 <line:317:13, col:21> 'int' '='
|   |   |   |-UnaryOperator 0x1b7719b6e48 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x1b7719b6e30 <col:14> 'int *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1b7719b6df8 <col:14> 'int *' lvalue ParmVar 0x1b7719b6200 'outl' 'int *'
|   |   |   `-ImplicitCastExpr 0x1b7719b6e80 <col:21> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1b7719b6e60 <col:21> 'int' lvalue Var 0x1b7719b64b0 'i' 'int'
|   |   `-ReturnStmt 0x1b7719b6f08 <line:318:9, col:16>
|   |     `-IntegerLiteral 0x1b7719b6ee0 <col:16> 'int' 1
|   |-IfStmt 0x1b7719b7150 <line:321:5, line:324:5>
|   | |-BinaryOperator 0x1b7719b6fd0 <line:321:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1b7719b6fb8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b7719b6f70 <col:9> 'int' lvalue ParmVar 0x1b7719b6300 'inl' 'int'
|   | | `-IntegerLiteral 0x1b7719b6f90 <col:16> 'int' 0
|   | `-CompoundStmt 0x1b7719b7130 <col:19, line:324:5>
|   |   |-BinaryOperator 0x1b7719b7068 <line:322:9, col:17> 'int' '='
|   |   | |-UnaryOperator 0x1b7719b7028 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1b7719b7010 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b7719b6ff0 <col:10> 'int *' lvalue ParmVar 0x1b7719b6200 'outl' 'int *'
|   |   | `-IntegerLiteral 0x1b7719b7040 <col:17> 'int' 0
|   |   `-ReturnStmt 0x1b7719b7120 <line:323:9, col:23>
|   |     `-BinaryOperator 0x1b7719b7100 <col:16, col:23> 'int' '=='
|   |       |-ImplicitCastExpr 0x1b7719b70e8 <col:16> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1b7719b7088 <col:16> 'int' lvalue ParmVar 0x1b7719b6300 'inl' 'int'
|   |       `-IntegerLiteral 0x1b7719b70c0 <col:23> 'int' 0
|   |-IfStmt 0x1b7719b7270 <line:325:5, line:328:5>
|   | |-OpaqueValueExpr 0x1b7719b7258 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719b7240 <line:325:65, line:328:5>
|   |   `-ReturnStmt 0x1b7719b7230 <line:327:9, col:16>
|   |     `-IntegerLiteral 0x1b7719b7208 <col:16> 'int' 0
|   |-IfStmt 0x1b7719b75b8 <line:330:5, line:338:5>
|   | |-OpaqueValueExpr 0x1b7719b75a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719b7588 <line:330:62, line:338:5>
|   |   `-IfStmt 0x1b7719b7560 <line:331:9, line:337:9> has_else
|   |     |-OpaqueValueExpr 0x1b7719b7548 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x1b7719b7438 <line:331:56, line:334:9>
|   |     | |-BinaryOperator 0x1b7719b73e0 <line:332:13, col:21> 'int' '='
|   |     | | |-UnaryOperator 0x1b7719b7390 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x1b7719b7378 <col:14> 'int *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x1b7719b7358 <col:14> 'int *' lvalue ParmVar 0x1b7719b6200 'outl' 'int *'
|   |     | | `-ImplicitCastExpr 0x1b7719b73c8 <col:21> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1b7719b73a8 <col:21> 'int' lvalue ParmVar 0x1b7719b6300 'inl' 'int'
|   |     | `-ReturnStmt 0x1b7719b7428 <line:333:13, col:20>
|   |     |   `-IntegerLiteral 0x1b7719b7400 <col:20> 'int' 1
|   |     `-CompoundStmt 0x1b7719b7528 <line:334:16, line:337:9>
|   |       |-BinaryOperator 0x1b7719b74d0 <line:335:13, col:21> 'int' '='
|   |       | |-UnaryOperator 0x1b7719b7490 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |       | | `-ImplicitCastExpr 0x1b7719b7478 <col:14> 'int *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1b7719b7458 <col:14> 'int *' lvalue ParmVar 0x1b7719b6200 'outl' 'int *'
|   |       | `-IntegerLiteral 0x1b7719b74a8 <col:21> 'int' 0
|   |       `-ReturnStmt 0x1b7719b7518 <line:336:13, col:20>
|   |         `-IntegerLiteral 0x1b7719b74f0 <col:20> 'int' 0
|   |-IfStmt 0x1b7719b7e90 <line:341:5, line:358:17> has_else
|   | |-BinaryOperator 0x1b7719b7690 <line:341:9, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x1b7719b7678 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b7719b7630 <col:9> 'int' lvalue Var 0x1b7719b64b0 'i' 'int'
|   | | `-IntegerLiteral 0x1b7719b7650 <col:14> 'int' 0
|   | |-CompoundStmt 0x1b7719b7de0 <col:17, line:357:5>
|   | | `-IfStmt 0x1b7719b7db8 <line:342:9, line:356:9> has_else
|   | |   |-BinaryOperator 0x1b7719b7778 <line:342:13, col:22> 'int' '>'
|   | |   | |-BinaryOperator 0x1b7719b7720 <col:13, col:18> 'int' '-'
|   | |   | | |-ImplicitCastExpr 0x1b7719b76f0 <col:13> 'int' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x1b7719b76b0 <col:13> 'int' lvalue Var 0x1b7719b65b0 'bl' 'int'
|   | |   | | `-ImplicitCastExpr 0x1b7719b7708 <col:18> 'int' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x1b7719b76d0 <col:18> 'int' lvalue Var 0x1b7719b64b0 'i' 'int'
|   | |   | `-ImplicitCastExpr 0x1b7719b7760 <col:22> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1b7719b7740 <col:22> 'int' lvalue ParmVar 0x1b7719b6300 'inl' 'int'
|   | |   |-CompoundStmt 0x1b7719b7908 <col:27, line:347:9>
|   | |   | |-BinaryOperator 0x1b7719b78b0 <line:345:13, col:21> 'int' '='
|   | |   | | |-UnaryOperator 0x1b7719b7870 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   | |   | | | `-ImplicitCastExpr 0x1b7719b7858 <col:14> 'int *' <LValueToRValue>
|   | |   | | |   `-DeclRefExpr 0x1b7719b7838 <col:14> 'int *' lvalue ParmVar 0x1b7719b6200 'outl' 'int *'
|   | |   | | `-IntegerLiteral 0x1b7719b7888 <col:21> 'int' 0
|   | |   | `-ReturnStmt 0x1b7719b78f8 <line:346:13, col:20>
|   | |   |   `-IntegerLiteral 0x1b7719b78d0 <col:20> 'int' 1
|   | |   `-CompoundStmt 0x1b7719b7d78 <line:347:16, line:356:9>
|   | |     |-BinaryOperator 0x1b7719b79f0 <line:348:13, col:22> 'int' '='
|   | |     | |-DeclRefExpr 0x1b7719b7928 <col:13> 'int' lvalue Var 0x1b7719b6530 'j' 'int'
|   | |     | `-BinaryOperator 0x1b7719b79d0 <col:17, col:22> 'int' '-'
|   | |     |   |-ImplicitCastExpr 0x1b7719b79a0 <col:17> 'int' <LValueToRValue>
|   | |     |   | `-DeclRefExpr 0x1b7719b7960 <col:17> 'int' lvalue Var 0x1b7719b65b0 'bl' 'int'
|   | |     |   `-ImplicitCastExpr 0x1b7719b79b8 <col:22> 'int' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x1b7719b7980 <col:22> 'int' lvalue Var 0x1b7719b64b0 'i' 'int'
|   | |     |-CompoundAssignOperator 0x1b7719b7ae8 <line:350:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x1b7719b7a90 <col:13> 'int' lvalue ParmVar 0x1b7719b6300 'inl' 'int'
|   | |     | `-ImplicitCastExpr 0x1b7719b7ad0 <col:20> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1b7719b7ab0 <col:20> 'int' lvalue Var 0x1b7719b6530 'j' 'int'
|   | |     |-CompoundAssignOperator 0x1b7719b7b70 <line:351:13, col:19> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |     | |-DeclRefExpr 0x1b7719b7b18 <col:13> 'const unsigned char *' lvalue ParmVar 0x1b7719b6280 'in' 'const unsigned char *'
|   | |     | `-ImplicitCastExpr 0x1b7719b7b58 <col:19> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1b7719b7b38 <col:19> 'int' lvalue Var 0x1b7719b6530 'j' 'int'
|   | |     |-IfStmt 0x1b7719b7c30 <line:352:13, line:353:24>
|   | |     | |-OpaqueValueExpr 0x1b7719b7c18 <<invalid sloc>> '_Bool'
|   | |     | `-ReturnStmt 0x1b7719b7c08 <col:17, col:24>
|   | |     |   `-IntegerLiteral 0x1b7719b7be0 <col:24> 'int' 0
|   | |     |-CompoundAssignOperator 0x1b7719b7ca0 <line:354:13, col:20> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |     | |-DeclRefExpr 0x1b7719b7c48 <col:13> 'unsigned char *' lvalue ParmVar 0x1b7719b6180 'out' 'unsigned char *'
|   | |     | `-ImplicitCastExpr 0x1b7719b7c88 <col:20> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1b7719b7c68 <col:20> 'int' lvalue Var 0x1b7719b65b0 'bl' 'int'
|   | |     `-BinaryOperator 0x1b7719b7d58 <line:355:13, col:21> 'int' '='
|   | |       |-UnaryOperator 0x1b7719b7d08 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   | |       | `-ImplicitCastExpr 0x1b7719b7cf0 <col:14> 'int *' <LValueToRValue>
|   | |       |   `-DeclRefExpr 0x1b7719b7cd0 <col:14> 'int *' lvalue ParmVar 0x1b7719b6200 'outl' 'int *'
|   | |       `-ImplicitCastExpr 0x1b7719b7d40 <col:21> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1b7719b7d20 <col:21> 'int' lvalue Var 0x1b7719b65b0 'bl' 'int'
|   | `-BinaryOperator 0x1b7719b7e70 <line:358:9, col:17> 'int' '='
|   |   |-UnaryOperator 0x1b7719b7e30 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1b7719b7e18 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b7719b7df8 <col:10> 'int *' lvalue ParmVar 0x1b7719b6200 'outl' 'int *'
|   |   `-IntegerLiteral 0x1b7719b7e48 <col:17> 'int' 0
|   |-BinaryOperator 0x1b7719b7fd0 <line:359:5, col:22> 'int' '='
|   | |-DeclRefExpr 0x1b7719b7eb8 <col:5> 'int' lvalue Var 0x1b7719b64b0 'i' 'int'
|   | `-BinaryOperator 0x1b7719b7fb0 <col:9, col:22> 'int' '&'
|   |   |-ImplicitCastExpr 0x1b7719b7f98 <col:9> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b7719b7ed8 <col:9> 'int' lvalue ParmVar 0x1b7719b6300 'inl' 'int'
|   |   `-ParenExpr 0x1b7719b7f78 <col:15, col:22> 'int'
|   |     `-BinaryOperator 0x1b7719b7f58 <col:16, col:21> 'int' '-'
|   |       |-ImplicitCastExpr 0x1b7719b7f40 <col:16> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1b7719b7ef8 <col:16> 'int' lvalue Var 0x1b7719b65b0 'bl' 'int'
|   |       `-IntegerLiteral 0x1b7719b7f18 <col:21> 'int' 1
|   |-CompoundAssignOperator 0x1b7719b8048 <line:360:5, col:12> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x1b7719b7ff0 <col:5> 'int' lvalue ParmVar 0x1b7719b6300 'inl' 'int'
|   | `-ImplicitCastExpr 0x1b7719b8030 <col:12> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1b7719b8010 <col:12> 'int' lvalue Var 0x1b7719b64b0 'i' 'int'
|   |-IfStmt 0x1b7719b82a8 <line:361:5, line:365:5>
|   | |-BinaryOperator 0x1b7719b80e8 <line:361:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x1b7719b80d0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b7719b8078 <col:9> 'int' lvalue ParmVar 0x1b7719b6300 'inl' 'int'
|   | | `-IntegerLiteral 0x1b7719b8098 <col:15> 'int' 0
|   | `-CompoundStmt 0x1b7719b8288 <col:18, line:365:5>
|   |   |-IfStmt 0x1b7719b81b8 <line:362:9, line:363:20>
|   |   | |-OpaqueValueExpr 0x1b7719b81a0 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1b7719b8190 <col:13, col:20>
|   |   |   `-IntegerLiteral 0x1b7719b8168 <col:20> 'int' 0
|   |   `-CompoundAssignOperator 0x1b7719b8258 <line:364:9, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-UnaryOperator 0x1b7719b8208 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |     | `-ImplicitCastExpr 0x1b7719b81f0 <col:10> 'int *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1b7719b81d0 <col:10> 'int *' lvalue ParmVar 0x1b7719b6200 'outl' 'int *'
|   |     `-ImplicitCastExpr 0x1b7719b8240 <col:18> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b7719b8220 <col:18> 'int' lvalue ParmVar 0x1b7719b6300 'inl' 'int'
|   `-ReturnStmt 0x1b7719b8490 <line:370:5, col:12>
|     `-IntegerLiteral 0x1b7719b8468 <col:12> 'int' 1
|-FunctionDecl 0x1b7719b86c8 <line:373:1, line:378:1> line:373:5 invalid EVP_EncryptFinal 'int (int *, unsigned char *, int *)'
| |-ParmVarDecl 0x1b7719b8520 <col:22, col:38> col:38 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719b85a0 <col:43, col:58> col:58 used out 'unsigned char *'
| |-ParmVarDecl 0x1b7719b8620 <col:63, col:68> col:68 used outl 'int *'
| `-CompoundStmt 0x1b7719b8940 <line:374:1, line:378:1>
|   |-DeclStmt 0x1b7719b8818 <line:375:5, col:12>
|   | `-VarDecl 0x1b7719b87b0 <col:5, col:9> col:9 used ret 'int'
|   `-ReturnStmt 0x1b7719b8930 <line:377:5, col:12>
|     `-ImplicitCastExpr 0x1b7719b8918 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1b7719b88f8 <col:12> 'int' lvalue Var 0x1b7719b87b0 'ret' 'int'
|-FunctionDecl 0x1b7719b8b20 <line:380:1, line:420:1> line:380:5 invalid EVP_EncryptFinal_ex 'int (int *, unsigned char *, int *)'
| |-ParmVarDecl 0x1b7719b8978 <col:25, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719b89f8 <col:46, col:61> col:61 used out 'unsigned char *'
| |-ParmVarDecl 0x1b7719b8a78 <col:66, col:71> col:71 used outl 'int *'
| `-CompoundStmt 0x1b7719b9ab8 <line:381:1, line:420:1>
|   |-DeclStmt 0x1b7719b8d08 <line:382:5, col:15>
|   | |-VarDecl 0x1b7719b8c08 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x1b7719b8c88 <col:5, col:12> col:12 used ret 'int'
|   |-DeclStmt 0x1b7719b8ec0 <line:383:5, col:26>
|   | |-VarDecl 0x1b7719b8d38 <col:5, col:18> col:18 used i 'unsigned int'
|   | |-VarDecl 0x1b7719b8db8 <col:5, col:21> col:21 used b 'unsigned int'
|   | `-VarDecl 0x1b7719b8e38 <col:5, col:24> col:24 used bl 'unsigned int'
|   |-IfStmt 0x1b7719b9218 <line:385:5, line:392:5>
|   | |-OpaqueValueExpr 0x1b7719b9200 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719b91e0 <line:385:59, line:392:5>
|   |   |-IfStmt 0x1b7719b9180 <line:387:9, line:390:21> has_else
|   |   | |-BinaryOperator 0x1b7719b9058 <line:387:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1b7719b9040 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b7719b8ff8 <col:13> 'int' lvalue Var 0x1b7719b8c88 'ret' 'int'
|   |   | | `-IntegerLiteral 0x1b7719b9018 <col:19> 'int' 0
|   |   | |-ReturnStmt 0x1b7719b90a0 <line:388:13, col:20>
|   |   | | `-IntegerLiteral 0x1b7719b9078 <col:20> 'int' 0
|   |   | `-BinaryOperator 0x1b7719b9160 <line:390:13, col:21> 'int' '='
|   |   |   |-UnaryOperator 0x1b7719b9110 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x1b7719b90f8 <col:14> 'int *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1b7719b90b0 <col:14> 'int *' lvalue ParmVar 0x1b7719b8a78 'outl' 'int *'
|   |   |   `-ImplicitCastExpr 0x1b7719b9148 <col:21> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1b7719b9128 <col:21> 'int' lvalue Var 0x1b7719b8c88 'ret' 'int'
|   |   `-ReturnStmt 0x1b7719b91d0 <line:391:9, col:16>
|   |     `-IntegerLiteral 0x1b7719b91a8 <col:16> 'int' 1
|   |-IfStmt 0x1b7719b9430 <line:396:5, line:399:5>
|   | |-BinaryOperator 0x1b7719b9320 <line:396:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x1b7719b92f0 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b7719b92a8 <col:9> 'unsigned int' lvalue Var 0x1b7719b8db8 'b' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1b7719b9308 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b7719b92c8 <col:14> 'int' 1
|   | `-CompoundStmt 0x1b7719b9410 <col:17, line:399:5>
|   |   |-BinaryOperator 0x1b7719b93b8 <line:397:9, col:17> 'int' '='
|   |   | |-UnaryOperator 0x1b7719b9378 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1b7719b9360 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b7719b9340 <col:10> 'int *' lvalue ParmVar 0x1b7719b8a78 'outl' 'int *'
|   |   | `-IntegerLiteral 0x1b7719b9390 <col:17> 'int' 0
|   |   `-ReturnStmt 0x1b7719b9400 <line:398:9, col:16>
|   |     `-IntegerLiteral 0x1b7719b93d8 <col:16> 'int' 1
|   |-IfStmt 0x1b7719b9650 <line:401:5, line:409:5>
|   | |-OpaqueValueExpr 0x1b7719b9638 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719b9610 <line:401:43, line:409:5>
|   |   |-IfStmt 0x1b7719b9528 <line:402:9, line:406:9>
|   |   | |-ImplicitCastExpr 0x1b7719b94a0 <line:402:13> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1b7719b9480 <col:13> 'unsigned int' lvalue Var 0x1b7719b8e38 'bl' 'unsigned int'
|   |   | `-CompoundStmt 0x1b7719b9510 <col:17, line:406:9>
|   |   |   `-ReturnStmt 0x1b7719b9500 <line:405:13, col:20>
|   |   |     `-IntegerLiteral 0x1b7719b94d8 <col:20> 'int' 0
|   |   |-BinaryOperator 0x1b7719b95b8 <line:407:9, col:17> 'int' '='
|   |   | |-UnaryOperator 0x1b7719b9578 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1b7719b9560 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b7719b9540 <col:10> 'int *' lvalue ParmVar 0x1b7719b8a78 'outl' 'int *'
|   |   | `-IntegerLiteral 0x1b7719b9590 <col:17> 'int' 0
|   |   `-ReturnStmt 0x1b7719b9600 <line:408:9, col:16>
|   |     `-IntegerLiteral 0x1b7719b95d8 <col:16> 'int' 1
|   |-BinaryOperator 0x1b7719b9748 <line:411:5, col:13> 'int' '='
|   | |-DeclRefExpr 0x1b7719b9668 <col:5> 'int' lvalue Var 0x1b7719b8c08 'n' 'int'
|   | `-ImplicitCastExpr 0x1b7719b9730 <col:9, col:13> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x1b7719b9710 <col:9, col:13> 'unsigned int' '-'
|   |     |-ImplicitCastExpr 0x1b7719b96e0 <col:9> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1b7719b96a0 <col:9> 'unsigned int' lvalue Var 0x1b7719b8db8 'b' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1b7719b96f8 <col:13> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b7719b96c0 <col:13> 'unsigned int' lvalue Var 0x1b7719b8e38 'bl' 'unsigned int'
|   |-IfStmt 0x1b7719b9a58 <line:416:5, line:417:17>
|   | |-ImplicitCastExpr 0x1b7719b9980 <line:416:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b7719b9960 <col:9> 'int' lvalue Var 0x1b7719b8c88 'ret' 'int'
|   | `-BinaryOperator 0x1b7719b9a38 <line:417:9, col:17> 'int' '='
|   |   |-UnaryOperator 0x1b7719b99d0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1b7719b99b8 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b7719b9998 <col:10> 'int *' lvalue ParmVar 0x1b7719b8a78 'outl' 'int *'
|   |   `-ImplicitCastExpr 0x1b7719b9a20 <col:17> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1b7719b9a08 <col:17> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b7719b99e8 <col:17> 'unsigned int' lvalue Var 0x1b7719b8db8 'b' 'unsigned int'
|   `-ReturnStmt 0x1b7719b9aa8 <line:419:5, col:12>
|     `-ImplicitCastExpr 0x1b7719b9a90 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1b7719b9a70 <col:12> 'int' lvalue Var 0x1b7719b8c88 'ret' 'int'
|-FunctionDecl 0x1b7719b9dd8 <line:422:1, line:489:1> line:422:5 invalid EVP_DecryptUpdate 'int (int *, unsigned char *, int *, const unsigned char *, int)'
| |-ParmVarDecl 0x1b7719b9b20 <col:23, col:39> col:39 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719b9ba0 <col:44, col:59> col:59 used out 'unsigned char *'
| |-ParmVarDecl 0x1b7719b9c20 <col:64, col:69> col:69 used outl 'int *'
| |-ParmVarDecl 0x1b7719b9ca0 <line:423:23, col:44> col:44 used in 'const unsigned char *'
| |-ParmVarDecl 0x1b7719b9d20 <col:48, col:52> col:52 used inl 'int'
| `-CompoundStmt 0x1b7719c0690 <line:424:1, line:489:1>
|   |-DeclStmt 0x1b7719ba020 <line:425:5, col:28>
|   | |-VarDecl 0x1b7719b9ed0 <col:5, col:9> col:9 used fix_len 'int'
|   | `-VarDecl 0x1b7719b9f50 <col:5, col:25> col:18 used cmpl 'int' cinit
|   |   `-ImplicitCastExpr 0x1b7719b9ff0 <col:25> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b7719b9fb8 <col:25> 'int' lvalue ParmVar 0x1b7719b9d20 'inl' 'int'
|   |-DeclStmt 0x1b7719ba0b8 <line:426:5, col:19>
|   | `-VarDecl 0x1b7719ba050 <col:5, col:18> col:18 used b 'unsigned int'
|   |-IfStmt 0x1b7719b3230 <line:430:5, line:431:29>
|   | |-OpaqueValueExpr 0x1b7719b3218 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1b7719b31f8 <col:9, col:29> 'int' '='
|   |   |-DeclRefExpr 0x1b7719b30d8 <col:9> 'int' lvalue Var 0x1b7719b9f50 'cmpl' 'int'
|   |   `-BinaryOperator 0x1b7719b31d8 <col:16, col:29> 'int' '/'
|   |     |-ParenExpr 0x1b7719b3190 <col:16, col:25> 'int'
|   |     | `-BinaryOperator 0x1b7719b3170 <col:17, col:24> 'int' '+'
|   |     |   |-ImplicitCastExpr 0x1b7719b3158 <col:17> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1b7719b3110 <col:17> 'int' lvalue Var 0x1b7719b9f50 'cmpl' 'int'
|   |     |   `-IntegerLiteral 0x1b7719b3130 <col:24> 'int' 7
|   |     `-IntegerLiteral 0x1b7719b31b0 <col:29> 'int' 8
|   |-IfStmt 0x1b7719b3868 <line:433:5, line:446:5>
|   | |-OpaqueValueExpr 0x1b7719b3850 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719b3828 <line:433:59, line:446:5>
|   |   |-IfStmt 0x1b7719b34e8 <line:434:9, line:437:9>
|   |   | |-BinaryOperator 0x1b7719b3458 <line:434:13, col:61> 'int' '&&'
|   |   | | |-BinaryOperator 0x1b7719b32c0 <col:13, col:18> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x1b7719b3290 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1b7719b3248 <col:13> 'unsigned int' lvalue Var 0x1b7719ba050 'b' 'unsigned int'
|   |   | | | `-ImplicitCastExpr 0x1b7719b32a8 <col:18> 'unsigned int' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x1b7719b3268 <col:18> 'int' 1
|   |   | | `-CallExpr 0x1b7719b33a8 <col:23, col:61> 'int'
|   |   | |   |-ImplicitCastExpr 0x1b7719b3390 <col:23> 'int (*)(const void *, const void *, int)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x1b7719b32e0 <col:23> 'int (const void *, const void *, int)' Function 0x1b7719ae8c0 'is_partially_overlapping' 'int (const void *, const void *, int)'
|   |   | |   |-ImplicitCastExpr 0x1b7719b33f8 <col:48> 'const void *' <BitCast>
|   |   | |   | `-ImplicitCastExpr 0x1b7719b33e0 <col:48> 'unsigned char *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x1b7719b3300 <col:48> 'unsigned char *' lvalue ParmVar 0x1b7719b9ba0 'out' 'unsigned char *'
|   |   | |   |-ImplicitCastExpr 0x1b7719b3428 <col:53> 'const void *' <BitCast>
|   |   | |   | `-ImplicitCastExpr 0x1b7719b3410 <col:53> 'const unsigned char *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x1b7719b3338 <col:53> 'const unsigned char *' lvalue ParmVar 0x1b7719b9ca0 'in' 'const unsigned char *'
|   |   | |   `-ImplicitCastExpr 0x1b7719b3440 <col:57> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1b7719b3370 <col:57> 'int' lvalue Var 0x1b7719b9f50 'cmpl' 'int'
|   |   | `-CompoundStmt 0x1b7719b34d0 <col:64, line:437:9>
|   |   |   `-ReturnStmt 0x1b7719b34c0 <line:436:13, col:20>
|   |   |     `-IntegerLiteral 0x1b7719b3498 <col:20> 'int' 0
|   |   |-IfStmt 0x1b7719b37c8 <line:440:9, line:444:21> has_else
|   |   | |-BinaryOperator 0x1b7719b35f8 <line:440:13, col:23> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1b7719b35e0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b7719b3598 <col:13> 'int' lvalue Var 0x1b7719b9ed0 'fix_len' 'int'
|   |   | | `-IntegerLiteral 0x1b7719b35b8 <col:23> 'int' 0
|   |   | |-CompoundStmt 0x1b7719b3700 <col:26, line:443:9>
|   |   | | |-BinaryOperator 0x1b7719b36a8 <line:441:13, col:21> 'int' '='
|   |   | | | |-UnaryOperator 0x1b7719b3668 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |   | | | | `-ImplicitCastExpr 0x1b7719b3650 <col:14> 'int *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x1b7719b3618 <col:14> 'int *' lvalue ParmVar 0x1b7719b9c20 'outl' 'int *'
|   |   | | | `-IntegerLiteral 0x1b7719b3680 <col:21> 'int' 0
|   |   | | `-ReturnStmt 0x1b7719b36f0 <line:442:13, col:20>
|   |   | |   `-IntegerLiteral 0x1b7719b36c8 <col:20> 'int' 0
|   |   | `-BinaryOperator 0x1b7719b37a8 <line:444:13, col:21> 'int' '='
|   |   |   |-UnaryOperator 0x1b7719b3758 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x1b7719b3740 <col:14> 'int *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1b7719b3720 <col:14> 'int *' lvalue ParmVar 0x1b7719b9c20 'outl' 'int *'
|   |   |   `-ImplicitCastExpr 0x1b7719b3790 <col:21> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1b7719b3770 <col:21> 'int' lvalue Var 0x1b7719b9ed0 'fix_len' 'int'
|   |   `-ReturnStmt 0x1b7719b3818 <line:445:9, col:16>
|   |     `-IntegerLiteral 0x1b7719b37f0 <col:16> 'int' 1
|   |-IfStmt 0x1b7719b3a48 <line:448:5, line:451:5>
|   | |-BinaryOperator 0x1b7719b38e0 <line:448:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1b7719b38c8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b7719b3880 <col:9> 'int' lvalue ParmVar 0x1b7719b9d20 'inl' 'int'
|   | | `-IntegerLiteral 0x1b7719b38a0 <col:16> 'int' 0
|   | `-CompoundStmt 0x1b7719b3a28 <col:19, line:451:5>
|   |   |-BinaryOperator 0x1b7719b3978 <line:449:9, col:17> 'int' '='
|   |   | |-UnaryOperator 0x1b7719b3938 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1b7719b3920 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b7719b3900 <col:10> 'int *' lvalue ParmVar 0x1b7719b9c20 'outl' 'int *'
|   |   | `-IntegerLiteral 0x1b7719b3950 <col:17> 'int' 0
|   |   `-ReturnStmt 0x1b7719b3a18 <line:450:9, col:23>
|   |     `-BinaryOperator 0x1b7719b39f8 <col:16, col:23> 'int' '=='
|   |       |-ImplicitCastExpr 0x1b7719b39e0 <col:16> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1b7719b3998 <col:16> 'int' lvalue ParmVar 0x1b7719b9d20 'inl' 'int'
|   |       `-IntegerLiteral 0x1b7719b39b8 <col:23> 'int' 0
|   |-IfStmt 0x1b7719b4040 <line:458:5, line:469:19> has_else
|   | |-OpaqueValueExpr 0x1b7719b4028 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1b7719b3f98 <line:458:26, line:468:5>
|   | | |-IfStmt 0x1b7719b3e30 <line:460:9, line:464:9>
|   | | | |-BinaryOperator 0x1b7719b3da0 <line:460:13, line:461:51> 'int' '||'
|   | | | | |-ParenExpr 0x1b7719b3c20 <line:460:13, col:45> 'int'
|   | | | | | `-BinaryOperator 0x1b7719b3c00 <col:14, col:43> 'int' '=='
|   | | | | |   |-CStyleCastExpr 0x1b7719b3b68 <col:14, col:25> 'size_t':'unsigned long long' <PointerToIntegral>
|   | | | | |   | `-ImplicitCastExpr 0x1b7719b3b50 <col:25> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | | | | |   |   `-DeclRefExpr 0x1b7719b3b20 <col:25> 'unsigned char *' lvalue ParmVar 0x1b7719b9ba0 'out' 'unsigned char *'
|   | | | | |   `-CStyleCastExpr 0x1b7719b3bd8 <col:32, col:43> 'size_t':'unsigned long long' <PointerToIntegral>
|   | | | | |     `-ImplicitCastExpr 0x1b7719b3bc0 <col:43> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | | | | |       `-DeclRefExpr 0x1b7719b3b90 <col:43> 'const unsigned char *' lvalue ParmVar 0x1b7719b9ca0 'in' 'const unsigned char *'
|   | | | | `-CallExpr 0x1b7719b3cd8 <line:461:16, col:51> 'int'
|   | | | |   |-ImplicitCastExpr 0x1b7719b3cc0 <col:16> 'int (*)(const void *, const void *, int)' <FunctionToPointerDecay>
|   | | | |   | `-DeclRefExpr 0x1b7719b3c40 <col:16> 'int (const void *, const void *, int)' Function 0x1b7719ae8c0 'is_partially_overlapping' 'int (const void *, const void *, int)'
|   | | | |   |-ImplicitCastExpr 0x1b7719b3d28 <col:41> 'const void *' <BitCast>
|   | | | |   | `-ImplicitCastExpr 0x1b7719b3d10 <col:41> 'unsigned char *' <LValueToRValue>
|   | | | |   |   `-DeclRefExpr 0x1b7719b3c60 <col:41> 'unsigned char *' lvalue ParmVar 0x1b7719b9ba0 'out' 'unsigned char *'
|   | | | |   |-ImplicitCastExpr 0x1b7719b3d58 <col:46> 'const void *' <BitCast>
|   | | | |   | `-ImplicitCastExpr 0x1b7719b3d40 <col:46> 'const unsigned char *' <LValueToRValue>
|   | | | |   |   `-DeclRefExpr 0x1b7719b3c80 <col:46> 'const unsigned char *' lvalue ParmVar 0x1b7719b9ca0 'in' 'const unsigned char *'
|   | | | |   `-ImplicitCastExpr 0x1b7719b3d88 <col:50> 'int' <IntegralCast>
|   | | | |     `-ImplicitCastExpr 0x1b7719b3d70 <col:50> 'unsigned int' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1b7719b3ca0 <col:50> 'unsigned int' lvalue Var 0x1b7719ba050 'b' 'unsigned int'
|   | | | `-CompoundStmt 0x1b7719b3e18 <col:54, line:464:9>
|   | | |   `-ReturnStmt 0x1b7719b3e08 <line:463:13, col:20>
|   | | |     `-IntegerLiteral 0x1b7719b3de0 <col:20> 'int' 0
|   | | |-CompoundAssignOperator 0x1b7719b3f00 <line:466:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | | | |-DeclRefExpr 0x1b7719b3ea8 <col:9> 'unsigned char *' lvalue ParmVar 0x1b7719b9ba0 'out' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x1b7719b3ee8 <col:16> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1b7719b3ec8 <col:16> 'unsigned int' lvalue Var 0x1b7719ba050 'b' 'unsigned int'
|   | | `-BinaryOperator 0x1b7719b3f78 <line:467:9, col:19> 'int' '='
|   | |   |-DeclRefExpr 0x1b7719b3f30 <col:9> 'int' lvalue Var 0x1b7719b9ed0 'fix_len' 'int'
|   | |   `-IntegerLiteral 0x1b7719b3f50 <col:19> 'int' 1
|   | `-BinaryOperator 0x1b7719b4008 <line:469:9, col:19> 'int' '='
|   |   |-DeclRefExpr 0x1b7719b3fc0 <col:9> 'int' lvalue Var 0x1b7719b9ed0 'fix_len' 'int'
|   |   `-IntegerLiteral 0x1b7719b3fe0 <col:19> 'int' 0
|   |-IfStmt 0x1b7719c0220 <line:471:5, line:472:16>
|   | |-OpaqueValueExpr 0x1b7719c0208 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b7719c01f8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1b7719c01d0 <col:16> 'int' 0
|   |-IfStmt 0x1b7719c0528 <line:478:5, line:483:9> has_else
|   | |-OpaqueValueExpr 0x1b7719c0510 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1b7719c04c8 <line:478:33, line:482:5>
|   | | `-CompoundAssignOperator 0x1b7719c0358 <line:479:9, col:18> 'int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |   |-UnaryOperator 0x1b7719c0308 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x1b7719c02f0 <col:10> 'int *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1b7719c02d0 <col:10> 'int *' lvalue ParmVar 0x1b7719b9c20 'outl' 'int *'
|   | |   `-ImplicitCastExpr 0x1b7719c0340 <col:18> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1b7719c0320 <col:18> 'unsigned int' lvalue Var 0x1b7719ba050 'b' 'unsigned int'
|   | `-NullStmt 0x1b7719c0508 <line:483:9>
|   |-IfStmt 0x1b7719c0640 <line:485:5, line:486:18>
|   | |-ImplicitCastExpr 0x1b7719c0570 <line:485:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b7719c0550 <col:9> 'int' lvalue Var 0x1b7719b9ed0 'fix_len' 'int'
|   | `-CompoundAssignOperator 0x1b7719c0610 <line:486:9, col:18> 'int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |-UnaryOperator 0x1b7719c05c0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1b7719c05a8 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b7719c0588 <col:10> 'int *' lvalue ParmVar 0x1b7719b9c20 'outl' 'int *'
|   |   `-ImplicitCastExpr 0x1b7719c05f8 <col:18> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b7719c05d8 <col:18> 'unsigned int' lvalue Var 0x1b7719ba050 'b' 'unsigned int'
|   `-ReturnStmt 0x1b7719c0680 <line:488:5, col:12>
|     `-IntegerLiteral 0x1b7719c0658 <col:12> 'int' 1
|-FunctionDecl 0x1b7719c08b0 <line:491:1, line:496:1> line:491:5 invalid EVP_DecryptFinal 'int (int *, unsigned char *, int *)'
| |-ParmVarDecl 0x1b7719c0708 <col:22, col:38> col:38 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719c0788 <col:43, col:58> col:58 used out 'unsigned char *'
| |-ParmVarDecl 0x1b7719c0808 <col:63, col:68> col:68 used outl 'int *'
| `-CompoundStmt 0x1b7719c0b28 <line:492:1, line:496:1>
|   |-DeclStmt 0x1b7719c0a00 <line:493:5, col:12>
|   | `-VarDecl 0x1b7719c0998 <col:5, col:9> col:9 used ret 'int'
|   `-ReturnStmt 0x1b7719c0b18 <line:495:5, col:12>
|     `-ImplicitCastExpr 0x1b7719c0b00 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1b7719c0ae0 <col:12> 'int' lvalue Var 0x1b7719c0998 'ret' 'int'
|-FunctionDecl 0x1b7719c0d08 <line:498:1, line:552:1> line:498:5 invalid EVP_DecryptFinal_ex 'int (int *, unsigned char *, int *)'
| |-ParmVarDecl 0x1b7719c0b60 <col:25, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719c0be0 <col:46, col:61> col:61 used out 'unsigned char *'
| |-ParmVarDecl 0x1b7719c0c60 <col:66, col:71> col:71 used outl 'int *'
| `-CompoundStmt 0x1b7719be080 <line:499:1, line:552:1>
|   |-DeclStmt 0x1b7719c0ef0 <line:500:5, col:13>
|   | |-VarDecl 0x1b7719c0df0 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1b7719c0e70 <col:5, col:12> col:12 used n 'int'
|   |-DeclStmt 0x1b7719c0f88 <line:501:5, col:19>
|   | `-VarDecl 0x1b7719c0f20 <col:5, col:18> col:18 used b 'unsigned int'
|   |-BinaryOperator 0x1b7719c1030 <line:502:5, col:13> 'int' '='
|   | |-UnaryOperator 0x1b7719c0ff0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1b7719c0fd8 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b7719c0fa0 <col:6> 'int *' lvalue ParmVar 0x1b7719c0c60 'outl' 'int *'
|   | `-IntegerLiteral 0x1b7719c1008 <col:13> 'int' 0
|   |-IfStmt 0x1b7719bd340 <line:504:5, line:511:5>
|   | |-OpaqueValueExpr 0x1b7719bd328 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719bd308 <line:504:59, line:511:5>
|   |   |-IfStmt 0x1b7719bd2a8 <line:506:9, line:509:21> has_else
|   |   | |-BinaryOperator 0x1b7719bd1a8 <line:506:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1b7719bd190 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b7719bd148 <col:13> 'int' lvalue Var 0x1b7719c0df0 'i' 'int'
|   |   | | `-IntegerLiteral 0x1b7719bd168 <col:17> 'int' 0
|   |   | |-ReturnStmt 0x1b7719bd1f0 <line:507:13, col:20>
|   |   | | `-IntegerLiteral 0x1b7719bd1c8 <col:20> 'int' 0
|   |   | `-BinaryOperator 0x1b7719bd288 <line:509:13, col:21> 'int' '='
|   |   |   |-UnaryOperator 0x1b7719bd238 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x1b7719bd220 <col:14> 'int *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1b7719bd200 <col:14> 'int *' lvalue ParmVar 0x1b7719c0c60 'outl' 'int *'
|   |   |   `-ImplicitCastExpr 0x1b7719bd270 <col:21> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1b7719bd250 <col:21> 'int' lvalue Var 0x1b7719c0df0 'i' 'int'
|   |   `-ReturnStmt 0x1b7719bd2f8 <line:510:9, col:16>
|   |     `-IntegerLiteral 0x1b7719bd2d0 <col:16> 'int' 1
|   |-IfStmt 0x1b7719bd540 <line:514:5, line:522:5>
|   | |-OpaqueValueExpr 0x1b7719bd528 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719bd500 <line:514:43, line:522:5>
|   |   |-IfStmt 0x1b7719bd418 <line:515:9, line:519:9>
|   |   | |-OpaqueValueExpr 0x1b7719bd400 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1b7719bd3e8 <line:515:27, line:519:9>
|   |   |   `-ReturnStmt 0x1b7719bd3d8 <line:518:13, col:20>
|   |   |     `-IntegerLiteral 0x1b7719bd3b0 <col:20> 'int' 0
|   |   |-BinaryOperator 0x1b7719bd4a8 <line:520:9, col:17> 'int' '='
|   |   | |-UnaryOperator 0x1b7719bd468 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1b7719bd450 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b7719bd430 <col:10> 'int *' lvalue ParmVar 0x1b7719c0c60 'outl' 'int *'
|   |   | `-IntegerLiteral 0x1b7719bd480 <col:17> 'int' 0
|   |   `-ReturnStmt 0x1b7719bd4f0 <line:521:9, col:16>
|   |     `-IntegerLiteral 0x1b7719bd4c8 <col:16> 'int' 1
|   |-IfStmt 0x1b7719be000 <line:523:5, line:550:17> has_else
|   | |-BinaryOperator 0x1b7719bd5d0 <line:523:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x1b7719bd5a0 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b7719bd558 <col:9> 'unsigned int' lvalue Var 0x1b7719c0f20 'b' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1b7719bd5b8 <col:13> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b7719bd578 <col:13> 'int' 1
|   | |-CompoundStmt 0x1b7719bdf38 <col:16, line:549:5>
|   | | |-IfStmt 0x1b7719bd698 <line:524:9, line:527:9>
|   | | | |-OpaqueValueExpr 0x1b7719bd680 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x1b7719bd668 <line:524:47, line:527:9>
|   | | |   `-ReturnStmt 0x1b7719bd658 <line:526:13, col:22>
|   | | |     `-ParenExpr 0x1b7719bd638 <col:20, col:22> 'int'
|   | | |       `-IntegerLiteral 0x1b7719bd610 <col:21> 'int' 0
|   | | |-IfStmt 0x1b7719bd9c0 <line:535:9, line:538:9>
|   | | | |-BinaryOperator 0x1b7719bd910 <line:535:13, col:32> 'int' '||'
|   | | | | |-BinaryOperator 0x1b7719bd820 <col:13, col:18> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x1b7719bd808 <col:13> 'int' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1b7719bd7c0 <col:13> 'int' lvalue Var 0x1b7719c0e70 'n' 'int'
|   | | | | | `-IntegerLiteral 0x1b7719bd7e0 <col:18> 'int' 0
|   | | | | `-BinaryOperator 0x1b7719bd8f0 <col:23, col:32> 'int' '>'
|   | | | |   |-ImplicitCastExpr 0x1b7719bd8d8 <col:23> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x1b7719bd840 <col:23> 'int' lvalue Var 0x1b7719c0e70 'n' 'int'
|   | | | |   `-CStyleCastExpr 0x1b7719bd8b0 <col:27, col:32> 'int' <IntegralCast>
|   | | | |     `-ImplicitCastExpr 0x1b7719bd898 <col:32> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   | | | |       `-DeclRefExpr 0x1b7719bd860 <col:32> 'unsigned int' lvalue Var 0x1b7719c0f20 'b' 'unsigned int'
|   | | | `-CompoundStmt 0x1b7719bd9a8 <col:35, line:538:9>
|   | | |   `-ReturnStmt 0x1b7719bd998 <line:537:13, col:22>
|   | | |     `-ParenExpr 0x1b7719bd978 <col:20, col:22> 'int'
|   | | |       `-IntegerLiteral 0x1b7719bd950 <col:21> 'int' 0
|   | | |-ForStmt 0x1b7719bdc38 <line:539:9, line:544:9>
|   | | | |-BinaryOperator 0x1b7719bda20 <line:539:14, col:18> 'int' '='
|   | | | | |-DeclRefExpr 0x1b7719bd9d8 <col:14> 'int' lvalue Var 0x1b7719c0df0 'i' 'int'
|   | | | | `-IntegerLiteral 0x1b7719bd9f8 <col:18> 'int' 0
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x1b7719bdab0 <col:21, col:25> 'int' '<'
|   | | | | |-ImplicitCastExpr 0x1b7719bda80 <col:21> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x1b7719bda40 <col:21> 'int' lvalue Var 0x1b7719c0df0 'i' 'int'
|   | | | | `-ImplicitCastExpr 0x1b7719bda98 <col:25> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1b7719bda60 <col:25> 'int' lvalue Var 0x1b7719c0e70 'n' 'int'
|   | | | |-UnaryOperator 0x1b7719bdaf0 <col:28, col:29> 'int' postfix '++'
|   | | | | `-DeclRefExpr 0x1b7719bdad0 <col:28> 'int' lvalue Var 0x1b7719c0df0 'i' 'int'
|   | | | `-CompoundStmt 0x1b7719bdc20 <col:33, line:544:9>
|   | | |   `-IfStmt 0x1b7719bdc08 <line:540:13, line:543:13>
|   | | |     |-OpaqueValueExpr 0x1b7719bdbf0 <<invalid sloc>> '_Bool'
|   | | |     `-CompoundStmt 0x1b7719bdbd8 <line:540:39, line:543:13>
|   | | |       `-ReturnStmt 0x1b7719bdbc8 <line:542:17, col:26>
|   | | |         `-ParenExpr 0x1b7719bdba8 <col:24, col:26> 'int'
|   | | |           `-IntegerLiteral 0x1b7719bdb80 <col:25> 'int' 0
|   | | `-BinaryOperator 0x1b7719bdf18 <line:548:9, col:17> 'int' '='
|   | |   |-UnaryOperator 0x1b7719bdec8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | |   | `-ImplicitCastExpr 0x1b7719bdeb0 <col:10> 'int *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1b7719bde90 <col:10> 'int *' lvalue ParmVar 0x1b7719c0c60 'outl' 'int *'
|   | |   `-ImplicitCastExpr 0x1b7719bdf00 <col:17> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1b7719bdee0 <col:17> 'int' lvalue Var 0x1b7719c0e70 'n' 'int'
|   | `-BinaryOperator 0x1b7719bdfe0 <line:550:9, col:17> 'int' '='
|   |   |-UnaryOperator 0x1b7719bdfa0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1b7719bdf88 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b7719bdf68 <col:10> 'int *' lvalue ParmVar 0x1b7719c0c60 'outl' 'int *'
|   |   `-IntegerLiteral 0x1b7719bdfb8 <col:17> 'int' 0
|   `-ReturnStmt 0x1b7719be070 <line:551:5, col:14>
|     `-ParenExpr 0x1b7719be050 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1b7719be028 <col:13> 'int' 1
|-FunctionDecl 0x1b7719be290 <line:554:1, line:566:1> line:554:5 invalid EVP_CIPHER_CTX_set_key_length 'int (int *, int)'
| |-ParmVarDecl 0x1b7719be130 <col:35, col:51> col:51 invalid c 'int *'
| |-ParmVarDecl 0x1b7719be1b0 <col:54, col:58> col:58 used keylen 'int'
| `-CompoundStmt 0x1b7719be658 <line:555:1, line:566:1>
|   |-IfStmt 0x1b7719be4a8 <line:558:5, line:559:16>
|   | |-OpaqueValueExpr 0x1b7719be490 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b7719be480 <col:9, col:16>
|   |   `-IntegerLiteral 0x1b7719be458 <col:16> 'int' 1
|   |-IfStmt 0x1b7719be5e8 <line:560:5, line:563:5>
|   | |-OpaqueValueExpr 0x1b7719be5d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719be5b8 <line:560:72, line:563:5>
|   |   `-ReturnStmt 0x1b7719be5a8 <line:562:9, col:16>
|   |     `-IntegerLiteral 0x1b7719be580 <col:16> 'int' 1
|   `-ReturnStmt 0x1b7719be648 <line:565:5, col:12>
|     `-IntegerLiteral 0x1b7719be620 <col:12> 'int' 0
|-FunctionDecl 0x1b7719be7b8 <line:568:1, line:575:1> line:568:5 invalid EVP_CIPHER_CTX_set_padding 'int (int *, int)'
| |-ParmVarDecl 0x1b7719be698 <col:32, col:48> col:48 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719be718 <col:53, col:57> col:57 used pad 'int'
| `-CompoundStmt 0x1b7719be908 <line:569:1, line:575:1>
|   `-ReturnStmt 0x1b7719be8f8 <line:574:5, col:12>
|     `-IntegerLiteral 0x1b7719be8d0 <col:12> 'int' 1
|-FunctionDecl 0x1b7719bebb0 <line:577:1, line:597:1> line:577:5 invalid EVP_CIPHER_CTX_ctrl 'int (int *, int, int, void *)'
| |-ParmVarDecl 0x1b7719be938 <col:25, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719be9b8 <col:46, col:50> col:50 used type 'int'
| |-ParmVarDecl 0x1b7719bea38 <col:56, col:60> col:60 used arg 'int'
| |-ParmVarDecl 0x1b7719beab8 <col:65, col:71> col:71 used ptr 'void *'
| `-CompoundStmt 0x1b7719bf0a8 <line:578:1, line:597:1>
|   |-DeclStmt 0x1b7719bed08 <line:579:5, col:12>
|   | `-VarDecl 0x1b7719beca0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1b7719beda8 <line:580:5, line:583:5>
|   | |-OpaqueValueExpr 0x1b7719bed90 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719bed78 <line:580:23, line:583:5>
|   |   `-ReturnStmt 0x1b7719bed68 <line:582:9, col:16>
|   |     `-IntegerLiteral 0x1b7719bed40 <col:16> 'int' 0
|   |-IfStmt 0x1b7719bee48 <line:585:5, line:588:5>
|   | |-OpaqueValueExpr 0x1b7719bee30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b7719bee18 <line:585:29, line:588:5>
|   |   `-ReturnStmt 0x1b7719bee08 <line:587:9, col:16>
|   |     `-IntegerLiteral 0x1b7719bede0 <col:16> 'int' 0
|   |-IfStmt 0x1b7719bf048 <line:591:5, line:595:5>
|   | |-BinaryOperator 0x1b7719befb8 <line:591:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1b7719befa0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b7719bef40 <col:9> 'int' lvalue Var 0x1b7719beca0 'ret' 'int'
|   | | `-UnaryOperator 0x1b7719bef88 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1b7719bef60 <col:17> 'int' 1
|   | `-CompoundStmt 0x1b7719bf030 <col:20, line:595:5>
|   |   `-ReturnStmt 0x1b7719bf020 <line:594:9, col:16>
|   |     `-IntegerLiteral 0x1b7719beff8 <col:16> 'int' 0
|   `-ReturnStmt 0x1b7719bf098 <line:596:5, col:12>
|     `-ImplicitCastExpr 0x1b7719bf080 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1b7719bf060 <col:12> 'int' lvalue Var 0x1b7719beca0 'ret' 'int'
|-FunctionDecl 0x1b7719c12c0 <line:599:1, line:606:1> line:599:5 invalid EVP_CIPHER_CTX_rand_key 'int (int *, unsigned char *)'
| |-ParmVarDecl 0x1b7719c1160 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x1b7719c11e0 <col:50, col:65> col:65 used key 'unsigned char *'
| `-CompoundStmt 0x1b7719c15e0 <line:600:1, line:606:1>
|   |-IfStmt 0x1b7719c1590 <line:603:5, line:604:16>
|   | |-OpaqueValueExpr 0x1b7719c1578 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b7719c1568 <col:9, col:16>
|   |   `-IntegerLiteral 0x1b7719c1540 <col:16> 'int' 0
|   `-ReturnStmt 0x1b7719c15d0 <line:605:5, col:12>
|     `-IntegerLiteral 0x1b7719c15a8 <col:12> 'int' 1
`-FunctionDecl 0x1b7719c1770 <line:608:1, line:642:1> line:608:5 invalid EVP_CIPHER_CTX_copy 'int (int *, const int *)'
  |-ParmVarDecl 0x1b7719c1618 <col:25, col:41> col:41 invalid out 'int *'
  |-ParmVarDecl 0x1b7719c1698 <col:46, col:68> col:68 invalid in 'const int *'
  `-CompoundStmt 0x1b7719c1fa8 <line:609:1, line:642:1>
    |-IfStmt 0x1b7719c19d0 <line:610:5, line:613:5>
    | |-OpaqueValueExpr 0x1b7719c19b8 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1b7719c19a0 <line:610:47, line:613:5>
    |   `-ReturnStmt 0x1b7719c1990 <line:612:9, col:16>
    |     `-IntegerLiteral 0x1b7719c1968 <col:16> 'int' 0
    |-IfStmt 0x1b7719c1a90 <line:616:5, line:619:5>
    | |-OpaqueValueExpr 0x1b7719c1a78 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1b7719c1a60 <line:616:49, line:619:5>
    |   `-ReturnStmt 0x1b7719c1a50 <line:618:9, col:16>
    |     `-IntegerLiteral 0x1b7719c1a28 <col:16> 'int' 0
    |-IfStmt 0x1b7719c1dd8 <line:625:5, line:633:5>
    | |-OpaqueValueExpr 0x1b7719c1dc0 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1b7719c1da8 <line:625:50, line:633:5>
    |   `-IfStmt 0x1b7719c1d70 <line:627:9, line:631:9>
    |     |-OpaqueValueExpr 0x1b7719c1d58 <<invalid sloc>> '_Bool'
    |     `-CompoundStmt 0x1b7719c1d40 <line:627:39, line:631:9>
    |       `-ReturnStmt 0x1b7719c1d30 <line:630:13, col:20>
    |         `-IntegerLiteral 0x1b7719c1d08 <col:20> 'int' 0
    |-IfStmt 0x1b7719c1f58 <line:635:5, line:640:9>
    | |-OpaqueValueExpr 0x1b7719c1f40 <<invalid sloc>> '_Bool'
    | `-IfStmt 0x1b7719c1f28 <line:636:9, line:640:9>
    |   |-OpaqueValueExpr 0x1b7719c1f10 <<invalid sloc>> '_Bool'
    |   `-CompoundStmt 0x1b7719c1ef8 <line:636:77, line:640:9>
    |     `-ReturnStmt 0x1b7719c1ee8 <line:639:13, col:20>
    |       `-IntegerLiteral 0x1b7719c1ec0 <col:20> 'int' 0
    `-ReturnStmt 0x1b7719c1f98 <line:641:5, col:12>
      `-IntegerLiteral 0x1b7719c1f70 <col:12> 'int' 1
