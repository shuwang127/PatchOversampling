TranslationUnitDecl 0x1b6cf6138d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1b6cf614170 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1b6cf613e70 '__int128'
|-TypedefDecl 0x1b6cf6141e0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1b6cf613e90 'unsigned __int128'
|-TypedefDecl 0x1b6cf614518 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1b6cf6142d0 'struct __NSConstantString_tag'
|   `-Record 0x1b6cf614238 '__NSConstantString_tag'
|-TypedefDecl 0x1b6cf614588 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x1b6cf613ab0 'unsigned long long'
|-TypedefDecl 0x1b6cf614620 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1b6cf6145e0 'char *'
|   `-BuiltinType 0x1b6cf613970 'char'
|-TypedefDecl 0x1b6cf614690 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1b6cf6145e0 'char *'
|   `-BuiltinType 0x1b6cf613970 'char'
|-TypedefDecl 0x1b6cf614700 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x1b6cf613a10 'long long'
|-TypedefDecl 0x1b6cf614770 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x1b6cf613ab0 'unsigned long long'
|-TypedefDecl 0x1b6cf6147e0 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x1b6cf613a70 'unsigned int'
|-TypedefDecl 0x1b6cf614850 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x1b6cf613a30 'unsigned char'
|-RecordDecl 0x1b6cf67bfb0 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x1b6cf67c0a0 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x1b6cf67c108 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x1b6cf67c1b8 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x1b6cf67c160 'struct u128' sugar
|   `-RecordType 0x1b6cf67c050 'u128'
|     `-Record 0x1b6cf67bfb0 ''
|-RecordDecl 0x1b6cf67c228 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x1b6cf67c2e0 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x1b6cf67c478 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x1b6cf67c5c8 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x1b6cf67c718 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x1b6cf67c898 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x1b6cf67c948 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1b6cf67c9c0 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1b6cf67ca38 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1b6cf67cab0 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1b6cf67cb28 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1b6cf67cba0 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1b6cf67cd58 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x1b6cf67f258 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x1b6cf67f768 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x1b6cf67f7d8 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x1b6cf67f848 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x1b6cf67f8b8 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1b6cf67f928 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1b6cf67f9e8 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x1b6cf67fab8 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x1b6cf67fb28 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x1b6cf67fb98 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x1b6cf67fc08 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x1b6cf67fc60 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x1b6cf67fd20 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x1b6cf67fe40 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x1b6cf67fef8 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x1b6cf682010 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1b6cf682088 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1b6cf6820f0 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x1b6cf682160 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1b6cf6821d0 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1b6cf682280 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x1b6cf6823a0 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x1b6cf682460 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x1b6cf682518 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x1b6cf6824c0 'union OCB_BLOCK' sugar
|   `-RecordType 0x1b6cf682320 'OCB_BLOCK'
|     `-Record 0x1b6cf682280 ''
|-RecordDecl 0x1b6cf682588 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x1b6cf682658 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x1b6cf6826c8 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x1b6cf682738 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x1b6cf6827a8 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x1b6cf682818 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x1b6cf682880 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1b6cf6828e8 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1b6cf682970 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1b6cf6829d8 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1b6cf682a98 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x1b6cf682af0 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x1b6cf682bc0 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x1b6cf682c28 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x1b6cf682c90 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1b6cf682cf8 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1b6cf682d60 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x1b6cf682dc8 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x1b6cf682e78 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x1b6cf682f38 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1b6cf613ab0 'unsigned long long'
|-TypedefDecl 0x1b6cf682fa8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1b6cf6145e0 'char *'
|   `-BuiltinType 0x1b6cf613970 'char'
|-FunctionDecl 0x1b6d0fb12f0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b6d0fb1390 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1b6d0fb1400 <col:21> Implicit
|-FunctionDecl 0x1b6d0fb1458 prev 0x1b6d0fb12f0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b6d0fb1188 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1b6d0fb1548 <col:21> Inherited Implicit
|-TypedefDecl 0x1b6d0fb1588 prev 0x1b6cf614588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1b6cf613ab0 'unsigned long long'
|-TypedefDecl 0x1b6d0fb1630 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1b6d0fb1600 'size_t' sugar
|   |-Typedef 0x1b6d0fb1588 'size_t'
|   `-BuiltinType 0x1b6cf613ab0 'unsigned long long'
|-TypedefDecl 0x1b6d0fb16a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1b6cf613a10 'long long'
|-TypedefDecl 0x1b6d0fb1710 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1b6cf613a10 'long long'
|-TypedefDecl 0x1b6d0fb1780 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1b6cf613a50 'unsigned short'
|-TypedefDecl 0x1b6d0fb17f0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1b6cf613a50 'unsigned short'
|-TypedefDecl 0x1b6d0fb1860 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1b6cf613a50 'unsigned short'
|-TypedefDecl 0x1b6d0fb18d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1b6cf6139d0 'int'
|-TypedefDecl 0x1b6d0fb1940 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1b6cf6139f0 'long'
|-TypedefDecl 0x1b6d0fb19b0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1b6cf613a10 'long long'
|-TypedefDecl 0x1b6d0fb1a40 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1b6d0fb1a10 '__time64_t' sugar
|   |-Typedef 0x1b6d0fb19b0 '__time64_t'
|   `-BuiltinType 0x1b6cf613a10 'long long'
|-FunctionDecl 0x1b6d0fb1bb8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1b6d0fb1dd8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1b6d0fba420 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1b6d0fb1f18 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1b6d0fb1f90 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1b6d0fb2008 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1b6d0fb2088 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1b6d0fba1c0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1b6d0fba500 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1b6d0fba5c0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1b6d0fba730 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1b6d0fba6e0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1b6d0fba680 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1b6d0fba5a0 'struct threadlocaleinfostruct'
|       `-Record 0x1b6d0fc8270 'threadlocaleinfostruct'
|-TypedefDecl 0x1b6d0fba840 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1b6d0fba7f0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1b6d0fba790 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1b6d0fba660 'struct threadmbcinfostruct'
|       `-Record 0x1b6d0fba5c0 'threadmbcinfostruct'
|-RecordDecl 0x1b6d0fba898 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1b6d0fba950 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1b6d0fbaa10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b6d0fbaaa0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1b6d0fbab30 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1b6d0fbabe8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1b6d0fbab90 'struct localeinfo_struct' sugar
|   `-RecordType 0x1b6d0fba9f0 'struct localeinfo_struct'
|     `-Record 0x1b6d0fba950 'localeinfo_struct'
|-TypedefDecl 0x1b6d0fbacc0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1b6d0fbac70 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1b6d0fbab90 'struct localeinfo_struct' sugar
|     `-RecordType 0x1b6d0fba9f0 'struct localeinfo_struct'
|       `-Record 0x1b6d0fba950 'localeinfo_struct'
|-RecordDecl 0x1b6d0fbad38 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1b6d0fbadf0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b6d0fbae68 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1b6d0fbaf28 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1b6d0fbafc0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1b6d0fbb030 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1b6d0fbb0e8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1b6d0fbb090 'struct localerefcount' sugar
|   `-RecordType 0x1b6d0fbadd0 'struct localerefcount'
|     `-Record 0x1b6d0fbad38 'localerefcount'
|-RecordDecl 0x1b6d0fc8270 prev 0x1b6d0fba500 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1b6d0fc82f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b6d0fc8368 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1b6d0fc83d8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1b6d0fc8448 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1b6d0fc84b8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1b6d0fc8678 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1b6d0fc86e8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1b6d0fc8758 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1b6d0fc87c8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1b6d0fc8838 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1b6d0fc88a8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1b6d0fc8900 parent 0x1b6cf6138d8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1b6d0fc8a90 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1b6d0fc8b00 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1b6d0fc8b70 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1b6d0fc8be0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1b6d0fc8c50 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1b6d0fc8cc0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1b6d0fc8dd0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1b6d0fc8f08 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1b6d0fc8fb8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1b6d0fc8f60 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1b6d0fba5a0 'struct threadlocaleinfostruct'
|     `-Record 0x1b6d0fc8270 'threadlocaleinfostruct'
|-FunctionDecl 0x1b6d0fc1390 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1b6d0fc9040 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1b6d0fc90f0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1b6d0fc9170 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1b6d0fc91e8 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fc1758 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d0fc17f8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b6d0fc1860 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1b6d0fc18c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d0fc1948 prev 0x1b6d0fc1758 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1b6d0fc1480 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1b6d0fc1500 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1b6d0fc1578 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fc1d08 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1b6d0fc1a30 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1b6d0fc1ab0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1b6d0fc1b28 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fc9280 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d0fc1df0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1b6d0fc1e70 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1b6d0fc1ee8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d0fc1f80 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d0fc9588 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d0fc9628 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b6d0fc9690 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b6d0fc96f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d0fc9778 prev 0x1b6d0fc9588 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1b6d0fc9370 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1b6d0fc93f0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1b6d0fc9468 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fc9b38 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d0fc9bd8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b6d0fc9c40 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b6d0fc9ca8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d0fc9d28 prev 0x1b6d0fc9b38 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1b6d0fc9860 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1b6d0fc98e0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1b6d0fc9958 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fca1c8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1b6d0fc9e38 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1b6d0fc9ed0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d0fc9f50 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1b6d0fc9fc8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fc2538 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d0fc25d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b6d0fc2640 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1b6d0fc26a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d0fc2728 prev 0x1b6d0fc2538 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1b6d0fc2260 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1b6d0fc22e0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1b6d0fc2358 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fc2ba8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d0fc2c48 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b6d0fc2cb0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b6d0fc2d18 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1b6d0fc2d80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d0fc2e08 prev 0x1b6d0fc2ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1b6d0fc28f0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1b6d0fc2970 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1b6d0fc29f0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1b6d0fc2a68 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d0fc2ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1b6d0fca330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1b6d0fc3090 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1b6d0fc3110 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1b6d0fc3188 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d0fca3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1b6d0fca7e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1b6d0fca510 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1b6d0fca588 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d0fca608 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1b6d0fcabb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1b6d0fca9c0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1b6d0fcaa40 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1b6d0fcac60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d0fcb070 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1b6d0fcada8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1b6d0fcae20 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d0fcaea0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1b6d0fc4420 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1b6d0fc44c0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1b6d0fc4528 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b6d0fc45a0 prev 0x1b6d0fc4420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1b6d0fc4230 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1b6d0fc42b0 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1b6d0fc4650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d0fc49a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1b6d0fc4798 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1b6d0fc4810 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d0fc4890 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1b6d0fc4cd0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1b6d0fc4d70 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1b6d0fc4dd8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b6d0fc4e50 prev 0x1b6d0fc4cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1b6d0fc4b50 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1b6d0fc4bd0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1b6d0fc4f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d0fcc2b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1b6d0fcc350 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d0fcc3b8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b6d0fcc430 prev 0x1b6d0fcc2b0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1b6d0fc5048 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1b6d0fc50c8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1b6d0fcc680 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1b6d0fcc720 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b6d0fcc790 prev 0x1b6d0fcc680 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1b6d0fcc510 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1b6d0fcca88 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1b6d0fcc868 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1b6d0fcc8e0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fcccd8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1b6d0fccb68 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1b6d0fccbe0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b6d0fcd008 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1b6d0fccff8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1b6d0fccfc8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1b6d0fcce38 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1b6d0fcce18 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1b6d0fccde8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1b6d0fccda0 <col:13> 'const char *' lvalue ParmVar 0x1b6d0fccb68 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1b6d0fcce00 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1b6d0fccdc0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1b6d0fccfb0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1b6d0fcce58 <col:24> 'int' 0
|       `-CallExpr 0x1b6d0fccf50 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1b6d0fccf38 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1b6d0fcce80 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1b6d0fcca88 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1b6d0fccf80 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1b6d0fccea0 <col:36> 'const char *' lvalue ParmVar 0x1b6d0fccb68 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1b6d0fccf98 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1b6d0fccec0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d0fccbe0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fc5288 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1b6d0fcd038 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1b6d0fcd0b0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d0fcd130 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1b6d0fcd1a8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fc5590 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d0fc5630 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b6d0fc5698 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b6d0fc5700 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d0fc5780 prev 0x1b6d0fc5590 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1b6d0fc5378 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1b6d0fc53f8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1b6d0fc5470 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0fc59b8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1b6d0fc5868 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1b6d0fc5c80 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1b6d0fc5d20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d0fc5d88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1b6d0fc5e00 prev 0x1b6d0fc5c80 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1b6d0fc5a90 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1b6d0fc5b10 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1b6d0fc6060 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b6d0fc5ee0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1b6d0fc5f60 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1b6d0fcd340 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b6d0fc6140 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1b6d0fc61c0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1b6d0fcd6f8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1b6d0fcd420 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d0fcd4a0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1b6d0fcd518 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d0fcd960 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b6d0fcd7e0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1b6d0fcd860 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1b6d0fcdc58 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1b6d0fcda40 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d0fcdac0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1b6d0fcdb38 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d0fcdec0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b6d0fcdd40 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1b6d0fcddc0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1b6d0fce1b8 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1b6d0fcdfa0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d0fce020 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1b6d0fce098 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d0f895b8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b6d0f892e0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d0f89360 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1b6d0f893d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0f89a20 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d0f896a0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d0f89720 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1b6d0f89798 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d0f89810 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d0f89d28 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b6d0f89b10 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d0f89b90 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1b6d0f89c08 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d0f8a0c0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d0f89e10 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d0f89e90 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1b6d0f89f08 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d0f89f80 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d1026108 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1b6d10261a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d1026210 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b6d1026288 prev 0x1b6d1026108 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1b6d0f8a1b0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1b6d0f8a230 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1b6d1026540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1b6d1026460 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1b6d10265e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d10269c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1b6d1026730 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1b6d10267a8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d1026828 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1b6d1026cd8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1b6d1026d78 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1b6d1026de8 prev 0x1b6d1026cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1b6d1026ba0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1b6d1026e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d10201b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1b6d101ffa0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1b6d1020018 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d1020098 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1b6d10204b8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1b6d1020298 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1b6d1020310 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d10207a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b6d1020658 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1b6d1020850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d1020c60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d1020998 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1b6d1020a10 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d1020a88 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d1021050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1b6d1020e08 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1b6d1020e80 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b6d1021100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d10215b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1b6d1021248 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1b6d10212c0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d1021340 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1b6d10213b8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b6d1021a38 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d1021ad8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b6d1021b40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d1021ba8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d1021c28 prev 0x1b6d1021a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b6d1021768 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1b6d10217e8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1b6d1021860 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d1021ce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d1024080 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d1024120 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b6d1024188 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d10241f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d1024270 prev 0x1b6d1024080 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b6d1021e28 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d1021ea8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1b6d1021f20 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d1024570 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b6d1024358 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d10243d8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1b6d1024450 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d1024908 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d1024658 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d10246d8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1b6d1024750 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d10247c8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d1024ca0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1b6d10249f8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1b6d1024a70 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d1024af0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1b6d1024b68 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b6d10280a8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d1028148 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b6d10281b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d1028218 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d1028298 prev 0x1b6d10280a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b6d1024e50 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1b6d1024ed0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1b6d1024f48 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d1028350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d1028808 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1b6d1028498 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1b6d1028510 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d1028590 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1b6d1028608 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d1028c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1b6d10289b8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1b6d1028a38 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1b6d1028ab0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d1028d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d1022030 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1b6d10220d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d1022138 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b6d10221b0 prev 0x1b6d1022030 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1b6d1028e88 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1b6d1028f08 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1b6d1022410 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1b6d10224b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d1022518 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1b6d1022590 prev 0x1b6d1022410 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1b6d1022290 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1b6d1022310 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1b6d1022750 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1b6d1022670 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1b6d10229a0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1b6d1022a40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d1022aa8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b6d1022b20 prev 0x1b6d10229a0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1b6d1022828 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1b6d10228a8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1b6d1022d80 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1b6d1022e20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d1022e88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b6d1022f00 prev 0x1b6d1022d80 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1b6d1022c00 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1b6d1022c80 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1b6d102a2b0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1b6d102a350 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1b6d102a3b8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b6d102a430 prev 0x1b6d102a2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1b6d102a130 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1b6d102a1b0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1b6d102a4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d102a8c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1b6d102a628 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1b6d102a6a8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1b6d102a728 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1b6d102ab20 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1b6d102a9b0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1b6d102aa28 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d102ada0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b6d102acc0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1b6d102ae48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d1025180 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d102af90 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1b6d1024ff0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d1025068 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d10254a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1b6d1025328 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1b6d10253a0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b6d1025550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d1025960 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d1025a00 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b6d1025a68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b6d1025ad0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d1025b50 prev 0x1b6d1025960 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b6d1025698 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1b6d1025718 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1b6d1025790 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d1029030 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d1025c38 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1b6d1025cb8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1b6d1025d30 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d1025da8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d10292e0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1b6d1029380 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b6d10293f0 prev 0x1b6d10292e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1b6d1029200 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1b6d1029498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1b6d10297e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b6d1029660 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d10296e0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1b6d1029890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1b6d1029bd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b6d1029a58 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d1029ad8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1b6d1029c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1b6d1029f30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b6d1029e50 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1b6d1029fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1b6d10273e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b6d10271d0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1b6d1027250 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1b6d10272c8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d10274a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1b6d1027880 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1b6d1027668 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1b6d10276e8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1b6d1027760 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d1027938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1b6d1027be0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b6d1027b00 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1b6d1027c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1b6d1022fd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1b6d1027e50 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1b6d1027ed0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1b6d1023080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1b6d1023328 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b6d1023248 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1b6d10233d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1b6d1023660 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1b6d10234f0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1b6d10239f0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1b6d1023730 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b6d10237a8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d1023820 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1b6d1023da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d1023b90 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b6d1023c08 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1b6d1023e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d102b268 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1b6d102b308 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1b6d102b370 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1b6d102b3e8 prev 0x1b6d102b268 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1b6d102b050 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b6d102b0c8 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b6d102b6e0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1b6d102b780 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1b6d102b7e8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1b6d102b860 prev 0x1b6d102b6e0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1b6d102b4c0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b6d102b538 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b6d102bb40 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1b6d102b938 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b6d102b9b0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d102ba28 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1b6d102be50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d102bce0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b6d102bd58 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1b6d102bf00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d10332e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d10330d0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b6d1033148 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1b6d1033530 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1b6d10335d0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1b6d1033640 prev 0x1b6d1033530 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1b6d10333c0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1b6d1033928 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b6d1033710 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b6d1033788 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d1033b70 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1b6d1033a00 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b6d1033a78 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b6d1033f08 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1b6d1033ef8 <line:307:5, col:56>
|     `-ConditionalOperator 0x1b6d1033ec8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1b6d1033d30 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1b6d1033d10 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1b6d1033ce0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1b6d1033c38 <col:13> 'const wchar_t *' lvalue ParmVar 0x1b6d1033a00 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1b6d1033cf8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1b6d1033cc0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1b6d1033c98 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1b6d1033c58 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1b6d1033eb0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1b6d1033d50 <col:29> 'int' 0
|       `-CallExpr 0x1b6d1033e50 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1b6d1033e38 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1b6d1033d78 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1b6d1033928 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1b6d1033e80 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1b6d1033d98 <col:41> 'const wchar_t *' lvalue ParmVar 0x1b6d1033a00 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1b6d1033e98 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1b6d1033db8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1033a78 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d102c268 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1b6d1033f30 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b6d1033fa8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d1034020 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b6d102c060 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b6d102c6d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b6d102c410 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b6d102c488 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1b6d102c500 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d102c788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d102cb98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1b6d102cc38 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1b6d102cca0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1b6d102cd08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b6d102cd88 prev 0x1b6d102cb98 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1b6d102c8c8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d102c940 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b6d102c9b8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d1030158 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1b6d102ce68 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b6d102cee0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d102cf58 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b6d102cfd0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b6d1030508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b6d1030300 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b6d1030378 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1b6d10303f0 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d10305c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d1030918 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d1030700 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b6d1030778 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1b6d1030b60 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1b6d10309f0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b6d1030a68 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b6d1030da8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d1030c38 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b6d1030cb0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1b6d1030ff0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d1030e80 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b6d1030ef8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1b6d102d2c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d102d158 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b6d102d1d0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1b6d102d378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d102d7e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1b6d102d4b8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b6d102d530 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1b6d102d610 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1b6d102db00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1b6d102d988 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1b6d102dba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d102dfb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1b6d102dce8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1b6d102dd60 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d102dde0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1b6d10322c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1b6d10321e8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1b6d1032368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d1032730 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1b6d10324a8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1b6d1032520 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d1032598 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1b6d1032988 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d1032810 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b6d1032888 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b6d1032d28 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b6d1032a60 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d1032ad8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b6d1032b50 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d1033018 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b6d1032e08 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d1032e80 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b6d1032ef8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d1034490 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d1034120 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d1034198 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b6d1034210 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d1034288 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d10348e8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1b6d1034578 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b6d10345f0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d1034668 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1b6d10346e0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d1034d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1b6d1034a90 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b6d1034b08 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1b6d1034b80 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d1034e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d10350f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1b6d1034f48 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1b6d1035480 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1b6d10351c0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b6d1035238 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d10352b0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b6d1035838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1b6d1035620 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b6d1035698 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1b6d10358e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d1035c48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1b6d1035a28 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1b6d1035aa0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d1035eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b6d1035de0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1b6d1035f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d102e340 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d102e080 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b6d102e0f8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d102e170 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d102e6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b6d102e4e0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1b6d102e558 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b6d102e7a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d102ea58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1b6d102e8e8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1b6d102e960 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d102ecc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b6d102ebf0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1b6d102ed70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d102f0d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d102eeb0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b6d102ef28 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d102efa0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d102f3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b6d102f270 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1b6d102f2e8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b6d102f490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b6d102f890 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b6d102f5d0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b6d102f648 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b6d102f6c0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d102fcd8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d102f970 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b6d102f9e8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b6d102fa60 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d102fad8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d102ff38 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d102fdc0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b6d102fe38 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b6d103b2e8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b6d1030010 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103b150 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b6d103b1c8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d103b540 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d103b3c8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b6d103b440 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b6d103b828 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b6d103b618 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103b690 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b6d103b708 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d103bb18 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b6d103b908 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103b980 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b6d103b9f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d103bea0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d103bbf8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103bc70 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103bce8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d103bd60 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d103c1a8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b6d103bf88 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103c000 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b6d103c078 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d103c530 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b6d103c288 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103c300 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103c378 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b6d103c3f0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b6d103c790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1b6d103c6b8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1b6d103c838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1b6d103cb70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d103c9f8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103ca70 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1b6d103cc20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1b6d103cff0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b6d103cde0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103ce58 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b6d103ced0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d103d0a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1b6d1036480 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1b6d1036278 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b6d10362f0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1b6d1036368 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b6d1036538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1b6d10367d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b6d10366f8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1b6d1036878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1b6d1036ba8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1b6d1036a38 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b6d1036ab0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1b6d1036c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1b6d1036ef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b6d1036e18 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1b6d1036f98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1b6d10392b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b6d10391e0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1b6d1039360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1b6d1039698 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b6d1039520 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b6d1039598 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1b6d1039748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x1b6d1039b78 <.//openssl//file_jk/after\crypto\modes\ccm128.c:18:1, line:27:1> line:18:6 invalid CRYPTO_ccm128_init 'void (int *, unsigned int, unsigned int, void *, int)'
| |-ParmVarDecl 0x1b6d1039870 <col:25, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x1b6d10398f0 <line:19:25, col:38> col:38 used M 'unsigned int'
| |-ParmVarDecl 0x1b6d1039970 <col:41, col:54> col:54 used L 'unsigned int'
| |-ParmVarDecl 0x1b6d10399f0 <col:57, col:63> col:63 used key 'void *'
| |-ParmVarDecl 0x1b6d1039a70 <line:20:25, col:36> col:36 invalid block 'int'
| `-CompoundStmt 0x1b6d103e1e0 <line:21:1, line:27:1>
|-FunctionDecl 0x1b6d103e4c0 <line:32:1, line:57:1> line:32:5 invalid CRYPTO_ccm128_setiv 'int (int *, const unsigned char *, size_t, size_t)'
| |-ParmVarDecl 0x1b6d103e208 <col:25, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x1b6d103e288 <line:33:25, col:46> col:46 used nonce 'const unsigned char *'
| |-ParmVarDecl 0x1b6d103e300 <col:53, col:60> col:60 used nlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d103e378 <col:66, col:73> col:73 used mlen 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b6d1037918 <line:34:1, line:57:1>
|   |-DeclStmt 0x1b6d103e668 <line:35:5, col:41>
|   | `-VarDecl 0x1b6d103e5b0 <col:5, col:18> col:18 used L 'unsigned int'
|   |-IfStmt 0x1b6d103e828 <line:37:5, line:38:17>
|   | |-BinaryOperator 0x1b6d103e7b8 <line:37:9, col:23> 'int' '<'
|   | | |-ImplicitCastExpr 0x1b6d103e788 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d103e680 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d103e300 'nlen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b6d103e7a0 <col:16, col:23> 'unsigned long long' <IntegralCast>
|   | |   `-ParenExpr 0x1b6d103e768 <col:16, col:23> 'unsigned int'
|   | |     `-BinaryOperator 0x1b6d103e748 <col:17, col:22> 'unsigned int' '-'
|   | |       |-ImplicitCastExpr 0x1b6d103e730 <col:17> 'unsigned int' <IntegralCast>
|   | |       | `-IntegerLiteral 0x1b6d103e6b8 <col:17> 'int' 14
|   | |       `-ImplicitCastExpr 0x1b6d103e718 <col:22> 'unsigned int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1b6d103e6e0 <col:22> 'unsigned int' lvalue Var 0x1b6d103e5b0 'L' 'unsigned int'
|   | `-ReturnStmt 0x1b6d103e818 <line:38:9, col:17>
|   |   `-UnaryOperator 0x1b6d103e800 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1b6d103e7d8 <col:17> 'int' 1
|   |-IfStmt 0x1b6d1037340 <line:40:5, line:46:9> has_else
|   | |-BinaryOperator 0x1b6d103e998 <line:40:9, col:35> 'int' '&&'
|   | | |-BinaryOperator 0x1b6d103e8e0 <col:9, col:25> 'int' '=='
|   | | | |-UnaryExprOrTypeTraitExpr 0x1b6d103e880 <col:9, col:20> 'unsigned long long' sizeof
|   | | | | `-ParenExpr 0x1b6d103e860 <col:15, col:20> 'size_t':'unsigned long long' lvalue
|   | | | |   `-DeclRefExpr 0x1b6d103e840 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d103e378 'mlen' 'size_t':'unsigned long long' non_odr_use_unevaluated
|   | | | `-ImplicitCastExpr 0x1b6d103e8c8 <col:25> 'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1b6d103e8a0 <col:25> 'int' 8
|   | | `-BinaryOperator 0x1b6d103e978 <col:30, col:35> 'int' '>='
|   | |   |-ImplicitCastExpr 0x1b6d103e948 <col:30> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1b6d103e900 <col:30> 'unsigned int' lvalue Var 0x1b6d103e5b0 'L' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x1b6d103e960 <col:35> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x1b6d103e920 <col:35> 'int' 3
|   | |-CompoundStmt 0x1b6d10372d8 <col:38, line:45:5>
|   | `-NullStmt 0x1b6d1037338 <line:46:9>
|   `-ReturnStmt 0x1b6d1037908 <line:56:5, col:12>
|     `-IntegerLiteral 0x1b6d10378e0 <col:12> 'int' 0
|-FunctionDecl 0x1b6d1037b78 <line:60:1, line:105:1> line:60:6 invalid CRYPTO_ccm128_aad 'void (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x1b6d1037960 <col:24, col:40> col:40 invalid ctx 'int *'
| |-ParmVarDecl 0x1b6d10379e0 <line:61:24, col:45> col:45 used aad 'const unsigned char *'
| |-ParmVarDecl 0x1b6d1037a58 <col:50, col:57> col:57 used alen 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b6d103ac38 <line:62:1, line:105:1>
|   |-DeclStmt 0x1b6d1037cc8 <line:63:5, col:19>
|   | `-VarDecl 0x1b6d1037c60 <col:5, col:18> col:18 used i 'unsigned int'
|   |-IfStmt 0x1b6d1037da0 <line:66:5, line:67:9>
|   | |-BinaryOperator 0x1b6d1037d70 <line:66:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1b6d1037d40 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d1037ce0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1037a58 'alen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b6d1037d58 <col:17> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b6d1037d18 <col:17> 'int' 0
|   | `-ReturnStmt 0x1b6d1037d90 <line:67:9>
|   |-IfStmt 0x1b6d103a8c0 <line:72:5, line:97:5> has_else
|   | |-BinaryOperator 0x1b6d1037ee8 <line:72:9, col:32> 'int' '<'
|   | | |-ImplicitCastExpr 0x1b6d1037eb8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d1037e08 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1037a58 'alen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b6d1037ed0 <col:16, col:32> 'unsigned long long' <IntegralCast>
|   | |   `-ParenExpr 0x1b6d1037e98 <col:16, col:32> 'int'
|   | |     `-BinaryOperator 0x1b6d1037e78 <col:17, col:27> 'int' '-'
|   | |       |-IntegerLiteral 0x1b6d1037e28 <col:17> 'int' 65536
|   | |       `-IntegerLiteral 0x1b6d1037e50 <col:27> 'int' 256
|   | |-CompoundStmt 0x1b6d1038180 <col:35, line:76:5>
|   | | `-BinaryOperator 0x1b6d1038160 <line:75:9, col:13> 'unsigned int' '='
|   | |   |-DeclRefExpr 0x1b6d10380c0 <col:9> 'unsigned int' lvalue Var 0x1b6d1037c60 'i' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x1b6d1038148 <col:13> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x1b6d1038120 <col:13> 'int' 2
|   | `-IfStmt 0x1b6d103a898 <line:76:12, line:97:5> has_else
|   |   |-BinaryOperator 0x1b6d1038490 <line:76:16, line:77:64> 'int' '&&'
|   |   | |-BinaryOperator 0x1b6d1038238 <line:76:16, col:32> 'int' '=='
|   |   | | |-UnaryExprOrTypeTraitExpr 0x1b6d10381d8 <col:16, col:27> 'unsigned long long' sizeof
|   |   | | | `-ParenExpr 0x1b6d10381b8 <col:22, col:27> 'size_t':'unsigned long long' lvalue
|   |   | | |   `-DeclRefExpr 0x1b6d1038198 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1037a58 'alen' 'size_t':'unsigned long long' non_odr_use_unevaluated
|   |   | | `-ImplicitCastExpr 0x1b6d1038220 <col:32> 'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1b6d10381f8 <col:32> 'int' 8
|   |   | `-BinaryOperator 0x1b6d1038470 <line:77:19, col:64> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x1b6d1038458 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1b6d1038258 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1037a58 'alen' 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x1b6d1038438 <col:27, col:64> 'size_t':'unsigned long long' '<<'
|   |   |     |-CStyleCastExpr 0x1b6d10382b0 <col:27, col:35> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     | `-IntegerLiteral 0x1b6d1038278 <col:35> 'int' 1
|   |   |     `-ParenExpr 0x1b6d1038418 <col:40, col:64> 'unsigned long long'
|   |   |       `-BinaryOperator 0x1b6d10383f8 <col:41, col:63> 'unsigned long long' '%'
|   |   |         |-ImplicitCastExpr 0x1b6d10383e0 <col:41> 'unsigned long long' <IntegralCast>
|   |   |         | `-IntegerLiteral 0x1b6d10382d8 <col:41> 'int' 32
|   |   |         `-ParenExpr 0x1b6d10383c0 <col:46, col:63> 'unsigned long long'
|   |   |           `-BinaryOperator 0x1b6d10383a0 <col:47, col:62> 'unsigned long long' '*'
|   |   |             |-UnaryExprOrTypeTraitExpr 0x1b6d1038340 <col:47, col:58> 'unsigned long long' sizeof
|   |   |             | `-ParenExpr 0x1b6d1038320 <col:53, col:58> 'size_t':'unsigned long long' lvalue
|   |   |             |   `-DeclRefExpr 0x1b6d1038300 <col:54> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1037a58 'alen' 'size_t':'unsigned long long' non_odr_use_unevaluated
|   |   |             `-ImplicitCastExpr 0x1b6d1038388 <col:62> 'unsigned long long' <IntegralCast>
|   |   |               `-IntegerLiteral 0x1b6d1038360 <col:62> 'int' 8
|   |   |-CompoundStmt 0x1b6d103a350 <col:67, line:89:5>
|   |   | `-BinaryOperator 0x1b6d103a330 <line:88:9, col:13> 'unsigned int' '='
|   |   |   |-DeclRefExpr 0x1b6d103a2d0 <col:9> 'unsigned int' lvalue Var 0x1b6d1037c60 'i' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x1b6d103a318 <col:13> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1b6d103a2f0 <col:13> 'int' 10
|   |   `-CompoundStmt 0x1b6d103a880 <line:89:12, line:97:5>
|   |     `-BinaryOperator 0x1b6d103a860 <line:96:9, col:13> 'unsigned int' '='
|   |       |-DeclRefExpr 0x1b6d103a800 <col:9> 'unsigned int' lvalue Var 0x1b6d1037c60 'i' 'unsigned int'
|   |       `-ImplicitCastExpr 0x1b6d103a848 <col:13> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x1b6d103a820 <col:13> 'int' 6
|   `-DoStmt 0x1b6d103ac18 <line:99:5, line:104:18>
|     |-CompoundStmt 0x1b6d103abc8 <line:99:8, line:104:5>
|     | `-BinaryOperator 0x1b6d103aba8 <line:103:9, col:13> 'unsigned int' '='
|     |   |-DeclRefExpr 0x1b6d103ab48 <col:9> 'unsigned int' lvalue Var 0x1b6d1037c60 'i' 'unsigned int'
|     |   `-ImplicitCastExpr 0x1b6d103ab90 <col:13> 'unsigned int' <IntegralCast>
|     |     `-IntegerLiteral 0x1b6d103ab68 <col:13> 'int' 0
|     `-ImplicitCastExpr 0x1b6d103ac00 <line:104:14> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x1b6d103abe0 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1037a58 'alen' 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d103ad88 <line:113:1, line:127:1> line:113:13 used ctr64_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x1b6d103acb0 <col:23, col:38> col:38 used counter 'unsigned char *'
| `-CompoundStmt 0x1b6d1045258 <line:114:1, line:127:1>
|   |-DeclStmt 0x1b6d103af08 <line:115:5, col:23>
|   | `-VarDecl 0x1b6d103ae60 <col:5, col:22> col:18 used n 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1b6d103aef0 <col:22> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x1b6d103aec8 <col:22> 'int' 8
|   |-DeclStmt 0x1b6d103af98 <line:116:5, col:9>
|   | `-VarDecl 0x1b6d103af30 <col:5, col:8> col:8 used c 'u8':'unsigned char'
|   |-CompoundAssignOperator 0x1b6d103aff8 <line:118:5, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-DeclRefExpr 0x1b6d103afb0 <col:5> 'unsigned char *' lvalue ParmVar 0x1b6d103acb0 'counter' 'unsigned char *'
|   | `-IntegerLiteral 0x1b6d103afd0 <col:16> 'int' 8
|   `-DoStmt 0x1b6d1045238 <line:119:5, line:126:15>
|     |-CompoundStmt 0x1b6d10451c8 <line:119:8, line:126:5>
|     | |-UnaryOperator 0x1b6d103b060 <line:120:9, col:11> 'unsigned int' prefix '--'
|     | | `-DeclRefExpr 0x1b6d103b028 <col:11> 'unsigned int' lvalue Var 0x1b6d103ae60 'n' 'unsigned int'
|     | |-BinaryOperator 0x1b6d1045028 <line:121:9, col:22> 'u8':'unsigned char' '='
|     | | |-DeclRefExpr 0x1b6d103b078 <col:9> 'u8':'unsigned char' lvalue Var 0x1b6d103af30 'c' 'u8':'unsigned char'
|     | | `-ImplicitCastExpr 0x1b6d1045010 <col:13, col:22> 'unsigned char' <LValueToRValue>
|     | |   `-ArraySubscriptExpr 0x1b6d103b120 <col:13, col:22> 'unsigned char' lvalue
|     | |     |-ImplicitCastExpr 0x1b6d103b0f0 <col:13> 'unsigned char *' <LValueToRValue>
|     | |     | `-DeclRefExpr 0x1b6d103b0b0 <col:13> 'unsigned char *' lvalue ParmVar 0x1b6d103acb0 'counter' 'unsigned char *'
|     | |     `-ImplicitCastExpr 0x1b6d103b108 <col:21> 'unsigned int' <LValueToRValue>
|     | |       `-DeclRefExpr 0x1b6d103b0d0 <col:21> 'unsigned int' lvalue Var 0x1b6d103ae60 'n' 'unsigned int'
|     | |-UnaryOperator 0x1b6d1045068 <line:122:9, col:11> 'u8':'unsigned char' prefix '++' cannot overflow
|     | | `-DeclRefExpr 0x1b6d1045048 <col:11> 'u8':'unsigned char' lvalue Var 0x1b6d103af30 'c' 'u8':'unsigned char'
|     | |-BinaryOperator 0x1b6d1045148 <line:123:9, col:22> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x1b6d10450f0 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x1b6d10450c0 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1b6d1045080 <col:9> 'unsigned char *' lvalue ParmVar 0x1b6d103acb0 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x1b6d10450d8 <col:17> 'unsigned int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1b6d10450a0 <col:17> 'unsigned int' lvalue Var 0x1b6d103ae60 'n' 'unsigned int'
|     | | `-ImplicitCastExpr 0x1b6d1045130 <col:22> 'u8':'unsigned char' <LValueToRValue>
|     | |   `-DeclRefExpr 0x1b6d1045110 <col:22> 'u8':'unsigned char' lvalue Var 0x1b6d103af30 'c' 'u8':'unsigned char'
|     | `-IfStmt 0x1b6d10451b0 <line:124:9, line:125:13>
|     |   |-ImplicitCastExpr 0x1b6d1045188 <line:124:13> 'u8':'unsigned char' <LValueToRValue>
|     |   | `-DeclRefExpr 0x1b6d1045168 <col:13> 'u8':'unsigned char' lvalue Var 0x1b6d103af30 'c' 'u8':'unsigned char'
|     |   `-ReturnStmt 0x1b6d10451a0 <line:125:13>
|     `-ImplicitCastExpr 0x1b6d1045220 <line:126:14> 'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x1b6d1045200 <col:14> 'unsigned int' lvalue Var 0x1b6d103ae60 'n' 'unsigned int'
|-FunctionDecl 0x1b6d1045560 <line:129:1, line:211:1> line:129:5 invalid CRYPTO_ccm128_encrypt 'int (int *, const unsigned char *, unsigned char *, size_t)'
| |-ParmVarDecl 0x1b6d10452a0 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1b6d1045320 <line:130:27, col:48> col:48 used inp 'const unsigned char *'
| |-ParmVarDecl 0x1b6d10453a0 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x1b6d1045418 <line:131:27, col:34> col:34 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b6d1046e38 <line:132:1, line:211:1>
|   |-DeclStmt 0x1b6d10456b0 <line:133:5, col:13>
|   | `-VarDecl 0x1b6d1045648 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x1b6d10457e0 <line:134:5, col:22>
|   | |-VarDecl 0x1b6d10456e0 <col:5, col:18> col:18 used i 'unsigned int'
|   | `-VarDecl 0x1b6d1045760 <col:5, col:21> col:21 used L 'unsigned int'
|   |-DeclStmt 0x1b6d10458a0 <line:135:5, col:43>
|   | `-VarDecl 0x1b6d1045810 <col:5, col:19> col:19 used flags0 'unsigned char'
|   |-DeclStmt 0x1b6d1045938 <line:137:5, col:25>
|   | `-VarDecl 0x1b6d10458d0 <col:5, col:11> col:11 used key 'void *'
|   |-DeclStmt 0x1b6d1045c58 <line:138:5, line:141:14>
|   | |-RecordDecl 0x1b6d1045950 <line:138:5, line:141:5> line:138:5 union definition
|   | | |-FieldDecl 0x1b6d1045a70 <line:139:9, col:16> col:13 referenced u 'u64 [2]'
|   | | `-FieldDecl 0x1b6d1045b28 <line:140:9, col:16> col:12 referenced c 'u8 [16]'
|   | `-VarDecl 0x1b6d1045bd8 <line:138:5, line:141:7> col:7 used scratch 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)'
|   |-ForStmt 0x1b6d1043250 <line:147:5, line:151:5>
|   | |-BinaryOperator 0x1b6d1043030 <line:147:10, col:26> 'unsigned int' ','
|   | | |-BinaryOperator 0x1b6d1045f38 <col:10, col:14> 'size_t':'unsigned long long' '='
|   | | | |-DeclRefExpr 0x1b6d1045ec0 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1b6d1045648 'n' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x1b6d1045f20 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1b6d1045ef8 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1b6d1043010 <col:17, col:26> 'unsigned int' '='
|   | |   |-DeclRefExpr 0x1b6d1045f58 <col:17> 'unsigned int' lvalue Var 0x1b6d10456e0 'i' 'unsigned int'
|   | |   `-BinaryOperator 0x1b6d1042ff0 <col:21, col:26> 'unsigned int' '-'
|   | |     |-ImplicitCastExpr 0x1b6d1045ff0 <col:21> 'unsigned int' <IntegralCast>
|   | |     | `-IntegerLiteral 0x1b6d1045f90 <col:21> 'int' 15
|   | |     `-ImplicitCastExpr 0x1b6d1045fd8 <col:26> 'unsigned int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1b6d1045fb8 <col:26> 'unsigned int' lvalue Var 0x1b6d1045760 'L' 'unsigned int'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1b6d10430c8 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x1b6d1043098 <col:29> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d1043050 <col:29> 'unsigned int' lvalue Var 0x1b6d10456e0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1b6d10430b0 <col:33> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b6d1043070 <col:33> 'int' 15
|   | |-UnaryOperator 0x1b6d1043108 <col:37, col:39> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1b6d10430e8 <col:39> 'unsigned int' lvalue Var 0x1b6d10456e0 'i' 'unsigned int'
|   | `-CompoundStmt 0x1b6d1043238 <col:42, line:151:5>
|   |   `-CompoundAssignOperator 0x1b6d1043208 <line:150:9, col:15> 'size_t':'unsigned long long' '<<=' ComputeLHSTy='size_t':'unsigned long long' ComputeResultTy='size_t':'unsigned long long'
|   |     |-DeclRefExpr 0x1b6d10431a8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d1045648 'n' 'size_t':'unsigned long long'
|   |     `-IntegerLiteral 0x1b6d10431c8 <col:15> 'int' 8
|   |-IfStmt 0x1b6d1043418 <line:155:5, line:156:17>
|   | |-BinaryOperator 0x1b6d10433a8 <line:155:9, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x1b6d1043378 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d1043320 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d1045648 'n' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b6d1043390 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b6d1043340 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1045418 'len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1b6d1043408 <line:156:9, col:17>
|   |   `-UnaryOperator 0x1b6d10433f0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1b6d10433c8 <col:17> 'int' 1
|   |-IfStmt 0x1b6d10436a8 <line:159:5, line:160:17>
|   | |-OpaqueValueExpr 0x1b6d1043690 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b6d1043680 <col:9, col:17>
|   |   `-UnaryOperator 0x1b6d1043668 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1b6d1043640 <col:17> 'int' 2
|   |-WhileStmt 0x1b6d1046230 <line:162:5, line:190:5>
|   | |-BinaryOperator 0x1b6d1043738 <line:162:12, col:19> 'int' '>='
|   | | |-ImplicitCastExpr 0x1b6d1043708 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d10436c0 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1045418 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b6d1043720 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b6d10436e0 <col:19> 'int' 16
|   | `-CompoundStmt 0x1b6d10461f8 <col:23, line:190:5>
|   |   |-BinaryOperator 0x1b6d1043d00 <line:184:9, col:56> 'u64':'unsigned long long' '='
|   |   | |-ArraySubscriptExpr 0x1b6d1043b08 <col:9, col:23> 'u64':'unsigned long long' lvalue
|   |   | | |-ParenExpr 0x1b6d1043ac0 <col:9, col:20> 'u64 *'
|   |   | | | `-CStyleCastExpr 0x1b6d1043a98 <col:10, col:17> 'u64 *' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x1b6d1043a80 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x1b6d1043a38 <col:17> 'unsigned char *' lvalue ParmVar 0x1b6d10453a0 'out' 'unsigned char *'
|   |   | | `-IntegerLiteral 0x1b6d1043ae0 <col:22> 'int' 0
|   |   | `-BinaryOperator 0x1b6d1043ce0 <col:27, col:56> 'unsigned long long' '^'
|   |   |   |-ImplicitCastExpr 0x1b6d1043cb0 <col:27, col:38> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x1b6d1043bb8 <col:27, col:38> 'u64':'unsigned long long' lvalue
|   |   |   |   |-ImplicitCastExpr 0x1b6d1043ba0 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x1b6d1043b48 <col:27, col:35> 'u64 [2]' lvalue .u 0x1b6d1045a70
|   |   |   |   |   `-DeclRefExpr 0x1b6d1043b28 <col:27> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)' lvalue Var 0x1b6d1045bd8 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)'
|   |   |   |   `-IntegerLiteral 0x1b6d1043b78 <col:37> 'int' 0
|   |   |   `-ImplicitCastExpr 0x1b6d1043cc8 <col:42, col:56> 'u64':'unsigned long long' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x1b6d1043c90 <col:42, col:56> 'u64':'unsigned long long' lvalue
|   |   |       |-ParenExpr 0x1b6d1043c48 <col:42, col:53> 'u64 *'
|   |   |       | `-CStyleCastExpr 0x1b6d1043c20 <col:43, col:50> 'u64 *' <BitCast>
|   |   |       |   `-ImplicitCastExpr 0x1b6d1043c08 <col:50> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |   |       |     `-DeclRefExpr 0x1b6d1043bd8 <col:50> 'const unsigned char *' lvalue ParmVar 0x1b6d1045320 'inp' 'const unsigned char *'
|   |   |       `-IntegerLiteral 0x1b6d1043c68 <col:55> 'int' 0
|   |   |-BinaryOperator 0x1b6d1046058 <line:185:9, col:56> 'u64':'unsigned long long' '='
|   |   | |-ArraySubscriptExpr 0x1b6d1043e30 <col:9, col:23> 'u64':'unsigned long long' lvalue
|   |   | | |-ParenExpr 0x1b6d1043de8 <col:9, col:20> 'u64 *'
|   |   | | | `-CStyleCastExpr 0x1b6d1043dc0 <col:10, col:17> 'u64 *' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x1b6d1043da8 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x1b6d1043d78 <col:17> 'unsigned char *' lvalue ParmVar 0x1b6d10453a0 'out' 'unsigned char *'
|   |   | | `-IntegerLiteral 0x1b6d1043e08 <col:22> 'int' 1
|   |   | `-BinaryOperator 0x1b6d1046038 <col:27, col:56> 'unsigned long long' '^'
|   |   |   |-ImplicitCastExpr 0x1b6d1043fd8 <col:27, col:38> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x1b6d1043ee0 <col:27, col:38> 'u64':'unsigned long long' lvalue
|   |   |   |   |-ImplicitCastExpr 0x1b6d1043ec8 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x1b6d1043e70 <col:27, col:35> 'u64 [2]' lvalue .u 0x1b6d1045a70
|   |   |   |   |   `-DeclRefExpr 0x1b6d1043e50 <col:27> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)' lvalue Var 0x1b6d1045bd8 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)'
|   |   |   |   `-IntegerLiteral 0x1b6d1043ea0 <col:37> 'int' 1
|   |   |   `-ImplicitCastExpr 0x1b6d1046020 <col:42, col:56> 'u64':'unsigned long long' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x1b6d1043fb8 <col:42, col:56> 'u64':'unsigned long long' lvalue
|   |   |       |-ParenExpr 0x1b6d1043f70 <col:42, col:53> 'u64 *'
|   |   |       | `-CStyleCastExpr 0x1b6d1043f48 <col:43, col:50> 'u64 *' <BitCast>
|   |   |       |   `-ImplicitCastExpr 0x1b6d1043f30 <col:50> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |   |       |     `-DeclRefExpr 0x1b6d1043f00 <col:50> 'const unsigned char *' lvalue ParmVar 0x1b6d1045320 'inp' 'const unsigned char *'
|   |   |       `-IntegerLiteral 0x1b6d1043f90 <col:55> 'int' 1
|   |   |-CompoundAssignOperator 0x1b6d10460c0 <line:187:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x1b6d1046078 <col:9> 'const unsigned char *' lvalue ParmVar 0x1b6d1045320 'inp' 'const unsigned char *'
|   |   | `-IntegerLiteral 0x1b6d1046098 <col:16> 'int' 16
|   |   |-CompoundAssignOperator 0x1b6d1046138 <line:188:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x1b6d10460f0 <col:9> 'unsigned char *' lvalue ParmVar 0x1b6d10453a0 'out' 'unsigned char *'
|   |   | `-IntegerLiteral 0x1b6d1046110 <col:16> 'int' 16
|   |   `-CompoundAssignOperator 0x1b6d10461c8 <line:189:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     |-DeclRefExpr 0x1b6d1046168 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1045418 'len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x1b6d10461b0 <col:16> 'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x1b6d1046188 <col:16> 'int' 16
|   |-IfStmt 0x1b6d1046990 <line:192:5, line:199:5>
|   | |-ImplicitCastExpr 0x1b6d1046268 <line:192:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b6d1046248 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1045418 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1b6d1046978 <col:14, line:199:5>
|   |   `-ForStmt 0x1b6d1046940 <line:197:9, line:198:42>
|   |     |-BinaryOperator 0x1b6d1046580 <line:197:14, col:18> 'unsigned int' '='
|   |     | |-DeclRefExpr 0x1b6d1046520 <col:14> 'unsigned int' lvalue Var 0x1b6d10456e0 'i' 'unsigned int'
|   |     | `-ImplicitCastExpr 0x1b6d1046568 <col:18> 'unsigned int' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1b6d1046540 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1b6d1046628 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1b6d1046610 <col:21> 'unsigned long long' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1b6d10465e0 <col:21> 'unsigned int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1b6d10465a0 <col:21> 'unsigned int' lvalue Var 0x1b6d10456e0 'i' 'unsigned int'
|   |     | `-ImplicitCastExpr 0x1b6d10465f8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1b6d10465c0 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1045418 'len' 'size_t':'unsigned long long'
|   |     |-UnaryOperator 0x1b6d1046668 <col:30, col:32> 'unsigned int' prefix '++'
|   |     | `-DeclRefExpr 0x1b6d1046648 <col:32> 'unsigned int' lvalue Var 0x1b6d10456e0 'i' 'unsigned int'
|   |     `-BinaryOperator 0x1b6d1046920 <line:198:13, col:42> 'unsigned char' '='
|   |       |-ArraySubscriptExpr 0x1b6d10466f0 <col:13, col:18> 'unsigned char' lvalue
|   |       | |-ImplicitCastExpr 0x1b6d10466c0 <col:13> 'unsigned char *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x1b6d1046680 <col:13> 'unsigned char *' lvalue ParmVar 0x1b6d10453a0 'out' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x1b6d10466d8 <col:17> 'unsigned int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1b6d10466a0 <col:17> 'unsigned int' lvalue Var 0x1b6d10456e0 'i' 'unsigned int'
|   |       `-ImplicitCastExpr 0x1b6d1046908 <col:22, col:42> 'unsigned char' <IntegralCast>
|   |         `-BinaryOperator 0x1b6d10468e8 <col:22, col:42> 'int' '^'
|   |           |-ImplicitCastExpr 0x1b6d10468a0 <col:22, col:33> 'int' <IntegralCast>
|   |           | `-ImplicitCastExpr 0x1b6d1046888 <col:22, col:33> 'u8':'unsigned char' <LValueToRValue>
|   |           |   `-ArraySubscriptExpr 0x1b6d10467d8 <col:22, col:33> 'u8':'unsigned char' lvalue
|   |           |     |-ImplicitCastExpr 0x1b6d10467a8 <col:22, col:30> 'u8 *' <ArrayToPointerDecay>
|   |           |     | `-MemberExpr 0x1b6d1046730 <col:22, col:30> 'u8 [16]' lvalue .c 0x1b6d1045b28
|   |           |     |   `-DeclRefExpr 0x1b6d1046710 <col:22> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)' lvalue Var 0x1b6d1045bd8 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:138:5)'
|   |           |     `-ImplicitCastExpr 0x1b6d10467c0 <col:32> 'unsigned int' <LValueToRValue>
|   |           |       `-DeclRefExpr 0x1b6d1046760 <col:32> 'unsigned int' lvalue Var 0x1b6d10456e0 'i' 'unsigned int'
|   |           `-ImplicitCastExpr 0x1b6d10468d0 <col:37, col:42> 'int' <IntegralCast>
|   |             `-ImplicitCastExpr 0x1b6d10468b8 <col:37, col:42> 'unsigned char' <LValueToRValue>
|   |               `-ArraySubscriptExpr 0x1b6d1046868 <col:37, col:42> 'const unsigned char' lvalue
|   |                 |-ImplicitCastExpr 0x1b6d1046838 <col:37> 'const unsigned char *' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x1b6d10467f8 <col:37> 'const unsigned char *' lvalue ParmVar 0x1b6d1045320 'inp' 'const unsigned char *'
|   |                 `-ImplicitCastExpr 0x1b6d1046850 <col:41> 'unsigned int' <LValueToRValue>
|   |                   `-DeclRefExpr 0x1b6d1046818 <col:41> 'unsigned int' lvalue Var 0x1b6d10456e0 'i' 'unsigned int'
|   `-ReturnStmt 0x1b6d1046e28 <line:210:5, col:12>
|     `-IntegerLiteral 0x1b6d1046e00 <col:12> 'int' 0
|-FunctionDecl 0x1b6d1041090 <line:213:1, line:284:1> line:213:5 invalid CRYPTO_ccm128_decrypt 'int (int *, const unsigned char *, unsigned char *, size_t)'
| |-ParmVarDecl 0x1b6d1046eb8 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x1b6d1046f38 <line:214:27, col:48> col:48 used inp 'const unsigned char *'
| |-ParmVarDecl 0x1b6d1046fb8 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x1b6d1040fe0 <line:215:27, col:34> col:34 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b6d1047330 <line:216:1, line:284:1>
|   |-DeclStmt 0x1b6d10411e0 <line:217:5, col:13>
|   | `-VarDecl 0x1b6d1041178 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x1b6d1041310 <line:218:5, col:22>
|   | |-VarDecl 0x1b6d1041210 <col:5, col:18> col:18 used i 'unsigned int'
|   | `-VarDecl 0x1b6d1041290 <col:5, col:21> col:21 used L 'unsigned int'
|   |-DeclStmt 0x1b6d10413d0 <line:219:5, col:43>
|   | `-VarDecl 0x1b6d1041340 <col:5, col:19> col:19 used flags0 'unsigned char'
|   |-DeclStmt 0x1b6d1041468 <line:221:5, col:25>
|   | `-VarDecl 0x1b6d1041400 <col:5, col:11> col:11 used key 'void *'
|   |-DeclStmt 0x1b6d1041788 <line:222:5, line:225:14>
|   | |-RecordDecl 0x1b6d1041480 <line:222:5, line:225:5> line:222:5 union definition
|   | | |-FieldDecl 0x1b6d10415a0 <line:223:9, col:16> col:13 referenced u 'u64 [2]'
|   | | `-FieldDecl 0x1b6d1041658 <line:224:9, col:16> col:12 referenced c 'u8 [16]'
|   | `-VarDecl 0x1b6d1041708 <line:222:5, line:225:7> col:7 used scratch 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:222:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:222:5)'
|   |-ForStmt 0x1b6d1041d98 <line:231:5, line:235:5>
|   | |-BinaryOperator 0x1b6d1041b78 <line:231:10, col:26> 'unsigned int' ','
|   | | |-BinaryOperator 0x1b6d1041a68 <col:10, col:14> 'size_t':'unsigned long long' '='
|   | | | |-DeclRefExpr 0x1b6d10419f0 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1b6d1041178 'n' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x1b6d1041a50 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1b6d1041a28 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1b6d1041b58 <col:17, col:26> 'unsigned int' '='
|   | |   |-DeclRefExpr 0x1b6d1041a88 <col:17> 'unsigned int' lvalue Var 0x1b6d1041210 'i' 'unsigned int'
|   | |   `-BinaryOperator 0x1b6d1041b38 <col:21, col:26> 'unsigned int' '-'
|   | |     |-ImplicitCastExpr 0x1b6d1041b20 <col:21> 'unsigned int' <IntegralCast>
|   | |     | `-IntegerLiteral 0x1b6d1041ac0 <col:21> 'int' 15
|   | |     `-ImplicitCastExpr 0x1b6d1041b08 <col:26> 'unsigned int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1b6d1041ae8 <col:26> 'unsigned int' lvalue Var 0x1b6d1041290 'L' 'unsigned int'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1b6d1041c10 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x1b6d1041be0 <col:29> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d1041b98 <col:29> 'unsigned int' lvalue Var 0x1b6d1041210 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1b6d1041bf8 <col:33> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b6d1041bb8 <col:33> 'int' 15
|   | |-UnaryOperator 0x1b6d1041c50 <col:37, col:39> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1b6d1041c30 <col:39> 'unsigned int' lvalue Var 0x1b6d1041210 'i' 'unsigned int'
|   | `-CompoundStmt 0x1b6d1041d80 <col:42, line:235:5>
|   |   `-CompoundAssignOperator 0x1b6d1041d50 <line:234:9, col:15> 'size_t':'unsigned long long' '<<=' ComputeLHSTy='size_t':'unsigned long long' ComputeResultTy='size_t':'unsigned long long'
|   |     |-DeclRefExpr 0x1b6d1041cf0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d1041178 'n' 'size_t':'unsigned long long'
|   |     `-IntegerLiteral 0x1b6d1041d10 <col:15> 'int' 8
|   |-IfStmt 0x1b6d1041f60 <line:239:5, line:240:17>
|   | |-BinaryOperator 0x1b6d1041ef0 <line:239:9, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x1b6d1041ec0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d1041e68 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d1041178 'n' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b6d1041ed8 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b6d1041e88 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1040fe0 'len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1b6d1041f50 <line:240:9, col:17>
|   |   `-UnaryOperator 0x1b6d1041f38 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1b6d1041f10 <col:17> 'int' 1
|   |-WhileStmt 0x1b6d1044920 <line:242:5, line:265:5>
|   | |-BinaryOperator 0x1b6d1044030 <line:242:12, col:19> 'int' '>='
|   | | |-ImplicitCastExpr 0x1b6d1044000 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d1041f78 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1040fe0 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b6d1044018 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b6d1041f98 <col:19> 'int' 16
|   | `-CompoundStmt 0x1b6d10448f8 <col:23, line:265:5>
|   |   |-CompoundAssignOperator 0x1b6d10447c0 <line:262:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x1b6d1044778 <col:9> 'const unsigned char *' lvalue ParmVar 0x1b6d1046f38 'inp' 'const unsigned char *'
|   |   | `-IntegerLiteral 0x1b6d1044798 <col:16> 'int' 16
|   |   |-CompoundAssignOperator 0x1b6d1044838 <line:263:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x1b6d10447f0 <col:9> 'unsigned char *' lvalue ParmVar 0x1b6d1046fb8 'out' 'unsigned char *'
|   |   | `-IntegerLiteral 0x1b6d1044810 <col:16> 'int' 16
|   |   `-CompoundAssignOperator 0x1b6d10448c8 <line:264:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     |-DeclRefExpr 0x1b6d1044868 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1040fe0 'len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x1b6d10448b0 <col:16> 'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x1b6d1044888 <col:16> 'int' 16
|   |-IfStmt 0x1b6d1044e48 <line:267:5, line:272:5>
|   | |-ImplicitCastExpr 0x1b6d1044958 <line:267:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b6d1044938 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1040fe0 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1b6d1044e38 <col:14, line:272:5>
|   `-ReturnStmt 0x1b6d1047320 <line:283:5, col:12>
|     `-IntegerLiteral 0x1b6d10472f8 <col:12> 'int' 0
|-FunctionDecl 0x1b6d1047568 <line:286:1, line:298:1> line:286:13 used ctr64_add 'void (unsigned char *, size_t)' static
| |-ParmVarDecl 0x1b6d10473a8 <col:23, col:38> col:38 used counter 'unsigned char *'
| |-ParmVarDecl 0x1b6d1047420 <col:47, col:54> col:54 used inc 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b6d1047e40 <line:287:1, line:298:1>
|   |-DeclStmt 0x1b6d10477b8 <line:288:5, col:26>
|   | |-VarDecl 0x1b6d1047640 <col:5, col:16> col:12 used n 'size_t':'unsigned long long' cinit
|   | | `-ImplicitCastExpr 0x1b6d10476d0 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b6d10476a8 <col:16> 'int' 8
|   | `-VarDecl 0x1b6d10476f8 <col:5, col:25> col:19 used val 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1b6d1047788 <col:25> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1b6d1047760 <col:25> 'int' 0
|   |-CompoundAssignOperator 0x1b6d1047818 <line:290:5, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-DeclRefExpr 0x1b6d10477d0 <col:5> 'unsigned char *' lvalue ParmVar 0x1b6d10473a8 'counter' 'unsigned char *'
|   | `-IntegerLiteral 0x1b6d10477f0 <col:16> 'int' 8
|   `-DoStmt 0x1b6d1047e20 <line:291:5, line:297:31>
|     |-CompoundStmt 0x1b6d1047ce0 <line:291:8, line:297:5>
|     | |-UnaryOperator 0x1b6d1047880 <line:292:9, col:11> 'size_t':'unsigned long long' prefix '--'
|     | | `-DeclRefExpr 0x1b6d1047848 <col:11> 'size_t':'unsigned long long' lvalue Var 0x1b6d1047640 'n' 'size_t':'unsigned long long'
|     | |-CompoundAssignOperator 0x1b6d1047a68 <line:293:9, col:40> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | | |-DeclRefExpr 0x1b6d1047898 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d10476f8 'val' 'size_t':'unsigned long long'
|     | | `-BinaryOperator 0x1b6d1047a48 <col:16, col:40> 'unsigned long long' '+'
|     | |   |-ImplicitCastExpr 0x1b6d1047a30 <col:16, col:25> 'unsigned long long' <IntegralCast>
|     | |   | `-ImplicitCastExpr 0x1b6d1047a18 <col:16, col:25> 'unsigned char' <LValueToRValue>
|     | |   |   `-ArraySubscriptExpr 0x1b6d1047940 <col:16, col:25> 'unsigned char' lvalue
|     | |   |     |-ImplicitCastExpr 0x1b6d1047910 <col:16> 'unsigned char *' <LValueToRValue>
|     | |   |     | `-DeclRefExpr 0x1b6d10478d0 <col:16> 'unsigned char *' lvalue ParmVar 0x1b6d10473a8 'counter' 'unsigned char *'
|     | |   |     `-ImplicitCastExpr 0x1b6d1047928 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |       `-DeclRefExpr 0x1b6d10478f0 <col:24> 'size_t':'unsigned long long' lvalue Var 0x1b6d1047640 'n' 'size_t':'unsigned long long'
|     | |   `-ParenExpr 0x1b6d10479f8 <col:29, col:40> 'unsigned long long'
|     | |     `-BinaryOperator 0x1b6d10479d8 <col:30, col:36> 'unsigned long long' '&'
|     | |       |-ImplicitCastExpr 0x1b6d10479a8 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x1b6d1047960 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1047420 'inc' 'size_t':'unsigned long long'
|     | |       `-ImplicitCastExpr 0x1b6d10479c0 <col:36> 'unsigned long long' <IntegralCast>
|     | |         `-IntegerLiteral 0x1b6d1047980 <col:36> 'int' 255
|     | |-BinaryOperator 0x1b6d1047ba0 <line:294:9, col:37> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x1b6d1047b08 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x1b6d1047ad8 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1b6d1047a98 <col:9> 'unsigned char *' lvalue ParmVar 0x1b6d10473a8 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x1b6d1047af0 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1b6d1047ab8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1b6d1047640 'n' 'size_t':'unsigned long long'
|     | | `-CStyleCastExpr 0x1b6d1047b78 <col:22, col:37> 'unsigned char' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x1b6d1047b60 <col:37> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|     | |     `-DeclRefExpr 0x1b6d1047b28 <col:37> 'size_t':'unsigned long long' lvalue Var 0x1b6d10476f8 'val' 'size_t':'unsigned long long'
|     | |-CompoundAssignOperator 0x1b6d1047c20 <line:295:9, col:17> 'size_t':'unsigned long long' '>>=' ComputeLHSTy='size_t':'unsigned long long' ComputeResultTy='size_t':'unsigned long long'
|     | | |-DeclRefExpr 0x1b6d1047bc0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d10476f8 'val' 'size_t':'unsigned long long'
|     | | `-IntegerLiteral 0x1b6d1047be0 <col:17> 'int' 8
|     | `-CompoundAssignOperator 0x1b6d1047cb0 <line:296:9, col:17> 'size_t':'unsigned long long' '>>=' ComputeLHSTy='size_t':'unsigned long long' ComputeResultTy='size_t':'unsigned long long'
|     |   |-DeclRefExpr 0x1b6d1047c50 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1047420 'inc' 'size_t':'unsigned long long'
|     |   `-IntegerLiteral 0x1b6d1047c70 <col:17> 'int' 8
|     `-BinaryOperator 0x1b6d1047e00 <line:297:14, col:30> 'int' '&&'
|       |-ImplicitCastExpr 0x1b6d1047de8 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1b6d1047d18 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1b6d1047640 'n' 'size_t':'unsigned long long'
|       `-ParenExpr 0x1b6d1047dc8 <col:19, col:30> 'int'
|         `-BinaryOperator 0x1b6d1047da8 <col:20, col:27> 'int' '||'
|           |-ImplicitCastExpr 0x1b6d1047d78 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|           | `-DeclRefExpr 0x1b6d1047d38 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1047420 'inc' 'size_t':'unsigned long long'
|           `-ImplicitCastExpr 0x1b6d1047d90 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|             `-DeclRefExpr 0x1b6d1047d58 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1b6d10476f8 'val' 'size_t':'unsigned long long'
|-FunctionDecl 0x1b6d10421c0 <line:300:1, line:362:1> line:300:5 invalid CRYPTO_ccm128_encrypt_ccm64 'int (int *, const unsigned char *, unsigned char *, size_t, int)'
| |-ParmVarDecl 0x1b6d1047e80 <col:33, col:49> col:49 invalid ctx 'int *'
| |-ParmVarDecl 0x1b6d1047f00 <line:301:33, col:54> col:54 used inp 'const unsigned char *'
| |-ParmVarDecl 0x1b6d1047f80 <col:59, col:74> col:74 used out 'unsigned char *'
| |-ParmVarDecl 0x1b6d1041fe0 <line:302:33, col:40> col:40 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d1042060 <col:45, col:54> col:54 invalid stream 'int'
| `-CompoundStmt 0x1b6d104a508 <line:303:1, line:362:1>
|   |-DeclStmt 0x1b6d1042318 <line:304:5, col:13>
|   | `-VarDecl 0x1b6d10422b0 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x1b6d1042448 <line:305:5, col:22>
|   | |-VarDecl 0x1b6d1042348 <col:5, col:18> col:18 used i 'unsigned int'
|   | `-VarDecl 0x1b6d10423c8 <col:5, col:21> col:21 used L 'unsigned int'
|   |-DeclStmt 0x1b6d1042508 <line:306:5, col:43>
|   | `-VarDecl 0x1b6d1042478 <col:5, col:19> col:19 used flags0 'unsigned char'
|   |-DeclStmt 0x1b6d10425a0 <line:308:5, col:25>
|   | `-VarDecl 0x1b6d1042538 <col:5, col:11> col:11 used key 'void *'
|   |-DeclStmt 0x1b6d10428b8 <line:309:5, line:312:14>
|   | |-RecordDecl 0x1b6d10425b8 <line:309:5, line:312:5> line:309:5 union definition
|   | | |-FieldDecl 0x1b6d10426d0 <line:310:9, col:16> col:13 referenced u 'u64 [2]'
|   | | `-FieldDecl 0x1b6d1042788 <line:311:9, col:16> col:12 referenced c 'u8 [16]'
|   | `-VarDecl 0x1b6d1042838 <line:309:5, line:312:7> col:7 used scratch 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:309:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:309:5)'
|   |-ForStmt 0x1b6d1042ec8 <line:318:5, line:322:5>
|   | |-BinaryOperator 0x1b6d1042ca8 <line:318:10, col:26> 'unsigned int' ','
|   | | |-BinaryOperator 0x1b6d1042b98 <col:10, col:14> 'size_t':'unsigned long long' '='
|   | | | |-DeclRefExpr 0x1b6d1042b20 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1b6d10422b0 'n' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x1b6d1042b80 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1b6d1042b58 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1b6d1042c88 <col:17, col:26> 'unsigned int' '='
|   | |   |-DeclRefExpr 0x1b6d1042bb8 <col:17> 'unsigned int' lvalue Var 0x1b6d1042348 'i' 'unsigned int'
|   | |   `-BinaryOperator 0x1b6d1042c68 <col:21, col:26> 'unsigned int' '-'
|   | |     |-ImplicitCastExpr 0x1b6d1042c50 <col:21> 'unsigned int' <IntegralCast>
|   | |     | `-IntegerLiteral 0x1b6d1042bf0 <col:21> 'int' 15
|   | |     `-ImplicitCastExpr 0x1b6d1042c38 <col:26> 'unsigned int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1b6d1042c18 <col:26> 'unsigned int' lvalue Var 0x1b6d10423c8 'L' 'unsigned int'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1b6d1042d40 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x1b6d1042d10 <col:29> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d1042cc8 <col:29> 'unsigned int' lvalue Var 0x1b6d1042348 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1b6d1042d28 <col:33> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b6d1042ce8 <col:33> 'int' 15
|   | |-UnaryOperator 0x1b6d1042d80 <col:37, col:39> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1b6d1042d60 <col:39> 'unsigned int' lvalue Var 0x1b6d1042348 'i' 'unsigned int'
|   | `-CompoundStmt 0x1b6d1042eb0 <col:42, line:322:5>
|   |   `-CompoundAssignOperator 0x1b6d1042e80 <line:321:9, col:15> 'size_t':'unsigned long long' '<<=' ComputeLHSTy='size_t':'unsigned long long' ComputeResultTy='size_t':'unsigned long long'
|   |     |-DeclRefExpr 0x1b6d1042e20 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d10422b0 'n' 'size_t':'unsigned long long'
|   |     `-IntegerLiteral 0x1b6d1042e40 <col:15> 'int' 8
|   |-IfStmt 0x1b6d104f168 <line:326:5, line:327:17>
|   | |-BinaryOperator 0x1b6d104f0f8 <line:326:9, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x1b6d104f0c8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d1042f98 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d10422b0 'n' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b6d104f0e0 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b6d1042fb8 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1041fe0 'len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1b6d104f158 <line:327:9, col:17>
|   |   `-UnaryOperator 0x1b6d104f140 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1b6d104f118 <col:17> 'int' 1
|   |-IfStmt 0x1b6d104f3f8 <line:330:5, line:331:17>
|   | |-OpaqueValueExpr 0x1b6d104f3e0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b6d104f3d0 <col:9, col:17>
|   |   `-UnaryOperator 0x1b6d104f3b8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1b6d104f390 <col:17> 'int' 2
|   |-IfStmt 0x1b6d104f900 <line:333:5, line:341:5>
|   | |-ParenExpr 0x1b6d104f4e8 <line:333:9, col:22> 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x1b6d104f4c8 <col:10, col:20> 'size_t':'unsigned long long' '='
|   | |   |-DeclRefExpr 0x1b6d104f410 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1b6d10422b0 'n' 'size_t':'unsigned long long'
|   | |   `-BinaryOperator 0x1b6d104f4a8 <col:14, col:20> 'unsigned long long' '/'
|   | |     |-ImplicitCastExpr 0x1b6d104f478 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1b6d104f430 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1041fe0 'len' 'size_t':'unsigned long long'
|   | |     `-ImplicitCastExpr 0x1b6d104f490 <col:20> 'unsigned long long' <IntegralCast>
|   | |       `-IntegerLiteral 0x1b6d104f450 <col:20> 'int' 16
|   | `-CompoundStmt 0x1b6d104f8d0 <col:25, line:341:5>
|   |   |-CompoundAssignOperator 0x1b6d104f618 <line:335:9, col:14> 'size_t':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x1b6d104f5b8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d10422b0 'n' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x1b6d104f600 <col:14> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1b6d104f5d8 <col:14> 'int' 16
|   |   |-CompoundAssignOperator 0x1b6d104f6a0 <line:336:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x1b6d104f648 <col:9> 'const unsigned char *' lvalue ParmVar 0x1b6d1047f00 'inp' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x1b6d104f688 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b6d104f668 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1b6d10422b0 'n' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x1b6d104f728 <line:337:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x1b6d104f6d0 <col:9> 'unsigned char *' lvalue ParmVar 0x1b6d1047f80 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x1b6d104f710 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b6d104f6f0 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1b6d10422b0 'n' 'size_t':'unsigned long long'
|   |   `-CompoundAssignOperator 0x1b6d104f7b0 <line:338:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     |-DeclRefExpr 0x1b6d104f758 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1041fe0 'len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x1b6d104f798 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b6d104f778 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1b6d10422b0 'n' 'size_t':'unsigned long long'
|   |-IfStmt 0x1b6d104a060 <line:343:5, line:350:5>
|   | |-ImplicitCastExpr 0x1b6d104f938 <line:343:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b6d104f918 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1041fe0 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1b6d1050090 <col:14, line:350:5>
|   |   `-ForStmt 0x1b6d1050058 <line:348:9, line:349:42>
|   |     |-BinaryOperator 0x1b6d104fc68 <line:348:14, col:18> 'unsigned int' '='
|   |     | |-DeclRefExpr 0x1b6d104fc08 <col:14> 'unsigned int' lvalue Var 0x1b6d1042348 'i' 'unsigned int'
|   |     | `-ImplicitCastExpr 0x1b6d104fc50 <col:18> 'unsigned int' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1b6d104fc28 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1b6d104fd10 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1b6d104fcf8 <col:21> 'unsigned long long' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1b6d104fcc8 <col:21> 'unsigned int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1b6d104fc88 <col:21> 'unsigned int' lvalue Var 0x1b6d1042348 'i' 'unsigned int'
|   |     | `-ImplicitCastExpr 0x1b6d104fce0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1b6d104fca8 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d1041fe0 'len' 'size_t':'unsigned long long'
|   |     |-UnaryOperator 0x1b6d104fd50 <col:30, col:32> 'unsigned int' prefix '++'
|   |     | `-DeclRefExpr 0x1b6d104fd30 <col:32> 'unsigned int' lvalue Var 0x1b6d1042348 'i' 'unsigned int'
|   |     `-BinaryOperator 0x1b6d104ffe0 <line:349:13, col:42> 'unsigned char' '='
|   |       |-ArraySubscriptExpr 0x1b6d104fdd8 <col:13, col:18> 'unsigned char' lvalue
|   |       | |-ImplicitCastExpr 0x1b6d104fda8 <col:13> 'unsigned char *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x1b6d104fd68 <col:13> 'unsigned char *' lvalue ParmVar 0x1b6d1047f80 'out' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x1b6d104fdc0 <col:17> 'unsigned int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1b6d104fd88 <col:17> 'unsigned int' lvalue Var 0x1b6d1042348 'i' 'unsigned int'
|   |       `-ImplicitCastExpr 0x1b6d104ffc8 <col:22, col:42> 'unsigned char' <IntegralCast>
|   |         `-BinaryOperator 0x1b6d104ffa8 <col:22, col:42> 'int' '^'
|   |           |-ImplicitCastExpr 0x1b6d104ff60 <col:22, col:33> 'int' <IntegralCast>
|   |           | `-ImplicitCastExpr 0x1b6d104ff48 <col:22, col:33> 'u8':'unsigned char' <LValueToRValue>
|   |           |   `-ArraySubscriptExpr 0x1b6d104fe98 <col:22, col:33> 'u8':'unsigned char' lvalue
|   |           |     |-ImplicitCastExpr 0x1b6d104fe68 <col:22, col:30> 'u8 *' <ArrayToPointerDecay>
|   |           |     | `-MemberExpr 0x1b6d104fe18 <col:22, col:30> 'u8 [16]' lvalue .c 0x1b6d1042788
|   |           |     |   `-DeclRefExpr 0x1b6d104fdf8 <col:22> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:309:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:309:5)' lvalue Var 0x1b6d1042838 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:309:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:309:5)'
|   |           |     `-ImplicitCastExpr 0x1b6d104fe80 <col:32> 'unsigned int' <LValueToRValue>
|   |           |       `-DeclRefExpr 0x1b6d104fe48 <col:32> 'unsigned int' lvalue Var 0x1b6d1042348 'i' 'unsigned int'
|   |           `-ImplicitCastExpr 0x1b6d104ff90 <col:37, col:42> 'int' <IntegralCast>
|   |             `-ImplicitCastExpr 0x1b6d104ff78 <col:37, col:42> 'unsigned char' <LValueToRValue>
|   |               `-ArraySubscriptExpr 0x1b6d104ff28 <col:37, col:42> 'const unsigned char' lvalue
|   |                 |-ImplicitCastExpr 0x1b6d104fef8 <col:37> 'const unsigned char *' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x1b6d104feb8 <col:37> 'const unsigned char *' lvalue ParmVar 0x1b6d1047f00 'inp' 'const unsigned char *'
|   |                 `-ImplicitCastExpr 0x1b6d104ff10 <col:41> 'unsigned int' <LValueToRValue>
|   |                   `-DeclRefExpr 0x1b6d104fed8 <col:41> 'unsigned int' lvalue Var 0x1b6d1042348 'i' 'unsigned int'
|   `-ReturnStmt 0x1b6d104a4f8 <line:361:5, col:12>
|     `-IntegerLiteral 0x1b6d104a4d0 <col:12> 'int' 0
|-FunctionDecl 0x1b6d104a838 <line:364:1, line:420:1> line:364:5 invalid CRYPTO_ccm128_decrypt_ccm64 'int (int *, const unsigned char *, unsigned char *, size_t, int)'
| |-ParmVarDecl 0x1b6d104a588 <col:33, col:49> col:49 invalid ctx 'int *'
| |-ParmVarDecl 0x1b6d104a608 <line:365:33, col:54> col:54 used inp 'const unsigned char *'
| |-ParmVarDecl 0x1b6d104a688 <col:59, col:74> col:74 used out 'unsigned char *'
| |-ParmVarDecl 0x1b6d104a700 <line:366:33, col:40> col:40 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b6d104a780 <col:45, col:54> col:54 invalid stream 'int'
| `-CompoundStmt 0x1b6d104d640 <line:367:1, line:420:1>
|   |-DeclStmt 0x1b6d104a990 <line:368:5, col:13>
|   | `-VarDecl 0x1b6d104a928 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x1b6d104aac0 <line:369:5, col:22>
|   | |-VarDecl 0x1b6d104a9c0 <col:5, col:18> col:18 used i 'unsigned int'
|   | `-VarDecl 0x1b6d104aa40 <col:5, col:21> col:21 used L 'unsigned int'
|   |-DeclStmt 0x1b6d104ab80 <line:370:5, col:43>
|   | `-VarDecl 0x1b6d104aaf0 <col:5, col:19> col:19 used flags0 'unsigned char'
|   |-DeclStmt 0x1b6d104ac18 <line:372:5, col:25>
|   | `-VarDecl 0x1b6d104abb0 <col:5, col:11> col:11 used key 'void *'
|   |-DeclStmt 0x1b6d104af38 <line:373:5, line:376:14>
|   | |-RecordDecl 0x1b6d104ac30 <line:373:5, line:376:5> line:373:5 union definition
|   | | |-FieldDecl 0x1b6d104ad50 <line:374:9, col:16> col:13 referenced u 'u64 [2]'
|   | | `-FieldDecl 0x1b6d104ae08 <line:375:9, col:16> col:12 referenced c 'u8 [16]'
|   | `-VarDecl 0x1b6d104aeb8 <line:373:5, line:376:7> col:7 used scratch 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ccm128.c:373:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ccm128.c:373:5)'
|   |-ForStmt 0x1b6d104c570 <line:382:5, line:386:5>
|   | |-BinaryOperator 0x1b6d104c350 <line:382:10, col:26> 'unsigned int' ','
|   | | |-BinaryOperator 0x1b6d104c240 <col:10, col:14> 'size_t':'unsigned long long' '='
|   | | | |-DeclRefExpr 0x1b6d104c1c8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1b6d104a928 'n' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x1b6d104c228 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1b6d104c200 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1b6d104c330 <col:17, col:26> 'unsigned int' '='
|   | |   |-DeclRefExpr 0x1b6d104c260 <col:17> 'unsigned int' lvalue Var 0x1b6d104a9c0 'i' 'unsigned int'
|   | |   `-BinaryOperator 0x1b6d104c310 <col:21, col:26> 'unsigned int' '-'
|   | |     |-ImplicitCastExpr 0x1b6d104c2f8 <col:21> 'unsigned int' <IntegralCast>
|   | |     | `-IntegerLiteral 0x1b6d104c298 <col:21> 'int' 15
|   | |     `-ImplicitCastExpr 0x1b6d104c2e0 <col:26> 'unsigned int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1b6d104c2c0 <col:26> 'unsigned int' lvalue Var 0x1b6d104aa40 'L' 'unsigned int'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1b6d104c3e8 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x1b6d104c3b8 <col:29> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d104c370 <col:29> 'unsigned int' lvalue Var 0x1b6d104a9c0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1b6d104c3d0 <col:33> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b6d104c390 <col:33> 'int' 15
|   | |-UnaryOperator 0x1b6d104c428 <col:37, col:39> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x1b6d104c408 <col:39> 'unsigned int' lvalue Var 0x1b6d104a9c0 'i' 'unsigned int'
|   | `-CompoundStmt 0x1b6d104c558 <col:42, line:386:5>
|   |   `-CompoundAssignOperator 0x1b6d104c528 <line:385:9, col:15> 'size_t':'unsigned long long' '<<=' ComputeLHSTy='size_t':'unsigned long long' ComputeResultTy='size_t':'unsigned long long'
|   |     |-DeclRefExpr 0x1b6d104c4c8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d104a928 'n' 'size_t':'unsigned long long'
|   |     `-IntegerLiteral 0x1b6d104c4e8 <col:15> 'int' 8
|   |-IfStmt 0x1b6d104c738 <line:390:5, line:391:17>
|   | |-BinaryOperator 0x1b6d104c6c8 <line:390:9, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x1b6d104c698 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b6d104c640 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d104a928 'n' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b6d104c6b0 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b6d104c660 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d104a700 'len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x1b6d104c728 <line:391:9, col:17>
|   |   `-UnaryOperator 0x1b6d104c710 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1b6d104c6e8 <col:17> 'int' 1
|   |-IfStmt 0x1b6d104cc40 <line:393:5, line:401:5>
|   | |-ParenExpr 0x1b6d104c828 <line:393:9, col:22> 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x1b6d104c808 <col:10, col:20> 'size_t':'unsigned long long' '='
|   | |   |-DeclRefExpr 0x1b6d104c750 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1b6d104a928 'n' 'size_t':'unsigned long long'
|   | |   `-BinaryOperator 0x1b6d104c7e8 <col:14, col:20> 'unsigned long long' '/'
|   | |     |-ImplicitCastExpr 0x1b6d104c7b8 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1b6d104c770 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d104a700 'len' 'size_t':'unsigned long long'
|   | |     `-ImplicitCastExpr 0x1b6d104c7d0 <col:20> 'unsigned long long' <IntegralCast>
|   | |       `-IntegerLiteral 0x1b6d104c790 <col:20> 'int' 16
|   | `-CompoundStmt 0x1b6d104cc10 <col:25, line:401:5>
|   |   |-CompoundAssignOperator 0x1b6d104c958 <line:395:9, col:14> 'size_t':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x1b6d104c8f8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b6d104a928 'n' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x1b6d104c940 <col:14> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1b6d104c918 <col:14> 'int' 16
|   |   |-CompoundAssignOperator 0x1b6d104c9e0 <line:396:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x1b6d104c988 <col:9> 'const unsigned char *' lvalue ParmVar 0x1b6d104a608 'inp' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x1b6d104c9c8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b6d104c9a8 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1b6d104a928 'n' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x1b6d104ca68 <line:397:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x1b6d104ca10 <col:9> 'unsigned char *' lvalue ParmVar 0x1b6d104a688 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x1b6d104ca50 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b6d104ca30 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1b6d104a928 'n' 'size_t':'unsigned long long'
|   |   `-CompoundAssignOperator 0x1b6d104caf0 <line:398:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     |-DeclRefExpr 0x1b6d104ca98 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d104a700 'len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x1b6d104cad8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b6d104cab8 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1b6d104a928 'n' 'size_t':'unsigned long long'
|   |-IfStmt 0x1b6d104d198 <line:403:5, line:408:5>
|   | |-ImplicitCastExpr 0x1b6d104cc78 <line:403:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b6d104cc58 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d104a700 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1b6d104d188 <col:14, line:408:5>
|   `-ReturnStmt 0x1b6d104d630 <line:419:5, col:12>
|     `-IntegerLiteral 0x1b6d104d608 <col:12> 'int' 0
`-FunctionDecl 0x1b6d104d8d8 <line:422:1, line:432:1> line:422:8 invalid CRYPTO_ccm128_tag 'size_t (int *, unsigned char *, size_t)'
  |-ParmVarDecl 0x1b6d104d6b8 <col:26, col:42> col:42 invalid ctx 'int *'
  |-ParmVarDecl 0x1b6d104d738 <col:47, col:62> col:62 used tag 'unsigned char *'
  |-ParmVarDecl 0x1b6d104d7b0 <col:67, col:74> col:74 used len 'size_t':'unsigned long long'
  `-CompoundStmt 0x1b6d104ddf0 <line:423:1, line:432:1>
    |-DeclStmt 0x1b6d104daa0 <line:424:5, col:48>
    | `-VarDecl 0x1b6d104d9c0 <col:5, col:18> col:18 used M 'unsigned int'
    |-CompoundAssignOperator 0x1b6d104db30 <line:426:5, col:10> 'unsigned int' '*=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x1b6d104dab8 <col:5> 'unsigned int' lvalue Var 0x1b6d104d9c0 'M' 'unsigned int'
    | `-ImplicitCastExpr 0x1b6d104db18 <col:10> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x1b6d104daf0 <col:10> 'int' 2
    |-CompoundAssignOperator 0x1b6d104dbc0 <line:427:5, col:10> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x1b6d104db60 <col:5> 'unsigned int' lvalue Var 0x1b6d104d9c0 'M' 'unsigned int'
    | `-ImplicitCastExpr 0x1b6d104dba8 <col:10> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x1b6d104db80 <col:10> 'int' 2
    |-IfStmt 0x1b6d104dd00 <line:428:5, line:429:16>
    | |-BinaryOperator 0x1b6d104dc90 <line:428:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1b6d104dc48 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1b6d104dbf0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b6d104d7b0 'len' 'size_t':'unsigned long long'
    | | `-ImplicitCastExpr 0x1b6d104dc78 <col:15> 'unsigned long long' <IntegralCast>
    | |   `-ImplicitCastExpr 0x1b6d104dc60 <col:15> 'unsigned int' <LValueToRValue>
    | |     `-DeclRefExpr 0x1b6d104dc28 <col:15> 'unsigned int' lvalue Var 0x1b6d104d9c0 'M' 'unsigned int'
    | `-ReturnStmt 0x1b6d104dcf0 <line:429:9, col:16>
    |   `-ImplicitCastExpr 0x1b6d104dcd8 <col:16> 'size_t':'unsigned long long' <IntegralCast>
    |     `-IntegerLiteral 0x1b6d104dcb0 <col:16> 'int' 0
    `-ReturnStmt 0x1b6d104dde0 <line:431:5, col:12>
      `-ImplicitCastExpr 0x1b6d104ddc8 <col:12> 'size_t':'unsigned long long' <IntegralCast>
        `-ImplicitCastExpr 0x1b6d104ddb0 <col:12> 'unsigned int' <LValueToRValue>
          `-DeclRefExpr 0x1b6d104dd90 <col:12> 'unsigned int' lvalue Var 0x1b6d104d9c0 'M' 'unsigned int'
