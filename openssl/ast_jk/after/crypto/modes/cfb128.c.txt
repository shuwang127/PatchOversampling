TranslationUnitDecl 0x18e8b833fb8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x18e8b834850 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x18e8b834550 '__int128'
|-TypedefDecl 0x18e8b8348c0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x18e8b834570 'unsigned __int128'
|-TypedefDecl 0x18e8b834bf8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x18e8b8349b0 'struct __NSConstantString_tag'
|   `-Record 0x18e8b834918 '__NSConstantString_tag'
|-TypedefDecl 0x18e8b834c68 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x18e8b834190 'unsigned long long'
|-TypedefDecl 0x18e8b834d00 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x18e8b834cc0 'char *'
|   `-BuiltinType 0x18e8b834050 'char'
|-TypedefDecl 0x18e8b834d70 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x18e8b834cc0 'char *'
|   `-BuiltinType 0x18e8b834050 'char'
|-TypedefDecl 0x18e8b834de0 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x18e8b8340f0 'long long'
|-TypedefDecl 0x18e8b834e50 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x18e8b834190 'unsigned long long'
|-TypedefDecl 0x18e8b834ec0 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x18e8b834150 'unsigned int'
|-TypedefDecl 0x18e8b834f30 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x18e8b834110 'unsigned char'
|-RecordDecl 0x18e8d1a5170 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x18e8d1a5260 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x18e8d1a52c8 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x18e8d1a5378 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x18e8d1a5320 'struct u128' sugar
|   `-RecordType 0x18e8d1a5210 'u128'
|     `-Record 0x18e8d1a5170 ''
|-RecordDecl 0x18e8d1a53e8 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x18e8d1a54a0 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x18e8d1a5638 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x18e8d1a5788 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x18e8d1a58d8 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x18e8d1a5a58 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x18e8d1a5b08 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x18e8d1a5b80 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x18e8d1a5bf8 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x18e8d1a5c70 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x18e8d1a5ce8 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x18e8d1a5d60 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x18e8d1a5f18 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x18e8d1ad468 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x18e8d1ad978 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x18e8d1ad9e8 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x18e8d1ada58 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x18e8d1adac8 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x18e8d1adb38 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x18e8d1adbf8 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x18e8d1adcc8 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x18e8d1add38 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x18e8d1adda8 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x18e8d1ade18 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x18e8d1ade70 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x18e8d1adf30 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x18e8d1ae050 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x18e8d1ae108 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x18e8d1b1230 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x18e8d1b12a8 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x18e8d1b1310 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x18e8d1b1380 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x18e8d1b13f0 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x18e8d1b14a0 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x18e8d1b15c0 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x18e8d1b1680 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x18e8d1b1738 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x18e8d1b16e0 'union OCB_BLOCK' sugar
|   `-RecordType 0x18e8d1b1540 'OCB_BLOCK'
|     `-Record 0x18e8d1b14a0 ''
|-RecordDecl 0x18e8d1b17a8 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x18e8d1b1878 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x18e8d1b18e8 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x18e8d1b1958 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x18e8d1b19c8 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x18e8d1b1a38 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x18e8d1b1aa0 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x18e8d1b1b08 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x18e8d1b1b90 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x18e8d1b1bf8 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x18e8d1b1cb8 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x18e8d1b1d10 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x18e8d1b1de0 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x18e8d1b1e48 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x18e8d1b1eb0 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x18e8d1b1f18 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x18e8d1b1f80 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x18e8d1b1fe8 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x18e8d1b2098 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x18e8d1b2158 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x18e8b834190 'unsigned long long'
|-TypedefDecl 0x18e8d1b21c8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x18e8b834cc0 'char *'
|   `-BuiltinType 0x18e8b834050 'char'
|-FunctionDecl 0x18e8d30e160 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x18e8d30e200 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x18e8d30e270 <col:21> Implicit
|-FunctionDecl 0x18e8d30e2c8 prev 0x18e8d30e160 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x18e8d30dff8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x18e8d30e3b8 <col:21> Inherited Implicit
|-TypedefDecl 0x18e8d30e3f8 prev 0x18e8b834c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x18e8b834190 'unsigned long long'
|-TypedefDecl 0x18e8d30e4a0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x18e8d30e470 'size_t' sugar
|   |-Typedef 0x18e8d30e3f8 'size_t'
|   `-BuiltinType 0x18e8b834190 'unsigned long long'
|-TypedefDecl 0x18e8d30e510 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x18e8b8340f0 'long long'
|-TypedefDecl 0x18e8d30e580 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x18e8b8340f0 'long long'
|-TypedefDecl 0x18e8d30e5f0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x18e8b834130 'unsigned short'
|-TypedefDecl 0x18e8d30e660 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x18e8b834130 'unsigned short'
|-TypedefDecl 0x18e8d30e6d0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x18e8b834130 'unsigned short'
|-TypedefDecl 0x18e8d30e740 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x18e8b8340b0 'int'
|-TypedefDecl 0x18e8d30e7b0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x18e8b8340d0 'long'
|-TypedefDecl 0x18e8d30e820 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x18e8b8340f0 'long long'
|-TypedefDecl 0x18e8d30e8b0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x18e8d30e880 '__time64_t' sugar
|   |-Typedef 0x18e8d30e820 '__time64_t'
|   `-BuiltinType 0x18e8b8340f0 'long long'
|-FunctionDecl 0x18e8d30ea28 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x18e8d30ec48 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x18e8d312240 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x18e8d30ed88 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x18e8d30ee00 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x18e8d30ee78 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x18e8d30eef8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x18e8d311fe0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x18e8d312320 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x18e8d3123e0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x18e8d312550 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x18e8d312500 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x18e8d3124a0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x18e8d3123c0 'struct threadlocaleinfostruct'
|       `-Record 0x18e8d3240d0 'threadlocaleinfostruct'
|-TypedefDecl 0x18e8d312660 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x18e8d312610 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x18e8d3125b0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x18e8d312480 'struct threadmbcinfostruct'
|       `-Record 0x18e8d3123e0 'threadmbcinfostruct'
|-RecordDecl 0x18e8d3126b8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x18e8d312770 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x18e8d312830 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x18e8d3128c0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x18e8d312950 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x18e8d312a08 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x18e8d3129b0 'struct localeinfo_struct' sugar
|   `-RecordType 0x18e8d312810 'struct localeinfo_struct'
|     `-Record 0x18e8d312770 'localeinfo_struct'
|-TypedefDecl 0x18e8d312ae0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x18e8d312a90 'struct localeinfo_struct *'
|   `-ElaboratedType 0x18e8d3129b0 'struct localeinfo_struct' sugar
|     `-RecordType 0x18e8d312810 'struct localeinfo_struct'
|       `-Record 0x18e8d312770 'localeinfo_struct'
|-RecordDecl 0x18e8d312b58 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x18e8d312c10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x18e8d312c88 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x18e8d312d48 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x18e8d312de0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x18e8d312e50 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x18e8d312f08 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x18e8d312eb0 'struct localerefcount' sugar
|   `-RecordType 0x18e8d312bf0 'struct localerefcount'
|     `-Record 0x18e8d312b58 'localerefcount'
|-RecordDecl 0x18e8d3240d0 prev 0x18e8d312320 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x18e8d324150 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x18e8d3241c8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x18e8d324238 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x18e8d3242a8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x18e8d324318 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x18e8d3244d8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x18e8d324548 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x18e8d3245b8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x18e8d324628 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x18e8d324698 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x18e8d324708 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x18e8d324760 parent 0x18e8b833fb8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x18e8d3248f0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x18e8d324960 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x18e8d3249d0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x18e8d324a40 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x18e8d324ab0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x18e8d324b20 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x18e8d324c30 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x18e8d324d68 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x18e8d324e18 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x18e8d324dc0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x18e8d3123c0 'struct threadlocaleinfostruct'
|     `-Record 0x18e8d3240d0 'threadlocaleinfostruct'
|-FunctionDecl 0x18e8d325270 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x18e8d324ea0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x18e8d324f50 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x18e8d324fd0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x18e8d325048 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d325638 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d3256d8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x18e8d325740 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x18e8d3257a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d325828 prev 0x18e8d325638 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x18e8d325360 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x18e8d3253e0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x18e8d325458 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d325be8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x18e8d325910 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x18e8d325990 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x18e8d325a08 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d31e070 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d325cd0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x18e8d325d50 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x18e8d325dc8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d325e60 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d31e378 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d31e418 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x18e8d31e480 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x18e8d31e4e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d31e568 prev 0x18e8d31e378 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x18e8d31e160 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x18e8d31e1e0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x18e8d31e258 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d31e928 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d31e9c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x18e8d31ea30 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x18e8d31ea98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d31eb18 prev 0x18e8d31e928 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x18e8d31e650 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x18e8d31e6d0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x18e8d31e748 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d31efb8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x18e8d31ec28 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x18e8d31ecc0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x18e8d31ed40 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x18e8d31edb8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x18e8d32a458 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d32a4f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x18e8d32a560 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x18e8d32a5c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d32a648 prev 0x18e8d32a458 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x18e8d32a180 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x18e8d32a200 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x18e8d32a278 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d32aac8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d32ab68 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x18e8d32abd0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x18e8d32ac38 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x18e8d32aca0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d32ad28 prev 0x18e8d32aac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x18e8d32a810 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x18e8d32a890 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x18e8d32a910 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x18e8d32a988 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d32ade8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x18e8d32b1e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x18e8d32afb0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x18e8d32b030 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x18e8d32b0a8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d32b298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x18e8d32b690 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x18e8d32b3c0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x18e8d32b438 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d32b4b8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x18e8d32ba60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x18e8d32b870 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x18e8d32b8f0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x18e8d32bb10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d32bf20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x18e8d32bc58 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x18e8d32bcd0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d32bd50 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x18e8d3262e0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x18e8d326380 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x18e8d3263e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e8d326460 prev 0x18e8d3262e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x18e8d3260f0 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x18e8d326170 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x18e8d326510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d326868 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x18e8d326658 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x18e8d3266d0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d326750 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x18e8d326b90 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x18e8d326c30 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x18e8d326c98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e8d326d10 prev 0x18e8d326b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x18e8d326a10 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x18e8d326a90 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x18e8d326dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d327100 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x18e8d3271a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d327208 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e8d327280 prev 0x18e8d327100 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x18e8d326f08 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x18e8d326f88 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x18e8d3274d0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x18e8d327570 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e8d3275e0 prev 0x18e8d3274d0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x18e8d327360 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x18e8d3278d8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x18e8d3276b8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x18e8d327730 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d327b28 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x18e8d3279b8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x18e8d327a30 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x18e8d327e58 <line:131:1, line:133:1>
|   `-ReturnStmt 0x18e8d327e48 <line:132:5, col:51>
|     `-ConditionalOperator 0x18e8d327e18 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x18e8d327c88 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x18e8d327c68 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x18e8d327c38 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x18e8d327bf0 <col:13> 'const char *' lvalue ParmVar 0x18e8d3279b8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x18e8d327c50 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x18e8d327c10 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x18e8d327e00 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x18e8d327ca8 <col:24> 'int' 0
|       `-CallExpr 0x18e8d327da0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x18e8d327d88 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x18e8d327cd0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x18e8d3278d8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x18e8d327dd0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x18e8d327cf0 <col:36> 'const char *' lvalue ParmVar 0x18e8d3279b8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x18e8d327de8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x18e8d327d10 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d327a30 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d328158 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x18e8d327e88 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x18e8d327f00 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x18e8d327f80 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x18e8d327ff8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x18e8d328460 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d328500 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x18e8d328568 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x18e8d3285d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d328650 prev 0x18e8d328460 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x18e8d328248 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x18e8d3282c8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x18e8d328340 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d328888 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x18e8d328738 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x18e8d328b50 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x18e8d328bf0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d328c58 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x18e8d328cd0 prev 0x18e8d328b50 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x18e8d328960 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x18e8d3289e0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x18e8d328f30 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x18e8d328db0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x18e8d328e30 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x18e8d3291a0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x18e8d329010 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x18e8d329090 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x18e8d329558 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x18e8d329280 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d329300 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x18e8d329378 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d3297c0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x18e8d329640 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x18e8d3296c0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x18e8d329ab8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x18e8d3298a0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d329920 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x18e8d329998 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d329d20 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x18e8d329ba0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x18e8d329c20 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x18e8d32a018 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x18e8d329e00 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d329e80 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x18e8d329ef8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d2e95b8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x18e8d2e92e0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d2e9360 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x18e8d2e93d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d2e9a20 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d2e96a0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d2e9720 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x18e8d2e9798 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d2e9810 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d2e9d28 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x18e8d2e9b10 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d2e9b90 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x18e8d2e9c08 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d2ea0c0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d2e9e10 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d2e9e90 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x18e8d2e9f08 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d2e9f80 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d3850e8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x18e8d385188 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d3851f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e8d385268 prev 0x18e8d3850e8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x18e8d2ea1b0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x18e8d2ea230 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x18e8d385520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x18e8d385440 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x18e8d3855c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d3859a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x18e8d385710 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x18e8d385788 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d385808 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x18e8d385cb8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x18e8d385d58 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x18e8d385dc8 prev 0x18e8d385cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x18e8d385b80 <col:90> col:93 'int'
| `-DeprecatedAttr 0x18e8d385e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d3831d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x18e8d382fc0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x18e8d383038 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d3830b8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x18e8d3834d8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x18e8d3832b8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x18e8d383330 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d3837c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x18e8d383678 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x18e8d383870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d383c80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d3839b8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x18e8d383a30 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d383aa8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d380030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x18e8d383e28 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x18e8d383ea0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e8d3800e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d380598 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x18e8d380228 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x18e8d3802a0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x18e8d380320 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x18e8d380398 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x18e8d380a18 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d380ab8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x18e8d380b20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d380b88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d380c08 prev 0x18e8d380a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x18e8d380748 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x18e8d3807c8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x18e8d380840 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d380cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d381040 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d3810e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x18e8d381148 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d3811b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d381230 prev 0x18e8d381040 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x18e8d380e08 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d380e88 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x18e8d380f00 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d381530 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x18e8d381318 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d381398 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x18e8d381410 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d3818c8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d381618 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d381698 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x18e8d381710 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d381788 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d381c60 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x18e8d3819b8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x18e8d381a30 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x18e8d381ab0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x18e8d381b28 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x18e8d386078 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d386118 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x18e8d386180 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d3861e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d386268 prev 0x18e8d386078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x18e8d381e10 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x18e8d381e90 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x18e8d381f08 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d386320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d3867d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x18e8d386468 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x18e8d3864e0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e8d386560 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x18e8d3865d8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d386c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x18e8d386988 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x18e8d386a08 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x18e8d386a80 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d386d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d37eff0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x18e8d37f090 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d37f0f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e8d37f170 prev 0x18e8d37eff0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x18e8d386e58 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x18e8d386ed8 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x18e8d37f3d0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x18e8d37f470 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d37f4d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x18e8d37f550 prev 0x18e8d37f3d0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x18e8d37f250 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x18e8d37f2d0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x18e8d37f710 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x18e8d37f630 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x18e8d37f960 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x18e8d37fa00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d37fa68 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e8d37fae0 prev 0x18e8d37f960 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x18e8d37f7e8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x18e8d37f868 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x18e8d37fd40 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x18e8d37fde0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d37fe48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e8d37fec0 prev 0x18e8d37fd40 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x18e8d37fbc0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x18e8d37fc40 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x18e8d382220 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x18e8d3822c0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x18e8d382328 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e8d3823a0 prev 0x18e8d382220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x18e8d3820a0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x18e8d382120 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x18e8d382450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d382838 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x18e8d382598 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x18e8d382618 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x18e8d382698 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x18e8d382a90 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x18e8d382920 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x18e8d382998 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d382d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x18e8d382c30 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x18e8d382db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d387190 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d382f00 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x18e8d387000 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d387078 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d3874b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x18e8d387338 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x18e8d3873b0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e8d387560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d387970 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d387a10 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x18e8d387a78 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x18e8d387ae0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d387b60 prev 0x18e8d387970 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x18e8d3876a8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x18e8d387728 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x18e8d3877a0 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d388010 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d387c48 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x18e8d387cc8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x18e8d387d40 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d387db8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d3882c0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x18e8d388360 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x18e8d3883d0 prev 0x18e8d3882c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x18e8d3881e0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x18e8d388478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x18e8d3887c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x18e8d388640 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d3886c0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x18e8d388870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x18e8d388bb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x18e8d388a38 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d388ab8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x18e8d388c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x18e8d388f10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x18e8d388e30 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x18e8d388fb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x18e8d38a408 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x18e8d38a1f0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x18e8d38a270 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x18e8d38a2e8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d38a4c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x18e8d38a8a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x18e8d38a688 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x18e8d38a708 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x18e8d38a780 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d38a958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x18e8d38ac00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x18e8d38ab20 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x18e8d38aca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x18e8d389020 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x18e8d38ae70 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x18e8d38aef0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x18e8d3890d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x18e8d389378 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x18e8d389298 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x18e8d389420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x18e8d3896b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x18e8d389540 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x18e8d389a40 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x18e8d389780 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e8d3897f8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d389870 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x18e8d389df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d389be0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18e8d389c58 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x18e8d389ea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d38b258 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x18e8d38b2f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x18e8d38b360 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x18e8d38b3d8 prev 0x18e8d38b258 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x18e8d38b040 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x18e8d38b0b8 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x18e8d38b6d0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x18e8d38b770 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x18e8d38b7d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x18e8d38b850 prev 0x18e8d38b6d0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x18e8d38b4b0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x18e8d38b528 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x18e8d38bb30 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x18e8d38b928 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e8d38b9a0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d38ba18 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x18e8d38be40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d38bcd0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18e8d38bd48 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x18e8d38bef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d3841e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d383fd0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x18e8d384048 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x18e8d384430 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x18e8d3844d0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x18e8d384540 prev 0x18e8d384430 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x18e8d3842c0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x18e8d384828 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x18e8d384610 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x18e8d384688 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d384a70 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x18e8d384900 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x18e8d384978 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x18e8d384e08 <line:306:1, line:308:1>
|   `-ReturnStmt 0x18e8d384df8 <line:307:5, col:56>
|     `-ConditionalOperator 0x18e8d384dc8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x18e8d384c30 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x18e8d384c10 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x18e8d384be0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x18e8d384b38 <col:13> 'const wchar_t *' lvalue ParmVar 0x18e8d384900 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x18e8d384bf8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x18e8d384bc0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x18e8d384b98 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x18e8d384b58 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x18e8d384db0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x18e8d384c50 <col:29> 'int' 0
|       `-CallExpr 0x18e8d384d50 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x18e8d384d38 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x18e8d384c78 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x18e8d384828 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x18e8d384d80 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x18e8d384c98 <col:41> 'const wchar_t *' lvalue ParmVar 0x18e8d384900 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x18e8d384d98 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x18e8d384cb8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d384978 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d38c258 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x18e8d384e30 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e8d384ea8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x18e8d384f20 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x18e8d38c050 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x18e8d38c6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18e8d38c400 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18e8d38c478 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x18e8d38c4f0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d38c778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d38cb88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x18e8d38cc28 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x18e8d38cc90 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x18e8d38ccf8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x18e8d38cd78 prev 0x18e8d38cb88 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x18e8d38c8b8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d38c930 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18e8d38c9a8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d393178 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x18e8d38ce58 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e8d38ced0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x18e8d38cf48 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x18e8d38cfc0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x18e8d393528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18e8d393320 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x18e8d393398 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x18e8d393410 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d3935e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d393938 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d393720 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x18e8d393798 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x18e8d393b80 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x18e8d393a10 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x18e8d393a88 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x18e8d393dc8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d393c58 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x18e8d393cd0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x18e8d394010 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d393ea0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x18e8d393f18 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x18e8d394328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d3941b8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x18e8d394230 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x18e8d3943d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d394840 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x18e8d394518 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x18e8d394590 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x18e8d394670 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x18e8d394b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x18e8d3949e8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x18e8d394c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d395010 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x18e8d394d48 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x18e8d394dc0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d394e40 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x18e8d390290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x18e8d3901b8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x18e8d390338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d390700 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x18e8d390478 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x18e8d3904f0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d390568 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x18e8d390958 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d3907e0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x18e8d390858 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x18e8d390cf8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x18e8d390a30 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d390aa8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18e8d390b20 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d390fe8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18e8d390dd8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d390e50 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18e8d390ec8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d391450 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d3910e0 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d391158 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x18e8d3911d0 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d391248 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d3918a8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x18e8d391538 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e8d3915b0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e8d391628 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x18e8d3916a0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d391d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x18e8d391a50 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x18e8d391ac8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x18e8d391b40 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d391dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d38d060 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x18e8d391f08 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x18e8d38d3f0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x18e8d38d130 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e8d38d1a8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d38d220 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x18e8d38d7a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x18e8d38d590 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x18e8d38d608 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x18e8d38d858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d38dbb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x18e8d38d998 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x18e8d38da10 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d38de28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x18e8d38dd50 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x18e8d38ded0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d3953a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d3950e0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x18e8d395158 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d3951d0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d395758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x18e8d395540 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x18e8d3955b8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e8d395808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d395ab8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x18e8d395948 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x18e8d3959c0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d395d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x18e8d395c50 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x18e8d395dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d38e0b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d395f10 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x18e8d395f88 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d396000 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d38e3c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x18e8d38e250 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x18e8d38e2c8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x18e8d38e470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x18e8d38e870 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18e8d38e5b0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e8d38e628 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x18e8d38e6a0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d38ecb8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d38e950 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x18e8d38e9c8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x18e8d38ea40 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d38eab8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d38ef18 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d38eda0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x18e8d38ee18 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x18e8d396288 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x18e8d38eff0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d3960f0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18e8d396168 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d3964e0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d396368 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x18e8d3963e0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x18e8d3967c8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x18e8d3965b8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d396630 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18e8d3966a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d396ab8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18e8d3968a8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d396920 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18e8d396998 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d396e40 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d396b98 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d396c10 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x18e8d396c88 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d396d00 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d38f0c8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18e8d396f28 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d396fa0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x18e8d397018 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x18e8d38f450 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x18e8d38f1a8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d38f220 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x18e8d38f298 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x18e8d38f310 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x18e8d38f6b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x18e8d38f5d8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x18e8d38f758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x18e8d38fa90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d38f918 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d38f990 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x18e8d38fb40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x18e8d38ff10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x18e8d38fd00 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d38fd78 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x18e8d38fdf0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d38ffc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x18e8d39a4b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x18e8d39a2a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x18e8d39a320 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x18e8d39a398 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x18e8d39a568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x18e8d39a800 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x18e8d39a728 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x18e8d39a8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x18e8d39abd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x18e8d39aa68 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x18e8d39aae0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x18e8d39ac88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x18e8d39af20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x18e8d39ae48 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x18e8d39afc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x18e8d39d2e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x18e8d39d210 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x18e8d39d390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x18e8d39d6c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x18e8d39d550 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x18e8d39d5c8 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x18e8d39d778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x18e8d39de78 <.//openssl//file_jk/after\crypto\modes\cfb128.c:19:1, line:131:1> line:19:6 invalid CRYPTO_cfb128_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
| |-ParmVarDecl 0x18e8d39d8a0 <col:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x18e8d39d950 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x18e8d39d9c8 <line:20:28, col:35> col:35 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e8d39da48 <col:40, col:52> col:52 used key 'const void *'
| |-ParmVarDecl 0x18e8d39db50 <line:21:28, col:49> col:42 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x18e8d39dbd0 <col:52, col:57> col:57 used num 'int *'
| |-ParmVarDecl 0x18e8d39dc50 <line:22:28, col:32> col:32 used enc 'int'
| |-ParmVarDecl 0x18e8d39dcd0 <col:37, col:48> col:48 invalid block 'int'
| `-CompoundStmt 0x18e8d39cf50 <line:23:1, line:131:1>
|   |-DeclStmt 0x18e8d39dff0 <line:24:5, col:19>
|   | `-VarDecl 0x18e8d39df88 <col:5, col:18> col:18 used n 'unsigned int'
|   |-DeclStmt 0x18e8d39e0c0 <line:25:5, col:17>
|   | `-VarDecl 0x18e8d39e018 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x18e8d39e0a8 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x18e8d39e080 <col:16> 'int' 0
|   |-BinaryOperator 0x18e8d398188 <line:27:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x18e8d39e0d8 <col:5> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x18e8d398170 <col:9, col:10> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x18e8d398158 <col:9, col:10> 'int' <LValueToRValue>
|   |     `-UnaryOperator 0x18e8d398140 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x18e8d398128 <col:10> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0x18e8d39e138 <col:10> 'int *' lvalue ParmVar 0x18e8d39dbd0 'num' 'int *'
|   `-IfStmt 0x18e8d39cf28 <line:29:5, line:130:5> has_else
|     |-ImplicitCastExpr 0x18e8d3981e0 <line:29:9> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x18e8d3981a8 <col:9> 'int' lvalue ParmVar 0x18e8d39dc50 'enc' 'int'
|     |-CompoundStmt 0x18e8d399c18 <col:14, line:76:5>
|     | |-IfStmt 0x18e8d399570 <line:31:9, line:64:9>
|     | | |-BinaryOperator 0x18e8d3982c8 <line:31:13, col:36> 'int' '=='
|     | | | |-BinaryOperator 0x18e8d398268 <col:13, col:31> 'unsigned long long' '%'
|     | | | | |-ImplicitCastExpr 0x18e8d398250 <col:13> 'unsigned long long' <IntegralCast>
|     | | | | | `-IntegerLiteral 0x18e8d3981f8 <col:13> 'int' 16
|     | | | | `-UnaryExprOrTypeTraitExpr 0x18e8d398230 <col:18, col:31> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x18e8d3982b0 <col:36> 'unsigned long long' <IntegralCast>
|     | | |   `-IntegerLiteral 0x18e8d398288 <col:36> 'int' 0
|     | | `-CompoundStmt 0x18e8d399558 <col:39, line:64:9>
|     | |   `-DoStmt 0x18e8d399538 <line:32:13, line:63:23>
|     | |     |-CompoundStmt 0x18e8d3994d8 <line:32:16, line:63:13>
|     | |     | |-WhileStmt 0x18e8d398780 <line:33:17, line:37:17>
|     | |     | | |-BinaryOperator 0x18e8d398370 <line:33:24, col:29> 'int' '&&'
|     | |     | | | |-ImplicitCastExpr 0x18e8d398340 <col:24> 'unsigned int' <LValueToRValue>
|     | |     | | | | `-DeclRefExpr 0x18e8d3982e8 <col:24> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | | | `-ImplicitCastExpr 0x18e8d398358 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | |   `-DeclRefExpr 0x18e8d398308 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|     | |     | | `-CompoundStmt 0x18e8d398758 <col:34, line:37:17>
|     | |     | |   |-BinaryOperator 0x18e8d3985a8 <line:34:21, col:49> 'unsigned char' '='
|     | |     | |   | |-UnaryOperator 0x18e8d398400 <col:21, col:28> 'unsigned char' lvalue prefix '*' cannot overflow
|     | |     | |   | | `-ParenExpr 0x18e8d3983e0 <col:22, col:28> 'unsigned char *'
|     | |     | |   | |   `-UnaryOperator 0x18e8d3983c8 <col:23, col:26> 'unsigned char *' postfix '++'
|     | |     | |   | |     `-DeclRefExpr 0x18e8d398390 <col:23> 'unsigned char *' lvalue ParmVar 0x18e8d39d950 'out' 'unsigned char *'
|     | |     | |   | `-CompoundAssignOperator 0x18e8d398578 <col:32, col:49> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |     | |   |   |-ArraySubscriptExpr 0x18e8d3984a0 <col:32, col:38> 'unsigned char' lvalue
|     | |     | |   |   | |-ImplicitCastExpr 0x18e8d398470 <col:32> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |   |   | | `-DeclRefExpr 0x18e8d398418 <col:32> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |   |   | `-ImplicitCastExpr 0x18e8d398488 <col:37> 'unsigned int' <LValueToRValue>
|     | |     | |   |   |   `-DeclRefExpr 0x18e8d398450 <col:37> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |   |   `-ImplicitCastExpr 0x18e8d398560 <col:43, col:49> 'int' <IntegralCast>
|     | |     | |   |     `-ImplicitCastExpr 0x18e8d398548 <col:43, col:49> 'unsigned char' <LValueToRValue>
|     | |     | |   |       `-UnaryOperator 0x18e8d398530 <col:43, col:49> 'const unsigned char' lvalue prefix '*' cannot overflow
|     | |     | |   |         `-ParenExpr 0x18e8d398510 <col:44, col:49> 'const unsigned char *'
|     | |     | |   |           `-UnaryOperator 0x18e8d3984f8 <col:45, col:47> 'const unsigned char *' postfix '++'
|     | |     | |   |             `-DeclRefExpr 0x18e8d3984c0 <col:45> 'const unsigned char *' lvalue ParmVar 0x18e8d39d8a0 'in' 'const unsigned char *'
|     | |     | |   |-UnaryOperator 0x18e8d3985e8 <line:35:21, col:23> 'size_t':'unsigned long long' prefix '--'
|     | |     | |   | `-DeclRefExpr 0x18e8d3985c8 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|     | |     | |   `-BinaryOperator 0x18e8d398738 <line:36:21, col:35> 'unsigned int' '='
|     | |     | |     |-DeclRefExpr 0x18e8d398600 <col:21> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |     `-BinaryOperator 0x18e8d398718 <col:25, col:35> 'unsigned int' '%'
|     | |     | |       |-ParenExpr 0x18e8d3986b8 <col:25, col:31> 'unsigned int'
|     | |     | |       | `-BinaryOperator 0x18e8d398698 <col:26, col:30> 'unsigned int' '+'
|     | |     | |       |   |-ImplicitCastExpr 0x18e8d398668 <col:26> 'unsigned int' <LValueToRValue>
|     | |     | |       |   | `-DeclRefExpr 0x18e8d398620 <col:26> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |       |   `-ImplicitCastExpr 0x18e8d398680 <col:30> 'unsigned int' <IntegralCast>
|     | |     | |       |     `-IntegerLiteral 0x18e8d398640 <col:30> 'int' 1
|     | |     | |       `-ImplicitCastExpr 0x18e8d398700 <col:35> 'unsigned int' <IntegralCast>
|     | |     | |         `-IntegerLiteral 0x18e8d3986d8 <col:35> 'int' 16
|     | |     | |-WhileStmt 0x18e8d399038 <line:43:17, line:53:17>
|     | |     | | |-BinaryOperator 0x18e8d398810 <line:43:24, col:31> 'int' '>='
|     | |     | | | |-ImplicitCastExpr 0x18e8d3987e0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | | | `-DeclRefExpr 0x18e8d398798 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|     | |     | | | `-ImplicitCastExpr 0x18e8d3987f8 <col:31> 'unsigned long long' <IntegralCast>
|     | |     | | |   `-IntegerLiteral 0x18e8d3987b8 <col:31> 'int' 16
|     | |     | | `-CompoundStmt 0x18e8d399000 <col:35, line:53:17>
|     | |     | |   |-ForStmt 0x18e8d398dc8 <line:45:21, line:48:21>
|     | |     | |   | |-<<<NULL>>>
|     | |     | |   | |-<<<NULL>>>
|     | |     | |   | |-BinaryOperator 0x18e8d398920 <line:45:28, col:32> 'int' '<'
|     | |     | |   | | |-ImplicitCastExpr 0x18e8d3988f0 <col:28> 'unsigned int' <LValueToRValue>
|     | |     | |   | | | `-DeclRefExpr 0x18e8d3988a8 <col:28> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |   | | `-ImplicitCastExpr 0x18e8d398908 <col:32> 'unsigned int' <IntegralCast>
|     | |     | |   | |   `-IntegerLiteral 0x18e8d3988c8 <col:32> 'int' 16
|     | |     | |   | |-CompoundAssignOperator 0x18e8d398990 <col:36, col:54> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   | | |-DeclRefExpr 0x18e8d398940 <col:36> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |   | | `-UnaryExprOrTypeTraitExpr 0x18e8d398970 <col:41, col:54> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     | |     | |   | `-CompoundStmt 0x18e8d398db0 <col:57, line:48:21>
|     | |     | |   |   `-BinaryOperator 0x18e8d398d90 <line:46:25, line:47:72> 'size_t':'unsigned long long' '='
|     | |     | |   |     |-UnaryOperator 0x18e8d398af0 <line:46:25, col:44> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |     | `-CStyleCastExpr 0x18e8d398ac8 <col:26, col:44> 'size_t *' <BitCast>
|     | |     | |   |     |   `-ParenExpr 0x18e8d398aa8 <col:36, col:44> 'unsigned char *'
|     | |     | |   |     |     `-BinaryOperator 0x18e8d398a30 <col:37, col:43> 'unsigned char *' '+'
|     | |     | |   |     |       |-ImplicitCastExpr 0x18e8d398a00 <col:37> 'unsigned char *' <LValueToRValue>
|     | |     | |   |     |       | `-DeclRefExpr 0x18e8d3989c0 <col:37> 'unsigned char *' lvalue ParmVar 0x18e8d39d950 'out' 'unsigned char *'
|     | |     | |   |     |       `-ImplicitCastExpr 0x18e8d398a18 <col:43> 'unsigned int' <LValueToRValue>
|     | |     | |   |     |         `-DeclRefExpr 0x18e8d3989e0 <col:43> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |   |     `-CompoundAssignOperator 0x18e8d398d60 <line:47:29, col:72> 'size_t':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   |       |-UnaryOperator 0x18e8d398c10 <col:29, col:49> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |       | `-CStyleCastExpr 0x18e8d398be8 <col:30, col:49> 'size_t *' <BitCast>
|     | |     | |   |       |   `-ParenExpr 0x18e8d398bc8 <col:40, col:49> 'unsigned char *':'unsigned char *'
|     | |     | |   |       |     `-BinaryOperator 0x18e8d398b78 <col:41, col:48> 'unsigned char *':'unsigned char *' '+'
|     | |     | |   |       |       |-ImplicitCastExpr 0x18e8d398b48 <col:41> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |   |       |       | `-DeclRefExpr 0x18e8d398b08 <col:41> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |   |       |       `-ImplicitCastExpr 0x18e8d398b60 <col:48> 'unsigned int' <LValueToRValue>
|     | |     | |   |       |         `-DeclRefExpr 0x18e8d398b28 <col:48> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |   |       `-ImplicitCastExpr 0x18e8d398d48 <col:54, col:72> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | |   |         `-UnaryOperator 0x18e8d398d30 <col:54, col:72> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |           `-CStyleCastExpr 0x18e8d398d08 <col:55, col:72> 'size_t *' <BitCast>
|     | |     | |   |             `-ParenExpr 0x18e8d398ce8 <col:65, col:72> 'const unsigned char *'
|     | |     | |   |               `-BinaryOperator 0x18e8d398c98 <col:66, col:71> 'const unsigned char *' '+'
|     | |     | |   |                 |-ImplicitCastExpr 0x18e8d398c68 <col:66> 'const unsigned char *' <LValueToRValue>
|     | |     | |   |                 | `-DeclRefExpr 0x18e8d398c28 <col:66> 'const unsigned char *' lvalue ParmVar 0x18e8d39d8a0 'in' 'const unsigned char *'
|     | |     | |   |                 `-ImplicitCastExpr 0x18e8d398c80 <col:71> 'unsigned int' <LValueToRValue>
|     | |     | |   |                   `-DeclRefExpr 0x18e8d398c48 <col:71> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |   |-CompoundAssignOperator 0x18e8d398e60 <line:49:21, col:28> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   | |-DeclRefExpr 0x18e8d398e00 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|     | |     | |   | `-ImplicitCastExpr 0x18e8d398e48 <col:28> 'unsigned long long' <IntegralCast>
|     | |     | |   |   `-IntegerLiteral 0x18e8d398e20 <col:28> 'int' 16
|     | |     | |   |-CompoundAssignOperator 0x18e8d398ed8 <line:50:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|     | |     | |   | |-DeclRefExpr 0x18e8d398e90 <col:21> 'unsigned char *' lvalue ParmVar 0x18e8d39d950 'out' 'unsigned char *'
|     | |     | |   | `-IntegerLiteral 0x18e8d398eb0 <col:28> 'int' 16
|     | |     | |   |-CompoundAssignOperator 0x18e8d398f50 <line:51:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|     | |     | |   | |-DeclRefExpr 0x18e8d398f08 <col:21> 'const unsigned char *' lvalue ParmVar 0x18e8d39d8a0 'in' 'const unsigned char *'
|     | |     | |   | `-IntegerLiteral 0x18e8d398f28 <col:27> 'int' 16
|     | |     | |   `-BinaryOperator 0x18e8d398fe0 <line:52:21, col:25> 'unsigned int' '='
|     | |     | |     |-DeclRefExpr 0x18e8d398f80 <col:21> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |     `-ImplicitCastExpr 0x18e8d398fc8 <col:25> 'unsigned int' <IntegralCast>
|     | |     | |       `-IntegerLiteral 0x18e8d398fa0 <col:25> 'int' 0
|     | |     | |-IfStmt 0x18e8d3993f0 <line:54:17, line:60:17>
|     | |     | | |-ImplicitCastExpr 0x18e8d399070 <line:54:21> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | | `-DeclRefExpr 0x18e8d399050 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|     | |     | | `-CompoundStmt 0x18e8d3993d8 <col:26, line:60:17>
|     | |     | |   `-WhileStmt 0x18e8d3993c0 <line:56:21, line:59:21>
|     | |     | |     |-UnaryOperator 0x18e8d399120 <line:56:28, col:31> 'size_t':'unsigned long long' postfix '--'
|     | |     | |     | `-DeclRefExpr 0x18e8d3990e8 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|     | |     | |     `-CompoundStmt 0x18e8d3993a0 <col:35, line:59:21>
|     | |     | |       |-BinaryOperator 0x18e8d399348 <line:57:25, col:49> 'unsigned char' '='
|     | |     | |       | |-ArraySubscriptExpr 0x18e8d3991a8 <col:25, col:30> 'unsigned char' lvalue
|     | |     | |       | | |-ImplicitCastExpr 0x18e8d399178 <col:25> 'unsigned char *' <LValueToRValue>
|     | |     | |       | | | `-DeclRefExpr 0x18e8d399138 <col:25> 'unsigned char *' lvalue ParmVar 0x18e8d39d950 'out' 'unsigned char *'
|     | |     | |       | | `-ImplicitCastExpr 0x18e8d399190 <col:29> 'unsigned int' <LValueToRValue>
|     | |     | |       | |   `-DeclRefExpr 0x18e8d399158 <col:29> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |       | `-CompoundAssignOperator 0x18e8d399318 <col:34, col:49> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |     | |       |   |-ArraySubscriptExpr 0x18e8d399238 <col:34, col:40> 'unsigned char' lvalue
|     | |     | |       |   | |-ImplicitCastExpr 0x18e8d399208 <col:34> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |       |   | | `-DeclRefExpr 0x18e8d3991c8 <col:34> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |       |   | `-ImplicitCastExpr 0x18e8d399220 <col:39> 'unsigned int' <LValueToRValue>
|     | |     | |       |   |   `-DeclRefExpr 0x18e8d3991e8 <col:39> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |       |   `-ImplicitCastExpr 0x18e8d399300 <col:45, col:49> 'int' <IntegralCast>
|     | |     | |       |     `-ImplicitCastExpr 0x18e8d3992e8 <col:45, col:49> 'unsigned char' <LValueToRValue>
|     | |     | |       |       `-ArraySubscriptExpr 0x18e8d3992c8 <col:45, col:49> 'const unsigned char' lvalue
|     | |     | |       |         |-ImplicitCastExpr 0x18e8d399298 <col:45> 'const unsigned char *' <LValueToRValue>
|     | |     | |       |         | `-DeclRefExpr 0x18e8d399258 <col:45> 'const unsigned char *' lvalue ParmVar 0x18e8d39d8a0 'in' 'const unsigned char *'
|     | |     | |       |         `-ImplicitCastExpr 0x18e8d3992b0 <col:48> 'unsigned int' <LValueToRValue>
|     | |     | |       |           `-DeclRefExpr 0x18e8d399278 <col:48> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |       `-UnaryOperator 0x18e8d399388 <line:58:25, col:27> 'unsigned int' prefix '++'
|     | |     | |         `-DeclRefExpr 0x18e8d399368 <col:27> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | |-BinaryOperator 0x18e8d3994a8 <line:61:17, col:24> 'int' '='
|     | |     | | |-UnaryOperator 0x18e8d399440 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|     | |     | | | `-ImplicitCastExpr 0x18e8d399428 <col:18> 'int *' <LValueToRValue>
|     | |     | | |   `-DeclRefExpr 0x18e8d399408 <col:18> 'int *' lvalue ParmVar 0x18e8d39dbd0 'num' 'int *'
|     | |     | | `-ImplicitCastExpr 0x18e8d399490 <col:24> 'int' <IntegralCast>
|     | |     | |   `-ImplicitCastExpr 0x18e8d399478 <col:24> 'unsigned int' <LValueToRValue>
|     | |     | |     `-DeclRefExpr 0x18e8d399458 <col:24> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     | `-ReturnStmt 0x18e8d3994c8 <line:62:17>
|     | |     `-IntegerLiteral 0x18e8d399510 <line:63:22> 'int' 0
|     | |-WhileStmt 0x18e8d399b40 <line:67:9, line:74:9>
|     | | |-BinaryOperator 0x18e8d399610 <line:67:16, col:20> 'int' '<'
|     | | | |-ImplicitCastExpr 0x18e8d3995e0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x18e8d399588 <col:16> 'size_t':'unsigned long long' lvalue Var 0x18e8d39e018 'l' 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x18e8d3995f8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x18e8d3995c0 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|     | | `-CompoundStmt 0x18e8d399b10 <col:25, line:74:9>
|     | |   |-IfStmt 0x18e8d399738 <line:68:13, line:70:13>
|     | |   | |-BinaryOperator 0x18e8d3996a8 <line:68:17, col:22> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x18e8d399678 <col:17> 'unsigned int' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x18e8d399630 <col:17> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |   | | `-ImplicitCastExpr 0x18e8d399690 <col:22> 'unsigned int' <IntegralCast>
|     | |   | |   `-IntegerLiteral 0x18e8d399650 <col:22> 'int' 0
|     | |   | `-CompoundStmt 0x18e8d399728 <col:25, line:70:13>
|     | |   |-BinaryOperator 0x18e8d399960 <line:71:13, col:37> 'unsigned char' '='
|     | |   | |-ArraySubscriptExpr 0x18e8d3997c0 <col:13, col:18> 'unsigned char' lvalue
|     | |   | | |-ImplicitCastExpr 0x18e8d399790 <col:13> 'unsigned char *' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x18e8d399750 <col:13> 'unsigned char *' lvalue ParmVar 0x18e8d39d950 'out' 'unsigned char *'
|     | |   | | `-ImplicitCastExpr 0x18e8d3997a8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x18e8d399770 <col:17> 'size_t':'unsigned long long' lvalue Var 0x18e8d39e018 'l' 'size_t':'unsigned long long'
|     | |   | `-CompoundAssignOperator 0x18e8d399930 <col:22, col:37> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |   |   |-ArraySubscriptExpr 0x18e8d399850 <col:22, col:28> 'unsigned char' lvalue
|     | |   |   | |-ImplicitCastExpr 0x18e8d399820 <col:22> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |   |   | | `-DeclRefExpr 0x18e8d3997e0 <col:22> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|     | |   |   | `-ImplicitCastExpr 0x18e8d399838 <col:27> 'unsigned int' <LValueToRValue>
|     | |   |   |   `-DeclRefExpr 0x18e8d399800 <col:27> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |   |   `-ImplicitCastExpr 0x18e8d399918 <col:33, col:37> 'int' <IntegralCast>
|     | |   |     `-ImplicitCastExpr 0x18e8d399900 <col:33, col:37> 'unsigned char' <LValueToRValue>
|     | |   |       `-ArraySubscriptExpr 0x18e8d3998e0 <col:33, col:37> 'const unsigned char' lvalue
|     | |   |         |-ImplicitCastExpr 0x18e8d3998b0 <col:33> 'const unsigned char *' <LValueToRValue>
|     | |   |         | `-DeclRefExpr 0x18e8d399870 <col:33> 'const unsigned char *' lvalue ParmVar 0x18e8d39d8a0 'in' 'const unsigned char *'
|     | |   |         `-ImplicitCastExpr 0x18e8d3998c8 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |           `-DeclRefExpr 0x18e8d399890 <col:36> 'size_t':'unsigned long long' lvalue Var 0x18e8d39e018 'l' 'size_t':'unsigned long long'
|     | |   |-UnaryOperator 0x18e8d3999a0 <line:72:13, col:15> 'size_t':'unsigned long long' prefix '++'
|     | |   | `-DeclRefExpr 0x18e8d399980 <col:15> 'size_t':'unsigned long long' lvalue Var 0x18e8d39e018 'l' 'size_t':'unsigned long long'
|     | |   `-BinaryOperator 0x18e8d399af0 <line:73:13, col:27> 'unsigned int' '='
|     | |     |-DeclRefExpr 0x18e8d3999b8 <col:13> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |     `-BinaryOperator 0x18e8d399ad0 <col:17, col:27> 'unsigned int' '%'
|     | |       |-ParenExpr 0x18e8d399a70 <col:17, col:23> 'unsigned int'
|     | |       | `-BinaryOperator 0x18e8d399a50 <col:18, col:22> 'unsigned int' '+'
|     | |       |   |-ImplicitCastExpr 0x18e8d399a20 <col:18> 'unsigned int' <LValueToRValue>
|     | |       |   | `-DeclRefExpr 0x18e8d3999d8 <col:18> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     | |       |   `-ImplicitCastExpr 0x18e8d399a38 <col:22> 'unsigned int' <IntegralCast>
|     | |       |     `-IntegerLiteral 0x18e8d3999f8 <col:22> 'int' 1
|     | |       `-ImplicitCastExpr 0x18e8d399ab8 <col:27> 'unsigned int' <IntegralCast>
|     | |         `-IntegerLiteral 0x18e8d399a90 <col:27> 'int' 16
|     | `-BinaryOperator 0x18e8d399bf8 <line:75:9, col:16> 'int' '='
|     |   |-UnaryOperator 0x18e8d399b90 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|     |   | `-ImplicitCastExpr 0x18e8d399b78 <col:10> 'int *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x18e8d399b58 <col:10> 'int *' lvalue ParmVar 0x18e8d39dbd0 'num' 'int *'
|     |   `-ImplicitCastExpr 0x18e8d399be0 <col:16> 'int' <IntegralCast>
|     |     `-ImplicitCastExpr 0x18e8d399bc8 <col:16> 'unsigned int' <LValueToRValue>
|     |       `-DeclRefExpr 0x18e8d399ba8 <col:16> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|     `-CompoundStmt 0x18e8d39cf00 <line:76:12, line:130:5>
|       |-IfStmt 0x18e8d39c630 <line:78:9, line:116:9>
|       | |-BinaryOperator 0x18e8d399d10 <line:78:13, col:36> 'int' '=='
|       | | |-BinaryOperator 0x18e8d399cb0 <col:13, col:31> 'unsigned long long' '%'
|       | | | |-ImplicitCastExpr 0x18e8d399c98 <col:13> 'unsigned long long' <IntegralCast>
|       | | | | `-IntegerLiteral 0x18e8d399c40 <col:13> 'int' 16
|       | | | `-UnaryExprOrTypeTraitExpr 0x18e8d399c78 <col:18, col:31> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x18e8d399cf8 <col:36> 'unsigned long long' <IntegralCast>
|       | |   `-IntegerLiteral 0x18e8d399cd0 <col:36> 'int' 0
|       | `-CompoundStmt 0x18e8d39c618 <col:39, line:116:9>
|       |   `-DoStmt 0x18e8d39c5f8 <line:79:13, line:115:23>
|       |     |-CompoundStmt 0x18e8d39c598 <line:79:16, line:115:13>
|       |     | |-WhileStmt 0x18e8d39b3d0 <line:80:17, line:86:17>
|       |     | | |-BinaryOperator 0x18e8d399da0 <line:80:24, col:29> 'int' '&&'
|       |     | | | |-ImplicitCastExpr 0x18e8d399d70 <col:24> 'unsigned int' <LValueToRValue>
|       |     | | | | `-DeclRefExpr 0x18e8d399d30 <col:24> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | | | `-ImplicitCastExpr 0x18e8d399d88 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | |   `-DeclRefExpr 0x18e8d399d50 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|       |     | | `-CompoundStmt 0x18e8d39b398 <col:34, line:86:17>
|       |     | |   |-DeclStmt 0x18e8d399e40 <line:81:21, col:36>
|       |     | |   | `-VarDecl 0x18e8d399dd8 <col:21, col:35> col:35 used c 'unsigned char'
|       |     | |   |-BinaryOperator 0x18e8d39a0d8 <line:82:21, col:54> 'unsigned char' '='
|       |     | |   | |-UnaryOperator 0x18e8d399eb0 <col:21, col:28> 'unsigned char' lvalue prefix '*' cannot overflow
|       |     | |   | | `-ParenExpr 0x18e8d399e90 <col:22, col:28> 'unsigned char *'
|       |     | |   | |   `-UnaryOperator 0x18e8d399e78 <col:23, col:26> 'unsigned char *' postfix '++'
|       |     | |   | |     `-DeclRefExpr 0x18e8d399e58 <col:23> 'unsigned char *' lvalue ParmVar 0x18e8d39d950 'out' 'unsigned char *'
|       |     | |   | `-ImplicitCastExpr 0x18e8d39a0c0 <col:32, col:54> 'unsigned char' <IntegralCast>
|       |     | |   |   `-BinaryOperator 0x18e8d39a0a0 <col:32, col:54> 'int' '^'
|       |     | |   |     |-ImplicitCastExpr 0x18e8d39a070 <col:32, col:38> 'int' <IntegralCast>
|       |     | |   |     | `-ImplicitCastExpr 0x18e8d39a058 <col:32, col:38> 'unsigned char' <LValueToRValue>
|       |     | |   |     |   `-ArraySubscriptExpr 0x18e8d399f38 <col:32, col:38> 'unsigned char' lvalue
|       |     | |   |     |     |-ImplicitCastExpr 0x18e8d399f08 <col:32> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |     |     | `-DeclRefExpr 0x18e8d399ec8 <col:32> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |     |     `-ImplicitCastExpr 0x18e8d399f20 <col:37> 'unsigned int' <LValueToRValue>
|       |     | |   |     |       `-DeclRefExpr 0x18e8d399ee8 <col:37> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |   |     `-ImplicitCastExpr 0x18e8d39a088 <col:42, col:54> 'int' <IntegralCast>
|       |     | |   |       `-ParenExpr 0x18e8d39a038 <col:42, col:54> 'unsigned char'
|       |     | |   |         `-BinaryOperator 0x18e8d39a018 <col:43, col:53> 'unsigned char' '='
|       |     | |   |           |-DeclRefExpr 0x18e8d399f58 <col:43> 'unsigned char' lvalue Var 0x18e8d399dd8 'c' 'unsigned char'
|       |     | |   |           `-ImplicitCastExpr 0x18e8d39a000 <col:47, col:53> 'unsigned char' <LValueToRValue>
|       |     | |   |             `-UnaryOperator 0x18e8d399fe8 <col:47, col:53> 'const unsigned char' lvalue prefix '*' cannot overflow
|       |     | |   |               `-ParenExpr 0x18e8d399fc8 <col:48, col:53> 'const unsigned char *'
|       |     | |   |                 `-UnaryOperator 0x18e8d399fb0 <col:49, col:51> 'const unsigned char *' postfix '++'
|       |     | |   |                   `-DeclRefExpr 0x18e8d399f90 <col:49> 'const unsigned char *' lvalue ParmVar 0x18e8d39d8a0 'in' 'const unsigned char *'
|       |     | |   |-BinaryOperator 0x18e8d39b1e8 <line:83:21, col:31> 'unsigned char' '='
|       |     | |   | |-ArraySubscriptExpr 0x18e8d39b190 <col:21, col:27> 'unsigned char' lvalue
|       |     | |   | | |-ImplicitCastExpr 0x18e8d39b160 <col:21> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   | | | `-DeclRefExpr 0x18e8d39a0f8 <col:21> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   | | `-ImplicitCastExpr 0x18e8d39b178 <col:26> 'unsigned int' <LValueToRValue>
|       |     | |   | |   `-DeclRefExpr 0x18e8d39b140 <col:26> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |   | `-ImplicitCastExpr 0x18e8d39b1d0 <col:31> 'unsigned char' <LValueToRValue>
|       |     | |   |   `-DeclRefExpr 0x18e8d39b1b0 <col:31> 'unsigned char' lvalue Var 0x18e8d399dd8 'c' 'unsigned char'
|       |     | |   |-UnaryOperator 0x18e8d39b228 <line:84:21, col:23> 'size_t':'unsigned long long' prefix '--'
|       |     | |   | `-DeclRefExpr 0x18e8d39b208 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|       |     | |   `-BinaryOperator 0x18e8d39b378 <line:85:21, col:35> 'unsigned int' '='
|       |     | |     |-DeclRefExpr 0x18e8d39b240 <col:21> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |     `-BinaryOperator 0x18e8d39b358 <col:25, col:35> 'unsigned int' '%'
|       |     | |       |-ParenExpr 0x18e8d39b2f8 <col:25, col:31> 'unsigned int'
|       |     | |       | `-BinaryOperator 0x18e8d39b2d8 <col:26, col:30> 'unsigned int' '+'
|       |     | |       |   |-ImplicitCastExpr 0x18e8d39b2a8 <col:26> 'unsigned int' <LValueToRValue>
|       |     | |       |   | `-DeclRefExpr 0x18e8d39b260 <col:26> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |       |   `-ImplicitCastExpr 0x18e8d39b2c0 <col:30> 'unsigned int' <IntegralCast>
|       |     | |       |     `-IntegerLiteral 0x18e8d39b280 <col:30> 'int' 1
|       |     | |       `-ImplicitCastExpr 0x18e8d39b340 <col:35> 'unsigned int' <IntegralCast>
|       |     | |         `-IntegerLiteral 0x18e8d39b318 <col:35> 'int' 16
|       |     | |-WhileStmt 0x18e8d39beb8 <line:92:17, line:103:17>
|       |     | | |-BinaryOperator 0x18e8d39b460 <line:92:24, col:31> 'int' '>='
|       |     | | | |-ImplicitCastExpr 0x18e8d39b430 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | | | `-DeclRefExpr 0x18e8d39b3e8 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|       |     | | | `-ImplicitCastExpr 0x18e8d39b448 <col:31> 'unsigned long long' <IntegralCast>
|       |     | | |   `-IntegerLiteral 0x18e8d39b408 <col:31> 'int' 16
|       |     | | `-CompoundStmt 0x18e8d39be80 <col:35, line:103:17>
|       |     | |   |-ForStmt 0x18e8d39bc48 <line:94:21, line:98:21>
|       |     | |   | |-<<<NULL>>>
|       |     | |   | |-<<<NULL>>>
|       |     | |   | |-BinaryOperator 0x18e8d39b558 <line:94:28, col:32> 'int' '<'
|       |     | |   | | |-ImplicitCastExpr 0x18e8d39b528 <col:28> 'unsigned int' <LValueToRValue>
|       |     | |   | | | `-DeclRefExpr 0x18e8d39b4e0 <col:28> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |   | | `-ImplicitCastExpr 0x18e8d39b540 <col:32> 'unsigned int' <IntegralCast>
|       |     | |   | |   `-IntegerLiteral 0x18e8d39b500 <col:32> 'int' 16
|       |     | |   | |-CompoundAssignOperator 0x18e8d39b5c8 <col:36, col:54> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       |     | |   | | |-DeclRefExpr 0x18e8d39b578 <col:36> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |   | | `-UnaryExprOrTypeTraitExpr 0x18e8d39b5a8 <col:41, col:54> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|       |     | |   | `-CompoundStmt 0x18e8d39bc20 <col:57, line:98:21>
|       |     | |   |   |-DeclStmt 0x18e8d39b7a8 <line:95:25, col:55>
|       |     | |   |   | `-VarDecl 0x18e8d39b608 <col:25, col:54> col:32 used t 'size_t':'unsigned long long' cinit
|       |     | |   |   |   `-ImplicitCastExpr 0x18e8d39b790 <col:36, col:54> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |     `-UnaryOperator 0x18e8d39b778 <col:36, col:54> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   |       `-CStyleCastExpr 0x18e8d39b750 <col:37, col:54> 'size_t *' <BitCast>
|       |     | |   |   |         `-ParenExpr 0x18e8d39b730 <col:47, col:54> 'const unsigned char *'
|       |     | |   |   |           `-BinaryOperator 0x18e8d39b6e0 <col:48, col:53> 'const unsigned char *' '+'
|       |     | |   |   |             |-ImplicitCastExpr 0x18e8d39b6b0 <col:48> 'const unsigned char *' <LValueToRValue>
|       |     | |   |   |             | `-DeclRefExpr 0x18e8d39b670 <col:48> 'const unsigned char *' lvalue ParmVar 0x18e8d39d8a0 'in' 'const unsigned char *'
|       |     | |   |   |             `-ImplicitCastExpr 0x18e8d39b6c8 <col:53> 'unsigned int' <LValueToRValue>
|       |     | |   |   |               `-DeclRefExpr 0x18e8d39b690 <col:53> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |   |   |-BinaryOperator 0x18e8d39ba88 <line:96:25, col:72> 'size_t':'unsigned long long' '='
|       |     | |   |   | |-UnaryOperator 0x18e8d39b8c8 <col:25, col:44> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   | | `-CStyleCastExpr 0x18e8d39b8a0 <col:26, col:44> 'size_t *' <BitCast>
|       |     | |   |   | |   `-ParenExpr 0x18e8d39b880 <col:36, col:44> 'unsigned char *'
|       |     | |   |   | |     `-BinaryOperator 0x18e8d39b830 <col:37, col:43> 'unsigned char *' '+'
|       |     | |   |   | |       |-ImplicitCastExpr 0x18e8d39b800 <col:37> 'unsigned char *' <LValueToRValue>
|       |     | |   |   | |       | `-DeclRefExpr 0x18e8d39b7c0 <col:37> 'unsigned char *' lvalue ParmVar 0x18e8d39d950 'out' 'unsigned char *'
|       |     | |   |   | |       `-ImplicitCastExpr 0x18e8d39b818 <col:43> 'unsigned int' <LValueToRValue>
|       |     | |   |   | |         `-DeclRefExpr 0x18e8d39b7e0 <col:43> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |   |   | `-BinaryOperator 0x18e8d39ba68 <col:48, col:72> 'unsigned long long' '^'
|       |     | |   |   |   |-ImplicitCastExpr 0x18e8d39ba38 <col:48, col:68> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |   | `-UnaryOperator 0x18e8d39b9e8 <col:48, col:68> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   |   |   `-CStyleCastExpr 0x18e8d39b9c0 <col:49, col:68> 'size_t *' <BitCast>
|       |     | |   |   |   |     `-ParenExpr 0x18e8d39b9a0 <col:59, col:68> 'unsigned char *':'unsigned char *'
|       |     | |   |   |   |       `-BinaryOperator 0x18e8d39b950 <col:60, col:67> 'unsigned char *':'unsigned char *' '+'
|       |     | |   |   |   |         |-ImplicitCastExpr 0x18e8d39b920 <col:60> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |   |   |         | `-DeclRefExpr 0x18e8d39b8e0 <col:60> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |   |   |         `-ImplicitCastExpr 0x18e8d39b938 <col:67> 'unsigned int' <LValueToRValue>
|       |     | |   |   |   |           `-DeclRefExpr 0x18e8d39b900 <col:67> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |   |   |   `-ImplicitCastExpr 0x18e8d39ba50 <col:72> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |     `-DeclRefExpr 0x18e8d39ba00 <col:72> 'size_t':'unsigned long long' lvalue Var 0x18e8d39b608 't' 'size_t':'unsigned long long'
|       |     | |   |   `-BinaryOperator 0x18e8d39bc00 <line:97:25, col:49> 'size_t':'unsigned long long' '='
|       |     | |   |     |-UnaryOperator 0x18e8d39bbb0 <col:25, col:45> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |     | `-CStyleCastExpr 0x18e8d39bb88 <col:26, col:45> 'size_t *' <BitCast>
|       |     | |   |     |   `-ParenExpr 0x18e8d39bb68 <col:36, col:45> 'unsigned char *':'unsigned char *'
|       |     | |   |     |     `-BinaryOperator 0x18e8d39bb18 <col:37, col:44> 'unsigned char *':'unsigned char *' '+'
|       |     | |   |     |       |-ImplicitCastExpr 0x18e8d39bae8 <col:37> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |     |       | `-DeclRefExpr 0x18e8d39baa8 <col:37> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |     |       `-ImplicitCastExpr 0x18e8d39bb00 <col:44> 'unsigned int' <LValueToRValue>
|       |     | |   |     |         `-DeclRefExpr 0x18e8d39bac8 <col:44> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |   |     `-ImplicitCastExpr 0x18e8d39bbe8 <col:49> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |       `-DeclRefExpr 0x18e8d39bbc8 <col:49> 'size_t':'unsigned long long' lvalue Var 0x18e8d39b608 't' 'size_t':'unsigned long long'
|       |     | |   |-CompoundAssignOperator 0x18e8d39bce0 <line:99:21, col:28> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       |     | |   | |-DeclRefExpr 0x18e8d39bc80 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|       |     | |   | `-ImplicitCastExpr 0x18e8d39bcc8 <col:28> 'unsigned long long' <IntegralCast>
|       |     | |   |   `-IntegerLiteral 0x18e8d39bca0 <col:28> 'int' 16
|       |     | |   |-CompoundAssignOperator 0x18e8d39bd58 <line:100:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|       |     | |   | |-DeclRefExpr 0x18e8d39bd10 <col:21> 'unsigned char *' lvalue ParmVar 0x18e8d39d950 'out' 'unsigned char *'
|       |     | |   | `-IntegerLiteral 0x18e8d39bd30 <col:28> 'int' 16
|       |     | |   |-CompoundAssignOperator 0x18e8d39bdd0 <line:101:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|       |     | |   | |-DeclRefExpr 0x18e8d39bd88 <col:21> 'const unsigned char *' lvalue ParmVar 0x18e8d39d8a0 'in' 'const unsigned char *'
|       |     | |   | `-IntegerLiteral 0x18e8d39bda8 <col:27> 'int' 16
|       |     | |   `-BinaryOperator 0x18e8d39be60 <line:102:21, col:25> 'unsigned int' '='
|       |     | |     |-DeclRefExpr 0x18e8d39be00 <col:21> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |     `-ImplicitCastExpr 0x18e8d39be48 <col:25> 'unsigned int' <IntegralCast>
|       |     | |       `-IntegerLiteral 0x18e8d39be20 <col:25> 'int' 0
|       |     | |-IfStmt 0x18e8d39c4b0 <line:104:17, line:112:17>
|       |     | | |-ImplicitCastExpr 0x18e8d39bef0 <line:104:21> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | | `-DeclRefExpr 0x18e8d39bed0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|       |     | | `-CompoundStmt 0x18e8d39c498 <col:26, line:112:17>
|       |     | |   `-WhileStmt 0x18e8d39c480 <line:106:21, line:111:21>
|       |     | |     |-UnaryOperator 0x18e8d39bf88 <line:106:28, col:31> 'size_t':'unsigned long long' postfix '--'
|       |     | |     | `-DeclRefExpr 0x18e8d39bf68 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|       |     | |     `-CompoundStmt 0x18e8d39c450 <col:35, line:111:21>
|       |     | |       |-DeclStmt 0x18e8d39c020 <line:107:25, col:40>
|       |     | |       | `-VarDecl 0x18e8d39bfb8 <col:25, col:39> col:39 used c 'unsigned char'
|       |     | |       |-BinaryOperator 0x18e8d39c310 <line:108:25, col:54> 'unsigned char' '='
|       |     | |       | |-ArraySubscriptExpr 0x18e8d39c0a8 <col:25, col:30> 'unsigned char' lvalue
|       |     | |       | | |-ImplicitCastExpr 0x18e8d39c078 <col:25> 'unsigned char *' <LValueToRValue>
|       |     | |       | | | `-DeclRefExpr 0x18e8d39c038 <col:25> 'unsigned char *' lvalue ParmVar 0x18e8d39d950 'out' 'unsigned char *'
|       |     | |       | | `-ImplicitCastExpr 0x18e8d39c090 <col:29> 'unsigned int' <LValueToRValue>
|       |     | |       | |   `-DeclRefExpr 0x18e8d39c058 <col:29> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |       | `-ImplicitCastExpr 0x18e8d39c2f8 <col:34, col:54> 'unsigned char' <IntegralCast>
|       |     | |       |   `-BinaryOperator 0x18e8d39c2d8 <col:34, col:54> 'int' '^'
|       |     | |       |     |-ImplicitCastExpr 0x18e8d39c2a8 <col:34, col:40> 'int' <IntegralCast>
|       |     | |       |     | `-ImplicitCastExpr 0x18e8d39c290 <col:34, col:40> 'unsigned char' <LValueToRValue>
|       |     | |       |     |   `-ArraySubscriptExpr 0x18e8d39c150 <col:34, col:40> 'unsigned char' lvalue
|       |     | |       |     |     |-ImplicitCastExpr 0x18e8d39c108 <col:34> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |       |     |     | `-DeclRefExpr 0x18e8d39c0c8 <col:34> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |       |     |     `-ImplicitCastExpr 0x18e8d39c120 <col:39> 'unsigned int' <LValueToRValue>
|       |     | |       |     |       `-DeclRefExpr 0x18e8d39c0e8 <col:39> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |       |     `-ImplicitCastExpr 0x18e8d39c2c0 <col:44, col:54> 'int' <IntegralCast>
|       |     | |       |       `-ParenExpr 0x18e8d39c270 <col:44, col:54> 'unsigned char'
|       |     | |       |         `-BinaryOperator 0x18e8d39c250 <col:45, col:53> 'unsigned char' '='
|       |     | |       |           |-DeclRefExpr 0x18e8d39c170 <col:45> 'unsigned char' lvalue Var 0x18e8d39bfb8 'c' 'unsigned char'
|       |     | |       |           `-ImplicitCastExpr 0x18e8d39c238 <col:49, col:53> 'unsigned char' <LValueToRValue>
|       |     | |       |             `-ArraySubscriptExpr 0x18e8d39c218 <col:49, col:53> 'const unsigned char' lvalue
|       |     | |       |               |-ImplicitCastExpr 0x18e8d39c1e8 <col:49> 'const unsigned char *' <LValueToRValue>
|       |     | |       |               | `-DeclRefExpr 0x18e8d39c1a8 <col:49> 'const unsigned char *' lvalue ParmVar 0x18e8d39d8a0 'in' 'const unsigned char *'
|       |     | |       |               `-ImplicitCastExpr 0x18e8d39c200 <col:52> 'unsigned int' <LValueToRValue>
|       |     | |       |                 `-DeclRefExpr 0x18e8d39c1c8 <col:52> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |       |-BinaryOperator 0x18e8d39c3f8 <line:109:25, col:35> 'unsigned char' '='
|       |     | |       | |-ArraySubscriptExpr 0x18e8d39c3a0 <col:25, col:31> 'unsigned char' lvalue
|       |     | |       | | |-ImplicitCastExpr 0x18e8d39c370 <col:25> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |       | | | `-DeclRefExpr 0x18e8d39c330 <col:25> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |       | | `-ImplicitCastExpr 0x18e8d39c388 <col:30> 'unsigned int' <LValueToRValue>
|       |     | |       | |   `-DeclRefExpr 0x18e8d39c350 <col:30> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |       | `-ImplicitCastExpr 0x18e8d39c3e0 <col:35> 'unsigned char' <LValueToRValue>
|       |     | |       |   `-DeclRefExpr 0x18e8d39c3c0 <col:35> 'unsigned char' lvalue Var 0x18e8d39bfb8 'c' 'unsigned char'
|       |     | |       `-UnaryOperator 0x18e8d39c438 <line:110:25, col:27> 'unsigned int' prefix '++'
|       |     | |         `-DeclRefExpr 0x18e8d39c418 <col:27> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | |-BinaryOperator 0x18e8d39c568 <line:113:17, col:24> 'int' '='
|       |     | | |-UnaryOperator 0x18e8d39c500 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|       |     | | | `-ImplicitCastExpr 0x18e8d39c4e8 <col:18> 'int *' <LValueToRValue>
|       |     | | |   `-DeclRefExpr 0x18e8d39c4c8 <col:18> 'int *' lvalue ParmVar 0x18e8d39dbd0 'num' 'int *'
|       |     | | `-ImplicitCastExpr 0x18e8d39c550 <col:24> 'int' <IntegralCast>
|       |     | |   `-ImplicitCastExpr 0x18e8d39c538 <col:24> 'unsigned int' <LValueToRValue>
|       |     | |     `-DeclRefExpr 0x18e8d39c518 <col:24> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     | `-ReturnStmt 0x18e8d39c588 <line:114:17>
|       |     `-IntegerLiteral 0x18e8d39c5d0 <line:115:22> 'int' 0
|       |-WhileStmt 0x18e8d39ce28 <line:119:9, line:128:9>
|       | |-BinaryOperator 0x18e8d39c6b8 <line:119:16, col:20> 'int' '<'
|       | | |-ImplicitCastExpr 0x18e8d39c688 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|       | | | `-DeclRefExpr 0x18e8d39c648 <col:16> 'size_t':'unsigned long long' lvalue Var 0x18e8d39e018 'l' 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x18e8d39c6a0 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|       | |   `-DeclRefExpr 0x18e8d39c668 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d39d9c8 'len' 'size_t':'unsigned long long'
|       | `-CompoundStmt 0x18e8d39cde8 <col:25, line:128:9>
|       |   |-DeclStmt 0x18e8d39c758 <line:120:13, col:28>
|       |   | `-VarDecl 0x18e8d39c6f0 <col:13, col:27> col:27 used c 'unsigned char'
|       |   |-IfStmt 0x18e8d39c878 <line:121:13, line:123:13>
|       |   | |-BinaryOperator 0x18e8d39c7e8 <line:121:17, col:22> 'int' '=='
|       |   | | |-ImplicitCastExpr 0x18e8d39c7b8 <col:17> 'unsigned int' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x18e8d39c770 <col:17> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |   | | `-ImplicitCastExpr 0x18e8d39c7d0 <col:22> 'unsigned int' <IntegralCast>
|       |   | |   `-IntegerLiteral 0x18e8d39c790 <col:22> 'int' 0
|       |   | `-CompoundStmt 0x18e8d39c868 <col:25, line:123:13>
|       |   |-BinaryOperator 0x18e8d39cb50 <line:124:13, col:42> 'unsigned char' '='
|       |   | |-ArraySubscriptExpr 0x18e8d39c900 <col:13, col:18> 'unsigned char' lvalue
|       |   | | |-ImplicitCastExpr 0x18e8d39c8d0 <col:13> 'unsigned char *' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x18e8d39c890 <col:13> 'unsigned char *' lvalue ParmVar 0x18e8d39d950 'out' 'unsigned char *'
|       |   | | `-ImplicitCastExpr 0x18e8d39c8e8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x18e8d39c8b0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x18e8d39e018 'l' 'size_t':'unsigned long long'
|       |   | `-ImplicitCastExpr 0x18e8d39cb38 <col:22, col:42> 'unsigned char' <IntegralCast>
|       |   |   `-BinaryOperator 0x18e8d39cb18 <col:22, col:42> 'int' '^'
|       |   |     |-ImplicitCastExpr 0x18e8d39cae8 <col:22, col:28> 'int' <IntegralCast>
|       |   |     | `-ImplicitCastExpr 0x18e8d39cad0 <col:22, col:28> 'unsigned char' <LValueToRValue>
|       |   |     |   `-ArraySubscriptExpr 0x18e8d39c990 <col:22, col:28> 'unsigned char' lvalue
|       |   |     |     |-ImplicitCastExpr 0x18e8d39c960 <col:22> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |   |     |     | `-DeclRefExpr 0x18e8d39c920 <col:22> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|       |   |     |     `-ImplicitCastExpr 0x18e8d39c978 <col:27> 'unsigned int' <LValueToRValue>
|       |   |     |       `-DeclRefExpr 0x18e8d39c940 <col:27> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |   |     `-ImplicitCastExpr 0x18e8d39cb00 <col:32, col:42> 'int' <IntegralCast>
|       |   |       `-ParenExpr 0x18e8d39cab0 <col:32, col:42> 'unsigned char'
|       |   |         `-BinaryOperator 0x18e8d39ca90 <col:33, col:41> 'unsigned char' '='
|       |   |           |-DeclRefExpr 0x18e8d39c9b0 <col:33> 'unsigned char' lvalue Var 0x18e8d39c6f0 'c' 'unsigned char'
|       |   |           `-ImplicitCastExpr 0x18e8d39ca78 <col:37, col:41> 'unsigned char' <LValueToRValue>
|       |   |             `-ArraySubscriptExpr 0x18e8d39ca58 <col:37, col:41> 'const unsigned char' lvalue
|       |   |               |-ImplicitCastExpr 0x18e8d39ca28 <col:37> 'const unsigned char *' <LValueToRValue>
|       |   |               | `-DeclRefExpr 0x18e8d39c9e8 <col:37> 'const unsigned char *' lvalue ParmVar 0x18e8d39d8a0 'in' 'const unsigned char *'
|       |   |               `-ImplicitCastExpr 0x18e8d39ca40 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|       |   |                 `-DeclRefExpr 0x18e8d39ca08 <col:40> 'size_t':'unsigned long long' lvalue Var 0x18e8d39e018 'l' 'size_t':'unsigned long long'
|       |   |-BinaryOperator 0x18e8d39cc38 <line:125:13, col:23> 'unsigned char' '='
|       |   | |-ArraySubscriptExpr 0x18e8d39cbe0 <col:13, col:19> 'unsigned char' lvalue
|       |   | | |-ImplicitCastExpr 0x18e8d39cbb0 <col:13> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x18e8d39cb70 <col:13> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d39db50 'ivec' 'unsigned char *':'unsigned char *'
|       |   | | `-ImplicitCastExpr 0x18e8d39cbc8 <col:18> 'unsigned int' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x18e8d39cb90 <col:18> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |   | `-ImplicitCastExpr 0x18e8d39cc20 <col:23> 'unsigned char' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x18e8d39cc00 <col:23> 'unsigned char' lvalue Var 0x18e8d39c6f0 'c' 'unsigned char'
|       |   |-UnaryOperator 0x18e8d39cc78 <line:126:13, col:15> 'size_t':'unsigned long long' prefix '++'
|       |   | `-DeclRefExpr 0x18e8d39cc58 <col:15> 'size_t':'unsigned long long' lvalue Var 0x18e8d39e018 'l' 'size_t':'unsigned long long'
|       |   `-BinaryOperator 0x18e8d39cdc8 <line:127:13, col:27> 'unsigned int' '='
|       |     |-DeclRefExpr 0x18e8d39cc90 <col:13> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |     `-BinaryOperator 0x18e8d39cda8 <col:17, col:27> 'unsigned int' '%'
|       |       |-ParenExpr 0x18e8d39cd48 <col:17, col:23> 'unsigned int'
|       |       | `-BinaryOperator 0x18e8d39cd28 <col:18, col:22> 'unsigned int' '+'
|       |       |   |-ImplicitCastExpr 0x18e8d39ccf8 <col:18> 'unsigned int' <LValueToRValue>
|       |       |   | `-DeclRefExpr 0x18e8d39ccb0 <col:18> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|       |       |   `-ImplicitCastExpr 0x18e8d39cd10 <col:22> 'unsigned int' <IntegralCast>
|       |       |     `-IntegerLiteral 0x18e8d39ccd0 <col:22> 'int' 1
|       |       `-ImplicitCastExpr 0x18e8d39cd90 <col:27> 'unsigned int' <IntegralCast>
|       |         `-IntegerLiteral 0x18e8d39cd68 <col:27> 'int' 16
|       `-BinaryOperator 0x18e8d39cee0 <line:129:9, col:16> 'int' '='
|         |-UnaryOperator 0x18e8d39ce78 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|         | `-ImplicitCastExpr 0x18e8d39ce60 <col:10> 'int *' <LValueToRValue>
|         |   `-DeclRefExpr 0x18e8d39ce40 <col:10> 'int *' lvalue ParmVar 0x18e8d39dbd0 'num' 'int *'
|         `-ImplicitCastExpr 0x18e8d39cec8 <col:16> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x18e8d39ceb0 <col:16> 'unsigned int' <LValueToRValue>
|             `-DeclRefExpr 0x18e8d39ce90 <col:16> 'unsigned int' lvalue Var 0x18e8d39df88 'n' 'unsigned int'
|-FunctionDecl 0x18e8d3a6368 <line:137:1, line:170:1> line:137:13 invalid cfbr_encrypt_block 'void (const unsigned char *, unsigned char *, int, const void *, unsigned char *, int, int)' static
| |-ParmVarDecl 0x18e8d39cf98 <col:32, col:53> col:53 used in 'const unsigned char *'
| |-ParmVarDecl 0x18e8d39d018 <col:57, col:72> col:72 used out 'unsigned char *'
| |-ParmVarDecl 0x18e8d39d098 <line:138:32, col:36> col:36 used nbits 'int'
| |-ParmVarDecl 0x18e8d3a6010 <col:43, col:55> col:55 used key 'const void *'
| |-ParmVarDecl 0x18e8d3a60e0 <line:139:32, col:53> col:46 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x18e8d3a6160 <col:56, col:60> col:60 used enc 'int'
| |-ParmVarDecl 0x18e8d3a61e0 <line:140:32, col:43> col:43 invalid block 'int'
| `-CompoundStmt 0x18e8d3a4118 <line:141:1, line:170:1>
|   |-DeclStmt 0x18e8d3a65f8 <line:142:5, col:20>
|   | |-VarDecl 0x18e8d3a6470 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x18e8d3a64f0 <col:5, col:12> col:12 used rem 'int'
|   | `-VarDecl 0x18e8d3a6570 <col:5, col:17> col:17 used num 'int'
|   |-DeclStmt 0x18e8d3a67a8 <line:143:5, col:35>
|   | `-VarDecl 0x18e8d3a6740 <col:5, col:34> col:19 used ovec 'unsigned char [33]'
|   |-IfStmt 0x18e8d3a6908 <line:146:5, line:147:9>
|   | |-BinaryOperator 0x18e8d3a68d8 <line:146:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x18e8d3a6838 <col:9, col:18> 'int' '<='
|   | | | |-ImplicitCastExpr 0x18e8d3a6820 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x18e8d3a67c0 <col:9> 'int' lvalue ParmVar 0x18e8d39d098 'nbits' 'int'
|   | | | `-IntegerLiteral 0x18e8d3a67f8 <col:18> 'int' 0
|   | | `-BinaryOperator 0x18e8d3a68b8 <col:23, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x18e8d3a68a0 <col:23> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x18e8d3a6858 <col:23> 'int' lvalue ParmVar 0x18e8d39d098 'nbits' 'int'
|   | |   `-IntegerLiteral 0x18e8d3a6878 <col:31> 'int' 128
|   | `-ReturnStmt 0x18e8d3a68f8 <line:147:9>
|   |-CallExpr 0x18e8d3a6a50 <line:150:5, col:26> 'void *'
|   | |-ImplicitCastExpr 0x18e8d3a6a38 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x18e8d3a6920 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x18e8d31eb18 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x18e8d3a6aa0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x18e8d3a6a88 <col:12> 'unsigned char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x18e8d3a6940 <col:12> 'unsigned char [33]' lvalue Var 0x18e8d3a6740 'ovec' 'unsigned char [33]'
|   | |-ImplicitCastExpr 0x18e8d3a6ad0 <col:18> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x18e8d3a6ab8 <col:18> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x18e8d3a6978 <col:18> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d3a60e0 'ivec' 'unsigned char *':'unsigned char *'
|   | `-ImplicitCastExpr 0x18e8d3a6ae8 <col:24> 'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x18e8d3a69b0 <col:24> 'int' 16
|   |-BinaryOperator 0x18e8d3a6c98 <line:153:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x18e8d3a6b78 <col:5> 'int' lvalue Var 0x18e8d3a6570 'num' 'int'
|   | `-BinaryOperator 0x18e8d3a6c78 <col:11, col:25> 'int' '/'
|   |   |-ParenExpr 0x18e8d3a6c30 <col:11, col:21> 'int'
|   |   | `-BinaryOperator 0x18e8d3a6c10 <col:12, col:20> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x18e8d3a6bf8 <col:12> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x18e8d3a6bb0 <col:12> 'int' lvalue ParmVar 0x18e8d39d098 'nbits' 'int'
|   |   |   `-IntegerLiteral 0x18e8d3a6bd0 <col:20> 'int' 7
|   |   `-IntegerLiteral 0x18e8d3a6c50 <col:25> 'int' 8
|   |-IfStmt 0x18e8d3a16d8 <line:154:5, line:159:53> has_else
|   | |-ImplicitCastExpr 0x18e8d3a6cf0 <line:154:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x18e8d3a6cb8 <col:9> 'int' lvalue ParmVar 0x18e8d3a6160 'enc' 'int'
|   | |-ForStmt 0x18e8d3a11b8 <line:155:9, line:156:53>
|   | | |-BinaryOperator 0x18e8d3a6d68 <line:155:14, col:18> 'int' '='
|   | | | |-DeclRefExpr 0x18e8d3a6d08 <col:14> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   | | | `-IntegerLiteral 0x18e8d3a6d40 <col:18> 'int' 0
|   | | |-<<<NULL>>>
|   | | |-BinaryOperator 0x18e8d3a6df8 <col:21, col:25> 'int' '<'
|   | | | |-ImplicitCastExpr 0x18e8d3a6dc8 <col:21> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x18e8d3a6d88 <col:21> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   | | | `-ImplicitCastExpr 0x18e8d3a6de0 <col:25> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x18e8d3a6da8 <col:25> 'int' lvalue Var 0x18e8d3a6570 'num' 'int'
|   | | |-UnaryOperator 0x18e8d3a6e38 <col:30, col:32> 'int' prefix '++'
|   | | | `-DeclRefExpr 0x18e8d3a6e18 <col:32> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   | | `-BinaryOperator 0x18e8d3a1198 <line:156:13, col:53> 'unsigned char' '='
|   | |   |-ArraySubscriptExpr 0x18e8d3a6ed8 <col:13, col:18> 'unsigned char' lvalue
|   | |   | |-ImplicitCastExpr 0x18e8d3a6ea8 <col:13> 'unsigned char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x18e8d3a6e50 <col:13> 'unsigned char *' lvalue ParmVar 0x18e8d39d018 'out' 'unsigned char *'
|   | |   | `-ImplicitCastExpr 0x18e8d3a6ec0 <col:17> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x18e8d3a6e88 <col:17> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   | |   `-ParenExpr 0x18e8d3a1178 <col:22, col:53> 'unsigned char'
|   | |     `-BinaryOperator 0x18e8d3a1158 <col:23, col:52> 'unsigned char' '='
|   | |       |-ArraySubscriptExpr 0x18e8d3a6fb0 <col:23, col:34> 'unsigned char' lvalue
|   | |       | |-ImplicitCastExpr 0x18e8d3a6f98 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   | |       | | `-DeclRefExpr 0x18e8d3a6ef8 <col:23> 'unsigned char [33]' lvalue Var 0x18e8d3a6740 'ovec' 'unsigned char [33]'
|   | |       | `-BinaryOperator 0x18e8d3a6f78 <col:28, col:33> 'int' '+'
|   | |       |   |-IntegerLiteral 0x18e8d3a6f18 <col:28> 'int' 16
|   | |       |   `-ImplicitCastExpr 0x18e8d3a6f60 <col:33> 'int' <LValueToRValue>
|   | |       |     `-DeclRefExpr 0x18e8d3a6f40 <col:33> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   | |       `-ImplicitCastExpr 0x18e8d3a1140 <col:38, col:52> 'unsigned char' <IntegralCast>
|   | |         `-BinaryOperator 0x18e8d3a1120 <col:38, col:52> 'int' '^'
|   | |           |-ImplicitCastExpr 0x18e8d3a10d8 <col:38, col:42> 'int' <IntegralCast>
|   | |           | `-ImplicitCastExpr 0x18e8d3a10c0 <col:38, col:42> 'unsigned char' <LValueToRValue>
|   | |           |   `-ArraySubscriptExpr 0x18e8d3a1010 <col:38, col:42> 'const unsigned char' lvalue
|   | |           |     |-ImplicitCastExpr 0x18e8d3a0fe0 <col:38> 'const unsigned char *' <LValueToRValue>
|   | |           |     | `-DeclRefExpr 0x18e8d3a6fd0 <col:38> 'const unsigned char *' lvalue ParmVar 0x18e8d39cf98 'in' 'const unsigned char *'
|   | |           |     `-ImplicitCastExpr 0x18e8d3a0ff8 <col:41> 'int' <LValueToRValue>
|   | |           |       `-DeclRefExpr 0x18e8d3a0fc0 <col:41> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   | |           `-ImplicitCastExpr 0x18e8d3a1108 <col:46, col:52> 'int' <IntegralCast>
|   | |             `-ImplicitCastExpr 0x18e8d3a10f0 <col:46, col:52> 'unsigned char' <LValueToRValue>
|   | |               `-ArraySubscriptExpr 0x18e8d3a10a0 <col:46, col:52> 'unsigned char' lvalue
|   | |                 |-ImplicitCastExpr 0x18e8d3a1070 <col:46> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   | |                 | `-DeclRefExpr 0x18e8d3a1030 <col:46> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d3a60e0 'ivec' 'unsigned char *':'unsigned char *'
|   | |                 `-ImplicitCastExpr 0x18e8d3a1088 <col:51> 'int' <LValueToRValue>
|   | |                   `-DeclRefExpr 0x18e8d3a1050 <col:51> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   | `-ForStmt 0x18e8d3a16a0 <line:158:9, line:159:53>
|   |   |-BinaryOperator 0x18e8d3a1238 <line:158:14, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x18e8d3a11f0 <col:14> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   |   | `-IntegerLiteral 0x18e8d3a1210 <col:18> 'int' 0
|   |   |-<<<NULL>>>
|   |   |-BinaryOperator 0x18e8d3a12c8 <col:21, col:25> 'int' '<'
|   |   | |-ImplicitCastExpr 0x18e8d3a1298 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x18e8d3a1258 <col:21> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   |   | `-ImplicitCastExpr 0x18e8d3a12b0 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x18e8d3a1278 <col:25> 'int' lvalue Var 0x18e8d3a6570 'num' 'int'
|   |   |-UnaryOperator 0x18e8d3a1308 <col:30, col:32> 'int' prefix '++'
|   |   | `-DeclRefExpr 0x18e8d3a12e8 <col:32> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   |   `-BinaryOperator 0x18e8d3a1680 <line:159:13, col:53> 'unsigned char' '='
|   |     |-ArraySubscriptExpr 0x18e8d3a1390 <col:13, col:18> 'unsigned char' lvalue
|   |     | |-ImplicitCastExpr 0x18e8d3a1360 <col:13> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x18e8d3a1320 <col:13> 'unsigned char *' lvalue ParmVar 0x18e8d39d018 'out' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x18e8d3a1378 <col:17> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x18e8d3a1340 <col:17> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   |     `-ImplicitCastExpr 0x18e8d3a1668 <col:22, col:53> 'unsigned char' <IntegralCast>
|   |       `-BinaryOperator 0x18e8d3a1648 <col:22, col:53> 'int' '^'
|   |         |-ImplicitCastExpr 0x18e8d3a1600 <col:22, col:43> 'int' <IntegralCast>
|   |         | `-ParenExpr 0x18e8d3a1550 <col:22, col:43> 'unsigned char'
|   |         |   `-BinaryOperator 0x18e8d3a1530 <col:23, col:42> 'unsigned char' '='
|   |         |     |-ArraySubscriptExpr 0x18e8d3a1468 <col:23, col:34> 'unsigned char' lvalue
|   |         |     | |-ImplicitCastExpr 0x18e8d3a1450 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   |         |     | | `-DeclRefExpr 0x18e8d3a13b0 <col:23> 'unsigned char [33]' lvalue Var 0x18e8d3a6740 'ovec' 'unsigned char [33]'
|   |         |     | `-BinaryOperator 0x18e8d3a1430 <col:28, col:33> 'int' '+'
|   |         |     |   |-IntegerLiteral 0x18e8d3a13d0 <col:28> 'int' 16
|   |         |     |   `-ImplicitCastExpr 0x18e8d3a1418 <col:33> 'int' <LValueToRValue>
|   |         |     |     `-DeclRefExpr 0x18e8d3a13f8 <col:33> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   |         |     `-ImplicitCastExpr 0x18e8d3a1518 <col:38, col:42> 'unsigned char' <LValueToRValue>
|   |         |       `-ArraySubscriptExpr 0x18e8d3a14f8 <col:38, col:42> 'const unsigned char' lvalue
|   |         |         |-ImplicitCastExpr 0x18e8d3a14c8 <col:38> 'const unsigned char *' <LValueToRValue>
|   |         |         | `-DeclRefExpr 0x18e8d3a1488 <col:38> 'const unsigned char *' lvalue ParmVar 0x18e8d39cf98 'in' 'const unsigned char *'
|   |         |         `-ImplicitCastExpr 0x18e8d3a14e0 <col:41> 'int' <LValueToRValue>
|   |         |           `-DeclRefExpr 0x18e8d3a14a8 <col:41> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   |         `-ImplicitCastExpr 0x18e8d3a1630 <col:47, col:53> 'int' <IntegralCast>
|   |           `-ImplicitCastExpr 0x18e8d3a1618 <col:47, col:53> 'unsigned char' <LValueToRValue>
|   |             `-ArraySubscriptExpr 0x18e8d3a15e0 <col:47, col:53> 'unsigned char' lvalue
|   |               |-ImplicitCastExpr 0x18e8d3a15b0 <col:47> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x18e8d3a1570 <col:47> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d3a60e0 'ivec' 'unsigned char *':'unsigned char *'
|   |               `-ImplicitCastExpr 0x18e8d3a15c8 <col:52> 'int' <LValueToRValue>
|   |                 `-DeclRefExpr 0x18e8d3a1590 <col:52> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|   |-BinaryOperator 0x18e8d3a17b8 <line:161:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x18e8d3a1700 <col:5> 'int' lvalue Var 0x18e8d3a64f0 'rem' 'int'
|   | `-BinaryOperator 0x18e8d3a1798 <col:11, col:19> 'int' '%'
|   |   |-ImplicitCastExpr 0x18e8d3a1780 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x18e8d3a1738 <col:11> 'int' lvalue ParmVar 0x18e8d39d098 'nbits' 'int'
|   |   `-IntegerLiteral 0x18e8d3a1758 <col:19> 'int' 8
|   |-BinaryOperator 0x18e8d3a1878 <line:162:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x18e8d3a17d8 <col:5> 'int' lvalue Var 0x18e8d3a6570 'num' 'int'
|   | `-BinaryOperator 0x18e8d3a1858 <col:11, col:19> 'int' '/'
|   |   |-ImplicitCastExpr 0x18e8d3a1840 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x18e8d3a17f8 <col:11> 'int' lvalue ParmVar 0x18e8d39d098 'nbits' 'int'
|   |   `-IntegerLiteral 0x18e8d3a1818 <col:19> 'int' 8
|   `-IfStmt 0x18e8d3a40f0 <line:163:5, line:167:75> has_else
|     |-BinaryOperator 0x18e8d3a18f8 <line:163:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x18e8d3a18e0 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x18e8d3a1898 <col:9> 'int' lvalue Var 0x18e8d3a64f0 'rem' 'int'
|     | `-IntegerLiteral 0x18e8d3a18b8 <col:16> 'int' 0
|     |-CallExpr 0x18e8d3a1a40 <line:164:9, col:36> 'void *'
|     | |-ImplicitCastExpr 0x18e8d3a1a28 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x18e8d3a1918 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x18e8d31eb18 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |-ImplicitCastExpr 0x18e8d3a1a90 <col:16> 'void *' <BitCast>
|     | | `-ImplicitCastExpr 0x18e8d3a1a78 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |   `-DeclRefExpr 0x18e8d3a1938 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d3a60e0 'ivec' 'unsigned char *':'unsigned char *'
|     | |-ImplicitCastExpr 0x18e8d3a1aa8 <col:22, col:29> 'const void *' <BitCast>
|     | | `-BinaryOperator 0x18e8d3a19c8 <col:22, col:29> 'unsigned char *' '+'
|     | |   |-ImplicitCastExpr 0x18e8d3a1998 <col:22> 'unsigned char *' <ArrayToPointerDecay>
|     | |   | `-DeclRefExpr 0x18e8d3a1958 <col:22> 'unsigned char [33]' lvalue Var 0x18e8d3a6740 'ovec' 'unsigned char [33]'
|     | |   `-ImplicitCastExpr 0x18e8d3a19b0 <col:29> 'int' <LValueToRValue>
|     | |     `-DeclRefExpr 0x18e8d3a1978 <col:29> 'int' lvalue Var 0x18e8d3a6570 'num' 'int'
|     | `-ImplicitCastExpr 0x18e8d3a1ac0 <col:34> 'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x18e8d3a19e8 <col:34> 'int' 16
|     `-ForStmt 0x18e8d3a40b8 <line:166:9, line:167:75>
|       |-BinaryOperator 0x18e8d3a1b20 <line:166:14, col:18> 'int' '='
|       | |-DeclRefExpr 0x18e8d3a1ad8 <col:14> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|       | `-IntegerLiteral 0x18e8d3a1af8 <col:18> 'int' 0
|       |-<<<NULL>>>
|       |-BinaryOperator 0x18e8d3a1ba0 <col:21, col:25> 'int' '<'
|       | |-ImplicitCastExpr 0x18e8d3a1b88 <col:21> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x18e8d3a1b40 <col:21> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|       | `-IntegerLiteral 0x18e8d3a1b60 <col:25> 'int' 16
|       |-UnaryOperator 0x18e8d3a1be0 <col:29, col:31> 'int' prefix '++'
|       | `-DeclRefExpr 0x18e8d3a1bc0 <col:31> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|       `-BinaryOperator 0x18e8d3a4098 <line:167:13, col:75> 'unsigned char' '='
|         |-ArraySubscriptExpr 0x18e8d3a1c68 <col:13, col:19> 'unsigned char' lvalue
|         | |-ImplicitCastExpr 0x18e8d3a1c38 <col:13> 'unsigned char *':'unsigned char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x18e8d3a1bf8 <col:13> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x18e8d3a60e0 'ivec' 'unsigned char *':'unsigned char *'
|         | `-ImplicitCastExpr 0x18e8d3a1c50 <col:18> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x18e8d3a1c18 <col:18> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|         `-ImplicitCastExpr 0x18e8d3a4080 <col:23, col:75> 'unsigned char' <IntegralCast>
|           `-BinaryOperator 0x18e8d3a4060 <col:23, col:75> 'int' '|'
|             |-BinaryOperator 0x18e8d3a1dd8 <col:23, col:40> 'int' '<<'
|             | |-ImplicitCastExpr 0x18e8d3a1da8 <col:23, col:35> 'int' <IntegralCast>
|             | | `-ImplicitCastExpr 0x18e8d3a1d90 <col:23, col:35> 'unsigned char' <LValueToRValue>
|             | |   `-ArraySubscriptExpr 0x18e8d3a1d50 <col:23, col:35> 'unsigned char' lvalue
|             | |     |-ImplicitCastExpr 0x18e8d3a1d38 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|             | |     | `-DeclRefExpr 0x18e8d3a1c88 <col:23> 'unsigned char [33]' lvalue Var 0x18e8d3a6740 'ovec' 'unsigned char [33]'
|             | |     `-BinaryOperator 0x18e8d3a1d18 <col:28, col:32> 'int' '+'
|             | |       |-ImplicitCastExpr 0x18e8d3a1ce8 <col:28> 'int' <LValueToRValue>
|             | |       | `-DeclRefExpr 0x18e8d3a1ca8 <col:28> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|             | |       `-ImplicitCastExpr 0x18e8d3a1d00 <col:32> 'int' <LValueToRValue>
|             | |         `-DeclRefExpr 0x18e8d3a1cc8 <col:32> 'int' lvalue Var 0x18e8d3a6570 'num' 'int'
|             | `-ImplicitCastExpr 0x18e8d3a1dc0 <col:40> 'int' <LValueToRValue>
|             |   `-DeclRefExpr 0x18e8d3a1d70 <col:40> 'int' lvalue Var 0x18e8d3a64f0 'rem' 'int'
|             `-BinaryOperator 0x18e8d3a4040 <col:46, col:75> 'int' '>>'
|               |-ImplicitCastExpr 0x18e8d3a4028 <col:46, col:62> 'int' <IntegralCast>
|               | `-ImplicitCastExpr 0x18e8d3a4010 <col:46, col:62> 'unsigned char' <LValueToRValue>
|               |   `-ArraySubscriptExpr 0x18e8d3a1f08 <col:46, col:62> 'unsigned char' lvalue
|               |     |-ImplicitCastExpr 0x18e8d3a1ef0 <col:46> 'unsigned char *' <ArrayToPointerDecay>
|               |     | `-DeclRefExpr 0x18e8d3a1df8 <col:46> 'unsigned char [33]' lvalue Var 0x18e8d3a6740 'ovec' 'unsigned char [33]'
|               |     `-BinaryOperator 0x18e8d3a1ed0 <col:51, col:61> 'int' '+'
|               |       |-BinaryOperator 0x18e8d3a1e88 <col:51, col:55> 'int' '+'
|               |       | |-ImplicitCastExpr 0x18e8d3a1e58 <col:51> 'int' <LValueToRValue>
|               |       | | `-DeclRefExpr 0x18e8d3a1e18 <col:51> 'int' lvalue Var 0x18e8d3a6470 'n' 'int'
|               |       | `-ImplicitCastExpr 0x18e8d3a1e70 <col:55> 'int' <LValueToRValue>
|               |       |   `-DeclRefExpr 0x18e8d3a1e38 <col:55> 'int' lvalue Var 0x18e8d3a6570 'num' 'int'
|               |       `-IntegerLiteral 0x18e8d3a1ea8 <col:61> 'int' 1
|               `-ParenExpr 0x18e8d3a3ff0 <col:67, col:75> 'int'
|                 `-BinaryOperator 0x18e8d3a1f88 <col:68, col:72> 'int' '-'
|                   |-IntegerLiteral 0x18e8d3a1f28 <col:68> 'int' 8
|                   `-ImplicitCastExpr 0x18e8d3a1f70 <col:72> 'int' <LValueToRValue>
|                     `-DeclRefExpr 0x18e8d3a1f50 <col:72> 'int' lvalue Var 0x18e8d3a64f0 'rem' 'int'
|-FunctionDecl 0x18e8d3a4618 <line:173:1, line:187:1> line:173:6 invalid CRYPTO_cfb128_1_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
| |-ParmVarDecl 0x18e8d3a4188 <col:30, col:51> col:51 used in 'const unsigned char *'
| |-ParmVarDecl 0x18e8d3a4208 <col:55, col:70> col:70 used out 'unsigned char *'
| |-ParmVarDecl 0x18e8d3a4280 <line:174:30, col:37> col:37 used bits 'size_t':'unsigned long long'
| |-ParmVarDecl 0x18e8d3a4300 <col:43, col:55> col:55 used key 'const void *'
| |-ParmVarDecl 0x18e8d3a43d0 <line:175:30, col:51> col:44 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x18e8d3a4450 <col:54, col:59> col:59 num 'int *'
| |-ParmVarDecl 0x18e8d3a44d0 <line:176:30, col:34> col:34 used enc 'int'
| |-ParmVarDecl 0x18e8d3a4550 <col:39, col:50> col:50 invalid block 'int'
| `-CompoundStmt 0x18e8d3a07d8 <line:177:1, line:187:1>
|   |-DeclStmt 0x18e8d3a4788 <line:178:5, col:13>
|   | `-VarDecl 0x18e8d3a4720 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x18e8d3a4990 <line:179:5, col:29>
|   | |-VarDecl 0x18e8d3a4840 <col:5, col:22> col:19 used c 'unsigned char [1]'
|   | `-VarDecl 0x18e8d3a4910 <col:5, col:28> col:25 used d 'unsigned char [1]'
|   `-ForStmt 0x18e8d3a07a0 <line:181:5, line:186:5>
|     |-BinaryOperator 0x18e8d3a4a20 <line:181:10, col:14> 'size_t':'unsigned long long' '='
|     | |-DeclRefExpr 0x18e8d3a49a8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x18e8d3a4720 'n' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x18e8d3a4a08 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x18e8d3a49e0 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x18e8d3a4ac8 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x18e8d3a4a98 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|     | | `-DeclRefExpr 0x18e8d3a4a40 <col:17> 'size_t':'unsigned long long' lvalue Var 0x18e8d3a4720 'n' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x18e8d3a4ab0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x18e8d3a4a60 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x18e8d3a4280 'bits' 'size_t':'unsigned long long'
|     |-UnaryOperator 0x18e8d3a4b08 <col:27, col:29> 'size_t':'unsigned long long' prefix '++'
|     | `-DeclRefExpr 0x18e8d3a4ae8 <col:29> 'size_t':'unsigned long long' lvalue Var 0x18e8d3a4720 'n' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x18e8d3a0780 <col:32, line:186:5>
|       |-BinaryOperator 0x18e8d3a4f48 <line:182:9, col:58> 'unsigned char' '='
|       | |-ArraySubscriptExpr 0x18e8d3a4b98 <col:9, col:12> 'unsigned char' lvalue
|       | | |-ImplicitCastExpr 0x18e8d3a4b80 <col:9> 'unsigned char *' <ArrayToPointerDecay>
|       | | | `-DeclRefExpr 0x18e8d3a4b20 <col:9> 'unsigned char [1]' lvalue Var 0x18e8d3a4840 'c' 'unsigned char [1]'
|       | | `-IntegerLiteral 0x18e8d3a4b58 <col:11> 'int' 0
|       | `-ImplicitCastExpr 0x18e8d3a4f30 <col:16, col:58> 'unsigned char' <IntegralCast>
|       |   `-ConditionalOperator 0x18e8d3a4f00 <col:16, col:58> 'int'
|       |     |-ParenExpr 0x18e8d3a4e90 <col:16, col:47> 'int'
|       |     | `-BinaryOperator 0x18e8d3a4e70 <col:17, col:46> 'int' '&'
|       |     |   |-ImplicitCastExpr 0x18e8d3a4e58 <col:17, col:25> 'int' <IntegralCast>
|       |     |   | `-ImplicitCastExpr 0x18e8d3a4e40 <col:17, col:25> 'unsigned char' <LValueToRValue>
|       |     |   |   `-ArraySubscriptExpr 0x18e8d3a4ca0 <col:17, col:25> 'const unsigned char' lvalue
|       |     |   |     |-ImplicitCastExpr 0x18e8d3a4c88 <col:17> 'const unsigned char *' <LValueToRValue>
|       |     |   |     | `-DeclRefExpr 0x18e8d3a4bb8 <col:17> 'const unsigned char *' lvalue ParmVar 0x18e8d3a4188 'in' 'const unsigned char *'
|       |     |   |     `-BinaryOperator 0x18e8d3a4c68 <col:20, col:24> 'unsigned long long' '/'
|       |     |   |       |-ImplicitCastExpr 0x18e8d3a4c38 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|       |     |   |       | `-DeclRefExpr 0x18e8d3a4bf0 <col:20> 'size_t':'unsigned long long' lvalue Var 0x18e8d3a4720 'n' 'size_t':'unsigned long long'
|       |     |   |       `-ImplicitCastExpr 0x18e8d3a4c50 <col:24> 'unsigned long long' <IntegralCast>
|       |     |   |         `-IntegerLiteral 0x18e8d3a4c10 <col:24> 'int' 8
|       |     |   `-ParenExpr 0x18e8d3a4e20 <col:29, col:46> 'int'
|       |     |     `-BinaryOperator 0x18e8d3a4e00 <col:30, col:45> 'int' '<<'
|       |     |       |-IntegerLiteral 0x18e8d3a4cc0 <col:30> 'int' 1
|       |     |       `-ParenExpr 0x18e8d3a4de0 <col:35, col:45> 'unsigned long long'
|       |     |         `-BinaryOperator 0x18e8d3a4dc0 <col:36, col:44> 'unsigned long long' '-'
|       |     |           |-ImplicitCastExpr 0x18e8d3a4da8 <col:36> 'unsigned long long' <IntegralCast>
|       |     |           | `-IntegerLiteral 0x18e8d3a4ce8 <col:36> 'int' 7
|       |     |           `-BinaryOperator 0x18e8d3a4d88 <col:40, col:44> 'unsigned long long' '%'
|       |     |             |-ImplicitCastExpr 0x18e8d3a4d58 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|       |     |             | `-DeclRefExpr 0x18e8d3a4d10 <col:40> 'size_t':'unsigned long long' lvalue Var 0x18e8d3a4720 'n' 'size_t':'unsigned long long'
|       |     |             `-ImplicitCastExpr 0x18e8d3a4d70 <col:44> 'unsigned long long' <IntegralCast>
|       |     |               `-IntegerLiteral 0x18e8d3a4d30 <col:44> 'int' 8
|       |     |-IntegerLiteral 0x18e8d3a4eb0 <col:51> 'int' 128
|       |     `-IntegerLiteral 0x18e8d3a4ed8 <col:58> 'int' 0
|       `-BinaryOperator 0x18e8d3a0760 <line:184:9, line:185:52> 'unsigned char' '='
|         |-ArraySubscriptExpr 0x18e8d3a0140 <line:184:9, col:18> 'unsigned char' lvalue
|         | |-ImplicitCastExpr 0x18e8d3a0128 <col:9> 'unsigned char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x18e8d3a0058 <col:9> 'unsigned char *' lvalue ParmVar 0x18e8d3a4208 'out' 'unsigned char *'
|         | `-BinaryOperator 0x18e8d3a0108 <col:13, col:17> 'unsigned long long' '/'
|         |   |-ImplicitCastExpr 0x18e8d3a00d8 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|         |   | `-DeclRefExpr 0x18e8d3a0090 <col:13> 'size_t':'unsigned long long' lvalue Var 0x18e8d3a4720 'n' 'size_t':'unsigned long long'
|         |   `-ImplicitCastExpr 0x18e8d3a00f0 <col:17> 'unsigned long long' <IntegralCast>
|         |     `-IntegerLiteral 0x18e8d3a00b0 <col:17> 'int' 8
|         `-ImplicitCastExpr 0x18e8d3a0748 <col:22, line:185:52> 'unsigned char' <IntegralCast>
|           `-BinaryOperator 0x18e8d3a0728 <line:184:22, line:185:52> 'int' '|'
|             |-ParenExpr 0x18e8d3a0498 <line:184:22, col:69> 'int'
|             | `-BinaryOperator 0x18e8d3a0478 <col:23, col:68> 'int' '&'
|             |   |-ImplicitCastExpr 0x18e8d3a0460 <col:23, col:32> 'int' <IntegralCast>
|             |   | `-ImplicitCastExpr 0x18e8d3a0448 <col:23, col:32> 'unsigned char' <LValueToRValue>
|             |   |   `-ArraySubscriptExpr 0x18e8d3a0230 <col:23, col:32> 'unsigned char' lvalue
|             |   |     |-ImplicitCastExpr 0x18e8d3a0218 <col:23> 'unsigned char *' <LValueToRValue>
|             |   |     | `-DeclRefExpr 0x18e8d3a0160 <col:23> 'unsigned char *' lvalue ParmVar 0x18e8d3a4208 'out' 'unsigned char *'
|             |   |     `-BinaryOperator 0x18e8d3a01f8 <col:27, col:31> 'unsigned long long' '/'
|             |   |       |-ImplicitCastExpr 0x18e8d3a01c8 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|             |   |       | `-DeclRefExpr 0x18e8d3a0180 <col:27> 'size_t':'unsigned long long' lvalue Var 0x18e8d3a4720 'n' 'size_t':'unsigned long long'
|             |   |       `-ImplicitCastExpr 0x18e8d3a01e0 <col:31> 'unsigned long long' <IntegralCast>
|             |   |         `-IntegerLiteral 0x18e8d3a01a0 <col:31> 'int' 8
|             |   `-UnaryOperator 0x18e8d3a0430 <col:36, col:68> 'int' prefix '~' cannot overflow
|             |     `-ParenExpr 0x18e8d3a0410 <col:37, col:68> 'int'
|             |       `-BinaryOperator 0x18e8d3a03f0 <col:38, col:67> 'int' '<<'
|             |         |-IntegerLiteral 0x18e8d3a0250 <col:38> 'int' 1
|             |         `-CStyleCastExpr 0x18e8d3a03c8 <col:43, col:67> 'unsigned int' <IntegralCast>
|             |           `-ParenExpr 0x18e8d3a03a8 <col:57, col:67> 'unsigned long long'
|             |             `-BinaryOperator 0x18e8d3a0350 <col:58, col:66> 'unsigned long long' '-'
|             |               |-ImplicitCastExpr 0x18e8d3a0338 <col:58> 'unsigned long long' <IntegralCast>
|             |               | `-IntegerLiteral 0x18e8d3a0278 <col:58> 'int' 7
|             |               `-BinaryOperator 0x18e8d3a0318 <col:62, col:66> 'unsigned long long' '%'
|             |                 |-ImplicitCastExpr 0x18e8d3a02e8 <col:62> 'size_t':'unsigned long long' <LValueToRValue>
|             |                 | `-DeclRefExpr 0x18e8d3a02a0 <col:62> 'size_t':'unsigned long long' lvalue Var 0x18e8d3a4720 'n' 'size_t':'unsigned long long'
|             |                 `-ImplicitCastExpr 0x18e8d3a0300 <col:66> 'unsigned long long' <IntegralCast>
|             |                   `-IntegerLiteral 0x18e8d3a02c0 <col:66> 'int' 8
|             `-ParenExpr 0x18e8d3a0708 <line:185:13, col:52> 'int'
|               `-BinaryOperator 0x18e8d3a06e8 <col:14, col:51> 'int' '>>'
|                 |-ParenExpr 0x18e8d3a05b0 <col:14, col:26> 'int'
|                 | `-BinaryOperator 0x18e8d3a0590 <col:15, col:22> 'int' '&'
|                 |   |-ImplicitCastExpr 0x18e8d3a0578 <col:15, col:18> 'int' <IntegralCast>
|                 |   | `-ImplicitCastExpr 0x18e8d3a0560 <col:15, col:18> 'unsigned char' <LValueToRValue>
|                 |   |   `-ArraySubscriptExpr 0x18e8d3a0518 <col:15, col:18> 'unsigned char' lvalue
|                 |   |     |-ImplicitCastExpr 0x18e8d3a0500 <col:15> 'unsigned char *' <ArrayToPointerDecay>
|                 |   |     | `-DeclRefExpr 0x18e8d3a04b8 <col:15> 'unsigned char [1]' lvalue Var 0x18e8d3a4910 'd' 'unsigned char [1]'
|                 |   |     `-IntegerLiteral 0x18e8d3a04d8 <col:17> 'int' 0
|                 |   `-IntegerLiteral 0x18e8d3a0538 <col:22> 'int' 128
|                 `-CStyleCastExpr 0x18e8d3a06c0 <col:31, col:51> 'unsigned int' <IntegralCast>
|                   `-ParenExpr 0x18e8d3a06a0 <col:45, col:51> 'unsigned long long'
|                     `-BinaryOperator 0x18e8d3a0648 <col:46, col:50> 'unsigned long long' '%'
|                       |-ImplicitCastExpr 0x18e8d3a0618 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|                       | `-DeclRefExpr 0x18e8d3a05d0 <col:46> 'size_t':'unsigned long long' lvalue Var 0x18e8d3a4720 'n' 'size_t':'unsigned long long'
|                       `-ImplicitCastExpr 0x18e8d3a0630 <col:50> 'unsigned long long' <IntegralCast>
|                         `-IntegerLiteral 0x18e8d3a05f0 <col:50> 'int' 8
`-FunctionDecl 0x18e8d3a0cc0 <line:189:1, line:198:1> line:189:6 invalid CRYPTO_cfb128_8_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
  |-ParmVarDecl 0x18e8d3a0830 <col:30, col:51> col:51 used in 'const unsigned char *'
  |-ParmVarDecl 0x18e8d3a08b0 <col:55, col:70> col:70 used out 'unsigned char *'
  |-ParmVarDecl 0x18e8d3a0928 <line:190:30, col:37> col:37 used length 'size_t':'unsigned long long'
  |-ParmVarDecl 0x18e8d3a09a8 <col:45, col:57> col:57 used key 'const void *'
  |-ParmVarDecl 0x18e8d3a0a78 <line:191:30, col:51> col:44 used ivec 'unsigned char *':'unsigned char *'
  |-ParmVarDecl 0x18e8d3a0af8 <col:54, col:59> col:59 num 'int *'
  |-ParmVarDecl 0x18e8d3a0b78 <line:192:30, col:34> col:34 used enc 'int'
  |-ParmVarDecl 0x18e8d3a0bf8 <col:39, col:50> col:50 invalid block 'int'
  `-CompoundStmt 0x18e8d3a3248 <line:193:1, line:198:1>
    `-DeclStmt 0x18e8d3a0e30 <line:194:5, col:13>
      `-VarDecl 0x18e8d3a0dc8 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
