TranslationUnitDecl 0x16ac07d7c28 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x16ac07d84c0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x16ac07d81c0 '__int128'
|-TypedefDecl 0x16ac07d8530 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x16ac07d81e0 'unsigned __int128'
|-TypedefDecl 0x16ac07d8868 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x16ac07d8620 'struct __NSConstantString_tag'
|   `-Record 0x16ac07d8588 '__NSConstantString_tag'
|-TypedefDecl 0x16ac07d88d8 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x16ac07d7e00 'unsigned long long'
|-TypedefDecl 0x16ac07d8970 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x16ac07d8930 'char *'
|   `-BuiltinType 0x16ac07d7cc0 'char'
|-TypedefDecl 0x16ac07d89e0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x16ac07d8930 'char *'
|   `-BuiltinType 0x16ac07d7cc0 'char'
|-TypedefDecl 0x16ac07d8a50 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x16ac07d7d60 'long long'
|-TypedefDecl 0x16ac07d8ac0 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x16ac07d7e00 'unsigned long long'
|-TypedefDecl 0x16ac07d8b30 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x16ac07d7dc0 'unsigned int'
|-TypedefDecl 0x16ac07d8ba0 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x16ac07d7d80 'unsigned char'
|-RecordDecl 0x16ac1ff0c30 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x16ac1ff0d20 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x16ac1ff0d88 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x16ac1ff0e38 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x16ac1ff0de0 'struct u128' sugar
|   `-RecordType 0x16ac1ff0cd0 'u128'
|     `-Record 0x16ac1ff0c30 ''
|-RecordDecl 0x16ac1ff0ea8 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x16ac1ff0f60 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x16ac1ff10f8 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x16ac1ff1248 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x16ac1ff1398 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x16ac1ff1518 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x16ac1ff15c8 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x16ac1ff1640 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x16ac1ff16b8 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x16ac1ff1730 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x16ac1ff17a8 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x16ac1ff1820 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x16ac1ff19d8 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x16ac1ff3ed8 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x16ac1ff43e8 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x16ac1ff4458 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x16ac1ff44c8 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x16ac1ff4538 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x16ac1ff45a8 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x16ac1ff4668 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x16ac1ff4738 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x16ac1ff47a8 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x16ac1ff4818 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x16ac1ff4888 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x16ac1ff48e0 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x16ac1ff49a0 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x16ac1ff4ac0 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x16ac1ff4b78 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x16ac1ff1c40 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x16ac1ff1cb8 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x16ac1ff1d20 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x16ac1ff1d90 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x16ac1ff1e00 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x16ac1ff1eb0 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x16ac1ff1fd0 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x16ac1ff2090 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x16ac1ff2148 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x16ac1ff20f0 'union OCB_BLOCK' sugar
|   `-RecordType 0x16ac1ff1f50 'OCB_BLOCK'
|     `-Record 0x16ac1ff1eb0 ''
|-RecordDecl 0x16ac1ff21b8 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x16ac1ff2288 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x16ac1ff22f8 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x16ac1ff2368 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x16ac1ff23d8 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x16ac1ff2448 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x16ac1ff24b0 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x16ac1ff2518 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x16ac1ff25a0 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x16ac1ff2608 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x16ac1ff26c8 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x16ac1ff2720 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x16ac1ff27f0 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x16ac1ff2858 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x16ac1ff28c0 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x16ac1ff2928 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x16ac1ff2990 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x16ac1ff29f8 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x16ac1ff2aa8 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x16ac1ff2b68 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x16ac07d7e00 'unsigned long long'
|-TypedefDecl 0x16ac1ff2bd8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x16ac07d8930 'char *'
|   `-BuiltinType 0x16ac07d7cc0 'char'
|-FunctionDecl 0x16ac2162560 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x16ac2162600 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x16ac2162670 <col:21> Implicit
|-FunctionDecl 0x16ac21626c8 prev 0x16ac2162560 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x16ac21623f8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x16ac21627b8 <col:21> Inherited Implicit
|-TypedefDecl 0x16ac21627f8 prev 0x16ac07d88d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x16ac07d7e00 'unsigned long long'
|-TypedefDecl 0x16ac21628a0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x16ac2162870 'size_t' sugar
|   |-Typedef 0x16ac21627f8 'size_t'
|   `-BuiltinType 0x16ac07d7e00 'unsigned long long'
|-TypedefDecl 0x16ac2162910 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x16ac07d7d60 'long long'
|-TypedefDecl 0x16ac2162980 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x16ac07d7d60 'long long'
|-TypedefDecl 0x16ac21629f0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x16ac07d7da0 'unsigned short'
|-TypedefDecl 0x16ac2162a60 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x16ac07d7da0 'unsigned short'
|-TypedefDecl 0x16ac2162ad0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x16ac07d7da0 'unsigned short'
|-TypedefDecl 0x16ac2162b40 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x16ac07d7d20 'int'
|-TypedefDecl 0x16ac2162bb0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x16ac07d7d40 'long'
|-TypedefDecl 0x16ac2162c20 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x16ac07d7d60 'long long'
|-TypedefDecl 0x16ac2162cb0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x16ac2162c80 '__time64_t' sugar
|   |-Typedef 0x16ac2162c20 '__time64_t'
|   `-BuiltinType 0x16ac07d7d60 'long long'
|-FunctionDecl 0x16ac2162e28 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x16ac2163048 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x16ac216e6c0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x16ac2163188 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x16ac2163200 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x16ac2163278 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x16ac21632f8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x16ac216e460 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x16ac216e7a0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x16ac216e860 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x16ac216e9d0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x16ac216e980 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x16ac216e920 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x16ac216e840 'struct threadlocaleinfostruct'
|       `-Record 0x16ac21784d0 'threadlocaleinfostruct'
|-TypedefDecl 0x16ac216eae0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x16ac216ea90 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x16ac216ea30 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x16ac216e900 'struct threadmbcinfostruct'
|       `-Record 0x16ac216e860 'threadmbcinfostruct'
|-RecordDecl 0x16ac216eb38 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x16ac216ebf0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x16ac216ecb0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x16ac216ed40 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x16ac216edd0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x16ac216ee88 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x16ac216ee30 'struct localeinfo_struct' sugar
|   `-RecordType 0x16ac216ec90 'struct localeinfo_struct'
|     `-Record 0x16ac216ebf0 'localeinfo_struct'
|-TypedefDecl 0x16ac216ef60 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x16ac216ef10 'struct localeinfo_struct *'
|   `-ElaboratedType 0x16ac216ee30 'struct localeinfo_struct' sugar
|     `-RecordType 0x16ac216ec90 'struct localeinfo_struct'
|       `-Record 0x16ac216ebf0 'localeinfo_struct'
|-RecordDecl 0x16ac216efd8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x16ac216f090 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x16ac216f108 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x16ac216f1c8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x16ac216f260 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x16ac216f2d0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x16ac216f388 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x16ac216f330 'struct localerefcount' sugar
|   `-RecordType 0x16ac216f070 'struct localerefcount'
|     `-Record 0x16ac216efd8 'localerefcount'
|-RecordDecl 0x16ac21784d0 prev 0x16ac216e7a0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x16ac2178550 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x16ac21785c8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x16ac2178638 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x16ac21786a8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x16ac2178718 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x16ac21788d8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x16ac2178948 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x16ac21789b8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x16ac2178a28 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x16ac2178a98 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x16ac2178b08 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x16ac2178b60 parent 0x16ac07d7c28 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x16ac2178cf0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x16ac2178d60 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x16ac2178dd0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x16ac2178e40 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x16ac2178eb0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x16ac2178f20 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x16ac2179030 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x16ac2179168 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x16ac2179218 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x16ac21791c0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x16ac216e840 'struct threadlocaleinfostruct'
|     `-Record 0x16ac21784d0 'threadlocaleinfostruct'
|-FunctionDecl 0x16ac2175630 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x16ac21792a0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x16ac2179350 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x16ac21793d0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x16ac2179448 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21759f8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x16ac2175a98 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x16ac2175b00 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x16ac2175b68 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac2175be8 prev 0x16ac21759f8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x16ac2175720 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x16ac21757a0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x16ac2175818 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac2175fa8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x16ac2175cd0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x16ac2175d50 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x16ac2175dc8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac2173480 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac2176090 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x16ac2176110 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x16ac2176188 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac2176220 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac2173788 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x16ac2173828 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x16ac2173890 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x16ac21738f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac2173978 prev 0x16ac2173788 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x16ac2173570 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x16ac21735f0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x16ac2173668 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac2173d38 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x16ac2173dd8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16ac2173e40 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x16ac2173ea8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac2173f28 prev 0x16ac2173d38 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x16ac2173a60 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x16ac2173ae0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x16ac2173b58 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21743c8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x16ac2174038 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x16ac21740d0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16ac2174150 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x16ac21741c8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16ac217b828 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x16ac217b8c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16ac217b930 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x16ac217b998 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac217ba18 prev 0x16ac217b828 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x16ac217b550 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x16ac217b5d0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x16ac217b648 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac217be98 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x16ac217bf38 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16ac217bfa0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x16ac217c008 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x16ac217c070 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac217c0f8 prev 0x16ac217be98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x16ac217bbe0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x16ac217bc60 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x16ac217bce0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x16ac217bd58 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac217c1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x16ac2174530 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x16ac217c380 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x16ac217c400 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x16ac217c478 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21745e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x16ac21749e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x16ac2174710 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x16ac2174788 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac2174808 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x16ac2174db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x16ac2174bc0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x16ac2174c40 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x16ac2174e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac2175270 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x16ac2174fa8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x16ac2175020 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21750a0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x16ac21796d0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x16ac2179770 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x16ac21797d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16ac2179850 prev 0x16ac21796d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x16ac21794e0 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x16ac2179560 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x16ac2179900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac2179c58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x16ac2179a48 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x16ac2179ac0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16ac2179b40 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x16ac2179f80 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x16ac217a020 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x16ac217a088 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16ac217a100 prev 0x16ac2179f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x16ac2179e00 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x16ac2179e80 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x16ac217a1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac217c510 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x16ac217c5b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac217c618 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16ac217c690 prev 0x16ac217c510 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x16ac217a2f8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x16ac217a378 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x16ac217c8e0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x16ac217c980 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16ac217c9f0 prev 0x16ac217c8e0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x16ac217c770 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x16ac217cce8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x16ac217cac8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x16ac217cb40 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac217cf38 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x16ac217cdc8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x16ac217ce40 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x16ac217d268 <line:131:1, line:133:1>
|   `-ReturnStmt 0x16ac217d258 <line:132:5, col:51>
|     `-ConditionalOperator 0x16ac217d228 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x16ac217d098 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x16ac217d078 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x16ac217d048 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x16ac217d000 <col:13> 'const char *' lvalue ParmVar 0x16ac217cdc8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x16ac217d060 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x16ac217d020 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x16ac217d210 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x16ac217d0b8 <col:24> 'int' 0
|       `-CallExpr 0x16ac217d1b0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x16ac217d198 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x16ac217d0e0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x16ac217cce8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x16ac217d1e0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x16ac217d100 <col:36> 'const char *' lvalue ParmVar 0x16ac217cdc8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x16ac217d1f8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x16ac217d120 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac217ce40 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac217d568 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x16ac217d298 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x16ac217d310 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16ac217d390 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x16ac217d408 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16ac217d870 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x16ac217d910 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16ac217d978 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x16ac217d9e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac217da60 prev 0x16ac217d870 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x16ac217d658 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x16ac217d6d8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x16ac217d750 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac217dc98 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x16ac217db48 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x16ac217df60 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x16ac217e000 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac217e068 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x16ac217e0e0 prev 0x16ac217df60 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x16ac217dd70 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x16ac217ddf0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x16ac217e340 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16ac217e1c0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x16ac217e240 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x16ac217e5b0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16ac217e420 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x16ac217e4a0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x16ac217e968 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x16ac217e690 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x16ac217e710 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x16ac217e788 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac217ebd0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16ac217ea50 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x16ac217ead0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x16ac217eec8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x16ac217ecb0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x16ac217ed30 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x16ac217eda8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac217f130 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16ac217efb0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x16ac217f030 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x16ac217f428 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x16ac217f210 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x16ac217f290 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x16ac217f308 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac213daa8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16ac213d7d0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16ac213d850 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x16ac213d8c8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac213df10 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac213db90 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16ac213dc10 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x16ac213dc88 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac213dd00 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac213e218 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16ac213e000 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16ac213e080 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x16ac213e0f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac213e5b0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac213e300 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x16ac213e380 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x16ac213e3f8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac213e470 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21d60a8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x16ac21d6148 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac21d61b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16ac21d6228 prev 0x16ac21d60a8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x16ac213e6a0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x16ac213e720 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x16ac21d64e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x16ac21d6400 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x16ac21d6588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21d6960 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x16ac21d66d0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x16ac21d6748 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21d67c8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x16ac21d6c78 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x16ac21d6d18 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x16ac21d6d88 prev 0x16ac21d6c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x16ac21d6b40 <col:90> col:93 'int'
| `-DeprecatedAttr 0x16ac21d6e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21d71c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x16ac21d6fb0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x16ac21d7028 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21d70a8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x16ac21d74c8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x16ac21d72a8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x16ac21d7320 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21d77b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16ac21d7668 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x16ac21d7860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21d7c70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac21d79a8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x16ac21d7a20 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21d7a98 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21d4020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x16ac21d7e18 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x16ac21d7e90 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16ac21d40d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21d4588 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x16ac21d4218 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x16ac21d4290 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16ac21d4310 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x16ac21d4388 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16ac21d4a08 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16ac21d4aa8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x16ac21d4b10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac21d4b78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac21d4bf8 prev 0x16ac21d4a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16ac21d4738 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x16ac21d47b8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x16ac21d4830 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21d4cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21d8060 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16ac21d8100 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x16ac21d8168 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac21d81d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac21d8250 prev 0x16ac21d8060 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16ac21d4df8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x16ac21d4e78 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x16ac21d4ef0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21d8550 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16ac21d8338 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x16ac21d83b8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x16ac21d8430 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21d88e8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac21d8638 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16ac21d86b8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x16ac21d8730 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21d87a8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21d8c80 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x16ac21d89d8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x16ac21d8a50 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16ac21d8ad0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x16ac21d8b48 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16ac21d5018 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16ac21d50b8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x16ac21d5120 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac21d5188 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac21d5208 prev 0x16ac21d5018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16ac21d8e30 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x16ac21d8eb0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x16ac21d8f28 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21d52c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21d5778 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x16ac21d5408 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x16ac21d5480 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x16ac21d5500 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x16ac21d5578 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21d5bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x16ac21d5928 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x16ac21d59a8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x16ac21d5a20 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21d5cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21d9040 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x16ac21d90e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac21d9148 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16ac21d91c0 prev 0x16ac21d9040 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x16ac21d5df8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x16ac21d5e78 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x16ac21d9420 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x16ac21d94c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac21d9528 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x16ac21d95a0 prev 0x16ac21d9420 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x16ac21d92a0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x16ac21d9320 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x16ac21d9760 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x16ac21d9680 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x16ac21d99b0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x16ac21d9a50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac21d9ab8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16ac21d9b30 prev 0x16ac21d99b0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x16ac21d9838 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x16ac21d98b8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x16ac21d9d90 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x16ac21d9e30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac21d9e98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16ac21d9f10 prev 0x16ac21d9d90 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x16ac21d9c10 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x16ac21d9c90 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x16ac21d21d0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x16ac21d2270 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x16ac21d22d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16ac21d2350 prev 0x16ac21d21d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x16ac21d2050 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x16ac21d20d0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x16ac21d2400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21d27e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x16ac21d2548 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x16ac21d25c8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x16ac21d2648 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x16ac21d2a40 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x16ac21d28d0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x16ac21d2948 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21d2cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16ac21d2be0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x16ac21d2d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21da170 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac21d2eb0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x16ac21d9fe0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21da058 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21da490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x16ac21da318 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x16ac21da390 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16ac21da540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21da950 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16ac21da9f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x16ac21daa58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16ac21daac0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac21dab40 prev 0x16ac21da950 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16ac21da688 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x16ac21da708 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x16ac21da780 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21d2f70 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac21dac28 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x16ac21daca8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x16ac21dad20 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21dad98 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21d3220 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x16ac21d32c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16ac21d3330 prev 0x16ac21d3220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x16ac21d3140 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x16ac21d33d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x16ac21d3720 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16ac21d35a0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x16ac21d3620 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x16ac21d37d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x16ac21d3b18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16ac21d3998 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x16ac21d3a18 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x16ac21d3bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x16ac21d3e70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16ac21d3d90 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x16ac21d3f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x16ac21e1428 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16ac21e1210 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x16ac21e1290 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x16ac21e1308 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21e14e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x16ac21e18c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x16ac21e16a8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x16ac21e1728 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x16ac21e17a0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21e1978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x16ac21e1c20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16ac21e1b40 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x16ac21e1cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x16ac21dc000 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x16ac21e1e90 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x16ac21e1f10 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x16ac21dc0b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x16ac21dc358 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16ac21dc278 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x16ac21dc400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x16ac21dc690 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x16ac21dc520 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x16ac21dca20 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x16ac21dc760 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16ac21dc7d8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21dc850 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x16ac21dcdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21dcbc0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16ac21dcc38 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x16ac21dce88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21e2278 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x16ac21e2318 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x16ac21e2380 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x16ac21e23f8 prev 0x16ac21e2278 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x16ac21e2060 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16ac21e20d8 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x16ac21e26f0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x16ac21e2790 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x16ac21e27f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x16ac21e2870 prev 0x16ac21e26f0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x16ac21e24d0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16ac21e2548 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x16ac21e2b50 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x16ac21e2948 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16ac21e29c0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21e2a38 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x16ac21e2e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21e2cf0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16ac21e2d68 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x16ac21e2f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21dd228 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21dd010 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16ac21dd088 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x16ac21dd470 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x16ac21dd510 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x16ac21dd580 prev 0x16ac21dd470 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x16ac21dd300 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x16ac21dd868 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x16ac21dd650 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16ac21dd6c8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21ddab0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x16ac21dd940 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x16ac21dd9b8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x16ac21dde48 <line:306:1, line:308:1>
|   `-ReturnStmt 0x16ac21dde38 <line:307:5, col:56>
|     `-ConditionalOperator 0x16ac21dde08 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x16ac21ddc70 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x16ac21ddc50 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x16ac21ddc20 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x16ac21ddb78 <col:13> 'const wchar_t *' lvalue ParmVar 0x16ac21dd940 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x16ac21ddc38 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x16ac21ddc00 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x16ac21ddbd8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x16ac21ddb98 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x16ac21dddf0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x16ac21ddc90 <col:29> 'int' 0
|       `-CallExpr 0x16ac21ddd90 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x16ac21ddd78 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x16ac21ddcb8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x16ac21dd868 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x16ac21dddc0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x16ac21ddcd8 <col:41> 'const wchar_t *' lvalue ParmVar 0x16ac21dd940 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x16ac21dddd8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x16ac21ddcf8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21dd9b8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21df238 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x16ac21dde70 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16ac21ddee8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16ac21ddf60 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16ac21df030 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16ac21df6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16ac21df3e0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16ac21df458 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x16ac21df4d0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21df758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21dfb68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x16ac21dfc08 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x16ac21dfc70 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x16ac21dfcd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16ac21dfd58 prev 0x16ac21dfb68 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x16ac21df898 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21df910 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16ac21df988 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21db0a8 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x16ac21dfe38 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16ac21dfeb0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16ac21dff28 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16ac21dffa0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16ac21db458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16ac21db250 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16ac21db2c8 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x16ac21db340 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21db510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21db868 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21db650 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16ac21db6c8 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x16ac21dbab0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x16ac21db940 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16ac21db9b8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x16ac21dbcf8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21dbb88 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16ac21dbc00 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x16ac21dbf40 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21dbdd0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16ac21dbe48 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x16ac21de278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21de108 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x16ac21de180 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x16ac21de328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21de790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x16ac21de468 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x16ac21de4e0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x16ac21de5c0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x16ac21deab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x16ac21de938 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x16ac21deb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21def60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x16ac21dec98 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x16ac21ded10 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21ded90 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x16ac21e72b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x16ac21e71d8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x16ac21e7358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21e7720 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x16ac21e7498 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x16ac21e7510 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21e7588 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x16ac21e7978 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21e7800 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16ac21e7878 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x16ac21e7d18 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16ac21e7a50 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e7ac8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16ac21e7b40 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21e8008 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16ac21e7df8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e7e70 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16ac21e7ee8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21e03f0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac21e0080 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e00f8 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e0170 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21e01e8 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21e0848 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x16ac21e04d8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16ac21e0550 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x16ac21e05c8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x16ac21e0640 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21e0cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x16ac21e09f0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x16ac21e0a68 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x16ac21e0ae0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21e0d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21e4080 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x16ac21e0ea8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x16ac21e4410 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x16ac21e4150 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16ac21e41c8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21e4240 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x16ac21e47c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x16ac21e45b0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x16ac21e4628 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x16ac21e4878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21e4bd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x16ac21e49b8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x16ac21e4a30 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21e4e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16ac21e4d70 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x16ac21e4ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21e8380 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac21e80c0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x16ac21e8138 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21e81b0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21e8738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16ac21e8520 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x16ac21e8598 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16ac21e87e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21e8a98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x16ac21e8928 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x16ac21e89a0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21e8d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16ac21e8c30 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x16ac21e8db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21ec140 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac21e8ef0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x16ac21e8f68 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21e8fe0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21ec450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16ac21ec2e0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x16ac21ec358 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16ac21ec500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16ac21ec900 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16ac21ec640 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16ac21ec6b8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16ac21ec730 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21ecd48 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac21ec9e0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16ac21eca58 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x16ac21ecad0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21ecb48 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21ecfa8 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21ece30 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16ac21ecea8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x16ac21e5228 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16ac21ed080 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e5090 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16ac21e5108 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21e5480 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21e5308 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16ac21e5380 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x16ac21e5768 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16ac21e5558 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e55d0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16ac21e5648 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21e5a58 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16ac21e5848 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e58c0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16ac21e5938 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21e5de0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac21e5b38 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e5bb0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e5c28 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21e5ca0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21e9118 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16ac21e5ec8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e5f40 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16ac21e5fb8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16ac21e94a0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16ac21e91f8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e9270 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e92e8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16ac21e9360 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16ac21e9700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x16ac21e9628 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x16ac21e97a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x16ac21e9ae0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21e9968 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e99e0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x16ac21e9b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x16ac21e9f60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16ac21e9d50 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e9dc8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e9e40 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21ea018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x16ac21ed490 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x16ac21ed288 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x16ac21ed300 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x16ac21ed378 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16ac21ed548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x16ac21ed7e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16ac21ed708 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x16ac21ed888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x16ac21edbb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x16ac21eda48 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x16ac21edac0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x16ac21edc68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x16ac21edf00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16ac21ede28 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x16ac21edfa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x16ac21e6228 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16ac21e6150 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x16ac21e62d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x16ac21e6608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16ac21e6490 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16ac21e6508 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x16ac21e66b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x16ac21e6db8 <.//openssl//file_jk/after\crypto\modes\cfb128.c:19:1, line:131:1> line:19:6 invalid CRYPTO_cfb128_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
| |-ParmVarDecl 0x16ac21e67e0 <col:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x16ac21e6890 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x16ac21e6908 <line:20:28, col:35> col:35 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x16ac21e6988 <col:40, col:52> col:52 used key 'const void *'
| |-ParmVarDecl 0x16ac21e6a90 <line:21:28, col:49> col:42 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x16ac21e6b10 <col:52, col:57> col:57 used num 'int *'
| |-ParmVarDecl 0x16ac21e6b90 <line:22:28, col:32> col:32 used enc 'int'
| |-ParmVarDecl 0x16ac21e6c10 <col:37, col:48> col:48 invalid block 'int'
| `-CompoundStmt 0x16ac21eff30 <line:23:1, line:131:1>
|   |-DeclStmt 0x16ac21e6f30 <line:24:5, col:19>
|   | `-VarDecl 0x16ac21e6ec8 <col:5, col:18> col:18 used n 'unsigned int'
|   |-DeclStmt 0x16ac21e7000 <line:25:5, col:17>
|   | `-VarDecl 0x16ac21e6f58 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x16ac21e6fe8 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x16ac21e6fc0 <col:16> 'int' 0
|   |-BinaryOperator 0x16ac21ee198 <line:27:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x16ac21e7018 <col:5> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x16ac21ee180 <col:9, col:10> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x16ac21ee168 <col:9, col:10> 'int' <LValueToRValue>
|   |     `-UnaryOperator 0x16ac21ee150 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x16ac21ee138 <col:10> 'int *' <LValueToRValue>
|   |         `-DeclRefExpr 0x16ac21e7078 <col:10> 'int *' lvalue ParmVar 0x16ac21e6b10 'num' 'int *'
|   `-IfStmt 0x16ac21eff08 <line:29:5, line:130:5> has_else
|     |-ImplicitCastExpr 0x16ac21ee1f0 <line:29:9> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x16ac21ee1b8 <col:9> 'int' lvalue ParmVar 0x16ac21e6b90 'enc' 'int'
|     |-CompoundStmt 0x16ac21eabd8 <col:14, line:76:5>
|     | |-IfStmt 0x16ac21ea530 <line:31:9, line:64:9>
|     | | |-BinaryOperator 0x16ac21ee2d8 <line:31:13, col:36> 'int' '=='
|     | | | |-BinaryOperator 0x16ac21ee278 <col:13, col:31> 'unsigned long long' '%'
|     | | | | |-ImplicitCastExpr 0x16ac21ee260 <col:13> 'unsigned long long' <IntegralCast>
|     | | | | | `-IntegerLiteral 0x16ac21ee208 <col:13> 'int' 16
|     | | | | `-UnaryExprOrTypeTraitExpr 0x16ac21ee240 <col:18, col:31> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x16ac21ee2c0 <col:36> 'unsigned long long' <IntegralCast>
|     | | |   `-IntegerLiteral 0x16ac21ee298 <col:36> 'int' 0
|     | | `-CompoundStmt 0x16ac21ea518 <col:39, line:64:9>
|     | |   `-DoStmt 0x16ac21ea4f8 <line:32:13, line:63:23>
|     | |     |-CompoundStmt 0x16ac21ea498 <line:32:16, line:63:13>
|     | |     | |-WhileStmt 0x16ac21ee790 <line:33:17, line:37:17>
|     | |     | | |-BinaryOperator 0x16ac21ee380 <line:33:24, col:29> 'int' '&&'
|     | |     | | | |-ImplicitCastExpr 0x16ac21ee350 <col:24> 'unsigned int' <LValueToRValue>
|     | |     | | | | `-DeclRefExpr 0x16ac21ee2f8 <col:24> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | | | `-ImplicitCastExpr 0x16ac21ee368 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | |   `-DeclRefExpr 0x16ac21ee318 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|     | |     | | `-CompoundStmt 0x16ac21ee768 <col:34, line:37:17>
|     | |     | |   |-BinaryOperator 0x16ac21ee5b8 <line:34:21, col:49> 'unsigned char' '='
|     | |     | |   | |-UnaryOperator 0x16ac21ee410 <col:21, col:28> 'unsigned char' lvalue prefix '*' cannot overflow
|     | |     | |   | | `-ParenExpr 0x16ac21ee3f0 <col:22, col:28> 'unsigned char *'
|     | |     | |   | |   `-UnaryOperator 0x16ac21ee3d8 <col:23, col:26> 'unsigned char *' postfix '++'
|     | |     | |   | |     `-DeclRefExpr 0x16ac21ee3a0 <col:23> 'unsigned char *' lvalue ParmVar 0x16ac21e6890 'out' 'unsigned char *'
|     | |     | |   | `-CompoundAssignOperator 0x16ac21ee588 <col:32, col:49> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |     | |   |   |-ArraySubscriptExpr 0x16ac21ee4b0 <col:32, col:38> 'unsigned char' lvalue
|     | |     | |   |   | |-ImplicitCastExpr 0x16ac21ee480 <col:32> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |   |   | | `-DeclRefExpr 0x16ac21ee428 <col:32> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |   |   | `-ImplicitCastExpr 0x16ac21ee498 <col:37> 'unsigned int' <LValueToRValue>
|     | |     | |   |   |   `-DeclRefExpr 0x16ac21ee460 <col:37> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |   |   `-ImplicitCastExpr 0x16ac21ee570 <col:43, col:49> 'int' <IntegralCast>
|     | |     | |   |     `-ImplicitCastExpr 0x16ac21ee558 <col:43, col:49> 'unsigned char' <LValueToRValue>
|     | |     | |   |       `-UnaryOperator 0x16ac21ee540 <col:43, col:49> 'const unsigned char' lvalue prefix '*' cannot overflow
|     | |     | |   |         `-ParenExpr 0x16ac21ee520 <col:44, col:49> 'const unsigned char *'
|     | |     | |   |           `-UnaryOperator 0x16ac21ee508 <col:45, col:47> 'const unsigned char *' postfix '++'
|     | |     | |   |             `-DeclRefExpr 0x16ac21ee4d0 <col:45> 'const unsigned char *' lvalue ParmVar 0x16ac21e67e0 'in' 'const unsigned char *'
|     | |     | |   |-UnaryOperator 0x16ac21ee5f8 <line:35:21, col:23> 'size_t':'unsigned long long' prefix '--'
|     | |     | |   | `-DeclRefExpr 0x16ac21ee5d8 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|     | |     | |   `-BinaryOperator 0x16ac21ee748 <line:36:21, col:35> 'unsigned int' '='
|     | |     | |     |-DeclRefExpr 0x16ac21ee610 <col:21> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |     `-BinaryOperator 0x16ac21ee728 <col:25, col:35> 'unsigned int' '%'
|     | |     | |       |-ParenExpr 0x16ac21ee6c8 <col:25, col:31> 'unsigned int'
|     | |     | |       | `-BinaryOperator 0x16ac21ee6a8 <col:26, col:30> 'unsigned int' '+'
|     | |     | |       |   |-ImplicitCastExpr 0x16ac21ee678 <col:26> 'unsigned int' <LValueToRValue>
|     | |     | |       |   | `-DeclRefExpr 0x16ac21ee630 <col:26> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |       |   `-ImplicitCastExpr 0x16ac21ee690 <col:30> 'unsigned int' <IntegralCast>
|     | |     | |       |     `-IntegerLiteral 0x16ac21ee650 <col:30> 'int' 1
|     | |     | |       `-ImplicitCastExpr 0x16ac21ee710 <col:35> 'unsigned int' <IntegralCast>
|     | |     | |         `-IntegerLiteral 0x16ac21ee6e8 <col:35> 'int' 16
|     | |     | |-WhileStmt 0x16ac21ef048 <line:43:17, line:53:17>
|     | |     | | |-BinaryOperator 0x16ac21ee820 <line:43:24, col:31> 'int' '>='
|     | |     | | | |-ImplicitCastExpr 0x16ac21ee7f0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | | | `-DeclRefExpr 0x16ac21ee7a8 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|     | |     | | | `-ImplicitCastExpr 0x16ac21ee808 <col:31> 'unsigned long long' <IntegralCast>
|     | |     | | |   `-IntegerLiteral 0x16ac21ee7c8 <col:31> 'int' 16
|     | |     | | `-CompoundStmt 0x16ac21ef010 <col:35, line:53:17>
|     | |     | |   |-ForStmt 0x16ac21eedd8 <line:45:21, line:48:21>
|     | |     | |   | |-<<<NULL>>>
|     | |     | |   | |-<<<NULL>>>
|     | |     | |   | |-BinaryOperator 0x16ac21ee930 <line:45:28, col:32> 'int' '<'
|     | |     | |   | | |-ImplicitCastExpr 0x16ac21ee900 <col:28> 'unsigned int' <LValueToRValue>
|     | |     | |   | | | `-DeclRefExpr 0x16ac21ee8b8 <col:28> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |   | | `-ImplicitCastExpr 0x16ac21ee918 <col:32> 'unsigned int' <IntegralCast>
|     | |     | |   | |   `-IntegerLiteral 0x16ac21ee8d8 <col:32> 'int' 16
|     | |     | |   | |-CompoundAssignOperator 0x16ac21ee9a0 <col:36, col:54> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   | | |-DeclRefExpr 0x16ac21ee950 <col:36> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |   | | `-UnaryExprOrTypeTraitExpr 0x16ac21ee980 <col:41, col:54> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     | |     | |   | `-CompoundStmt 0x16ac21eedc0 <col:57, line:48:21>
|     | |     | |   |   `-BinaryOperator 0x16ac21eeda0 <line:46:25, line:47:72> 'size_t':'unsigned long long' '='
|     | |     | |   |     |-UnaryOperator 0x16ac21eeb00 <line:46:25, col:44> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |     | `-CStyleCastExpr 0x16ac21eead8 <col:26, col:44> 'size_t *' <BitCast>
|     | |     | |   |     |   `-ParenExpr 0x16ac21eeab8 <col:36, col:44> 'unsigned char *'
|     | |     | |   |     |     `-BinaryOperator 0x16ac21eea40 <col:37, col:43> 'unsigned char *' '+'
|     | |     | |   |     |       |-ImplicitCastExpr 0x16ac21eea10 <col:37> 'unsigned char *' <LValueToRValue>
|     | |     | |   |     |       | `-DeclRefExpr 0x16ac21ee9d0 <col:37> 'unsigned char *' lvalue ParmVar 0x16ac21e6890 'out' 'unsigned char *'
|     | |     | |   |     |       `-ImplicitCastExpr 0x16ac21eea28 <col:43> 'unsigned int' <LValueToRValue>
|     | |     | |   |     |         `-DeclRefExpr 0x16ac21ee9f0 <col:43> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |   |     `-CompoundAssignOperator 0x16ac21eed70 <line:47:29, col:72> 'size_t':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   |       |-UnaryOperator 0x16ac21eec20 <col:29, col:49> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |       | `-CStyleCastExpr 0x16ac21eebf8 <col:30, col:49> 'size_t *' <BitCast>
|     | |     | |   |       |   `-ParenExpr 0x16ac21eebd8 <col:40, col:49> 'unsigned char *':'unsigned char *'
|     | |     | |   |       |     `-BinaryOperator 0x16ac21eeb88 <col:41, col:48> 'unsigned char *':'unsigned char *' '+'
|     | |     | |   |       |       |-ImplicitCastExpr 0x16ac21eeb58 <col:41> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |   |       |       | `-DeclRefExpr 0x16ac21eeb18 <col:41> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |   |       |       `-ImplicitCastExpr 0x16ac21eeb70 <col:48> 'unsigned int' <LValueToRValue>
|     | |     | |   |       |         `-DeclRefExpr 0x16ac21eeb38 <col:48> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |   |       `-ImplicitCastExpr 0x16ac21eed58 <col:54, col:72> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | |   |         `-UnaryOperator 0x16ac21eed40 <col:54, col:72> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|     | |     | |   |           `-CStyleCastExpr 0x16ac21eed18 <col:55, col:72> 'size_t *' <BitCast>
|     | |     | |   |             `-ParenExpr 0x16ac21eecf8 <col:65, col:72> 'const unsigned char *'
|     | |     | |   |               `-BinaryOperator 0x16ac21eeca8 <col:66, col:71> 'const unsigned char *' '+'
|     | |     | |   |                 |-ImplicitCastExpr 0x16ac21eec78 <col:66> 'const unsigned char *' <LValueToRValue>
|     | |     | |   |                 | `-DeclRefExpr 0x16ac21eec38 <col:66> 'const unsigned char *' lvalue ParmVar 0x16ac21e67e0 'in' 'const unsigned char *'
|     | |     | |   |                 `-ImplicitCastExpr 0x16ac21eec90 <col:71> 'unsigned int' <LValueToRValue>
|     | |     | |   |                   `-DeclRefExpr 0x16ac21eec58 <col:71> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |   |-CompoundAssignOperator 0x16ac21eee70 <line:49:21, col:28> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     | |   | |-DeclRefExpr 0x16ac21eee10 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|     | |     | |   | `-ImplicitCastExpr 0x16ac21eee58 <col:28> 'unsigned long long' <IntegralCast>
|     | |     | |   |   `-IntegerLiteral 0x16ac21eee30 <col:28> 'int' 16
|     | |     | |   |-CompoundAssignOperator 0x16ac21eeee8 <line:50:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|     | |     | |   | |-DeclRefExpr 0x16ac21eeea0 <col:21> 'unsigned char *' lvalue ParmVar 0x16ac21e6890 'out' 'unsigned char *'
|     | |     | |   | `-IntegerLiteral 0x16ac21eeec0 <col:28> 'int' 16
|     | |     | |   |-CompoundAssignOperator 0x16ac21eef60 <line:51:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|     | |     | |   | |-DeclRefExpr 0x16ac21eef18 <col:21> 'const unsigned char *' lvalue ParmVar 0x16ac21e67e0 'in' 'const unsigned char *'
|     | |     | |   | `-IntegerLiteral 0x16ac21eef38 <col:27> 'int' 16
|     | |     | |   `-BinaryOperator 0x16ac21eeff0 <line:52:21, col:25> 'unsigned int' '='
|     | |     | |     |-DeclRefExpr 0x16ac21eef90 <col:21> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |     `-ImplicitCastExpr 0x16ac21eefd8 <col:25> 'unsigned int' <IntegralCast>
|     | |     | |       `-IntegerLiteral 0x16ac21eefb0 <col:25> 'int' 0
|     | |     | |-IfStmt 0x16ac21ea3b0 <line:54:17, line:60:17>
|     | |     | | |-ImplicitCastExpr 0x16ac21ef080 <line:54:21> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     | | | `-DeclRefExpr 0x16ac21ef060 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|     | |     | | `-CompoundStmt 0x16ac21ea398 <col:26, line:60:17>
|     | |     | |   `-WhileStmt 0x16ac21ea380 <line:56:21, line:59:21>
|     | |     | |     |-UnaryOperator 0x16ac21ea0e0 <line:56:28, col:31> 'size_t':'unsigned long long' postfix '--'
|     | |     | |     | `-DeclRefExpr 0x16ac21ef0f8 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|     | |     | |     `-CompoundStmt 0x16ac21ea360 <col:35, line:59:21>
|     | |     | |       |-BinaryOperator 0x16ac21ea308 <line:57:25, col:49> 'unsigned char' '='
|     | |     | |       | |-ArraySubscriptExpr 0x16ac21ea168 <col:25, col:30> 'unsigned char' lvalue
|     | |     | |       | | |-ImplicitCastExpr 0x16ac21ea138 <col:25> 'unsigned char *' <LValueToRValue>
|     | |     | |       | | | `-DeclRefExpr 0x16ac21ea0f8 <col:25> 'unsigned char *' lvalue ParmVar 0x16ac21e6890 'out' 'unsigned char *'
|     | |     | |       | | `-ImplicitCastExpr 0x16ac21ea150 <col:29> 'unsigned int' <LValueToRValue>
|     | |     | |       | |   `-DeclRefExpr 0x16ac21ea118 <col:29> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |       | `-CompoundAssignOperator 0x16ac21ea2d8 <col:34, col:49> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |     | |       |   |-ArraySubscriptExpr 0x16ac21ea1f8 <col:34, col:40> 'unsigned char' lvalue
|     | |     | |       |   | |-ImplicitCastExpr 0x16ac21ea1c8 <col:34> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |     | |       |   | | `-DeclRefExpr 0x16ac21ea188 <col:34> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|     | |     | |       |   | `-ImplicitCastExpr 0x16ac21ea1e0 <col:39> 'unsigned int' <LValueToRValue>
|     | |     | |       |   |   `-DeclRefExpr 0x16ac21ea1a8 <col:39> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |       |   `-ImplicitCastExpr 0x16ac21ea2c0 <col:45, col:49> 'int' <IntegralCast>
|     | |     | |       |     `-ImplicitCastExpr 0x16ac21ea2a8 <col:45, col:49> 'unsigned char' <LValueToRValue>
|     | |     | |       |       `-ArraySubscriptExpr 0x16ac21ea288 <col:45, col:49> 'const unsigned char' lvalue
|     | |     | |       |         |-ImplicitCastExpr 0x16ac21ea258 <col:45> 'const unsigned char *' <LValueToRValue>
|     | |     | |       |         | `-DeclRefExpr 0x16ac21ea218 <col:45> 'const unsigned char *' lvalue ParmVar 0x16ac21e67e0 'in' 'const unsigned char *'
|     | |     | |       |         `-ImplicitCastExpr 0x16ac21ea270 <col:48> 'unsigned int' <LValueToRValue>
|     | |     | |       |           `-DeclRefExpr 0x16ac21ea238 <col:48> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |       `-UnaryOperator 0x16ac21ea348 <line:58:25, col:27> 'unsigned int' prefix '++'
|     | |     | |         `-DeclRefExpr 0x16ac21ea328 <col:27> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | |-BinaryOperator 0x16ac21ea468 <line:61:17, col:24> 'int' '='
|     | |     | | |-UnaryOperator 0x16ac21ea400 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|     | |     | | | `-ImplicitCastExpr 0x16ac21ea3e8 <col:18> 'int *' <LValueToRValue>
|     | |     | | |   `-DeclRefExpr 0x16ac21ea3c8 <col:18> 'int *' lvalue ParmVar 0x16ac21e6b10 'num' 'int *'
|     | |     | | `-ImplicitCastExpr 0x16ac21ea450 <col:24> 'int' <IntegralCast>
|     | |     | |   `-ImplicitCastExpr 0x16ac21ea438 <col:24> 'unsigned int' <LValueToRValue>
|     | |     | |     `-DeclRefExpr 0x16ac21ea418 <col:24> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     | `-ReturnStmt 0x16ac21ea488 <line:62:17>
|     | |     `-IntegerLiteral 0x16ac21ea4d0 <line:63:22> 'int' 0
|     | |-WhileStmt 0x16ac21eab00 <line:67:9, line:74:9>
|     | | |-BinaryOperator 0x16ac21ea5d0 <line:67:16, col:20> 'int' '<'
|     | | | |-ImplicitCastExpr 0x16ac21ea5a0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x16ac21ea548 <col:16> 'size_t':'unsigned long long' lvalue Var 0x16ac21e6f58 'l' 'size_t':'unsigned long long'
|     | | | `-ImplicitCastExpr 0x16ac21ea5b8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x16ac21ea580 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|     | | `-CompoundStmt 0x16ac21eaad0 <col:25, line:74:9>
|     | |   |-IfStmt 0x16ac21ea6f8 <line:68:13, line:70:13>
|     | |   | |-BinaryOperator 0x16ac21ea668 <line:68:17, col:22> 'int' '=='
|     | |   | | |-ImplicitCastExpr 0x16ac21ea638 <col:17> 'unsigned int' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x16ac21ea5f0 <col:17> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |   | | `-ImplicitCastExpr 0x16ac21ea650 <col:22> 'unsigned int' <IntegralCast>
|     | |   | |   `-IntegerLiteral 0x16ac21ea610 <col:22> 'int' 0
|     | |   | `-CompoundStmt 0x16ac21ea6e8 <col:25, line:70:13>
|     | |   |-BinaryOperator 0x16ac21ea920 <line:71:13, col:37> 'unsigned char' '='
|     | |   | |-ArraySubscriptExpr 0x16ac21ea780 <col:13, col:18> 'unsigned char' lvalue
|     | |   | | |-ImplicitCastExpr 0x16ac21ea750 <col:13> 'unsigned char *' <LValueToRValue>
|     | |   | | | `-DeclRefExpr 0x16ac21ea710 <col:13> 'unsigned char *' lvalue ParmVar 0x16ac21e6890 'out' 'unsigned char *'
|     | |   | | `-ImplicitCastExpr 0x16ac21ea768 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |   `-DeclRefExpr 0x16ac21ea730 <col:17> 'size_t':'unsigned long long' lvalue Var 0x16ac21e6f58 'l' 'size_t':'unsigned long long'
|     | |   | `-CompoundAssignOperator 0x16ac21ea8f0 <col:22, col:37> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|     | |   |   |-ArraySubscriptExpr 0x16ac21ea810 <col:22, col:28> 'unsigned char' lvalue
|     | |   |   | |-ImplicitCastExpr 0x16ac21ea7e0 <col:22> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |   |   | | `-DeclRefExpr 0x16ac21ea7a0 <col:22> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|     | |   |   | `-ImplicitCastExpr 0x16ac21ea7f8 <col:27> 'unsigned int' <LValueToRValue>
|     | |   |   |   `-DeclRefExpr 0x16ac21ea7c0 <col:27> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |   |   `-ImplicitCastExpr 0x16ac21ea8d8 <col:33, col:37> 'int' <IntegralCast>
|     | |   |     `-ImplicitCastExpr 0x16ac21ea8c0 <col:33, col:37> 'unsigned char' <LValueToRValue>
|     | |   |       `-ArraySubscriptExpr 0x16ac21ea8a0 <col:33, col:37> 'const unsigned char' lvalue
|     | |   |         |-ImplicitCastExpr 0x16ac21ea870 <col:33> 'const unsigned char *' <LValueToRValue>
|     | |   |         | `-DeclRefExpr 0x16ac21ea830 <col:33> 'const unsigned char *' lvalue ParmVar 0x16ac21e67e0 'in' 'const unsigned char *'
|     | |   |         `-ImplicitCastExpr 0x16ac21ea888 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |           `-DeclRefExpr 0x16ac21ea850 <col:36> 'size_t':'unsigned long long' lvalue Var 0x16ac21e6f58 'l' 'size_t':'unsigned long long'
|     | |   |-UnaryOperator 0x16ac21ea960 <line:72:13, col:15> 'size_t':'unsigned long long' prefix '++'
|     | |   | `-DeclRefExpr 0x16ac21ea940 <col:15> 'size_t':'unsigned long long' lvalue Var 0x16ac21e6f58 'l' 'size_t':'unsigned long long'
|     | |   `-BinaryOperator 0x16ac21eaab0 <line:73:13, col:27> 'unsigned int' '='
|     | |     |-DeclRefExpr 0x16ac21ea978 <col:13> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |     `-BinaryOperator 0x16ac21eaa90 <col:17, col:27> 'unsigned int' '%'
|     | |       |-ParenExpr 0x16ac21eaa30 <col:17, col:23> 'unsigned int'
|     | |       | `-BinaryOperator 0x16ac21eaa10 <col:18, col:22> 'unsigned int' '+'
|     | |       |   |-ImplicitCastExpr 0x16ac21ea9e0 <col:18> 'unsigned int' <LValueToRValue>
|     | |       |   | `-DeclRefExpr 0x16ac21ea998 <col:18> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     | |       |   `-ImplicitCastExpr 0x16ac21ea9f8 <col:22> 'unsigned int' <IntegralCast>
|     | |       |     `-IntegerLiteral 0x16ac21ea9b8 <col:22> 'int' 1
|     | |       `-ImplicitCastExpr 0x16ac21eaa78 <col:27> 'unsigned int' <IntegralCast>
|     | |         `-IntegerLiteral 0x16ac21eaa50 <col:27> 'int' 16
|     | `-BinaryOperator 0x16ac21eabb8 <line:75:9, col:16> 'int' '='
|     |   |-UnaryOperator 0x16ac21eab50 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|     |   | `-ImplicitCastExpr 0x16ac21eab38 <col:10> 'int *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x16ac21eab18 <col:10> 'int *' lvalue ParmVar 0x16ac21e6b10 'num' 'int *'
|     |   `-ImplicitCastExpr 0x16ac21eaba0 <col:16> 'int' <IntegralCast>
|     |     `-ImplicitCastExpr 0x16ac21eab88 <col:16> 'unsigned int' <LValueToRValue>
|     |       `-DeclRefExpr 0x16ac21eab68 <col:16> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|     `-CompoundStmt 0x16ac21efee0 <line:76:12, line:130:5>
|       |-IfStmt 0x16ac21ef610 <line:78:9, line:116:9>
|       | |-BinaryOperator 0x16ac21eacd0 <line:78:13, col:36> 'int' '=='
|       | | |-BinaryOperator 0x16ac21eac70 <col:13, col:31> 'unsigned long long' '%'
|       | | | |-ImplicitCastExpr 0x16ac21eac58 <col:13> 'unsigned long long' <IntegralCast>
|       | | | | `-IntegerLiteral 0x16ac21eac00 <col:13> 'int' 16
|       | | | `-UnaryExprOrTypeTraitExpr 0x16ac21eac38 <col:18, col:31> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x16ac21eacb8 <col:36> 'unsigned long long' <IntegralCast>
|       | |   `-IntegerLiteral 0x16ac21eac90 <col:36> 'int' 0
|       | `-CompoundStmt 0x16ac21ef5f8 <col:39, line:116:9>
|       |   `-DoStmt 0x16ac21ef5d8 <line:79:13, line:115:23>
|       |     |-CompoundStmt 0x16ac21ef578 <line:79:16, line:115:13>
|       |     | |-WhileStmt 0x16ac21f03d0 <line:80:17, line:86:17>
|       |     | | |-BinaryOperator 0x16ac21ead60 <line:80:24, col:29> 'int' '&&'
|       |     | | | |-ImplicitCastExpr 0x16ac21ead30 <col:24> 'unsigned int' <LValueToRValue>
|       |     | | | | `-DeclRefExpr 0x16ac21eacf0 <col:24> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | | | `-ImplicitCastExpr 0x16ac21ead48 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | |   `-DeclRefExpr 0x16ac21ead10 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|       |     | | `-CompoundStmt 0x16ac21f0398 <col:34, line:86:17>
|       |     | |   |-DeclStmt 0x16ac21eae00 <line:81:21, col:36>
|       |     | |   | `-VarDecl 0x16ac21ead98 <col:21, col:35> col:35 used c 'unsigned char'
|       |     | |   |-BinaryOperator 0x16ac21eb098 <line:82:21, col:54> 'unsigned char' '='
|       |     | |   | |-UnaryOperator 0x16ac21eae70 <col:21, col:28> 'unsigned char' lvalue prefix '*' cannot overflow
|       |     | |   | | `-ParenExpr 0x16ac21eae50 <col:22, col:28> 'unsigned char *'
|       |     | |   | |   `-UnaryOperator 0x16ac21eae38 <col:23, col:26> 'unsigned char *' postfix '++'
|       |     | |   | |     `-DeclRefExpr 0x16ac21eae18 <col:23> 'unsigned char *' lvalue ParmVar 0x16ac21e6890 'out' 'unsigned char *'
|       |     | |   | `-ImplicitCastExpr 0x16ac21eb080 <col:32, col:54> 'unsigned char' <IntegralCast>
|       |     | |   |   `-BinaryOperator 0x16ac21eb060 <col:32, col:54> 'int' '^'
|       |     | |   |     |-ImplicitCastExpr 0x16ac21eb030 <col:32, col:38> 'int' <IntegralCast>
|       |     | |   |     | `-ImplicitCastExpr 0x16ac21eb018 <col:32, col:38> 'unsigned char' <LValueToRValue>
|       |     | |   |     |   `-ArraySubscriptExpr 0x16ac21eaef8 <col:32, col:38> 'unsigned char' lvalue
|       |     | |   |     |     |-ImplicitCastExpr 0x16ac21eaec8 <col:32> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |     |     | `-DeclRefExpr 0x16ac21eae88 <col:32> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |     |     `-ImplicitCastExpr 0x16ac21eaee0 <col:37> 'unsigned int' <LValueToRValue>
|       |     | |   |     |       `-DeclRefExpr 0x16ac21eaea8 <col:37> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |   |     `-ImplicitCastExpr 0x16ac21eb048 <col:42, col:54> 'int' <IntegralCast>
|       |     | |   |       `-ParenExpr 0x16ac21eaff8 <col:42, col:54> 'unsigned char'
|       |     | |   |         `-BinaryOperator 0x16ac21eafd8 <col:43, col:53> 'unsigned char' '='
|       |     | |   |           |-DeclRefExpr 0x16ac21eaf18 <col:43> 'unsigned char' lvalue Var 0x16ac21ead98 'c' 'unsigned char'
|       |     | |   |           `-ImplicitCastExpr 0x16ac21eafc0 <col:47, col:53> 'unsigned char' <LValueToRValue>
|       |     | |   |             `-UnaryOperator 0x16ac21eafa8 <col:47, col:53> 'const unsigned char' lvalue prefix '*' cannot overflow
|       |     | |   |               `-ParenExpr 0x16ac21eaf88 <col:48, col:53> 'const unsigned char *'
|       |     | |   |                 `-UnaryOperator 0x16ac21eaf70 <col:49, col:51> 'const unsigned char *' postfix '++'
|       |     | |   |                   `-DeclRefExpr 0x16ac21eaf50 <col:49> 'const unsigned char *' lvalue ParmVar 0x16ac21e67e0 'in' 'const unsigned char *'
|       |     | |   |-BinaryOperator 0x16ac21f01e8 <line:83:21, col:31> 'unsigned char' '='
|       |     | |   | |-ArraySubscriptExpr 0x16ac21f0190 <col:21, col:27> 'unsigned char' lvalue
|       |     | |   | | |-ImplicitCastExpr 0x16ac21f0160 <col:21> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   | | | `-DeclRefExpr 0x16ac21eb0b8 <col:21> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   | | `-ImplicitCastExpr 0x16ac21f0178 <col:26> 'unsigned int' <LValueToRValue>
|       |     | |   | |   `-DeclRefExpr 0x16ac21f0140 <col:26> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |   | `-ImplicitCastExpr 0x16ac21f01d0 <col:31> 'unsigned char' <LValueToRValue>
|       |     | |   |   `-DeclRefExpr 0x16ac21f01b0 <col:31> 'unsigned char' lvalue Var 0x16ac21ead98 'c' 'unsigned char'
|       |     | |   |-UnaryOperator 0x16ac21f0228 <line:84:21, col:23> 'size_t':'unsigned long long' prefix '--'
|       |     | |   | `-DeclRefExpr 0x16ac21f0208 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|       |     | |   `-BinaryOperator 0x16ac21f0378 <line:85:21, col:35> 'unsigned int' '='
|       |     | |     |-DeclRefExpr 0x16ac21f0240 <col:21> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |     `-BinaryOperator 0x16ac21f0358 <col:25, col:35> 'unsigned int' '%'
|       |     | |       |-ParenExpr 0x16ac21f02f8 <col:25, col:31> 'unsigned int'
|       |     | |       | `-BinaryOperator 0x16ac21f02d8 <col:26, col:30> 'unsigned int' '+'
|       |     | |       |   |-ImplicitCastExpr 0x16ac21f02a8 <col:26> 'unsigned int' <LValueToRValue>
|       |     | |       |   | `-DeclRefExpr 0x16ac21f0260 <col:26> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |       |   `-ImplicitCastExpr 0x16ac21f02c0 <col:30> 'unsigned int' <IntegralCast>
|       |     | |       |     `-IntegerLiteral 0x16ac21f0280 <col:30> 'int' 1
|       |     | |       `-ImplicitCastExpr 0x16ac21f0340 <col:35> 'unsigned int' <IntegralCast>
|       |     | |         `-IntegerLiteral 0x16ac21f0318 <col:35> 'int' 16
|       |     | |-WhileStmt 0x16ac21f0eb8 <line:92:17, line:103:17>
|       |     | | |-BinaryOperator 0x16ac21f0460 <line:92:24, col:31> 'int' '>='
|       |     | | | |-ImplicitCastExpr 0x16ac21f0430 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | | | `-DeclRefExpr 0x16ac21f03e8 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|       |     | | | `-ImplicitCastExpr 0x16ac21f0448 <col:31> 'unsigned long long' <IntegralCast>
|       |     | | |   `-IntegerLiteral 0x16ac21f0408 <col:31> 'int' 16
|       |     | | `-CompoundStmt 0x16ac21f0e80 <col:35, line:103:17>
|       |     | |   |-ForStmt 0x16ac21f0c48 <line:94:21, line:98:21>
|       |     | |   | |-<<<NULL>>>
|       |     | |   | |-<<<NULL>>>
|       |     | |   | |-BinaryOperator 0x16ac21f0558 <line:94:28, col:32> 'int' '<'
|       |     | |   | | |-ImplicitCastExpr 0x16ac21f0528 <col:28> 'unsigned int' <LValueToRValue>
|       |     | |   | | | `-DeclRefExpr 0x16ac21f04e0 <col:28> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |   | | `-ImplicitCastExpr 0x16ac21f0540 <col:32> 'unsigned int' <IntegralCast>
|       |     | |   | |   `-IntegerLiteral 0x16ac21f0500 <col:32> 'int' 16
|       |     | |   | |-CompoundAssignOperator 0x16ac21f05c8 <col:36, col:54> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       |     | |   | | |-DeclRefExpr 0x16ac21f0578 <col:36> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |   | | `-UnaryExprOrTypeTraitExpr 0x16ac21f05a8 <col:41, col:54> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|       |     | |   | `-CompoundStmt 0x16ac21f0c20 <col:57, line:98:21>
|       |     | |   |   |-DeclStmt 0x16ac21f07a8 <line:95:25, col:55>
|       |     | |   |   | `-VarDecl 0x16ac21f0608 <col:25, col:54> col:32 used t 'size_t':'unsigned long long' cinit
|       |     | |   |   |   `-ImplicitCastExpr 0x16ac21f0790 <col:36, col:54> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |     `-UnaryOperator 0x16ac21f0778 <col:36, col:54> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   |       `-CStyleCastExpr 0x16ac21f0750 <col:37, col:54> 'size_t *' <BitCast>
|       |     | |   |   |         `-ParenExpr 0x16ac21f0730 <col:47, col:54> 'const unsigned char *'
|       |     | |   |   |           `-BinaryOperator 0x16ac21f06e0 <col:48, col:53> 'const unsigned char *' '+'
|       |     | |   |   |             |-ImplicitCastExpr 0x16ac21f06b0 <col:48> 'const unsigned char *' <LValueToRValue>
|       |     | |   |   |             | `-DeclRefExpr 0x16ac21f0670 <col:48> 'const unsigned char *' lvalue ParmVar 0x16ac21e67e0 'in' 'const unsigned char *'
|       |     | |   |   |             `-ImplicitCastExpr 0x16ac21f06c8 <col:53> 'unsigned int' <LValueToRValue>
|       |     | |   |   |               `-DeclRefExpr 0x16ac21f0690 <col:53> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |   |   |-BinaryOperator 0x16ac21f0a88 <line:96:25, col:72> 'size_t':'unsigned long long' '='
|       |     | |   |   | |-UnaryOperator 0x16ac21f08c8 <col:25, col:44> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   | | `-CStyleCastExpr 0x16ac21f08a0 <col:26, col:44> 'size_t *' <BitCast>
|       |     | |   |   | |   `-ParenExpr 0x16ac21f0880 <col:36, col:44> 'unsigned char *'
|       |     | |   |   | |     `-BinaryOperator 0x16ac21f0830 <col:37, col:43> 'unsigned char *' '+'
|       |     | |   |   | |       |-ImplicitCastExpr 0x16ac21f0800 <col:37> 'unsigned char *' <LValueToRValue>
|       |     | |   |   | |       | `-DeclRefExpr 0x16ac21f07c0 <col:37> 'unsigned char *' lvalue ParmVar 0x16ac21e6890 'out' 'unsigned char *'
|       |     | |   |   | |       `-ImplicitCastExpr 0x16ac21f0818 <col:43> 'unsigned int' <LValueToRValue>
|       |     | |   |   | |         `-DeclRefExpr 0x16ac21f07e0 <col:43> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |   |   | `-BinaryOperator 0x16ac21f0a68 <col:48, col:72> 'unsigned long long' '^'
|       |     | |   |   |   |-ImplicitCastExpr 0x16ac21f0a38 <col:48, col:68> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |   | `-UnaryOperator 0x16ac21f09e8 <col:48, col:68> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |   |   |   `-CStyleCastExpr 0x16ac21f09c0 <col:49, col:68> 'size_t *' <BitCast>
|       |     | |   |   |   |     `-ParenExpr 0x16ac21f09a0 <col:59, col:68> 'unsigned char *':'unsigned char *'
|       |     | |   |   |   |       `-BinaryOperator 0x16ac21f0950 <col:60, col:67> 'unsigned char *':'unsigned char *' '+'
|       |     | |   |   |   |         |-ImplicitCastExpr 0x16ac21f0920 <col:60> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |   |   |         | `-DeclRefExpr 0x16ac21f08e0 <col:60> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |   |   |         `-ImplicitCastExpr 0x16ac21f0938 <col:67> 'unsigned int' <LValueToRValue>
|       |     | |   |   |   |           `-DeclRefExpr 0x16ac21f0900 <col:67> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |   |   |   `-ImplicitCastExpr 0x16ac21f0a50 <col:72> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |   |     `-DeclRefExpr 0x16ac21f0a00 <col:72> 'size_t':'unsigned long long' lvalue Var 0x16ac21f0608 't' 'size_t':'unsigned long long'
|       |     | |   |   `-BinaryOperator 0x16ac21f0c00 <line:97:25, col:49> 'size_t':'unsigned long long' '='
|       |     | |   |     |-UnaryOperator 0x16ac21f0bb0 <col:25, col:45> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|       |     | |   |     | `-CStyleCastExpr 0x16ac21f0b88 <col:26, col:45> 'size_t *' <BitCast>
|       |     | |   |     |   `-ParenExpr 0x16ac21f0b68 <col:36, col:45> 'unsigned char *':'unsigned char *'
|       |     | |   |     |     `-BinaryOperator 0x16ac21f0b18 <col:37, col:44> 'unsigned char *':'unsigned char *' '+'
|       |     | |   |     |       |-ImplicitCastExpr 0x16ac21f0ae8 <col:37> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |   |     |       | `-DeclRefExpr 0x16ac21f0aa8 <col:37> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |   |     |       `-ImplicitCastExpr 0x16ac21f0b00 <col:44> 'unsigned int' <LValueToRValue>
|       |     | |   |     |         `-DeclRefExpr 0x16ac21f0ac8 <col:44> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |   |     `-ImplicitCastExpr 0x16ac21f0be8 <col:49> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | |   |       `-DeclRefExpr 0x16ac21f0bc8 <col:49> 'size_t':'unsigned long long' lvalue Var 0x16ac21f0608 't' 'size_t':'unsigned long long'
|       |     | |   |-CompoundAssignOperator 0x16ac21f0ce0 <line:99:21, col:28> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       |     | |   | |-DeclRefExpr 0x16ac21f0c80 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|       |     | |   | `-ImplicitCastExpr 0x16ac21f0cc8 <col:28> 'unsigned long long' <IntegralCast>
|       |     | |   |   `-IntegerLiteral 0x16ac21f0ca0 <col:28> 'int' 16
|       |     | |   |-CompoundAssignOperator 0x16ac21f0d58 <line:100:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|       |     | |   | |-DeclRefExpr 0x16ac21f0d10 <col:21> 'unsigned char *' lvalue ParmVar 0x16ac21e6890 'out' 'unsigned char *'
|       |     | |   | `-IntegerLiteral 0x16ac21f0d30 <col:28> 'int' 16
|       |     | |   |-CompoundAssignOperator 0x16ac21f0dd0 <line:101:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|       |     | |   | |-DeclRefExpr 0x16ac21f0d88 <col:21> 'const unsigned char *' lvalue ParmVar 0x16ac21e67e0 'in' 'const unsigned char *'
|       |     | |   | `-IntegerLiteral 0x16ac21f0da8 <col:27> 'int' 16
|       |     | |   `-BinaryOperator 0x16ac21f0e60 <line:102:21, col:25> 'unsigned int' '='
|       |     | |     |-DeclRefExpr 0x16ac21f0e00 <col:21> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |     `-ImplicitCastExpr 0x16ac21f0e48 <col:25> 'unsigned int' <IntegralCast>
|       |     | |       `-IntegerLiteral 0x16ac21f0e20 <col:25> 'int' 0
|       |     | |-IfStmt 0x16ac21ef490 <line:104:17, line:112:17>
|       |     | | |-ImplicitCastExpr 0x16ac21f0ef0 <line:104:21> 'size_t':'unsigned long long' <LValueToRValue>
|       |     | | | `-DeclRefExpr 0x16ac21f0ed0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|       |     | | `-CompoundStmt 0x16ac21ef478 <col:26, line:112:17>
|       |     | |   `-WhileStmt 0x16ac21ef460 <line:106:21, line:111:21>
|       |     | |     |-UnaryOperator 0x16ac21f0f88 <line:106:28, col:31> 'size_t':'unsigned long long' postfix '--'
|       |     | |     | `-DeclRefExpr 0x16ac21f0f68 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|       |     | |     `-CompoundStmt 0x16ac21ef430 <col:35, line:111:21>
|       |     | |       |-DeclStmt 0x16ac21f1020 <line:107:25, col:40>
|       |     | |       | `-VarDecl 0x16ac21f0fb8 <col:25, col:39> col:39 used c 'unsigned char'
|       |     | |       |-BinaryOperator 0x16ac21ef2f0 <line:108:25, col:54> 'unsigned char' '='
|       |     | |       | |-ArraySubscriptExpr 0x16ac21f10a8 <col:25, col:30> 'unsigned char' lvalue
|       |     | |       | | |-ImplicitCastExpr 0x16ac21f1078 <col:25> 'unsigned char *' <LValueToRValue>
|       |     | |       | | | `-DeclRefExpr 0x16ac21f1038 <col:25> 'unsigned char *' lvalue ParmVar 0x16ac21e6890 'out' 'unsigned char *'
|       |     | |       | | `-ImplicitCastExpr 0x16ac21f1090 <col:29> 'unsigned int' <LValueToRValue>
|       |     | |       | |   `-DeclRefExpr 0x16ac21f1058 <col:29> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |       | `-ImplicitCastExpr 0x16ac21ef2d8 <col:34, col:54> 'unsigned char' <IntegralCast>
|       |     | |       |   `-BinaryOperator 0x16ac21ef2b8 <col:34, col:54> 'int' '^'
|       |     | |       |     |-ImplicitCastExpr 0x16ac21ef288 <col:34, col:40> 'int' <IntegralCast>
|       |     | |       |     | `-ImplicitCastExpr 0x16ac21ef270 <col:34, col:40> 'unsigned char' <LValueToRValue>
|       |     | |       |     |   `-ArraySubscriptExpr 0x16ac21ef130 <col:34, col:40> 'unsigned char' lvalue
|       |     | |       |     |     |-ImplicitCastExpr 0x16ac21f1108 <col:34> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |       |     |     | `-DeclRefExpr 0x16ac21f10c8 <col:34> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |       |     |     `-ImplicitCastExpr 0x16ac21f1120 <col:39> 'unsigned int' <LValueToRValue>
|       |     | |       |     |       `-DeclRefExpr 0x16ac21f10e8 <col:39> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |       |     `-ImplicitCastExpr 0x16ac21ef2a0 <col:44, col:54> 'int' <IntegralCast>
|       |     | |       |       `-ParenExpr 0x16ac21ef250 <col:44, col:54> 'unsigned char'
|       |     | |       |         `-BinaryOperator 0x16ac21ef230 <col:45, col:53> 'unsigned char' '='
|       |     | |       |           |-DeclRefExpr 0x16ac21ef150 <col:45> 'unsigned char' lvalue Var 0x16ac21f0fb8 'c' 'unsigned char'
|       |     | |       |           `-ImplicitCastExpr 0x16ac21ef218 <col:49, col:53> 'unsigned char' <LValueToRValue>
|       |     | |       |             `-ArraySubscriptExpr 0x16ac21ef1f8 <col:49, col:53> 'const unsigned char' lvalue
|       |     | |       |               |-ImplicitCastExpr 0x16ac21ef1c8 <col:49> 'const unsigned char *' <LValueToRValue>
|       |     | |       |               | `-DeclRefExpr 0x16ac21ef188 <col:49> 'const unsigned char *' lvalue ParmVar 0x16ac21e67e0 'in' 'const unsigned char *'
|       |     | |       |               `-ImplicitCastExpr 0x16ac21ef1e0 <col:52> 'unsigned int' <LValueToRValue>
|       |     | |       |                 `-DeclRefExpr 0x16ac21ef1a8 <col:52> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |       |-BinaryOperator 0x16ac21ef3d8 <line:109:25, col:35> 'unsigned char' '='
|       |     | |       | |-ArraySubscriptExpr 0x16ac21ef380 <col:25, col:31> 'unsigned char' lvalue
|       |     | |       | | |-ImplicitCastExpr 0x16ac21ef350 <col:25> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |     | |       | | | `-DeclRefExpr 0x16ac21ef310 <col:25> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|       |     | |       | | `-ImplicitCastExpr 0x16ac21ef368 <col:30> 'unsigned int' <LValueToRValue>
|       |     | |       | |   `-DeclRefExpr 0x16ac21ef330 <col:30> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |       | `-ImplicitCastExpr 0x16ac21ef3c0 <col:35> 'unsigned char' <LValueToRValue>
|       |     | |       |   `-DeclRefExpr 0x16ac21ef3a0 <col:35> 'unsigned char' lvalue Var 0x16ac21f0fb8 'c' 'unsigned char'
|       |     | |       `-UnaryOperator 0x16ac21ef418 <line:110:25, col:27> 'unsigned int' prefix '++'
|       |     | |         `-DeclRefExpr 0x16ac21ef3f8 <col:27> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | |-BinaryOperator 0x16ac21ef548 <line:113:17, col:24> 'int' '='
|       |     | | |-UnaryOperator 0x16ac21ef4e0 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|       |     | | | `-ImplicitCastExpr 0x16ac21ef4c8 <col:18> 'int *' <LValueToRValue>
|       |     | | |   `-DeclRefExpr 0x16ac21ef4a8 <col:18> 'int *' lvalue ParmVar 0x16ac21e6b10 'num' 'int *'
|       |     | | `-ImplicitCastExpr 0x16ac21ef530 <col:24> 'int' <IntegralCast>
|       |     | |   `-ImplicitCastExpr 0x16ac21ef518 <col:24> 'unsigned int' <LValueToRValue>
|       |     | |     `-DeclRefExpr 0x16ac21ef4f8 <col:24> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     | `-ReturnStmt 0x16ac21ef568 <line:114:17>
|       |     `-IntegerLiteral 0x16ac21ef5b0 <line:115:22> 'int' 0
|       |-WhileStmt 0x16ac21efe08 <line:119:9, line:128:9>
|       | |-BinaryOperator 0x16ac21ef698 <line:119:16, col:20> 'int' '<'
|       | | |-ImplicitCastExpr 0x16ac21ef668 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|       | | | `-DeclRefExpr 0x16ac21ef628 <col:16> 'size_t':'unsigned long long' lvalue Var 0x16ac21e6f58 'l' 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x16ac21ef680 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|       | |   `-DeclRefExpr 0x16ac21ef648 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21e6908 'len' 'size_t':'unsigned long long'
|       | `-CompoundStmt 0x16ac21efdc8 <col:25, line:128:9>
|       |   |-DeclStmt 0x16ac21ef738 <line:120:13, col:28>
|       |   | `-VarDecl 0x16ac21ef6d0 <col:13, col:27> col:27 used c 'unsigned char'
|       |   |-IfStmt 0x16ac21ef858 <line:121:13, line:123:13>
|       |   | |-BinaryOperator 0x16ac21ef7c8 <line:121:17, col:22> 'int' '=='
|       |   | | |-ImplicitCastExpr 0x16ac21ef798 <col:17> 'unsigned int' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x16ac21ef750 <col:17> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |   | | `-ImplicitCastExpr 0x16ac21ef7b0 <col:22> 'unsigned int' <IntegralCast>
|       |   | |   `-IntegerLiteral 0x16ac21ef770 <col:22> 'int' 0
|       |   | `-CompoundStmt 0x16ac21ef848 <col:25, line:123:13>
|       |   |-BinaryOperator 0x16ac21efb30 <line:124:13, col:42> 'unsigned char' '='
|       |   | |-ArraySubscriptExpr 0x16ac21ef8e0 <col:13, col:18> 'unsigned char' lvalue
|       |   | | |-ImplicitCastExpr 0x16ac21ef8b0 <col:13> 'unsigned char *' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x16ac21ef870 <col:13> 'unsigned char *' lvalue ParmVar 0x16ac21e6890 'out' 'unsigned char *'
|       |   | | `-ImplicitCastExpr 0x16ac21ef8c8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x16ac21ef890 <col:17> 'size_t':'unsigned long long' lvalue Var 0x16ac21e6f58 'l' 'size_t':'unsigned long long'
|       |   | `-ImplicitCastExpr 0x16ac21efb18 <col:22, col:42> 'unsigned char' <IntegralCast>
|       |   |   `-BinaryOperator 0x16ac21efaf8 <col:22, col:42> 'int' '^'
|       |   |     |-ImplicitCastExpr 0x16ac21efac8 <col:22, col:28> 'int' <IntegralCast>
|       |   |     | `-ImplicitCastExpr 0x16ac21efab0 <col:22, col:28> 'unsigned char' <LValueToRValue>
|       |   |     |   `-ArraySubscriptExpr 0x16ac21ef970 <col:22, col:28> 'unsigned char' lvalue
|       |   |     |     |-ImplicitCastExpr 0x16ac21ef940 <col:22> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |   |     |     | `-DeclRefExpr 0x16ac21ef900 <col:22> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|       |   |     |     `-ImplicitCastExpr 0x16ac21ef958 <col:27> 'unsigned int' <LValueToRValue>
|       |   |     |       `-DeclRefExpr 0x16ac21ef920 <col:27> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |   |     `-ImplicitCastExpr 0x16ac21efae0 <col:32, col:42> 'int' <IntegralCast>
|       |   |       `-ParenExpr 0x16ac21efa90 <col:32, col:42> 'unsigned char'
|       |   |         `-BinaryOperator 0x16ac21efa70 <col:33, col:41> 'unsigned char' '='
|       |   |           |-DeclRefExpr 0x16ac21ef990 <col:33> 'unsigned char' lvalue Var 0x16ac21ef6d0 'c' 'unsigned char'
|       |   |           `-ImplicitCastExpr 0x16ac21efa58 <col:37, col:41> 'unsigned char' <LValueToRValue>
|       |   |             `-ArraySubscriptExpr 0x16ac21efa38 <col:37, col:41> 'const unsigned char' lvalue
|       |   |               |-ImplicitCastExpr 0x16ac21efa08 <col:37> 'const unsigned char *' <LValueToRValue>
|       |   |               | `-DeclRefExpr 0x16ac21ef9c8 <col:37> 'const unsigned char *' lvalue ParmVar 0x16ac21e67e0 'in' 'const unsigned char *'
|       |   |               `-ImplicitCastExpr 0x16ac21efa20 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|       |   |                 `-DeclRefExpr 0x16ac21ef9e8 <col:40> 'size_t':'unsigned long long' lvalue Var 0x16ac21e6f58 'l' 'size_t':'unsigned long long'
|       |   |-BinaryOperator 0x16ac21efc18 <line:125:13, col:23> 'unsigned char' '='
|       |   | |-ArraySubscriptExpr 0x16ac21efbc0 <col:13, col:19> 'unsigned char' lvalue
|       |   | | |-ImplicitCastExpr 0x16ac21efb90 <col:13> 'unsigned char *':'unsigned char *' <LValueToRValue>
|       |   | | | `-DeclRefExpr 0x16ac21efb50 <col:13> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21e6a90 'ivec' 'unsigned char *':'unsigned char *'
|       |   | | `-ImplicitCastExpr 0x16ac21efba8 <col:18> 'unsigned int' <LValueToRValue>
|       |   | |   `-DeclRefExpr 0x16ac21efb70 <col:18> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |   | `-ImplicitCastExpr 0x16ac21efc00 <col:23> 'unsigned char' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x16ac21efbe0 <col:23> 'unsigned char' lvalue Var 0x16ac21ef6d0 'c' 'unsigned char'
|       |   |-UnaryOperator 0x16ac21efc58 <line:126:13, col:15> 'size_t':'unsigned long long' prefix '++'
|       |   | `-DeclRefExpr 0x16ac21efc38 <col:15> 'size_t':'unsigned long long' lvalue Var 0x16ac21e6f58 'l' 'size_t':'unsigned long long'
|       |   `-BinaryOperator 0x16ac21efda8 <line:127:13, col:27> 'unsigned int' '='
|       |     |-DeclRefExpr 0x16ac21efc70 <col:13> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |     `-BinaryOperator 0x16ac21efd88 <col:17, col:27> 'unsigned int' '%'
|       |       |-ParenExpr 0x16ac21efd28 <col:17, col:23> 'unsigned int'
|       |       | `-BinaryOperator 0x16ac21efd08 <col:18, col:22> 'unsigned int' '+'
|       |       |   |-ImplicitCastExpr 0x16ac21efcd8 <col:18> 'unsigned int' <LValueToRValue>
|       |       |   | `-DeclRefExpr 0x16ac21efc90 <col:18> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|       |       |   `-ImplicitCastExpr 0x16ac21efcf0 <col:22> 'unsigned int' <IntegralCast>
|       |       |     `-IntegerLiteral 0x16ac21efcb0 <col:22> 'int' 1
|       |       `-ImplicitCastExpr 0x16ac21efd70 <col:27> 'unsigned int' <IntegralCast>
|       |         `-IntegerLiteral 0x16ac21efd48 <col:27> 'int' 16
|       `-BinaryOperator 0x16ac21efec0 <line:129:9, col:16> 'int' '='
|         |-UnaryOperator 0x16ac21efe58 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|         | `-ImplicitCastExpr 0x16ac21efe40 <col:10> 'int *' <LValueToRValue>
|         |   `-DeclRefExpr 0x16ac21efe20 <col:10> 'int *' lvalue ParmVar 0x16ac21e6b10 'num' 'int *'
|         `-ImplicitCastExpr 0x16ac21efea8 <col:16> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x16ac21efe90 <col:16> 'unsigned int' <LValueToRValue>
|             `-DeclRefExpr 0x16ac21efe70 <col:16> 'unsigned int' lvalue Var 0x16ac21e6ec8 'n' 'unsigned int'
|-FunctionDecl 0x16ac21f8338 <line:137:1, line:170:1> line:137:13 invalid cfbr_encrypt_block 'void (const unsigned char *, unsigned char *, int, const void *, unsigned char *, int, int)' static
| |-ParmVarDecl 0x16ac21eff78 <col:32, col:53> col:53 used in 'const unsigned char *'
| |-ParmVarDecl 0x16ac21efff8 <col:57, col:72> col:72 used out 'unsigned char *'
| |-ParmVarDecl 0x16ac21f0078 <line:138:32, col:36> col:36 used nbits 'int'
| |-ParmVarDecl 0x16ac21f7fe0 <col:43, col:55> col:55 used key 'const void *'
| |-ParmVarDecl 0x16ac21f80b0 <line:139:32, col:53> col:46 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x16ac21f8130 <col:56, col:60> col:60 used enc 'int'
| |-ParmVarDecl 0x16ac21f81b0 <line:140:32, col:43> col:43 invalid block 'int'
| `-CompoundStmt 0x16ac21f30b8 <line:141:1, line:170:1>
|   |-DeclStmt 0x16ac21f85c8 <line:142:5, col:20>
|   | |-VarDecl 0x16ac21f8440 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x16ac21f84c0 <col:5, col:12> col:12 used rem 'int'
|   | `-VarDecl 0x16ac21f8540 <col:5, col:17> col:17 used num 'int'
|   |-DeclStmt 0x16ac21f8778 <line:143:5, col:35>
|   | `-VarDecl 0x16ac21f8710 <col:5, col:34> col:19 used ovec 'unsigned char [33]'
|   |-IfStmt 0x16ac21f88d8 <line:146:5, line:147:9>
|   | |-BinaryOperator 0x16ac21f88a8 <line:146:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x16ac21f8808 <col:9, col:18> 'int' '<='
|   | | | |-ImplicitCastExpr 0x16ac21f87f0 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x16ac21f8790 <col:9> 'int' lvalue ParmVar 0x16ac21f0078 'nbits' 'int'
|   | | | `-IntegerLiteral 0x16ac21f87c8 <col:18> 'int' 0
|   | | `-BinaryOperator 0x16ac21f8888 <col:23, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x16ac21f8870 <col:23> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x16ac21f8828 <col:23> 'int' lvalue ParmVar 0x16ac21f0078 'nbits' 'int'
|   | |   `-IntegerLiteral 0x16ac21f8848 <col:31> 'int' 128
|   | `-ReturnStmt 0x16ac21f88c8 <line:147:9>
|   |-CallExpr 0x16ac21f8a20 <line:150:5, col:26> 'void *'
|   | |-ImplicitCastExpr 0x16ac21f8a08 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x16ac21f88f0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x16ac2173f28 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x16ac21f8a70 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x16ac21f8a58 <col:12> 'unsigned char *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x16ac21f8910 <col:12> 'unsigned char [33]' lvalue Var 0x16ac21f8710 'ovec' 'unsigned char [33]'
|   | |-ImplicitCastExpr 0x16ac21f8aa0 <col:18> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x16ac21f8a88 <col:18> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x16ac21f8948 <col:18> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21f80b0 'ivec' 'unsigned char *':'unsigned char *'
|   | `-ImplicitCastExpr 0x16ac21f8ab8 <col:24> 'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x16ac21f8980 <col:24> 'int' 16
|   |-BinaryOperator 0x16ac21f8c68 <line:153:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x16ac21f8b48 <col:5> 'int' lvalue Var 0x16ac21f8540 'num' 'int'
|   | `-BinaryOperator 0x16ac21f8c48 <col:11, col:25> 'int' '/'
|   |   |-ParenExpr 0x16ac21f8c00 <col:11, col:21> 'int'
|   |   | `-BinaryOperator 0x16ac21f8be0 <col:12, col:20> 'int' '+'
|   |   |   |-ImplicitCastExpr 0x16ac21f8bc8 <col:12> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x16ac21f8b80 <col:12> 'int' lvalue ParmVar 0x16ac21f0078 'nbits' 'int'
|   |   |   `-IntegerLiteral 0x16ac21f8ba0 <col:20> 'int' 7
|   |   `-IntegerLiteral 0x16ac21f8c20 <col:25> 'int' 8
|   |-IfStmt 0x16ac21f9708 <line:154:5, line:159:53> has_else
|   | |-ImplicitCastExpr 0x16ac21f8cc0 <line:154:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x16ac21f8c88 <col:9> 'int' lvalue ParmVar 0x16ac21f8130 'enc' 'int'
|   | |-ForStmt 0x16ac21f91e8 <line:155:9, line:156:53>
|   | | |-BinaryOperator 0x16ac21f8d38 <line:155:14, col:18> 'int' '='
|   | | | |-DeclRefExpr 0x16ac21f8cd8 <col:14> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   | | | `-IntegerLiteral 0x16ac21f8d10 <col:18> 'int' 0
|   | | |-<<<NULL>>>
|   | | |-BinaryOperator 0x16ac21f8dc8 <col:21, col:25> 'int' '<'
|   | | | |-ImplicitCastExpr 0x16ac21f8d98 <col:21> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x16ac21f8d58 <col:21> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   | | | `-ImplicitCastExpr 0x16ac21f8db0 <col:25> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16ac21f8d78 <col:25> 'int' lvalue Var 0x16ac21f8540 'num' 'int'
|   | | |-UnaryOperator 0x16ac21f8e08 <col:30, col:32> 'int' prefix '++'
|   | | | `-DeclRefExpr 0x16ac21f8de8 <col:32> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   | | `-BinaryOperator 0x16ac21f91c8 <line:156:13, col:53> 'unsigned char' '='
|   | |   |-ArraySubscriptExpr 0x16ac21f8ea8 <col:13, col:18> 'unsigned char' lvalue
|   | |   | |-ImplicitCastExpr 0x16ac21f8e78 <col:13> 'unsigned char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x16ac21f8e20 <col:13> 'unsigned char *' lvalue ParmVar 0x16ac21efff8 'out' 'unsigned char *'
|   | |   | `-ImplicitCastExpr 0x16ac21f8e90 <col:17> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x16ac21f8e58 <col:17> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   | |   `-ParenExpr 0x16ac21f91a8 <col:22, col:53> 'unsigned char'
|   | |     `-BinaryOperator 0x16ac21f9188 <col:23, col:52> 'unsigned char' '='
|   | |       |-ArraySubscriptExpr 0x16ac21f8f80 <col:23, col:34> 'unsigned char' lvalue
|   | |       | |-ImplicitCastExpr 0x16ac21f8f68 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   | |       | | `-DeclRefExpr 0x16ac21f8ec8 <col:23> 'unsigned char [33]' lvalue Var 0x16ac21f8710 'ovec' 'unsigned char [33]'
|   | |       | `-BinaryOperator 0x16ac21f8f48 <col:28, col:33> 'int' '+'
|   | |       |   |-IntegerLiteral 0x16ac21f8ee8 <col:28> 'int' 16
|   | |       |   `-ImplicitCastExpr 0x16ac21f8f30 <col:33> 'int' <LValueToRValue>
|   | |       |     `-DeclRefExpr 0x16ac21f8f10 <col:33> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   | |       `-ImplicitCastExpr 0x16ac21f9170 <col:38, col:52> 'unsigned char' <IntegralCast>
|   | |         `-BinaryOperator 0x16ac21f9150 <col:38, col:52> 'int' '^'
|   | |           |-ImplicitCastExpr 0x16ac21f9108 <col:38, col:42> 'int' <IntegralCast>
|   | |           | `-ImplicitCastExpr 0x16ac21f90f0 <col:38, col:42> 'unsigned char' <LValueToRValue>
|   | |           |   `-ArraySubscriptExpr 0x16ac21f9040 <col:38, col:42> 'const unsigned char' lvalue
|   | |           |     |-ImplicitCastExpr 0x16ac21f9010 <col:38> 'const unsigned char *' <LValueToRValue>
|   | |           |     | `-DeclRefExpr 0x16ac21f8fa0 <col:38> 'const unsigned char *' lvalue ParmVar 0x16ac21eff78 'in' 'const unsigned char *'
|   | |           |     `-ImplicitCastExpr 0x16ac21f9028 <col:41> 'int' <LValueToRValue>
|   | |           |       `-DeclRefExpr 0x16ac21f8ff0 <col:41> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   | |           `-ImplicitCastExpr 0x16ac21f9138 <col:46, col:52> 'int' <IntegralCast>
|   | |             `-ImplicitCastExpr 0x16ac21f9120 <col:46, col:52> 'unsigned char' <LValueToRValue>
|   | |               `-ArraySubscriptExpr 0x16ac21f90d0 <col:46, col:52> 'unsigned char' lvalue
|   | |                 |-ImplicitCastExpr 0x16ac21f90a0 <col:46> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   | |                 | `-DeclRefExpr 0x16ac21f9060 <col:46> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21f80b0 'ivec' 'unsigned char *':'unsigned char *'
|   | |                 `-ImplicitCastExpr 0x16ac21f90b8 <col:51> 'int' <LValueToRValue>
|   | |                   `-DeclRefExpr 0x16ac21f9080 <col:51> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   | `-ForStmt 0x16ac21f96d0 <line:158:9, line:159:53>
|   |   |-BinaryOperator 0x16ac21f9268 <line:158:14, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x16ac21f9220 <col:14> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   |   | `-IntegerLiteral 0x16ac21f9240 <col:18> 'int' 0
|   |   |-<<<NULL>>>
|   |   |-BinaryOperator 0x16ac21f92f8 <col:21, col:25> 'int' '<'
|   |   | |-ImplicitCastExpr 0x16ac21f92c8 <col:21> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x16ac21f9288 <col:21> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   |   | `-ImplicitCastExpr 0x16ac21f92e0 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x16ac21f92a8 <col:25> 'int' lvalue Var 0x16ac21f8540 'num' 'int'
|   |   |-UnaryOperator 0x16ac21f9338 <col:30, col:32> 'int' prefix '++'
|   |   | `-DeclRefExpr 0x16ac21f9318 <col:32> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   |   `-BinaryOperator 0x16ac21f96b0 <line:159:13, col:53> 'unsigned char' '='
|   |     |-ArraySubscriptExpr 0x16ac21f93c0 <col:13, col:18> 'unsigned char' lvalue
|   |     | |-ImplicitCastExpr 0x16ac21f9390 <col:13> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x16ac21f9350 <col:13> 'unsigned char *' lvalue ParmVar 0x16ac21efff8 'out' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x16ac21f93a8 <col:17> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x16ac21f9370 <col:17> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   |     `-ImplicitCastExpr 0x16ac21f9698 <col:22, col:53> 'unsigned char' <IntegralCast>
|   |       `-BinaryOperator 0x16ac21f9678 <col:22, col:53> 'int' '^'
|   |         |-ImplicitCastExpr 0x16ac21f9630 <col:22, col:43> 'int' <IntegralCast>
|   |         | `-ParenExpr 0x16ac21f9580 <col:22, col:43> 'unsigned char'
|   |         |   `-BinaryOperator 0x16ac21f9560 <col:23, col:42> 'unsigned char' '='
|   |         |     |-ArraySubscriptExpr 0x16ac21f9498 <col:23, col:34> 'unsigned char' lvalue
|   |         |     | |-ImplicitCastExpr 0x16ac21f9480 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   |         |     | | `-DeclRefExpr 0x16ac21f93e0 <col:23> 'unsigned char [33]' lvalue Var 0x16ac21f8710 'ovec' 'unsigned char [33]'
|   |         |     | `-BinaryOperator 0x16ac21f9460 <col:28, col:33> 'int' '+'
|   |         |     |   |-IntegerLiteral 0x16ac21f9400 <col:28> 'int' 16
|   |         |     |   `-ImplicitCastExpr 0x16ac21f9448 <col:33> 'int' <LValueToRValue>
|   |         |     |     `-DeclRefExpr 0x16ac21f9428 <col:33> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   |         |     `-ImplicitCastExpr 0x16ac21f9548 <col:38, col:42> 'unsigned char' <LValueToRValue>
|   |         |       `-ArraySubscriptExpr 0x16ac21f9528 <col:38, col:42> 'const unsigned char' lvalue
|   |         |         |-ImplicitCastExpr 0x16ac21f94f8 <col:38> 'const unsigned char *' <LValueToRValue>
|   |         |         | `-DeclRefExpr 0x16ac21f94b8 <col:38> 'const unsigned char *' lvalue ParmVar 0x16ac21eff78 'in' 'const unsigned char *'
|   |         |         `-ImplicitCastExpr 0x16ac21f9510 <col:41> 'int' <LValueToRValue>
|   |         |           `-DeclRefExpr 0x16ac21f94d8 <col:41> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   |         `-ImplicitCastExpr 0x16ac21f9660 <col:47, col:53> 'int' <IntegralCast>
|   |           `-ImplicitCastExpr 0x16ac21f9648 <col:47, col:53> 'unsigned char' <LValueToRValue>
|   |             `-ArraySubscriptExpr 0x16ac21f9610 <col:47, col:53> 'unsigned char' lvalue
|   |               |-ImplicitCastExpr 0x16ac21f95e0 <col:47> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x16ac21f95a0 <col:47> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21f80b0 'ivec' 'unsigned char *':'unsigned char *'
|   |               `-ImplicitCastExpr 0x16ac21f95f8 <col:52> 'int' <LValueToRValue>
|   |                 `-DeclRefExpr 0x16ac21f95c0 <col:52> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|   |-BinaryOperator 0x16ac21f97e8 <line:161:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x16ac21f9730 <col:5> 'int' lvalue Var 0x16ac21f84c0 'rem' 'int'
|   | `-BinaryOperator 0x16ac21f97c8 <col:11, col:19> 'int' '%'
|   |   |-ImplicitCastExpr 0x16ac21f97b0 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x16ac21f9768 <col:11> 'int' lvalue ParmVar 0x16ac21f0078 'nbits' 'int'
|   |   `-IntegerLiteral 0x16ac21f9788 <col:19> 'int' 8
|   |-BinaryOperator 0x16ac21f98a8 <line:162:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x16ac21f9808 <col:5> 'int' lvalue Var 0x16ac21f8540 'num' 'int'
|   | `-BinaryOperator 0x16ac21f9888 <col:11, col:19> 'int' '/'
|   |   |-ImplicitCastExpr 0x16ac21f9870 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x16ac21f9828 <col:11> 'int' lvalue ParmVar 0x16ac21f0078 'nbits' 'int'
|   |   `-IntegerLiteral 0x16ac21f9848 <col:19> 'int' 8
|   `-IfStmt 0x16ac21f3090 <line:163:5, line:167:75> has_else
|     |-BinaryOperator 0x16ac21f9928 <line:163:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x16ac21f9910 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x16ac21f98c8 <col:9> 'int' lvalue Var 0x16ac21f84c0 'rem' 'int'
|     | `-IntegerLiteral 0x16ac21f98e8 <col:16> 'int' 0
|     |-CallExpr 0x16ac21f9a70 <line:164:9, col:36> 'void *'
|     | |-ImplicitCastExpr 0x16ac21f9a58 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x16ac21f9948 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x16ac2173f28 'memcpy' 'void *(void *, const void *, unsigned long long)'
|     | |-ImplicitCastExpr 0x16ac21f9ac0 <col:16> 'void *' <BitCast>
|     | | `-ImplicitCastExpr 0x16ac21f9aa8 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|     | |   `-DeclRefExpr 0x16ac21f9968 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21f80b0 'ivec' 'unsigned char *':'unsigned char *'
|     | |-ImplicitCastExpr 0x16ac21f9ad8 <col:22, col:29> 'const void *' <BitCast>
|     | | `-BinaryOperator 0x16ac21f99f8 <col:22, col:29> 'unsigned char *' '+'
|     | |   |-ImplicitCastExpr 0x16ac21f99c8 <col:22> 'unsigned char *' <ArrayToPointerDecay>
|     | |   | `-DeclRefExpr 0x16ac21f9988 <col:22> 'unsigned char [33]' lvalue Var 0x16ac21f8710 'ovec' 'unsigned char [33]'
|     | |   `-ImplicitCastExpr 0x16ac21f99e0 <col:29> 'int' <LValueToRValue>
|     | |     `-DeclRefExpr 0x16ac21f99a8 <col:29> 'int' lvalue Var 0x16ac21f8540 'num' 'int'
|     | `-ImplicitCastExpr 0x16ac21f9af0 <col:34> 'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x16ac21f9a18 <col:34> 'int' 16
|     `-ForStmt 0x16ac21f3058 <line:166:9, line:167:75>
|       |-BinaryOperator 0x16ac21f9b50 <line:166:14, col:18> 'int' '='
|       | |-DeclRefExpr 0x16ac21f9b08 <col:14> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|       | `-IntegerLiteral 0x16ac21f9b28 <col:18> 'int' 0
|       |-<<<NULL>>>
|       |-BinaryOperator 0x16ac21f9bd0 <col:21, col:25> 'int' '<'
|       | |-ImplicitCastExpr 0x16ac21f9bb8 <col:21> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x16ac21f9b70 <col:21> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|       | `-IntegerLiteral 0x16ac21f9b90 <col:25> 'int' 16
|       |-UnaryOperator 0x16ac21f9c10 <col:29, col:31> 'int' prefix '++'
|       | `-DeclRefExpr 0x16ac21f9bf0 <col:31> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|       `-BinaryOperator 0x16ac21f3038 <line:167:13, col:75> 'unsigned char' '='
|         |-ArraySubscriptExpr 0x16ac21f9c98 <col:13, col:19> 'unsigned char' lvalue
|         | |-ImplicitCastExpr 0x16ac21f9c68 <col:13> 'unsigned char *':'unsigned char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x16ac21f9c28 <col:13> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x16ac21f80b0 'ivec' 'unsigned char *':'unsigned char *'
|         | `-ImplicitCastExpr 0x16ac21f9c80 <col:18> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x16ac21f9c48 <col:18> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|         `-ImplicitCastExpr 0x16ac21f3020 <col:23, col:75> 'unsigned char' <IntegralCast>
|           `-BinaryOperator 0x16ac21f3000 <col:23, col:75> 'int' '|'
|             |-BinaryOperator 0x16ac21f9e08 <col:23, col:40> 'int' '<<'
|             | |-ImplicitCastExpr 0x16ac21f9dd8 <col:23, col:35> 'int' <IntegralCast>
|             | | `-ImplicitCastExpr 0x16ac21f9dc0 <col:23, col:35> 'unsigned char' <LValueToRValue>
|             | |   `-ArraySubscriptExpr 0x16ac21f9d80 <col:23, col:35> 'unsigned char' lvalue
|             | |     |-ImplicitCastExpr 0x16ac21f9d68 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|             | |     | `-DeclRefExpr 0x16ac21f9cb8 <col:23> 'unsigned char [33]' lvalue Var 0x16ac21f8710 'ovec' 'unsigned char [33]'
|             | |     `-BinaryOperator 0x16ac21f9d48 <col:28, col:32> 'int' '+'
|             | |       |-ImplicitCastExpr 0x16ac21f9d18 <col:28> 'int' <LValueToRValue>
|             | |       | `-DeclRefExpr 0x16ac21f9cd8 <col:28> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|             | |       `-ImplicitCastExpr 0x16ac21f9d30 <col:32> 'int' <LValueToRValue>
|             | |         `-DeclRefExpr 0x16ac21f9cf8 <col:32> 'int' lvalue Var 0x16ac21f8540 'num' 'int'
|             | `-ImplicitCastExpr 0x16ac21f9df0 <col:40> 'int' <LValueToRValue>
|             |   `-DeclRefExpr 0x16ac21f9da0 <col:40> 'int' lvalue Var 0x16ac21f84c0 'rem' 'int'
|             `-BinaryOperator 0x16ac21f2fe0 <col:46, col:75> 'int' '>>'
|               |-ImplicitCastExpr 0x16ac21f2fc8 <col:46, col:62> 'int' <IntegralCast>
|               | `-ImplicitCastExpr 0x16ac21f2fb0 <col:46, col:62> 'unsigned char' <LValueToRValue>
|               |   `-ArraySubscriptExpr 0x16ac21f9f38 <col:46, col:62> 'unsigned char' lvalue
|               |     |-ImplicitCastExpr 0x16ac21f9f20 <col:46> 'unsigned char *' <ArrayToPointerDecay>
|               |     | `-DeclRefExpr 0x16ac21f9e28 <col:46> 'unsigned char [33]' lvalue Var 0x16ac21f8710 'ovec' 'unsigned char [33]'
|               |     `-BinaryOperator 0x16ac21f9f00 <col:51, col:61> 'int' '+'
|               |       |-BinaryOperator 0x16ac21f9eb8 <col:51, col:55> 'int' '+'
|               |       | |-ImplicitCastExpr 0x16ac21f9e88 <col:51> 'int' <LValueToRValue>
|               |       | | `-DeclRefExpr 0x16ac21f9e48 <col:51> 'int' lvalue Var 0x16ac21f8440 'n' 'int'
|               |       | `-ImplicitCastExpr 0x16ac21f9ea0 <col:55> 'int' <LValueToRValue>
|               |       |   `-DeclRefExpr 0x16ac21f9e68 <col:55> 'int' lvalue Var 0x16ac21f8540 'num' 'int'
|               |       `-IntegerLiteral 0x16ac21f9ed8 <col:61> 'int' 1
|               `-ParenExpr 0x16ac21f2f90 <col:67, col:75> 'int'
|                 `-BinaryOperator 0x16ac21f9fb8 <col:68, col:72> 'int' '-'
|                   |-IntegerLiteral 0x16ac21f9f58 <col:68> 'int' 8
|                   `-ImplicitCastExpr 0x16ac21f9fa0 <col:72> 'int' <LValueToRValue>
|                     `-DeclRefExpr 0x16ac21f9f80 <col:72> 'int' lvalue Var 0x16ac21f84c0 'rem' 'int'
|-FunctionDecl 0x16ac21f35b8 <line:173:1, line:187:1> line:173:6 invalid CRYPTO_cfb128_1_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
| |-ParmVarDecl 0x16ac21f3128 <col:30, col:51> col:51 used in 'const unsigned char *'
| |-ParmVarDecl 0x16ac21f31a8 <col:55, col:70> col:70 used out 'unsigned char *'
| |-ParmVarDecl 0x16ac21f3220 <line:174:30, col:37> col:37 used bits 'size_t':'unsigned long long'
| |-ParmVarDecl 0x16ac21f32a0 <col:43, col:55> col:55 used key 'const void *'
| |-ParmVarDecl 0x16ac21f3370 <line:175:30, col:51> col:44 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x16ac21f33f0 <col:54, col:59> col:59 num 'int *'
| |-ParmVarDecl 0x16ac21f3470 <line:176:30, col:34> col:34 used enc 'int'
| |-ParmVarDecl 0x16ac21f34f0 <col:39, col:50> col:50 invalid block 'int'
| `-CompoundStmt 0x16ac21f67e8 <line:177:1, line:187:1>
|   |-DeclStmt 0x16ac21f3728 <line:178:5, col:13>
|   | `-VarDecl 0x16ac21f36c0 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x16ac21f3930 <line:179:5, col:29>
|   | |-VarDecl 0x16ac21f37e0 <col:5, col:22> col:19 used c 'unsigned char [1]'
|   | `-VarDecl 0x16ac21f38b0 <col:5, col:28> col:25 used d 'unsigned char [1]'
|   `-ForStmt 0x16ac21f67b0 <line:181:5, line:186:5>
|     |-BinaryOperator 0x16ac21f39c0 <line:181:10, col:14> 'size_t':'unsigned long long' '='
|     | |-DeclRefExpr 0x16ac21f3948 <col:10> 'size_t':'unsigned long long' lvalue Var 0x16ac21f36c0 'n' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x16ac21f39a8 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x16ac21f3980 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x16ac21f3a68 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x16ac21f3a38 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|     | | `-DeclRefExpr 0x16ac21f39e0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x16ac21f36c0 'n' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x16ac21f3a50 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x16ac21f3a00 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x16ac21f3220 'bits' 'size_t':'unsigned long long'
|     |-UnaryOperator 0x16ac21f3aa8 <col:27, col:29> 'size_t':'unsigned long long' prefix '++'
|     | `-DeclRefExpr 0x16ac21f3a88 <col:29> 'size_t':'unsigned long long' lvalue Var 0x16ac21f36c0 'n' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x16ac21f6790 <col:32, line:186:5>
|       |-BinaryOperator 0x16ac21f3ee8 <line:182:9, col:58> 'unsigned char' '='
|       | |-ArraySubscriptExpr 0x16ac21f3b38 <col:9, col:12> 'unsigned char' lvalue
|       | | |-ImplicitCastExpr 0x16ac21f3b20 <col:9> 'unsigned char *' <ArrayToPointerDecay>
|       | | | `-DeclRefExpr 0x16ac21f3ac0 <col:9> 'unsigned char [1]' lvalue Var 0x16ac21f37e0 'c' 'unsigned char [1]'
|       | | `-IntegerLiteral 0x16ac21f3af8 <col:11> 'int' 0
|       | `-ImplicitCastExpr 0x16ac21f3ed0 <col:16, col:58> 'unsigned char' <IntegralCast>
|       |   `-ConditionalOperator 0x16ac21f3ea0 <col:16, col:58> 'int'
|       |     |-ParenExpr 0x16ac21f3e30 <col:16, col:47> 'int'
|       |     | `-BinaryOperator 0x16ac21f3e10 <col:17, col:46> 'int' '&'
|       |     |   |-ImplicitCastExpr 0x16ac21f3df8 <col:17, col:25> 'int' <IntegralCast>
|       |     |   | `-ImplicitCastExpr 0x16ac21f3de0 <col:17, col:25> 'unsigned char' <LValueToRValue>
|       |     |   |   `-ArraySubscriptExpr 0x16ac21f3c40 <col:17, col:25> 'const unsigned char' lvalue
|       |     |   |     |-ImplicitCastExpr 0x16ac21f3c28 <col:17> 'const unsigned char *' <LValueToRValue>
|       |     |   |     | `-DeclRefExpr 0x16ac21f3b58 <col:17> 'const unsigned char *' lvalue ParmVar 0x16ac21f3128 'in' 'const unsigned char *'
|       |     |   |     `-BinaryOperator 0x16ac21f3c08 <col:20, col:24> 'unsigned long long' '/'
|       |     |   |       |-ImplicitCastExpr 0x16ac21f3bd8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|       |     |   |       | `-DeclRefExpr 0x16ac21f3b90 <col:20> 'size_t':'unsigned long long' lvalue Var 0x16ac21f36c0 'n' 'size_t':'unsigned long long'
|       |     |   |       `-ImplicitCastExpr 0x16ac21f3bf0 <col:24> 'unsigned long long' <IntegralCast>
|       |     |   |         `-IntegerLiteral 0x16ac21f3bb0 <col:24> 'int' 8
|       |     |   `-ParenExpr 0x16ac21f3dc0 <col:29, col:46> 'int'
|       |     |     `-BinaryOperator 0x16ac21f3da0 <col:30, col:45> 'int' '<<'
|       |     |       |-IntegerLiteral 0x16ac21f3c60 <col:30> 'int' 1
|       |     |       `-ParenExpr 0x16ac21f3d80 <col:35, col:45> 'unsigned long long'
|       |     |         `-BinaryOperator 0x16ac21f3d60 <col:36, col:44> 'unsigned long long' '-'
|       |     |           |-ImplicitCastExpr 0x16ac21f3d48 <col:36> 'unsigned long long' <IntegralCast>
|       |     |           | `-IntegerLiteral 0x16ac21f3c88 <col:36> 'int' 7
|       |     |           `-BinaryOperator 0x16ac21f3d28 <col:40, col:44> 'unsigned long long' '%'
|       |     |             |-ImplicitCastExpr 0x16ac21f3cf8 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|       |     |             | `-DeclRefExpr 0x16ac21f3cb0 <col:40> 'size_t':'unsigned long long' lvalue Var 0x16ac21f36c0 'n' 'size_t':'unsigned long long'
|       |     |             `-ImplicitCastExpr 0x16ac21f3d10 <col:44> 'unsigned long long' <IntegralCast>
|       |     |               `-IntegerLiteral 0x16ac21f3cd0 <col:44> 'int' 8
|       |     |-IntegerLiteral 0x16ac21f3e50 <col:51> 'int' 128
|       |     `-IntegerLiteral 0x16ac21f3e78 <col:58> 'int' 0
|       `-BinaryOperator 0x16ac21f6770 <line:184:9, line:185:52> 'unsigned char' '='
|         |-ArraySubscriptExpr 0x16ac21f6150 <line:184:9, col:18> 'unsigned char' lvalue
|         | |-ImplicitCastExpr 0x16ac21f6138 <col:9> 'unsigned char *' <LValueToRValue>
|         | | `-DeclRefExpr 0x16ac21f6068 <col:9> 'unsigned char *' lvalue ParmVar 0x16ac21f31a8 'out' 'unsigned char *'
|         | `-BinaryOperator 0x16ac21f6118 <col:13, col:17> 'unsigned long long' '/'
|         |   |-ImplicitCastExpr 0x16ac21f60e8 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|         |   | `-DeclRefExpr 0x16ac21f60a0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x16ac21f36c0 'n' 'size_t':'unsigned long long'
|         |   `-ImplicitCastExpr 0x16ac21f6100 <col:17> 'unsigned long long' <IntegralCast>
|         |     `-IntegerLiteral 0x16ac21f60c0 <col:17> 'int' 8
|         `-ImplicitCastExpr 0x16ac21f6758 <col:22, line:185:52> 'unsigned char' <IntegralCast>
|           `-BinaryOperator 0x16ac21f6738 <line:184:22, line:185:52> 'int' '|'
|             |-ParenExpr 0x16ac21f64a8 <line:184:22, col:69> 'int'
|             | `-BinaryOperator 0x16ac21f6488 <col:23, col:68> 'int' '&'
|             |   |-ImplicitCastExpr 0x16ac21f6470 <col:23, col:32> 'int' <IntegralCast>
|             |   | `-ImplicitCastExpr 0x16ac21f6458 <col:23, col:32> 'unsigned char' <LValueToRValue>
|             |   |   `-ArraySubscriptExpr 0x16ac21f6240 <col:23, col:32> 'unsigned char' lvalue
|             |   |     |-ImplicitCastExpr 0x16ac21f6228 <col:23> 'unsigned char *' <LValueToRValue>
|             |   |     | `-DeclRefExpr 0x16ac21f6170 <col:23> 'unsigned char *' lvalue ParmVar 0x16ac21f31a8 'out' 'unsigned char *'
|             |   |     `-BinaryOperator 0x16ac21f6208 <col:27, col:31> 'unsigned long long' '/'
|             |   |       |-ImplicitCastExpr 0x16ac21f61d8 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|             |   |       | `-DeclRefExpr 0x16ac21f6190 <col:27> 'size_t':'unsigned long long' lvalue Var 0x16ac21f36c0 'n' 'size_t':'unsigned long long'
|             |   |       `-ImplicitCastExpr 0x16ac21f61f0 <col:31> 'unsigned long long' <IntegralCast>
|             |   |         `-IntegerLiteral 0x16ac21f61b0 <col:31> 'int' 8
|             |   `-UnaryOperator 0x16ac21f6440 <col:36, col:68> 'int' prefix '~' cannot overflow
|             |     `-ParenExpr 0x16ac21f6420 <col:37, col:68> 'int'
|             |       `-BinaryOperator 0x16ac21f6400 <col:38, col:67> 'int' '<<'
|             |         |-IntegerLiteral 0x16ac21f6260 <col:38> 'int' 1
|             |         `-CStyleCastExpr 0x16ac21f63d8 <col:43, col:67> 'unsigned int' <IntegralCast>
|             |           `-ParenExpr 0x16ac21f63b8 <col:57, col:67> 'unsigned long long'
|             |             `-BinaryOperator 0x16ac21f6360 <col:58, col:66> 'unsigned long long' '-'
|             |               |-ImplicitCastExpr 0x16ac21f6348 <col:58> 'unsigned long long' <IntegralCast>
|             |               | `-IntegerLiteral 0x16ac21f6288 <col:58> 'int' 7
|             |               `-BinaryOperator 0x16ac21f6328 <col:62, col:66> 'unsigned long long' '%'
|             |                 |-ImplicitCastExpr 0x16ac21f62f8 <col:62> 'size_t':'unsigned long long' <LValueToRValue>
|             |                 | `-DeclRefExpr 0x16ac21f62b0 <col:62> 'size_t':'unsigned long long' lvalue Var 0x16ac21f36c0 'n' 'size_t':'unsigned long long'
|             |                 `-ImplicitCastExpr 0x16ac21f6310 <col:66> 'unsigned long long' <IntegralCast>
|             |                   `-IntegerLiteral 0x16ac21f62d0 <col:66> 'int' 8
|             `-ParenExpr 0x16ac21f6718 <line:185:13, col:52> 'int'
|               `-BinaryOperator 0x16ac21f66f8 <col:14, col:51> 'int' '>>'
|                 |-ParenExpr 0x16ac21f65c0 <col:14, col:26> 'int'
|                 | `-BinaryOperator 0x16ac21f65a0 <col:15, col:22> 'int' '&'
|                 |   |-ImplicitCastExpr 0x16ac21f6588 <col:15, col:18> 'int' <IntegralCast>
|                 |   | `-ImplicitCastExpr 0x16ac21f6570 <col:15, col:18> 'unsigned char' <LValueToRValue>
|                 |   |   `-ArraySubscriptExpr 0x16ac21f6528 <col:15, col:18> 'unsigned char' lvalue
|                 |   |     |-ImplicitCastExpr 0x16ac21f6510 <col:15> 'unsigned char *' <ArrayToPointerDecay>
|                 |   |     | `-DeclRefExpr 0x16ac21f64c8 <col:15> 'unsigned char [1]' lvalue Var 0x16ac21f38b0 'd' 'unsigned char [1]'
|                 |   |     `-IntegerLiteral 0x16ac21f64e8 <col:17> 'int' 0
|                 |   `-IntegerLiteral 0x16ac21f6548 <col:22> 'int' 128
|                 `-CStyleCastExpr 0x16ac21f66d0 <col:31, col:51> 'unsigned int' <IntegralCast>
|                   `-ParenExpr 0x16ac21f66b0 <col:45, col:51> 'unsigned long long'
|                     `-BinaryOperator 0x16ac21f6658 <col:46, col:50> 'unsigned long long' '%'
|                       |-ImplicitCastExpr 0x16ac21f6628 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|                       | `-DeclRefExpr 0x16ac21f65e0 <col:46> 'size_t':'unsigned long long' lvalue Var 0x16ac21f36c0 'n' 'size_t':'unsigned long long'
|                       `-ImplicitCastExpr 0x16ac21f6640 <col:50> 'unsigned long long' <IntegralCast>
|                         `-IntegerLiteral 0x16ac21f6600 <col:50> 'int' 8
`-FunctionDecl 0x16ac21f6cd0 <line:189:1, line:198:1> line:189:6 invalid CRYPTO_cfb128_8_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, int *, int, int)'
  |-ParmVarDecl 0x16ac21f6840 <col:30, col:51> col:51 used in 'const unsigned char *'
  |-ParmVarDecl 0x16ac21f68c0 <col:55, col:70> col:70 used out 'unsigned char *'
  |-ParmVarDecl 0x16ac21f6938 <line:190:30, col:37> col:37 used length 'size_t':'unsigned long long'
  |-ParmVarDecl 0x16ac21f69b8 <col:45, col:57> col:57 used key 'const void *'
  |-ParmVarDecl 0x16ac21f6a88 <line:191:30, col:51> col:44 used ivec 'unsigned char *':'unsigned char *'
  |-ParmVarDecl 0x16ac21f6b08 <col:54, col:59> col:59 num 'int *'
  |-ParmVarDecl 0x16ac21f6b88 <line:192:30, col:34> col:34 used enc 'int'
  |-ParmVarDecl 0x16ac21f6c08 <col:39, col:50> col:50 invalid block 'int'
  `-CompoundStmt 0x16ac21f7238 <line:193:1, line:198:1>
    `-DeclStmt 0x16ac21f6e40 <line:194:5, col:13>
      `-VarDecl 0x16ac21f6dd8 <col:5, col:12> col:12 used n 'size_t':'unsigned long long'
