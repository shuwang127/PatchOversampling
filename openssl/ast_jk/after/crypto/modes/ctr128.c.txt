TranslationUnitDecl 0x1d5528c3858 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1d5528c40f0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1d5528c3df0 '__int128'
|-TypedefDecl 0x1d5528c4160 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1d5528c3e10 'unsigned __int128'
|-TypedefDecl 0x1d5528c4498 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1d5528c4250 'struct __NSConstantString_tag'
|   `-Record 0x1d5528c41b8 '__NSConstantString_tag'
|-TypedefDecl 0x1d5528c4508 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x1d5528c3a30 'unsigned long long'
|-TypedefDecl 0x1d5528c45a0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1d5528c4560 'char *'
|   `-BuiltinType 0x1d5528c38f0 'char'
|-TypedefDecl 0x1d5528c4610 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1d5528c4560 'char *'
|   `-BuiltinType 0x1d5528c38f0 'char'
|-TypedefDecl 0x1d5528c4680 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x1d5528c3990 'long long'
|-TypedefDecl 0x1d5528c46f0 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x1d5528c3a30 'unsigned long long'
|-TypedefDecl 0x1d5528c4760 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x1d5528c39f0 'unsigned int'
|-TypedefDecl 0x1d5528c47d0 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x1d5528c39b0 'unsigned char'
|-RecordDecl 0x1d554323db0 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x1d554323ea0 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x1d554323f08 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x1d554323fb8 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x1d554323f60 'struct u128' sugar
|   `-RecordType 0x1d554323e50 'u128'
|     `-Record 0x1d554323db0 ''
|-RecordDecl 0x1d554324028 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x1d5543240e0 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x1d554324278 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x1d5543243c8 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x1d554324518 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x1d554324698 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x1d554324748 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d5543247c0 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d554324838 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d5543248b0 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d554324928 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d5543249a0 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d554324b58 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x1d55432c0a8 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x1d55432c5b8 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x1d55432c628 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x1d55432c698 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x1d55432c708 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1d55432c778 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1d55432c838 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x1d55432c908 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x1d55432c978 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x1d55432c9e8 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x1d55432ca58 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x1d55432cab0 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x1d55432cb70 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x1d55432cc90 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x1d55432cd48 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x1d554330e80 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1d554330ef8 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1d554330f60 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x1d554330fd0 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1d554331040 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1d5543310f0 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x1d554331210 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x1d5543312d0 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x1d554331388 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x1d554331330 'union OCB_BLOCK' sugar
|   `-RecordType 0x1d554331190 'OCB_BLOCK'
|     `-Record 0x1d5543310f0 ''
|-RecordDecl 0x1d5543313f8 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x1d5543314c8 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x1d554331538 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x1d5543315a8 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x1d554331618 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x1d554331688 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x1d5543316f0 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1d554331758 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1d5543317e0 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1d554331848 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1d554331908 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x1d554331960 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x1d554331a30 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x1d554331a98 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x1d554331b00 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1d554331b68 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1d554331bd0 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x1d554331c38 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x1d554331ce8 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x1d554331da8 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1d5528c3a30 'unsigned long long'
|-TypedefDecl 0x1d554331e18 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1d5528c4560 'char *'
|   `-BuiltinType 0x1d5528c38f0 'char'
|-FunctionDecl 0x1d554434a70 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d554434b10 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1d554434b80 <col:21> Implicit
|-FunctionDecl 0x1d554434bd8 prev 0x1d554434a70 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d554434908 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1d554434cc8 <col:21> Inherited Implicit
|-TypedefDecl 0x1d554434d08 prev 0x1d5528c4508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1d5528c3a30 'unsigned long long'
|-TypedefDecl 0x1d554434db0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1d554434d80 'size_t' sugar
|   |-Typedef 0x1d554434d08 'size_t'
|   `-BuiltinType 0x1d5528c3a30 'unsigned long long'
|-TypedefDecl 0x1d554434e20 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1d5528c3990 'long long'
|-TypedefDecl 0x1d554434e90 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1d5528c3990 'long long'
|-TypedefDecl 0x1d554434f00 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1d5528c39d0 'unsigned short'
|-TypedefDecl 0x1d554434f70 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1d5528c39d0 'unsigned short'
|-TypedefDecl 0x1d554434fe0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1d5528c39d0 'unsigned short'
|-TypedefDecl 0x1d554435050 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1d5528c3950 'int'
|-TypedefDecl 0x1d5544350c0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1d5528c3970 'long'
|-TypedefDecl 0x1d554435130 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1d5528c3990 'long long'
|-TypedefDecl 0x1d5544351c0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1d554435190 '__time64_t' sugar
|   |-Typedef 0x1d554435130 '__time64_t'
|   `-BuiltinType 0x1d5528c3990 'long long'
|-FunctionDecl 0x1d554435338 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1d554435558 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1d554431ae0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1d554435698 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1d554435710 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1d554435788 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1d554435808 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1d554431880 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1d554431bc0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1d554431c80 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1d554431df0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1d554431da0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1d554431d40 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1d554431c60 'struct threadlocaleinfostruct'
|       `-Record 0x1d55443d910 'threadlocaleinfostruct'
|-TypedefDecl 0x1d554431f00 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1d554431eb0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1d554431e50 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1d554431d20 'struct threadmbcinfostruct'
|       `-Record 0x1d554431c80 'threadmbcinfostruct'
|-RecordDecl 0x1d554431f58 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1d554432010 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1d5544320d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d554432160 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1d5544321f0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1d5544322a8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1d554432250 'struct localeinfo_struct' sugar
|   `-RecordType 0x1d5544320b0 'struct localeinfo_struct'
|     `-Record 0x1d554432010 'localeinfo_struct'
|-TypedefDecl 0x1d554432380 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1d554432330 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1d554432250 'struct localeinfo_struct' sugar
|     `-RecordType 0x1d5544320b0 'struct localeinfo_struct'
|       `-Record 0x1d554432010 'localeinfo_struct'
|-RecordDecl 0x1d5544323f8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1d5544324b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d554432528 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1d5544325e8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1d554432680 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1d5544326f0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1d5544327a8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1d554432750 'struct localerefcount' sugar
|   `-RecordType 0x1d554432490 'struct localerefcount'
|     `-Record 0x1d5544323f8 'localerefcount'
|-RecordDecl 0x1d55443d910 prev 0x1d554431bc0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1d55443d990 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d55443da08 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1d55443da78 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1d55443dae8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1d55443db58 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1d55443dd18 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1d55443dd88 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1d55443ddf8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1d55443de68 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1d55443ded8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1d55443df48 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1d55443dfa0 parent 0x1d5528c3858 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1d55443e130 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1d55443e1a0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1d55443e210 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1d55443e280 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1d55443e2f0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1d55443e360 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1d55443e470 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1d55443e5a8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1d55443e658 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1d55443e600 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1d554431c60 'struct threadlocaleinfostruct'
|     `-Record 0x1d55443d910 'threadlocaleinfostruct'
|-FunctionDecl 0x1d55444ab70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1d55443e6e0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1d55443e790 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1d55443e810 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1d55443e888 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d55444af38 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1d55444afd8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1d55444b040 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1d55444b0a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d55444b128 prev 0x1d55444af38 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1d55444ac60 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1d55444ace0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1d55444ad58 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d55444b4e8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1d55444b210 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1d55444b290 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1d55444b308 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d554444980 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d55444b5d0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1d55444b650 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1d55444b6c8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d55444b760 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d554444c88 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1d554444d28 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1d554444d90 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1d554444df8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d554444e78 prev 0x1d554444c88 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1d554444a70 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1d554444af0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1d554444b68 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d554445238 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1d5544452d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d554445340 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1d5544453a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d554445428 prev 0x1d554445238 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1d554444f60 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1d554444fe0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1d554445058 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544458c8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1d554445538 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1d5544455d0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d554445650 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1d5544456c8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d554449cf8 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1d554449d98 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d554449e00 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1d554449e68 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d554449ee8 prev 0x1d554449cf8 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1d554449a20 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1d554449aa0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1d554449b18 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d55444a368 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1d55444a408 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d55444a470 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1d55444a4d8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1d55444a540 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d55444a5c8 prev 0x1d55444a368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1d55444a0b0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1d55444a130 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1d55444a1b0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1d55444a228 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d55444a688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1d554447a50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1d55444a850 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1d55444a8d0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1d55444a948 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d554447b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1d554447f00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1d554447c30 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1d554447ca8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d554447d28 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1d5544482d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1d5544480e0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1d554448160 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1d554448380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d554448790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1d5544484c8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1d554448540 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544485c0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1d55444bbe0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1d55444bc80 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1d55444bce8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d55444bd60 prev 0x1d55444bbe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1d55444b9f0 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1d55444ba70 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1d55444be10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d55444c168 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1d55444bf58 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1d55444bfd0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1d55444c050 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1d55444c490 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1d55444c530 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1d55444c598 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d55444c610 prev 0x1d55444c490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1d55444c310 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1d55444c390 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1d55444c6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544489c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1d554448a60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d554448ac8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d554448b40 prev 0x1d5544489c0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1d55444c808 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1d55444c888 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1d554448d90 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1d554448e30 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d554448ea0 prev 0x1d554448d90 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1d554448c20 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1d554449198 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1d554448f78 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1d554448ff0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544493e8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1d554449278 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1d5544492f0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1d554449718 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1d554449708 <line:132:5, col:51>
|     `-ConditionalOperator 0x1d5544496d8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1d554449548 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1d554449528 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1d5544494f8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1d5544494b0 <col:13> 'const char *' lvalue ParmVar 0x1d554449278 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1d554449510 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1d5544494d0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1d5544496c0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1d554449568 <col:24> 'int' 0
|       `-CallExpr 0x1d554449660 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1d554449648 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1d554449590 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1d554449198 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1d554449690 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1d5544495b0 <col:36> 'const char *' lvalue ParmVar 0x1d554449278 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1d5544496a8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1d5544495d0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544492f0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544459d8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1d554449748 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1d5544497c0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d554449840 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1d5544498b8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d554445ce0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1d554445d80 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d554445de8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1d554445e50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d554445ed0 prev 0x1d554445ce0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1d554445ac8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1d554445b48 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1d554445bc0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d554446108 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1d554445fb8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1d5544463d0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1d554446470 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d5544464d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1d554446550 prev 0x1d5544463d0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1d5544461e0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1d554446260 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1d5544467b0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d554446630 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1d5544466b0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1d554446a20 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d554446890 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1d554446910 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1d554446dd8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1d554446b00 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1d554446b80 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1d554446bf8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d554447040 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d554446ec0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1d554446f40 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1d554447338 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1d554447120 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1d5544471a0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1d554447218 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544475a0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d554447420 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1d5544474a0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1d554447898 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1d554447680 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1d554447700 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1d554447778 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d55440a5c8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1d55440a2f0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1d55440a370 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1d55440a3e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d55440aa30 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d55440a6b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1d55440a730 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1d55440a7a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d55440a820 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d55440ad38 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1d55440ab20 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1d55440aba0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1d55440ac18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d55440b0d0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d55440ae20 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1d55440aea0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1d55440af18 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d55440af90 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544a3028 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1d5544a30c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d5544a3130 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d5544a31a8 prev 0x1d5544a3028 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1d55440b1c0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1d55440b240 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1d5544a3460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1d5544a3380 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1d5544a3508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544a38e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1d5544a3650 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1d5544a36c8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544a3748 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1d5544a3bf8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1d5544a3c98 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1d5544a3d08 prev 0x1d5544a3bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1d5544a3ac0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1d5544a3db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544a4140 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1d5544a3f30 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1d5544a3fa8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544a4028 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1d5544a4448 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1d5544a4228 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1d5544a42a0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544a4738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d5544a45e8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1d5544a47e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544a4bf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d5544a4928 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1d5544a49a0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544a4a18 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544a4fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1d5544a4d98 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1d5544a4e10 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d5544a5090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544a5548 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1d5544a51d8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1d5544a5250 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d5544a52d0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1d5544a5348 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d5544a59c8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1d5544a5a68 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d5544a5ad0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d5544a5b38 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d5544a5bb8 prev 0x1d5544a59c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1d5544a56f8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1d5544a5778 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1d5544a57f0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d5544a5c70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544a5ff0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1d5544a6090 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d5544a60f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d5544a6160 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d5544a61e0 prev 0x1d5544a5ff0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1d5544a5db8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1d5544a5e38 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1d5544a5eb0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544a64e0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1d5544a62c8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1d5544a6348 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1d5544a63c0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544a6878 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d5544a65c8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1d5544a6648 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1d5544a66c0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544a6738 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544a6c10 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1d5544a6968 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1d5544a69e0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d5544a6a60 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1d5544a6ad8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d5544a6fe8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1d5544a7088 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d5544a70f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d5544a7158 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d5544a71d8 prev 0x1d5544a6fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1d5544a6dc0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1d5544a6e40 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1d5544a6eb8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d5544a7290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544a7748 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1d5544a73d8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1d5544a7450 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d5544a74d0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1d5544a7548 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544a7bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1d5544a78f8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1d5544a7978 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1d5544a79f0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d5544a7c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544a0f70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1d5544a1010 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d5544a1078 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d5544a10f0 prev 0x1d5544a0f70 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1d5544a7dc8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1d5544a7e48 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1d5544a1350 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1d5544a13f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d5544a1458 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1d5544a14d0 prev 0x1d5544a1350 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1d5544a11d0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1d5544a1250 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1d5544a1690 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1d5544a15b0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1d5544a18e0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1d5544a1980 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d5544a19e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d5544a1a60 prev 0x1d5544a18e0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1d5544a1768 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1d5544a17e8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1d5544a1cc0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1d5544a1d60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d5544a1dc8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d5544a1e40 prev 0x1d5544a1cc0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1d5544a1b40 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1d5544a1bc0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1d5544a0160 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1d5544a0200 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1d5544a0268 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d5544a02e0 prev 0x1d5544a0160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1d55449ffe0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1d5544a0060 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1d5544a0390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544a0778 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1d5544a04d8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1d5544a0558 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1d5544a05d8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1d5544a09d0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1d5544a0860 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1d5544a08d8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544a0c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d5544a0b70 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1d5544a0cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544a8100 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d5544a0e40 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1d5544a7f70 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544a7fe8 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544a8420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1d5544a82a8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1d5544a8320 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d5544a84d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544a88e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1d5544a8980 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d5544a89e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d5544a8a50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d5544a8ad0 prev 0x1d5544a88e0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1d5544a8618 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1d5544a8698 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1d5544a8710 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544a8f80 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d5544a8bb8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1d5544a8c38 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1d5544a8cb0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544a8d28 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544a9230 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1d5544a92d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d5544a9340 prev 0x1d5544a9230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1d5544a9150 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1d5544a93e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1d5544a9730 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d5544a95b0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1d5544a9630 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1d5544a97e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1d5544a9b28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d5544a99a8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1d5544a9a28 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1d5544a9bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1d5544a9e80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d5544a9da0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1d5544a9f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1d5544a22e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1d5544a20d0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1d5544a2150 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1d5544a21c8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d5544a23a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1d5544a2780 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1d5544a2568 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1d5544a25e8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1d5544a2660 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d5544a2838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1d5544a2ae0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d5544a2a00 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1d5544a2b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1d5544acfc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1d5544a2d50 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1d5544a2dd0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1d5544ad070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1d5544ad318 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d5544ad238 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1d5544ad3c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1d5544ad650 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1d5544ad4e0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1d5544ad9e0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1d5544ad720 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d5544ad798 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544ad810 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1d5544add98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544adb80 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d5544adbf8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1d5544ade48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544af1f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1d5544af298 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1d5544af300 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1d5544af378 prev 0x1d5544af1f8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1d5544aefe0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d5544af058 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d5544af670 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1d5544af710 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1d5544af778 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1d5544af7f0 prev 0x1d5544af670 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1d5544af450 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1d5544af4c8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1d5544afad0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1d5544af8c8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d5544af940 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544af9b8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1d5544afde0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544afc70 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d5544afce8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1d5544afe90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544aa1a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544a9f90 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d5544aa008 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1d5544aa3f0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1d5544aa490 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1d5544aa500 prev 0x1d5544aa3f0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1d5544aa280 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1d5544aa7e8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d5544aa5d0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d5544aa648 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544aaa30 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1d5544aa8c0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d5544aa938 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1d5544aadc8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1d5544aadb8 <line:307:5, col:56>
|     `-ConditionalOperator 0x1d5544aad88 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1d5544aabf0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1d5544aabd0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1d5544aaba0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1d5544aaaf8 <col:13> 'const wchar_t *' lvalue ParmVar 0x1d5544aa8c0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1d5544aabb8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1d5544aab80 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1d5544aab58 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1d5544aab18 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1d5544aad70 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1d5544aac10 <col:29> 'int' 0
|       `-CallExpr 0x1d5544aad10 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1d5544aacf8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1d5544aac38 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1d5544aa7e8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1d5544aad40 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1d5544aac58 <col:41> 'const wchar_t *' lvalue ParmVar 0x1d5544aa8c0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1d5544aad58 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1d5544aac78 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544aa938 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544b2218 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1d5544aadf0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d5544aae68 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d5544aaee0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b2010 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d5544b2680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d5544b23c0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d5544b2438 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b24b0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d5544b2738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544b2b48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1d5544b2be8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1d5544b2c50 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1d5544b2cb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d5544b2d38 prev 0x1d5544b2b48 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1d5544b2878 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b28f0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b2968 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544ab058 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1d5544b2e18 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d5544b2e90 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d5544b2f08 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b2f80 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d5544ab408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d5544ab200 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d5544ab278 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1d5544ab2f0 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d5544ab4c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544ab818 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544ab600 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d5544ab678 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1d5544aba60 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1d5544ab8f0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d5544ab968 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d5544abca8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544abb38 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d5544abbb0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1d5544abef0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544abd80 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d5544abdf8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1d5544ae228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544ae0b8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d5544ae130 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1d5544ae2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544ae740 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1d5544ae418 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d5544ae490 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1d5544ae570 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1d5544aea60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1d5544ae8e8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1d5544aeb08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544aef10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1d5544aec48 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1d5544aecc0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544aed40 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1d5544b3220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1d5544b3148 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1d5544b32c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544b3690 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1d5544b3408 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1d5544b3480 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544b34f8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1d5544b38e8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544b3770 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b37e8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1d5544b3c88 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1d5544b39c0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b3a38 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b3ab0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544b3f78 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d5544b3d68 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b3de0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b3e58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544b7410 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d5544b70a0 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b7118 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b7190 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544b7208 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544b7868 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1d5544b74f8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d5544b7570 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d5544b75e8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d5544b7660 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544b7cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1d5544b7a10 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d5544b7a88 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1d5544b7b00 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d5544b7d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544b4030 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1d5544b7ec8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1d5544b43c0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1d5544b4100 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d5544b4178 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544b41f0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d5544b4778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1d5544b4560 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d5544b45d8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1d5544b4828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544b4b88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1d5544b4968 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1d5544b49e0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544b4df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d5544b4d20 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1d5544b4ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544b5300 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d5544b5040 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d5544b50b8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544b5130 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544b56b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1d5544b54a0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1d5544b5518 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d5544b5768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544b5a18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1d5544b58a8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1d5544b5920 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544b5c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d5544b5bb0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1d5544b5d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544b1040 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d5544b5e70 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d5544b5ee8 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544b5f60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544b1350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1d5544b11e0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1d5544b1258 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d5544b1400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d5544b1800 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d5544b1540 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d5544b15b8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b1630 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544b1c48 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d5544b18e0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d5544b1958 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b19d0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544b1a48 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544b1ea8 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544b1d30 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b1da8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1d5544b61e8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1d5544b1f80 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b6050 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b60c8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544b6440 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544b62c8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b6340 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1d5544b6728 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1d5544b6518 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b6590 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b6608 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544b6a18 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d5544b6808 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b6880 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b68f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544b6da0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d5544b6af8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b6b70 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b6be8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544b6c60 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544b0038 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d5544b6e88 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b6f00 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d5544b6f78 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544b03c0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d5544b0118 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b0190 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b0208 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d5544b0280 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d5544b0620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1d5544b0548 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1d5544b06c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1d5544b0a00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544b0888 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b0900 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1d5544b0ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1d5544b0e80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d5544b0c70 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b0ce8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1d5544b0d60 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d5544b0f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1d5544b9400 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1d5544b91f8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d5544b9270 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1d5544b92e8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d5544b94b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1d5544b9750 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d5544b9678 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1d5544b97f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1d5544b9b28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1d5544b99b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d5544b9a30 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1d5544b9bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1d5544b9e70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d5544b9d98 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1d5544b9f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1d5544ba218 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d5544ba140 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1d5544ba2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1d5544ba5f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d5544ba480 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d5544ba4f8 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1d5544ba6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x1d5544ba8d8 <.//openssl//file_jk/after\crypto\modes\ctr128.c:20:1, line:30:1> line:20:13 used ctr128_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x1d5544ba800 <col:24, col:39> col:39 used counter 'unsigned char *'
| `-CompoundStmt 0x1d5544baee8 <line:21:1, line:30:1>
|   |-DeclStmt 0x1d5544bab20 <line:22:5, col:22>
|   | |-VarDecl 0x1d5544ba9a8 <col:5, col:13> col:9 used n 'u32':'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x1d5544baa38 <col:13> 'u32':'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1d5544baa10 <col:13> 'int' 16
|   | `-VarDecl 0x1d5544baa60 <col:5, col:21> col:17 used c 'u32':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1d5544baaf0 <col:21> 'u32':'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x1d5544baac8 <col:21> 'int' 1
|   `-DoStmt 0x1d5544baec8 <line:24:5, line:29:15>
|     |-CompoundStmt 0x1d5544bae60 <line:24:8, line:29:5>
|     | |-UnaryOperator 0x1d5544bab70 <line:25:9, col:11> 'u32':'unsigned int' prefix '--'
|     | | `-DeclRefExpr 0x1d5544bab38 <col:11> 'u32':'unsigned int' lvalue Var 0x1d5544ba9a8 'n' 'u32':'unsigned int'
|     | |-CompoundAssignOperator 0x1d5544bac80 <line:26:9, col:23> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|     | | |-DeclRefExpr 0x1d5544bab88 <col:9> 'u32':'unsigned int' lvalue Var 0x1d5544baa60 'c' 'u32':'unsigned int'
|     | | `-ImplicitCastExpr 0x1d5544bac68 <col:14, col:23> 'unsigned int' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x1d5544bac50 <col:14, col:23> 'unsigned char' <LValueToRValue>
|     | |     `-ArraySubscriptExpr 0x1d5544bac30 <col:14, col:23> 'unsigned char' lvalue
|     | |       |-ImplicitCastExpr 0x1d5544bac00 <col:14> 'unsigned char *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x1d5544babc0 <col:14> 'unsigned char *' lvalue ParmVar 0x1d5544ba800 'counter' 'unsigned char *'
|     | |       `-ImplicitCastExpr 0x1d5544bac18 <col:22> 'u32':'unsigned int' <LValueToRValue>
|     | |         `-DeclRefExpr 0x1d5544babe0 <col:22> 'u32':'unsigned int' lvalue Var 0x1d5544ba9a8 'n' 'u32':'unsigned int'
|     | |-BinaryOperator 0x1d5544badb0 <line:27:9, col:26> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x1d5544bad20 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x1d5544bacf0 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1d5544bacb0 <col:9> 'unsigned char *' lvalue ParmVar 0x1d5544ba800 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x1d5544bad08 <col:17> 'u32':'unsigned int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1d5544bacd0 <col:17> 'u32':'unsigned int' lvalue Var 0x1d5544ba9a8 'n' 'u32':'unsigned int'
|     | | `-CStyleCastExpr 0x1d5544bad88 <col:22, col:26> 'u8':'unsigned char' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x1d5544bad70 <col:26> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|     | |     `-DeclRefExpr 0x1d5544bad40 <col:26> 'u32':'unsigned int' lvalue Var 0x1d5544baa60 'c' 'u32':'unsigned int'
|     | `-CompoundAssignOperator 0x1d5544bae30 <line:28:9, col:15> 'u32':'unsigned int' '>>=' ComputeLHSTy='u32':'unsigned int' ComputeResultTy='u32':'unsigned int'
|     |   |-DeclRefExpr 0x1d5544badd0 <col:9> 'u32':'unsigned int' lvalue Var 0x1d5544baa60 'c' 'u32':'unsigned int'
|     |   `-IntegerLiteral 0x1d5544badf0 <col:15> 'int' 8
|     `-ImplicitCastExpr 0x1d5544baeb0 <line:29:14> 'u32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x1d5544bae90 <col:14> 'u32':'unsigned int' lvalue Var 0x1d5544ba9a8 'n' 'u32':'unsigned int'
|-FunctionDecl 0x1d5544bafc8 <line:33:1, line:57:1> line:33:13 used ctr128_inc_aligned 'void (unsigned char *)' static
| |-ParmVarDecl 0x1d5544baf20 <col:32, col:47> col:47 used counter 'unsigned char *'
| `-CompoundStmt 0x1d5544bc108 <line:34:1, line:57:1>
|   |-DeclStmt 0x1d5544bb2d0 <line:35:5, col:26>
|   | |-VarDecl 0x1d5544bb0d8 <col:5, col:13> col:13 used data 'size_t *'
|   | |-VarDecl 0x1d5544bb150 <col:5, col:19> col:19 used c 'size_t':'unsigned long long'
|   | |-VarDecl 0x1d5544bb1c8 <col:5, col:22> col:22 used d 'size_t':'unsigned long long'
|   | `-VarDecl 0x1d5544bb240 <col:5, col:25> col:25 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x1d5544bb638 <line:36:5, line:41:6>
|   | |-RecordDecl 0x1d5544bb2e8 <line:36:11, line:39:5> line:36:11 union definition
|   | | |-FieldDecl 0x1d5544bb3b8 <line:37:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x1d5544bb420 <line:38:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x1d5544bb4d8 <line:36:5, line:41:5> line:39:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)' cinit
|   |   `-InitListExpr 0x1d5544bb5c0 <col:19, line:41:5> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)' field Field 0x1d5544bb3b8 'one' 'long'
|   |     `-ImplicitCastExpr 0x1d5544bb608 <line:40:9> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x1d5544bb540 <col:9> 'int' 1
|   |-IfStmt 0x1d5544bb9e0 <line:43:5, line:46:5>
|   | |-BinaryOperator 0x1d5544bb828 <line:43:9, col:67> 'int' '||'
|   | | |-ImplicitCastExpr 0x1d5544bb810 <col:9, col:19> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1d5544bb7f8 <col:9, col:19> 'char' <LValueToRValue>
|   | | |   `-MemberExpr 0x1d5544bb688 <col:9, col:19> 'const char' lvalue .little 0x1d5544bb420
|   | | |     `-DeclRefExpr 0x1d5544bb650 <col:9> 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)' lvalue Var 0x1d5544bb4d8 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)'
|   | | `-BinaryOperator 0x1d5544bb7d8 <col:29, col:67> 'int' '!='
|   | |   |-ParenExpr 0x1d5544bb778 <col:29, col:62> 'unsigned long long'
|   | |   | `-BinaryOperator 0x1d5544bb758 <col:30, col:61> 'unsigned long long' '%'
|   | |   |   |-CStyleCastExpr 0x1d5544bb700 <col:30, col:38> 'size_t':'unsigned long long' <PointerToIntegral>
|   | |   |   | `-ImplicitCastExpr 0x1d5544bb6e8 <col:38> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   |   |   `-DeclRefExpr 0x1d5544bb6b8 <col:38> 'unsigned char *' lvalue ParmVar 0x1d5544baf20 'counter' 'unsigned char *'
|   | |   |   `-UnaryExprOrTypeTraitExpr 0x1d5544bb738 <col:48, col:61> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1d5544bb7c0 <col:67> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1d5544bb798 <col:67> 'int' 0
|   | `-CompoundStmt 0x1d5544bb9c0 <col:70, line:46:5>
|   |   |-CallExpr 0x1d5544bb970 <line:44:9, col:27> 'void'
|   |   | |-ImplicitCastExpr 0x1d5544bb958 <col:9> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1d5544bb8e8 <col:9> 'void (unsigned char *)' Function 0x1d5544ba8d8 'ctr128_inc' 'void (unsigned char *)'
|   |   | `-ImplicitCastExpr 0x1d5544bb998 <col:20> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d5544bb908 <col:20> 'unsigned char *' lvalue ParmVar 0x1d5544baf20 'counter' 'unsigned char *'
|   |   `-ReturnStmt 0x1d5544bb9b0 <line:45:9>
|   |-BinaryOperator 0x1d5544bbaa0 <line:48:5, col:22> 'size_t *' '='
|   | |-DeclRefExpr 0x1d5544bb9f8 <col:5> 'size_t *' lvalue Var 0x1d5544bb0d8 'data' 'size_t *'
|   | `-CStyleCastExpr 0x1d5544bba78 <col:12, col:22> 'size_t *' <BitCast>
|   |   `-ImplicitCastExpr 0x1d5544bba60 <col:22> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1d5544bba30 <col:22> 'unsigned char *' lvalue ParmVar 0x1d5544baf20 'counter' 'unsigned char *'
|   |-BinaryOperator 0x1d5544bbb38 <line:49:5, col:9> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1d5544bbac0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb150 'c' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1d5544bbb20 <col:9> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1d5544bbaf8 <col:9> 'int' 1
|   |-BinaryOperator 0x1d5544bbc20 <line:50:5, col:27> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1d5544bbb58 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb240 'n' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1d5544bbc00 <col:9, col:27> 'unsigned long long' '/'
|   |   |-ImplicitCastExpr 0x1d5544bbbe8 <col:9> 'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x1d5544bbb90 <col:9> 'int' 16
|   |   `-UnaryExprOrTypeTraitExpr 0x1d5544bbbc8 <col:14, col:27> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   `-DoStmt 0x1d5544bc0e8 <line:51:5, line:56:15>
|     |-CompoundStmt 0x1d5544bc078 <line:51:8, line:56:5>
|     | |-UnaryOperator 0x1d5544bbc60 <line:52:9, col:11> 'size_t':'unsigned long long' prefix '--'
|     | | `-DeclRefExpr 0x1d5544bbc40 <col:11> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb240 'n' 'size_t':'unsigned long long'
|     | |-BinaryOperator 0x1d5544bbda8 <line:53:9, col:24> 'size_t':'unsigned long long' '='
|     | | |-DeclRefExpr 0x1d5544bbc78 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb1c8 'd' 'size_t':'unsigned long long'
|     | | `-CompoundAssignOperator 0x1d5544bbd78 <col:13, col:24> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   |-ArraySubscriptExpr 0x1d5544bbd20 <col:13, col:19> 'size_t':'unsigned long long' lvalue
|     | |   | |-ImplicitCastExpr 0x1d5544bbcf0 <col:13> 'size_t *' <LValueToRValue>
|     | |   | | `-DeclRefExpr 0x1d5544bbcb0 <col:13> 'size_t *' lvalue Var 0x1d5544bb0d8 'data' 'size_t *'
|     | |   | `-ImplicitCastExpr 0x1d5544bbd08 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x1d5544bbcd0 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb240 'n' 'size_t':'unsigned long long'
|     | |   `-ImplicitCastExpr 0x1d5544bbd60 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     `-DeclRefExpr 0x1d5544bbd40 <col:24> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb150 'c' 'size_t':'unsigned long long'
|     | `-BinaryOperator 0x1d5544bc058 <line:55:9, col:54> 'size_t':'unsigned long long' '='
|     |   |-DeclRefExpr 0x1d5544bbdc8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb150 'c' 'size_t':'unsigned long long'
|     |   `-BinaryOperator 0x1d5544bc038 <col:13, col:54> 'unsigned long long' '>>'
|     |     |-ParenExpr 0x1d5544bbf08 <col:13, col:26> 'unsigned long long'
|     |     | `-BinaryOperator 0x1d5544bbee8 <col:14, col:25> 'unsigned long long' '&'
|     |     |   |-ParenExpr 0x1d5544bbe78 <col:14, col:20> 'unsigned long long'
|     |     |   | `-BinaryOperator 0x1d5544bbe58 <col:15, col:19> 'unsigned long long' '-'
|     |     |   |   |-ImplicitCastExpr 0x1d5544bbe28 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |   |   | `-DeclRefExpr 0x1d5544bbde8 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb1c8 'd' 'size_t':'unsigned long long'
|     |     |   |   `-ImplicitCastExpr 0x1d5544bbe40 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |   |     `-DeclRefExpr 0x1d5544bbe08 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb150 'c' 'size_t':'unsigned long long'
|     |     |   `-UnaryOperator 0x1d5544bbed0 <col:24, col:25> 'size_t':'unsigned long long' prefix '~' cannot overflow
|     |     |     `-ImplicitCastExpr 0x1d5544bbeb8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |       `-DeclRefExpr 0x1d5544bbe98 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb1c8 'd' 'size_t':'unsigned long long'
|     |     `-ParenExpr 0x1d5544bc018 <col:31, col:54> 'unsigned long long'
|     |       `-BinaryOperator 0x1d5544bbff8 <col:32, col:53> 'unsigned long long' '-'
|     |         |-BinaryOperator 0x1d5544bbf98 <col:32, col:49> 'unsigned long long' '*'
|     |         | |-UnaryExprOrTypeTraitExpr 0x1d5544bbf38 <col:32, col:45> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     |         | `-ImplicitCastExpr 0x1d5544bbf80 <col:49> 'unsigned long long' <IntegralCast>
|     |         |   `-IntegerLiteral 0x1d5544bbf58 <col:49> 'int' 8
|     |         `-ImplicitCastExpr 0x1d5544bbfe0 <col:53> 'unsigned long long' <IntegralCast>
|     |           `-IntegerLiteral 0x1d5544bbfb8 <col:53> 'int' 1
|     `-ImplicitCastExpr 0x1d5544bc0d0 <line:56:14> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x1d5544bc0b0 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1d5544bb240 'n' 'size_t':'unsigned long long'
|-FunctionDecl 0x1d5544bc788 <line:71:1, line:132:1> line:71:6 invalid CRYPTO_ctr128_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, unsigned char *, unsigned int *, int)'
| |-ParmVarDecl 0x1d5544bc168 <col:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x1d5544bc1e8 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x1d5544bc260 <line:72:28, col:35> col:35 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d5544bc2e0 <col:40, col:52> col:52 used key 'const void *'
| |-ParmVarDecl 0x1d5544bc3e0 <line:73:28, col:49> col:42 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x1d5544bc4b0 <line:74:28, col:55> col:42 used ecount_buf 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x1d5544bc560 <col:58, col:72> col:72 used num 'unsigned int *'
| |-ParmVarDecl 0x1d5544bc5e0 <line:75:28, col:39> col:39 invalid block 'int'
| `-CompoundStmt 0x1d5544be7c8 <line:76:1, line:132:1>
|   |-DeclStmt 0x1d5544bc900 <line:77:5, col:19>
|   | `-VarDecl 0x1d5544bc898 <col:5, col:18> col:18 used n 'unsigned int'
|   |-DeclStmt 0x1d5544bc9d0 <line:78:5, col:17>
|   | `-VarDecl 0x1d5544bc928 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1d5544bc9b8 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1d5544bc990 <col:16> 'int' 0
|   |-BinaryOperator 0x1d5544bcaa0 <line:80:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x1d5544bc9e8 <col:5> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x1d5544bca88 <col:9, col:10> 'unsigned int' <LValueToRValue>
|   |   `-UnaryOperator 0x1d5544bca70 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1d5544bca58 <col:10> 'unsigned int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1d5544bca20 <col:10> 'unsigned int *' lvalue ParmVar 0x1d5544bc560 'num' 'unsigned int *'
|   |-IfStmt 0x1d5544be040 <line:83:5, line:118:5>
|   | |-BinaryOperator 0x1d5544bcb90 <line:83:9, col:32> 'int' '=='
|   | | |-BinaryOperator 0x1d5544bcb30 <col:9, col:27> 'unsigned long long' '%'
|   | | | |-ImplicitCastExpr 0x1d5544bcb18 <col:9> 'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x1d5544bcac0 <col:9> 'int' 16
|   | | | `-UnaryExprOrTypeTraitExpr 0x1d5544bcaf8 <col:14, col:27> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1d5544bcb78 <col:32> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1d5544bcb50 <col:32> 'int' 0
|   | `-CompoundStmt 0x1d5544be028 <col:35, line:118:5>
|   |   `-DoStmt 0x1d5544be008 <line:84:9, line:117:19>
|   |     |-CompoundStmt 0x1d5544bdfa8 <line:84:12, line:117:9>
|   |     | |-WhileStmt 0x1d5544bd080 <line:85:13, line:89:13>
|   |     | | |-BinaryOperator 0x1d5544bcc38 <line:85:20, col:25> 'int' '&&'
|   |     | | | |-ImplicitCastExpr 0x1d5544bcc08 <col:20> 'unsigned int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1d5544bcbb0 <col:20> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | | | `-ImplicitCastExpr 0x1d5544bcc20 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x1d5544bcbd0 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bc260 'len' 'size_t':'unsigned long long'
|   |     | | `-CompoundStmt 0x1d5544bd058 <col:30, line:89:13>
|   |     | |   |-BinaryOperator 0x1d5544bcea8 <line:86:17, col:50> 'unsigned char' '='
|   |     | |   | |-UnaryOperator 0x1d5544bccc8 <col:17, col:24> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   | | `-ParenExpr 0x1d5544bcca8 <col:18, col:24> 'unsigned char *'
|   |     | |   | |   `-UnaryOperator 0x1d5544bcc90 <col:19, col:22> 'unsigned char *' postfix '++'
|   |     | |   | |     `-DeclRefExpr 0x1d5544bcc58 <col:19> 'unsigned char *' lvalue ParmVar 0x1d5544bc1e8 'out' 'unsigned char *'
|   |     | |   | `-ImplicitCastExpr 0x1d5544bce90 <col:28, col:50> 'unsigned char' <IntegralCast>
|   |     | |   |   `-BinaryOperator 0x1d5544bce70 <col:28, col:50> 'int' '^'
|   |     | |   |     |-ImplicitCastExpr 0x1d5544bce28 <col:28, col:34> 'int' <IntegralCast>
|   |     | |   |     | `-ImplicitCastExpr 0x1d5544bce10 <col:28, col:34> 'unsigned char' <LValueToRValue>
|   |     | |   |     |   `-UnaryOperator 0x1d5544bcd50 <col:28, col:34> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   |     |     `-ParenExpr 0x1d5544bcd30 <col:29, col:34> 'const unsigned char *'
|   |     | |   |     |       `-UnaryOperator 0x1d5544bcd18 <col:30, col:32> 'const unsigned char *' postfix '++'
|   |     | |   |     |         `-DeclRefExpr 0x1d5544bcce0 <col:30> 'const unsigned char *' lvalue ParmVar 0x1d5544bc168 'in' 'const unsigned char *'
|   |     | |   |     `-ImplicitCastExpr 0x1d5544bce58 <col:38, col:50> 'int' <IntegralCast>
|   |     | |   |       `-ImplicitCastExpr 0x1d5544bce40 <col:38, col:50> 'unsigned char' <LValueToRValue>
|   |     | |   |         `-ArraySubscriptExpr 0x1d5544bcdf0 <col:38, col:50> 'unsigned char' lvalue
|   |     | |   |           |-ImplicitCastExpr 0x1d5544bcdc0 <col:38> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |           | `-DeclRefExpr 0x1d5544bcd68 <col:38> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544bc4b0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |   |           `-ImplicitCastExpr 0x1d5544bcdd8 <col:49> 'unsigned int' <LValueToRValue>
|   |     | |   |             `-DeclRefExpr 0x1d5544bcda0 <col:49> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |   |-UnaryOperator 0x1d5544bcee8 <line:87:17, col:19> 'size_t':'unsigned long long' prefix '--'
|   |     | |   | `-DeclRefExpr 0x1d5544bcec8 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bc260 'len' 'size_t':'unsigned long long'
|   |     | |   `-BinaryOperator 0x1d5544bd038 <line:88:17, col:31> 'unsigned int' '='
|   |     | |     |-DeclRefExpr 0x1d5544bcf00 <col:17> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |     `-BinaryOperator 0x1d5544bd018 <col:21, col:31> 'unsigned int' '%'
|   |     | |       |-ParenExpr 0x1d5544bcfb8 <col:21, col:27> 'unsigned int'
|   |     | |       | `-BinaryOperator 0x1d5544bcf98 <col:22, col:26> 'unsigned int' '+'
|   |     | |       |   |-ImplicitCastExpr 0x1d5544bcf68 <col:22> 'unsigned int' <LValueToRValue>
|   |     | |       |   | `-DeclRefExpr 0x1d5544bcf20 <col:22> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |       |   `-ImplicitCastExpr 0x1d5544bcf80 <col:26> 'unsigned int' <IntegralCast>
|   |     | |       |     `-IntegerLiteral 0x1d5544bcf40 <col:26> 'int' 1
|   |     | |       `-ImplicitCastExpr 0x1d5544bd000 <col:31> 'unsigned int' <IntegralCast>
|   |     | |         `-IntegerLiteral 0x1d5544bcfd8 <col:31> 'int' 16
|   |     | |-WhileStmt 0x1d5544bda60 <line:96:13, line:106:13>
|   |     | | |-BinaryOperator 0x1d5544bd138 <line:96:20, col:27> 'int' '>='
|   |     | | | |-ImplicitCastExpr 0x1d5544bd108 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1d5544bd0c0 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bc260 'len' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x1d5544bd120 <col:27> 'unsigned long long' <IntegralCast>
|   |     | | |   `-IntegerLiteral 0x1d5544bd0e0 <col:27> 'int' 16
|   |     | | `-CompoundStmt 0x1d5544bda20 <col:31, line:106:13>
|   |     | |   |-CallExpr 0x1d5544bd240 <line:98:17, col:40> 'void'
|   |     | |   | |-ImplicitCastExpr 0x1d5544bd228 <col:17> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x1d5544bd1e8 <col:17> 'void (unsigned char *)' Function 0x1d5544bafc8 'ctr128_inc_aligned' 'void (unsigned char *)'
|   |     | |   | `-ImplicitCastExpr 0x1d5544bd268 <col:36> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x1d5544bd208 <col:36> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544bc3e0 'ivec' 'unsigned char *':'unsigned char *'
|   |     | |   |-ForStmt 0x1d5544bd7e8 <line:99:17, line:101:73>
|   |     | |   | |-BinaryOperator 0x1d5544bd2e0 <line:99:22, col:26> 'unsigned int' '='
|   |     | |   | | |-DeclRefExpr 0x1d5544bd280 <col:22> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |   | | `-ImplicitCastExpr 0x1d5544bd2c8 <col:26> 'unsigned int' <IntegralCast>
|   |     | |   | |   `-IntegerLiteral 0x1d5544bd2a0 <col:26> 'int' 0
|   |     | |   | |-<<<NULL>>>
|   |     | |   | |-BinaryOperator 0x1d5544bd378 <col:29, col:33> 'int' '<'
|   |     | |   | | |-ImplicitCastExpr 0x1d5544bd348 <col:29> 'unsigned int' <LValueToRValue>
|   |     | |   | | | `-DeclRefExpr 0x1d5544bd300 <col:29> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |   | | `-ImplicitCastExpr 0x1d5544bd360 <col:33> 'unsigned int' <IntegralCast>
|   |     | |   | |   `-IntegerLiteral 0x1d5544bd320 <col:33> 'int' 16
|   |     | |   | |-CompoundAssignOperator 0x1d5544bd3e8 <col:37, col:55> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |   | | |-DeclRefExpr 0x1d5544bd398 <col:37> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |   | | `-UnaryExprOrTypeTraitExpr 0x1d5544bd3c8 <col:42, col:55> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |     | |   | `-BinaryOperator 0x1d5544bd7c8 <line:100:21, line:101:73> 'size_t':'unsigned long long' '='
|   |     | |   |   |-UnaryOperator 0x1d5544bd520 <line:100:21, col:40> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |   | `-CStyleCastExpr 0x1d5544bd4f8 <col:22, col:40> 'size_t *' <BitCast>
|   |     | |   |   |   `-ParenExpr 0x1d5544bd4d8 <col:32, col:40> 'unsigned char *'
|   |     | |   |   |     `-BinaryOperator 0x1d5544bd488 <col:33, col:39> 'unsigned char *' '+'
|   |     | |   |   |       |-ImplicitCastExpr 0x1d5544bd458 <col:33> 'unsigned char *' <LValueToRValue>
|   |     | |   |   |       | `-DeclRefExpr 0x1d5544bd418 <col:33> 'unsigned char *' lvalue ParmVar 0x1d5544bc1e8 'out' 'unsigned char *'
|   |     | |   |   |       `-ImplicitCastExpr 0x1d5544bd470 <col:39> 'unsigned int' <LValueToRValue>
|   |     | |   |   |         `-DeclRefExpr 0x1d5544bd438 <col:39> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |   |   `-BinaryOperator 0x1d5544bd7a8 <line:101:25, col:73> 'unsigned long long' '^'
|   |     | |   |     |-ImplicitCastExpr 0x1d5544bd778 <col:25, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   |     | `-UnaryOperator 0x1d5544bd640 <col:25, col:43> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |     |   `-CStyleCastExpr 0x1d5544bd618 <col:26, col:43> 'size_t *' <BitCast>
|   |     | |   |     |     `-ParenExpr 0x1d5544bd5f8 <col:36, col:43> 'const unsigned char *'
|   |     | |   |     |       `-BinaryOperator 0x1d5544bd5a8 <col:37, col:42> 'const unsigned char *' '+'
|   |     | |   |     |         |-ImplicitCastExpr 0x1d5544bd578 <col:37> 'const unsigned char *' <LValueToRValue>
|   |     | |   |     |         | `-DeclRefExpr 0x1d5544bd538 <col:37> 'const unsigned char *' lvalue ParmVar 0x1d5544bc168 'in' 'const unsigned char *'
|   |     | |   |     |         `-ImplicitCastExpr 0x1d5544bd590 <col:42> 'unsigned int' <LValueToRValue>
|   |     | |   |     |           `-DeclRefExpr 0x1d5544bd558 <col:42> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |   |     `-ImplicitCastExpr 0x1d5544bd790 <col:47, col:73> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   |       `-UnaryOperator 0x1d5544bd760 <col:47, col:73> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |         `-CStyleCastExpr 0x1d5544bd738 <col:48, col:73> 'size_t *' <BitCast>
|   |     | |   |           `-ParenExpr 0x1d5544bd718 <col:58, col:73> 'unsigned char *':'unsigned char *'
|   |     | |   |             `-BinaryOperator 0x1d5544bd6c8 <col:59, col:72> 'unsigned char *':'unsigned char *' '+'
|   |     | |   |               |-ImplicitCastExpr 0x1d5544bd698 <col:59> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |               | `-DeclRefExpr 0x1d5544bd658 <col:59> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544bc4b0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |   |               `-ImplicitCastExpr 0x1d5544bd6b0 <col:72> 'unsigned int' <LValueToRValue>
|   |     | |   |                 `-DeclRefExpr 0x1d5544bd678 <col:72> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |   |-CompoundAssignOperator 0x1d5544bd880 <line:102:17, col:24> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |   | |-DeclRefExpr 0x1d5544bd820 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bc260 'len' 'size_t':'unsigned long long'
|   |     | |   | `-ImplicitCastExpr 0x1d5544bd868 <col:24> 'unsigned long long' <IntegralCast>
|   |     | |   |   `-IntegerLiteral 0x1d5544bd840 <col:24> 'int' 16
|   |     | |   |-CompoundAssignOperator 0x1d5544bd8f8 <line:103:17, col:24> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     | |   | |-DeclRefExpr 0x1d5544bd8b0 <col:17> 'unsigned char *' lvalue ParmVar 0x1d5544bc1e8 'out' 'unsigned char *'
|   |     | |   | `-IntegerLiteral 0x1d5544bd8d0 <col:24> 'int' 16
|   |     | |   |-CompoundAssignOperator 0x1d5544bd970 <line:104:17, col:23> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |   | |-DeclRefExpr 0x1d5544bd928 <col:17> 'const unsigned char *' lvalue ParmVar 0x1d5544bc168 'in' 'const unsigned char *'
|   |     | |   | `-IntegerLiteral 0x1d5544bd948 <col:23> 'int' 16
|   |     | |   `-BinaryOperator 0x1d5544bda00 <line:105:17, col:21> 'unsigned int' '='
|   |     | |     |-DeclRefExpr 0x1d5544bd9a0 <col:17> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |     `-ImplicitCastExpr 0x1d5544bd9e8 <col:21> 'unsigned int' <IntegralCast>
|   |     | |       `-IntegerLiteral 0x1d5544bd9c0 <col:21> 'int' 0
|   |     | |-IfStmt 0x1d5544bded8 <line:107:13, line:114:13>
|   |     | | |-ImplicitCastExpr 0x1d5544bda98 <line:107:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x1d5544bda78 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bc260 'len' 'size_t':'unsigned long long'
|   |     | | `-CompoundStmt 0x1d5544bdeb8 <col:22, line:114:13>
|   |     | |   |-CallExpr 0x1d5544bdb68 <line:109:17, col:40> 'void'
|   |     | |   | |-ImplicitCastExpr 0x1d5544bdb50 <col:17> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x1d5544bdb10 <col:17> 'void (unsigned char *)' Function 0x1d5544bafc8 'ctr128_inc_aligned' 'void (unsigned char *)'
|   |     | |   | `-ImplicitCastExpr 0x1d5544bdb90 <col:36> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x1d5544bdb30 <col:36> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544bc3e0 'ivec' 'unsigned char *':'unsigned char *'
|   |     | |   `-WhileStmt 0x1d5544bdea0 <line:110:17, line:113:17>
|   |     | |     |-UnaryOperator 0x1d5544bdbc8 <line:110:24, col:27> 'size_t':'unsigned long long' postfix '--'
|   |     | |     | `-DeclRefExpr 0x1d5544bdba8 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bc260 'len' 'size_t':'unsigned long long'
|   |     | |     `-CompoundStmt 0x1d5544bde80 <col:31, line:113:17>
|   |     | |       |-BinaryOperator 0x1d5544bde28 <line:111:21, col:50> 'unsigned char' '='
|   |     | |       | |-ArraySubscriptExpr 0x1d5544bdc50 <col:21, col:26> 'unsigned char' lvalue
|   |     | |       | | |-ImplicitCastExpr 0x1d5544bdc20 <col:21> 'unsigned char *' <LValueToRValue>
|   |     | |       | | | `-DeclRefExpr 0x1d5544bdbe0 <col:21> 'unsigned char *' lvalue ParmVar 0x1d5544bc1e8 'out' 'unsigned char *'
|   |     | |       | | `-ImplicitCastExpr 0x1d5544bdc38 <col:25> 'unsigned int' <LValueToRValue>
|   |     | |       | |   `-DeclRefExpr 0x1d5544bdc00 <col:25> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |       | `-ImplicitCastExpr 0x1d5544bde10 <col:30, col:50> 'unsigned char' <IntegralCast>
|   |     | |       |   `-BinaryOperator 0x1d5544bddf0 <col:30, col:50> 'int' '^'
|   |     | |       |     |-ImplicitCastExpr 0x1d5544bdda8 <col:30, col:34> 'int' <IntegralCast>
|   |     | |       |     | `-ImplicitCastExpr 0x1d5544bdd90 <col:30, col:34> 'unsigned char' <LValueToRValue>
|   |     | |       |     |   `-ArraySubscriptExpr 0x1d5544bdce0 <col:30, col:34> 'const unsigned char' lvalue
|   |     | |       |     |     |-ImplicitCastExpr 0x1d5544bdcb0 <col:30> 'const unsigned char *' <LValueToRValue>
|   |     | |       |     |     | `-DeclRefExpr 0x1d5544bdc70 <col:30> 'const unsigned char *' lvalue ParmVar 0x1d5544bc168 'in' 'const unsigned char *'
|   |     | |       |     |     `-ImplicitCastExpr 0x1d5544bdcc8 <col:33> 'unsigned int' <LValueToRValue>
|   |     | |       |     |       `-DeclRefExpr 0x1d5544bdc90 <col:33> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |       |     `-ImplicitCastExpr 0x1d5544bddd8 <col:38, col:50> 'int' <IntegralCast>
|   |     | |       |       `-ImplicitCastExpr 0x1d5544bddc0 <col:38, col:50> 'unsigned char' <LValueToRValue>
|   |     | |       |         `-ArraySubscriptExpr 0x1d5544bdd70 <col:38, col:50> 'unsigned char' lvalue
|   |     | |       |           |-ImplicitCastExpr 0x1d5544bdd40 <col:38> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |       |           | `-DeclRefExpr 0x1d5544bdd00 <col:38> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544bc4b0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |       |           `-ImplicitCastExpr 0x1d5544bdd58 <col:49> 'unsigned int' <LValueToRValue>
|   |     | |       |             `-DeclRefExpr 0x1d5544bdd20 <col:49> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |       `-UnaryOperator 0x1d5544bde68 <line:112:21, col:23> 'unsigned int' prefix '++'
|   |     | |         `-DeclRefExpr 0x1d5544bde48 <col:23> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | |-BinaryOperator 0x1d5544bdf78 <line:115:13, col:20> 'unsigned int' '='
|   |     | | |-UnaryOperator 0x1d5544bdf28 <col:13, col:14> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x1d5544bdf10 <col:14> 'unsigned int *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x1d5544bdef0 <col:14> 'unsigned int *' lvalue ParmVar 0x1d5544bc560 'num' 'unsigned int *'
|   |     | | `-ImplicitCastExpr 0x1d5544bdf60 <col:20> 'unsigned int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1d5544bdf40 <col:20> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     | `-ReturnStmt 0x1d5544bdf98 <line:116:13>
|   |     `-IntegerLiteral 0x1d5544bdfe0 <line:117:18> 'int' 0
|   |-WhileStmt 0x1d5544be708 <line:121:5, line:129:5>
|   | |-BinaryOperator 0x1d5544be100 <line:121:12, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x1d5544be0d0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d5544be058 <col:12> 'size_t':'unsigned long long' lvalue Var 0x1d5544bc928 'l' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1d5544be0e8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d5544be090 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bc260 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1d5544be6d8 <col:21, line:129:5>
|   |   |-IfStmt 0x1d5544be2c8 <line:122:9, line:125:9>
|   |   | |-BinaryOperator 0x1d5544be198 <line:122:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1d5544be168 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d5544be120 <col:13> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1d5544be180 <col:18> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1d5544be140 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x1d5544be2b0 <col:21, line:125:9>
|   |   |   `-CallExpr 0x1d5544be270 <line:124:13, col:28> 'void'
|   |   |     |-ImplicitCastExpr 0x1d5544be258 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1d5544be218 <col:13> 'void (unsigned char *)' Function 0x1d5544ba8d8 'ctr128_inc' 'void (unsigned char *)'
|   |   |     `-ImplicitCastExpr 0x1d5544be298 <col:24> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1d5544be238 <col:24> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544bc3e0 'ivec' 'unsigned char *':'unsigned char *'
|   |   |-BinaryOperator 0x1d5544be528 <line:126:9, col:38> 'unsigned char' '='
|   |   | |-ArraySubscriptExpr 0x1d5544be350 <col:9, col:14> 'unsigned char' lvalue
|   |   | | |-ImplicitCastExpr 0x1d5544be320 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d5544be2e0 <col:9> 'unsigned char *' lvalue ParmVar 0x1d5544bc1e8 'out' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x1d5544be338 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d5544be300 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1d5544bc928 'l' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x1d5544be510 <col:18, col:38> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x1d5544be4f0 <col:18, col:38> 'int' '^'
|   |   |     |-ImplicitCastExpr 0x1d5544be4a8 <col:18, col:22> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x1d5544be490 <col:18, col:22> 'unsigned char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x1d5544be3e0 <col:18, col:22> 'const unsigned char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1d5544be3b0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x1d5544be370 <col:18> 'const unsigned char *' lvalue ParmVar 0x1d5544bc168 'in' 'const unsigned char *'
|   |   |     |     `-ImplicitCastExpr 0x1d5544be3c8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x1d5544be390 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1d5544bc928 'l' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x1d5544be4d8 <col:26, col:38> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x1d5544be4c0 <col:26, col:38> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x1d5544be470 <col:26, col:38> 'unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x1d5544be440 <col:26> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x1d5544be400 <col:26> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544bc4b0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   |           `-ImplicitCastExpr 0x1d5544be458 <col:37> 'unsigned int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x1d5544be420 <col:37> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |   |-UnaryOperator 0x1d5544be568 <line:127:9, col:11> 'size_t':'unsigned long long' prefix '++'
|   |   | `-DeclRefExpr 0x1d5544be548 <col:11> 'size_t':'unsigned long long' lvalue Var 0x1d5544bc928 'l' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x1d5544be6b8 <line:128:9, col:23> 'unsigned int' '='
|   |     |-DeclRefExpr 0x1d5544be580 <col:9> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |     `-BinaryOperator 0x1d5544be698 <col:13, col:23> 'unsigned int' '%'
|   |       |-ParenExpr 0x1d5544be638 <col:13, col:19> 'unsigned int'
|   |       | `-BinaryOperator 0x1d5544be618 <col:14, col:18> 'unsigned int' '+'
|   |       |   |-ImplicitCastExpr 0x1d5544be5e8 <col:14> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1d5544be5a0 <col:14> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x1d5544be600 <col:18> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x1d5544be5c0 <col:18> 'int' 1
|   |       `-ImplicitCastExpr 0x1d5544be680 <col:23> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x1d5544be658 <col:23> 'int' 16
|   `-BinaryOperator 0x1d5544be7a8 <line:131:5, col:12> 'unsigned int' '='
|     |-UnaryOperator 0x1d5544be758 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1d5544be740 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1d5544be720 <col:6> 'unsigned int *' lvalue ParmVar 0x1d5544bc560 'num' 'unsigned int *'
|     `-ImplicitCastExpr 0x1d5544be790 <col:12> 'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x1d5544be770 <col:12> 'unsigned int' lvalue Var 0x1d5544bc898 'n' 'unsigned int'
|-FunctionDecl 0x1d5544be8c8 <line:135:1, line:145:1> line:135:13 used ctr96_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x1d5544be820 <col:23, col:38> col:38 used counter 'unsigned char *'
| `-CompoundStmt 0x1d5544beed8 <line:136:1, line:145:1>
|   |-DeclStmt 0x1d5544beb10 <line:137:5, col:22>
|   | |-VarDecl 0x1d5544be998 <col:5, col:13> col:9 used n 'u32':'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x1d5544bea28 <col:13> 'u32':'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1d5544bea00 <col:13> 'int' 12
|   | `-VarDecl 0x1d5544bea50 <col:5, col:21> col:17 used c 'u32':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1d5544beae0 <col:21> 'u32':'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x1d5544beab8 <col:21> 'int' 1
|   `-DoStmt 0x1d5544beeb8 <line:139:5, line:144:15>
|     |-CompoundStmt 0x1d5544bee50 <line:139:8, line:144:5>
|     | |-UnaryOperator 0x1d5544beb60 <line:140:9, col:11> 'u32':'unsigned int' prefix '--'
|     | | `-DeclRefExpr 0x1d5544beb28 <col:11> 'u32':'unsigned int' lvalue Var 0x1d5544be998 'n' 'u32':'unsigned int'
|     | |-CompoundAssignOperator 0x1d5544bec70 <line:141:9, col:23> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|     | | |-DeclRefExpr 0x1d5544beb78 <col:9> 'u32':'unsigned int' lvalue Var 0x1d5544bea50 'c' 'u32':'unsigned int'
|     | | `-ImplicitCastExpr 0x1d5544bec58 <col:14, col:23> 'unsigned int' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x1d5544bec40 <col:14, col:23> 'unsigned char' <LValueToRValue>
|     | |     `-ArraySubscriptExpr 0x1d5544bec20 <col:14, col:23> 'unsigned char' lvalue
|     | |       |-ImplicitCastExpr 0x1d5544bebf0 <col:14> 'unsigned char *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x1d5544bebb0 <col:14> 'unsigned char *' lvalue ParmVar 0x1d5544be820 'counter' 'unsigned char *'
|     | |       `-ImplicitCastExpr 0x1d5544bec08 <col:22> 'u32':'unsigned int' <LValueToRValue>
|     | |         `-DeclRefExpr 0x1d5544bebd0 <col:22> 'u32':'unsigned int' lvalue Var 0x1d5544be998 'n' 'u32':'unsigned int'
|     | |-BinaryOperator 0x1d5544beda0 <line:142:9, col:26> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x1d5544bed10 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x1d5544bece0 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x1d5544beca0 <col:9> 'unsigned char *' lvalue ParmVar 0x1d5544be820 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x1d5544becf8 <col:17> 'u32':'unsigned int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x1d5544becc0 <col:17> 'u32':'unsigned int' lvalue Var 0x1d5544be998 'n' 'u32':'unsigned int'
|     | | `-CStyleCastExpr 0x1d5544bed78 <col:22, col:26> 'u8':'unsigned char' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x1d5544bed60 <col:26> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|     | |     `-DeclRefExpr 0x1d5544bed30 <col:26> 'u32':'unsigned int' lvalue Var 0x1d5544bea50 'c' 'u32':'unsigned int'
|     | `-CompoundAssignOperator 0x1d5544bee20 <line:143:9, col:15> 'u32':'unsigned int' '>>=' ComputeLHSTy='u32':'unsigned int' ComputeResultTy='u32':'unsigned int'
|     |   |-DeclRefExpr 0x1d5544bedc0 <col:9> 'u32':'unsigned int' lvalue Var 0x1d5544bea50 'c' 'u32':'unsigned int'
|     |   `-IntegerLiteral 0x1d5544bede0 <col:15> 'int' 8
|     `-ImplicitCastExpr 0x1d5544beea0 <line:144:14> 'u32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x1d5544bee80 <col:14> 'u32':'unsigned int' lvalue Var 0x1d5544be998 'n' 'u32':'unsigned int'
|-FunctionDecl 0x1d5544c62d8 <line:147:1, line:209:1> line:147:6 invalid CRYPTO_ctr128_encrypt_ctr32 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, unsigned char *, unsigned int *, int)'
| |-ParmVarDecl 0x1d5544bef10 <col:34, col:55> col:55 used in 'const unsigned char *'
| |-ParmVarDecl 0x1d5544bef90 <col:59, col:74> col:74 used out 'unsigned char *'
| |-ParmVarDecl 0x1d5544bf008 <line:148:34, col:41> col:41 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d5544c5f70 <col:46, col:58> col:58 used key 'const void *'
| |-ParmVarDecl 0x1d5544c6040 <line:149:34, col:55> col:48 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x1d5544c6110 <line:150:34, col:61> col:48 used ecount_buf 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x1d5544c6190 <line:151:34, col:48> col:48 used num 'unsigned int *'
| |-ParmVarDecl 0x1d5544c6210 <col:53, col:62> col:62 invalid func 'int'
| `-CompoundStmt 0x1d5544c78b8 <line:152:1, line:209:1>
|   |-DeclStmt 0x1d5544c64e8 <line:153:5, col:26>
|   | |-VarDecl 0x1d5544c63e8 <col:5, col:18> col:18 used n 'unsigned int'
|   | `-VarDecl 0x1d5544c6468 <col:5, col:21> col:21 used ctr32 'unsigned int'
|   |-BinaryOperator 0x1d5544c65b8 <line:155:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x1d5544c6500 <col:5> 'unsigned int' lvalue Var 0x1d5544c63e8 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x1d5544c65a0 <col:9, col:10> 'unsigned int' <LValueToRValue>
|   |   `-UnaryOperator 0x1d5544c6588 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1d5544c6570 <col:10> 'unsigned int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1d5544c6538 <col:10> 'unsigned int *' lvalue ParmVar 0x1d5544c6190 'num' 'unsigned int *'
|   |-WhileStmt 0x1d5544c6aa8 <line:157:5, line:161:5>
|   | |-BinaryOperator 0x1d5544c6660 <line:157:12, col:17> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1d5544c6630 <col:12> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d5544c65d8 <col:12> 'unsigned int' lvalue Var 0x1d5544c63e8 'n' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1d5544c6648 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d5544c65f8 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bf008 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1d5544c6a80 <col:22, line:161:5>
|   |   |-BinaryOperator 0x1d5544c68d0 <line:158:9, col:42> 'unsigned char' '='
|   |   | |-UnaryOperator 0x1d5544c66f0 <col:9, col:16> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x1d5544c66d0 <col:10, col:16> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x1d5544c66b8 <col:11, col:14> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x1d5544c6680 <col:11> 'unsigned char *' lvalue ParmVar 0x1d5544bef90 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x1d5544c68b8 <col:20, col:42> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x1d5544c6898 <col:20, col:42> 'int' '^'
|   |   |     |-ImplicitCastExpr 0x1d5544c6850 <col:20, col:26> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x1d5544c6838 <col:20, col:26> 'unsigned char' <LValueToRValue>
|   |   |     |   `-UnaryOperator 0x1d5544c6778 <col:20, col:26> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |     `-ParenExpr 0x1d5544c6758 <col:21, col:26> 'const unsigned char *'
|   |   |     |       `-UnaryOperator 0x1d5544c6740 <col:22, col:24> 'const unsigned char *' postfix '++'
|   |   |     |         `-DeclRefExpr 0x1d5544c6708 <col:22> 'const unsigned char *' lvalue ParmVar 0x1d5544bef10 'in' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x1d5544c6880 <col:30, col:42> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x1d5544c6868 <col:30, col:42> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x1d5544c6818 <col:30, col:42> 'unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x1d5544c67e8 <col:30> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x1d5544c6790 <col:30> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544c6110 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   |           `-ImplicitCastExpr 0x1d5544c6800 <col:41> 'unsigned int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x1d5544c67c8 <col:41> 'unsigned int' lvalue Var 0x1d5544c63e8 'n' 'unsigned int'
|   |   |-UnaryOperator 0x1d5544c6910 <line:159:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |   | `-DeclRefExpr 0x1d5544c68f0 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bf008 'len' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x1d5544c6a60 <line:160:9, col:23> 'unsigned int' '='
|   |     |-DeclRefExpr 0x1d5544c6928 <col:9> 'unsigned int' lvalue Var 0x1d5544c63e8 'n' 'unsigned int'
|   |     `-BinaryOperator 0x1d5544c6a40 <col:13, col:23> 'unsigned int' '%'
|   |       |-ParenExpr 0x1d5544c69e0 <col:13, col:19> 'unsigned int'
|   |       | `-BinaryOperator 0x1d5544c69c0 <col:14, col:18> 'unsigned int' '+'
|   |       |   |-ImplicitCastExpr 0x1d5544c6990 <col:14> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1d5544c6948 <col:14> 'unsigned int' lvalue Var 0x1d5544c63e8 'n' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x1d5544c69a8 <col:18> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x1d5544c6968 <col:18> 'int' 1
|   |       `-ImplicitCastExpr 0x1d5544c6a28 <col:23> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x1d5544c6a00 <col:23> 'int' 16
|   |-BinaryOperator 0x1d5544c4fb8 <line:163:5, .//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:49> 'unsigned int' '='
|   | |-DeclRefExpr 0x1d5544c6ac0 <.//openssl//file_jk/after\crypto\modes\ctr128.c:163:5> 'unsigned int' lvalue Var 0x1d5544c6468 'ctr32' 'unsigned int'
|   | `-ImplicitCastExpr 0x1d5544c4fa0 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:25, col:49> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x1d5544c4f60 <col:25, col:49> 'unsigned long'
|   |     |-ImplicitCastExpr 0x1d5544c6f38 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1d5544c6cc0 <col:25> 'unsigned long (unsigned long)' Function 0x1d5544c6b30 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |     `-ImplicitCastExpr 0x1d5544c4f88 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |       `-CStyleCastExpr 0x1d5544c6ee0 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |         `-ImplicitCastExpr 0x1d5544c6ec8 <col:46, col:48> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |           `-ParenExpr 0x1d5544c6ea8 <col:46, col:48> 'const u32':'const unsigned int' lvalue
|   |             `-UnaryOperator 0x1d5544c6e60 <line:88:33, col:49> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |               `-CStyleCastExpr 0x1d5544c6e38 <col:34, col:49> 'const u32 *' <BitCast>
|   |                 `-ParenExpr 0x1d5544c6e18 <col:47, col:49> 'unsigned char *':'unsigned char *'
|   |                   `-BinaryOperator 0x1d5544c6d70 <.//openssl//file_jk/after\crypto\modes\ctr128.c:163:20, col:27> 'unsigned char *':'unsigned char *' '+'
|   |                     |-ImplicitCastExpr 0x1d5544c6d58 <col:20> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |                     | `-DeclRefExpr 0x1d5544c6cf8 <col:20> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544c6040 'ivec' 'unsigned char *':'unsigned char *'
|   |                     `-IntegerLiteral 0x1d5544c6d30 <col:27> 'int' 12
|   |-WhileStmt 0x1d5544c5e38 <line:164:5, line:194:5>
|   | |-BinaryOperator 0x1d5544c5050 <line:164:12, col:19> 'int' '>='
|   | | |-ImplicitCastExpr 0x1d5544c5020 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d5544c4fd8 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bf008 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1d5544c5038 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1d5544c4ff8 <col:19> 'int' 16
|   | `-CompoundStmt 0x1d5544c5dd8 <col:23, line:194:5>
|   |   |-DeclStmt 0x1d5544c5180 <line:165:9, col:33>
|   |   | `-VarDecl 0x1d5544c5080 <col:9, col:31> col:16 used blocks 'size_t':'unsigned long long' cinit
|   |   |   `-BinaryOperator 0x1d5544c5160 <col:25, col:31> 'unsigned long long' '/'
|   |   |     |-ImplicitCastExpr 0x1d5544c5130 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1d5544c50e8 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bf008 'len' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x1d5544c5148 <col:31> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1d5544c5108 <col:31> 'int' 16
|   |   |-IfStmt 0x1d5544c5440 <line:171:9, line:172:31>
|   |   | |-BinaryOperator 0x1d5544c5338 <line:171:13, col:72> 'int' '&&'
|   |   | | |-BinaryOperator 0x1d5544c5200 <col:13, col:49> 'int' '>'
|   |   | | | |-UnaryExprOrTypeTraitExpr 0x1d5544c51a8 <col:13, col:26> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   | | | `-UnaryExprOrTypeTraitExpr 0x1d5544c51e0 <col:30, col:49> 'unsigned long long' sizeof 'unsigned int'
|   |   | | `-BinaryOperator 0x1d5544c5318 <col:54, col:72> 'int' '>'
|   |   | |   |-ImplicitCastExpr 0x1d5544c52e8 <col:54> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1d5544c5220 <col:54> 'size_t':'unsigned long long' lvalue Var 0x1d5544c5080 'blocks' 'size_t':'unsigned long long'
|   |   | |   `-ImplicitCastExpr 0x1d5544c5300 <col:63, col:72> 'unsigned long long' <IntegralCast>
|   |   | |     `-ParenExpr 0x1d5544c52c8 <col:63, col:72> 'unsigned int'
|   |   | |       `-BinaryOperator 0x1d5544c52a8 <col:64, col:70> 'unsigned int' '<<'
|   |   | |         |-IntegerLiteral 0x1d5544c5258 <col:64> 'unsigned int' 1
|   |   | |         `-IntegerLiteral 0x1d5544c5280 <col:70> 'int' 28
|   |   | `-BinaryOperator 0x1d5544c5420 <line:172:13, col:31> 'size_t':'unsigned long long' '='
|   |   |   |-DeclRefExpr 0x1d5544c5358 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1d5544c5080 'blocks' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x1d5544c5408 <col:22, col:31> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x1d5544c53e8 <col:22, col:31> 'unsigned int'
|   |   |       `-BinaryOperator 0x1d5544c53c8 <col:23, col:29> 'unsigned int' '<<'
|   |   |         |-IntegerLiteral 0x1d5544c5378 <col:23> 'unsigned int' 1
|   |   |         `-IntegerLiteral 0x1d5544c53a0 <col:29> 'int' 28
|   |   |-CompoundAssignOperator 0x1d5544c54e8 <line:179:9, col:23> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x1d5544c5458 <col:9> 'unsigned int' lvalue Var 0x1d5544c6468 'ctr32' 'unsigned int'
|   |   | `-CStyleCastExpr 0x1d5544c54c0 <col:18, col:23> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1d5544c54a8 <col:23> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x1d5544c5478 <col:23> 'size_t':'unsigned long long' lvalue Var 0x1d5544c5080 'blocks' 'size_t':'unsigned long long'
|   |   |-IfStmt 0x1d5544c5700 <line:180:9, line:183:9>
|   |   | |-BinaryOperator 0x1d5544c55a0 <line:180:13, col:21> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1d5544c5588 <col:13> 'unsigned long long' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x1d5544c5558 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1d5544c5518 <col:13> 'unsigned int' lvalue Var 0x1d5544c6468 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1d5544c5570 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d5544c5538 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1d5544c5080 'blocks' 'size_t':'unsigned long long'
|   |   | `-CompoundStmt 0x1d5544c56e0 <col:29, line:183:9>
|   |   |   |-CompoundAssignOperator 0x1d5544c5630 <line:181:13, col:23> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x1d5544c55c0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1d5544c5080 'blocks' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1d5544c5618 <col:23> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1d5544c5600 <col:23> 'unsigned int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1d5544c55e0 <col:23> 'unsigned int' lvalue Var 0x1d5544c6468 'ctr32' 'unsigned int'
|   |   |   `-BinaryOperator 0x1d5544c56c0 <line:182:13, col:21> 'unsigned int' '='
|   |   |     |-DeclRefExpr 0x1d5544c5660 <col:13> 'unsigned int' lvalue Var 0x1d5544c6468 'ctr32' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x1d5544c56a8 <col:21> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1d5544c5680 <col:21> 'int' 0
|   |   |-BinaryOperator 0x1d5544c5a48 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:89:26, line:78:49> 'u32':'unsigned int' '='
|   |   | |-UnaryOperator 0x1d5544c58f0 <line:89:26, col:36> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x1d5544c58c8 <col:27, col:36> 'u32 *' <BitCast>
|   |   | |   `-ParenExpr 0x1d5544c58a8 <col:34, col:36> 'unsigned char *':'unsigned char *'
|   |   | |     `-BinaryOperator 0x1d5544c5830 <.//openssl//file_jk/after\crypto\modes\ctr128.c:186:16, col:23> 'unsigned char *':'unsigned char *' '+'
|   |   | |       |-ImplicitCastExpr 0x1d5544c5818 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x1d5544c57d0 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544c6040 'ivec' 'unsigned char *':'unsigned char *'
|   |   | |       `-IntegerLiteral 0x1d5544c57f0 <col:23> 'int' 12
|   |   | `-ImplicitCastExpr 0x1d5544c5a30 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:25, col:49> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-CallExpr 0x1d5544c59f0 <col:25, col:49> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x1d5544c59d8 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1d5544c5908 <col:25> 'unsigned long (unsigned long)' Function 0x1d5544c6b30 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |   |     `-ImplicitCastExpr 0x1d5544c5a18 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |   |       `-CStyleCastExpr 0x1d5544c59b0 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x1d5544c5998 <col:46, col:48> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |   |           `-ParenExpr 0x1d5544c5978 <col:46, col:48> 'unsigned int' lvalue
|   |   |             `-DeclRefExpr 0x1d5544c5928 <.//openssl//file_jk/after\crypto\modes\ctr128.c:186:27> 'unsigned int' lvalue Var 0x1d5544c6468 'ctr32' 'unsigned int'
|   |   |-IfStmt 0x1d5544c5b98 <line:188:9, line:189:27>
|   |   | |-BinaryOperator 0x1d5544c5ae0 <line:188:13, col:22> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1d5544c5ab0 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d5544c5a68 <col:13> 'unsigned int' lvalue Var 0x1d5544c6468 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1d5544c5ac8 <col:22> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1d5544c5a88 <col:22> 'int' 0
|   |   | `-CallExpr 0x1d5544c5b58 <line:189:13, col:27> 'void'
|   |   |   |-ImplicitCastExpr 0x1d5544c5b40 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1d5544c5b00 <col:13> 'void (unsigned char *)' Function 0x1d5544be8c8 'ctr96_inc' 'void (unsigned char *)'
|   |   |   `-ImplicitCastExpr 0x1d5544c5b80 <col:23> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1d5544c5b20 <col:23> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544c6040 'ivec' 'unsigned char *':'unsigned char *'
|   |   |-CompoundAssignOperator 0x1d5544c5c10 <line:190:9, col:19> 'size_t':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x1d5544c5bb0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1d5544c5080 'blocks' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x1d5544c5bf8 <col:19> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1d5544c5bd0 <col:19> 'int' 16
|   |   |-CompoundAssignOperator 0x1d5544c5c98 <line:191:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x1d5544c5c40 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bf008 'len' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x1d5544c5c80 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d5544c5c60 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1d5544c5080 'blocks' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x1d5544c5d20 <line:192:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x1d5544c5cc8 <col:9> 'unsigned char *' lvalue ParmVar 0x1d5544bef90 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x1d5544c5d08 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d5544c5ce8 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1d5544c5080 'blocks' 'size_t':'unsigned long long'
|   |   `-CompoundAssignOperator 0x1d5544c5da8 <line:193:9, col:15> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     |-DeclRefExpr 0x1d5544c5d50 <col:9> 'const unsigned char *' lvalue ParmVar 0x1d5544bef10 'in' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x1d5544c5d90 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x1d5544c5d70 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1d5544c5080 'blocks' 'size_t':'unsigned long long'
|   |-IfStmt 0x1d5544c77f8 <line:195:5, line:206:5>
|   | |-ImplicitCastExpr 0x1d5544c5e70 <line:195:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1d5544c5e50 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bf008 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1d5544c77c0 <col:14, line:206:5>
|   |   |-CallExpr 0x1d5544c6f98 <line:196:9, col:33> 'void *'
|   |   | |-ImplicitCastExpr 0x1d5544c6f80 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1d5544c5e88 <col:9> 'void *(void *, int, unsigned long long)' Function 0x1d554449ee8 'memset' 'void *(void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1d5544c6fe8 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1d5544c6fd0 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d5544c5ea8 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544c6110 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   | |-IntegerLiteral 0x1d5544c5ec8 <col:28> 'int' 0
|   |   | `-ImplicitCastExpr 0x1d5544c7000 <col:31> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1d5544c5ef0 <col:31> 'int' 16
|   |   |-UnaryOperator 0x1d5544c70e0 <line:198:9, col:11> 'unsigned int' prefix '++'
|   |   | `-DeclRefExpr 0x1d5544c70c0 <col:11> 'unsigned int' lvalue Var 0x1d5544c6468 'ctr32' 'unsigned int'
|   |   |-BinaryOperator 0x1d5544c7348 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:89:26, line:78:49> 'u32':'unsigned int' '='
|   |   | |-UnaryOperator 0x1d5544c71f0 <line:89:26, col:36> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x1d5544c71c8 <col:27, col:36> 'u32 *' <BitCast>
|   |   | |   `-ParenExpr 0x1d5544c71a8 <col:34, col:36> 'unsigned char *':'unsigned char *'
|   |   | |     `-BinaryOperator 0x1d5544c7158 <.//openssl//file_jk/after\crypto\modes\ctr128.c:199:16, col:23> 'unsigned char *':'unsigned char *' '+'
|   |   | |       |-ImplicitCastExpr 0x1d5544c7140 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x1d5544c70f8 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544c6040 'ivec' 'unsigned char *':'unsigned char *'
|   |   | |       `-IntegerLiteral 0x1d5544c7118 <col:23> 'int' 12
|   |   | `-ImplicitCastExpr 0x1d5544c7330 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:25, col:49> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-CallExpr 0x1d5544c72f0 <col:25, col:49> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x1d5544c72d8 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1d5544c7208 <col:25> 'unsigned long (unsigned long)' Function 0x1d5544c6b30 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |   |     `-ImplicitCastExpr 0x1d5544c7318 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |   |       `-CStyleCastExpr 0x1d5544c72b0 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x1d5544c7298 <col:46, col:48> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |   |           `-ParenExpr 0x1d5544c7278 <col:46, col:48> 'unsigned int' lvalue
|   |   |             `-DeclRefExpr 0x1d5544c7228 <.//openssl//file_jk/after\crypto\modes\ctr128.c:199:27> 'unsigned int' lvalue Var 0x1d5544c6468 'ctr32' 'unsigned int'
|   |   |-IfStmt 0x1d5544c7498 <line:200:9, line:201:27>
|   |   | |-BinaryOperator 0x1d5544c73e0 <line:200:13, col:22> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1d5544c73b0 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d5544c7368 <col:13> 'unsigned int' lvalue Var 0x1d5544c6468 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1d5544c73c8 <col:22> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1d5544c7388 <col:22> 'int' 0
|   |   | `-CallExpr 0x1d5544c7458 <line:201:13, col:27> 'void'
|   |   |   |-ImplicitCastExpr 0x1d5544c7440 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1d5544c7400 <col:13> 'void (unsigned char *)' Function 0x1d5544be8c8 'ctr96_inc' 'void (unsigned char *)'
|   |   |   `-ImplicitCastExpr 0x1d5544c7480 <col:23> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1d5544c7420 <col:23> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544c6040 'ivec' 'unsigned char *':'unsigned char *'
|   |   `-WhileStmt 0x1d5544c77a8 <line:202:9, line:205:9>
|   |     |-UnaryOperator 0x1d5544c74d0 <line:202:16, col:19> 'size_t':'unsigned long long' postfix '--'
|   |     | `-DeclRefExpr 0x1d5544c74b0 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1d5544bf008 'len' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x1d5544c7788 <col:23, line:205:9>
|   |       |-BinaryOperator 0x1d5544c7730 <line:203:13, col:42> 'unsigned char' '='
|   |       | |-ArraySubscriptExpr 0x1d5544c7558 <col:13, col:18> 'unsigned char' lvalue
|   |       | | |-ImplicitCastExpr 0x1d5544c7528 <col:13> 'unsigned char *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1d5544c74e8 <col:13> 'unsigned char *' lvalue ParmVar 0x1d5544bef90 'out' 'unsigned char *'
|   |       | | `-ImplicitCastExpr 0x1d5544c7540 <col:17> 'unsigned int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1d5544c7508 <col:17> 'unsigned int' lvalue Var 0x1d5544c63e8 'n' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x1d5544c7718 <col:22, col:42> 'unsigned char' <IntegralCast>
|   |       |   `-BinaryOperator 0x1d5544c76f8 <col:22, col:42> 'int' '^'
|   |       |     |-ImplicitCastExpr 0x1d5544c76b0 <col:22, col:26> 'int' <IntegralCast>
|   |       |     | `-ImplicitCastExpr 0x1d5544c7698 <col:22, col:26> 'unsigned char' <LValueToRValue>
|   |       |     |   `-ArraySubscriptExpr 0x1d5544c75e8 <col:22, col:26> 'const unsigned char' lvalue
|   |       |     |     |-ImplicitCastExpr 0x1d5544c75b8 <col:22> 'const unsigned char *' <LValueToRValue>
|   |       |     |     | `-DeclRefExpr 0x1d5544c7578 <col:22> 'const unsigned char *' lvalue ParmVar 0x1d5544bef10 'in' 'const unsigned char *'
|   |       |     |     `-ImplicitCastExpr 0x1d5544c75d0 <col:25> 'unsigned int' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x1d5544c7598 <col:25> 'unsigned int' lvalue Var 0x1d5544c63e8 'n' 'unsigned int'
|   |       |     `-ImplicitCastExpr 0x1d5544c76e0 <col:30, col:42> 'int' <IntegralCast>
|   |       |       `-ImplicitCastExpr 0x1d5544c76c8 <col:30, col:42> 'unsigned char' <LValueToRValue>
|   |       |         `-ArraySubscriptExpr 0x1d5544c7678 <col:30, col:42> 'unsigned char' lvalue
|   |       |           |-ImplicitCastExpr 0x1d5544c7648 <col:30> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |       |           | `-DeclRefExpr 0x1d5544c7608 <col:30> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x1d5544c6110 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |       |           `-ImplicitCastExpr 0x1d5544c7660 <col:41> 'unsigned int' <LValueToRValue>
|   |       |             `-DeclRefExpr 0x1d5544c7628 <col:41> 'unsigned int' lvalue Var 0x1d5544c63e8 'n' 'unsigned int'
|   |       `-UnaryOperator 0x1d5544c7770 <line:204:13, col:15> 'unsigned int' prefix '++'
|   |         `-DeclRefExpr 0x1d5544c7750 <col:15> 'unsigned int' lvalue Var 0x1d5544c63e8 'n' 'unsigned int'
|   `-BinaryOperator 0x1d5544c7898 <line:208:5, col:12> 'unsigned int' '='
|     |-UnaryOperator 0x1d5544c7848 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1d5544c7830 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1d5544c7810 <col:6> 'unsigned int *' lvalue ParmVar 0x1d5544c6190 'num' 'unsigned int *'
|     `-ImplicitCastExpr 0x1d5544c7880 <col:12> 'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x1d5544c7860 <col:12> 'unsigned int' lvalue Var 0x1d5544c63e8 'n' 'unsigned int'
`-FunctionDecl 0x1d5544c6b30 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:25> col:25 implicit used _byteswap_ulong 'unsigned long (unsigned long)' extern
  |-ParmVarDecl 0x1d5544c6bd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-NoThrowAttr 0x1d5544c6c40 <col:25> Implicit
  `-ConstAttr 0x1d5544c6c98 <col:25> Implicit
