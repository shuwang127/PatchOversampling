TranslationUnitDecl 0x2259847ddf8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2259847e690 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2259847e390 '__int128'
|-TypedefDecl 0x2259847e700 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2259847e3b0 'unsigned __int128'
|-TypedefDecl 0x2259847ea38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2259847e7f0 'struct __NSConstantString_tag'
|   `-Record 0x2259847e758 '__NSConstantString_tag'
|-TypedefDecl 0x2259847eaa8 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x2259847dfd0 'unsigned long long'
|-TypedefDecl 0x2259847eb40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2259847eb00 'char *'
|   `-BuiltinType 0x2259847de90 'char'
|-TypedefDecl 0x2259847ebb0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2259847eb00 'char *'
|   `-BuiltinType 0x2259847de90 'char'
|-TypedefDecl 0x2259847ec20 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x2259847df30 'long long'
|-TypedefDecl 0x2259847ec90 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x2259847dfd0 'unsigned long long'
|-TypedefDecl 0x2259847ed00 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x2259847df90 'unsigned int'
|-TypedefDecl 0x2259847ed70 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x2259847df50 'unsigned char'
|-RecordDecl 0x22599dc3790 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x22599dc3880 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x22599dc38e8 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x22599dc3998 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x22599dc3940 'struct u128' sugar
|   `-RecordType 0x22599dc3830 'u128'
|     `-Record 0x22599dc3790 ''
|-RecordDecl 0x22599dc3a08 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x22599dc3ac0 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x22599dc3c58 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x22599dc3da8 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x22599dc3ef8 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x22599dc4078 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x22599dc4128 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x22599dc41a0 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x22599dc4218 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x22599dc4290 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x22599dc4308 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x22599dc4380 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x22599dc4538 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x22599dcaa78 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x22599dcaf88 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x22599dcaff8 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x22599dcb068 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x22599dcb0d8 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x22599dcb148 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x22599dcb208 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x22599dcb2d8 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x22599dcb348 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x22599dcb3b8 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x22599dcb428 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x22599dcb480 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x22599dcb540 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x22599dcb660 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x22599dcb718 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x22599dcc820 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x22599dcc898 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x22599dcc900 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x22599dcc970 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x22599dcc9e0 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x22599dcca90 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x22599dccbb0 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x22599dccc70 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x22599dccd28 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x22599dcccd0 'union OCB_BLOCK' sugar
|   `-RecordType 0x22599dccb30 'OCB_BLOCK'
|     `-Record 0x22599dcca90 ''
|-RecordDecl 0x22599dccd98 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x22599dcce68 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x22599dcced8 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x22599dccf48 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x22599dccfb8 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x22599dcd028 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x22599dcd090 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x22599dcd0f8 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x22599dcd180 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x22599dcd1e8 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x22599dcd2a8 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x22599dcd300 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x22599dcd3d0 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x22599dcd438 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x22599dcd4a0 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x22599dcd508 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x22599dcd570 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x22599dcd5d8 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x22599dcd688 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x22599dcd748 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2259847dfd0 'unsigned long long'
|-TypedefDecl 0x22599dcd7b8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2259847eb00 'char *'
|   `-BuiltinType 0x2259847de90 'char'
|-FunctionDecl 0x22599f9a350 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x22599f9a3f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x22599f9a460 <col:21> Implicit
|-FunctionDecl 0x22599f9a4b8 prev 0x22599f9a350 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x22599f9a1e8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x22599f9a5a8 <col:21> Inherited Implicit
|-TypedefDecl 0x22599f9a5e8 prev 0x2259847eaa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2259847dfd0 'unsigned long long'
|-TypedefDecl 0x22599f9a690 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x22599f9a660 'size_t' sugar
|   |-Typedef 0x22599f9a5e8 'size_t'
|   `-BuiltinType 0x2259847dfd0 'unsigned long long'
|-TypedefDecl 0x22599f9a700 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2259847df30 'long long'
|-TypedefDecl 0x22599f9a770 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2259847df30 'long long'
|-TypedefDecl 0x22599f9a7e0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2259847df70 'unsigned short'
|-TypedefDecl 0x22599f9a850 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x2259847df70 'unsigned short'
|-TypedefDecl 0x22599f9a8c0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2259847df70 'unsigned short'
|-TypedefDecl 0x22599f9a930 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2259847def0 'int'
|-TypedefDecl 0x22599f9a9a0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2259847df10 'long'
|-TypedefDecl 0x22599f9aa10 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2259847df30 'long long'
|-TypedefDecl 0x22599f9aaa0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x22599f9aa70 '__time64_t' sugar
|   |-Typedef 0x22599f9aa10 '__time64_t'
|   `-BuiltinType 0x2259847df30 'long long'
|-FunctionDecl 0x22599f9ac18 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x22599f9ae38 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x22599fa2470 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x22599f9af78 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x22599f9aff0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x22599f9b068 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x22599f9b0e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x22599fa2210 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x22599fa2550 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x22599fa2610 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x22599fa2780 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x22599fa2730 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x22599fa26d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x22599fa25f0 'struct threadlocaleinfostruct'
|       `-Record 0x22599fad290 'threadlocaleinfostruct'
|-TypedefDecl 0x22599fa2890 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x22599fa2840 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x22599fa27e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x22599fa26b0 'struct threadmbcinfostruct'
|       `-Record 0x22599fa2610 'threadmbcinfostruct'
|-RecordDecl 0x22599fa28e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x22599fa29a0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x22599fa2a60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x22599fa2af0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x22599fa2b80 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x22599fa2c38 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x22599fa2be0 'struct localeinfo_struct' sugar
|   `-RecordType 0x22599fa2a40 'struct localeinfo_struct'
|     `-Record 0x22599fa29a0 'localeinfo_struct'
|-TypedefDecl 0x22599fa2d10 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x22599fa2cc0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x22599fa2be0 'struct localeinfo_struct' sugar
|     `-RecordType 0x22599fa2a40 'struct localeinfo_struct'
|       `-Record 0x22599fa29a0 'localeinfo_struct'
|-RecordDecl 0x22599fa2d88 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x22599fa2e40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x22599fa2eb8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x22599fa2f78 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x22599fa3010 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x22599fa3080 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x22599fa3138 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x22599fa30e0 'struct localerefcount' sugar
|   `-RecordType 0x22599fa2e20 'struct localerefcount'
|     `-Record 0x22599fa2d88 'localerefcount'
|-RecordDecl 0x22599fad290 prev 0x22599fa2550 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x22599fad310 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x22599fad388 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x22599fad3f8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x22599fad468 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x22599fad4d8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x22599fad698 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x22599fad708 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x22599fad778 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x22599fad7e8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x22599fad858 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x22599fad8c8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x22599fad920 parent 0x2259847ddf8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x22599fadab0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x22599fadb20 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x22599fadb90 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x22599fadc00 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x22599fadc70 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x22599fadce0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x22599faddf0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x22599fadf28 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x22599fadfd8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x22599fadf80 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x22599fa25f0 'struct threadlocaleinfostruct'
|     `-Record 0x22599fad290 'threadlocaleinfostruct'
|-FunctionDecl 0x22599faf440 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x22599fae060 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x22599fae110 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x22599fae190 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x22599fae208 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22599faf808 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x22599faf8a8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x22599faf910 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x22599faf978 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22599faf9f8 prev 0x22599faf808 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x22599faf530 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x22599faf5b0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x22599faf628 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22599fafdb8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x22599fafae0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x22599fafb60 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x22599fafbd8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22599fb12d0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x22599fafea0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x22599faff20 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x22599faff98 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22599fb0030 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22599fb15d8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x22599fb1678 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x22599fb16e0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x22599fb1748 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22599fb17c8 prev 0x22599fb15d8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x22599fb13c0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x22599fb1440 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x22599fb14b8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22599fb1b88 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x22599fb1c28 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x22599fb1c90 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x22599fb1cf8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22599fb1d78 prev 0x22599fb1b88 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x22599fb18b0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x22599fb1930 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x22599fb19a8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22599fb2218 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x22599fb1e88 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x22599fb1f20 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x22599fb1fa0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x22599fb2018 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x22599fb05e8 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x22599fb0688 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x22599fb06f0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x22599fb0758 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22599fb07d8 prev 0x22599fb05e8 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x22599fb0310 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x22599fb0390 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x22599fb0408 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22599fb0c58 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x22599fb0cf8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x22599fb0d60 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x22599fb0dc8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x22599fb0e30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22599fb0eb8 prev 0x22599fb0c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x22599fb09a0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x22599fb0a20 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x22599fb0aa0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x22599fb0b18 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22599fb0f78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x22599faa300 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x22599fb1140 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x22599fb11c0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x22599fb1238 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x22599faa3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x22599faa7b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x22599faa4e0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x22599faa558 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22599faa5d8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x22599faab80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x22599faa990 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x22599faaa10 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x22599faac30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22599fab040 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x22599faad78 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x22599faadf0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x22599faae70 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x22599fb6510 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x22599fb65b0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x22599fb6618 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22599fb6690 prev 0x22599fb6510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x22599fb6320 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x22599fb63a0 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x22599fb6740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22599fb6a98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x22599fb6888 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x22599fb6900 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x22599fb6980 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x22599fb6dc0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x22599fb6e60 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x22599fb6ec8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22599fb6f40 prev 0x22599fb6dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x22599fb6c40 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x22599fb6cc0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x22599fb6ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x22599fb32f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x22599fb3390 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22599fb33f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22599fb3470 prev 0x22599fb32f0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x22599fb7138 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x22599fb71b8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x22599fb36c0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x22599fb3760 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x22599fb37d0 prev 0x22599fb36c0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x22599fb3550 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x22599fb3ac8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x22599fb38a8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x22599fb3920 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22599fb3d18 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x22599fb3ba8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x22599fb3c20 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x22599fb4048 <line:131:1, line:133:1>
|   `-ReturnStmt 0x22599fb4038 <line:132:5, col:51>
|     `-ConditionalOperator 0x22599fb4008 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x22599fb3e78 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x22599fb3e58 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x22599fb3e28 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x22599fb3de0 <col:13> 'const char *' lvalue ParmVar 0x22599fb3ba8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x22599fb3e40 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x22599fb3e00 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x22599fb3ff0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x22599fb3e98 <col:24> 'int' 0
|       `-CallExpr 0x22599fb3f90 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x22599fb3f78 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x22599fb3ec0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x22599fb3ac8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x22599fb3fc0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x22599fb3ee0 <col:36> 'const char *' lvalue ParmVar 0x22599fb3ba8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x22599fb3fd8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x22599fb3f00 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x22599fb3c20 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x22599fb4348 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x22599fb4078 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x22599fb40f0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x22599fb4170 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x22599fb41e8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x22599fb4650 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x22599fb46f0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x22599fb4758 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x22599fb47c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x22599fb4840 prev 0x22599fb4650 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x22599fb4438 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x22599fb44b8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x22599fb4530 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x22599fb4a78 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x22599fb4928 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x22599fb4d40 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x22599fb4de0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x22599fb4e48 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x22599fb4ec0 prev 0x22599fb4d40 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x22599fb4b50 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x22599fb4bd0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x22599fb5120 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x22599fb4fa0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x22599fb5020 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x22599fb5390 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x22599fb5200 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x22599fb5280 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x22599fb5748 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x22599fb5470 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x22599fb54f0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x22599fb5568 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22599fb59b0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x22599fb5830 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x22599fb58b0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x22599fb5ca8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x22599fb5a90 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x22599fb5b10 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x22599fb5b88 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22599fb5f10 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x22599fb5d90 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x22599fb5e10 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x22599fb6208 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x22599fb5ff0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x22599fb6070 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x22599fb60e8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22599f70598 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x22599f702c0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x22599f70340 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x22599f703b8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22599f70a00 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x22599f70680 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x22599f70700 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x22599f70778 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22599f707f0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x22599f70d08 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x22599f70af0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x22599f70b70 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x22599f70be8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x22599f710a0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x22599f70df0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x22599f70e70 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x22599f70ee8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x22599f70f60 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a010138 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2259a0101d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2259a010240 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2259a0102b8 prev 0x2259a010138 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x22599f71190 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x22599f71210 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x2259a010570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2259a010490 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x2259a010618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a0109f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x2259a010760 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x2259a0107d8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a010858 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x2259a010d08 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x2259a010da8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2259a010e18 prev 0x2259a010d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x2259a010bd0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x2259a010ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a012260 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2259a012050 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x2259a0120c8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a012148 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x2259a012568 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2259a012348 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2259a0123c0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a012858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2259a012708 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2259a012900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a012d10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2259a012a48 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2259a012ac0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a012b38 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a00d0a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2259a012eb8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2259a012f30 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2259a00d150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a00d608 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2259a00d298 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x2259a00d310 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2259a00d390 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x2259a00d408 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2259a00da88 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2259a00db28 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2259a00db90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2259a00dbf8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2259a00dc78 prev 0x2259a00da88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2259a00d7b8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x2259a00d838 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x2259a00d8b0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2259a00dd30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a0110e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2259a011180 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2259a0111e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2259a011250 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2259a0112d0 prev 0x2259a0110e0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2259a00de78 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x2259a00def8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x2259a00df70 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a0115d0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2259a0113b8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x2259a011438 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x2259a0114b0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a011968 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2259a0116b8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2259a011738 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2259a0117b0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a011828 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a011d00 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2259a011a58 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2259a011ad0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2259a011b50 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x2259a011bc8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2259a00e098 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2259a00e138 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2259a00e1a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2259a00e208 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2259a00e288 prev 0x2259a00e098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2259a011eb0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x2259a011f30 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x2259a011fa8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2259a00e340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a00e7f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x2259a00e488 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x2259a00e500 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2259a00e580 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x2259a00e5f8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a00ec78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2259a00e9a8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x2259a00ea28 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x2259a00eaa0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2259a00ed30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a00c060 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2259a00c100 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2259a00c168 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2259a00c1e0 prev 0x2259a00c060 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2259a00ee78 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2259a00eef8 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x2259a00c440 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2259a00c4e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2259a00c548 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2259a00c5c0 prev 0x2259a00c440 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2259a00c2c0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2259a00c340 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x2259a00c780 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x2259a00c6a0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x2259a00c9d0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2259a00ca70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2259a00cad8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2259a00cb50 prev 0x2259a00c9d0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2259a00c858 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x2259a00c8d8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x2259a00cdb0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2259a00ce50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2259a00ceb8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2259a00cf30 prev 0x2259a00cdb0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2259a00cc30 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x2259a00ccb0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x2259a00f290 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2259a00f330 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2259a00f398 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2259a00f410 prev 0x2259a00f290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x2259a00f110 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x2259a00f190 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x2259a00f4c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a00f8a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x2259a00f608 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x2259a00f688 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x2259a00f708 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x2259a00fb00 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2259a00f990 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2259a00fa08 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a00fd80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2259a00fca0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2259a00fe28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a00b170 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2259a00ff70 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2259a00afe0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a00b058 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a00b490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2259a00b318 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2259a00b390 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2259a00b540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a00b950 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2259a00b9f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2259a00ba58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2259a00bac0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2259a00bb40 prev 0x2259a00b950 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2259a00b688 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2259a00b708 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x2259a00b780 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a016090 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2259a00bc28 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2259a00bca8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x2259a00bd20 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a00bd98 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a016340 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x2259a0163e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2259a016450 prev 0x2259a016340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x2259a016260 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x2259a0164f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x2259a016840 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2259a0166c0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2259a016740 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2259a0168f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x2259a016c38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2259a016ab8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2259a016b38 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2259a016ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x2259a016f90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2259a016eb0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2259a017038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x2259a017478 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2259a017260 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x2259a0172e0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x2259a017358 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2259a017530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x2259a017910 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2259a0176f8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x2259a017778 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x2259a0177f0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2259a0179c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x2259a017c70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2259a017b90 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2259a017d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x2259a0180b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2259a017ee0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x2259a017f60 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x2259a018160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x2259a018408 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2259a018328 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2259a0184b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x2259a018740 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x2259a0185d0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x2259a018ad0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2259a018810 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2259a018888 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2259a018900 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x2259a018e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a018c70 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2259a018ce8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2259a018f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a015298 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x2259a015338 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2259a0153a0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x2259a015418 prev 0x2259a015298 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x2259a015080 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2259a0150f8 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2259a015710 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x2259a0157b0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2259a015818 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2259a015890 prev 0x2259a015710 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x2259a0154f0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2259a015568 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x2259a015b70 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2259a015968 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2259a0159e0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2259a015a58 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x2259a015e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a015d10 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2259a015d88 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2259a015f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a01a2e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a01a0d0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2259a01a148 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x2259a01a530 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x2259a01a5d0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2259a01a640 prev 0x2259a01a530 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x2259a01a3c0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x2259a01a928 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x2259a01a710 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2259a01a788 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a01ab70 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x2259a01aa00 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x2259a01aa78 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2259a01af08 <line:306:1, line:308:1>
|   `-ReturnStmt 0x2259a01aef8 <line:307:5, col:56>
|     `-ConditionalOperator 0x2259a01aec8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x2259a01ad30 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x2259a01ad10 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x2259a01ace0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2259a01ac38 <col:13> 'const wchar_t *' lvalue ParmVar 0x2259a01aa00 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x2259a01acf8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x2259a01acc0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x2259a01ac98 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x2259a01ac58 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x2259a01aeb0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2259a01ad50 <col:29> 'int' 0
|       `-CallExpr 0x2259a01ae50 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2259a01ae38 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2259a01ad78 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x2259a01a928 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x2259a01ae80 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x2259a01ad98 <col:41> 'const wchar_t *' lvalue ParmVar 0x2259a01aa00 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x2259a01ae98 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2259a01adb8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a01aa78 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a014278 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2259a01af30 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2259a01afa8 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2259a01b020 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2259a014070 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2259a0146e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2259a014420 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2259a014498 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2259a014510 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2259a014798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a014ba8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x2259a014c48 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x2259a014cb0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2259a014d18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2259a014d98 prev 0x2259a014ba8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x2259a0148d8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a014950 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2259a0149c8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a013118 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2259a014e78 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2259a014ef0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2259a014f68 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2259a014fe0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2259a0134c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2259a0132c0 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2259a013338 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2259a0133b0 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2259a013580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a0138d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a0136c0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2259a013738 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x2259a013b20 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2259a0139b0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2259a013a28 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2259a013d68 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a013bf8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2259a013c70 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x2259a013fb0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a013e40 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2259a013eb8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x2259a01b338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a01b1c8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2259a01b240 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x2259a01b3e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a01b850 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2259a01b528 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x2259a01b5a0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x2259a01b680 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x2259a01bb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x2259a01b9f8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x2259a01bc18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a01c020 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2259a01bd58 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2259a01bdd0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a01be50 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x2259a020330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2259a020258 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2259a0203d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a0207a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x2259a020518 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x2259a020590 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a020608 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2259a0209f8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a020880 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2259a0208f8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x2259a020d98 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2259a020ad0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a020b48 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2259a020bc0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a021088 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2259a020e78 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a020ef0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2259a020f68 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a019470 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2259a019100 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a019178 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2259a0191f0 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a019268 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a0198c8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x2259a019558 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2259a0195d0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2259a019648 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2259a0196c0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a019d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2259a019a70 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x2259a019ae8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2259a019b60 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2259a019de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a021140 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x2259a019f28 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x2259a0214d0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x2259a021210 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2259a021288 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a021300 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x2259a021888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2259a021670 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x2259a0216e8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2259a021938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a021c98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2259a021a78 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x2259a021af0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a021f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2259a021e30 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2259a021fb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a022410 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2259a022150 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x2259a0221c8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a022240 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a0227c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2259a0225b0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2259a022628 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2259a022878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a022b28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2259a0229b8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x2259a022a30 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a022d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2259a022cc0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2259a022e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a0231a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2259a022f80 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x2259a022ff8 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a023070 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a0234b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2259a023340 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2259a0233b8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2259a023560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2259a023960 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2259a0236a0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2259a023718 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2259a023790 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a023da8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2259a023a40 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2259a023ab8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2259a023b30 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a023ba8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a024008 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a023e90 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2259a023f08 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x2259a01c288 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2259a0240e0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a01c0f0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2259a01c168 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a01c4e0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a01c368 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2259a01c3e0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x2259a01c7c8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2259a01c5b8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a01c630 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2259a01c6a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a01cab8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2259a01c8a8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a01c920 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2259a01c998 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a01ce40 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2259a01cb98 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a01cc10 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2259a01cc88 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a01cd00 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a0241b8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2259a01cf28 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a01cfa0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2259a01d018 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a024540 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2259a024298 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a024310 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2259a024388 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2259a024400 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2259a0247a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2259a0246c8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2259a024848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x2259a024b80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a024a08 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a024a80 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2259a024c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x2259a025000 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2259a024df0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a024e68 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2259a024ee0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2259a0250b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x2259a025500 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2259a0252f8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2259a025370 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2259a0253e8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2259a0255b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x2259a025850 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2259a025778 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2259a0258f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x2259a025c28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2259a025ab8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x2259a025b30 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2259a025cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x2259a025f70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2259a025e98 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2259a026018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x2259a01e298 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2259a01e1c0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2259a01e340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x2259a01e678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2259a01e500 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2259a01e578 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2259a01e728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x2259a01e958 <.//openssl//file_jk/after\crypto\modes\ctr128.c:20:1, line:30:1> line:20:13 used ctr128_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x2259a01e880 <col:24, col:39> col:39 used counter 'unsigned char *'
| `-CompoundStmt 0x2259a01ef68 <line:21:1, line:30:1>
|   |-DeclStmt 0x2259a01eba0 <line:22:5, col:22>
|   | |-VarDecl 0x2259a01ea28 <col:5, col:13> col:9 used n 'u32':'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x2259a01eab8 <col:13> 'u32':'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x2259a01ea90 <col:13> 'int' 16
|   | `-VarDecl 0x2259a01eae0 <col:5, col:21> col:17 used c 'u32':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x2259a01eb70 <col:21> 'u32':'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x2259a01eb48 <col:21> 'int' 1
|   `-DoStmt 0x2259a01ef48 <line:24:5, line:29:15>
|     |-CompoundStmt 0x2259a01eee0 <line:24:8, line:29:5>
|     | |-UnaryOperator 0x2259a01ebf0 <line:25:9, col:11> 'u32':'unsigned int' prefix '--'
|     | | `-DeclRefExpr 0x2259a01ebb8 <col:11> 'u32':'unsigned int' lvalue Var 0x2259a01ea28 'n' 'u32':'unsigned int'
|     | |-CompoundAssignOperator 0x2259a01ed00 <line:26:9, col:23> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|     | | |-DeclRefExpr 0x2259a01ec08 <col:9> 'u32':'unsigned int' lvalue Var 0x2259a01eae0 'c' 'u32':'unsigned int'
|     | | `-ImplicitCastExpr 0x2259a01ece8 <col:14, col:23> 'unsigned int' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x2259a01ecd0 <col:14, col:23> 'unsigned char' <LValueToRValue>
|     | |     `-ArraySubscriptExpr 0x2259a01ecb0 <col:14, col:23> 'unsigned char' lvalue
|     | |       |-ImplicitCastExpr 0x2259a01ec80 <col:14> 'unsigned char *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x2259a01ec40 <col:14> 'unsigned char *' lvalue ParmVar 0x2259a01e880 'counter' 'unsigned char *'
|     | |       `-ImplicitCastExpr 0x2259a01ec98 <col:22> 'u32':'unsigned int' <LValueToRValue>
|     | |         `-DeclRefExpr 0x2259a01ec60 <col:22> 'u32':'unsigned int' lvalue Var 0x2259a01ea28 'n' 'u32':'unsigned int'
|     | |-BinaryOperator 0x2259a01ee30 <line:27:9, col:26> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x2259a01eda0 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x2259a01ed70 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x2259a01ed30 <col:9> 'unsigned char *' lvalue ParmVar 0x2259a01e880 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x2259a01ed88 <col:17> 'u32':'unsigned int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x2259a01ed50 <col:17> 'u32':'unsigned int' lvalue Var 0x2259a01ea28 'n' 'u32':'unsigned int'
|     | | `-CStyleCastExpr 0x2259a01ee08 <col:22, col:26> 'u8':'unsigned char' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x2259a01edf0 <col:26> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|     | |     `-DeclRefExpr 0x2259a01edc0 <col:26> 'u32':'unsigned int' lvalue Var 0x2259a01eae0 'c' 'u32':'unsigned int'
|     | `-CompoundAssignOperator 0x2259a01eeb0 <line:28:9, col:15> 'u32':'unsigned int' '>>=' ComputeLHSTy='u32':'unsigned int' ComputeResultTy='u32':'unsigned int'
|     |   |-DeclRefExpr 0x2259a01ee50 <col:9> 'u32':'unsigned int' lvalue Var 0x2259a01eae0 'c' 'u32':'unsigned int'
|     |   `-IntegerLiteral 0x2259a01ee70 <col:15> 'int' 8
|     `-ImplicitCastExpr 0x2259a01ef30 <line:29:14> 'u32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x2259a01ef10 <col:14> 'u32':'unsigned int' lvalue Var 0x2259a01ea28 'n' 'u32':'unsigned int'
|-FunctionDecl 0x2259a01f048 <line:33:1, line:57:1> line:33:13 used ctr128_inc_aligned 'void (unsigned char *)' static
| |-ParmVarDecl 0x2259a01efa0 <col:32, col:47> col:47 used counter 'unsigned char *'
| `-CompoundStmt 0x2259a0261e8 <line:34:1, line:57:1>
|   |-DeclStmt 0x2259a0273d0 <line:35:5, col:26>
|   | |-VarDecl 0x2259a0271d8 <col:5, col:13> col:13 used data 'size_t *'
|   | |-VarDecl 0x2259a027250 <col:5, col:19> col:19 used c 'size_t':'unsigned long long'
|   | |-VarDecl 0x2259a0272c8 <col:5, col:22> col:22 used d 'size_t':'unsigned long long'
|   | `-VarDecl 0x2259a027340 <col:5, col:25> col:25 used n 'size_t':'unsigned long long'
|   |-DeclStmt 0x2259a027738 <line:36:5, line:41:6>
|   | |-RecordDecl 0x2259a0273e8 <line:36:11, line:39:5> line:36:11 union definition
|   | | |-FieldDecl 0x2259a0274b8 <line:37:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x2259a027520 <line:38:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x2259a0275d8 <line:36:5, line:41:5> line:39:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)' cinit
|   |   `-InitListExpr 0x2259a0276c0 <col:19, line:41:5> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)' field Field 0x2259a0274b8 'one' 'long'
|   |     `-ImplicitCastExpr 0x2259a027708 <line:40:9> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x2259a027640 <col:9> 'int' 1
|   |-IfStmt 0x2259a027ae0 <line:43:5, line:46:5>
|   | |-BinaryOperator 0x2259a027928 <line:43:9, col:67> 'int' '||'
|   | | |-ImplicitCastExpr 0x2259a027910 <col:9, col:19> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2259a0278f8 <col:9, col:19> 'char' <LValueToRValue>
|   | | |   `-MemberExpr 0x2259a027788 <col:9, col:19> 'const char' lvalue .little 0x2259a027520
|   | | |     `-DeclRefExpr 0x2259a027750 <col:9> 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)' lvalue Var 0x2259a0275d8 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\ctr128.c:36:11)'
|   | | `-BinaryOperator 0x2259a0278d8 <col:29, col:67> 'int' '!='
|   | |   |-ParenExpr 0x2259a027878 <col:29, col:62> 'unsigned long long'
|   | |   | `-BinaryOperator 0x2259a027858 <col:30, col:61> 'unsigned long long' '%'
|   | |   |   |-CStyleCastExpr 0x2259a027800 <col:30, col:38> 'size_t':'unsigned long long' <PointerToIntegral>
|   | |   |   | `-ImplicitCastExpr 0x2259a0277e8 <col:38> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   |   |   `-DeclRefExpr 0x2259a0277b8 <col:38> 'unsigned char *' lvalue ParmVar 0x2259a01efa0 'counter' 'unsigned char *'
|   | |   |   `-UnaryExprOrTypeTraitExpr 0x2259a027838 <col:48, col:61> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x2259a0278c0 <col:67> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x2259a027898 <col:67> 'int' 0
|   | `-CompoundStmt 0x2259a027ac0 <col:70, line:46:5>
|   |   |-CallExpr 0x2259a027a70 <line:44:9, col:27> 'void'
|   |   | |-ImplicitCastExpr 0x2259a027a58 <col:9> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2259a0279e8 <col:9> 'void (unsigned char *)' Function 0x2259a01e958 'ctr128_inc' 'void (unsigned char *)'
|   |   | `-ImplicitCastExpr 0x2259a027a98 <col:20> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2259a027a08 <col:20> 'unsigned char *' lvalue ParmVar 0x2259a01efa0 'counter' 'unsigned char *'
|   |   `-ReturnStmt 0x2259a027ab0 <line:45:9>
|   |-BinaryOperator 0x2259a027ba0 <line:48:5, col:22> 'size_t *' '='
|   | |-DeclRefExpr 0x2259a027af8 <col:5> 'size_t *' lvalue Var 0x2259a0271d8 'data' 'size_t *'
|   | `-CStyleCastExpr 0x2259a027b78 <col:12, col:22> 'size_t *' <BitCast>
|   |   `-ImplicitCastExpr 0x2259a027b60 <col:22> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x2259a027b30 <col:22> 'unsigned char *' lvalue ParmVar 0x2259a01efa0 'counter' 'unsigned char *'
|   |-BinaryOperator 0x2259a027c38 <line:49:5, col:9> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2259a027bc0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2259a027250 'c' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x2259a027c20 <col:9> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x2259a027bf8 <col:9> 'int' 1
|   |-BinaryOperator 0x2259a027d20 <line:50:5, col:27> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2259a027c58 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2259a027340 'n' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x2259a027d00 <col:9, col:27> 'unsigned long long' '/'
|   |   |-ImplicitCastExpr 0x2259a027ce8 <col:9> 'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x2259a027c90 <col:9> 'int' 16
|   |   `-UnaryExprOrTypeTraitExpr 0x2259a027cc8 <col:14, col:27> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   `-DoStmt 0x2259a0261c8 <line:51:5, line:56:15>
|     |-CompoundStmt 0x2259a028178 <line:51:8, line:56:5>
|     | |-UnaryOperator 0x2259a027d60 <line:52:9, col:11> 'size_t':'unsigned long long' prefix '--'
|     | | `-DeclRefExpr 0x2259a027d40 <col:11> 'size_t':'unsigned long long' lvalue Var 0x2259a027340 'n' 'size_t':'unsigned long long'
|     | |-BinaryOperator 0x2259a027ea8 <line:53:9, col:24> 'size_t':'unsigned long long' '='
|     | | |-DeclRefExpr 0x2259a027d78 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2259a0272c8 'd' 'size_t':'unsigned long long'
|     | | `-CompoundAssignOperator 0x2259a027e78 <col:13, col:24> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   |-ArraySubscriptExpr 0x2259a027e20 <col:13, col:19> 'size_t':'unsigned long long' lvalue
|     | |   | |-ImplicitCastExpr 0x2259a027df0 <col:13> 'size_t *' <LValueToRValue>
|     | |   | | `-DeclRefExpr 0x2259a027db0 <col:13> 'size_t *' lvalue Var 0x2259a0271d8 'data' 'size_t *'
|     | |   | `-ImplicitCastExpr 0x2259a027e08 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   `-DeclRefExpr 0x2259a027dd0 <col:18> 'size_t':'unsigned long long' lvalue Var 0x2259a027340 'n' 'size_t':'unsigned long long'
|     | |   `-ImplicitCastExpr 0x2259a027e60 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     | |     `-DeclRefExpr 0x2259a027e40 <col:24> 'size_t':'unsigned long long' lvalue Var 0x2259a027250 'c' 'size_t':'unsigned long long'
|     | `-BinaryOperator 0x2259a028158 <line:55:9, col:54> 'size_t':'unsigned long long' '='
|     |   |-DeclRefExpr 0x2259a027ec8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2259a027250 'c' 'size_t':'unsigned long long'
|     |   `-BinaryOperator 0x2259a028138 <col:13, col:54> 'unsigned long long' '>>'
|     |     |-ParenExpr 0x2259a028008 <col:13, col:26> 'unsigned long long'
|     |     | `-BinaryOperator 0x2259a027fe8 <col:14, col:25> 'unsigned long long' '&'
|     |     |   |-ParenExpr 0x2259a027f78 <col:14, col:20> 'unsigned long long'
|     |     |   | `-BinaryOperator 0x2259a027f58 <col:15, col:19> 'unsigned long long' '-'
|     |     |   |   |-ImplicitCastExpr 0x2259a027f28 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |   |   | `-DeclRefExpr 0x2259a027ee8 <col:15> 'size_t':'unsigned long long' lvalue Var 0x2259a0272c8 'd' 'size_t':'unsigned long long'
|     |     |   |   `-ImplicitCastExpr 0x2259a027f40 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |   |     `-DeclRefExpr 0x2259a027f08 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2259a027250 'c' 'size_t':'unsigned long long'
|     |     |   `-UnaryOperator 0x2259a027fd0 <col:24, col:25> 'size_t':'unsigned long long' prefix '~' cannot overflow
|     |     |     `-ImplicitCastExpr 0x2259a027fb8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|     |     |       `-DeclRefExpr 0x2259a027f98 <col:25> 'size_t':'unsigned long long' lvalue Var 0x2259a0272c8 'd' 'size_t':'unsigned long long'
|     |     `-ParenExpr 0x2259a028118 <col:31, col:54> 'unsigned long long'
|     |       `-BinaryOperator 0x2259a0280f8 <col:32, col:53> 'unsigned long long' '-'
|     |         |-BinaryOperator 0x2259a028098 <col:32, col:49> 'unsigned long long' '*'
|     |         | |-UnaryExprOrTypeTraitExpr 0x2259a028038 <col:32, col:45> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     |         | `-ImplicitCastExpr 0x2259a028080 <col:49> 'unsigned long long' <IntegralCast>
|     |         |   `-IntegerLiteral 0x2259a028058 <col:49> 'int' 8
|     |         `-ImplicitCastExpr 0x2259a0280e0 <col:53> 'unsigned long long' <IntegralCast>
|     |           `-IntegerLiteral 0x2259a0280b8 <col:53> 'int' 1
|     `-ImplicitCastExpr 0x2259a0261b0 <line:56:14> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x2259a026190 <col:14> 'size_t':'unsigned long long' lvalue Var 0x2259a027340 'n' 'size_t':'unsigned long long'
|-FunctionDecl 0x2259a026868 <line:71:1, line:132:1> line:71:6 invalid CRYPTO_ctr128_encrypt 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, unsigned char *, unsigned int *, int)'
| |-ParmVarDecl 0x2259a026248 <col:28, col:49> col:49 used in 'const unsigned char *'
| |-ParmVarDecl 0x2259a0262c8 <col:53, col:68> col:68 used out 'unsigned char *'
| |-ParmVarDecl 0x2259a026340 <line:72:28, col:35> col:35 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2259a0263c0 <col:40, col:52> col:52 used key 'const void *'
| |-ParmVarDecl 0x2259a0264c0 <line:73:28, col:49> col:42 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x2259a026590 <line:74:28, col:55> col:42 used ecount_buf 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x2259a026640 <col:58, col:72> col:72 used num 'unsigned int *'
| |-ParmVarDecl 0x2259a0266c0 <line:75:28, col:39> col:39 invalid block 'int'
| `-CompoundStmt 0x2259a0298b8 <line:76:1, line:132:1>
|   |-DeclStmt 0x2259a0269e0 <line:77:5, col:19>
|   | `-VarDecl 0x2259a026978 <col:5, col:18> col:18 used n 'unsigned int'
|   |-DeclStmt 0x2259a026ab0 <line:78:5, col:17>
|   | `-VarDecl 0x2259a026a08 <col:5, col:16> col:12 used l 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x2259a026a98 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x2259a026a70 <col:16> 'int' 0
|   |-BinaryOperator 0x2259a026b80 <line:80:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x2259a026ac8 <col:5> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x2259a026b68 <col:9, col:10> 'unsigned int' <LValueToRValue>
|   |   `-UnaryOperator 0x2259a026b50 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2259a026b38 <col:10> 'unsigned int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2259a026b00 <col:10> 'unsigned int *' lvalue ParmVar 0x2259a026640 'num' 'unsigned int *'
|   |-IfStmt 0x2259a029130 <line:83:5, line:118:5>
|   | |-BinaryOperator 0x2259a026c70 <line:83:9, col:32> 'int' '=='
|   | | |-BinaryOperator 0x2259a026c10 <col:9, col:27> 'unsigned long long' '%'
|   | | | |-ImplicitCastExpr 0x2259a026bf8 <col:9> 'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x2259a026ba0 <col:9> 'int' 16
|   | | | `-UnaryExprOrTypeTraitExpr 0x2259a026bd8 <col:14, col:27> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2259a026c58 <col:32> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2259a026c30 <col:32> 'int' 0
|   | `-CompoundStmt 0x2259a029118 <col:35, line:118:5>
|   |   `-DoStmt 0x2259a0290f8 <line:84:9, line:117:19>
|   |     |-CompoundStmt 0x2259a029098 <line:84:12, line:117:9>
|   |     | |-WhileStmt 0x2259a027160 <line:85:13, line:89:13>
|   |     | | |-BinaryOperator 0x2259a026d18 <line:85:20, col:25> 'int' '&&'
|   |     | | | |-ImplicitCastExpr 0x2259a026ce8 <col:20> 'unsigned int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x2259a026c90 <col:20> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | | | `-ImplicitCastExpr 0x2259a026d00 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x2259a026cb0 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a026340 'len' 'size_t':'unsigned long long'
|   |     | | `-CompoundStmt 0x2259a027138 <col:30, line:89:13>
|   |     | |   |-BinaryOperator 0x2259a026f88 <line:86:17, col:50> 'unsigned char' '='
|   |     | |   | |-UnaryOperator 0x2259a026da8 <col:17, col:24> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   | | `-ParenExpr 0x2259a026d88 <col:18, col:24> 'unsigned char *'
|   |     | |   | |   `-UnaryOperator 0x2259a026d70 <col:19, col:22> 'unsigned char *' postfix '++'
|   |     | |   | |     `-DeclRefExpr 0x2259a026d38 <col:19> 'unsigned char *' lvalue ParmVar 0x2259a0262c8 'out' 'unsigned char *'
|   |     | |   | `-ImplicitCastExpr 0x2259a026f70 <col:28, col:50> 'unsigned char' <IntegralCast>
|   |     | |   |   `-BinaryOperator 0x2259a026f50 <col:28, col:50> 'int' '^'
|   |     | |   |     |-ImplicitCastExpr 0x2259a026f08 <col:28, col:34> 'int' <IntegralCast>
|   |     | |   |     | `-ImplicitCastExpr 0x2259a026ef0 <col:28, col:34> 'unsigned char' <LValueToRValue>
|   |     | |   |     |   `-UnaryOperator 0x2259a026e30 <col:28, col:34> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   |     |     `-ParenExpr 0x2259a026e10 <col:29, col:34> 'const unsigned char *'
|   |     | |   |     |       `-UnaryOperator 0x2259a026df8 <col:30, col:32> 'const unsigned char *' postfix '++'
|   |     | |   |     |         `-DeclRefExpr 0x2259a026dc0 <col:30> 'const unsigned char *' lvalue ParmVar 0x2259a026248 'in' 'const unsigned char *'
|   |     | |   |     `-ImplicitCastExpr 0x2259a026f38 <col:38, col:50> 'int' <IntegralCast>
|   |     | |   |       `-ImplicitCastExpr 0x2259a026f20 <col:38, col:50> 'unsigned char' <LValueToRValue>
|   |     | |   |         `-ArraySubscriptExpr 0x2259a026ed0 <col:38, col:50> 'unsigned char' lvalue
|   |     | |   |           |-ImplicitCastExpr 0x2259a026ea0 <col:38> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |           | `-DeclRefExpr 0x2259a026e48 <col:38> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a026590 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |   |           `-ImplicitCastExpr 0x2259a026eb8 <col:49> 'unsigned int' <LValueToRValue>
|   |     | |   |             `-DeclRefExpr 0x2259a026e80 <col:49> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |   |-UnaryOperator 0x2259a026fc8 <line:87:17, col:19> 'size_t':'unsigned long long' prefix '--'
|   |     | |   | `-DeclRefExpr 0x2259a026fa8 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a026340 'len' 'size_t':'unsigned long long'
|   |     | |   `-BinaryOperator 0x2259a027118 <line:88:17, col:31> 'unsigned int' '='
|   |     | |     |-DeclRefExpr 0x2259a026fe0 <col:17> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |     `-BinaryOperator 0x2259a0270f8 <col:21, col:31> 'unsigned int' '%'
|   |     | |       |-ParenExpr 0x2259a027098 <col:21, col:27> 'unsigned int'
|   |     | |       | `-BinaryOperator 0x2259a027078 <col:22, col:26> 'unsigned int' '+'
|   |     | |       |   |-ImplicitCastExpr 0x2259a027048 <col:22> 'unsigned int' <LValueToRValue>
|   |     | |       |   | `-DeclRefExpr 0x2259a027000 <col:22> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |       |   `-ImplicitCastExpr 0x2259a027060 <col:26> 'unsigned int' <IntegralCast>
|   |     | |       |     `-IntegerLiteral 0x2259a027020 <col:26> 'int' 1
|   |     | |       `-ImplicitCastExpr 0x2259a0270e0 <col:31> 'unsigned int' <IntegralCast>
|   |     | |         `-IntegerLiteral 0x2259a0270b8 <col:31> 'int' 16
|   |     | |-WhileStmt 0x2259a028b50 <line:96:13, line:106:13>
|   |     | | |-BinaryOperator 0x2259a028228 <line:96:20, col:27> 'int' '>='
|   |     | | | |-ImplicitCastExpr 0x2259a0281f8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x2259a0281b0 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a026340 'len' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x2259a028210 <col:27> 'unsigned long long' <IntegralCast>
|   |     | | |   `-IntegerLiteral 0x2259a0281d0 <col:27> 'int' 16
|   |     | | `-CompoundStmt 0x2259a028b10 <col:31, line:106:13>
|   |     | |   |-CallExpr 0x2259a028330 <line:98:17, col:40> 'void'
|   |     | |   | |-ImplicitCastExpr 0x2259a028318 <col:17> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x2259a0282d8 <col:17> 'void (unsigned char *)' Function 0x2259a01f048 'ctr128_inc_aligned' 'void (unsigned char *)'
|   |     | |   | `-ImplicitCastExpr 0x2259a028358 <col:36> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x2259a0282f8 <col:36> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a0264c0 'ivec' 'unsigned char *':'unsigned char *'
|   |     | |   |-ForStmt 0x2259a0288d8 <line:99:17, line:101:73>
|   |     | |   | |-BinaryOperator 0x2259a0283d0 <line:99:22, col:26> 'unsigned int' '='
|   |     | |   | | |-DeclRefExpr 0x2259a028370 <col:22> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |   | | `-ImplicitCastExpr 0x2259a0283b8 <col:26> 'unsigned int' <IntegralCast>
|   |     | |   | |   `-IntegerLiteral 0x2259a028390 <col:26> 'int' 0
|   |     | |   | |-<<<NULL>>>
|   |     | |   | |-BinaryOperator 0x2259a028468 <col:29, col:33> 'int' '<'
|   |     | |   | | |-ImplicitCastExpr 0x2259a028438 <col:29> 'unsigned int' <LValueToRValue>
|   |     | |   | | | `-DeclRefExpr 0x2259a0283f0 <col:29> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |   | | `-ImplicitCastExpr 0x2259a028450 <col:33> 'unsigned int' <IntegralCast>
|   |     | |   | |   `-IntegerLiteral 0x2259a028410 <col:33> 'int' 16
|   |     | |   | |-CompoundAssignOperator 0x2259a0284d8 <col:37, col:55> 'unsigned int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |   | | |-DeclRefExpr 0x2259a028488 <col:37> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |   | | `-UnaryExprOrTypeTraitExpr 0x2259a0284b8 <col:42, col:55> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |     | |   | `-BinaryOperator 0x2259a0288b8 <line:100:21, line:101:73> 'size_t':'unsigned long long' '='
|   |     | |   |   |-UnaryOperator 0x2259a028610 <line:100:21, col:40> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |   | `-CStyleCastExpr 0x2259a0285e8 <col:22, col:40> 'size_t *' <BitCast>
|   |     | |   |   |   `-ParenExpr 0x2259a0285c8 <col:32, col:40> 'unsigned char *'
|   |     | |   |   |     `-BinaryOperator 0x2259a028578 <col:33, col:39> 'unsigned char *' '+'
|   |     | |   |   |       |-ImplicitCastExpr 0x2259a028548 <col:33> 'unsigned char *' <LValueToRValue>
|   |     | |   |   |       | `-DeclRefExpr 0x2259a028508 <col:33> 'unsigned char *' lvalue ParmVar 0x2259a0262c8 'out' 'unsigned char *'
|   |     | |   |   |       `-ImplicitCastExpr 0x2259a028560 <col:39> 'unsigned int' <LValueToRValue>
|   |     | |   |   |         `-DeclRefExpr 0x2259a028528 <col:39> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |   |   `-BinaryOperator 0x2259a028898 <line:101:25, col:73> 'unsigned long long' '^'
|   |     | |   |     |-ImplicitCastExpr 0x2259a028868 <col:25, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   |     | `-UnaryOperator 0x2259a028730 <col:25, col:43> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |     |   `-CStyleCastExpr 0x2259a028708 <col:26, col:43> 'size_t *' <BitCast>
|   |     | |   |     |     `-ParenExpr 0x2259a0286e8 <col:36, col:43> 'const unsigned char *'
|   |     | |   |     |       `-BinaryOperator 0x2259a028698 <col:37, col:42> 'const unsigned char *' '+'
|   |     | |   |     |         |-ImplicitCastExpr 0x2259a028668 <col:37> 'const unsigned char *' <LValueToRValue>
|   |     | |   |     |         | `-DeclRefExpr 0x2259a028628 <col:37> 'const unsigned char *' lvalue ParmVar 0x2259a026248 'in' 'const unsigned char *'
|   |     | |   |     |         `-ImplicitCastExpr 0x2259a028680 <col:42> 'unsigned int' <LValueToRValue>
|   |     | |   |     |           `-DeclRefExpr 0x2259a028648 <col:42> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |   |     `-ImplicitCastExpr 0x2259a028880 <col:47, col:73> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   |       `-UnaryOperator 0x2259a028850 <col:47, col:73> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |     | |   |         `-CStyleCastExpr 0x2259a028828 <col:48, col:73> 'size_t *' <BitCast>
|   |     | |   |           `-ParenExpr 0x2259a028808 <col:58, col:73> 'unsigned char *':'unsigned char *'
|   |     | |   |             `-BinaryOperator 0x2259a0287b8 <col:59, col:72> 'unsigned char *':'unsigned char *' '+'
|   |     | |   |               |-ImplicitCastExpr 0x2259a028788 <col:59> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |               | `-DeclRefExpr 0x2259a028748 <col:59> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a026590 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |   |               `-ImplicitCastExpr 0x2259a0287a0 <col:72> 'unsigned int' <LValueToRValue>
|   |     | |   |                 `-DeclRefExpr 0x2259a028768 <col:72> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |   |-CompoundAssignOperator 0x2259a028970 <line:102:17, col:24> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |   | |-DeclRefExpr 0x2259a028910 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a026340 'len' 'size_t':'unsigned long long'
|   |     | |   | `-ImplicitCastExpr 0x2259a028958 <col:24> 'unsigned long long' <IntegralCast>
|   |     | |   |   `-IntegerLiteral 0x2259a028930 <col:24> 'int' 16
|   |     | |   |-CompoundAssignOperator 0x2259a0289e8 <line:103:17, col:24> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     | |   | |-DeclRefExpr 0x2259a0289a0 <col:17> 'unsigned char *' lvalue ParmVar 0x2259a0262c8 'out' 'unsigned char *'
|   |     | |   | `-IntegerLiteral 0x2259a0289c0 <col:24> 'int' 16
|   |     | |   |-CompoundAssignOperator 0x2259a028a60 <line:104:17, col:23> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |   | |-DeclRefExpr 0x2259a028a18 <col:17> 'const unsigned char *' lvalue ParmVar 0x2259a026248 'in' 'const unsigned char *'
|   |     | |   | `-IntegerLiteral 0x2259a028a38 <col:23> 'int' 16
|   |     | |   `-BinaryOperator 0x2259a028af0 <line:105:17, col:21> 'unsigned int' '='
|   |     | |     |-DeclRefExpr 0x2259a028a90 <col:17> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |     `-ImplicitCastExpr 0x2259a028ad8 <col:21> 'unsigned int' <IntegralCast>
|   |     | |       `-IntegerLiteral 0x2259a028ab0 <col:21> 'int' 0
|   |     | |-IfStmt 0x2259a028fc8 <line:107:13, line:114:13>
|   |     | | |-ImplicitCastExpr 0x2259a028b88 <line:107:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x2259a028b68 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a026340 'len' 'size_t':'unsigned long long'
|   |     | | `-CompoundStmt 0x2259a028fa8 <col:22, line:114:13>
|   |     | |   |-CallExpr 0x2259a028c58 <line:109:17, col:40> 'void'
|   |     | |   | |-ImplicitCastExpr 0x2259a028c40 <col:17> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |     | |   | | `-DeclRefExpr 0x2259a028c00 <col:17> 'void (unsigned char *)' Function 0x2259a01f048 'ctr128_inc_aligned' 'void (unsigned char *)'
|   |     | |   | `-ImplicitCastExpr 0x2259a028c80 <col:36> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |   |   `-DeclRefExpr 0x2259a028c20 <col:36> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a0264c0 'ivec' 'unsigned char *':'unsigned char *'
|   |     | |   `-WhileStmt 0x2259a028f90 <line:110:17, line:113:17>
|   |     | |     |-UnaryOperator 0x2259a028cb8 <line:110:24, col:27> 'size_t':'unsigned long long' postfix '--'
|   |     | |     | `-DeclRefExpr 0x2259a028c98 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a026340 'len' 'size_t':'unsigned long long'
|   |     | |     `-CompoundStmt 0x2259a028f70 <col:31, line:113:17>
|   |     | |       |-BinaryOperator 0x2259a028f18 <line:111:21, col:50> 'unsigned char' '='
|   |     | |       | |-ArraySubscriptExpr 0x2259a028d40 <col:21, col:26> 'unsigned char' lvalue
|   |     | |       | | |-ImplicitCastExpr 0x2259a028d10 <col:21> 'unsigned char *' <LValueToRValue>
|   |     | |       | | | `-DeclRefExpr 0x2259a028cd0 <col:21> 'unsigned char *' lvalue ParmVar 0x2259a0262c8 'out' 'unsigned char *'
|   |     | |       | | `-ImplicitCastExpr 0x2259a028d28 <col:25> 'unsigned int' <LValueToRValue>
|   |     | |       | |   `-DeclRefExpr 0x2259a028cf0 <col:25> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |       | `-ImplicitCastExpr 0x2259a028f00 <col:30, col:50> 'unsigned char' <IntegralCast>
|   |     | |       |   `-BinaryOperator 0x2259a028ee0 <col:30, col:50> 'int' '^'
|   |     | |       |     |-ImplicitCastExpr 0x2259a028e98 <col:30, col:34> 'int' <IntegralCast>
|   |     | |       |     | `-ImplicitCastExpr 0x2259a028e80 <col:30, col:34> 'unsigned char' <LValueToRValue>
|   |     | |       |     |   `-ArraySubscriptExpr 0x2259a028dd0 <col:30, col:34> 'const unsigned char' lvalue
|   |     | |       |     |     |-ImplicitCastExpr 0x2259a028da0 <col:30> 'const unsigned char *' <LValueToRValue>
|   |     | |       |     |     | `-DeclRefExpr 0x2259a028d60 <col:30> 'const unsigned char *' lvalue ParmVar 0x2259a026248 'in' 'const unsigned char *'
|   |     | |       |     |     `-ImplicitCastExpr 0x2259a028db8 <col:33> 'unsigned int' <LValueToRValue>
|   |     | |       |     |       `-DeclRefExpr 0x2259a028d80 <col:33> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |       |     `-ImplicitCastExpr 0x2259a028ec8 <col:38, col:50> 'int' <IntegralCast>
|   |     | |       |       `-ImplicitCastExpr 0x2259a028eb0 <col:38, col:50> 'unsigned char' <LValueToRValue>
|   |     | |       |         `-ArraySubscriptExpr 0x2259a028e60 <col:38, col:50> 'unsigned char' lvalue
|   |     | |       |           |-ImplicitCastExpr 0x2259a028e30 <col:38> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |     | |       |           | `-DeclRefExpr 0x2259a028df0 <col:38> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a026590 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |     | |       |           `-ImplicitCastExpr 0x2259a028e48 <col:49> 'unsigned int' <LValueToRValue>
|   |     | |       |             `-DeclRefExpr 0x2259a028e10 <col:49> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |       `-UnaryOperator 0x2259a028f58 <line:112:21, col:23> 'unsigned int' prefix '++'
|   |     | |         `-DeclRefExpr 0x2259a028f38 <col:23> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | |-BinaryOperator 0x2259a029068 <line:115:13, col:20> 'unsigned int' '='
|   |     | | |-UnaryOperator 0x2259a029018 <col:13, col:14> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     | | | `-ImplicitCastExpr 0x2259a029000 <col:14> 'unsigned int *' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x2259a028fe0 <col:14> 'unsigned int *' lvalue ParmVar 0x2259a026640 'num' 'unsigned int *'
|   |     | | `-ImplicitCastExpr 0x2259a029050 <col:20> 'unsigned int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x2259a029030 <col:20> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     | `-ReturnStmt 0x2259a029088 <line:116:13>
|   |     `-IntegerLiteral 0x2259a0290d0 <line:117:18> 'int' 0
|   |-WhileStmt 0x2259a0297f8 <line:121:5, line:129:5>
|   | |-BinaryOperator 0x2259a0291f0 <line:121:12, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x2259a0291c0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2259a029148 <col:12> 'size_t':'unsigned long long' lvalue Var 0x2259a026a08 'l' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2259a0291d8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2259a029180 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a026340 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x2259a0297c8 <col:21, line:129:5>
|   |   |-IfStmt 0x2259a0293b8 <line:122:9, line:125:9>
|   |   | |-BinaryOperator 0x2259a029288 <line:122:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2259a029258 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2259a029210 <col:13> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x2259a029270 <col:18> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2259a029230 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x2259a0293a0 <col:21, line:125:9>
|   |   |   `-CallExpr 0x2259a029360 <line:124:13, col:28> 'void'
|   |   |     |-ImplicitCastExpr 0x2259a029348 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x2259a029308 <col:13> 'void (unsigned char *)' Function 0x2259a01e958 'ctr128_inc' 'void (unsigned char *)'
|   |   |     `-ImplicitCastExpr 0x2259a029388 <col:24> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2259a029328 <col:24> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a0264c0 'ivec' 'unsigned char *':'unsigned char *'
|   |   |-BinaryOperator 0x2259a029618 <line:126:9, col:38> 'unsigned char' '='
|   |   | |-ArraySubscriptExpr 0x2259a029440 <col:9, col:14> 'unsigned char' lvalue
|   |   | | |-ImplicitCastExpr 0x2259a029410 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2259a0293d0 <col:9> 'unsigned char *' lvalue ParmVar 0x2259a0262c8 'out' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x2259a029428 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2259a0293f0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x2259a026a08 'l' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x2259a029600 <col:18, col:38> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x2259a0295e0 <col:18, col:38> 'int' '^'
|   |   |     |-ImplicitCastExpr 0x2259a029598 <col:18, col:22> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x2259a029580 <col:18, col:22> 'unsigned char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x2259a0294d0 <col:18, col:22> 'const unsigned char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x2259a0294a0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x2259a029460 <col:18> 'const unsigned char *' lvalue ParmVar 0x2259a026248 'in' 'const unsigned char *'
|   |   |     |     `-ImplicitCastExpr 0x2259a0294b8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x2259a029480 <col:21> 'size_t':'unsigned long long' lvalue Var 0x2259a026a08 'l' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x2259a0295c8 <col:26, col:38> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x2259a0295b0 <col:26, col:38> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x2259a029560 <col:26, col:38> 'unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x2259a029530 <col:26> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x2259a0294f0 <col:26> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a026590 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   |           `-ImplicitCastExpr 0x2259a029548 <col:37> 'unsigned int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x2259a029510 <col:37> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |   |-UnaryOperator 0x2259a029658 <line:127:9, col:11> 'size_t':'unsigned long long' prefix '++'
|   |   | `-DeclRefExpr 0x2259a029638 <col:11> 'size_t':'unsigned long long' lvalue Var 0x2259a026a08 'l' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x2259a0297a8 <line:128:9, col:23> 'unsigned int' '='
|   |     |-DeclRefExpr 0x2259a029670 <col:9> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |     `-BinaryOperator 0x2259a029788 <col:13, col:23> 'unsigned int' '%'
|   |       |-ParenExpr 0x2259a029728 <col:13, col:19> 'unsigned int'
|   |       | `-BinaryOperator 0x2259a029708 <col:14, col:18> 'unsigned int' '+'
|   |       |   |-ImplicitCastExpr 0x2259a0296d8 <col:14> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x2259a029690 <col:14> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x2259a0296f0 <col:18> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x2259a0296b0 <col:18> 'int' 1
|   |       `-ImplicitCastExpr 0x2259a029770 <col:23> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x2259a029748 <col:23> 'int' 16
|   `-BinaryOperator 0x2259a029898 <line:131:5, col:12> 'unsigned int' '='
|     |-UnaryOperator 0x2259a029848 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x2259a029830 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x2259a029810 <col:6> 'unsigned int *' lvalue ParmVar 0x2259a026640 'num' 'unsigned int *'
|     `-ImplicitCastExpr 0x2259a029880 <col:12> 'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x2259a029860 <col:12> 'unsigned int' lvalue Var 0x2259a026978 'n' 'unsigned int'
|-FunctionDecl 0x2259a0299b8 <line:135:1, line:145:1> line:135:13 used ctr96_inc 'void (unsigned char *)' static
| |-ParmVarDecl 0x2259a029910 <col:23, col:38> col:38 used counter 'unsigned char *'
| `-CompoundStmt 0x2259a029fc8 <line:136:1, line:145:1>
|   |-DeclStmt 0x2259a029c00 <line:137:5, col:22>
|   | |-VarDecl 0x2259a029a88 <col:5, col:13> col:9 used n 'u32':'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x2259a029b18 <col:13> 'u32':'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x2259a029af0 <col:13> 'int' 12
|   | `-VarDecl 0x2259a029b40 <col:5, col:21> col:17 used c 'u32':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x2259a029bd0 <col:21> 'u32':'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x2259a029ba8 <col:21> 'int' 1
|   `-DoStmt 0x2259a029fa8 <line:139:5, line:144:15>
|     |-CompoundStmt 0x2259a029f40 <line:139:8, line:144:5>
|     | |-UnaryOperator 0x2259a029c50 <line:140:9, col:11> 'u32':'unsigned int' prefix '--'
|     | | `-DeclRefExpr 0x2259a029c18 <col:11> 'u32':'unsigned int' lvalue Var 0x2259a029a88 'n' 'u32':'unsigned int'
|     | |-CompoundAssignOperator 0x2259a029d60 <line:141:9, col:23> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|     | | |-DeclRefExpr 0x2259a029c68 <col:9> 'u32':'unsigned int' lvalue Var 0x2259a029b40 'c' 'u32':'unsigned int'
|     | | `-ImplicitCastExpr 0x2259a029d48 <col:14, col:23> 'unsigned int' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x2259a029d30 <col:14, col:23> 'unsigned char' <LValueToRValue>
|     | |     `-ArraySubscriptExpr 0x2259a029d10 <col:14, col:23> 'unsigned char' lvalue
|     | |       |-ImplicitCastExpr 0x2259a029ce0 <col:14> 'unsigned char *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x2259a029ca0 <col:14> 'unsigned char *' lvalue ParmVar 0x2259a029910 'counter' 'unsigned char *'
|     | |       `-ImplicitCastExpr 0x2259a029cf8 <col:22> 'u32':'unsigned int' <LValueToRValue>
|     | |         `-DeclRefExpr 0x2259a029cc0 <col:22> 'u32':'unsigned int' lvalue Var 0x2259a029a88 'n' 'u32':'unsigned int'
|     | |-BinaryOperator 0x2259a029e90 <line:142:9, col:26> 'unsigned char' '='
|     | | |-ArraySubscriptExpr 0x2259a029e00 <col:9, col:18> 'unsigned char' lvalue
|     | | | |-ImplicitCastExpr 0x2259a029dd0 <col:9> 'unsigned char *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x2259a029d90 <col:9> 'unsigned char *' lvalue ParmVar 0x2259a029910 'counter' 'unsigned char *'
|     | | | `-ImplicitCastExpr 0x2259a029de8 <col:17> 'u32':'unsigned int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x2259a029db0 <col:17> 'u32':'unsigned int' lvalue Var 0x2259a029a88 'n' 'u32':'unsigned int'
|     | | `-CStyleCastExpr 0x2259a029e68 <col:22, col:26> 'u8':'unsigned char' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x2259a029e50 <col:26> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|     | |     `-DeclRefExpr 0x2259a029e20 <col:26> 'u32':'unsigned int' lvalue Var 0x2259a029b40 'c' 'u32':'unsigned int'
|     | `-CompoundAssignOperator 0x2259a029f10 <line:143:9, col:15> 'u32':'unsigned int' '>>=' ComputeLHSTy='u32':'unsigned int' ComputeResultTy='u32':'unsigned int'
|     |   |-DeclRefExpr 0x2259a029eb0 <col:9> 'u32':'unsigned int' lvalue Var 0x2259a029b40 'c' 'u32':'unsigned int'
|     |   `-IntegerLiteral 0x2259a029ed0 <col:15> 'int' 8
|     `-ImplicitCastExpr 0x2259a029f90 <line:144:14> 'u32':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x2259a029f70 <col:14> 'u32':'unsigned int' lvalue Var 0x2259a029a88 'n' 'u32':'unsigned int'
|-FunctionDecl 0x2259a02c388 <line:147:1, line:209:1> line:147:6 invalid CRYPTO_ctr128_encrypt_ctr32 'void (const unsigned char *, unsigned char *, size_t, const void *, unsigned char *, unsigned char *, unsigned int *, int)'
| |-ParmVarDecl 0x2259a02a000 <col:34, col:55> col:55 used in 'const unsigned char *'
| |-ParmVarDecl 0x2259a02a080 <col:59, col:74> col:74 used out 'unsigned char *'
| |-ParmVarDecl 0x2259a02a0f8 <line:148:34, col:41> col:41 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2259a02c020 <col:46, col:58> col:58 used key 'const void *'
| |-ParmVarDecl 0x2259a02c0f0 <line:149:34, col:55> col:48 used ivec 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x2259a02c1c0 <line:150:34, col:61> col:48 used ecount_buf 'unsigned char *':'unsigned char *'
| |-ParmVarDecl 0x2259a02c240 <line:151:34, col:48> col:48 used num 'unsigned int *'
| |-ParmVarDecl 0x2259a02c2c0 <col:53, col:62> col:62 invalid func 'int'
| `-CompoundStmt 0x2259a0349d8 <line:152:1, line:209:1>
|   |-DeclStmt 0x2259a02c598 <line:153:5, col:26>
|   | |-VarDecl 0x2259a02c498 <col:5, col:18> col:18 used n 'unsigned int'
|   | `-VarDecl 0x2259a02c518 <col:5, col:21> col:21 used ctr32 'unsigned int'
|   |-BinaryOperator 0x2259a02c668 <line:155:5, col:10> 'unsigned int' '='
|   | |-DeclRefExpr 0x2259a02c5b0 <col:5> 'unsigned int' lvalue Var 0x2259a02c498 'n' 'unsigned int'
|   | `-ImplicitCastExpr 0x2259a02c650 <col:9, col:10> 'unsigned int' <LValueToRValue>
|   |   `-UnaryOperator 0x2259a02c638 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2259a02c620 <col:10> 'unsigned int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2259a02c5e8 <col:10> 'unsigned int *' lvalue ParmVar 0x2259a02c240 'num' 'unsigned int *'
|   |-WhileStmt 0x2259a02cb58 <line:157:5, line:161:5>
|   | |-BinaryOperator 0x2259a02c710 <line:157:12, col:17> 'int' '&&'
|   | | |-ImplicitCastExpr 0x2259a02c6e0 <col:12> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2259a02c688 <col:12> 'unsigned int' lvalue Var 0x2259a02c498 'n' 'unsigned int'
|   | | `-ImplicitCastExpr 0x2259a02c6f8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2259a02c6a8 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a02a0f8 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x2259a02cb30 <col:22, line:161:5>
|   |   |-BinaryOperator 0x2259a02c980 <line:158:9, col:42> 'unsigned char' '='
|   |   | |-UnaryOperator 0x2259a02c7a0 <col:9, col:16> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x2259a02c780 <col:10, col:16> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x2259a02c768 <col:11, col:14> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x2259a02c730 <col:11> 'unsigned char *' lvalue ParmVar 0x2259a02a080 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x2259a02c968 <col:20, col:42> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x2259a02c948 <col:20, col:42> 'int' '^'
|   |   |     |-ImplicitCastExpr 0x2259a02c900 <col:20, col:26> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x2259a02c8e8 <col:20, col:26> 'unsigned char' <LValueToRValue>
|   |   |     |   `-UnaryOperator 0x2259a02c828 <col:20, col:26> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |     `-ParenExpr 0x2259a02c808 <col:21, col:26> 'const unsigned char *'
|   |   |     |       `-UnaryOperator 0x2259a02c7f0 <col:22, col:24> 'const unsigned char *' postfix '++'
|   |   |     |         `-DeclRefExpr 0x2259a02c7b8 <col:22> 'const unsigned char *' lvalue ParmVar 0x2259a02a000 'in' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x2259a02c930 <col:30, col:42> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x2259a02c918 <col:30, col:42> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x2259a02c8c8 <col:30, col:42> 'unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x2259a02c898 <col:30> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x2259a02c840 <col:30> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a02c1c0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   |           `-ImplicitCastExpr 0x2259a02c8b0 <col:41> 'unsigned int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x2259a02c878 <col:41> 'unsigned int' lvalue Var 0x2259a02c498 'n' 'unsigned int'
|   |   |-UnaryOperator 0x2259a02c9c0 <line:159:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |   | `-DeclRefExpr 0x2259a02c9a0 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a02a0f8 'len' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x2259a02cb10 <line:160:9, col:23> 'unsigned int' '='
|   |     |-DeclRefExpr 0x2259a02c9d8 <col:9> 'unsigned int' lvalue Var 0x2259a02c498 'n' 'unsigned int'
|   |     `-BinaryOperator 0x2259a02caf0 <col:13, col:23> 'unsigned int' '%'
|   |       |-ParenExpr 0x2259a02ca90 <col:13, col:19> 'unsigned int'
|   |       | `-BinaryOperator 0x2259a02ca70 <col:14, col:18> 'unsigned int' '+'
|   |       |   |-ImplicitCastExpr 0x2259a02ca40 <col:14> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x2259a02c9f8 <col:14> 'unsigned int' lvalue Var 0x2259a02c498 'n' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x2259a02ca58 <col:18> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x2259a02ca18 <col:18> 'int' 1
|   |       `-ImplicitCastExpr 0x2259a02cad8 <col:23> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x2259a02cab0 <col:23> 'int' 16
|   |-BinaryOperator 0x2259a0300b8 <line:163:5, .//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:49> 'unsigned int' '='
|   | |-DeclRefExpr 0x2259a02cb70 <.//openssl//file_jk/after\crypto\modes\ctr128.c:163:5> 'unsigned int' lvalue Var 0x2259a02c518 'ctr32' 'unsigned int'
|   | `-ImplicitCastExpr 0x2259a0300a0 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:25, col:49> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x2259a030060 <col:25, col:49> 'unsigned long'
|   |     |-ImplicitCastExpr 0x2259a02cfe8 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2259a02cd70 <col:25> 'unsigned long (unsigned long)' Function 0x2259a02cbe0 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |     `-ImplicitCastExpr 0x2259a030088 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |       `-CStyleCastExpr 0x2259a02cf90 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |         `-ImplicitCastExpr 0x2259a02cf78 <col:46, col:48> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |           `-ParenExpr 0x2259a02cf58 <col:46, col:48> 'const u32':'const unsigned int' lvalue
|   |             `-UnaryOperator 0x2259a02cf10 <line:88:33, col:49> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |               `-CStyleCastExpr 0x2259a02cee8 <col:34, col:49> 'const u32 *' <BitCast>
|   |                 `-ParenExpr 0x2259a02cec8 <col:47, col:49> 'unsigned char *':'unsigned char *'
|   |                   `-BinaryOperator 0x2259a02ce20 <.//openssl//file_jk/after\crypto\modes\ctr128.c:163:20, col:27> 'unsigned char *':'unsigned char *' '+'
|   |                     |-ImplicitCastExpr 0x2259a02ce08 <col:20> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |                     | `-DeclRefExpr 0x2259a02cda8 <col:20> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a02c0f0 'ivec' 'unsigned char *':'unsigned char *'
|   |                     `-IntegerLiteral 0x2259a02cde0 <col:27> 'int' 12
|   |-WhileStmt 0x2259a030f38 <line:164:5, line:194:5>
|   | |-BinaryOperator 0x2259a030150 <line:164:12, col:19> 'int' '>='
|   | | |-ImplicitCastExpr 0x2259a030120 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2259a0300d8 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a02a0f8 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2259a030138 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2259a0300f8 <col:19> 'int' 16
|   | `-CompoundStmt 0x2259a030ed8 <col:23, line:194:5>
|   |   |-DeclStmt 0x2259a030280 <line:165:9, col:33>
|   |   | `-VarDecl 0x2259a030180 <col:9, col:31> col:16 used blocks 'size_t':'unsigned long long' cinit
|   |   |   `-BinaryOperator 0x2259a030260 <col:25, col:31> 'unsigned long long' '/'
|   |   |     |-ImplicitCastExpr 0x2259a030230 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x2259a0301e8 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a02a0f8 'len' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x2259a030248 <col:31> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x2259a030208 <col:31> 'int' 16
|   |   |-IfStmt 0x2259a030540 <line:171:9, line:172:31>
|   |   | |-BinaryOperator 0x2259a030438 <line:171:13, col:72> 'int' '&&'
|   |   | | |-BinaryOperator 0x2259a030300 <col:13, col:49> 'int' '>'
|   |   | | | |-UnaryExprOrTypeTraitExpr 0x2259a0302a8 <col:13, col:26> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   | | | `-UnaryExprOrTypeTraitExpr 0x2259a0302e0 <col:30, col:49> 'unsigned long long' sizeof 'unsigned int'
|   |   | | `-BinaryOperator 0x2259a030418 <col:54, col:72> 'int' '>'
|   |   | |   |-ImplicitCastExpr 0x2259a0303e8 <col:54> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x2259a030320 <col:54> 'size_t':'unsigned long long' lvalue Var 0x2259a030180 'blocks' 'size_t':'unsigned long long'
|   |   | |   `-ImplicitCastExpr 0x2259a030400 <col:63, col:72> 'unsigned long long' <IntegralCast>
|   |   | |     `-ParenExpr 0x2259a0303c8 <col:63, col:72> 'unsigned int'
|   |   | |       `-BinaryOperator 0x2259a0303a8 <col:64, col:70> 'unsigned int' '<<'
|   |   | |         |-IntegerLiteral 0x2259a030358 <col:64> 'unsigned int' 1
|   |   | |         `-IntegerLiteral 0x2259a030380 <col:70> 'int' 28
|   |   | `-BinaryOperator 0x2259a030520 <line:172:13, col:31> 'size_t':'unsigned long long' '='
|   |   |   |-DeclRefExpr 0x2259a030458 <col:13> 'size_t':'unsigned long long' lvalue Var 0x2259a030180 'blocks' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x2259a030508 <col:22, col:31> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x2259a0304e8 <col:22, col:31> 'unsigned int'
|   |   |       `-BinaryOperator 0x2259a0304c8 <col:23, col:29> 'unsigned int' '<<'
|   |   |         |-IntegerLiteral 0x2259a030478 <col:23> 'unsigned int' 1
|   |   |         `-IntegerLiteral 0x2259a0304a0 <col:29> 'int' 28
|   |   |-CompoundAssignOperator 0x2259a0305e8 <line:179:9, col:23> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x2259a030558 <col:9> 'unsigned int' lvalue Var 0x2259a02c518 'ctr32' 'unsigned int'
|   |   | `-CStyleCastExpr 0x2259a0305c0 <col:18, col:23> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2259a0305a8 <col:23> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x2259a030578 <col:23> 'size_t':'unsigned long long' lvalue Var 0x2259a030180 'blocks' 'size_t':'unsigned long long'
|   |   |-IfStmt 0x2259a030800 <line:180:9, line:183:9>
|   |   | |-BinaryOperator 0x2259a0306a0 <line:180:13, col:21> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x2259a030688 <col:13> 'unsigned long long' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x2259a030658 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x2259a030618 <col:13> 'unsigned int' lvalue Var 0x2259a02c518 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x2259a030670 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2259a030638 <col:21> 'size_t':'unsigned long long' lvalue Var 0x2259a030180 'blocks' 'size_t':'unsigned long long'
|   |   | `-CompoundStmt 0x2259a0307e0 <col:29, line:183:9>
|   |   |   |-CompoundAssignOperator 0x2259a030730 <line:181:13, col:23> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x2259a0306c0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x2259a030180 'blocks' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x2259a030718 <col:23> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x2259a030700 <col:23> 'unsigned int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x2259a0306e0 <col:23> 'unsigned int' lvalue Var 0x2259a02c518 'ctr32' 'unsigned int'
|   |   |   `-BinaryOperator 0x2259a0307c0 <line:182:13, col:21> 'unsigned int' '='
|   |   |     |-DeclRefExpr 0x2259a030760 <col:13> 'unsigned int' lvalue Var 0x2259a02c518 'ctr32' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x2259a0307a8 <col:21> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x2259a030780 <col:21> 'int' 0
|   |   |-BinaryOperator 0x2259a030b48 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:89:26, line:78:49> 'u32':'unsigned int' '='
|   |   | |-UnaryOperator 0x2259a0309f0 <line:89:26, col:36> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x2259a0309c8 <col:27, col:36> 'u32 *' <BitCast>
|   |   | |   `-ParenExpr 0x2259a0309a8 <col:34, col:36> 'unsigned char *':'unsigned char *'
|   |   | |     `-BinaryOperator 0x2259a030930 <.//openssl//file_jk/after\crypto\modes\ctr128.c:186:16, col:23> 'unsigned char *':'unsigned char *' '+'
|   |   | |       |-ImplicitCastExpr 0x2259a030918 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x2259a0308d0 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a02c0f0 'ivec' 'unsigned char *':'unsigned char *'
|   |   | |       `-IntegerLiteral 0x2259a0308f0 <col:23> 'int' 12
|   |   | `-ImplicitCastExpr 0x2259a030b30 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:25, col:49> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-CallExpr 0x2259a030af0 <col:25, col:49> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x2259a030ad8 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x2259a030a08 <col:25> 'unsigned long (unsigned long)' Function 0x2259a02cbe0 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |   |     `-ImplicitCastExpr 0x2259a030b18 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |   |       `-CStyleCastExpr 0x2259a030ab0 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x2259a030a98 <col:46, col:48> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |   |           `-ParenExpr 0x2259a030a78 <col:46, col:48> 'unsigned int' lvalue
|   |   |             `-DeclRefExpr 0x2259a030a28 <.//openssl//file_jk/after\crypto\modes\ctr128.c:186:27> 'unsigned int' lvalue Var 0x2259a02c518 'ctr32' 'unsigned int'
|   |   |-IfStmt 0x2259a030c98 <line:188:9, line:189:27>
|   |   | |-BinaryOperator 0x2259a030be0 <line:188:13, col:22> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2259a030bb0 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2259a030b68 <col:13> 'unsigned int' lvalue Var 0x2259a02c518 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x2259a030bc8 <col:22> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2259a030b88 <col:22> 'int' 0
|   |   | `-CallExpr 0x2259a030c58 <line:189:13, col:27> 'void'
|   |   |   |-ImplicitCastExpr 0x2259a030c40 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x2259a030c00 <col:13> 'void (unsigned char *)' Function 0x2259a0299b8 'ctr96_inc' 'void (unsigned char *)'
|   |   |   `-ImplicitCastExpr 0x2259a030c80 <col:23> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2259a030c20 <col:23> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a02c0f0 'ivec' 'unsigned char *':'unsigned char *'
|   |   |-CompoundAssignOperator 0x2259a030d10 <line:190:9, col:19> 'size_t':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x2259a030cb0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2259a030180 'blocks' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x2259a030cf8 <col:19> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2259a030cd0 <col:19> 'int' 16
|   |   |-CompoundAssignOperator 0x2259a030d98 <line:191:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x2259a030d40 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a02a0f8 'len' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x2259a030d80 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2259a030d60 <col:16> 'size_t':'unsigned long long' lvalue Var 0x2259a030180 'blocks' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x2259a030e20 <line:192:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x2259a030dc8 <col:9> 'unsigned char *' lvalue ParmVar 0x2259a02a080 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x2259a030e08 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2259a030de8 <col:16> 'size_t':'unsigned long long' lvalue Var 0x2259a030180 'blocks' 'size_t':'unsigned long long'
|   |   `-CompoundAssignOperator 0x2259a030ea8 <line:193:9, col:15> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     |-DeclRefExpr 0x2259a030e50 <col:9> 'const unsigned char *' lvalue ParmVar 0x2259a02a000 'in' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x2259a030e90 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x2259a030e70 <col:15> 'size_t':'unsigned long long' lvalue Var 0x2259a030180 'blocks' 'size_t':'unsigned long long'
|   |-IfStmt 0x2259a034918 <line:195:5, line:206:5>
|   | |-ImplicitCastExpr 0x2259a030f70 <line:195:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x2259a030f50 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a02a0f8 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x2259a0348e0 <col:14, line:206:5>
|   |   |-CallExpr 0x2259a0340b8 <line:196:9, col:33> 'void *'
|   |   | |-ImplicitCastExpr 0x2259a0340a0 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2259a030f88 <col:9> 'void *(void *, int, unsigned long long)' Function 0x22599fb07d8 'memset' 'void *(void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x2259a034108 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x2259a0340f0 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2259a030fa8 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a02c1c0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |   | |-IntegerLiteral 0x2259a030fc8 <col:28> 'int' 0
|   |   | `-ImplicitCastExpr 0x2259a034120 <col:31> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2259a030ff0 <col:31> 'int' 16
|   |   |-UnaryOperator 0x2259a034200 <line:198:9, col:11> 'unsigned int' prefix '++'
|   |   | `-DeclRefExpr 0x2259a0341e0 <col:11> 'unsigned int' lvalue Var 0x2259a02c518 'ctr32' 'unsigned int'
|   |   |-BinaryOperator 0x2259a034468 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:89:26, line:78:49> 'u32':'unsigned int' '='
|   |   | |-UnaryOperator 0x2259a034310 <line:89:26, col:36> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x2259a0342e8 <col:27, col:36> 'u32 *' <BitCast>
|   |   | |   `-ParenExpr 0x2259a0342c8 <col:34, col:36> 'unsigned char *':'unsigned char *'
|   |   | |     `-BinaryOperator 0x2259a034278 <.//openssl//file_jk/after\crypto\modes\ctr128.c:199:16, col:23> 'unsigned char *':'unsigned char *' '+'
|   |   | |       |-ImplicitCastExpr 0x2259a034260 <col:16> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x2259a034218 <col:16> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a02c0f0 'ivec' 'unsigned char *':'unsigned char *'
|   |   | |       `-IntegerLiteral 0x2259a034238 <col:23> 'int' 12
|   |   | `-ImplicitCastExpr 0x2259a034450 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:25, col:49> 'u32':'unsigned int' <IntegralCast>
|   |   |   `-CallExpr 0x2259a034410 <col:25, col:49> 'unsigned long'
|   |   |     |-ImplicitCastExpr 0x2259a0343f8 <col:25> 'unsigned long (*)(unsigned long)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x2259a034328 <col:25> 'unsigned long (unsigned long)' Function 0x2259a02cbe0 '_byteswap_ulong' 'unsigned long (unsigned long)'
|   |   |     `-ImplicitCastExpr 0x2259a034438 <col:41, col:48> 'unsigned long' <IntegralCast>
|   |   |       `-CStyleCastExpr 0x2259a0343d0 <col:41, col:48> 'u32':'unsigned int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x2259a0343b8 <col:46, col:48> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |   |           `-ParenExpr 0x2259a034398 <col:46, col:48> 'unsigned int' lvalue
|   |   |             `-DeclRefExpr 0x2259a034348 <.//openssl//file_jk/after\crypto\modes\ctr128.c:199:27> 'unsigned int' lvalue Var 0x2259a02c518 'ctr32' 'unsigned int'
|   |   |-IfStmt 0x2259a0345b8 <line:200:9, line:201:27>
|   |   | |-BinaryOperator 0x2259a034500 <line:200:13, col:22> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2259a0344d0 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2259a034488 <col:13> 'unsigned int' lvalue Var 0x2259a02c518 'ctr32' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x2259a0344e8 <col:22> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2259a0344a8 <col:22> 'int' 0
|   |   | `-CallExpr 0x2259a034578 <line:201:13, col:27> 'void'
|   |   |   |-ImplicitCastExpr 0x2259a034560 <col:13> 'void (*)(unsigned char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x2259a034520 <col:13> 'void (unsigned char *)' Function 0x2259a0299b8 'ctr96_inc' 'void (unsigned char *)'
|   |   |   `-ImplicitCastExpr 0x2259a0345a0 <col:23> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2259a034540 <col:23> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a02c0f0 'ivec' 'unsigned char *':'unsigned char *'
|   |   `-WhileStmt 0x2259a0348c8 <line:202:9, line:205:9>
|   |     |-UnaryOperator 0x2259a0345f0 <line:202:16, col:19> 'size_t':'unsigned long long' postfix '--'
|   |     | `-DeclRefExpr 0x2259a0345d0 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x2259a02a0f8 'len' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x2259a0348a8 <col:23, line:205:9>
|   |       |-BinaryOperator 0x2259a034850 <line:203:13, col:42> 'unsigned char' '='
|   |       | |-ArraySubscriptExpr 0x2259a034678 <col:13, col:18> 'unsigned char' lvalue
|   |       | | |-ImplicitCastExpr 0x2259a034648 <col:13> 'unsigned char *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x2259a034608 <col:13> 'unsigned char *' lvalue ParmVar 0x2259a02a080 'out' 'unsigned char *'
|   |       | | `-ImplicitCastExpr 0x2259a034660 <col:17> 'unsigned int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2259a034628 <col:17> 'unsigned int' lvalue Var 0x2259a02c498 'n' 'unsigned int'
|   |       | `-ImplicitCastExpr 0x2259a034838 <col:22, col:42> 'unsigned char' <IntegralCast>
|   |       |   `-BinaryOperator 0x2259a034818 <col:22, col:42> 'int' '^'
|   |       |     |-ImplicitCastExpr 0x2259a0347d0 <col:22, col:26> 'int' <IntegralCast>
|   |       |     | `-ImplicitCastExpr 0x2259a0347b8 <col:22, col:26> 'unsigned char' <LValueToRValue>
|   |       |     |   `-ArraySubscriptExpr 0x2259a034708 <col:22, col:26> 'const unsigned char' lvalue
|   |       |     |     |-ImplicitCastExpr 0x2259a0346d8 <col:22> 'const unsigned char *' <LValueToRValue>
|   |       |     |     | `-DeclRefExpr 0x2259a034698 <col:22> 'const unsigned char *' lvalue ParmVar 0x2259a02a000 'in' 'const unsigned char *'
|   |       |     |     `-ImplicitCastExpr 0x2259a0346f0 <col:25> 'unsigned int' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x2259a0346b8 <col:25> 'unsigned int' lvalue Var 0x2259a02c498 'n' 'unsigned int'
|   |       |     `-ImplicitCastExpr 0x2259a034800 <col:30, col:42> 'int' <IntegralCast>
|   |       |       `-ImplicitCastExpr 0x2259a0347e8 <col:30, col:42> 'unsigned char' <LValueToRValue>
|   |       |         `-ArraySubscriptExpr 0x2259a034798 <col:30, col:42> 'unsigned char' lvalue
|   |       |           |-ImplicitCastExpr 0x2259a034768 <col:30> 'unsigned char *':'unsigned char *' <LValueToRValue>
|   |       |           | `-DeclRefExpr 0x2259a034728 <col:30> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2259a02c1c0 'ecount_buf' 'unsigned char *':'unsigned char *'
|   |       |           `-ImplicitCastExpr 0x2259a034780 <col:41> 'unsigned int' <LValueToRValue>
|   |       |             `-DeclRefExpr 0x2259a034748 <col:41> 'unsigned int' lvalue Var 0x2259a02c498 'n' 'unsigned int'
|   |       `-UnaryOperator 0x2259a034890 <line:204:13, col:15> 'unsigned int' prefix '++'
|   |         `-DeclRefExpr 0x2259a034870 <col:15> 'unsigned int' lvalue Var 0x2259a02c498 'n' 'unsigned int'
|   `-BinaryOperator 0x2259a0349b8 <line:208:5, col:12> 'unsigned int' '='
|     |-UnaryOperator 0x2259a034968 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x2259a034950 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x2259a034930 <col:6> 'unsigned int *' lvalue ParmVar 0x2259a02c240 'num' 'unsigned int *'
|     `-ImplicitCastExpr 0x2259a0349a0 <col:12> 'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x2259a034980 <col:12> 'unsigned int' lvalue Var 0x2259a02c498 'n' 'unsigned int'
`-FunctionDecl 0x2259a02cbe0 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:25> col:25 implicit used _byteswap_ulong 'unsigned long (unsigned long)' extern
  |-ParmVarDecl 0x2259a02cc80 <<invalid sloc>> <invalid sloc> 'unsigned long'
  |-NoThrowAttr 0x2259a02ccf0 <col:25> Implicit
  `-ConstAttr 0x2259a02cd48 <col:25> Implicit
