TranslationUnitDecl 0x21be10b4ee8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x21be10b5780 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x21be10b5480 '__int128'
|-TypedefDecl 0x21be10b57f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x21be10b54a0 'unsigned __int128'
|-TypedefDecl 0x21be10b5b28 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x21be10b58e0 'struct __NSConstantString_tag'
|   `-Record 0x21be10b5848 '__NSConstantString_tag'
|-TypedefDecl 0x21be10b5b98 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x21be10b50c0 'unsigned long long'
|-TypedefDecl 0x21be10b5c30 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x21be10b5bf0 'char *'
|   `-BuiltinType 0x21be10b4f80 'char'
|-TypedefDecl 0x21be10b5ca0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x21be10b5bf0 'char *'
|   `-BuiltinType 0x21be10b4f80 'char'
|-TypedefDecl 0x21be10b5d10 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x21be10b5020 'long long'
|-TypedefDecl 0x21be10b5d80 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x21be10b50c0 'unsigned long long'
|-TypedefDecl 0x21be10b5df0 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x21be10b5080 'unsigned int'
|-TypedefDecl 0x21be10b5e60 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x21be10b5040 'unsigned char'
|-RecordDecl 0x21be2a609e0 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x21be2a60ad0 <line:95:5, col:9> col:9 referenced hi 'u64':'unsigned long long'
| `-FieldDecl 0x21be2a60b38 <col:5, col:13> col:13 referenced lo 'u64':'unsigned long long'
|-TypedefDecl 0x21be2a60be8 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x21be2a60b90 'struct u128' sugar
|   `-RecordType 0x21be2a60a80 'u128'
|     `-Record 0x21be2a609e0 ''
|-RecordDecl 0x21be2a60c58 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x21be2a60d10 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x21be2a60ea8 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x21be2a60ff8 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x21be2a61148 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x21be2a612c8 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x21be2a61378 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x21be2a613f0 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x21be2a61468 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x21be2a614e0 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x21be2a61558 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x21be2a615d0 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x21be2a61788 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x21be2a5bc08 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x21be2a5c118 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x21be2a5c188 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x21be2a5c1f8 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x21be2a5c268 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x21be2a5c2d8 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x21be2a5c398 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x21be2a5c468 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x21be2a5c4d8 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x21be2a5c548 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x21be2a5c5b8 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x21be2a5c610 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x21be2a5c6d0 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x21be2a5c7f0 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x21be2a5c8a8 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x21be2a5f9d0 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x21be2a5fa48 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x21be2a5fab0 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x21be2a5fb20 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x21be2a5fb90 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x21be2a5fc40 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x21be2a5fd60 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x21be2a5fe20 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x21be2a5fed8 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x21be2a5fe80 'union OCB_BLOCK' sugar
|   `-RecordType 0x21be2a5fce0 'OCB_BLOCK'
|     `-Record 0x21be2a5fc40 ''
|-RecordDecl 0x21be2a5ff48 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x21be2a60018 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x21be2a60088 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x21be2a600f8 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x21be2a60168 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x21be2a601d8 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x21be2a60240 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x21be2a602a8 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x21be2a60330 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x21be2a60398 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x21be2a60458 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x21be2a604b0 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x21be2a60580 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x21be2a605e8 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x21be2a60650 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x21be2a606b8 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x21be2a60720 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x21be2a60788 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x21be2a60838 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x21be2a608f8 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x21be10b50c0 'unsigned long long'
|-TypedefDecl 0x21be2a60968 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x21be10b5bf0 'char *'
|   `-BuiltinType 0x21be10b4f80 'char'
|-FunctionDecl 0x21be2bb6170 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x21be2bb6210 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x21be2bb6280 <col:21> Implicit
|-FunctionDecl 0x21be2bb62d8 prev 0x21be2bb6170 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x21be2bb6008 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x21be2bb63c8 <col:21> Inherited Implicit
|-TypedefDecl 0x21be2bb6408 prev 0x21be10b5b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x21be10b50c0 'unsigned long long'
|-TypedefDecl 0x21be2bb64b0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x21be2bb6480 'size_t' sugar
|   |-Typedef 0x21be2bb6408 'size_t'
|   `-BuiltinType 0x21be10b50c0 'unsigned long long'
|-TypedefDecl 0x21be2bb6520 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x21be10b5020 'long long'
|-TypedefDecl 0x21be2bb6590 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x21be10b5020 'long long'
|-TypedefDecl 0x21be2bb6600 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x21be10b5060 'unsigned short'
|-TypedefDecl 0x21be2bb6670 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x21be10b5060 'unsigned short'
|-TypedefDecl 0x21be2bb66e0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x21be10b5060 'unsigned short'
|-TypedefDecl 0x21be2bb6750 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x21be10b4fe0 'int'
|-TypedefDecl 0x21be2bb67c0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x21be10b5000 'long'
|-TypedefDecl 0x21be2bb6830 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x21be10b5020 'long long'
|-TypedefDecl 0x21be2bb68c0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x21be2bb6890 '__time64_t' sugar
|   |-Typedef 0x21be2bb6830 '__time64_t'
|   `-BuiltinType 0x21be10b5020 'long long'
|-FunctionDecl 0x21be2bb6a38 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x21be2bb6c58 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x21be2bbd280 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x21be2bb6d98 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x21be2bb6e10 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x21be2bb6e88 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x21be2bb6f08 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x21be2bbd020 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x21be2bbd360 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x21be2bbd420 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x21be2bbd590 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x21be2bbd540 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x21be2bbd4e0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x21be2bbd400 'struct threadlocaleinfostruct'
|       `-Record 0x21be2bbf010 'threadlocaleinfostruct'
|-TypedefDecl 0x21be2bbd6a0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x21be2bbd650 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x21be2bbd5f0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x21be2bbd4c0 'struct threadmbcinfostruct'
|       `-Record 0x21be2bbd420 'threadmbcinfostruct'
|-RecordDecl 0x21be2bbd6f8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x21be2bbd7b0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x21be2bbd870 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x21be2bbd900 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x21be2bbd990 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x21be2bbda48 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x21be2bbd9f0 'struct localeinfo_struct' sugar
|   `-RecordType 0x21be2bbd850 'struct localeinfo_struct'
|     `-Record 0x21be2bbd7b0 'localeinfo_struct'
|-TypedefDecl 0x21be2bbdb20 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x21be2bbdad0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x21be2bbd9f0 'struct localeinfo_struct' sugar
|     `-RecordType 0x21be2bbd850 'struct localeinfo_struct'
|       `-Record 0x21be2bbd7b0 'localeinfo_struct'
|-RecordDecl 0x21be2bbdb98 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x21be2bbdc50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x21be2bbdcc8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x21be2bbdd88 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x21be2bbde20 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x21be2bbde90 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x21be2bbdf48 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x21be2bbdef0 'struct localerefcount' sugar
|   `-RecordType 0x21be2bbdc30 'struct localerefcount'
|     `-Record 0x21be2bbdb98 'localerefcount'
|-RecordDecl 0x21be2bbf010 prev 0x21be2bbd360 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x21be2bbf090 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x21be2bbf108 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x21be2bbf178 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x21be2bbf1e8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x21be2bbf258 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x21be2bbf418 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x21be2bbf488 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x21be2bbf4f8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x21be2bbf568 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x21be2bbf5d8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x21be2bbf648 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x21be2bbf6a0 parent 0x21be10b4ee8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x21be2bbf830 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x21be2bbf8a0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x21be2bbf910 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x21be2bbf980 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x21be2bbf9f0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x21be2bbfa60 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x21be2bbfb70 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x21be2bbfca8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x21be2bbfd58 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x21be2bbfd00 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x21be2bbd400 'struct threadlocaleinfostruct'
|     `-Record 0x21be2bbf010 'threadlocaleinfostruct'
|-FunctionDecl 0x21be2bca250 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x21be2bbfde0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x21be2bbfe90 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x21be2bbff10 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x21be2bbff88 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2bca618 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x21be2bca6b8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x21be2bca720 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x21be2bca788 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2bca808 prev 0x21be2bca618 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x21be2bca340 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x21be2bca3c0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x21be2bca438 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2bcabc8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x21be2bca8f0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x21be2bca970 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x21be2bca9e8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2bc90b0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2bcacb0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x21be2bcad30 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x21be2bcada8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2bcae40 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2bc93b8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x21be2bc9458 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x21be2bc94c0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x21be2bc9528 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2bc95a8 prev 0x21be2bc93b8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x21be2bc91a0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x21be2bc9220 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x21be2bc9298 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2bc9968 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x21be2bc9a08 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21be2bc9a70 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x21be2bc9ad8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2bc9b58 prev 0x21be2bc9968 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x21be2bc9690 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x21be2bc9710 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x21be2bc9788 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2bc9ff8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x21be2bc9c68 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x21be2bc9d00 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21be2bc9d80 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x21be2bc9df8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21be2bcb3f8 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x21be2bcb498 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21be2bcb500 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x21be2bcb568 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2bcb5e8 prev 0x21be2bcb3f8 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x21be2bcb120 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x21be2bcb1a0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x21be2bcb218 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2bcba68 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x21be2bcbb08 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21be2bcbb70 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x21be2bcbbd8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x21be2bcbc40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2bcbcc8 prev 0x21be2bcba68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x21be2bcb7b0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x21be2bcb830 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x21be2bcb8b0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x21be2bcb928 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2bcbd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x21be2bcc180 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x21be2bcbf50 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x21be2bcbfd0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x21be2bcc048 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2bcc238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x21be2bcc630 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x21be2bcc360 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x21be2bcc3d8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2bcc458 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x21be2bcca00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x21be2bcc810 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x21be2bcc890 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x21be2bccab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2bccec0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x21be2bccbf8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x21be2bccc70 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21be2bcccf0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x21be2bce2f0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x21be2bce390 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x21be2bce3f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21be2bce470 prev 0x21be2bce2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x21be2bce100 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x21be2bce180 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x21be2bce520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2bce878 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x21be2bce668 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x21be2bce6e0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21be2bce760 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x21be2bceba0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x21be2bcec40 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x21be2bceca8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21be2bced20 prev 0x21be2bceba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x21be2bcea20 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x21be2bceaa0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x21be2bcedd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2bc7090 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x21be2bc7130 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2bc7198 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21be2bc7210 prev 0x21be2bc7090 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x21be2bcef18 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x21be2bcef98 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x21be2bc7460 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x21be2bc7500 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21be2bc7570 prev 0x21be2bc7460 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x21be2bc72f0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x21be2bc7868 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x21be2bc7648 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x21be2bc76c0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2bc7ab8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x21be2bc7948 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x21be2bc79c0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x21be2bc7de8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x21be2bc7dd8 <line:132:5, col:51>
|     `-ConditionalOperator 0x21be2bc7da8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x21be2bc7c18 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x21be2bc7bf8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x21be2bc7bc8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x21be2bc7b80 <col:13> 'const char *' lvalue ParmVar 0x21be2bc7948 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x21be2bc7be0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x21be2bc7ba0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x21be2bc7d90 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x21be2bc7c38 <col:24> 'int' 0
|       `-CallExpr 0x21be2bc7d30 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x21be2bc7d18 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x21be2bc7c60 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x21be2bc7868 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x21be2bc7d60 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x21be2bc7c80 <col:36> 'const char *' lvalue ParmVar 0x21be2bc7948 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x21be2bc7d78 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x21be2bc7ca0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2bc79c0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2bc80e8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x21be2bc7e18 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x21be2bc7e90 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21be2bc7f10 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x21be2bc7f88 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21be2bc83f0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x21be2bc8490 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21be2bc84f8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x21be2bc8560 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2bc85e0 prev 0x21be2bc83f0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x21be2bc81d8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x21be2bc8258 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x21be2bc82d0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2bc8818 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x21be2bc86c8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x21be2bc8ae0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x21be2bc8b80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2bc8be8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x21be2bc8c60 prev 0x21be2bc8ae0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x21be2bc88f0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x21be2bc8970 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x21be2bc8ec0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21be2bc8d40 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x21be2bc8dc0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x21be2bcf190 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21be2bc8fa0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x21be2bc9020 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x21be2bcf548 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x21be2bcf270 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x21be2bcf2f0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x21be2bcf368 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2bcf7b0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21be2bcf630 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x21be2bcf6b0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x21be2bcfaa8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x21be2bcf890 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x21be2bcf910 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x21be2bcf988 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2bcfd10 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21be2bcfb90 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x21be2bcfc10 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x21be2bd0008 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x21be2bcfdf0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x21be2bcfe70 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x21be2bcfee8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2b8eab8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21be2b8e7e0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21be2b8e860 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x21be2b8e8d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2b8ef20 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2b8eba0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21be2b8ec20 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x21be2b8ec98 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2b8ed10 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2b8f228 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21be2b8f010 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21be2b8f090 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x21be2b8f108 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2b8f5c0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2b8f310 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x21be2b8f390 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x21be2b8f408 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2b8f480 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c23058 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x21be2c230f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2c23160 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21be2c231d8 prev 0x21be2c23058 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x21be2b8f6b0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x21be2b8f730 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x21be2c23490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x21be2c233b0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x21be2c23538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c23910 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x21be2c23680 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x21be2c236f8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c23778 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x21be2c23c28 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x21be2c23cc8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x21be2c23d38 prev 0x21be2c23c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x21be2c23af0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x21be2c23de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c281b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x21be2c27fa0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x21be2c28018 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c28098 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x21be2c284b8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x21be2c28298 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x21be2c28310 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c287a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21be2c28658 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x21be2c28850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c28c60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2c28998 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x21be2c28a10 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c28a88 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c27030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x21be2c28e08 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x21be2c28e80 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21be2c270e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c27598 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x21be2c27228 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x21be2c272a0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21be2c27320 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x21be2c27398 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21be2c27a18 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21be2c27ab8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21be2c27b20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2c27b88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2c27c08 prev 0x21be2c27a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21be2c27748 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x21be2c277c8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x21be2c27840 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2c27cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c24000 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21be2c240a0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x21be2c24108 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2c24170 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2c241f0 prev 0x21be2c24000 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21be2c27e08 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x21be2c27e88 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x21be2c27f00 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c244f0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21be2c242d8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x21be2c24358 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x21be2c243d0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c24888 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2c245d8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21be2c24658 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x21be2c246d0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c24748 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c24c20 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x21be2c24978 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x21be2c249f0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21be2c24a70 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x21be2c24ae8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21be2c24ff8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21be2c25098 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21be2c25100 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2c25168 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2c251e8 prev 0x21be2c24ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21be2c24dd0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x21be2c24e50 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x21be2c24ec8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2c252a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c25758 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x21be2c253e8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x21be2c25460 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21be2c254e0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x21be2c25558 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c25bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x21be2c25908 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x21be2c25988 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x21be2c25a00 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2c25c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c29020 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x21be2c290c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2c29128 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21be2c291a0 prev 0x21be2c29020 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x21be2c25dd8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x21be2c25e58 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x21be2c29400 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x21be2c294a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2c29508 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x21be2c29580 prev 0x21be2c29400 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x21be2c29280 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x21be2c29300 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x21be2c29740 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x21be2c29660 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x21be2c29990 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x21be2c29a30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2c29a98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21be2c29b10 prev 0x21be2c29990 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x21be2c29818 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x21be2c29898 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x21be2c29d70 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x21be2c29e10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2c29e78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21be2c29ef0 prev 0x21be2c29d70 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x21be2c29bf0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x21be2c29c70 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x21be2c261f0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x21be2c26290 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x21be2c262f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21be2c26370 prev 0x21be2c261f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x21be2c26070 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x21be2c260f0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x21be2c26420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c26808 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x21be2c26568 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x21be2c265e8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x21be2c26668 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x21be2c26a60 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x21be2c268f0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x21be2c26968 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c26ce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21be2c26c00 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x21be2c26d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c220d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2c26ed0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x21be2c21f40 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c21fb8 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c223f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x21be2c22278 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x21be2c222f0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21be2c224a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c228b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21be2c22950 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21be2c229b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21be2c22a20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2c22aa0 prev 0x21be2c228b0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21be2c225e8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x21be2c22668 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x21be2c226e0 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c31030 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2c22b88 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x21be2c22c08 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x21be2c22c80 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c22cf8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c312e0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x21be2c31380 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21be2c313f0 prev 0x21be2c312e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x21be2c31200 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x21be2c31498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x21be2c317e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21be2c31660 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x21be2c316e0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x21be2c31890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x21be2c31bd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21be2c31a58 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x21be2c31ad8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x21be2c31c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x21be2c31f30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21be2c31e50 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x21be2c31fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x21be2c2f3e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21be2c2f1d0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x21be2c2f250 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x21be2c2f2c8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2c2f4a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x21be2c2f880 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x21be2c2f668 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x21be2c2f6e8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x21be2c2f760 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2c2f938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x21be2c2fbe0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21be2c2fb00 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x21be2c2fc88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x21be2c2cff0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x21be2c2fe50 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x21be2c2fed0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x21be2c2d0a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x21be2c2d348 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21be2c2d268 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x21be2c2d3f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x21be2c2d680 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x21be2c2d510 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x21be2c2da10 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x21be2c2d750 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21be2c2d7c8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c2d840 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x21be2c2ddc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c2dbb0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21be2c2dc28 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x21be2c2de78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c2e218 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x21be2c2e2b8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x21be2c2e320 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x21be2c2e398 prev 0x21be2c2e218 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x21be2c2e000 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21be2c2e078 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x21be2c2e690 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x21be2c2e730 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x21be2c2e798 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x21be2c2e810 prev 0x21be2c2e690 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x21be2c2e470 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21be2c2e4e8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x21be2c2eaf0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x21be2c2e8e8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21be2c2e960 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c2e9d8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x21be2c2ee00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c2ec90 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21be2c2ed08 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x21be2c2eeb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c2a1d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c29fc0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21be2c2a038 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x21be2c2a420 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x21be2c2a4c0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x21be2c2a530 prev 0x21be2c2a420 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x21be2c2a2b0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x21be2c2a818 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x21be2c2a600 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21be2c2a678 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c2aa60 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x21be2c2a8f0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x21be2c2a968 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x21be2c2adf8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x21be2c2ade8 <line:307:5, col:56>
|     `-ConditionalOperator 0x21be2c2adb8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x21be2c2ac20 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x21be2c2ac00 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x21be2c2abd0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x21be2c2ab28 <col:13> 'const wchar_t *' lvalue ParmVar 0x21be2c2a8f0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x21be2c2abe8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x21be2c2abb0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x21be2c2ab88 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x21be2c2ab48 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x21be2c2ada0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x21be2c2ac40 <col:29> 'int' 0
|       `-CallExpr 0x21be2c2ad40 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x21be2c2ad28 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x21be2c2ac68 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x21be2c2a818 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x21be2c2ad70 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x21be2c2ac88 <col:41> 'const wchar_t *' lvalue ParmVar 0x21be2c2a8f0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x21be2c2ad88 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x21be2c2aca8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c2a968 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c32248 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x21be2c2ae20 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21be2c2ae98 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21be2c2af10 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21be2c32040 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21be2c326b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21be2c323f0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21be2c32468 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x21be2c324e0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2c32768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c32b78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x21be2c32c18 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x21be2c32c80 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x21be2c32ce8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21be2c32d68 prev 0x21be2c32b78 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x21be2c328a8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c32920 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21be2c32998 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c300d8 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x21be2c32e48 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21be2c32ec0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21be2c32f38 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21be2c32fb0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21be2c30488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21be2c30280 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21be2c302f8 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x21be2c30370 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2c30540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c30898 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c30680 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21be2c306f8 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x21be2c30ae0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x21be2c30970 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21be2c309e8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x21be2c30d28 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c30bb8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21be2c30c30 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x21be2c30f70 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c30e00 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21be2c30e78 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x21be2c332a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c33138 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x21be2c331b0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x21be2c33358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c337c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x21be2c33498 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x21be2c33510 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x21be2c335f0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x21be2c33ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x21be2c33968 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x21be2c33b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c33f90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x21be2c33cc8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x21be2c33d40 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c33dc0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x21be2c2c1e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x21be2c2c108 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x21be2c2c288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c2c650 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x21be2c2c3c8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x21be2c2c440 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c2c4b8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x21be2c2c8a8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c2c730 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21be2c2c7a8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x21be2c2cc48 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21be2c2c980 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c2c9f8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21be2c2ca70 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c2cf38 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21be2c2cd28 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c2cda0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21be2c2ce18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c37440 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2c370d0 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c37148 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21be2c371c0 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c37238 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c37898 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x21be2c37528 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21be2c375a0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21be2c37618 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x21be2c37690 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c37d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x21be2c37a40 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x21be2c37ab8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x21be2c37b30 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2c37db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c3b0d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x21be2c37ef8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x21be2c3b460 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x21be2c3b1a0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21be2c3b218 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c3b290 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x21be2c3b818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x21be2c3b600 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x21be2c3b678 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x21be2c3b8c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c3bc28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x21be2c3ba08 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x21be2c3ba80 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c3be98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21be2c3bdc0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x21be2c3bf40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c38360 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2c380a0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x21be2c38118 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c38190 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c38718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21be2c38500 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x21be2c38578 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21be2c387c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c38a78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x21be2c38908 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x21be2c38980 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c38ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21be2c38c10 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x21be2c38d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c360c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2c38ed0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x21be2c38f48 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c38fc0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c363d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21be2c36260 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x21be2c362d8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21be2c36480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21be2c36880 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21be2c365c0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21be2c36638 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21be2c366b0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c36cc8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2c36960 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21be2c369d8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21be2c36a50 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c36ac8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c36f28 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c36db0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21be2c36e28 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x21be2c39248 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21be2c37000 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c390b0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21be2c39128 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c394a0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c39328 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21be2c393a0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x21be2c39788 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21be2c39578 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c395f0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21be2c39668 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c39a78 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21be2c39868 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c398e0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21be2c39958 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c39e00 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2c39b58 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c39bd0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21be2c39c48 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c39cc0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c340a8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21be2c39ee8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c39f60 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21be2c39fd8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21be2c34430 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21be2c34188 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c34200 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21be2c34278 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21be2c342f0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21be2c34690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x21be2c345b8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x21be2c34738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x21be2c34a70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c348f8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c34970 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x21be2c34b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x21be2c34ef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21be2c34ce0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c34d58 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21be2c34dd0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2c34fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x21be2c3c460 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x21be2c3c258 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x21be2c3c2d0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x21be2c3c348 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21be2c3c518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x21be2c3c7b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21be2c3c6d8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x21be2c3c858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x21be2c3cb88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x21be2c3ca18 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x21be2c3ca90 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x21be2c3cc38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x21be2c3ced0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21be2c3cdf8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x21be2c3cf78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x21be2c351f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21be2c35120 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x21be2c352a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x21be2c355d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21be2c35460 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21be2c354d8 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x21be2c35688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x21be2c35a98 <.//openssl//file_jk/after\crypto\modes\gcm128.c:216:1, line:288:1> line:216:13 used gcm_init_4bit 'void (u128 *, u64 *)' static
| |-ParmVarDecl 0x21be2c35890 <col:27, col:41> col:32 used Htable 'u128 *':'u128 *'
| |-ParmVarDecl 0x21be2c35958 <col:44, col:51> col:48 used H 'u64 *':'u64 *'
| `-CompoundStmt 0x21be2c470f0 <line:217:1, line:288:1>
|   |-DeclStmt 0x21be2c35bd8 <line:218:5, col:11>
|   | `-VarDecl 0x21be2c35b70 <col:5, col:10> col:10 used V 'u128':'u128'
|   |-BinaryOperator 0x21be2c35ce0 <line:223:5, col:20> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x21be2c35c70 <col:5, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | `-ArraySubscriptExpr 0x21be2c35c50 <col:5, col:13> 'u128':'u128' lvalue
|   | |   |-ImplicitCastExpr 0x21be2c35c38 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21be2c35bf0 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |   `-IntegerLiteral 0x21be2c35c10 <col:12> 'int' 0
|   | `-ImplicitCastExpr 0x21be2c35cc8 <col:20> 'u64':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x21be2c35ca0 <col:20> 'int' 0
|   |-BinaryOperator 0x21be2c35df0 <line:224:5, col:20> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x21be2c35d80 <col:5, col:15> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | | `-ArraySubscriptExpr 0x21be2c35d60 <col:5, col:13> 'u128':'u128' lvalue
|   | |   |-ImplicitCastExpr 0x21be2c35d48 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21be2c35d00 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |   `-IntegerLiteral 0x21be2c35d20 <col:12> 'int' 0
|   | `-ImplicitCastExpr 0x21be2c35dd8 <col:20> 'u64':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x21be2c35db0 <col:20> 'int' 0
|   |-BinaryOperator 0x21be2c35f10 <line:225:5, col:15> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x21be2c35e48 <col:5, col:7> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | `-DeclRefExpr 0x21be2c35e10 <col:5> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | `-ImplicitCastExpr 0x21be2c35ef8 <col:12, col:15> 'u64':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x21be2c35ed8 <col:12, col:15> 'u64':'unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x21be2c35ec0 <col:12> 'u64 *':'u64 *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x21be2c35e78 <col:12> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c35958 'H' 'u64 *':'u64 *'
|   |     `-IntegerLiteral 0x21be2c35e98 <col:14> 'int' 0
|   |-BinaryOperator 0x21be2c36018 <line:226:5, col:15> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x21be2c35f50 <col:5, col:7> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | | `-DeclRefExpr 0x21be2c35f30 <col:5> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | `-ImplicitCastExpr 0x21be2c36000 <col:12, col:15> 'u64':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x21be2c35fe0 <col:12, col:15> 'u64':'unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x21be2c35fc8 <col:12> 'u64 *':'u64 *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x21be2c35f80 <col:12> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c35958 'H' 'u64 *':'u64 *'
|   |     `-IntegerLiteral 0x21be2c35fa0 <col:14> 'int' 1
|   |-BinaryOperator 0x21be2c401b8 <line:243:5, col:17> 'u128':'u128' '='
|   | |-ArraySubscriptExpr 0x21be2c40160 <col:5, col:13> 'u128':'u128' lvalue
|   | | |-ImplicitCastExpr 0x21be2c40148 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21be2c36038 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | `-IntegerLiteral 0x21be2c40120 <col:12> 'int' 8
|   | `-ImplicitCastExpr 0x21be2c401a0 <col:17> 'u128':'u128' <LValueToRValue>
|   |   `-DeclRefExpr 0x21be2c40180 <col:17> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |-DoStmt 0x21be2c41058 <line:23:25, line:34:10>
|   | |-CompoundStmt 0x21be2c41018 <line:23:28, line:33:11>
|   | | `-IfStmt 0x21be2c40ff0 <line:24:9, line:33:9> has_else
|   | |   |-BinaryOperator 0x21be2c40248 <line:24:13, col:29> 'int' '=='
|   | |   | |-UnaryExprOrTypeTraitExpr 0x21be2c401e8 <col:13, col:26> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |   | `-ImplicitCastExpr 0x21be2c40230 <col:29> 'unsigned long long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x21be2c40208 <col:29> 'int' 8
|   | |   |-CompoundStmt 0x21be2c40888 <col:32, line:28:9>
|   | |   | |-DeclStmt 0x21be2c40490 <line:25:17, col:63>
|   | |   | | `-VarDecl 0x21be2c40278 <col:17, col:62> col:21 used T 'u64':'unsigned long long' cinit
|   | |   | |   `-BinaryOperator 0x21be2c40470 <<scratch space>:294:1, .//openssl//file_jk/after\crypto\modes\gcm128.c:25:62> 'unsigned long long' '&'
|   | |   | |     |-IntegerLiteral 0x21be2c402e0 <<scratch space>:294:1> 'unsigned long long' 16212958658533785600
|   | |   | |     `-ParenExpr 0x21be2c40450 <.//openssl//file_jk/after\crypto\modes\gcm128.c:25:51, col:62> 'unsigned long long'
|   | |   | |       `-BinaryOperator 0x21be2c40430 <col:52, col:61> 'unsigned long long' '-'
|   | |   | |         |-ImplicitCastExpr 0x21be2c40418 <col:52> 'unsigned long long' <IntegralCast>
|   | |   | |         | `-IntegerLiteral 0x21be2c40308 <col:52> 'int' 0
|   | |   | |         `-ParenExpr 0x21be2c403f8 <col:54, col:61> 'unsigned long long'
|   | |   | |           `-BinaryOperator 0x21be2c403d8 <line:244:16, line:25:60> 'unsigned long long' '&'
|   | |   | |             |-ImplicitCastExpr 0x21be2c403a8 <line:244:16, line:25:57> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | |             | `-MemberExpr 0x21be2c40350 <line:244:16, line:25:57> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |   | |             |   `-DeclRefExpr 0x21be2c40330 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | |             `-ImplicitCastExpr 0x21be2c403c0 <line:25:60> 'unsigned long long' <IntegralCast>
|   | |   | |               `-IntegerLiteral 0x21be2c40380 <col:60> 'int' 1
|   | |   | |-BinaryOperator 0x21be2c406b8 <line:244:16, line:26:44> 'u64':'unsigned long long' '='
|   | |   | | |-MemberExpr 0x21be2c404c8 <line:244:16, line:26:19> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |   | | | `-DeclRefExpr 0x21be2c404a8 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | | `-BinaryOperator 0x21be2c40698 <line:26:25, col:44> 'unsigned long long' '|'
|   | |   | |   |-ParenExpr 0x21be2c405a8 <col:25, col:34> 'u64':'unsigned long long'
|   | |   | |   | `-BinaryOperator 0x21be2c40588 <line:244:16, line:26:32> 'u64':'unsigned long long' '<<'
|   | |   | |   |   |-ImplicitCastExpr 0x21be2c40570 <line:244:16, line:26:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | |   |   | `-MemberExpr 0x21be2c40518 <line:244:16, line:26:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   | |   |   |   `-DeclRefExpr 0x21be2c404f8 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | |   |   `-IntegerLiteral 0x21be2c40548 <line:26:32> 'int' 63
|   | |   | |   `-ParenExpr 0x21be2c40678 <col:36, col:44> 'u64':'unsigned long long'
|   | |   | |     `-BinaryOperator 0x21be2c40658 <line:244:16, line:26:43> 'u64':'unsigned long long' '>>'
|   | |   | |       |-ImplicitCastExpr 0x21be2c40640 <line:244:16, line:26:39> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | |       | `-MemberExpr 0x21be2c405e8 <line:244:16, line:26:39> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |   | |       |   `-DeclRefExpr 0x21be2c405c8 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | |       `-IntegerLiteral 0x21be2c40618 <line:26:43> 'int' 1
|   | |   | `-BinaryOperator 0x21be2c40868 <line:244:16, line:27:36> 'u64':'unsigned long long' '='
|   | |   |   |-MemberExpr 0x21be2c406f8 <line:244:16, line:27:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   | `-DeclRefExpr 0x21be2c406d8 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   |   `-BinaryOperator 0x21be2c40848 <line:27:25, col:36> 'unsigned long long' '^'
|   | |   |     |-ParenExpr 0x21be2c407d8 <col:25, col:34> 'u64':'unsigned long long'
|   | |   |     | `-BinaryOperator 0x21be2c407b8 <line:244:16, line:27:32> 'u64':'unsigned long long' '>>'
|   | |   |     |   |-ImplicitCastExpr 0x21be2c407a0 <line:244:16, line:27:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |   |     |   | `-MemberExpr 0x21be2c40748 <line:244:16, line:27:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |     |   |   `-DeclRefExpr 0x21be2c40728 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   |     |   `-IntegerLiteral 0x21be2c40778 <line:27:32> 'int' 1
|   | |   |     `-ImplicitCastExpr 0x21be2c40830 <col:36> 'u64':'unsigned long long' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x21be2c407f8 <col:36> 'u64':'unsigned long long' lvalue Var 0x21be2c40278 'T' 'u64':'unsigned long long'
|   | |   `-CompoundStmt 0x21be2c40fc8 <line:29:14, line:33:9>
|   | |     |-DeclStmt 0x21be2c40b30 <line:30:17, col:56>
|   | |     | `-VarDecl 0x21be2c408c0 <col:17, col:55> col:21 used T 'u32':'unsigned int' cinit
|   | |     |   `-BinaryOperator 0x21be2c40b10 <col:25, col:55> 'unsigned int' '&'
|   | |     |     |-IntegerLiteral 0x21be2c40928 <col:25> 'unsigned int' 3774873600
|   | |     |     `-ParenExpr 0x21be2c40af0 <col:39, col:55> 'unsigned int'
|   | |     |       `-BinaryOperator 0x21be2c40ad0 <col:40, col:54> 'unsigned int' '-'
|   | |     |         |-ImplicitCastExpr 0x21be2c40ab8 <col:40> 'unsigned int' <IntegralCast>
|   | |     |         | `-IntegerLiteral 0x21be2c40950 <col:40> 'int' 0
|   | |     |         `-CStyleCastExpr 0x21be2c40a90 <col:42, col:54> 'u32':'unsigned int' <IntegralCast>
|   | |     |           `-ParenExpr 0x21be2c40a70 <col:47, col:54> 'unsigned long long'
|   | |     |             `-BinaryOperator 0x21be2c40a20 <line:244:16, line:30:53> 'unsigned long long' '&'
|   | |     |               |-ImplicitCastExpr 0x21be2c409f0 <line:244:16, line:30:50> 'u64':'unsigned long long' <LValueToRValue>
|   | |     |               | `-MemberExpr 0x21be2c40998 <line:244:16, line:30:50> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |     |               |   `-DeclRefExpr 0x21be2c40978 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     |               `-ImplicitCastExpr 0x21be2c40a08 <line:30:53> 'unsigned long long' <IntegralCast>
|   | |     |                 `-IntegerLiteral 0x21be2c409c8 <col:53> 'int' 1
|   | |     |-BinaryOperator 0x21be2c40d58 <line:244:16, line:31:44> 'u64':'unsigned long long' '='
|   | |     | |-MemberExpr 0x21be2c40b68 <line:244:16, line:31:19> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |     | | `-DeclRefExpr 0x21be2c40b48 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     | `-BinaryOperator 0x21be2c40d38 <line:31:25, col:44> 'unsigned long long' '|'
|   | |     |   |-ParenExpr 0x21be2c40c48 <col:25, col:34> 'u64':'unsigned long long'
|   | |     |   | `-BinaryOperator 0x21be2c40c28 <line:244:16, line:31:32> 'u64':'unsigned long long' '<<'
|   | |     |   |   |-ImplicitCastExpr 0x21be2c40c10 <line:244:16, line:31:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |     |   |   | `-MemberExpr 0x21be2c40bb8 <line:244:16, line:31:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |     |   |   |   `-DeclRefExpr 0x21be2c40b98 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     |   |   `-IntegerLiteral 0x21be2c40be8 <line:31:32> 'int' 63
|   | |     |   `-ParenExpr 0x21be2c40d18 <col:36, col:44> 'u64':'unsigned long long'
|   | |     |     `-BinaryOperator 0x21be2c40cf8 <line:244:16, line:31:43> 'u64':'unsigned long long' '>>'
|   | |     |       |-ImplicitCastExpr 0x21be2c40ce0 <line:244:16, line:31:39> 'u64':'unsigned long long' <LValueToRValue>
|   | |     |       | `-MemberExpr 0x21be2c40c88 <line:244:16, line:31:39> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |     |       |   `-DeclRefExpr 0x21be2c40c68 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     |       `-IntegerLiteral 0x21be2c40cb8 <line:31:43> 'int' 1
|   | |     `-BinaryOperator 0x21be2c40fa8 <line:244:16, line:32:47> 'u64':'unsigned long long' '='
|   | |       |-MemberExpr 0x21be2c40d98 <line:244:16, line:32:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       | `-DeclRefExpr 0x21be2c40d78 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |       `-BinaryOperator 0x21be2c40f88 <line:32:25, col:47> 'unsigned long long' '^'
|   | |         |-ParenExpr 0x21be2c40e78 <col:25, col:34> 'u64':'unsigned long long'
|   | |         | `-BinaryOperator 0x21be2c40e58 <line:244:16, line:32:32> 'u64':'unsigned long long' '>>'
|   | |         |   |-ImplicitCastExpr 0x21be2c40e40 <line:244:16, line:32:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |         |   | `-MemberExpr 0x21be2c40de8 <line:244:16, line:32:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |         |   |   `-DeclRefExpr 0x21be2c40dc8 <line:244:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |         |   `-IntegerLiteral 0x21be2c40e18 <line:32:32> 'int' 1
|   | |         `-ParenExpr 0x21be2c40f68 <col:36, col:47> 'u64':'unsigned long long'
|   | |           `-BinaryOperator 0x21be2c40f48 <col:37, col:45> 'u64':'unsigned long long' '<<'
|   | |             |-CStyleCastExpr 0x21be2c40ef8 <col:37, col:42> 'u64':'unsigned long long' <IntegralCast>
|   | |             | `-ImplicitCastExpr 0x21be2c40ee0 <col:42> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|   | |             |   `-DeclRefExpr 0x21be2c40e98 <col:42> 'u32':'unsigned int' lvalue Var 0x21be2c408c0 'T' 'u32':'unsigned int'
|   | |             `-IntegerLiteral 0x21be2c40f20 <col:45> 'int' 32
|   | `-IntegerLiteral 0x21be2c41030 <line:34:9> 'int' 0
|   |-BinaryOperator 0x21be2c3d108 <line:245:5, col:17> 'u128':'u128' '='
|   | |-ArraySubscriptExpr 0x21be2c410d8 <col:5, col:13> 'u128':'u128' lvalue
|   | | |-ImplicitCastExpr 0x21be2c410c0 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21be2c41078 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | `-IntegerLiteral 0x21be2c41098 <col:12> 'int' 4
|   | `-ImplicitCastExpr 0x21be2c3d0f0 <col:17> 'u128':'u128' <LValueToRValue>
|   |   `-DeclRefExpr 0x21be2c410f8 <col:17> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |-DoStmt 0x21be2c3dfa8 <line:23:25, line:34:10>
|   | |-CompoundStmt 0x21be2c3df68 <line:23:28, line:33:11>
|   | | `-IfStmt 0x21be2c3df40 <line:24:9, line:33:9> has_else
|   | |   |-BinaryOperator 0x21be2c3d198 <line:24:13, col:29> 'int' '=='
|   | |   | |-UnaryExprOrTypeTraitExpr 0x21be2c3d138 <col:13, col:26> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |   | `-ImplicitCastExpr 0x21be2c3d180 <col:29> 'unsigned long long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x21be2c3d158 <col:29> 'int' 8
|   | |   |-CompoundStmt 0x21be2c3d7d8 <col:32, line:28:9>
|   | |   | |-DeclStmt 0x21be2c3d3e0 <line:25:17, col:63>
|   | |   | | `-VarDecl 0x21be2c3d1c8 <col:17, col:62> col:21 used T 'u64':'unsigned long long' cinit
|   | |   | |   `-BinaryOperator 0x21be2c3d3c0 <<scratch space>:295:1, .//openssl//file_jk/after\crypto\modes\gcm128.c:25:62> 'unsigned long long' '&'
|   | |   | |     |-IntegerLiteral 0x21be2c3d230 <<scratch space>:295:1> 'unsigned long long' 16212958658533785600
|   | |   | |     `-ParenExpr 0x21be2c3d3a0 <.//openssl//file_jk/after\crypto\modes\gcm128.c:25:51, col:62> 'unsigned long long'
|   | |   | |       `-BinaryOperator 0x21be2c3d380 <col:52, col:61> 'unsigned long long' '-'
|   | |   | |         |-ImplicitCastExpr 0x21be2c3d368 <col:52> 'unsigned long long' <IntegralCast>
|   | |   | |         | `-IntegerLiteral 0x21be2c3d258 <col:52> 'int' 0
|   | |   | |         `-ParenExpr 0x21be2c3d348 <col:54, col:61> 'unsigned long long'
|   | |   | |           `-BinaryOperator 0x21be2c3d328 <line:246:16, line:25:60> 'unsigned long long' '&'
|   | |   | |             |-ImplicitCastExpr 0x21be2c3d2f8 <line:246:16, line:25:57> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | |             | `-MemberExpr 0x21be2c3d2a0 <line:246:16, line:25:57> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |   | |             |   `-DeclRefExpr 0x21be2c3d280 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | |             `-ImplicitCastExpr 0x21be2c3d310 <line:25:60> 'unsigned long long' <IntegralCast>
|   | |   | |               `-IntegerLiteral 0x21be2c3d2d0 <col:60> 'int' 1
|   | |   | |-BinaryOperator 0x21be2c3d608 <line:246:16, line:26:44> 'u64':'unsigned long long' '='
|   | |   | | |-MemberExpr 0x21be2c3d418 <line:246:16, line:26:19> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |   | | | `-DeclRefExpr 0x21be2c3d3f8 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | | `-BinaryOperator 0x21be2c3d5e8 <line:26:25, col:44> 'unsigned long long' '|'
|   | |   | |   |-ParenExpr 0x21be2c3d4f8 <col:25, col:34> 'u64':'unsigned long long'
|   | |   | |   | `-BinaryOperator 0x21be2c3d4d8 <line:246:16, line:26:32> 'u64':'unsigned long long' '<<'
|   | |   | |   |   |-ImplicitCastExpr 0x21be2c3d4c0 <line:246:16, line:26:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | |   |   | `-MemberExpr 0x21be2c3d468 <line:246:16, line:26:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   | |   |   |   `-DeclRefExpr 0x21be2c3d448 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | |   |   `-IntegerLiteral 0x21be2c3d498 <line:26:32> 'int' 63
|   | |   | |   `-ParenExpr 0x21be2c3d5c8 <col:36, col:44> 'u64':'unsigned long long'
|   | |   | |     `-BinaryOperator 0x21be2c3d5a8 <line:246:16, line:26:43> 'u64':'unsigned long long' '>>'
|   | |   | |       |-ImplicitCastExpr 0x21be2c3d590 <line:246:16, line:26:39> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | |       | `-MemberExpr 0x21be2c3d538 <line:246:16, line:26:39> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |   | |       |   `-DeclRefExpr 0x21be2c3d518 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | |       `-IntegerLiteral 0x21be2c3d568 <line:26:43> 'int' 1
|   | |   | `-BinaryOperator 0x21be2c3d7b8 <line:246:16, line:27:36> 'u64':'unsigned long long' '='
|   | |   |   |-MemberExpr 0x21be2c3d648 <line:246:16, line:27:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   | `-DeclRefExpr 0x21be2c3d628 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   |   `-BinaryOperator 0x21be2c3d798 <line:27:25, col:36> 'unsigned long long' '^'
|   | |   |     |-ParenExpr 0x21be2c3d728 <col:25, col:34> 'u64':'unsigned long long'
|   | |   |     | `-BinaryOperator 0x21be2c3d708 <line:246:16, line:27:32> 'u64':'unsigned long long' '>>'
|   | |   |     |   |-ImplicitCastExpr 0x21be2c3d6f0 <line:246:16, line:27:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |   |     |   | `-MemberExpr 0x21be2c3d698 <line:246:16, line:27:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |     |   |   `-DeclRefExpr 0x21be2c3d678 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   |     |   `-IntegerLiteral 0x21be2c3d6c8 <line:27:32> 'int' 1
|   | |   |     `-ImplicitCastExpr 0x21be2c3d780 <col:36> 'u64':'unsigned long long' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x21be2c3d748 <col:36> 'u64':'unsigned long long' lvalue Var 0x21be2c3d1c8 'T' 'u64':'unsigned long long'
|   | |   `-CompoundStmt 0x21be2c3df18 <line:29:14, line:33:9>
|   | |     |-DeclStmt 0x21be2c3da80 <line:30:17, col:56>
|   | |     | `-VarDecl 0x21be2c3d810 <col:17, col:55> col:21 used T 'u32':'unsigned int' cinit
|   | |     |   `-BinaryOperator 0x21be2c3da60 <col:25, col:55> 'unsigned int' '&'
|   | |     |     |-IntegerLiteral 0x21be2c3d878 <col:25> 'unsigned int' 3774873600
|   | |     |     `-ParenExpr 0x21be2c3da40 <col:39, col:55> 'unsigned int'
|   | |     |       `-BinaryOperator 0x21be2c3da20 <col:40, col:54> 'unsigned int' '-'
|   | |     |         |-ImplicitCastExpr 0x21be2c3da08 <col:40> 'unsigned int' <IntegralCast>
|   | |     |         | `-IntegerLiteral 0x21be2c3d8a0 <col:40> 'int' 0
|   | |     |         `-CStyleCastExpr 0x21be2c3d9e0 <col:42, col:54> 'u32':'unsigned int' <IntegralCast>
|   | |     |           `-ParenExpr 0x21be2c3d9c0 <col:47, col:54> 'unsigned long long'
|   | |     |             `-BinaryOperator 0x21be2c3d970 <line:246:16, line:30:53> 'unsigned long long' '&'
|   | |     |               |-ImplicitCastExpr 0x21be2c3d940 <line:246:16, line:30:50> 'u64':'unsigned long long' <LValueToRValue>
|   | |     |               | `-MemberExpr 0x21be2c3d8e8 <line:246:16, line:30:50> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |     |               |   `-DeclRefExpr 0x21be2c3d8c8 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     |               `-ImplicitCastExpr 0x21be2c3d958 <line:30:53> 'unsigned long long' <IntegralCast>
|   | |     |                 `-IntegerLiteral 0x21be2c3d918 <col:53> 'int' 1
|   | |     |-BinaryOperator 0x21be2c3dca8 <line:246:16, line:31:44> 'u64':'unsigned long long' '='
|   | |     | |-MemberExpr 0x21be2c3dab8 <line:246:16, line:31:19> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |     | | `-DeclRefExpr 0x21be2c3da98 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     | `-BinaryOperator 0x21be2c3dc88 <line:31:25, col:44> 'unsigned long long' '|'
|   | |     |   |-ParenExpr 0x21be2c3db98 <col:25, col:34> 'u64':'unsigned long long'
|   | |     |   | `-BinaryOperator 0x21be2c3db78 <line:246:16, line:31:32> 'u64':'unsigned long long' '<<'
|   | |     |   |   |-ImplicitCastExpr 0x21be2c3db60 <line:246:16, line:31:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |     |   |   | `-MemberExpr 0x21be2c3db08 <line:246:16, line:31:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |     |   |   |   `-DeclRefExpr 0x21be2c3dae8 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     |   |   `-IntegerLiteral 0x21be2c3db38 <line:31:32> 'int' 63
|   | |     |   `-ParenExpr 0x21be2c3dc68 <col:36, col:44> 'u64':'unsigned long long'
|   | |     |     `-BinaryOperator 0x21be2c3dc48 <line:246:16, line:31:43> 'u64':'unsigned long long' '>>'
|   | |     |       |-ImplicitCastExpr 0x21be2c3dc30 <line:246:16, line:31:39> 'u64':'unsigned long long' <LValueToRValue>
|   | |     |       | `-MemberExpr 0x21be2c3dbd8 <line:246:16, line:31:39> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |     |       |   `-DeclRefExpr 0x21be2c3dbb8 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     |       `-IntegerLiteral 0x21be2c3dc08 <line:31:43> 'int' 1
|   | |     `-BinaryOperator 0x21be2c3def8 <line:246:16, line:32:47> 'u64':'unsigned long long' '='
|   | |       |-MemberExpr 0x21be2c3dce8 <line:246:16, line:32:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       | `-DeclRefExpr 0x21be2c3dcc8 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |       `-BinaryOperator 0x21be2c3ded8 <line:32:25, col:47> 'unsigned long long' '^'
|   | |         |-ParenExpr 0x21be2c3ddc8 <col:25, col:34> 'u64':'unsigned long long'
|   | |         | `-BinaryOperator 0x21be2c3dda8 <line:246:16, line:32:32> 'u64':'unsigned long long' '>>'
|   | |         |   |-ImplicitCastExpr 0x21be2c3dd90 <line:246:16, line:32:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |         |   | `-MemberExpr 0x21be2c3dd38 <line:246:16, line:32:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |         |   |   `-DeclRefExpr 0x21be2c3dd18 <line:246:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |         |   `-IntegerLiteral 0x21be2c3dd68 <line:32:32> 'int' 1
|   | |         `-ParenExpr 0x21be2c3deb8 <col:36, col:47> 'u64':'unsigned long long'
|   | |           `-BinaryOperator 0x21be2c3de98 <col:37, col:45> 'u64':'unsigned long long' '<<'
|   | |             |-CStyleCastExpr 0x21be2c3de48 <col:37, col:42> 'u64':'unsigned long long' <IntegralCast>
|   | |             | `-ImplicitCastExpr 0x21be2c3de30 <col:42> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|   | |             |   `-DeclRefExpr 0x21be2c3dde8 <col:42> 'u32':'unsigned int' lvalue Var 0x21be2c3d810 'T' 'u32':'unsigned int'
|   | |             `-IntegerLiteral 0x21be2c3de70 <col:45> 'int' 32
|   | `-IntegerLiteral 0x21be2c3df80 <line:34:9> 'int' 0
|   |-BinaryOperator 0x21be2c3e080 <line:247:5, col:17> 'u128':'u128' '='
|   | |-ArraySubscriptExpr 0x21be2c3e028 <col:5, col:13> 'u128':'u128' lvalue
|   | | |-ImplicitCastExpr 0x21be2c3e010 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21be2c3dfc8 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | `-IntegerLiteral 0x21be2c3dfe8 <col:12> 'int' 2
|   | `-ImplicitCastExpr 0x21be2c3e068 <col:17> 'u128':'u128' <LValueToRValue>
|   |   `-DeclRefExpr 0x21be2c3e048 <col:17> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |-DoStmt 0x21be2c3ef50 <line:23:25, line:34:10>
|   | |-CompoundStmt 0x21be2c3ef10 <line:23:28, line:33:11>
|   | | `-IfStmt 0x21be2c3eee8 <line:24:9, line:33:9> has_else
|   | |   |-BinaryOperator 0x21be2c3e140 <line:24:13, col:29> 'int' '=='
|   | |   | |-UnaryExprOrTypeTraitExpr 0x21be2c3e0b0 <col:13, col:26> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | |   | `-ImplicitCastExpr 0x21be2c3e128 <col:29> 'unsigned long long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x21be2c3e100 <col:29> 'int' 8
|   | |   |-CompoundStmt 0x21be2c3e780 <col:32, line:28:9>
|   | |   | |-DeclStmt 0x21be2c3e388 <line:25:17, col:63>
|   | |   | | `-VarDecl 0x21be2c3e170 <col:17, col:62> col:21 used T 'u64':'unsigned long long' cinit
|   | |   | |   `-BinaryOperator 0x21be2c3e368 <<scratch space>:296:1, .//openssl//file_jk/after\crypto\modes\gcm128.c:25:62> 'unsigned long long' '&'
|   | |   | |     |-IntegerLiteral 0x21be2c3e1d8 <<scratch space>:296:1> 'unsigned long long' 16212958658533785600
|   | |   | |     `-ParenExpr 0x21be2c3e348 <.//openssl//file_jk/after\crypto\modes\gcm128.c:25:51, col:62> 'unsigned long long'
|   | |   | |       `-BinaryOperator 0x21be2c3e328 <col:52, col:61> 'unsigned long long' '-'
|   | |   | |         |-ImplicitCastExpr 0x21be2c3e310 <col:52> 'unsigned long long' <IntegralCast>
|   | |   | |         | `-IntegerLiteral 0x21be2c3e200 <col:52> 'int' 0
|   | |   | |         `-ParenExpr 0x21be2c3e2f0 <col:54, col:61> 'unsigned long long'
|   | |   | |           `-BinaryOperator 0x21be2c3e2d0 <line:248:16, line:25:60> 'unsigned long long' '&'
|   | |   | |             |-ImplicitCastExpr 0x21be2c3e2a0 <line:248:16, line:25:57> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | |             | `-MemberExpr 0x21be2c3e248 <line:248:16, line:25:57> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |   | |             |   `-DeclRefExpr 0x21be2c3e228 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | |             `-ImplicitCastExpr 0x21be2c3e2b8 <line:25:60> 'unsigned long long' <IntegralCast>
|   | |   | |               `-IntegerLiteral 0x21be2c3e278 <col:60> 'int' 1
|   | |   | |-BinaryOperator 0x21be2c3e5b0 <line:248:16, line:26:44> 'u64':'unsigned long long' '='
|   | |   | | |-MemberExpr 0x21be2c3e3c0 <line:248:16, line:26:19> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |   | | | `-DeclRefExpr 0x21be2c3e3a0 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | | `-BinaryOperator 0x21be2c3e590 <line:26:25, col:44> 'unsigned long long' '|'
|   | |   | |   |-ParenExpr 0x21be2c3e4a0 <col:25, col:34> 'u64':'unsigned long long'
|   | |   | |   | `-BinaryOperator 0x21be2c3e480 <line:248:16, line:26:32> 'u64':'unsigned long long' '<<'
|   | |   | |   |   |-ImplicitCastExpr 0x21be2c3e468 <line:248:16, line:26:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | |   |   | `-MemberExpr 0x21be2c3e410 <line:248:16, line:26:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   | |   |   |   `-DeclRefExpr 0x21be2c3e3f0 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | |   |   `-IntegerLiteral 0x21be2c3e440 <line:26:32> 'int' 63
|   | |   | |   `-ParenExpr 0x21be2c3e570 <col:36, col:44> 'u64':'unsigned long long'
|   | |   | |     `-BinaryOperator 0x21be2c3e550 <line:248:16, line:26:43> 'u64':'unsigned long long' '>>'
|   | |   | |       |-ImplicitCastExpr 0x21be2c3e538 <line:248:16, line:26:39> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | |       | `-MemberExpr 0x21be2c3e4e0 <line:248:16, line:26:39> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |   | |       |   `-DeclRefExpr 0x21be2c3e4c0 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   | |       `-IntegerLiteral 0x21be2c3e510 <line:26:43> 'int' 1
|   | |   | `-BinaryOperator 0x21be2c3e760 <line:248:16, line:27:36> 'u64':'unsigned long long' '='
|   | |   |   |-MemberExpr 0x21be2c3e5f0 <line:248:16, line:27:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   | `-DeclRefExpr 0x21be2c3e5d0 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   |   `-BinaryOperator 0x21be2c3e740 <line:27:25, col:36> 'unsigned long long' '^'
|   | |   |     |-ParenExpr 0x21be2c3e6d0 <col:25, col:34> 'u64':'unsigned long long'
|   | |   |     | `-BinaryOperator 0x21be2c3e6b0 <line:248:16, line:27:32> 'u64':'unsigned long long' '>>'
|   | |   |     |   |-ImplicitCastExpr 0x21be2c3e698 <line:248:16, line:27:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |   |     |   | `-MemberExpr 0x21be2c3e640 <line:248:16, line:27:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |     |   |   `-DeclRefExpr 0x21be2c3e620 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   |     |   `-IntegerLiteral 0x21be2c3e670 <line:27:32> 'int' 1
|   | |   |     `-ImplicitCastExpr 0x21be2c3e728 <col:36> 'u64':'unsigned long long' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x21be2c3e6f0 <col:36> 'u64':'unsigned long long' lvalue Var 0x21be2c3e170 'T' 'u64':'unsigned long long'
|   | |   `-CompoundStmt 0x21be2c3eec0 <line:29:14, line:33:9>
|   | |     |-DeclStmt 0x21be2c3ea28 <line:30:17, col:56>
|   | |     | `-VarDecl 0x21be2c3e7b8 <col:17, col:55> col:21 used T 'u32':'unsigned int' cinit
|   | |     |   `-BinaryOperator 0x21be2c3ea08 <col:25, col:55> 'unsigned int' '&'
|   | |     |     |-IntegerLiteral 0x21be2c3e820 <col:25> 'unsigned int' 3774873600
|   | |     |     `-ParenExpr 0x21be2c3e9e8 <col:39, col:55> 'unsigned int'
|   | |     |       `-BinaryOperator 0x21be2c3e9c8 <col:40, col:54> 'unsigned int' '-'
|   | |     |         |-ImplicitCastExpr 0x21be2c3e9b0 <col:40> 'unsigned int' <IntegralCast>
|   | |     |         | `-IntegerLiteral 0x21be2c3e848 <col:40> 'int' 0
|   | |     |         `-CStyleCastExpr 0x21be2c3e988 <col:42, col:54> 'u32':'unsigned int' <IntegralCast>
|   | |     |           `-ParenExpr 0x21be2c3e968 <col:47, col:54> 'unsigned long long'
|   | |     |             `-BinaryOperator 0x21be2c3e918 <line:248:16, line:30:53> 'unsigned long long' '&'
|   | |     |               |-ImplicitCastExpr 0x21be2c3e8e8 <line:248:16, line:30:50> 'u64':'unsigned long long' <LValueToRValue>
|   | |     |               | `-MemberExpr 0x21be2c3e890 <line:248:16, line:30:50> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |     |               |   `-DeclRefExpr 0x21be2c3e870 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     |               `-ImplicitCastExpr 0x21be2c3e900 <line:30:53> 'unsigned long long' <IntegralCast>
|   | |     |                 `-IntegerLiteral 0x21be2c3e8c0 <col:53> 'int' 1
|   | |     |-BinaryOperator 0x21be2c3ec50 <line:248:16, line:31:44> 'u64':'unsigned long long' '='
|   | |     | |-MemberExpr 0x21be2c3ea60 <line:248:16, line:31:19> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |     | | `-DeclRefExpr 0x21be2c3ea40 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     | `-BinaryOperator 0x21be2c3ec30 <line:31:25, col:44> 'unsigned long long' '|'
|   | |     |   |-ParenExpr 0x21be2c3eb40 <col:25, col:34> 'u64':'unsigned long long'
|   | |     |   | `-BinaryOperator 0x21be2c3eb20 <line:248:16, line:31:32> 'u64':'unsigned long long' '<<'
|   | |     |   |   |-ImplicitCastExpr 0x21be2c3eb08 <line:248:16, line:31:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |     |   |   | `-MemberExpr 0x21be2c3eab0 <line:248:16, line:31:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |     |   |   |   `-DeclRefExpr 0x21be2c3ea90 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     |   |   `-IntegerLiteral 0x21be2c3eae0 <line:31:32> 'int' 63
|   | |     |   `-ParenExpr 0x21be2c3ec10 <col:36, col:44> 'u64':'unsigned long long'
|   | |     |     `-BinaryOperator 0x21be2c3ebf0 <line:248:16, line:31:43> 'u64':'unsigned long long' '>>'
|   | |     |       |-ImplicitCastExpr 0x21be2c3ebd8 <line:248:16, line:31:39> 'u64':'unsigned long long' <LValueToRValue>
|   | |     |       | `-MemberExpr 0x21be2c3eb80 <line:248:16, line:31:39> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | |     |       |   `-DeclRefExpr 0x21be2c3eb60 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |     |       `-IntegerLiteral 0x21be2c3ebb0 <line:31:43> 'int' 1
|   | |     `-BinaryOperator 0x21be2c3eea0 <line:248:16, line:32:47> 'u64':'unsigned long long' '='
|   | |       |-MemberExpr 0x21be2c3ec90 <line:248:16, line:32:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       | `-DeclRefExpr 0x21be2c3ec70 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |       `-BinaryOperator 0x21be2c3ee80 <line:32:25, col:47> 'unsigned long long' '^'
|   | |         |-ParenExpr 0x21be2c3ed70 <col:25, col:34> 'u64':'unsigned long long'
|   | |         | `-BinaryOperator 0x21be2c3ed50 <line:248:16, line:32:32> 'u64':'unsigned long long' '>>'
|   | |         |   |-ImplicitCastExpr 0x21be2c3ed38 <line:248:16, line:32:28> 'u64':'unsigned long long' <LValueToRValue>
|   | |         |   | `-MemberExpr 0x21be2c3ece0 <line:248:16, line:32:28> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |         |   |   `-DeclRefExpr 0x21be2c3ecc0 <line:248:16> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |         |   `-IntegerLiteral 0x21be2c3ed10 <line:32:32> 'int' 1
|   | |         `-ParenExpr 0x21be2c3ee60 <col:36, col:47> 'u64':'unsigned long long'
|   | |           `-BinaryOperator 0x21be2c3ee40 <col:37, col:45> 'u64':'unsigned long long' '<<'
|   | |             |-CStyleCastExpr 0x21be2c3edf0 <col:37, col:42> 'u64':'unsigned long long' <IntegralCast>
|   | |             | `-ImplicitCastExpr 0x21be2c3edd8 <col:42> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
|   | |             |   `-DeclRefExpr 0x21be2c3ed90 <col:42> 'u32':'unsigned int' lvalue Var 0x21be2c3e7b8 'T' 'u32':'unsigned int'
|   | |             `-IntegerLiteral 0x21be2c3ee18 <col:45> 'int' 32
|   | `-IntegerLiteral 0x21be2c3ef28 <line:34:9> 'int' 0
|   |-BinaryOperator 0x21be2c3f028 <line:249:5, col:17> 'u128':'u128' '='
|   | |-ArraySubscriptExpr 0x21be2c3efd0 <col:5, col:13> 'u128':'u128' lvalue
|   | | |-ImplicitCastExpr 0x21be2c3efb8 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21be2c3ef70 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | `-IntegerLiteral 0x21be2c3ef90 <col:12> 'int' 1
|   | `-ImplicitCastExpr 0x21be2c3f010 <col:17> 'u128':'u128' <LValueToRValue>
|   |   `-DeclRefExpr 0x21be2c3eff0 <col:17> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |-BinaryOperator 0x21be2c3f4a0 <line:250:5, col:73> 'u64':'unsigned long long' ','
|   | |-BinaryOperator 0x21be2c3f260 <col:5, col:37> 'u64':'unsigned long long' '='
|   | | |-MemberExpr 0x21be2c3f0c8 <col:5, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | | `-ArraySubscriptExpr 0x21be2c3f0a8 <col:5, col:13> 'u128':'u128' lvalue
|   | | |   |-ImplicitCastExpr 0x21be2c3f090 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21be2c3f048 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | |   `-IntegerLiteral 0x21be2c3f068 <col:12> 'int' 3
|   | | `-BinaryOperator 0x21be2c3f240 <col:20, col:37> 'unsigned long long' '^'
|   | |   |-ImplicitCastExpr 0x21be2c3f210 <col:20, col:22> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | `-MemberExpr 0x21be2c3f130 <col:20, col:22> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   `-DeclRefExpr 0x21be2c3f110 <col:20> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   `-ImplicitCastExpr 0x21be2c3f228 <col:27, col:37> 'u64':'unsigned long long' <LValueToRValue>
|   | |     `-MemberExpr 0x21be2c3f1e0 <col:27, col:37> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       `-ArraySubscriptExpr 0x21be2c3f1c0 <col:27, col:35> 'u128':'u128' lvalue
|   | |         |-ImplicitCastExpr 0x21be2c3f1a8 <col:27> 'u128 *':'u128 *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x21be2c3f160 <col:27> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |         `-IntegerLiteral 0x21be2c3f180 <col:34> 'int' 2
|   | `-BinaryOperator 0x21be2c3f480 <col:41, col:73> 'u64':'unsigned long long' '='
|   |   |-MemberExpr 0x21be2c3f300 <col:41, col:51> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | `-ArraySubscriptExpr 0x21be2c3f2e0 <col:41, col:49> 'u128':'u128' lvalue
|   |   |   |-ImplicitCastExpr 0x21be2c3f2c8 <col:41> 'u128 *':'u128 *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c3f280 <col:41> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |   |   `-IntegerLiteral 0x21be2c3f2a0 <col:48> 'int' 3
|   |   `-BinaryOperator 0x21be2c3f460 <col:56, col:73> 'unsigned long long' '^'
|   |     |-ImplicitCastExpr 0x21be2c3f430 <col:56, col:58> 'u64':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c3f350 <col:56, col:58> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     |   `-DeclRefExpr 0x21be2c3f330 <col:56> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c3f448 <col:63, col:73> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c3f400 <col:63, col:73> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c3f3e0 <col:63, col:71> 'u128':'u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c3f3c8 <col:63> 'u128 *':'u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c3f380 <col:63> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |           `-IntegerLiteral 0x21be2c3f3a0 <col:70> 'int' 2
|   |-BinaryOperator 0x21be2c3f578 <line:251:5, col:17> 'u128':'u128' '='
|   | |-DeclRefExpr 0x21be2c3f4c0 <col:5> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | `-ImplicitCastExpr 0x21be2c3f560 <col:9, col:17> 'u128':'u128' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x21be2c3f540 <col:9, col:17> 'u128':'u128' lvalue
|   |     |-ImplicitCastExpr 0x21be2c3f528 <col:9> 'u128 *':'u128 *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x21be2c3f4e0 <col:9> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |     `-IntegerLiteral 0x21be2c3f500 <col:16> 'int' 4
|   |-BinaryOperator 0x21be2c3f9d8 <line:252:5, col:73> 'u64':'unsigned long long' ','
|   | |-BinaryOperator 0x21be2c3f798 <col:5, col:37> 'u64':'unsigned long long' '='
|   | | |-MemberExpr 0x21be2c3f618 <col:5, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | | `-ArraySubscriptExpr 0x21be2c3f5f8 <col:5, col:13> 'u128':'u128' lvalue
|   | | |   |-ImplicitCastExpr 0x21be2c3f5e0 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21be2c3f598 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | |   `-IntegerLiteral 0x21be2c3f5b8 <col:12> 'int' 5
|   | | `-BinaryOperator 0x21be2c3f778 <col:20, col:37> 'unsigned long long' '^'
|   | |   |-ImplicitCastExpr 0x21be2c3f748 <col:20, col:22> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | `-MemberExpr 0x21be2c3f668 <col:20, col:22> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   `-DeclRefExpr 0x21be2c3f648 <col:20> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   `-ImplicitCastExpr 0x21be2c3f760 <col:27, col:37> 'u64':'unsigned long long' <LValueToRValue>
|   | |     `-MemberExpr 0x21be2c3f718 <col:27, col:37> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       `-ArraySubscriptExpr 0x21be2c3f6f8 <col:27, col:35> 'u128':'u128' lvalue
|   | |         |-ImplicitCastExpr 0x21be2c3f6e0 <col:27> 'u128 *':'u128 *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x21be2c3f698 <col:27> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |         `-IntegerLiteral 0x21be2c3f6b8 <col:34> 'int' 1
|   | `-BinaryOperator 0x21be2c3f9b8 <col:41, col:73> 'u64':'unsigned long long' '='
|   |   |-MemberExpr 0x21be2c3f838 <col:41, col:51> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | `-ArraySubscriptExpr 0x21be2c3f818 <col:41, col:49> 'u128':'u128' lvalue
|   |   |   |-ImplicitCastExpr 0x21be2c3f800 <col:41> 'u128 *':'u128 *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c3f7b8 <col:41> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |   |   `-IntegerLiteral 0x21be2c3f7d8 <col:48> 'int' 5
|   |   `-BinaryOperator 0x21be2c3f998 <col:56, col:73> 'unsigned long long' '^'
|   |     |-ImplicitCastExpr 0x21be2c3f968 <col:56, col:58> 'u64':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c3f888 <col:56, col:58> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     |   `-DeclRefExpr 0x21be2c3f868 <col:56> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c3f980 <col:63, col:73> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c3f938 <col:63, col:73> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c3f918 <col:63, col:71> 'u128':'u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c3f900 <col:63> 'u128 *':'u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c3f8b8 <col:63> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |           `-IntegerLiteral 0x21be2c3f8d8 <col:70> 'int' 1
|   |-BinaryOperator 0x21be2c3fe38 <line:253:5, col:73> 'u64':'unsigned long long' ','
|   | |-BinaryOperator 0x21be2c3fbf8 <col:5, col:37> 'u64':'unsigned long long' '='
|   | | |-MemberExpr 0x21be2c3fa78 <col:5, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | | `-ArraySubscriptExpr 0x21be2c3fa58 <col:5, col:13> 'u128':'u128' lvalue
|   | | |   |-ImplicitCastExpr 0x21be2c3fa40 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21be2c3f9f8 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | |   `-IntegerLiteral 0x21be2c3fa18 <col:12> 'int' 6
|   | | `-BinaryOperator 0x21be2c3fbd8 <col:20, col:37> 'unsigned long long' '^'
|   | |   |-ImplicitCastExpr 0x21be2c3fba8 <col:20, col:22> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | `-MemberExpr 0x21be2c3fac8 <col:20, col:22> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   `-DeclRefExpr 0x21be2c3faa8 <col:20> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   `-ImplicitCastExpr 0x21be2c3fbc0 <col:27, col:37> 'u64':'unsigned long long' <LValueToRValue>
|   | |     `-MemberExpr 0x21be2c3fb78 <col:27, col:37> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       `-ArraySubscriptExpr 0x21be2c3fb58 <col:27, col:35> 'u128':'u128' lvalue
|   | |         |-ImplicitCastExpr 0x21be2c3fb40 <col:27> 'u128 *':'u128 *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x21be2c3faf8 <col:27> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |         `-IntegerLiteral 0x21be2c3fb18 <col:34> 'int' 2
|   | `-BinaryOperator 0x21be2c3fe18 <col:41, col:73> 'u64':'unsigned long long' '='
|   |   |-MemberExpr 0x21be2c3fc98 <col:41, col:51> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | `-ArraySubscriptExpr 0x21be2c3fc78 <col:41, col:49> 'u128':'u128' lvalue
|   |   |   |-ImplicitCastExpr 0x21be2c3fc60 <col:41> 'u128 *':'u128 *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c3fc18 <col:41> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |   |   `-IntegerLiteral 0x21be2c3fc38 <col:48> 'int' 6
|   |   `-BinaryOperator 0x21be2c3fdf8 <col:56, col:73> 'unsigned long long' '^'
|   |     |-ImplicitCastExpr 0x21be2c3fdc8 <col:56, col:58> 'u64':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c3fce8 <col:56, col:58> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     |   `-DeclRefExpr 0x21be2c3fcc8 <col:56> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c3fde0 <col:63, col:73> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c3fd98 <col:63, col:73> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c3fd78 <col:63, col:71> 'u128':'u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c3fd60 <col:63> 'u128 *':'u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c3fd18 <col:63> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |           `-IntegerLiteral 0x21be2c3fd38 <col:70> 'int' 2
|   |-BinaryOperator 0x21be2c46140 <line:254:5, col:73> 'u64':'unsigned long long' ','
|   | |-BinaryOperator 0x21be2c40058 <col:5, col:37> 'u64':'unsigned long long' '='
|   | | |-MemberExpr 0x21be2c3fed8 <col:5, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | | `-ArraySubscriptExpr 0x21be2c3feb8 <col:5, col:13> 'u128':'u128' lvalue
|   | | |   |-ImplicitCastExpr 0x21be2c3fea0 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21be2c3fe58 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | |   `-IntegerLiteral 0x21be2c3fe78 <col:12> 'int' 7
|   | | `-BinaryOperator 0x21be2c40038 <col:20, col:37> 'unsigned long long' '^'
|   | |   |-ImplicitCastExpr 0x21be2c40008 <col:20, col:22> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | `-MemberExpr 0x21be2c3ff28 <col:20, col:22> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   `-DeclRefExpr 0x21be2c3ff08 <col:20> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   `-ImplicitCastExpr 0x21be2c40020 <col:27, col:37> 'u64':'unsigned long long' <LValueToRValue>
|   | |     `-MemberExpr 0x21be2c3ffd8 <col:27, col:37> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       `-ArraySubscriptExpr 0x21be2c3ffb8 <col:27, col:35> 'u128':'u128' lvalue
|   | |         |-ImplicitCastExpr 0x21be2c3ffa0 <col:27> 'u128 *':'u128 *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x21be2c3ff58 <col:27> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |         `-IntegerLiteral 0x21be2c3ff78 <col:34> 'int' 3
|   | `-BinaryOperator 0x21be2c46120 <col:41, col:73> 'u64':'unsigned long long' '='
|   |   |-MemberExpr 0x21be2c45fa0 <col:41, col:51> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | `-ArraySubscriptExpr 0x21be2c400d8 <col:41, col:49> 'u128':'u128' lvalue
|   |   |   |-ImplicitCastExpr 0x21be2c400c0 <col:41> 'u128 *':'u128 *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c40078 <col:41> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |   |   `-IntegerLiteral 0x21be2c40098 <col:48> 'int' 7
|   |   `-BinaryOperator 0x21be2c46100 <col:56, col:73> 'unsigned long long' '^'
|   |     |-ImplicitCastExpr 0x21be2c460d0 <col:56, col:58> 'u64':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c45ff0 <col:56, col:58> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     |   `-DeclRefExpr 0x21be2c45fd0 <col:56> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c460e8 <col:63, col:73> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c460a0 <col:63, col:73> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c46080 <col:63, col:71> 'u128':'u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c46068 <col:63> 'u128 *':'u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c46020 <col:63> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |           `-IntegerLiteral 0x21be2c46040 <col:70> 'int' 3
|   |-BinaryOperator 0x21be2c46218 <line:255:5, col:17> 'u128':'u128' '='
|   | |-DeclRefExpr 0x21be2c46160 <col:5> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | `-ImplicitCastExpr 0x21be2c46200 <col:9, col:17> 'u128':'u128' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x21be2c461e0 <col:9, col:17> 'u128':'u128' lvalue
|   |     |-ImplicitCastExpr 0x21be2c461c8 <col:9> 'u128 *':'u128 *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x21be2c46180 <col:9> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |     `-IntegerLiteral 0x21be2c461a0 <col:16> 'int' 8
|   |-BinaryOperator 0x21be2c46678 <line:256:5, col:73> 'u64':'unsigned long long' ','
|   | |-BinaryOperator 0x21be2c46438 <col:5, col:37> 'u64':'unsigned long long' '='
|   | | |-MemberExpr 0x21be2c462b8 <col:5, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | | `-ArraySubscriptExpr 0x21be2c46298 <col:5, col:13> 'u128':'u128' lvalue
|   | | |   |-ImplicitCastExpr 0x21be2c46280 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21be2c46238 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | |   `-IntegerLiteral 0x21be2c46258 <col:12> 'int' 9
|   | | `-BinaryOperator 0x21be2c46418 <col:20, col:37> 'unsigned long long' '^'
|   | |   |-ImplicitCastExpr 0x21be2c463e8 <col:20, col:22> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | `-MemberExpr 0x21be2c46308 <col:20, col:22> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   `-DeclRefExpr 0x21be2c462e8 <col:20> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   `-ImplicitCastExpr 0x21be2c46400 <col:27, col:37> 'u64':'unsigned long long' <LValueToRValue>
|   | |     `-MemberExpr 0x21be2c463b8 <col:27, col:37> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       `-ArraySubscriptExpr 0x21be2c46398 <col:27, col:35> 'u128':'u128' lvalue
|   | |         |-ImplicitCastExpr 0x21be2c46380 <col:27> 'u128 *':'u128 *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x21be2c46338 <col:27> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |         `-IntegerLiteral 0x21be2c46358 <col:34> 'int' 1
|   | `-BinaryOperator 0x21be2c46658 <col:41, col:73> 'u64':'unsigned long long' '='
|   |   |-MemberExpr 0x21be2c464d8 <col:41, col:51> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | `-ArraySubscriptExpr 0x21be2c464b8 <col:41, col:49> 'u128':'u128' lvalue
|   |   |   |-ImplicitCastExpr 0x21be2c464a0 <col:41> 'u128 *':'u128 *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c46458 <col:41> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |   |   `-IntegerLiteral 0x21be2c46478 <col:48> 'int' 9
|   |   `-BinaryOperator 0x21be2c46638 <col:56, col:73> 'unsigned long long' '^'
|   |     |-ImplicitCastExpr 0x21be2c46608 <col:56, col:58> 'u64':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c46528 <col:56, col:58> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     |   `-DeclRefExpr 0x21be2c46508 <col:56> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c46620 <col:63, col:73> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c465d8 <col:63, col:73> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c465b8 <col:63, col:71> 'u128':'u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c465a0 <col:63> 'u128 *':'u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c46558 <col:63> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |           `-IntegerLiteral 0x21be2c46578 <col:70> 'int' 1
|   |-BinaryOperator 0x21be2c46ad8 <line:257:5, col:75> 'u64':'unsigned long long' ','
|   | |-BinaryOperator 0x21be2c46898 <col:5, col:38> 'u64':'unsigned long long' '='
|   | | |-MemberExpr 0x21be2c46718 <col:5, col:16> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | | `-ArraySubscriptExpr 0x21be2c466f8 <col:5, col:14> 'u128':'u128' lvalue
|   | | |   |-ImplicitCastExpr 0x21be2c466e0 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21be2c46698 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | |   `-IntegerLiteral 0x21be2c466b8 <col:12> 'int' 10
|   | | `-BinaryOperator 0x21be2c46878 <col:21, col:38> 'unsigned long long' '^'
|   | |   |-ImplicitCastExpr 0x21be2c46848 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | `-MemberExpr 0x21be2c46768 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   `-DeclRefExpr 0x21be2c46748 <col:21> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   `-ImplicitCastExpr 0x21be2c46860 <col:28, col:38> 'u64':'unsigned long long' <LValueToRValue>
|   | |     `-MemberExpr 0x21be2c46818 <col:28, col:38> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       `-ArraySubscriptExpr 0x21be2c467f8 <col:28, col:36> 'u128':'u128' lvalue
|   | |         |-ImplicitCastExpr 0x21be2c467e0 <col:28> 'u128 *':'u128 *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x21be2c46798 <col:28> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |         `-IntegerLiteral 0x21be2c467b8 <col:35> 'int' 2
|   | `-BinaryOperator 0x21be2c46ab8 <col:42, col:75> 'u64':'unsigned long long' '='
|   |   |-MemberExpr 0x21be2c46938 <col:42, col:53> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | `-ArraySubscriptExpr 0x21be2c46918 <col:42, col:51> 'u128':'u128' lvalue
|   |   |   |-ImplicitCastExpr 0x21be2c46900 <col:42> 'u128 *':'u128 *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c468b8 <col:42> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |   |   `-IntegerLiteral 0x21be2c468d8 <col:49> 'int' 10
|   |   `-BinaryOperator 0x21be2c46a98 <col:58, col:75> 'unsigned long long' '^'
|   |     |-ImplicitCastExpr 0x21be2c46a68 <col:58, col:60> 'u64':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c46988 <col:58, col:60> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     |   `-DeclRefExpr 0x21be2c46968 <col:58> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c46a80 <col:65, col:75> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c46a38 <col:65, col:75> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c46a18 <col:65, col:73> 'u128':'u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c46a00 <col:65> 'u128 *':'u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c469b8 <col:65> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |           `-IntegerLiteral 0x21be2c469d8 <col:72> 'int' 2
|   |-BinaryOperator 0x21be2c46f38 <line:258:5, col:75> 'u64':'unsigned long long' ','
|   | |-BinaryOperator 0x21be2c46cf8 <col:5, col:38> 'u64':'unsigned long long' '='
|   | | |-MemberExpr 0x21be2c46b78 <col:5, col:16> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | | `-ArraySubscriptExpr 0x21be2c46b58 <col:5, col:14> 'u128':'u128' lvalue
|   | | |   |-ImplicitCastExpr 0x21be2c46b40 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21be2c46af8 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | |   `-IntegerLiteral 0x21be2c46b18 <col:12> 'int' 11
|   | | `-BinaryOperator 0x21be2c46cd8 <col:21, col:38> 'unsigned long long' '^'
|   | |   |-ImplicitCastExpr 0x21be2c46ca8 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | `-MemberExpr 0x21be2c46bc8 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   `-DeclRefExpr 0x21be2c46ba8 <col:21> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   `-ImplicitCastExpr 0x21be2c46cc0 <col:28, col:38> 'u64':'unsigned long long' <LValueToRValue>
|   | |     `-MemberExpr 0x21be2c46c78 <col:28, col:38> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       `-ArraySubscriptExpr 0x21be2c46c58 <col:28, col:36> 'u128':'u128' lvalue
|   | |         |-ImplicitCastExpr 0x21be2c46c40 <col:28> 'u128 *':'u128 *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x21be2c46bf8 <col:28> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |         `-IntegerLiteral 0x21be2c46c18 <col:35> 'int' 3
|   | `-BinaryOperator 0x21be2c46f18 <col:42, col:75> 'u64':'unsigned long long' '='
|   |   |-MemberExpr 0x21be2c46d98 <col:42, col:53> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | `-ArraySubscriptExpr 0x21be2c46d78 <col:42, col:51> 'u128':'u128' lvalue
|   |   |   |-ImplicitCastExpr 0x21be2c46d60 <col:42> 'u128 *':'u128 *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c46d18 <col:42> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |   |   `-IntegerLiteral 0x21be2c46d38 <col:49> 'int' 11
|   |   `-BinaryOperator 0x21be2c46ef8 <col:58, col:75> 'unsigned long long' '^'
|   |     |-ImplicitCastExpr 0x21be2c46ec8 <col:58, col:60> 'u64':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c46de8 <col:58, col:60> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     |   `-DeclRefExpr 0x21be2c46dc8 <col:58> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c46ee0 <col:65, col:75> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c46e98 <col:65, col:75> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c46e78 <col:65, col:73> 'u128':'u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c46e60 <col:65> 'u128 *':'u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c46e18 <col:65> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |           `-IntegerLiteral 0x21be2c46e38 <col:72> 'int' 3
|   |-BinaryOperator 0x21be2c43368 <line:259:5, col:75> 'u64':'unsigned long long' ','
|   | |-BinaryOperator 0x21be2c43128 <col:5, col:38> 'u64':'unsigned long long' '='
|   | | |-MemberExpr 0x21be2c42fa8 <col:5, col:16> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | | `-ArraySubscriptExpr 0x21be2c42f88 <col:5, col:14> 'u128':'u128' lvalue
|   | | |   |-ImplicitCastExpr 0x21be2c42f70 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21be2c46f58 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | |   `-IntegerLiteral 0x21be2c46f78 <col:12> 'int' 12
|   | | `-BinaryOperator 0x21be2c43108 <col:21, col:38> 'unsigned long long' '^'
|   | |   |-ImplicitCastExpr 0x21be2c430d8 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | `-MemberExpr 0x21be2c42ff8 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   `-DeclRefExpr 0x21be2c42fd8 <col:21> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   `-ImplicitCastExpr 0x21be2c430f0 <col:28, col:38> 'u64':'unsigned long long' <LValueToRValue>
|   | |     `-MemberExpr 0x21be2c430a8 <col:28, col:38> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       `-ArraySubscriptExpr 0x21be2c43088 <col:28, col:36> 'u128':'u128' lvalue
|   | |         |-ImplicitCastExpr 0x21be2c43070 <col:28> 'u128 *':'u128 *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x21be2c43028 <col:28> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |         `-IntegerLiteral 0x21be2c43048 <col:35> 'int' 4
|   | `-BinaryOperator 0x21be2c43348 <col:42, col:75> 'u64':'unsigned long long' '='
|   |   |-MemberExpr 0x21be2c431c8 <col:42, col:53> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | `-ArraySubscriptExpr 0x21be2c431a8 <col:42, col:51> 'u128':'u128' lvalue
|   |   |   |-ImplicitCastExpr 0x21be2c43190 <col:42> 'u128 *':'u128 *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c43148 <col:42> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |   |   `-IntegerLiteral 0x21be2c43168 <col:49> 'int' 12
|   |   `-BinaryOperator 0x21be2c43328 <col:58, col:75> 'unsigned long long' '^'
|   |     |-ImplicitCastExpr 0x21be2c432f8 <col:58, col:60> 'u64':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c43218 <col:58, col:60> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     |   `-DeclRefExpr 0x21be2c431f8 <col:58> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c43310 <col:65, col:75> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c432c8 <col:65, col:75> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c432a8 <col:65, col:73> 'u128':'u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c43290 <col:65> 'u128 *':'u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c43248 <col:65> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |           `-IntegerLiteral 0x21be2c43268 <col:72> 'int' 4
|   |-BinaryOperator 0x21be2c437c8 <line:260:5, col:75> 'u64':'unsigned long long' ','
|   | |-BinaryOperator 0x21be2c43588 <col:5, col:38> 'u64':'unsigned long long' '='
|   | | |-MemberExpr 0x21be2c43408 <col:5, col:16> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | | `-ArraySubscriptExpr 0x21be2c433e8 <col:5, col:14> 'u128':'u128' lvalue
|   | | |   |-ImplicitCastExpr 0x21be2c433d0 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21be2c43388 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | |   `-IntegerLiteral 0x21be2c433a8 <col:12> 'int' 13
|   | | `-BinaryOperator 0x21be2c43568 <col:21, col:38> 'unsigned long long' '^'
|   | |   |-ImplicitCastExpr 0x21be2c43538 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | `-MemberExpr 0x21be2c43458 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   `-DeclRefExpr 0x21be2c43438 <col:21> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   `-ImplicitCastExpr 0x21be2c43550 <col:28, col:38> 'u64':'unsigned long long' <LValueToRValue>
|   | |     `-MemberExpr 0x21be2c43508 <col:28, col:38> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       `-ArraySubscriptExpr 0x21be2c434e8 <col:28, col:36> 'u128':'u128' lvalue
|   | |         |-ImplicitCastExpr 0x21be2c434d0 <col:28> 'u128 *':'u128 *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x21be2c43488 <col:28> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |         `-IntegerLiteral 0x21be2c434a8 <col:35> 'int' 5
|   | `-BinaryOperator 0x21be2c437a8 <col:42, col:75> 'u64':'unsigned long long' '='
|   |   |-MemberExpr 0x21be2c43628 <col:42, col:53> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | `-ArraySubscriptExpr 0x21be2c43608 <col:42, col:51> 'u128':'u128' lvalue
|   |   |   |-ImplicitCastExpr 0x21be2c435f0 <col:42> 'u128 *':'u128 *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c435a8 <col:42> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |   |   `-IntegerLiteral 0x21be2c435c8 <col:49> 'int' 13
|   |   `-BinaryOperator 0x21be2c43788 <col:58, col:75> 'unsigned long long' '^'
|   |     |-ImplicitCastExpr 0x21be2c43758 <col:58, col:60> 'u64':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c43678 <col:58, col:60> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     |   `-DeclRefExpr 0x21be2c43658 <col:58> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c43770 <col:65, col:75> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c43728 <col:65, col:75> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c43708 <col:65, col:73> 'u128':'u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c436f0 <col:65> 'u128 *':'u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c436a8 <col:65> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |           `-IntegerLiteral 0x21be2c436c8 <col:72> 'int' 5
|   |-BinaryOperator 0x21be2c43c28 <line:261:5, col:75> 'u64':'unsigned long long' ','
|   | |-BinaryOperator 0x21be2c439e8 <col:5, col:38> 'u64':'unsigned long long' '='
|   | | |-MemberExpr 0x21be2c43868 <col:5, col:16> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | | `-ArraySubscriptExpr 0x21be2c43848 <col:5, col:14> 'u128':'u128' lvalue
|   | | |   |-ImplicitCastExpr 0x21be2c43830 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x21be2c437e8 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | | |   `-IntegerLiteral 0x21be2c43808 <col:12> 'int' 14
|   | | `-BinaryOperator 0x21be2c439c8 <col:21, col:38> 'unsigned long long' '^'
|   | |   |-ImplicitCastExpr 0x21be2c43998 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|   | |   | `-MemberExpr 0x21be2c438b8 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |   |   `-DeclRefExpr 0x21be2c43898 <col:21> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   | |   `-ImplicitCastExpr 0x21be2c439b0 <col:28, col:38> 'u64':'unsigned long long' <LValueToRValue>
|   | |     `-MemberExpr 0x21be2c43968 <col:28, col:38> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | |       `-ArraySubscriptExpr 0x21be2c43948 <col:28, col:36> 'u128':'u128' lvalue
|   | |         |-ImplicitCastExpr 0x21be2c43930 <col:28> 'u128 *':'u128 *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x21be2c438e8 <col:28> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   | |         `-IntegerLiteral 0x21be2c43908 <col:35> 'int' 6
|   | `-BinaryOperator 0x21be2c43c08 <col:42, col:75> 'u64':'unsigned long long' '='
|   |   |-MemberExpr 0x21be2c43a88 <col:42, col:53> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | `-ArraySubscriptExpr 0x21be2c43a68 <col:42, col:51> 'u128':'u128' lvalue
|   |   |   |-ImplicitCastExpr 0x21be2c43a50 <col:42> 'u128 *':'u128 *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c43a08 <col:42> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |   |   `-IntegerLiteral 0x21be2c43a28 <col:49> 'int' 14
|   |   `-BinaryOperator 0x21be2c43be8 <col:58, col:75> 'unsigned long long' '^'
|   |     |-ImplicitCastExpr 0x21be2c43bb8 <col:58, col:60> 'u64':'unsigned long long' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c43ad8 <col:58, col:60> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     |   `-DeclRefExpr 0x21be2c43ab8 <col:58> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c43bd0 <col:65, col:75> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c43b88 <col:65, col:75> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c43b68 <col:65, col:73> 'u128':'u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c43b50 <col:65> 'u128 *':'u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c43b08 <col:65> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|   |           `-IntegerLiteral 0x21be2c43b28 <col:72> 'int' 6
|   `-BinaryOperator 0x21be2c470d0 <line:262:5, col:75> 'u64':'unsigned long long' ','
|     |-BinaryOperator 0x21be2c43e48 <col:5, col:38> 'u64':'unsigned long long' '='
|     | |-MemberExpr 0x21be2c43cc8 <col:5, col:16> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | | `-ArraySubscriptExpr 0x21be2c43ca8 <col:5, col:14> 'u128':'u128' lvalue
|     | |   |-ImplicitCastExpr 0x21be2c43c90 <col:5> 'u128 *':'u128 *' <LValueToRValue>
|     | |   | `-DeclRefExpr 0x21be2c43c48 <col:5> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|     | |   `-IntegerLiteral 0x21be2c43c68 <col:12> 'int' 15
|     | `-BinaryOperator 0x21be2c43e28 <col:21, col:38> 'unsigned long long' '^'
|     |   |-ImplicitCastExpr 0x21be2c43df8 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|     |   | `-MemberExpr 0x21be2c43d18 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     |   |   `-DeclRefExpr 0x21be2c43cf8 <col:21> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|     |   `-ImplicitCastExpr 0x21be2c43e10 <col:28, col:38> 'u64':'unsigned long long' <LValueToRValue>
|     |     `-MemberExpr 0x21be2c43dc8 <col:28, col:38> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     |       `-ArraySubscriptExpr 0x21be2c43da8 <col:28, col:36> 'u128':'u128' lvalue
|     |         |-ImplicitCastExpr 0x21be2c43d90 <col:28> 'u128 *':'u128 *' <LValueToRValue>
|     |         | `-DeclRefExpr 0x21be2c43d48 <col:28> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|     |         `-IntegerLiteral 0x21be2c43d68 <col:35> 'int' 7
|     `-BinaryOperator 0x21be2c470b0 <col:42, col:75> 'u64':'unsigned long long' '='
|       |-MemberExpr 0x21be2c43ee8 <col:42, col:53> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|       | `-ArraySubscriptExpr 0x21be2c43ec8 <col:42, col:51> 'u128':'u128' lvalue
|       |   |-ImplicitCastExpr 0x21be2c43eb0 <col:42> 'u128 *':'u128 *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x21be2c43e68 <col:42> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|       |   `-IntegerLiteral 0x21be2c43e88 <col:49> 'int' 15
|       `-BinaryOperator 0x21be2c47090 <col:58, col:75> 'unsigned long long' '^'
|         |-ImplicitCastExpr 0x21be2c47060 <col:58, col:60> 'u64':'unsigned long long' <LValueToRValue>
|         | `-MemberExpr 0x21be2c43f38 <col:58, col:60> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|         |   `-DeclRefExpr 0x21be2c43f18 <col:58> 'u128':'u128' lvalue Var 0x21be2c35b70 'V' 'u128':'u128'
|         `-ImplicitCastExpr 0x21be2c47078 <col:65, col:75> 'u64':'unsigned long long' <LValueToRValue>
|           `-MemberExpr 0x21be2c47030 <col:65, col:75> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|             `-ArraySubscriptExpr 0x21be2c47010 <col:65, col:73> 'u128':'u128' lvalue
|               |-ImplicitCastExpr 0x21be2c46ff8 <col:65> 'u128 *':'u128 *' <LValueToRValue>
|               | `-DeclRefExpr 0x21be2c46fb0 <col:65> 'u128 *':'u128 *' lvalue ParmVar 0x21be2c35890 'Htable' 'u128 *':'u128 *'
|               `-IntegerLiteral 0x21be2c46fd0 <col:72> 'int' 7
|-VarDecl 0x21be2c472a8 <line:291:1, line:296:1> line:291:21 used rem_4bit 'const size_t [16]' static cinit
| `-InitListExpr 0x21be2c49328 <col:36, line:296:1> 'const size_t [16]'
|   |-ParenExpr 0x21be2c474e0 <line:22:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c474c0 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c47388 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c47368 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c47310 <line:292:10> 'int' 0
|   |   `-ParenExpr 0x21be2c474a0 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c47480 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c47420 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c473c0 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c47408 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c473e0 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c47468 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c47440 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c476d0 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c476b0 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c47578 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c47558 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c47500 <line:292:24> 'int' 7200
|   |   `-ParenExpr 0x21be2c47690 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c47670 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c47610 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c475b0 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c475f8 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c475d0 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c47658 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c47630 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c478c0 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c478a0 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c47768 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c47748 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c476f0 <line:292:38> 'int' 14400
|   |   `-ParenExpr 0x21be2c47880 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c47860 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c47800 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c477a0 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c477e8 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c477c0 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c47848 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c47820 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c47ab0 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c47a90 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c47958 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c47938 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c478e0 <line:292:52> 'int' 9312
|   |   `-ParenExpr 0x21be2c47a70 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c47a50 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c479f0 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c47990 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c479d8 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c479b0 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c47a38 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c47a10 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c47ca0 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c47c80 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c47b48 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c47b28 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c47ad0 <line:293:10> 'int' 28800
|   |   `-ParenExpr 0x21be2c47c60 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c47c40 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c47be0 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c47b80 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c47bc8 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c47ba0 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c47c28 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c47c00 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c47e90 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c47e70 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c47d38 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c47d18 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c47cc0 <line:293:24> 'int' 27808
|   |   `-ParenExpr 0x21be2c47e50 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c47e30 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c47dd0 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c47d70 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c47db8 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c47d90 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c47e18 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c47df0 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c48098 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c48078 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c47f28 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c47f08 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c47eb0 <line:293:38> 'int' 18624
|   |   `-ParenExpr 0x21be2c48058 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c48038 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c47fd8 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c47f60 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c47fc0 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c47f80 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c48020 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c47ff8 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c48288 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c48268 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c48130 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c48110 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c480b8 <line:293:52> 'int' 21728
|   |   `-ParenExpr 0x21be2c48248 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c48228 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c481c8 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c48168 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c481b0 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c48188 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c48210 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c481e8 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c48478 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c48458 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c48320 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c48300 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c482a8 <line:294:10> 'int' 57600
|   |   `-ParenExpr 0x21be2c48438 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c48418 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c483b8 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c48358 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c483a0 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c48378 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c48400 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c483d8 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c48668 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c48648 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c48510 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c484f0 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c48498 <line:294:24> 'int' 64800
|   |   `-ParenExpr 0x21be2c48628 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c48608 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c485a8 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c48548 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c48590 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c48568 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c485f0 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c485c8 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c48858 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c48838 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c48700 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c486e0 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c48688 <line:294:38> 'int' 55616
|   |   `-ParenExpr 0x21be2c48818 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c487f8 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c48798 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c48738 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c48780 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c48758 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c487e0 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c487b8 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c48a48 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c48a28 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c488f0 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c488d0 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c48878 <line:294:52> 'int' 50528
|   |   `-ParenExpr 0x21be2c48a08 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c489e8 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c48988 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c48928 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c48970 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c48948 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c489d0 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c489a8 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c48c38 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c48c18 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c48ae0 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c48ac0 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c48a68 <line:295:10> 'int' 37248
|   |   `-ParenExpr 0x21be2c48bf8 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c48bd8 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c48b78 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c48b18 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c48b60 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c48b38 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c48bc0 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c48b98 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c48e28 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c48e08 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c48cd0 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c48cb0 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c48c58 <line:295:24> 'int' 36256
|   |   `-ParenExpr 0x21be2c48de8 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c48dc8 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c48d68 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c48d08 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c48d50 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c48d28 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c48db0 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c48d88 <col:57> 'int' 16
|   |-ParenExpr 0x21be2c49030 <col:25, col:60> 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c49010 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x21be2c48ec0 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-ParenExpr 0x21be2c48ea0 <col:34, col:36> 'int'
|   |   |   `-IntegerLiteral 0x21be2c48e48 <line:295:38> 'int' 43456
|   |   `-ParenExpr 0x21be2c48ff0 <line:22:39, col:59> 'unsigned long long'
|   |     `-BinaryOperator 0x21be2c48fd0 <col:40, col:57> 'unsigned long long' '-'
|   |       |-BinaryOperator 0x21be2c48f58 <col:40, col:55> 'unsigned long long' '*'
|   |       | |-UnaryExprOrTypeTraitExpr 0x21be2c48ef8 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x21be2c48f40 <col:55> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x21be2c48f18 <col:55> 'int' 8
|   |       `-ImplicitCastExpr 0x21be2c48fa0 <col:57> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c48f78 <col:57> 'int' 16
|   `-ParenExpr 0x21be2c49220 <col:25, col:60> 'size_t':'unsigned long long'
|     `-BinaryOperator 0x21be2c49200 <col:26, col:59> 'size_t':'unsigned long long' '<<'
|       |-CStyleCastExpr 0x21be2c490c8 <col:26, col:36> 'size_t':'unsigned long long' <IntegralCast>
|       | `-ParenExpr 0x21be2c490a8 <col:34, col:36> 'int'
|       |   `-IntegerLiteral 0x21be2c49050 <line:295:52> 'int' 46560
|       `-ParenExpr 0x21be2c491e0 <line:22:39, col:59> 'unsigned long long'
|         `-BinaryOperator 0x21be2c491c0 <col:40, col:57> 'unsigned long long' '-'
|           |-BinaryOperator 0x21be2c49160 <col:40, col:55> 'unsigned long long' '*'
|           | |-UnaryExprOrTypeTraitExpr 0x21be2c49100 <col:40, col:53> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|           | `-ImplicitCastExpr 0x21be2c49148 <col:55> 'unsigned long long' <IntegralCast>
|           |   `-IntegerLiteral 0x21be2c49120 <col:55> 'int' 8
|           `-ImplicitCastExpr 0x21be2c491a8 <col:57> 'unsigned long long' <IntegralCast>
|             `-IntegerLiteral 0x21be2c49180 <col:57> 'int' 16
|-FunctionDecl 0x21be2c495d8 <line:298:1, line:366:1> line:298:13 used gcm_gmult_4bit 'void (u64 *, const u128 *)' static
| |-ParmVarDecl 0x21be2c49448 <col:28, col:36> col:32 used Xi 'u64 *':'u64 *'
| |-ParmVarDecl 0x21be2c49510 <col:39, col:59> col:50 used Htable 'const u128 *':'const u128 *'
| `-CompoundStmt 0x21be2c44580 <line:299:1, line:366:1>
|   |-DeclStmt 0x21be2c49718 <line:300:5, col:11>
|   | `-VarDecl 0x21be2c496b0 <col:5, col:10> col:10 used Z 'u128':'u128'
|   |-DeclStmt 0x21be2c497d8 <line:301:5, col:17>
|   | `-VarDecl 0x21be2c49748 <col:5, col:15> col:9 used cnt 'int' cinit
|   |   `-IntegerLiteral 0x21be2c497b0 <col:15> 'int' 15
|   |-DeclStmt 0x21be2c49978 <line:302:5, col:25>
|   | |-VarDecl 0x21be2c49800 <col:5, col:12> col:12 used rem 'size_t':'unsigned long long'
|   | |-VarDecl 0x21be2c49878 <col:5, col:17> col:17 used nlo 'size_t':'unsigned long long'
|   | `-VarDecl 0x21be2c498f0 <col:5, col:22> col:22 used nhi 'size_t':'unsigned long long'
|   |-DeclStmt 0x21be2c49ce8 <line:303:5, line:306:24>
|   | |-RecordDecl 0x21be2c49990 <line:303:11, line:306:5> line:303:11 union definition
|   | | |-FieldDecl 0x21be2c49a68 <line:304:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x21be2c49ad0 <line:305:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x21be2c49b88 <line:303:5, line:306:23> col:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:303:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:303:11)' cinit
|   |   `-InitListExpr 0x21be2c49c70 <col:19, col:23> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:303:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:303:11)' field Field 0x21be2c49a68 'one' 'long'
|   |     `-ImplicitCastExpr 0x21be2c49cb8 <col:21> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x21be2c49bf0 <col:21> 'int' 1
|   |-BinaryOperator 0x21be2c49e40 <line:308:5, col:30> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x21be2c49d00 <col:5> 'size_t':'unsigned long long' lvalue Var 0x21be2c49878 'nlo' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x21be2c49e28 <col:11, col:30> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x21be2c49e10 <col:11, col:30> 'u8':'unsigned char' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x21be2c49df0 <col:11, col:30> 'const u8':'const unsigned char' lvalue
|   |       |-ParenExpr 0x21be2c49da8 <col:11, col:26> 'const u8 *'
|   |       | `-CStyleCastExpr 0x21be2c49d80 <col:12, col:24> 'const u8 *' <BitCast>
|   |       |   `-ImplicitCastExpr 0x21be2c49d68 <col:24> 'u64 *':'u64 *' <LValueToRValue> part_of_explicit_cast
|   |       |     `-DeclRefExpr 0x21be2c49d38 <col:24> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c49448 'Xi' 'u64 *':'u64 *'
|   |       `-IntegerLiteral 0x21be2c49dc8 <col:28> 'int' 15
|   |-BinaryOperator 0x21be2c49f18 <line:309:5, col:18> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x21be2c49e60 <col:5> 'size_t':'unsigned long long' lvalue Var 0x21be2c498f0 'nhi' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x21be2c49ef8 <col:11, col:18> 'size_t':'unsigned long long' '>>'
|   |   |-ImplicitCastExpr 0x21be2c49ee0 <col:11> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21be2c49e98 <col:11> 'size_t':'unsigned long long' lvalue Var 0x21be2c49878 'nlo' 'size_t':'unsigned long long'
|   |   `-IntegerLiteral 0x21be2c49eb8 <col:18> 'int' 4
|   |-CompoundAssignOperator 0x21be2c49f98 <line:310:5, col:12> 'size_t':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-DeclRefExpr 0x21be2c49f38 <col:5> 'size_t':'unsigned long long' lvalue Var 0x21be2c49878 'nlo' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x21be2c49f80 <col:12> 'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x21be2c49f58 <col:12> 'int' 15
|   |-BinaryOperator 0x21be2c4a120 <line:312:5, col:24> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x21be2c4a018 <col:5, col:7> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   | | `-DeclRefExpr 0x21be2c49fe0 <col:5> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   | `-ImplicitCastExpr 0x21be2c4a108 <col:12, col:24> 'u64':'unsigned long long' <LValueToRValue>
|   |   `-MemberExpr 0x21be2c4a0d8 <col:12, col:24> 'const u64':'const unsigned long long' lvalue .hi 0x21be2a60ad0
|   |     `-ArraySubscriptExpr 0x21be2c4a0b8 <col:12, col:22> 'const u128':'const u128' lvalue
|   |       |-ImplicitCastExpr 0x21be2c4a088 <col:12> 'const u128 *':'const u128 *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x21be2c4a048 <col:12> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c49510 'Htable' 'const u128 *':'const u128 *'
|   |       `-ImplicitCastExpr 0x21be2c4a0a0 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x21be2c4a068 <col:19> 'size_t':'unsigned long long' lvalue Var 0x21be2c49878 'nlo' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x21be2c4a268 <line:313:5, col:24> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x21be2c4a160 <col:5, col:7> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   | | `-DeclRefExpr 0x21be2c4a140 <col:5> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   | `-ImplicitCastExpr 0x21be2c4a250 <col:12, col:24> 'u64':'unsigned long long' <LValueToRValue>
|   |   `-MemberExpr 0x21be2c4a220 <col:12, col:24> 'const u64':'const unsigned long long' lvalue .lo 0x21be2a60b38
|   |     `-ArraySubscriptExpr 0x21be2c4a200 <col:12, col:22> 'const u128':'const u128' lvalue
|   |       |-ImplicitCastExpr 0x21be2c4a1d0 <col:12> 'const u128 *':'const u128 *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x21be2c4a190 <col:12> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c49510 'Htable' 'const u128 *':'const u128 *'
|   |       `-ImplicitCastExpr 0x21be2c4a1e8 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x21be2c4a1b0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x21be2c49878 'nlo' 'size_t':'unsigned long long'
|   |-WhileStmt 0x21be2c4bd08 <line:315:5, line:344:5>
|   | |-IntegerLiteral 0x21be2c4a288 <line:315:12> 'int' 1
|   | `-CompoundStmt 0x21be2c4bc78 <col:15, line:344:5>
|   |   |-BinaryOperator 0x21be2c4a3e8 <line:316:9, col:30> 'size_t':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x21be2c4a2b0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x21be2c49800 'rem' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x21be2c4a3c8 <col:15, col:30> 'unsigned long long' '&'
|   |   |   |-CStyleCastExpr 0x21be2c4a360 <col:15, col:25> 'size_t':'unsigned long long' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x21be2c4a348 <col:23, col:25> 'u64':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |   |   `-MemberExpr 0x21be2c4a308 <col:23, col:25> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   |   |     `-DeclRefExpr 0x21be2c4a2e8 <col:23> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   |   `-ImplicitCastExpr 0x21be2c4a3b0 <col:30> 'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x21be2c4a388 <col:30> 'int' 15
|   |   |-BinaryOperator 0x21be2c4a618 <line:317:9, col:41> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x21be2c4a428 <col:9, col:11> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | | `-DeclRefExpr 0x21be2c4a408 <col:9> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   | `-BinaryOperator 0x21be2c4a5f8 <col:16, col:41> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x21be2c4a508 <col:16, col:27> 'u64':'unsigned long long'
|   |   |   | `-BinaryOperator 0x21be2c4a4e8 <col:17, col:25> 'u64':'unsigned long long' '<<'
|   |   |   |   |-ImplicitCastExpr 0x21be2c4a4d0 <col:17, col:19> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x21be2c4a478 <col:17, col:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   |   |   |   `-DeclRefExpr 0x21be2c4a458 <col:17> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   |   |   `-IntegerLiteral 0x21be2c4a4a8 <col:25> 'int' 60
|   |   |   `-ParenExpr 0x21be2c4a5d8 <col:31, col:41> 'u64':'unsigned long long'
|   |   |     `-BinaryOperator 0x21be2c4a5b8 <col:32, col:40> 'u64':'unsigned long long' '>>'
|   |   |       |-ImplicitCastExpr 0x21be2c4a5a0 <col:32, col:34> 'u64':'unsigned long long' <LValueToRValue>
|   |   |       | `-MemberExpr 0x21be2c4a548 <col:32, col:34> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   |       |   `-DeclRefExpr 0x21be2c4a528 <col:32> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   |       `-IntegerLiteral 0x21be2c4a578 <col:40> 'int' 4
|   |   |-BinaryOperator 0x21be2c4a758 <line:318:9, col:26> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x21be2c4a658 <col:9, col:11> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   | | `-DeclRefExpr 0x21be2c4a638 <col:9> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   | `-ParenExpr 0x21be2c4a738 <col:16, col:26> 'u64':'unsigned long long'
|   |   |   `-BinaryOperator 0x21be2c4a718 <col:17, col:25> 'u64':'unsigned long long' '>>'
|   |   |     |-ImplicitCastExpr 0x21be2c4a700 <col:17, col:19> 'u64':'unsigned long long' <LValueToRValue>
|   |   |     | `-MemberExpr 0x21be2c4a6a8 <col:17, col:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   |     |   `-DeclRefExpr 0x21be2c4a688 <col:17> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   |     `-IntegerLiteral 0x21be2c4a6d8 <col:25> 'int' 4
|   |   |-IfStmt 0x21be2c4ab38 <line:319:9, line:322:43> has_else
|   |   | |-BinaryOperator 0x21be2c4a7e8 <line:319:13, col:31> 'int' '=='
|   |   | | |-UnaryExprOrTypeTraitExpr 0x21be2c4a788 <col:13, col:26> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x21be2c4a7d0 <col:31> 'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x21be2c4a7a8 <col:31> 'int' 8
|   |   | |-CompoundAssignOperator 0x21be2c4a960 <line:320:13, col:33> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | | |-MemberExpr 0x21be2c4a828 <col:13, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   | | | `-DeclRefExpr 0x21be2c4a808 <col:13> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   | | `-ImplicitCastExpr 0x21be2c4a948 <col:21, col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x21be2c4a928 <col:21, col:33> 'const size_t':'const unsigned long long' lvalue
|   |   | |     |-ImplicitCastExpr 0x21be2c4a8f8 <col:21> 'const size_t *' <ArrayToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x21be2c4a858 <col:21> 'const size_t [16]' lvalue Var 0x21be2c472a8 'rem_4bit' 'const size_t [16]'
|   |   | |     `-ImplicitCastExpr 0x21be2c4a910 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x21be2c4a878 <col:30> 'size_t':'unsigned long long' lvalue Var 0x21be2c49800 'rem' 'size_t':'unsigned long long'
|   |   | `-CompoundAssignOperator 0x21be2c4ab08 <line:322:13, col:43> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   |-MemberExpr 0x21be2c4a9b0 <col:13, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   |   | `-DeclRefExpr 0x21be2c4a990 <col:13> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   |   `-BinaryOperator 0x21be2c4aae8 <col:21, col:43> 'u64':'unsigned long long' '<<'
|   |   |     |-CStyleCastExpr 0x21be2c4aa98 <col:21, col:38> 'u64':'unsigned long long' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x21be2c4aa80 <col:26, col:38> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |     |   `-ArraySubscriptExpr 0x21be2c4aa50 <col:26, col:38> 'const size_t':'const unsigned long long' lvalue
|   |   |     |     |-ImplicitCastExpr 0x21be2c4aa20 <col:26> 'const size_t *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x21be2c4a9e0 <col:26> 'const size_t [16]' lvalue Var 0x21be2c472a8 'rem_4bit' 'const size_t [16]'
|   |   |     |     `-ImplicitCastExpr 0x21be2c4aa38 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x21be2c4aa00 <col:35> 'size_t':'unsigned long long' lvalue Var 0x21be2c49800 'rem' 'size_t':'unsigned long long'
|   |   |     `-IntegerLiteral 0x21be2c4aac0 <col:43> 'int' 32
|   |   |-CompoundAssignOperator 0x21be2c4ac88 <line:324:9, col:29> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-MemberExpr 0x21be2c4ab80 <col:9, col:11> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   | | `-DeclRefExpr 0x21be2c4ab60 <col:9> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   | `-ImplicitCastExpr 0x21be2c4ac70 <col:17, col:29> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   `-MemberExpr 0x21be2c4ac40 <col:17, col:29> 'const u64':'const unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   |     `-ArraySubscriptExpr 0x21be2c4ac20 <col:17, col:27> 'const u128':'const u128' lvalue
|   |   |       |-ImplicitCastExpr 0x21be2c4abf0 <col:17> 'const u128 *':'const u128 *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x21be2c4abb0 <col:17> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c49510 'Htable' 'const u128 *':'const u128 *'
|   |   |       `-ImplicitCastExpr 0x21be2c4ac08 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x21be2c4abd0 <col:24> 'size_t':'unsigned long long' lvalue Var 0x21be2c498f0 'nhi' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x21be2c4ade0 <line:325:9, col:29> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-MemberExpr 0x21be2c4acd8 <col:9, col:11> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | | `-DeclRefExpr 0x21be2c4acb8 <col:9> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   | `-ImplicitCastExpr 0x21be2c4adc8 <col:17, col:29> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   `-MemberExpr 0x21be2c4ad98 <col:17, col:29> 'const u64':'const unsigned long long' lvalue .lo 0x21be2a60b38
|   |   |     `-ArraySubscriptExpr 0x21be2c4ad78 <col:17, col:27> 'const u128':'const u128' lvalue
|   |   |       |-ImplicitCastExpr 0x21be2c4ad48 <col:17> 'const u128 *':'const u128 *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x21be2c4ad08 <col:17> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c49510 'Htable' 'const u128 *':'const u128 *'
|   |   |       `-ImplicitCastExpr 0x21be2c4ad60 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x21be2c4ad28 <col:24> 'size_t':'unsigned long long' lvalue Var 0x21be2c498f0 'nhi' 'size_t':'unsigned long long'
|   |   |-IfStmt 0x21be2c4aeb0 <line:327:9, line:328:13>
|   |   | |-BinaryOperator 0x21be2c4ae88 <line:327:13, col:21> 'int' '<'
|   |   | | |-UnaryOperator 0x21be2c4ae48 <col:13, col:15> 'int' prefix '--'
|   |   | | | `-DeclRefExpr 0x21be2c4ae10 <col:15> 'int' lvalue Var 0x21be2c49748 'cnt' 'int'
|   |   | | `-IntegerLiteral 0x21be2c4ae60 <col:21> 'int' 0
|   |   | `-BreakStmt 0x21be2c4aea8 <line:328:13>
|   |   |-BinaryOperator 0x21be2c4b020 <line:330:9, col:35> 'size_t':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x21be2c4aec8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x21be2c49878 'nlo' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x21be2c4b008 <col:15, col:35> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x21be2c4aff0 <col:15, col:35> 'u8':'unsigned char' <LValueToRValue>
|   |   |     `-ArraySubscriptExpr 0x21be2c4afb0 <col:15, col:35> 'const u8':'const unsigned char' lvalue
|   |   |       |-ParenExpr 0x21be2c4af58 <col:15, col:30> 'const u8 *'
|   |   |       | `-CStyleCastExpr 0x21be2c4af30 <col:16, col:28> 'const u8 *' <BitCast>
|   |   |       |   `-ImplicitCastExpr 0x21be2c4af18 <col:28> 'u64 *':'u64 *' <LValueToRValue> part_of_explicit_cast
|   |   |       |     `-DeclRefExpr 0x21be2c4aee8 <col:28> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c49448 'Xi' 'u64 *':'u64 *'
|   |   |       `-ImplicitCastExpr 0x21be2c4af98 <col:32> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x21be2c4af78 <col:32> 'int' lvalue Var 0x21be2c49748 'cnt' 'int'
|   |   |-BinaryOperator 0x21be2c4b0e0 <line:331:9, col:22> 'size_t':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x21be2c4b040 <col:9> 'size_t':'unsigned long long' lvalue Var 0x21be2c498f0 'nhi' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x21be2c4b0c0 <col:15, col:22> 'size_t':'unsigned long long' '>>'
|   |   |   |-ImplicitCastExpr 0x21be2c4b0a8 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21be2c4b060 <col:15> 'size_t':'unsigned long long' lvalue Var 0x21be2c49878 'nlo' 'size_t':'unsigned long long'
|   |   |   `-IntegerLiteral 0x21be2c4b080 <col:22> 'int' 4
|   |   |-CompoundAssignOperator 0x21be2c4b160 <line:332:9, col:16> 'size_t':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x21be2c4b100 <col:9> 'size_t':'unsigned long long' lvalue Var 0x21be2c49878 'nlo' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x21be2c4b148 <col:16> 'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x21be2c4b120 <col:16> 'int' 15
|   |   |-BinaryOperator 0x21be2c4b2b0 <line:334:9, col:30> 'size_t':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x21be2c4b190 <col:9> 'size_t':'unsigned long long' lvalue Var 0x21be2c49800 'rem' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x21be2c4b290 <col:15, col:30> 'unsigned long long' '&'
|   |   |   |-CStyleCastExpr 0x21be2c4b228 <col:15, col:25> 'size_t':'unsigned long long' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x21be2c4b210 <col:23, col:25> 'u64':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |   |   `-MemberExpr 0x21be2c4b1d0 <col:23, col:25> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   |   |     `-DeclRefExpr 0x21be2c4b1b0 <col:23> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   |   `-ImplicitCastExpr 0x21be2c4b278 <col:30> 'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x21be2c4b250 <col:30> 'int' 15
|   |   |-BinaryOperator 0x21be2c4b4e0 <line:335:9, col:41> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x21be2c4b2f0 <col:9, col:11> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   | | `-DeclRefExpr 0x21be2c4b2d0 <col:9> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   | `-BinaryOperator 0x21be2c4b4c0 <col:16, col:41> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x21be2c4b3d0 <col:16, col:27> 'u64':'unsigned long long'
|   |   |   | `-BinaryOperator 0x21be2c4b3b0 <col:17, col:25> 'u64':'unsigned long long' '<<'
|   |   |   |   |-ImplicitCastExpr 0x21be2c4b398 <col:17, col:19> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x21be2c4b340 <col:17, col:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   |   |   |   `-DeclRefExpr 0x21be2c4b320 <col:17> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   |   |   `-IntegerLiteral 0x21be2c4b370 <col:25> 'int' 60
|   |   |   `-ParenExpr 0x21be2c4b4a0 <col:31, col:41> 'u64':'unsigned long long'
|   |   |     `-BinaryOperator 0x21be2c4b480 <col:32, col:40> 'u64':'unsigned long long' '>>'
|   |   |       |-ImplicitCastExpr 0x21be2c4b468 <col:32, col:34> 'u64':'unsigned long long' <LValueToRValue>
|   |   |       | `-MemberExpr 0x21be2c4b410 <col:32, col:34> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |   |       |   `-DeclRefExpr 0x21be2c4b3f0 <col:32> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   |       `-IntegerLiteral 0x21be2c4b440 <col:40> 'int' 4
|   |   |-BinaryOperator 0x21be2c4b620 <line:336:9, col:26> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x21be2c4b520 <col:9, col:11> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   | | `-DeclRefExpr 0x21be2c4b500 <col:9> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   | `-ParenExpr 0x21be2c4b600 <col:16, col:26> 'u64':'unsigned long long'
|   |   |   `-BinaryOperator 0x21be2c4b5e0 <col:17, col:25> 'u64':'unsigned long long' '>>'
|   |   |     |-ImplicitCastExpr 0x21be2c4b5c8 <col:17, col:19> 'u64':'unsigned long long' <LValueToRValue>
|   |   |     | `-MemberExpr 0x21be2c4b570 <col:17, col:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   |     |   `-DeclRefExpr 0x21be2c4b550 <col:17> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   |     `-IntegerLiteral 0x21be2c4b5a0 <col:25> 'int' 4
|   |   |-IfStmt 0x21be2c4b9a0 <line:337:9, line:340:43> has_else
|   |   | |-BinaryOperator 0x21be2c4b6b0 <line:337:13, col:31> 'int' '=='
|   |   | | |-UnaryExprOrTypeTraitExpr 0x21be2c4b650 <col:13, col:26> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x21be2c4b698 <col:31> 'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x21be2c4b670 <col:31> 'int' 8
|   |   | |-CompoundAssignOperator 0x21be2c4b7c8 <line:338:13, col:33> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | | |-MemberExpr 0x21be2c4b6f0 <col:13, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   | | | `-DeclRefExpr 0x21be2c4b6d0 <col:13> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   | | `-ImplicitCastExpr 0x21be2c4b7b0 <col:21, col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x21be2c4b790 <col:21, col:33> 'const size_t':'const unsigned long long' lvalue
|   |   | |     |-ImplicitCastExpr 0x21be2c4b760 <col:21> 'const size_t *' <ArrayToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x21be2c4b720 <col:21> 'const size_t [16]' lvalue Var 0x21be2c472a8 'rem_4bit' 'const size_t [16]'
|   |   | |     `-ImplicitCastExpr 0x21be2c4b778 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x21be2c4b740 <col:30> 'size_t':'unsigned long long' lvalue Var 0x21be2c49800 'rem' 'size_t':'unsigned long long'
|   |   | `-CompoundAssignOperator 0x21be2c4b970 <line:340:13, col:43> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   |-MemberExpr 0x21be2c4b818 <col:13, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   |   | `-DeclRefExpr 0x21be2c4b7f8 <col:13> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   |   `-BinaryOperator 0x21be2c4b950 <col:21, col:43> 'u64':'unsigned long long' '<<'
|   |   |     |-CStyleCastExpr 0x21be2c4b900 <col:21, col:38> 'u64':'unsigned long long' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x21be2c4b8e8 <col:26, col:38> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |     |   `-ArraySubscriptExpr 0x21be2c4b8b8 <col:26, col:38> 'const size_t':'const unsigned long long' lvalue
|   |   |     |     |-ImplicitCastExpr 0x21be2c4b888 <col:26> 'const size_t *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x21be2c4b848 <col:26> 'const size_t [16]' lvalue Var 0x21be2c472a8 'rem_4bit' 'const size_t [16]'
|   |   |     |     `-ImplicitCastExpr 0x21be2c4b8a0 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x21be2c4b868 <col:35> 'size_t':'unsigned long long' lvalue Var 0x21be2c49800 'rem' 'size_t':'unsigned long long'
|   |   |     `-IntegerLiteral 0x21be2c4b928 <col:43> 'int' 32
|   |   |-CompoundAssignOperator 0x21be2c4baf0 <line:342:9, col:29> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-MemberExpr 0x21be2c4b9e8 <col:9, col:11> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   | | `-DeclRefExpr 0x21be2c4b9c8 <col:9> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |   | `-ImplicitCastExpr 0x21be2c4bad8 <col:17, col:29> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   `-MemberExpr 0x21be2c4baa8 <col:17, col:29> 'const u64':'const unsigned long long' lvalue .hi 0x21be2a60ad0
|   |   |     `-ArraySubscriptExpr 0x21be2c4ba88 <col:17, col:27> 'const u128':'const u128' lvalue
|   |   |       |-ImplicitCastExpr 0x21be2c4ba58 <col:17> 'const u128 *':'const u128 *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x21be2c4ba18 <col:17> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c49510 'Htable' 'const u128 *':'const u128 *'
|   |   |       `-ImplicitCastExpr 0x21be2c4ba70 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x21be2c4ba38 <col:24> 'size_t':'unsigned long long' lvalue Var 0x21be2c49878 'nlo' 'size_t':'unsigned long long'
|   |   `-CompoundAssignOperator 0x21be2c4bc48 <line:343:9, col:29> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     |-MemberExpr 0x21be2c4bb40 <col:9, col:11> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|   |     | `-DeclRefExpr 0x21be2c4bb20 <col:9> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|   |     `-ImplicitCastExpr 0x21be2c4bc30 <col:17, col:29> 'u64':'unsigned long long' <LValueToRValue>
|   |       `-MemberExpr 0x21be2c4bc00 <col:17, col:29> 'const u64':'const unsigned long long' lvalue .lo 0x21be2a60b38
|   |         `-ArraySubscriptExpr 0x21be2c4bbe0 <col:17, col:27> 'const u128':'const u128' lvalue
|   |           |-ImplicitCastExpr 0x21be2c4bbb0 <col:17> 'const u128 *':'const u128 *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x21be2c4bb70 <col:17> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c49510 'Htable' 'const u128 *':'const u128 *'
|   |           `-ImplicitCastExpr 0x21be2c4bbc8 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |             `-DeclRefExpr 0x21be2c4bb90 <col:24> 'size_t':'unsigned long long' lvalue Var 0x21be2c49878 'nlo' 'size_t':'unsigned long long'
|   `-IfStmt 0x21be2c44558 <line:346:5, line:365:5> has_else
|     |-ImplicitCastExpr 0x21be2c4bd88 <line:346:9, col:19> 'char' <LValueToRValue>
|     | `-MemberExpr 0x21be2c4bd58 <col:9, col:19> 'const char' lvalue .little 0x21be2c49ad0
|     |   `-DeclRefExpr 0x21be2c4bd20 <col:9> 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:303:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:303:11)' lvalue Var 0x21be2c49b88 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:303:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:303:11)'
|     |-CompoundStmt 0x21be2c44308 <col:27, line:362:5>
|     | |-BinaryOperator 0x21be2c44108 <line:348:9, .//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:50> 'u64':'unsigned long long' '='
|     | | |-ArraySubscriptExpr 0x21be2c4be00 <.//openssl//file_jk/after\crypto\modes\gcm128.c:348:9, col:13> 'u64':'unsigned long long' lvalue
|     | | | |-ImplicitCastExpr 0x21be2c4bde8 <col:9> 'u64 *':'u64 *' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x21be2c4bda0 <col:9> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c49448 'Xi' 'u64 *':'u64 *'
|     | | | `-IntegerLiteral 0x21be2c4bdc0 <col:12> 'int' 0
|     | | `-CallExpr 0x21be2c440e0 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:25, col:50> 'unsigned long long'
|     | |   |-ImplicitCastExpr 0x21be2c440c8 <col:25> 'unsigned long long (*)(unsigned long long)' <FunctionToPointerDecay>
|     | |   | `-DeclRefExpr 0x21be2c43f80 <col:25> 'unsigned long long (unsigned long long)' Function 0x21be2c4be50 '_byteswap_uint64' 'unsigned long long (unsigned long long)'
|     | |   `-CStyleCastExpr 0x21be2c44070 <col:42, col:49> 'u64':'unsigned long long' <NoOp>
|     | |     `-ImplicitCastExpr 0x21be2c44058 <col:47, col:49> 'u64':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|     | |       `-ParenExpr 0x21be2c44038 <col:47, col:49> 'u64':'unsigned long long' lvalue
|     | |         `-MemberExpr 0x21be2c43fd8 <.//openssl//file_jk/after\crypto\modes\gcm128.c:348:24, col:26> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |           `-DeclRefExpr 0x21be2c43fb8 <col:24> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|     | `-BinaryOperator 0x21be2c442e8 <line:349:9, .//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:50> 'u64':'unsigned long long' '='
|     |   |-ArraySubscriptExpr 0x21be2c44188 <.//openssl//file_jk/after\crypto\modes\gcm128.c:349:9, col:13> 'u64':'unsigned long long' lvalue
|     |   | |-ImplicitCastExpr 0x21be2c44170 <col:9> 'u64 *':'u64 *' <LValueToRValue>
|     |   | | `-DeclRefExpr 0x21be2c44128 <col:9> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c49448 'Xi' 'u64 *':'u64 *'
|     |   | `-IntegerLiteral 0x21be2c44148 <col:12> 'int' 1
|     |   `-CallExpr 0x21be2c442c0 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:25, col:50> 'unsigned long long'
|     |     |-ImplicitCastExpr 0x21be2c442a8 <col:25> 'unsigned long long (*)(unsigned long long)' <FunctionToPointerDecay>
|     |     | `-DeclRefExpr 0x21be2c441a8 <col:25> 'unsigned long long (unsigned long long)' Function 0x21be2c4be50 '_byteswap_uint64' 'unsigned long long (unsigned long long)'
|     |     `-CStyleCastExpr 0x21be2c44280 <col:42, col:49> 'u64':'unsigned long long' <NoOp>
|     |       `-ImplicitCastExpr 0x21be2c44268 <col:47, col:49> 'u64':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|     |         `-ParenExpr 0x21be2c44248 <col:47, col:49> 'u64':'unsigned long long' lvalue
|     |           `-MemberExpr 0x21be2c441e8 <.//openssl//file_jk/after\crypto\modes\gcm128.c:349:24, col:26> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     |             `-DeclRefExpr 0x21be2c441c8 <col:24> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|     `-CompoundStmt 0x21be2c44538 <line:362:12, line:365:5>
|       |-BinaryOperator 0x21be2c44410 <line:363:9, col:19> 'u64':'unsigned long long' '='
|       | |-ArraySubscriptExpr 0x21be2c44388 <col:9, col:13> 'u64':'unsigned long long' lvalue
|       | | |-ImplicitCastExpr 0x21be2c44370 <col:9> 'u64 *':'u64 *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x21be2c44328 <col:9> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c49448 'Xi' 'u64 *':'u64 *'
|       | | `-IntegerLiteral 0x21be2c44348 <col:12> 'int' 0
|       | `-ImplicitCastExpr 0x21be2c443f8 <col:17, col:19> 'u64':'unsigned long long' <LValueToRValue>
|       |   `-MemberExpr 0x21be2c443c8 <col:17, col:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|       |     `-DeclRefExpr 0x21be2c443a8 <col:17> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|       `-BinaryOperator 0x21be2c44518 <line:364:9, col:19> 'u64':'unsigned long long' '='
|         |-ArraySubscriptExpr 0x21be2c44490 <col:9, col:13> 'u64':'unsigned long long' lvalue
|         | |-ImplicitCastExpr 0x21be2c44478 <col:9> 'u64 *':'u64 *' <LValueToRValue>
|         | | `-DeclRefExpr 0x21be2c44430 <col:9> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c49448 'Xi' 'u64 *':'u64 *'
|         | `-IntegerLiteral 0x21be2c44450 <col:12> 'int' 1
|         `-ImplicitCastExpr 0x21be2c44500 <col:17, col:19> 'u64':'unsigned long long' <LValueToRValue>
|           `-MemberExpr 0x21be2c444d0 <col:17, col:19> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|             `-DeclRefExpr 0x21be2c444b0 <col:17> 'u128':'u128' lvalue Var 0x21be2c496b0 'Z' 'u128':'u128'
|-FunctionDecl 0x21be2c4be50 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:25> col:25 implicit used _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x21be2c4bef0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x21be2c4bf60 <col:25> Implicit
| `-ConstAttr 0x21be2c4bfb8 <col:25> Implicit
|-FunctionDecl 0x21be2c44958 <.//openssl//file_jk/after\crypto\modes\gcm128.c:376:1, line:545:1> line:376:13 used gcm_ghash_4bit 'void (u64 *, const u128 *, const u8 *, size_t)' static
| |-ParmVarDecl 0x21be2c44648 <col:28, col:36> col:32 used Xi 'u64 *':'u64 *'
| |-ParmVarDecl 0x21be2c44710 <col:39, col:59> col:50 used Htable 'const u128 *':'const u128 *'
| |-ParmVarDecl 0x21be2c44788 <line:377:28, col:38> col:38 used inp 'const u8 *'
| |-ParmVarDecl 0x21be2c44800 <col:43, col:50> col:50 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x21be2c4db78 <line:378:1, line:545:1>
|   |-DeclStmt 0x21be2c44aa8 <line:379:5, col:11>
|   | `-VarDecl 0x21be2c44a40 <col:5, col:10> col:10 used Z 'u128':'u128'
|   |-DeclStmt 0x21be2c44b40 <line:380:5, col:12>
|   | `-VarDecl 0x21be2c44ad8 <col:5, col:9> col:9 used cnt 'int'
|   |-DeclStmt 0x21be2c44ce0 <line:381:5, col:25>
|   | |-VarDecl 0x21be2c44b68 <col:5, col:12> col:12 used rem 'size_t':'unsigned long long'
|   | |-VarDecl 0x21be2c44be0 <col:5, col:17> col:17 used nlo 'size_t':'unsigned long long'
|   | `-VarDecl 0x21be2c44c58 <col:5, col:22> col:22 used nhi 'size_t':'unsigned long long'
|   |-DeclStmt 0x21be2c4c0d0 <line:382:5, line:385:24>
|   | |-RecordDecl 0x21be2c44cf8 <line:382:11, line:385:5> line:382:11 union definition
|   | | |-FieldDecl 0x21be2c44dc8 <line:383:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x21be2c44e30 <line:384:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x21be2c44ee8 <line:382:5, line:385:23> col:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:382:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:382:11)' cinit
|   |   `-InitListExpr 0x21be2c4c058 <col:19, col:23> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:382:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:382:11)' field Field 0x21be2c44dc8 'one' 'long'
|   |     `-ImplicitCastExpr 0x21be2c4c0a0 <col:21> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x21be2c44f50 <col:21> 'int' 1
|   `-DoStmt 0x21be2c4db58 <line:388:5, line:544:34>
|     |-CompoundStmt 0x21be2c4d9d8 <line:388:8, line:544:5>
|     | |-BinaryOperator 0x21be2c4c148 <line:389:9, col:15> 'int' '='
|     | | |-DeclRefExpr 0x21be2c4c0e8 <col:9> 'int' lvalue Var 0x21be2c44ad8 'cnt' 'int'
|     | | `-IntegerLiteral 0x21be2c4c120 <col:15> 'int' 15
|     | |-BinaryOperator 0x21be2c4c2a8 <line:390:9, col:34> 'size_t':'unsigned long long' '='
|     | | |-DeclRefExpr 0x21be2c4c168 <col:9> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | | `-ImplicitCastExpr 0x21be2c4c290 <col:15, col:34> 'size_t':'unsigned long long' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x21be2c4c278 <col:15, col:34> 'u8':'unsigned char' <LValueToRValue>
|     | |     `-ArraySubscriptExpr 0x21be2c4c258 <col:15, col:34> 'const u8':'const unsigned char' lvalue
|     | |       |-ParenExpr 0x21be2c4c210 <col:15, col:30> 'const u8 *'
|     | |       | `-CStyleCastExpr 0x21be2c4c1e8 <col:16, col:28> 'const u8 *' <BitCast>
|     | |       |   `-ImplicitCastExpr 0x21be2c4c1d0 <col:28> 'u64 *':'u64 *' <LValueToRValue> part_of_explicit_cast
|     | |       |     `-DeclRefExpr 0x21be2c4c1a0 <col:28> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c44648 'Xi' 'u64 *':'u64 *'
|     | |       `-IntegerLiteral 0x21be2c4c230 <col:32> 'int' 15
|     | |-CompoundAssignOperator 0x21be2c4c398 <line:391:9, col:22> 'size_t':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | | |-DeclRefExpr 0x21be2c4c2c8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | | `-ImplicitCastExpr 0x21be2c4c380 <col:16, col:22> 'unsigned long long' <IntegralCast>
|     | |   `-ImplicitCastExpr 0x21be2c4c368 <col:16, col:22> 'u8':'unsigned char' <LValueToRValue>
|     | |     `-ArraySubscriptExpr 0x21be2c4c348 <col:16, col:22> 'const u8':'const unsigned char' lvalue
|     | |       |-ImplicitCastExpr 0x21be2c4c330 <col:16> 'const u8 *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x21be2c4c2e8 <col:16> 'const u8 *' lvalue ParmVar 0x21be2c44788 'inp' 'const u8 *'
|     | |       `-IntegerLiteral 0x21be2c4c308 <col:20> 'int' 15
|     | |-BinaryOperator 0x21be2c4c480 <line:392:9, col:22> 'size_t':'unsigned long long' '='
|     | | |-DeclRefExpr 0x21be2c4c3c8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x21be2c44c58 'nhi' 'size_t':'unsigned long long'
|     | | `-BinaryOperator 0x21be2c4c460 <col:15, col:22> 'size_t':'unsigned long long' '>>'
|     | |   |-ImplicitCastExpr 0x21be2c4c448 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | `-DeclRefExpr 0x21be2c4c400 <col:15> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | |   `-IntegerLiteral 0x21be2c4c420 <col:22> 'int' 4
|     | |-CompoundAssignOperator 0x21be2c4c500 <line:393:9, col:16> 'size_t':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | | |-DeclRefExpr 0x21be2c4c4a0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | | `-ImplicitCastExpr 0x21be2c4c4e8 <col:16> 'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x21be2c4c4c0 <col:16> 'int' 15
|     | |-BinaryOperator 0x21be2c4c670 <line:395:9, col:28> 'u64':'unsigned long long' '='
|     | | |-MemberExpr 0x21be2c4c568 <col:9, col:11> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | | | `-DeclRefExpr 0x21be2c4c530 <col:9> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | | `-ImplicitCastExpr 0x21be2c4c658 <col:16, col:28> 'u64':'unsigned long long' <LValueToRValue>
|     | |   `-MemberExpr 0x21be2c4c628 <col:16, col:28> 'const u64':'const unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |     `-ArraySubscriptExpr 0x21be2c4c608 <col:16, col:26> 'const u128':'const u128' lvalue
|     | |       |-ImplicitCastExpr 0x21be2c4c5d8 <col:16> 'const u128 *':'const u128 *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x21be2c4c598 <col:16> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c44710 'Htable' 'const u128 *':'const u128 *'
|     | |       `-ImplicitCastExpr 0x21be2c4c5f0 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|     | |         `-DeclRefExpr 0x21be2c4c5b8 <col:23> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | |-BinaryOperator 0x21be2c4c7b8 <line:396:9, col:28> 'u64':'unsigned long long' '='
|     | | |-MemberExpr 0x21be2c4c6b0 <col:9, col:11> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     | | | `-DeclRefExpr 0x21be2c4c690 <col:9> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | | `-ImplicitCastExpr 0x21be2c4c7a0 <col:16, col:28> 'u64':'unsigned long long' <LValueToRValue>
|     | |   `-MemberExpr 0x21be2c4c770 <col:16, col:28> 'const u64':'const unsigned long long' lvalue .lo 0x21be2a60b38
|     | |     `-ArraySubscriptExpr 0x21be2c4c750 <col:16, col:26> 'const u128':'const u128' lvalue
|     | |       |-ImplicitCastExpr 0x21be2c4c720 <col:16> 'const u128 *':'const u128 *' <LValueToRValue>
|     | |       | `-DeclRefExpr 0x21be2c4c6e0 <col:16> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c44710 'Htable' 'const u128 *':'const u128 *'
|     | |       `-ImplicitCastExpr 0x21be2c4c738 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|     | |         `-DeclRefExpr 0x21be2c4c700 <col:23> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | |-WhileStmt 0x21be2c4d308 <line:398:9, line:428:9>
|     | | |-IntegerLiteral 0x21be2c4c7d8 <line:398:16> 'int' 1
|     | | `-CompoundStmt 0x21be2c4d270 <col:19, line:428:9>
|     | |   |-BinaryOperator 0x21be2c4c938 <line:399:13, col:34> 'size_t':'unsigned long long' '='
|     | |   | |-DeclRefExpr 0x21be2c4c800 <col:13> 'size_t':'unsigned long long' lvalue Var 0x21be2c44b68 'rem' 'size_t':'unsigned long long'
|     | |   | `-BinaryOperator 0x21be2c4c918 <col:19, col:34> 'unsigned long long' '&'
|     | |   |   |-CStyleCastExpr 0x21be2c4c8b0 <col:19, col:29> 'size_t':'unsigned long long' <NoOp>
|     | |   |   | `-ImplicitCastExpr 0x21be2c4c898 <col:27, col:29> 'u64':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|     | |   |   |   `-MemberExpr 0x21be2c4c858 <col:27, col:29> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     | |   |   |     `-DeclRefExpr 0x21be2c4c838 <col:27> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   |   `-ImplicitCastExpr 0x21be2c4c900 <col:34> 'unsigned long long' <IntegralCast>
|     | |   |     `-IntegerLiteral 0x21be2c4c8d8 <col:34> 'int' 15
|     | |   |-BinaryOperator 0x21be2c4cb68 <line:400:13, col:45> 'u64':'unsigned long long' '='
|     | |   | |-MemberExpr 0x21be2c4c978 <col:13, col:15> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     | |   | | `-DeclRefExpr 0x21be2c4c958 <col:13> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   | `-BinaryOperator 0x21be2c4cb48 <col:20, col:45> 'unsigned long long' '|'
|     | |   |   |-ParenExpr 0x21be2c4ca58 <col:20, col:31> 'u64':'unsigned long long'
|     | |   |   | `-BinaryOperator 0x21be2c4ca38 <col:21, col:29> 'u64':'unsigned long long' '<<'
|     | |   |   |   |-ImplicitCastExpr 0x21be2c4ca20 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|     | |   |   |   | `-MemberExpr 0x21be2c4c9c8 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   |   |   |   `-DeclRefExpr 0x21be2c4c9a8 <col:21> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   |   |   `-IntegerLiteral 0x21be2c4c9f8 <col:29> 'int' 60
|     | |   |   `-ParenExpr 0x21be2c4cb28 <col:35, col:45> 'u64':'unsigned long long'
|     | |   |     `-BinaryOperator 0x21be2c4cb08 <col:36, col:44> 'u64':'unsigned long long' '>>'
|     | |   |       |-ImplicitCastExpr 0x21be2c4caf0 <col:36, col:38> 'u64':'unsigned long long' <LValueToRValue>
|     | |   |       | `-MemberExpr 0x21be2c4ca98 <col:36, col:38> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     | |   |       |   `-DeclRefExpr 0x21be2c4ca78 <col:36> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   |       `-IntegerLiteral 0x21be2c4cac8 <col:44> 'int' 4
|     | |   |-BinaryOperator 0x21be2c4cca8 <line:401:13, col:30> 'u64':'unsigned long long' '='
|     | |   | |-MemberExpr 0x21be2c4cba8 <col:13, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   | | `-DeclRefExpr 0x21be2c4cb88 <col:13> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   | `-ParenExpr 0x21be2c4cc88 <col:20, col:30> 'u64':'unsigned long long'
|     | |   |   `-BinaryOperator 0x21be2c4cc68 <col:21, col:29> 'u64':'unsigned long long' '>>'
|     | |   |     |-ImplicitCastExpr 0x21be2c4cc50 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|     | |   |     | `-MemberExpr 0x21be2c4cbf8 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   |     |   `-DeclRefExpr 0x21be2c4cbd8 <col:21> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   |     `-IntegerLiteral 0x21be2c4cc28 <col:29> 'int' 4
|     | |   |-IfStmt 0x21be2c44fc0 <line:402:13, line:405:47> has_else
|     | |   | |-BinaryOperator 0x21be2c4cd38 <line:402:17, col:35> 'int' '=='
|     | |   | | |-UnaryExprOrTypeTraitExpr 0x21be2c4ccd8 <col:17, col:30> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     | |   | | `-ImplicitCastExpr 0x21be2c4cd20 <col:35> 'unsigned long long' <IntegralCast>
|     | |   | |   `-IntegerLiteral 0x21be2c4ccf8 <col:35> 'int' 8
|     | |   | |-CompoundAssignOperator 0x21be2c4ce50 <line:403:17, col:37> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | | |-MemberExpr 0x21be2c4cd78 <col:17, col:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   | | | `-DeclRefExpr 0x21be2c4cd58 <col:17> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   | | `-ImplicitCastExpr 0x21be2c4ce38 <col:25, col:37> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |   `-ArraySubscriptExpr 0x21be2c4ce18 <col:25, col:37> 'const size_t':'const unsigned long long' lvalue
|     | |   | |     |-ImplicitCastExpr 0x21be2c4cde8 <col:25> 'const size_t *' <ArrayToPointerDecay>
|     | |   | |     | `-DeclRefExpr 0x21be2c4cda8 <col:25> 'const size_t [16]' lvalue Var 0x21be2c472a8 'rem_4bit' 'const size_t [16]'
|     | |   | |     `-ImplicitCastExpr 0x21be2c4ce00 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |       `-DeclRefExpr 0x21be2c4cdc8 <col:34> 'size_t':'unsigned long long' lvalue Var 0x21be2c44b68 'rem' 'size_t':'unsigned long long'
|     | |   | `-CompoundAssignOperator 0x21be2c44f90 <line:405:17, col:47> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   |   |-MemberExpr 0x21be2c4cea0 <col:17, col:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   |   | `-DeclRefExpr 0x21be2c4ce80 <col:17> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   |   `-BinaryOperator 0x21be2c4cfd8 <col:25, col:47> 'u64':'unsigned long long' '<<'
|     | |   |     |-CStyleCastExpr 0x21be2c4cf88 <col:25, col:42> 'u64':'unsigned long long' <NoOp>
|     | |   |     | `-ImplicitCastExpr 0x21be2c4cf70 <col:30, col:42> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|     | |   |     |   `-ArraySubscriptExpr 0x21be2c4cf40 <col:30, col:42> 'const size_t':'const unsigned long long' lvalue
|     | |   |     |     |-ImplicitCastExpr 0x21be2c4cf10 <col:30> 'const size_t *' <ArrayToPointerDecay>
|     | |   |     |     | `-DeclRefExpr 0x21be2c4ced0 <col:30> 'const size_t [16]' lvalue Var 0x21be2c472a8 'rem_4bit' 'const size_t [16]'
|     | |   |     |     `-ImplicitCastExpr 0x21be2c4cf28 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |     |       `-DeclRefExpr 0x21be2c4cef0 <col:39> 'size_t':'unsigned long long' lvalue Var 0x21be2c44b68 'rem' 'size_t':'unsigned long long'
|     | |   |     `-IntegerLiteral 0x21be2c4cfb0 <col:47> 'int' 32
|     | |   |-CompoundAssignOperator 0x21be2c45110 <line:407:13, col:33> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-MemberExpr 0x21be2c45008 <col:13, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   | | `-DeclRefExpr 0x21be2c44fe8 <col:13> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   | `-ImplicitCastExpr 0x21be2c450f8 <col:21, col:33> 'u64':'unsigned long long' <LValueToRValue>
|     | |   |   `-MemberExpr 0x21be2c450c8 <col:21, col:33> 'const u64':'const unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   |     `-ArraySubscriptExpr 0x21be2c450a8 <col:21, col:31> 'const u128':'const u128' lvalue
|     | |   |       |-ImplicitCastExpr 0x21be2c45078 <col:21> 'const u128 *':'const u128 *' <LValueToRValue>
|     | |   |       | `-DeclRefExpr 0x21be2c45038 <col:21> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c44710 'Htable' 'const u128 *':'const u128 *'
|     | |   |       `-ImplicitCastExpr 0x21be2c45090 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |         `-DeclRefExpr 0x21be2c45058 <col:28> 'size_t':'unsigned long long' lvalue Var 0x21be2c44c58 'nhi' 'size_t':'unsigned long long'
|     | |   |-CompoundAssignOperator 0x21be2c45268 <line:408:13, col:33> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-MemberExpr 0x21be2c45160 <col:13, col:15> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     | |   | | `-DeclRefExpr 0x21be2c45140 <col:13> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   | `-ImplicitCastExpr 0x21be2c45250 <col:21, col:33> 'u64':'unsigned long long' <LValueToRValue>
|     | |   |   `-MemberExpr 0x21be2c45220 <col:21, col:33> 'const u64':'const unsigned long long' lvalue .lo 0x21be2a60b38
|     | |   |     `-ArraySubscriptExpr 0x21be2c45200 <col:21, col:31> 'const u128':'const u128' lvalue
|     | |   |       |-ImplicitCastExpr 0x21be2c451d0 <col:21> 'const u128 *':'const u128 *' <LValueToRValue>
|     | |   |       | `-DeclRefExpr 0x21be2c45190 <col:21> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c44710 'Htable' 'const u128 *':'const u128 *'
|     | |   |       `-ImplicitCastExpr 0x21be2c451e8 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |         `-DeclRefExpr 0x21be2c451b0 <col:28> 'size_t':'unsigned long long' lvalue Var 0x21be2c44c58 'nhi' 'size_t':'unsigned long long'
|     | |   |-IfStmt 0x21be2c45320 <line:410:13, line:411:17>
|     | |   | |-BinaryOperator 0x21be2c452f8 <line:410:17, col:25> 'int' '<'
|     | |   | | |-UnaryOperator 0x21be2c452b8 <col:17, col:19> 'int' prefix '--'
|     | |   | | | `-DeclRefExpr 0x21be2c45298 <col:19> 'int' lvalue Var 0x21be2c44ad8 'cnt' 'int'
|     | |   | | `-IntegerLiteral 0x21be2c452d0 <col:25> 'int' 0
|     | |   | `-BreakStmt 0x21be2c45318 <line:411:17>
|     | |   |-BinaryOperator 0x21be2c45470 <line:413:13, col:39> 'size_t':'unsigned long long' '='
|     | |   | |-DeclRefExpr 0x21be2c45338 <col:13> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | |   | `-ImplicitCastExpr 0x21be2c45458 <col:19, col:39> 'size_t':'unsigned long long' <IntegralCast>
|     | |   |   `-ImplicitCastExpr 0x21be2c45440 <col:19, col:39> 'u8':'unsigned char' <LValueToRValue>
|     | |   |     `-ArraySubscriptExpr 0x21be2c45420 <col:19, col:39> 'const u8':'const unsigned char' lvalue
|     | |   |       |-ParenExpr 0x21be2c453c8 <col:19, col:34> 'const u8 *'
|     | |   |       | `-CStyleCastExpr 0x21be2c453a0 <col:20, col:32> 'const u8 *' <BitCast>
|     | |   |       |   `-ImplicitCastExpr 0x21be2c45388 <col:32> 'u64 *':'u64 *' <LValueToRValue> part_of_explicit_cast
|     | |   |       |     `-DeclRefExpr 0x21be2c45358 <col:32> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c44648 'Xi' 'u64 *':'u64 *'
|     | |   |       `-ImplicitCastExpr 0x21be2c45408 <col:36> 'int' <LValueToRValue>
|     | |   |         `-DeclRefExpr 0x21be2c453e8 <col:36> 'int' lvalue Var 0x21be2c44ad8 'cnt' 'int'
|     | |   |-CompoundAssignOperator 0x21be2c45570 <line:414:13, col:27> 'size_t':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-DeclRefExpr 0x21be2c45490 <col:13> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | |   | `-ImplicitCastExpr 0x21be2c45558 <col:20, col:27> 'unsigned long long' <IntegralCast>
|     | |   |   `-ImplicitCastExpr 0x21be2c45540 <col:20, col:27> 'u8':'unsigned char' <LValueToRValue>
|     | |   |     `-ArraySubscriptExpr 0x21be2c45520 <col:20, col:27> 'const u8':'const unsigned char' lvalue
|     | |   |       |-ImplicitCastExpr 0x21be2c454f0 <col:20> 'const u8 *' <LValueToRValue>
|     | |   |       | `-DeclRefExpr 0x21be2c454b0 <col:20> 'const u8 *' lvalue ParmVar 0x21be2c44788 'inp' 'const u8 *'
|     | |   |       `-ImplicitCastExpr 0x21be2c45508 <col:24> 'int' <LValueToRValue>
|     | |   |         `-DeclRefExpr 0x21be2c454d0 <col:24> 'int' lvalue Var 0x21be2c44ad8 'cnt' 'int'
|     | |   |-BinaryOperator 0x21be2c45640 <line:415:13, col:26> 'size_t':'unsigned long long' '='
|     | |   | |-DeclRefExpr 0x21be2c455a0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x21be2c44c58 'nhi' 'size_t':'unsigned long long'
|     | |   | `-BinaryOperator 0x21be2c45620 <col:19, col:26> 'size_t':'unsigned long long' '>>'
|     | |   |   |-ImplicitCastExpr 0x21be2c45608 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |   | `-DeclRefExpr 0x21be2c455c0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | |   |   `-IntegerLiteral 0x21be2c455e0 <col:26> 'int' 4
|     | |   |-CompoundAssignOperator 0x21be2c456c0 <line:416:13, col:20> 'size_t':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-DeclRefExpr 0x21be2c45660 <col:13> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | |   | `-ImplicitCastExpr 0x21be2c456a8 <col:20> 'unsigned long long' <IntegralCast>
|     | |   |   `-IntegerLiteral 0x21be2c45680 <col:20> 'int' 15
|     | |   |-BinaryOperator 0x21be2c45810 <line:418:13, col:34> 'size_t':'unsigned long long' '='
|     | |   | |-DeclRefExpr 0x21be2c456f0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x21be2c44b68 'rem' 'size_t':'unsigned long long'
|     | |   | `-BinaryOperator 0x21be2c457f0 <col:19, col:34> 'unsigned long long' '&'
|     | |   |   |-CStyleCastExpr 0x21be2c45788 <col:19, col:29> 'size_t':'unsigned long long' <NoOp>
|     | |   |   | `-ImplicitCastExpr 0x21be2c45770 <col:27, col:29> 'u64':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|     | |   |   |   `-MemberExpr 0x21be2c45730 <col:27, col:29> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     | |   |   |     `-DeclRefExpr 0x21be2c45710 <col:27> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   |   `-ImplicitCastExpr 0x21be2c457d8 <col:34> 'unsigned long long' <IntegralCast>
|     | |   |     `-IntegerLiteral 0x21be2c457b0 <col:34> 'int' 15
|     | |   |-BinaryOperator 0x21be2c45a40 <line:419:13, col:45> 'u64':'unsigned long long' '='
|     | |   | |-MemberExpr 0x21be2c45850 <col:13, col:15> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     | |   | | `-DeclRefExpr 0x21be2c45830 <col:13> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   | `-BinaryOperator 0x21be2c45a20 <col:20, col:45> 'unsigned long long' '|'
|     | |   |   |-ParenExpr 0x21be2c45930 <col:20, col:31> 'u64':'unsigned long long'
|     | |   |   | `-BinaryOperator 0x21be2c45910 <col:21, col:29> 'u64':'unsigned long long' '<<'
|     | |   |   |   |-ImplicitCastExpr 0x21be2c458f8 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|     | |   |   |   | `-MemberExpr 0x21be2c458a0 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   |   |   |   `-DeclRefExpr 0x21be2c45880 <col:21> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   |   |   `-IntegerLiteral 0x21be2c458d0 <col:29> 'int' 60
|     | |   |   `-ParenExpr 0x21be2c45a00 <col:35, col:45> 'u64':'unsigned long long'
|     | |   |     `-BinaryOperator 0x21be2c459e0 <col:36, col:44> 'u64':'unsigned long long' '>>'
|     | |   |       |-ImplicitCastExpr 0x21be2c459c8 <col:36, col:38> 'u64':'unsigned long long' <LValueToRValue>
|     | |   |       | `-MemberExpr 0x21be2c45970 <col:36, col:38> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     | |   |       |   `-DeclRefExpr 0x21be2c45950 <col:36> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   |       `-IntegerLiteral 0x21be2c459a0 <col:44> 'int' 4
|     | |   |-BinaryOperator 0x21be2c45b80 <line:420:13, col:30> 'u64':'unsigned long long' '='
|     | |   | |-MemberExpr 0x21be2c45a80 <col:13, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   | | `-DeclRefExpr 0x21be2c45a60 <col:13> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   | `-ParenExpr 0x21be2c45b60 <col:20, col:30> 'u64':'unsigned long long'
|     | |   |   `-BinaryOperator 0x21be2c45b40 <col:21, col:29> 'u64':'unsigned long long' '>>'
|     | |   |     |-ImplicitCastExpr 0x21be2c45b28 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|     | |   |     | `-MemberExpr 0x21be2c45ad0 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   |     |   `-DeclRefExpr 0x21be2c45ab0 <col:21> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   |     `-IntegerLiteral 0x21be2c45b00 <col:29> 'int' 4
|     | |   |-IfStmt 0x21be2c45f00 <line:421:13, line:424:47> has_else
|     | |   | |-BinaryOperator 0x21be2c45c10 <line:421:17, col:35> 'int' '=='
|     | |   | | |-UnaryExprOrTypeTraitExpr 0x21be2c45bb0 <col:17, col:30> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|     | |   | | `-ImplicitCastExpr 0x21be2c45bf8 <col:35> 'unsigned long long' <IntegralCast>
|     | |   | |   `-IntegerLiteral 0x21be2c45bd0 <col:35> 'int' 8
|     | |   | |-CompoundAssignOperator 0x21be2c45d28 <line:422:17, col:37> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | | |-MemberExpr 0x21be2c45c50 <col:17, col:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   | | | `-DeclRefExpr 0x21be2c45c30 <col:17> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   | | `-ImplicitCastExpr 0x21be2c45d10 <col:25, col:37> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |   `-ArraySubscriptExpr 0x21be2c45cf0 <col:25, col:37> 'const size_t':'const unsigned long long' lvalue
|     | |   | |     |-ImplicitCastExpr 0x21be2c45cc0 <col:25> 'const size_t *' <ArrayToPointerDecay>
|     | |   | |     | `-DeclRefExpr 0x21be2c45c80 <col:25> 'const size_t [16]' lvalue Var 0x21be2c472a8 'rem_4bit' 'const size_t [16]'
|     | |   | |     `-ImplicitCastExpr 0x21be2c45cd8 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   | |       `-DeclRefExpr 0x21be2c45ca0 <col:34> 'size_t':'unsigned long long' lvalue Var 0x21be2c44b68 'rem' 'size_t':'unsigned long long'
|     | |   | `-CompoundAssignOperator 0x21be2c45ed0 <line:424:17, col:47> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   |   |-MemberExpr 0x21be2c45d78 <col:17, col:19> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   |   | `-DeclRefExpr 0x21be2c45d58 <col:17> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   |   `-BinaryOperator 0x21be2c45eb0 <col:25, col:47> 'u64':'unsigned long long' '<<'
|     | |   |     |-CStyleCastExpr 0x21be2c45e60 <col:25, col:42> 'u64':'unsigned long long' <NoOp>
|     | |   |     | `-ImplicitCastExpr 0x21be2c45e48 <col:30, col:42> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|     | |   |     |   `-ArraySubscriptExpr 0x21be2c45e18 <col:30, col:42> 'const size_t':'const unsigned long long' lvalue
|     | |   |     |     |-ImplicitCastExpr 0x21be2c45de8 <col:30> 'const size_t *' <ArrayToPointerDecay>
|     | |   |     |     | `-DeclRefExpr 0x21be2c45da8 <col:30> 'const size_t [16]' lvalue Var 0x21be2c472a8 'rem_4bit' 'const size_t [16]'
|     | |   |     |     `-ImplicitCastExpr 0x21be2c45e00 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |     |       `-DeclRefExpr 0x21be2c45dc8 <col:39> 'size_t':'unsigned long long' lvalue Var 0x21be2c44b68 'rem' 'size_t':'unsigned long long'
|     | |   |     `-IntegerLiteral 0x21be2c45e88 <col:47> 'int' 32
|     | |   |-CompoundAssignOperator 0x21be2c4d0e8 <line:426:13, col:33> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |   | |-MemberExpr 0x21be2c45f48 <col:13, col:15> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   | | `-DeclRefExpr 0x21be2c45f28 <col:13> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |   | `-ImplicitCastExpr 0x21be2c4d0d0 <col:21, col:33> 'u64':'unsigned long long' <LValueToRValue>
|     | |   |   `-MemberExpr 0x21be2c4d0a0 <col:21, col:33> 'const u64':'const unsigned long long' lvalue .hi 0x21be2a60ad0
|     | |   |     `-ArraySubscriptExpr 0x21be2c4d080 <col:21, col:31> 'const u128':'const u128' lvalue
|     | |   |       |-ImplicitCastExpr 0x21be2c4d050 <col:21> 'const u128 *':'const u128 *' <LValueToRValue>
|     | |   |       | `-DeclRefExpr 0x21be2c4d010 <col:21> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c44710 'Htable' 'const u128 *':'const u128 *'
|     | |   |       `-ImplicitCastExpr 0x21be2c4d068 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|     | |   |         `-DeclRefExpr 0x21be2c4d030 <col:28> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | |   `-CompoundAssignOperator 0x21be2c4d240 <line:427:13, col:33> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     | |     |-MemberExpr 0x21be2c4d138 <col:13, col:15> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     | |     | `-DeclRefExpr 0x21be2c4d118 <col:13> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     | |     `-ImplicitCastExpr 0x21be2c4d228 <col:21, col:33> 'u64':'unsigned long long' <LValueToRValue>
|     | |       `-MemberExpr 0x21be2c4d1f8 <col:21, col:33> 'const u64':'const unsigned long long' lvalue .lo 0x21be2a60b38
|     | |         `-ArraySubscriptExpr 0x21be2c4d1d8 <col:21, col:31> 'const u128':'const u128' lvalue
|     | |           |-ImplicitCastExpr 0x21be2c4d1a8 <col:21> 'const u128 *':'const u128 *' <LValueToRValue>
|     | |           | `-DeclRefExpr 0x21be2c4d168 <col:21> 'const u128 *':'const u128 *' lvalue ParmVar 0x21be2c44710 'Htable' 'const u128 *':'const u128 *'
|     | |           `-ImplicitCastExpr 0x21be2c4d1c0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|     | |             `-DeclRefExpr 0x21be2c4d188 <col:28> 'size_t':'unsigned long long' lvalue Var 0x21be2c44be0 'nlo' 'size_t':'unsigned long long'
|     | `-IfStmt 0x21be2c4d9b0 <line:524:9, line:543:9> has_else
|     |   |-ImplicitCastExpr 0x21be2c4d388 <line:524:13, col:23> 'char' <LValueToRValue>
|     |   | `-MemberExpr 0x21be2c4d358 <col:13, col:23> 'const char' lvalue .little 0x21be2c44e30
|     |   |   `-DeclRefExpr 0x21be2c4d320 <col:13> 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:382:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:382:11)' lvalue Var 0x21be2c44ee8 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:382:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:382:11)'
|     |   |-CompoundStmt 0x21be2c4d760 <col:31, line:540:9>
|     |   | |-BinaryOperator 0x21be2c4d560 <line:526:13, .//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:50> 'u64':'unsigned long long' '='
|     |   | | |-ArraySubscriptExpr 0x21be2c4d400 <.//openssl//file_jk/after\crypto\modes\gcm128.c:526:13, col:17> 'u64':'unsigned long long' lvalue
|     |   | | | |-ImplicitCastExpr 0x21be2c4d3e8 <col:13> 'u64 *':'u64 *' <LValueToRValue>
|     |   | | | | `-DeclRefExpr 0x21be2c4d3a0 <col:13> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c44648 'Xi' 'u64 *':'u64 *'
|     |   | | | `-IntegerLiteral 0x21be2c4d3c0 <col:16> 'int' 0
|     |   | | `-CallExpr 0x21be2c4d538 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:25, col:50> 'unsigned long long'
|     |   | |   |-ImplicitCastExpr 0x21be2c4d520 <col:25> 'unsigned long long (*)(unsigned long long)' <FunctionToPointerDecay>
|     |   | |   | `-DeclRefExpr 0x21be2c4d420 <col:25> 'unsigned long long (unsigned long long)' Function 0x21be2c4be50 '_byteswap_uint64' 'unsigned long long (unsigned long long)'
|     |   | |   `-CStyleCastExpr 0x21be2c4d4f8 <col:42, col:49> 'u64':'unsigned long long' <NoOp>
|     |   | |     `-ImplicitCastExpr 0x21be2c4d4e0 <col:47, col:49> 'u64':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|     |   | |       `-ParenExpr 0x21be2c4d4c0 <col:47, col:49> 'u64':'unsigned long long' lvalue
|     |   | |         `-MemberExpr 0x21be2c4d460 <.//openssl//file_jk/after\crypto\modes\gcm128.c:526:28, col:30> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     |   | |           `-DeclRefExpr 0x21be2c4d440 <col:28> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     |   | `-BinaryOperator 0x21be2c4d740 <line:527:13, .//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:50> 'u64':'unsigned long long' '='
|     |   |   |-ArraySubscriptExpr 0x21be2c4d5e0 <.//openssl//file_jk/after\crypto\modes\gcm128.c:527:13, col:17> 'u64':'unsigned long long' lvalue
|     |   |   | |-ImplicitCastExpr 0x21be2c4d5c8 <col:13> 'u64 *':'u64 *' <LValueToRValue>
|     |   |   | | `-DeclRefExpr 0x21be2c4d580 <col:13> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c44648 'Xi' 'u64 *':'u64 *'
|     |   |   | `-IntegerLiteral 0x21be2c4d5a0 <col:16> 'int' 1
|     |   |   `-CallExpr 0x21be2c4d718 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:25, col:50> 'unsigned long long'
|     |   |     |-ImplicitCastExpr 0x21be2c4d700 <col:25> 'unsigned long long (*)(unsigned long long)' <FunctionToPointerDecay>
|     |   |     | `-DeclRefExpr 0x21be2c4d600 <col:25> 'unsigned long long (unsigned long long)' Function 0x21be2c4be50 '_byteswap_uint64' 'unsigned long long (unsigned long long)'
|     |   |     `-CStyleCastExpr 0x21be2c4d6d8 <col:42, col:49> 'u64':'unsigned long long' <NoOp>
|     |   |       `-ImplicitCastExpr 0x21be2c4d6c0 <col:47, col:49> 'u64':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|     |   |         `-ParenExpr 0x21be2c4d6a0 <col:47, col:49> 'u64':'unsigned long long' lvalue
|     |   |           `-MemberExpr 0x21be2c4d640 <.//openssl//file_jk/after\crypto\modes\gcm128.c:527:28, col:30> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     |   |             `-DeclRefExpr 0x21be2c4d620 <col:28> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     |   `-CompoundStmt 0x21be2c4d990 <line:540:16, line:543:9>
|     |     |-BinaryOperator 0x21be2c4d868 <line:541:13, col:23> 'u64':'unsigned long long' '='
|     |     | |-ArraySubscriptExpr 0x21be2c4d7e0 <col:13, col:17> 'u64':'unsigned long long' lvalue
|     |     | | |-ImplicitCastExpr 0x21be2c4d7c8 <col:13> 'u64 *':'u64 *' <LValueToRValue>
|     |     | | | `-DeclRefExpr 0x21be2c4d780 <col:13> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c44648 'Xi' 'u64 *':'u64 *'
|     |     | | `-IntegerLiteral 0x21be2c4d7a0 <col:16> 'int' 0
|     |     | `-ImplicitCastExpr 0x21be2c4d850 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|     |     |   `-MemberExpr 0x21be2c4d820 <col:21, col:23> 'u64':'unsigned long long' lvalue .hi 0x21be2a60ad0
|     |     |     `-DeclRefExpr 0x21be2c4d800 <col:21> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     |     `-BinaryOperator 0x21be2c4d970 <line:542:13, col:23> 'u64':'unsigned long long' '='
|     |       |-ArraySubscriptExpr 0x21be2c4d8e8 <col:13, col:17> 'u64':'unsigned long long' lvalue
|     |       | |-ImplicitCastExpr 0x21be2c4d8d0 <col:13> 'u64 *':'u64 *' <LValueToRValue>
|     |       | | `-DeclRefExpr 0x21be2c4d888 <col:13> 'u64 *':'u64 *' lvalue ParmVar 0x21be2c44648 'Xi' 'u64 *':'u64 *'
|     |       | `-IntegerLiteral 0x21be2c4d8a8 <col:16> 'int' 1
|     |       `-ImplicitCastExpr 0x21be2c4d958 <col:21, col:23> 'u64':'unsigned long long' <LValueToRValue>
|     |         `-MemberExpr 0x21be2c4d928 <col:21, col:23> 'u64':'unsigned long long' lvalue .lo 0x21be2a60b38
|     |           `-DeclRefExpr 0x21be2c4d908 <col:21> 'u128':'u128' lvalue Var 0x21be2c44a40 'Z' 'u128':'u128'
|     `-BinaryOperator 0x21be2c4db38 <line:544:14, col:32> 'size_t':'unsigned long long' ','
|       |-CompoundAssignOperator 0x21be2c4da78 <col:14, col:21> 'const u8 *' '+=' ComputeLHSTy='const u8 *' ComputeResultTy='const u8 *'
|       | |-DeclRefExpr 0x21be2c4da30 <col:14> 'const u8 *' lvalue ParmVar 0x21be2c44788 'inp' 'const u8 *'
|       | `-IntegerLiteral 0x21be2c4da50 <col:21> 'int' 16
|       `-CompoundAssignOperator 0x21be2c4db08 <col:25, col:32> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|         |-DeclRefExpr 0x21be2c4daa8 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c44800 'len' 'size_t':'unsigned long long'
|         `-ImplicitCastExpr 0x21be2c4daf0 <col:32> 'unsigned long long' <IntegralCast>
|           `-IntegerLiteral 0x21be2c4dac8 <col:32> 'int' 16
|-FunctionDecl 0x21be2c4dda8 <line:713:1, line:825:1> line:713:6 invalid CRYPTO_gcm128_init 'void (int *, void *, int)'
| |-ParmVarDecl 0x21be2c4dbc8 <col:25, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x21be2c4dc48 <col:46, col:52> col:52 used key 'void *'
| |-ParmVarDecl 0x21be2c4dcc8 <col:57, col:68> col:68 invalid block 'int'
| `-CompoundStmt 0x21be2c4e438 <line:714:1, line:825:1>
|   |-DeclStmt 0x21be2c4e1d8 <line:715:5, line:718:24>
|   | |-RecordDecl 0x21be2c4de78 <line:715:11, line:718:5> line:715:11 union definition
|   | | |-FieldDecl 0x21be2c4df48 <line:716:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x21be2c4dfb0 <line:717:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x21be2c4e078 <line:715:5, line:718:23> col:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:715:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:715:11)' cinit
|   |   `-InitListExpr 0x21be2c4e160 <col:19, col:23> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:715:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:715:11)' field Field 0x21be2c4df48 'one' 'long'
|   |     `-ImplicitCastExpr 0x21be2c4e1a8 <col:21> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x21be2c4e0e0 <col:21> 'int' 1
|   `-IfStmt 0x21be2c4e400 <line:726:5, line:739:5>
|     |-ImplicitCastExpr 0x21be2c4e2f8 <line:726:9, col:19> 'char' <LValueToRValue>
|     | `-MemberExpr 0x21be2c4e2c8 <col:9, col:19> 'const char' lvalue .little 0x21be2c4dfb0
|     |   `-DeclRefExpr 0x21be2c4e290 <col:9> 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:715:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:715:11)' lvalue Var 0x21be2c4e078 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:715:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:715:11)'
|     `-CompoundStmt 0x21be2c4e3f0 <col:27, line:739:5>
|-FunctionDecl 0x21be2c4e688 <line:827:1, line:907:1> line:827:6 invalid CRYPTO_gcm128_setiv 'void (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x21be2c4e470 <col:26, col:42> col:42 invalid ctx 'int *'
| |-ParmVarDecl 0x21be2c4e4f0 <col:47, col:68> col:68 used iv 'const unsigned char *'
| |-ParmVarDecl 0x21be2c4e568 <line:828:26, col:33> col:33 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x21be2c53110 <line:829:1, line:907:1>
|   |-DeclStmt 0x21be2c4eaa8 <line:830:5, line:833:24>
|   | |-RecordDecl 0x21be2c4e758 <line:830:11, line:833:5> line:830:11 union definition
|   | | |-FieldDecl 0x21be2c4e828 <line:831:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x21be2c4e890 <line:832:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x21be2c4e948 <line:830:5, line:833:23> col:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:830:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:830:11)' cinit
|   |   `-InitListExpr 0x21be2c4ea30 <col:19, col:23> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:830:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:830:11)' field Field 0x21be2c4e828 'one' 'long'
|   |     `-ImplicitCastExpr 0x21be2c4ea78 <col:21> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x21be2c4e9b0 <col:21> 'int' 1
|   |-DeclStmt 0x21be2c4eb40 <line:834:5, col:21>
|   | `-VarDecl 0x21be2c4ead8 <col:5, col:18> col:18 used ctr 'unsigned int'
|   |-IfStmt 0x21be2c56ea8 <line:848:5, line:895:5> has_else
|   | |-BinaryOperator 0x21be2c4ee18 <line:848:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x21be2c4ede8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21be2c4ed88 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c4e568 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x21be2c4ee00 <col:16> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x21be2c4edc0 <col:16> 'int' 12
|   | |-CompoundStmt 0x21be2c4efa0 <col:20, line:852:5>
|   | | `-BinaryOperator 0x21be2c4ef80 <line:851:9, col:15> 'unsigned int' '='
|   | |   |-DeclRefExpr 0x21be2c4ef08 <col:9> 'unsigned int' lvalue Var 0x21be2c4ead8 'ctr' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x21be2c4ef68 <col:15> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x21be2c4ef40 <col:15> 'int' 1
|   | `-CompoundStmt 0x21be2c56e68 <line:852:12, line:895:5>
|   |   |-DeclStmt 0x21be2c56108 <line:853:9, col:17>
|   |   | `-VarDecl 0x21be2c560a0 <col:9, col:16> col:16 used i 'size_t':'unsigned long long'
|   |   |-DeclStmt 0x21be2c561d0 <line:854:9, col:23>
|   |   | `-VarDecl 0x21be2c56130 <col:9, col:20> col:13 used len0 'u64':'unsigned long long' cinit
|   |   |   `-ImplicitCastExpr 0x21be2c561b8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x21be2c56198 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c4e568 'len' 'size_t':'unsigned long long'
|   |   |-WhileStmt 0x21be2c565e0 <line:856:9, line:862:9>
|   |   | |-BinaryOperator 0x21be2c56260 <line:856:16, col:23> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x21be2c56230 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x21be2c561e8 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c4e568 'len' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x21be2c56248 <col:23> 'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x21be2c56208 <col:23> 'int' 16
|   |   | `-CompoundStmt 0x21be2c565c0 <col:27, line:862:9>
|   |   |   |-CompoundAssignOperator 0x21be2c56500 <line:860:13, col:19> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   |   | |-DeclRefExpr 0x21be2c564b8 <col:13> 'const unsigned char *' lvalue ParmVar 0x21be2c4e4f0 'iv' 'const unsigned char *'
|   |   |   | `-IntegerLiteral 0x21be2c564d8 <col:19> 'int' 16
|   |   |   `-CompoundAssignOperator 0x21be2c56590 <line:861:13, col:20> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |     |-DeclRefExpr 0x21be2c56530 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c4e568 'len' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x21be2c56578 <col:20> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x21be2c56550 <col:20> 'int' 16
|   |   |-IfStmt 0x21be2c56858 <line:863:9, line:867:9>
|   |   | |-ImplicitCastExpr 0x21be2c56618 <line:863:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x21be2c565f8 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c4e568 'len' 'size_t':'unsigned long long'
|   |   | `-CompoundStmt 0x21be2c56848 <col:18, line:867:9>
|   |   |-CompoundAssignOperator 0x21be2c568e8 <line:868:9, col:18> 'u64':'unsigned long long' '<<=' ComputeLHSTy='u64':'unsigned long long' ComputeResultTy='u64':'unsigned long long'
|   |   | |-DeclRefExpr 0x21be2c56870 <col:9> 'u64':'unsigned long long' lvalue Var 0x21be2c56130 'len0' 'u64':'unsigned long long'
|   |   | `-IntegerLiteral 0x21be2c568a8 <col:18> 'int' 3
|   |   `-IfStmt 0x21be2c56b30 <line:869:9, line:883:13> has_else
|   |     |-ImplicitCastExpr 0x21be2c56980 <line:869:13, col:23> 'char' <LValueToRValue>
|   |     | `-MemberExpr 0x21be2c56950 <col:13, col:23> 'const char' lvalue .little 0x21be2c4e890
|   |     |   `-DeclRefExpr 0x21be2c56918 <col:13> 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:830:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:830:11)' lvalue Var 0x21be2c4e948 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:830:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:830:11)'
|   |     |-CompoundStmt 0x21be2c56ad0 <col:31, line:882:9>
|   |     `-NullStmt 0x21be2c56b28 <line:883:13>
|   `-UnaryOperator 0x21be2c56ef0 <line:898:5, col:7> 'unsigned int' prefix '++'
|     `-DeclRefExpr 0x21be2c56ed0 <col:7> 'unsigned int' lvalue Var 0x21be2c4ead8 'ctr' 'unsigned int'
|-FunctionDecl 0x21be2c56c30 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:78:25> col:25 implicit used _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x21be2c56cd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x21be2c56d40 <col:25> Implicit
| `-ConstAttr 0x21be2c56d98 <col:25> Implicit
|-FunctionDecl 0x21be2c53380 <.//openssl//file_jk/after\crypto\modes\gcm128.c:909:1, line:968:1> line:909:5 invalid CRYPTO_gcm128_aad 'int (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x21be2c53158 <col:23, col:39> col:39 invalid ctx 'int *'
| |-ParmVarDecl 0x21be2c531d8 <col:44, col:65> col:65 used aad 'const unsigned char *'
| |-ParmVarDecl 0x21be2c53250 <line:910:23, col:30> col:30 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x21be2c57698 <line:911:1, line:968:1>
|   |-DeclStmt 0x21be2c534c8 <line:912:5, col:13>
|   | `-VarDecl 0x21be2c53460 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x21be2c53560 <line:913:5, col:19>
|   | `-VarDecl 0x21be2c534f8 <col:5, col:18> col:18 used n 'unsigned int'
|   |-DeclStmt 0x21be2c53618 <line:914:5, col:29>
|   | `-VarDecl 0x21be2c53588 <col:5, col:9> col:9 used alen 'u64':'unsigned long long'
|   |-IfStmt 0x21be2c536c0 <line:923:5, line:924:17>
|   | |-OpaqueValueExpr 0x21be2c536a8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x21be2c53698 <col:9, col:17>
|   |   `-UnaryOperator 0x21be2c53680 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21be2c53658 <col:17> 'int' 2
|   |-CompoundAssignOperator 0x21be2c53760 <line:926:5, col:13> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-DeclRefExpr 0x21be2c536d8 <col:5> 'u64':'unsigned long long' lvalue Var 0x21be2c53588 'alen' 'u64':'unsigned long long'
|   | `-ImplicitCastExpr 0x21be2c53748 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x21be2c53710 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c53250 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x21be2c53a78 <line:927:5, line:928:17>
|   | |-BinaryOperator 0x21be2c53a08 <line:927:9, col:65> 'int' '||'
|   | | |-BinaryOperator 0x21be2c53858 <col:9, col:29> 'int' '>'
|   | | | |-ImplicitCastExpr 0x21be2c53840 <col:9> 'u64':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x21be2c53790 <col:9> 'u64':'unsigned long long' lvalue Var 0x21be2c53588 'alen' 'u64':'unsigned long long'
|   | | | `-ParenExpr 0x21be2c53820 <col:16, col:29> 'unsigned long long'
|   | | |   `-BinaryOperator 0x21be2c53800 <<scratch space>:297:1, .//openssl//file_jk/after\crypto\modes\gcm128.c:927:27> 'unsigned long long' '<<'
|   | | |     |-IntegerLiteral 0x21be2c537b0 <<scratch space>:297:1> 'unsigned long long' 1
|   | | |     `-IntegerLiteral 0x21be2c537d8 <.//openssl//file_jk/after\crypto\modes\gcm128.c:927:27> 'int' 61
|   | | `-ParenExpr 0x21be2c539e8 <col:34, col:65> 'int'
|   | |   `-BinaryOperator 0x21be2c539c8 <col:35, col:62> 'int' '&&'
|   | |     |-BinaryOperator 0x21be2c53918 <col:35, col:50> 'int' '=='
|   | |     | |-UnaryExprOrTypeTraitExpr 0x21be2c538b8 <col:35, col:45> 'unsigned long long' sizeof
|   | |     | | `-ParenExpr 0x21be2c53898 <col:41, col:45> 'size_t':'unsigned long long' lvalue
|   | |     | |   `-DeclRefExpr 0x21be2c53878 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c53250 'len' 'size_t':'unsigned long long' non_odr_use_unevaluated
|   | |     | `-ImplicitCastExpr 0x21be2c53900 <col:50> 'unsigned long long' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x21be2c538d8 <col:50> 'int' 8
|   | |     `-BinaryOperator 0x21be2c539a8 <col:55, col:62> 'int' '<'
|   | |       |-ImplicitCastExpr 0x21be2c53978 <col:55> 'u64':'unsigned long long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21be2c53938 <col:55> 'u64':'unsigned long long' lvalue Var 0x21be2c53588 'alen' 'u64':'unsigned long long'
|   | |       `-ImplicitCastExpr 0x21be2c53990 <col:62> 'size_t':'unsigned long long' <LValueToRValue>
|   | |         `-DeclRefExpr 0x21be2c53958 <col:62> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c53250 'len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x21be2c53a68 <line:928:9, col:17>
|   |   `-UnaryOperator 0x21be2c53a50 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21be2c53a28 <col:17> 'int' 1
|   |-IfStmt 0x21be2c53fc0 <line:932:5, line:944:5>
|   | |-ImplicitCastExpr 0x21be2c53b30 <line:932:9> 'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x21be2c53b10 <col:9> 'unsigned int' lvalue Var 0x21be2c534f8 'n' 'unsigned int'
|   | `-CompoundStmt 0x21be2c53fa0 <col:12, line:944:5>
|   |   |-WhileStmt 0x21be2c53e30 <line:933:9, line:937:9>
|   |   | |-BinaryOperator 0x21be2c53bb8 <line:933:16, col:21> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x21be2c53b88 <col:16> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x21be2c53b48 <col:16> 'unsigned int' lvalue Var 0x21be2c534f8 'n' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x21be2c53ba0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x21be2c53b68 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c53250 'len' 'size_t':'unsigned long long'
|   |   | `-CompoundStmt 0x21be2c53e10 <col:26, line:937:9>
|   |   |   |-UnaryOperator 0x21be2c53ca0 <line:935:13, col:15> 'size_t':'unsigned long long' prefix '--'
|   |   |   | `-DeclRefExpr 0x21be2c53c80 <col:15> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c53250 'len' 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x21be2c53df0 <line:936:13, col:27> 'unsigned int' '='
|   |   |     |-DeclRefExpr 0x21be2c53cb8 <col:13> 'unsigned int' lvalue Var 0x21be2c534f8 'n' 'unsigned int'
|   |   |     `-BinaryOperator 0x21be2c53dd0 <col:17, col:27> 'unsigned int' '%'
|   |   |       |-ParenExpr 0x21be2c53d70 <col:17, col:23> 'unsigned int'
|   |   |       | `-BinaryOperator 0x21be2c53d50 <col:18, col:22> 'unsigned int' '+'
|   |   |       |   |-ImplicitCastExpr 0x21be2c53d20 <col:18> 'unsigned int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x21be2c53cd8 <col:18> 'unsigned int' lvalue Var 0x21be2c534f8 'n' 'unsigned int'
|   |   |       |   `-ImplicitCastExpr 0x21be2c53d38 <col:22> 'unsigned int' <IntegralCast>
|   |   |       |     `-IntegerLiteral 0x21be2c53cf8 <col:22> 'int' 1
|   |   |       `-ImplicitCastExpr 0x21be2c53db8 <col:27> 'unsigned int' <IntegralCast>
|   |   |         `-IntegerLiteral 0x21be2c53d90 <col:27> 'int' 16
|   |   `-IfStmt 0x21be2c53f78 <line:938:9, line:943:9> has_else
|   |     |-BinaryOperator 0x21be2c53ec0 <line:938:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x21be2c53e90 <col:13> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x21be2c53e48 <col:13> 'unsigned int' lvalue Var 0x21be2c534f8 'n' 'unsigned int'
|   |     | `-ImplicitCastExpr 0x21be2c53ea8 <col:18> 'unsigned int' <IntegralCast>
|   |     |   `-IntegerLiteral 0x21be2c53e68 <col:18> 'int' 0
|   |     |-NullStmt 0x21be2c53f70 <line:553:28>
|   |     `-CompoundStmt 0x21be2c53f58 <line:940:14, line:943:9>
|   |       `-ReturnStmt 0x21be2c53f48 <line:942:13, col:20>
|   |         `-IntegerLiteral 0x21be2c53f20 <col:20> 'int' 0
|   |-IfStmt 0x21be2c57310 <line:946:5, line:950:5>
|   | |-ParenExpr 0x21be2c57160 <line:946:9, col:33> 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x21be2c57140 <col:10, col:32> 'size_t':'unsigned long long' '='
|   | |   |-DeclRefExpr 0x21be2c53fd8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x21be2c53460 'i' 'size_t':'unsigned long long'
|   | |   `-ParenExpr 0x21be2c57120 <col:14, col:32> 'unsigned long long'
|   | |     `-BinaryOperator 0x21be2c57100 <col:15, col:30> 'unsigned long long' '&'
|   | |       |-ImplicitCastExpr 0x21be2c570e8 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21be2c54010 <col:15> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c53250 'len' 'size_t':'unsigned long long'
|   | |       `-CStyleCastExpr 0x21be2c570c0 <col:21, col:30> 'size_t':'unsigned long long' <IntegralCast>
|   | |         `-UnaryOperator 0x21be2c54058 <col:29, col:30> 'int' prefix '-'
|   | |           `-IntegerLiteral 0x21be2c54030 <col:30> 'int' 16
|   | `-CompoundStmt 0x21be2c572f0 <col:36, line:950:5>
|   |   |-CompoundAssignOperator 0x21be2c57238 <line:948:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x21be2c571e0 <col:9> 'const unsigned char *' lvalue ParmVar 0x21be2c531d8 'aad' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x21be2c57220 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x21be2c57200 <col:16> 'size_t':'unsigned long long' lvalue Var 0x21be2c53460 'i' 'size_t':'unsigned long long'
|   |   `-CompoundAssignOperator 0x21be2c572c0 <line:949:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     |-DeclRefExpr 0x21be2c57268 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c53250 'len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x21be2c572a8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x21be2c57288 <col:16> 'size_t':'unsigned long long' lvalue Var 0x21be2c53460 'i' 'size_t':'unsigned long long'
|   |-IfStmt 0x21be2c57628 <line:960:5, line:964:5>
|   | |-ImplicitCastExpr 0x21be2c57348 <line:960:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x21be2c57328 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c53250 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x21be2c57610 <col:14, line:964:5>
|   |   `-BinaryOperator 0x21be2c573f8 <line:961:9, col:27> 'unsigned int' '='
|   |     |-DeclRefExpr 0x21be2c57360 <col:9> 'unsigned int' lvalue Var 0x21be2c534f8 'n' 'unsigned int'
|   |     `-CStyleCastExpr 0x21be2c573d0 <col:13, col:27> 'unsigned int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x21be2c573b8 <col:27> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |         `-DeclRefExpr 0x21be2c57380 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c53250 'len' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x21be2c57688 <line:967:5, col:12>
|     `-IntegerLiteral 0x21be2c57660 <col:12> 'int' 0
|-FunctionDecl 0x21be2c57a00 <line:970:1, line:1152:1> line:970:5 invalid CRYPTO_gcm128_encrypt 'int (int *, const unsigned char *, unsigned char *, size_t)'
| |-ParmVarDecl 0x21be2c57710 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x21be2c57790 <line:971:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x21be2c57840 <col:52, col:67> col:67 used out 'unsigned char *'
| |-ParmVarDecl 0x21be2c578b8 <line:972:27, col:34> col:34 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x21be2c548a8 <line:973:1, line:1152:1>
|   |-DeclStmt 0x21be2c57e28 <line:974:5, line:977:24>
|   | |-RecordDecl 0x21be2c57ad8 <line:974:11, line:977:5> line:974:11 union definition
|   | | |-FieldDecl 0x21be2c57ba8 <line:975:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x21be2c57c10 <line:976:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x21be2c57cc8 <line:974:5, line:977:23> col:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:974:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:974:11)' cinit
|   |   `-InitListExpr 0x21be2c57db0 <col:19, col:23> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:974:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:974:11)' field Field 0x21be2c57ba8 'one' 'long'
|   |     `-ImplicitCastExpr 0x21be2c57df8 <col:21> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x21be2c57d30 <col:21> 'int' 1
|   |-DeclStmt 0x21be2c57f58 <line:978:5, col:24>
|   | |-VarDecl 0x21be2c57e58 <col:5, col:18> col:18 used n 'unsigned int'
|   | `-VarDecl 0x21be2c57ed8 <col:5, col:21> col:21 used ctr 'unsigned int'
|   |-DeclStmt 0x21be2c57fe8 <line:979:5, col:13>
|   | `-VarDecl 0x21be2c57f80 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x21be2c50040 <line:980:5, col:29>
|   | `-VarDecl 0x21be2c58010 <col:5, col:9> col:9 used mlen 'u64':'unsigned long long'
|   |-DeclStmt 0x21be2c500d8 <line:982:5, col:25>
|   | `-VarDecl 0x21be2c50070 <col:5, col:11> col:11 used key 'void *'
|   |-CompoundAssignOperator 0x21be2c50178 <line:991:5, col:13> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-DeclRefExpr 0x21be2c500f0 <col:5> 'u64':'unsigned long long' lvalue Var 0x21be2c58010 'mlen' 'u64':'unsigned long long'
|   | `-ImplicitCastExpr 0x21be2c50160 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x21be2c50128 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x21be2c50510 <line:992:5, line:993:17>
|   | |-BinaryOperator 0x21be2c504a0 <line:992:9, col:72> 'int' '||'
|   | | |-BinaryOperator 0x21be2c502f0 <col:9, col:36> 'int' '>'
|   | | | |-ImplicitCastExpr 0x21be2c502d8 <col:9> 'u64':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x21be2c501a8 <col:9> 'u64':'unsigned long long' lvalue Var 0x21be2c58010 'mlen' 'u64':'unsigned long long'
|   | | | `-ParenExpr 0x21be2c502b8 <col:16, col:36> 'unsigned long long'
|   | | |   `-BinaryOperator 0x21be2c50298 <col:17, col:34> 'unsigned long long' '-'
|   | | |     |-ParenExpr 0x21be2c50238 <col:17, col:30> 'unsigned long long'
|   | | |     | `-BinaryOperator 0x21be2c50218 <<scratch space>:298:1, .//openssl//file_jk/after\crypto\modes\gcm128.c:992:28> 'unsigned long long' '<<'
|   | | |     |   |-IntegerLiteral 0x21be2c501c8 <<scratch space>:298:1> 'unsigned long long' 1
|   | | |     |   `-IntegerLiteral 0x21be2c501f0 <.//openssl//file_jk/after\crypto\modes\gcm128.c:992:28> 'int' 36
|   | | |     `-ImplicitCastExpr 0x21be2c50280 <col:34> 'unsigned long long' <IntegralCast>
|   | | |       `-IntegerLiteral 0x21be2c50258 <col:34> 'int' 32
|   | | `-ParenExpr 0x21be2c50480 <col:41, col:72> 'int'
|   | |   `-BinaryOperator 0x21be2c50460 <col:42, col:69> 'int' '&&'
|   | |     |-BinaryOperator 0x21be2c503b0 <col:42, col:57> 'int' '=='
|   | |     | |-UnaryExprOrTypeTraitExpr 0x21be2c50350 <col:42, col:52> 'unsigned long long' sizeof
|   | |     | | `-ParenExpr 0x21be2c50330 <col:48, col:52> 'size_t':'unsigned long long' lvalue
|   | |     | |   `-DeclRefExpr 0x21be2c50310 <col:49> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long' non_odr_use_unevaluated
|   | |     | `-ImplicitCastExpr 0x21be2c50398 <col:57> 'unsigned long long' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x21be2c50370 <col:57> 'int' 8
|   | |     `-BinaryOperator 0x21be2c50440 <col:62, col:69> 'int' '<'
|   | |       |-ImplicitCastExpr 0x21be2c50410 <col:62> 'u64':'unsigned long long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21be2c503d0 <col:62> 'u64':'unsigned long long' lvalue Var 0x21be2c58010 'mlen' 'u64':'unsigned long long'
|   | |       `-ImplicitCastExpr 0x21be2c50428 <col:69> 'size_t':'unsigned long long' <LValueToRValue>
|   | |         `-DeclRefExpr 0x21be2c503f0 <col:69> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x21be2c50500 <line:993:9, col:17>
|   |   `-UnaryOperator 0x21be2c504e8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21be2c504c0 <col:17> 'int' 1
|   |-IfStmt 0x21be2c505e0 <line:996:5, line:1000:5>
|   | |-OpaqueValueExpr 0x21be2c505c8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21be2c505b8 <line:996:20, line:1000:5>
|   |-IfStmt 0x21be2c59030 <line:1013:5, line:1129:5>
|   | |-BinaryOperator 0x21be2c50848 <line:1013:9, col:32> 'int' '=='
|   | | |-BinaryOperator 0x21be2c507e8 <col:9, col:27> 'unsigned long long' '%'
|   | | | |-ImplicitCastExpr 0x21be2c507d0 <col:9> 'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x21be2c50778 <col:9> 'int' 16
|   | | | `-UnaryExprOrTypeTraitExpr 0x21be2c507b0 <col:14, col:27> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x21be2c50830 <col:32> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x21be2c50808 <col:32> 'int' 0
|   | `-CompoundStmt 0x21be2c59018 <col:35, line:1129:5>
|   |   `-DoStmt 0x21be2c58ff8 <line:1014:9, line:1128:19>
|   |     |-CompoundStmt 0x21be2c58f98 <line:1014:12, line:1128:9>
|   |     | |-IfStmt 0x21be2c50dc0 <line:1015:13, line:1027:13>
|   |     | | |-ImplicitCastExpr 0x21be2c50888 <line:1015:17> 'unsigned int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x21be2c50868 <col:17> 'unsigned int' lvalue Var 0x21be2c57e58 'n' 'unsigned int'
|   |     | | `-CompoundStmt 0x21be2c50da0 <col:20, line:1027:13>
|   |     | |   |-WhileStmt 0x21be2c50c30 <line:1016:17, line:1020:17>
|   |     | |   | |-BinaryOperator 0x21be2c50910 <line:1016:24, col:29> 'int' '&&'
|   |     | |   | | |-ImplicitCastExpr 0x21be2c508e0 <col:24> 'unsigned int' <LValueToRValue>
|   |     | |   | | | `-DeclRefExpr 0x21be2c508a0 <col:24> 'unsigned int' lvalue Var 0x21be2c57e58 'n' 'unsigned int'
|   |     | |   | | `-ImplicitCastExpr 0x21be2c508f8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   | |   `-DeclRefExpr 0x21be2c508c0 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   |     | |   | `-CompoundStmt 0x21be2c50c10 <col:34, line:1020:17>
|   |     | |   |   |-UnaryOperator 0x21be2c50aa0 <line:1018:21, col:23> 'size_t':'unsigned long long' prefix '--'
|   |     | |   |   | `-DeclRefExpr 0x21be2c50a80 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   |     | |   |   `-BinaryOperator 0x21be2c50bf0 <line:1019:21, col:35> 'unsigned int' '='
|   |     | |   |     |-DeclRefExpr 0x21be2c50ab8 <col:21> 'unsigned int' lvalue Var 0x21be2c57e58 'n' 'unsigned int'
|   |     | |   |     `-BinaryOperator 0x21be2c50bd0 <col:25, col:35> 'unsigned int' '%'
|   |     | |   |       |-ParenExpr 0x21be2c50b70 <col:25, col:31> 'unsigned int'
|   |     | |   |       | `-BinaryOperator 0x21be2c50b50 <col:26, col:30> 'unsigned int' '+'
|   |     | |   |       |   |-ImplicitCastExpr 0x21be2c50b20 <col:26> 'unsigned int' <LValueToRValue>
|   |     | |   |       |   | `-DeclRefExpr 0x21be2c50ad8 <col:26> 'unsigned int' lvalue Var 0x21be2c57e58 'n' 'unsigned int'
|   |     | |   |       |   `-ImplicitCastExpr 0x21be2c50b38 <col:30> 'unsigned int' <IntegralCast>
|   |     | |   |       |     `-IntegerLiteral 0x21be2c50af8 <col:30> 'int' 1
|   |     | |   |       `-ImplicitCastExpr 0x21be2c50bb8 <col:35> 'unsigned int' <IntegralCast>
|   |     | |   |         `-IntegerLiteral 0x21be2c50b90 <col:35> 'int' 16
|   |     | |   `-IfStmt 0x21be2c50d78 <line:1021:17, line:1026:17> has_else
|   |     | |     |-BinaryOperator 0x21be2c50cc0 <line:1021:21, col:26> 'int' '=='
|   |     | |     | |-ImplicitCastExpr 0x21be2c50c90 <col:21> 'unsigned int' <LValueToRValue>
|   |     | |     | | `-DeclRefExpr 0x21be2c50c48 <col:21> 'unsigned int' lvalue Var 0x21be2c57e58 'n' 'unsigned int'
|   |     | |     | `-ImplicitCastExpr 0x21be2c50ca8 <col:26> 'unsigned int' <IntegralCast>
|   |     | |     |   `-IntegerLiteral 0x21be2c50c68 <col:26> 'int' 0
|   |     | |     |-NullStmt 0x21be2c50d70 <line:553:28>
|   |     | |     `-CompoundStmt 0x21be2c50d58 <line:1023:22, line:1026:17>
|   |     | |       `-ReturnStmt 0x21be2c50d48 <line:1025:21, col:28>
|   |     | |         `-IntegerLiteral 0x21be2c50d20 <col:28> 'int' 0
|   |     | |-WhileStmt 0x21be2c55d10 <line:1034:13, line:1059:13>
|   |     | | |-BinaryOperator 0x21be2c50eb8 <line:1034:20, line:561:36> 'int' '>='
|   |     | | | |-ImplicitCastExpr 0x21be2c50e88 <line:1034:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x21be2c50dd8 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x21be2c50ea0 <line:561:29, col:36> 'unsigned long long' <IntegralCast>
|   |     | | |   `-ParenExpr 0x21be2c50e68 <col:29, col:36> 'int'
|   |     | | |     `-BinaryOperator 0x21be2c50e48 <col:30, col:32> 'int' '*'
|   |     | | |       |-IntegerLiteral 0x21be2c50df8 <col:30> 'int' 3
|   |     | | |       `-IntegerLiteral 0x21be2c50e20 <col:32> 'int' 1024
|   |     | | `-CompoundStmt 0x21be2c55ce8 <line:1034:40, line:1059:13>
|   |     | |   |-DeclStmt 0x21be2c50ff8 <line:1035:17, col:39>
|   |     | |   | `-VarDecl 0x21be2c50ee8 <col:17, line:561:36> line:1035:24 used j 'size_t':'unsigned long long' cinit
|   |     | |   |   `-ImplicitCastExpr 0x21be2c50fe0 <line:561:29, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |     | |   |     `-ParenExpr 0x21be2c50fc0 <col:29, col:36> 'int'
|   |     | |   |       `-BinaryOperator 0x21be2c50fa0 <col:30, col:32> 'int' '*'
|   |     | |   |         |-IntegerLiteral 0x21be2c50f50 <col:30> 'int' 3
|   |     | |   |         `-IntegerLiteral 0x21be2c50f78 <col:32> 'int' 1024
|   |     | |   |-WhileStmt 0x21be2c55a40 <line:1037:17, line:1056:17>
|   |     | |   | |-ImplicitCastExpr 0x21be2c550a8 <line:1037:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   | | `-DeclRefExpr 0x21be2c51010 <col:24> 'size_t':'unsigned long long' lvalue Var 0x21be2c50ee8 'j' 'size_t':'unsigned long long'
|   |     | |   | `-CompoundStmt 0x21be2c55a00 <col:27, line:1056:17>
|   |     | |   |   |-DeclStmt 0x21be2c551d0 <line:1038:21, col:50>
|   |     | |   |   | `-VarDecl 0x21be2c550f8 <col:21, col:47> col:29 used out_t 'size_t *' cinit
|   |     | |   |   |   `-CStyleCastExpr 0x21be2c551a8 <col:37, col:47> 'size_t *' <BitCast>
|   |     | |   |   |     `-ImplicitCastExpr 0x21be2c55190 <col:47> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     | |   |   |       `-DeclRefExpr 0x21be2c55160 <col:47> 'unsigned char *' lvalue ParmVar 0x21be2c57840 'out' 'unsigned char *'
|   |     | |   |   |-DeclStmt 0x21be2c552d0 <line:1039:21, col:60>
|   |     | |   |   | `-VarDecl 0x21be2c551f8 <col:21, col:58> col:35 used in_t 'const size_t *' cinit
|   |     | |   |   |   `-CStyleCastExpr 0x21be2c552a8 <col:42, col:58> 'const size_t *' <BitCast>
|   |     | |   |   |     `-ImplicitCastExpr 0x21be2c55290 <col:58> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     | |   |   |       `-DeclRefExpr 0x21be2c55260 <col:58> 'const unsigned char *' lvalue ParmVar 0x21be2c57790 'in' 'const unsigned char *'
|   |     | |   |   |-UnaryOperator 0x21be2c55340 <line:1042:21, col:23> 'unsigned int' prefix '++'
|   |     | |   |   | `-DeclRefExpr 0x21be2c55320 <col:23> 'unsigned int' lvalue Var 0x21be2c57ed8 'ctr' 'unsigned int'
|   |     | |   |   |-CompoundAssignOperator 0x21be2c558c8 <line:1053:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     | |   |   | |-DeclRefExpr 0x21be2c55880 <col:21> 'unsigned char *' lvalue ParmVar 0x21be2c57840 'out' 'unsigned char *'
|   |     | |   |   | `-IntegerLiteral 0x21be2c558a0 <col:28> 'int' 16
|   |     | |   |   |-CompoundAssignOperator 0x21be2c55940 <line:1054:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |   |   | |-DeclRefExpr 0x21be2c558f8 <col:21> 'const unsigned char *' lvalue ParmVar 0x21be2c57790 'in' 'const unsigned char *'
|   |     | |   |   | `-IntegerLiteral 0x21be2c55918 <col:27> 'int' 16
|   |     | |   |   `-CompoundAssignOperator 0x21be2c559d0 <line:1055:21, col:26> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |   |     |-DeclRefExpr 0x21be2c55970 <col:21> 'size_t':'unsigned long long' lvalue Var 0x21be2c50ee8 'j' 'size_t':'unsigned long long'
|   |     | |   |     `-ImplicitCastExpr 0x21be2c559b8 <col:26> 'unsigned long long' <IntegralCast>
|   |     | |   |       `-IntegerLiteral 0x21be2c55990 <col:26> 'int' 16
|   |     | |   `-CompoundAssignOperator 0x21be2c55cb8 <line:1058:17, line:561:36> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |     |-DeclRefExpr 0x21be2c55bf0 <line:1058:17> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   |     | |     `-ImplicitCastExpr 0x21be2c55ca0 <line:561:29, col:36> 'unsigned long long' <IntegralCast>
|   |     | |       `-ParenExpr 0x21be2c55c80 <col:29, col:36> 'int'
|   |     | |         `-BinaryOperator 0x21be2c55c60 <col:30, col:32> 'int' '*'
|   |     | |           |-IntegerLiteral 0x21be2c55c10 <col:30> 'int' 3
|   |     | |           `-IntegerLiteral 0x21be2c55c38 <col:32> 'int' 1024
|   |     | |-IfStmt 0x21be2c58a60 <line:1061:13, line:1085:13>
|   |     | | |-ParenExpr 0x21be2c55e58 <line:1061:17, col:41> 'size_t':'unsigned long long'
|   |     | | | `-BinaryOperator 0x21be2c55e38 <col:18, col:40> 'size_t':'unsigned long long' '='
|   |     | | |   |-DeclRefExpr 0x21be2c55d28 <col:18> 'size_t':'unsigned long long' lvalue Var 0x21be2c57f80 'i' 'size_t':'unsigned long long'
|   |     | | |   `-ParenExpr 0x21be2c55e18 <col:22, col:40> 'unsigned long long'
|   |     | | |     `-BinaryOperator 0x21be2c55df8 <col:23, col:38> 'unsigned long long' '&'
|   |     | | |       |-ImplicitCastExpr 0x21be2c55de0 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |       | `-DeclRefExpr 0x21be2c55d48 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   |     | | |       `-CStyleCastExpr 0x21be2c55db8 <col:29, col:38> 'size_t':'unsigned long long' <IntegralCast>
|   |     | | |         `-UnaryOperator 0x21be2c55d90 <col:37, col:38> 'int' prefix '-'
|   |     | | |           `-IntegerLiteral 0x21be2c55d68 <col:38> 'int' 16
|   |     | | `-CompoundStmt 0x21be2c58a40 <col:44, line:1085:13>
|   |     | |   |-DeclStmt 0x21be2c55f28 <line:1062:17, col:29>
|   |     | |   | `-VarDecl 0x21be2c55e88 <col:17, col:28> col:24 used j 'size_t':'unsigned long long' cinit
|   |     | |   |   `-ImplicitCastExpr 0x21be2c55f10 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   |     `-DeclRefExpr 0x21be2c55ef0 <col:28> 'size_t':'unsigned long long' lvalue Var 0x21be2c57f80 'i' 'size_t':'unsigned long long'
|   |     | |   `-WhileStmt 0x21be2c58940 <line:1064:17, line:1083:17>
|   |     | |     |-BinaryOperator 0x21be2c55fb8 <line:1064:24, col:31> 'int' '>='
|   |     | |     | |-ImplicitCastExpr 0x21be2c55f88 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | | `-DeclRefExpr 0x21be2c55f40 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   |     | |     | `-ImplicitCastExpr 0x21be2c55fa0 <col:31> 'unsigned long long' <IntegralCast>
|   |     | |     |   `-IntegerLiteral 0x21be2c55f60 <col:31> 'int' 16
|   |     | |     `-CompoundStmt 0x21be2c58900 <col:35, line:1083:17>
|   |     | |       |-DeclStmt 0x21be2c58100 <line:1065:21, col:50>
|   |     | |       | `-VarDecl 0x21be2c55fe8 <col:21, col:47> col:29 used out_t 'size_t *' cinit
|   |     | |       |   `-CStyleCastExpr 0x21be2c580d8 <col:37, col:47> 'size_t *' <BitCast>
|   |     | |       |     `-ImplicitCastExpr 0x21be2c580c0 <col:47> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     | |       |       `-DeclRefExpr 0x21be2c56050 <col:47> 'unsigned char *' lvalue ParmVar 0x21be2c57840 'out' 'unsigned char *'
|   |     | |       |-DeclStmt 0x21be2c58200 <line:1066:21, col:60>
|   |     | |       | `-VarDecl 0x21be2c58128 <col:21, col:58> col:35 used in_t 'const size_t *' cinit
|   |     | |       |   `-CStyleCastExpr 0x21be2c581d8 <col:42, col:58> 'const size_t *' <BitCast>
|   |     | |       |     `-ImplicitCastExpr 0x21be2c581c0 <col:58> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     | |       |       `-DeclRefExpr 0x21be2c58190 <col:58> 'const unsigned char *' lvalue ParmVar 0x21be2c57790 'in' 'const unsigned char *'
|   |     | |       |-UnaryOperator 0x21be2c58258 <line:1069:21, col:23> 'unsigned int' prefix '++'
|   |     | |       | `-DeclRefExpr 0x21be2c58238 <col:23> 'unsigned int' lvalue Var 0x21be2c57ed8 'ctr' 'unsigned int'
|   |     | |       |-CompoundAssignOperator 0x21be2c587c8 <line:1080:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     | |       | |-DeclRefExpr 0x21be2c58780 <col:21> 'unsigned char *' lvalue ParmVar 0x21be2c57840 'out' 'unsigned char *'
|   |     | |       | `-IntegerLiteral 0x21be2c587a0 <col:28> 'int' 16
|   |     | |       |-CompoundAssignOperator 0x21be2c58840 <line:1081:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |       | |-DeclRefExpr 0x21be2c587f8 <col:21> 'const unsigned char *' lvalue ParmVar 0x21be2c57790 'in' 'const unsigned char *'
|   |     | |       | `-IntegerLiteral 0x21be2c58818 <col:27> 'int' 16
|   |     | |       `-CompoundAssignOperator 0x21be2c588d0 <line:1082:21, col:28> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |         |-DeclRefExpr 0x21be2c58870 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   |     | |         `-ImplicitCastExpr 0x21be2c588b8 <col:28> 'unsigned long long' <IntegralCast>
|   |     | |           `-IntegerLiteral 0x21be2c58890 <col:28> 'int' 16
|   |     | |-IfStmt 0x21be2c58f28 <line:1109:13, line:1124:13>
|   |     | | |-ImplicitCastExpr 0x21be2c58a98 <line:1109:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x21be2c58a78 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   |     | | `-CompoundStmt 0x21be2c58f08 <col:22, line:1124:13>
|   |     | |   |-UnaryOperator 0x21be2c58af0 <line:1111:17, col:19> 'unsigned int' prefix '++'
|   |     | |   | `-DeclRefExpr 0x21be2c58ad0 <col:19> 'unsigned int' lvalue Var 0x21be2c57ed8 'ctr' 'unsigned int'
|   |     | |   `-WhileStmt 0x21be2c58ef0 <line:1120:17, line:1123:17>
|   |     | |     |-UnaryOperator 0x21be2c58d28 <line:1120:24, col:27> 'size_t':'unsigned long long' postfix '--'
|   |     | |     | `-DeclRefExpr 0x21be2c58d08 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   |     | |     `-CompoundStmt 0x21be2c58ed8 <col:31, line:1123:17>
|   |     | |       `-UnaryOperator 0x21be2c58ec0 <line:1122:21, col:23> 'unsigned int' prefix '++'
|   |     | |         `-DeclRefExpr 0x21be2c58ea0 <col:23> 'unsigned int' lvalue Var 0x21be2c57e58 'n' 'unsigned int'
|   |     | `-ReturnStmt 0x21be2c58f88 <line:1127:13, col:20>
|   |     |   `-IntegerLiteral 0x21be2c58f60 <col:20> 'int' 0
|   |     `-IntegerLiteral 0x21be2c58fd0 <line:1128:18> 'int' 0
|   |-ForStmt 0x21be2c54818 <line:1131:5, line:1148:5>
|   | |-BinaryOperator 0x21be2c54080 <line:1131:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x21be2c59048 <col:10> 'size_t':'unsigned long long' lvalue Var 0x21be2c57f80 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x21be2c59090 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x21be2c59068 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x21be2c54110 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x21be2c540e0 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21be2c540a0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x21be2c57f80 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x21be2c540f8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21be2c540c0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c578b8 'len' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x21be2c54150 <col:26, col:28> 'size_t':'unsigned long long' prefix '++'
|   | | `-DeclRefExpr 0x21be2c54130 <col:28> 'size_t':'unsigned long long' lvalue Var 0x21be2c57f80 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x21be2c547f8 <col:31, line:1148:5>
|   |   |-IfStmt 0x21be2c54470 <line:1132:9, line:1143:9>
|   |   | |-BinaryOperator 0x21be2c541e0 <line:1132:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x21be2c541b0 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x21be2c54168 <col:13> 'unsigned int' lvalue Var 0x21be2c57e58 'n' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x21be2c541c8 <col:18> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x21be2c54188 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x21be2c54458 <col:21, line:1143:9>
|   |   |   `-UnaryOperator 0x21be2c54240 <line:1134:13, col:15> 'unsigned int' prefix '++'
|   |   |     `-DeclRefExpr 0x21be2c54220 <col:15> 'unsigned int' lvalue Var 0x21be2c57ed8 'ctr' 'unsigned int'
|   |   `-BinaryOperator 0x21be2c54720 <line:1145:9, col:23> 'unsigned int' '='
|   |     |-DeclRefExpr 0x21be2c545e8 <col:9> 'unsigned int' lvalue Var 0x21be2c57e58 'n' 'unsigned int'
|   |     `-BinaryOperator 0x21be2c54700 <col:13, col:23> 'unsigned int' '%'
|   |       |-ParenExpr 0x21be2c546a0 <col:13, col:19> 'unsigned int'
|   |       | `-BinaryOperator 0x21be2c54680 <col:14, col:18> 'unsigned int' '+'
|   |       |   |-ImplicitCastExpr 0x21be2c54650 <col:14> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x21be2c54608 <col:14> 'unsigned int' lvalue Var 0x21be2c57e58 'n' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x21be2c54668 <col:18> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x21be2c54628 <col:18> 'int' 1
|   |       `-ImplicitCastExpr 0x21be2c546e8 <col:23> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c546c0 <col:23> 'int' 16
|   `-ReturnStmt 0x21be2c54898 <line:1151:5, col:12>
|     `-IntegerLiteral 0x21be2c54870 <col:12> 'int' 0
|-FunctionDecl 0x21be2c54b50 <line:1154:1, line:1344:1> line:1154:5 invalid CRYPTO_gcm128_decrypt 'int (int *, const unsigned char *, unsigned char *, size_t)'
| |-ParmVarDecl 0x21be2c54928 <col:27, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x21be2c549a8 <line:1155:27, col:48> col:48 used in 'const unsigned char *'
| |-ParmVarDecl 0x21be2c54a28 <col:52, col:67> col:67 used out 'unsigned char *'
| |-ParmVarDecl 0x21be2c54aa0 <line:1156:27, col:34> col:34 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x21be2c5fc28 <line:1157:1, line:1344:1>
|   |-DeclStmt 0x21be2c54f78 <line:1158:5, line:1161:24>
|   | |-RecordDecl 0x21be2c54c28 <line:1158:11, line:1161:5> line:1158:11 union definition
|   | | |-FieldDecl 0x21be2c54cf8 <line:1159:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x21be2c54d60 <line:1160:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x21be2c54e18 <line:1158:5, line:1161:23> col:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:1158:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:1158:11)' cinit
|   |   `-InitListExpr 0x21be2c54f00 <col:19, col:23> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:1158:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:1158:11)' field Field 0x21be2c54cf8 'one' 'long'
|   |     `-ImplicitCastExpr 0x21be2c54f48 <col:21> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x21be2c54e80 <col:21> 'int' 1
|   |-DeclStmt 0x21be2c510d0 <line:1162:5, col:24>
|   | |-VarDecl 0x21be2c54fa8 <col:5, col:18> col:18 used n 'unsigned int'
|   | `-VarDecl 0x21be2c51050 <col:5, col:21> col:21 used ctr 'unsigned int'
|   |-DeclStmt 0x21be2c51160 <line:1163:5, col:13>
|   | `-VarDecl 0x21be2c510f8 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x21be2c51218 <line:1164:5, col:29>
|   | `-VarDecl 0x21be2c51188 <col:5, col:9> col:9 used mlen 'u64':'unsigned long long'
|   |-DeclStmt 0x21be2c512b0 <line:1166:5, col:25>
|   | `-VarDecl 0x21be2c51248 <col:5, col:11> col:11 used key 'void *'
|   |-CompoundAssignOperator 0x21be2c51350 <line:1175:5, col:13> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-DeclRefExpr 0x21be2c512c8 <col:5> 'u64':'unsigned long long' lvalue Var 0x21be2c51188 'mlen' 'u64':'unsigned long long'
|   | `-ImplicitCastExpr 0x21be2c51338 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x21be2c51300 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x21be2c516e8 <line:1176:5, line:1177:17>
|   | |-BinaryOperator 0x21be2c51678 <line:1176:9, col:72> 'int' '||'
|   | | |-BinaryOperator 0x21be2c514c8 <col:9, col:36> 'int' '>'
|   | | | |-ImplicitCastExpr 0x21be2c514b0 <col:9> 'u64':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x21be2c51380 <col:9> 'u64':'unsigned long long' lvalue Var 0x21be2c51188 'mlen' 'u64':'unsigned long long'
|   | | | `-ParenExpr 0x21be2c51490 <col:16, col:36> 'unsigned long long'
|   | | |   `-BinaryOperator 0x21be2c51470 <col:17, col:34> 'unsigned long long' '-'
|   | | |     |-ParenExpr 0x21be2c51410 <col:17, col:30> 'unsigned long long'
|   | | |     | `-BinaryOperator 0x21be2c513f0 <<scratch space>:299:1, .//openssl//file_jk/after\crypto\modes\gcm128.c:1176:28> 'unsigned long long' '<<'
|   | | |     |   |-IntegerLiteral 0x21be2c513a0 <<scratch space>:299:1> 'unsigned long long' 1
|   | | |     |   `-IntegerLiteral 0x21be2c513c8 <.//openssl//file_jk/after\crypto\modes\gcm128.c:1176:28> 'int' 36
|   | | |     `-ImplicitCastExpr 0x21be2c51458 <col:34> 'unsigned long long' <IntegralCast>
|   | | |       `-IntegerLiteral 0x21be2c51430 <col:34> 'int' 32
|   | | `-ParenExpr 0x21be2c51658 <col:41, col:72> 'int'
|   | |   `-BinaryOperator 0x21be2c51638 <col:42, col:69> 'int' '&&'
|   | |     |-BinaryOperator 0x21be2c51588 <col:42, col:57> 'int' '=='
|   | |     | |-UnaryExprOrTypeTraitExpr 0x21be2c51528 <col:42, col:52> 'unsigned long long' sizeof
|   | |     | | `-ParenExpr 0x21be2c51508 <col:48, col:52> 'size_t':'unsigned long long' lvalue
|   | |     | |   `-DeclRefExpr 0x21be2c514e8 <col:49> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long' non_odr_use_unevaluated
|   | |     | `-ImplicitCastExpr 0x21be2c51570 <col:57> 'unsigned long long' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x21be2c51548 <col:57> 'int' 8
|   | |     `-BinaryOperator 0x21be2c51618 <col:62, col:69> 'int' '<'
|   | |       |-ImplicitCastExpr 0x21be2c515e8 <col:62> 'u64':'unsigned long long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21be2c515a8 <col:62> 'u64':'unsigned long long' lvalue Var 0x21be2c51188 'mlen' 'u64':'unsigned long long'
|   | |       `-ImplicitCastExpr 0x21be2c51600 <col:69> 'size_t':'unsigned long long' <LValueToRValue>
|   | |         `-DeclRefExpr 0x21be2c515c8 <col:69> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x21be2c516d8 <line:1177:9, col:17>
|   |   `-UnaryOperator 0x21be2c516c0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21be2c51698 <col:17> 'int' 1
|   |-IfStmt 0x21be2c517b8 <line:1180:5, line:1184:5>
|   | |-OpaqueValueExpr 0x21be2c517a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21be2c51790 <line:1180:20, line:1184:5>
|   |-IfStmt 0x21be2c5f238 <line:1197:5, line:1318:5>
|   | |-BinaryOperator 0x21be2c51a20 <line:1197:9, col:32> 'int' '=='
|   | | |-BinaryOperator 0x21be2c519c0 <col:9, col:27> 'unsigned long long' '%'
|   | | | |-ImplicitCastExpr 0x21be2c519a8 <col:9> 'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x21be2c51950 <col:9> 'int' 16
|   | | | `-UnaryExprOrTypeTraitExpr 0x21be2c51988 <col:14, col:27> 'unsigned long long' sizeof 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x21be2c51a08 <col:32> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x21be2c519e0 <col:32> 'int' 0
|   | `-CompoundStmt 0x21be2c5f220 <col:35, line:1318:5>
|   |   `-DoStmt 0x21be2c5f200 <line:1198:9, line:1317:19>
|   |     |-CompoundStmt 0x21be2c5f1a0 <line:1198:12, line:1317:9>
|   |     | |-IfStmt 0x21be2c520d8 <line:1199:13, line:1213:13>
|   |     | | |-ImplicitCastExpr 0x21be2c51a60 <line:1199:17> 'unsigned int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x21be2c51a40 <col:17> 'unsigned int' lvalue Var 0x21be2c54fa8 'n' 'unsigned int'
|   |     | | `-CompoundStmt 0x21be2c520b8 <col:20, line:1213:13>
|   |     | |   |-WhileStmt 0x21be2c51f38 <line:1200:17, line:1206:17>
|   |     | |   | |-BinaryOperator 0x21be2c51ae8 <line:1200:24, col:29> 'int' '&&'
|   |     | |   | | |-ImplicitCastExpr 0x21be2c51ab8 <col:24> 'unsigned int' <LValueToRValue>
|   |     | |   | | | `-DeclRefExpr 0x21be2c51a78 <col:24> 'unsigned int' lvalue Var 0x21be2c54fa8 'n' 'unsigned int'
|   |     | |   | | `-ImplicitCastExpr 0x21be2c51ad0 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   | |   `-DeclRefExpr 0x21be2c51a98 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   |     | |   | `-CompoundStmt 0x21be2c51f10 <col:34, line:1206:17>
|   |     | |   |   |-DeclStmt 0x21be2c51c48 <line:1201:21, col:35>
|   |     | |   |   | `-VarDecl 0x21be2c51b18 <col:21, col:34> col:24 used c 'u8':'unsigned char' cinit
|   |     | |   |   |   `-ImplicitCastExpr 0x21be2c51c30 <col:28, col:34> 'unsigned char' <LValueToRValue>
|   |     | |   |   |     `-UnaryOperator 0x21be2c51c18 <col:28, col:34> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   |   |       `-ParenExpr 0x21be2c51bf8 <col:29, col:34> 'const unsigned char *'
|   |     | |   |   |         `-UnaryOperator 0x21be2c51be0 <col:30, col:32> 'const unsigned char *' postfix '++'
|   |     | |   |   |           `-DeclRefExpr 0x21be2c51ba8 <col:30> 'const unsigned char *' lvalue ParmVar 0x21be2c549a8 'in' 'const unsigned char *'
|   |     | |   |   |-UnaryOperator 0x21be2c51da0 <line:1204:21, col:23> 'size_t':'unsigned long long' prefix '--'
|   |     | |   |   | `-DeclRefExpr 0x21be2c51d80 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   |     | |   |   `-BinaryOperator 0x21be2c51ef0 <line:1205:21, col:35> 'unsigned int' '='
|   |     | |   |     |-DeclRefExpr 0x21be2c51db8 <col:21> 'unsigned int' lvalue Var 0x21be2c54fa8 'n' 'unsigned int'
|   |     | |   |     `-BinaryOperator 0x21be2c51ed0 <col:25, col:35> 'unsigned int' '%'
|   |     | |   |       |-ParenExpr 0x21be2c51e70 <col:25, col:31> 'unsigned int'
|   |     | |   |       | `-BinaryOperator 0x21be2c51e50 <col:26, col:30> 'unsigned int' '+'
|   |     | |   |       |   |-ImplicitCastExpr 0x21be2c51e20 <col:26> 'unsigned int' <LValueToRValue>
|   |     | |   |       |   | `-DeclRefExpr 0x21be2c51dd8 <col:26> 'unsigned int' lvalue Var 0x21be2c54fa8 'n' 'unsigned int'
|   |     | |   |       |   `-ImplicitCastExpr 0x21be2c51e38 <col:30> 'unsigned int' <IntegralCast>
|   |     | |   |       |     `-IntegerLiteral 0x21be2c51df8 <col:30> 'int' 1
|   |     | |   |       `-ImplicitCastExpr 0x21be2c51eb8 <col:35> 'unsigned int' <IntegralCast>
|   |     | |   |         `-IntegerLiteral 0x21be2c51e90 <col:35> 'int' 16
|   |     | |   `-IfStmt 0x21be2c52090 <line:1207:17, line:1212:17> has_else
|   |     | |     |-BinaryOperator 0x21be2c51fc8 <line:1207:21, col:26> 'int' '=='
|   |     | |     | |-ImplicitCastExpr 0x21be2c51f98 <col:21> 'unsigned int' <LValueToRValue>
|   |     | |     | | `-DeclRefExpr 0x21be2c51f50 <col:21> 'unsigned int' lvalue Var 0x21be2c54fa8 'n' 'unsigned int'
|   |     | |     | `-ImplicitCastExpr 0x21be2c51fb0 <col:26> 'unsigned int' <IntegralCast>
|   |     | |     |   `-IntegerLiteral 0x21be2c51f70 <col:26> 'int' 0
|   |     | |     |-NullStmt 0x21be2c52088 <line:553:28>
|   |     | |     `-CompoundStmt 0x21be2c52070 <line:1209:22, line:1212:17>
|   |     | |       `-ReturnStmt 0x21be2c52060 <line:1211:21, col:28>
|   |     | |         `-IntegerLiteral 0x21be2c52028 <col:28> 'int' 0
|   |     | |-WhileStmt 0x21be2c52ed8 <line:1220:13, line:1245:13>
|   |     | | |-BinaryOperator 0x21be2c521d0 <line:1220:20, line:561:36> 'int' '>='
|   |     | | | |-ImplicitCastExpr 0x21be2c521a0 <line:1220:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x21be2c520f0 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x21be2c521b8 <line:561:29, col:36> 'unsigned long long' <IntegralCast>
|   |     | | |   `-ParenExpr 0x21be2c52180 <col:29, col:36> 'int'
|   |     | | |     `-BinaryOperator 0x21be2c52160 <col:30, col:32> 'int' '*'
|   |     | | |       |-IntegerLiteral 0x21be2c52110 <col:30> 'int' 3
|   |     | | |       `-IntegerLiteral 0x21be2c52138 <col:32> 'int' 1024
|   |     | | `-CompoundStmt 0x21be2c52eb0 <line:1220:40, line:1245:13>
|   |     | |   |-DeclStmt 0x21be2c52310 <line:1221:17, col:39>
|   |     | |   | `-VarDecl 0x21be2c52200 <col:17, line:561:36> line:1221:24 used j 'size_t':'unsigned long long' cinit
|   |     | |   |   `-ImplicitCastExpr 0x21be2c522f8 <line:561:29, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |     | |   |     `-ParenExpr 0x21be2c522d8 <col:29, col:36> 'int'
|   |     | |   |       `-BinaryOperator 0x21be2c522b8 <col:30, col:32> 'int' '*'
|   |     | |   |         |-IntegerLiteral 0x21be2c52268 <col:30> 'int' 3
|   |     | |   |         `-IntegerLiteral 0x21be2c52290 <col:32> 'int' 1024
|   |     | |   |-WhileStmt 0x21be2c52da0 <line:1224:17, line:1243:17>
|   |     | |   | |-ImplicitCastExpr 0x21be2c52430 <line:1224:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   | | `-DeclRefExpr 0x21be2c523f8 <col:24> 'size_t':'unsigned long long' lvalue Var 0x21be2c52200 'j' 'size_t':'unsigned long long'
|   |     | |   | `-CompoundStmt 0x21be2c52d60 <col:27, line:1243:17>
|   |     | |   |   |-DeclStmt 0x21be2c52530 <line:1225:21, col:50>
|   |     | |   |   | `-VarDecl 0x21be2c52458 <col:21, col:47> col:29 used out_t 'size_t *' cinit
|   |     | |   |   |   `-CStyleCastExpr 0x21be2c52508 <col:37, col:47> 'size_t *' <BitCast>
|   |     | |   |   |     `-ImplicitCastExpr 0x21be2c524f0 <col:47> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     | |   |   |       `-DeclRefExpr 0x21be2c524c0 <col:47> 'unsigned char *' lvalue ParmVar 0x21be2c54a28 'out' 'unsigned char *'
|   |     | |   |   |-DeclStmt 0x21be2c52630 <line:1226:21, col:60>
|   |     | |   |   | `-VarDecl 0x21be2c52558 <col:21, col:58> col:35 used in_t 'const size_t *' cinit
|   |     | |   |   |   `-CStyleCastExpr 0x21be2c52608 <col:42, col:58> 'const size_t *' <BitCast>
|   |     | |   |   |     `-ImplicitCastExpr 0x21be2c525f0 <col:58> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     | |   |   |       `-DeclRefExpr 0x21be2c525c0 <col:58> 'const unsigned char *' lvalue ParmVar 0x21be2c549a8 'in' 'const unsigned char *'
|   |     | |   |   |-UnaryOperator 0x21be2c526a0 <line:1229:21, col:23> 'unsigned int' prefix '++'
|   |     | |   |   | `-DeclRefExpr 0x21be2c52680 <col:23> 'unsigned int' lvalue Var 0x21be2c51050 'ctr' 'unsigned int'
|   |     | |   |   |-CompoundAssignOperator 0x21be2c52c28 <line:1240:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     | |   |   | |-DeclRefExpr 0x21be2c52be0 <col:21> 'unsigned char *' lvalue ParmVar 0x21be2c54a28 'out' 'unsigned char *'
|   |     | |   |   | `-IntegerLiteral 0x21be2c52c00 <col:28> 'int' 16
|   |     | |   |   |-CompoundAssignOperator 0x21be2c52ca0 <line:1241:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |   |   | |-DeclRefExpr 0x21be2c52c58 <col:21> 'const unsigned char *' lvalue ParmVar 0x21be2c549a8 'in' 'const unsigned char *'
|   |     | |   |   | `-IntegerLiteral 0x21be2c52c78 <col:27> 'int' 16
|   |     | |   |   `-CompoundAssignOperator 0x21be2c52d30 <line:1242:21, col:26> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |   |     |-DeclRefExpr 0x21be2c52cd0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x21be2c52200 'j' 'size_t':'unsigned long long'
|   |     | |   |     `-ImplicitCastExpr 0x21be2c52d18 <col:26> 'unsigned long long' <IntegralCast>
|   |     | |   |       `-IntegerLiteral 0x21be2c52cf0 <col:26> 'int' 16
|   |     | |   `-CompoundAssignOperator 0x21be2c52e80 <line:1244:17, line:561:36> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |     |-DeclRefExpr 0x21be2c52db8 <line:1244:17> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   |     | |     `-ImplicitCastExpr 0x21be2c52e68 <line:561:29, col:36> 'unsigned long long' <IntegralCast>
|   |     | |       `-ParenExpr 0x21be2c52e48 <col:29, col:36> 'int'
|   |     | |         `-BinaryOperator 0x21be2c52e28 <col:30, col:32> 'int' '*'
|   |     | |           |-IntegerLiteral 0x21be2c52dd8 <col:30> 'int' 3
|   |     | |           `-IntegerLiteral 0x21be2c52e00 <col:32> 'int' 1024
|   |     | |-IfStmt 0x21be2c5bb20 <line:1247:13, line:1269:13>
|   |     | | |-ParenExpr 0x21be2c53020 <line:1247:17, col:41> 'size_t':'unsigned long long'
|   |     | | | `-BinaryOperator 0x21be2c53000 <col:18, col:40> 'size_t':'unsigned long long' '='
|   |     | | |   |-DeclRefExpr 0x21be2c52ef0 <col:18> 'size_t':'unsigned long long' lvalue Var 0x21be2c510f8 'i' 'size_t':'unsigned long long'
|   |     | | |   `-ParenExpr 0x21be2c52fe0 <col:22, col:40> 'unsigned long long'
|   |     | | |     `-BinaryOperator 0x21be2c52fc0 <col:23, col:38> 'unsigned long long' '&'
|   |     | | |       |-ImplicitCastExpr 0x21be2c52fa8 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |       | `-DeclRefExpr 0x21be2c52f10 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   |     | | |       `-CStyleCastExpr 0x21be2c52f80 <col:29, col:38> 'size_t':'unsigned long long' <IntegralCast>
|   |     | | |         `-UnaryOperator 0x21be2c52f58 <col:37, col:38> 'int' prefix '-'
|   |     | | |           `-IntegerLiteral 0x21be2c52f30 <col:38> 'int' 16
|   |     | | `-CompoundStmt 0x21be2c5bb08 <col:44, line:1269:13>
|   |     | |   `-WhileStmt 0x21be2c5baf0 <line:1249:17, line:1268:17>
|   |     | |     |-BinaryOperator 0x21be2c5b1a8 <line:1249:24, col:31> 'int' '>='
|   |     | |     | |-ImplicitCastExpr 0x21be2c5b178 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | | `-DeclRefExpr 0x21be2c5b130 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   |     | |     | `-ImplicitCastExpr 0x21be2c5b190 <col:31> 'unsigned long long' <IntegralCast>
|   |     | |     |   `-IntegerLiteral 0x21be2c5b150 <col:31> 'int' 16
|   |     | |     `-CompoundStmt 0x21be2c5bab0 <col:35, line:1268:17>
|   |     | |       |-DeclStmt 0x21be2c5b2b0 <line:1250:21, col:50>
|   |     | |       | `-VarDecl 0x21be2c5b1d8 <col:21, col:47> col:29 used out_t 'size_t *' cinit
|   |     | |       |   `-CStyleCastExpr 0x21be2c5b288 <col:37, col:47> 'size_t *' <BitCast>
|   |     | |       |     `-ImplicitCastExpr 0x21be2c5b270 <col:47> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     | |       |       `-DeclRefExpr 0x21be2c5b240 <col:47> 'unsigned char *' lvalue ParmVar 0x21be2c54a28 'out' 'unsigned char *'
|   |     | |       |-DeclStmt 0x21be2c5b3b0 <line:1251:21, col:60>
|   |     | |       | `-VarDecl 0x21be2c5b2d8 <col:21, col:58> col:35 used in_t 'const size_t *' cinit
|   |     | |       |   `-CStyleCastExpr 0x21be2c5b388 <col:42, col:58> 'const size_t *' <BitCast>
|   |     | |       |     `-ImplicitCastExpr 0x21be2c5b370 <col:58> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     | |       |       `-DeclRefExpr 0x21be2c5b340 <col:58> 'const unsigned char *' lvalue ParmVar 0x21be2c549a8 'in' 'const unsigned char *'
|   |     | |       |-UnaryOperator 0x21be2c5b408 <line:1254:21, col:23> 'unsigned int' prefix '++'
|   |     | |       | `-DeclRefExpr 0x21be2c5b3e8 <col:23> 'unsigned int' lvalue Var 0x21be2c51050 'ctr' 'unsigned int'
|   |     | |       |-CompoundAssignOperator 0x21be2c5b978 <line:1265:21, col:28> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     | |       | |-DeclRefExpr 0x21be2c5b930 <col:21> 'unsigned char *' lvalue ParmVar 0x21be2c54a28 'out' 'unsigned char *'
|   |     | |       | `-IntegerLiteral 0x21be2c5b950 <col:28> 'int' 16
|   |     | |       |-CompoundAssignOperator 0x21be2c5b9f0 <line:1266:21, col:27> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |       | |-DeclRefExpr 0x21be2c5b9a8 <col:21> 'const unsigned char *' lvalue ParmVar 0x21be2c549a8 'in' 'const unsigned char *'
|   |     | |       | `-IntegerLiteral 0x21be2c5b9c8 <col:27> 'int' 16
|   |     | |       `-CompoundAssignOperator 0x21be2c5ba80 <line:1267:21, col:28> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     | |         |-DeclRefExpr 0x21be2c5ba20 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   |     | |         `-ImplicitCastExpr 0x21be2c5ba68 <col:28> 'unsigned long long' <IntegralCast>
|   |     | |           `-IntegerLiteral 0x21be2c5ba40 <col:28> 'int' 16
|   |     | |-IfStmt 0x21be2c5f130 <line:1296:13, line:1313:13>
|   |     | | |-ImplicitCastExpr 0x21be2c5bb58 <line:1296:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x21be2c5bb38 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   |     | | `-CompoundStmt 0x21be2c5c0d0 <col:22, line:1313:13>
|   |     | |   |-UnaryOperator 0x21be2c5bbb0 <line:1298:17, col:19> 'unsigned int' prefix '++'
|   |     | |   | `-DeclRefExpr 0x21be2c5bb90 <col:19> 'unsigned int' lvalue Var 0x21be2c51050 'ctr' 'unsigned int'
|   |     | |   `-WhileStmt 0x21be2c5c0b8 <line:1307:17, line:1312:17>
|   |     | |     |-UnaryOperator 0x21be2c5bde8 <line:1307:24, col:27> 'size_t':'unsigned long long' postfix '--'
|   |     | |     | `-DeclRefExpr 0x21be2c5bdc8 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   |     | |     `-CompoundStmt 0x21be2c5c098 <col:31, line:1312:17>
|   |     | |       |-DeclStmt 0x21be2c5bf20 <line:1308:21, col:33>
|   |     | |       | `-VarDecl 0x21be2c5be10 <col:21, col:32> col:24 used c 'u8':'unsigned char' cinit
|   |     | |       |   `-ImplicitCastExpr 0x21be2c5bf08 <col:28, col:32> 'unsigned char' <LValueToRValue>
|   |     | |       |     `-ArraySubscriptExpr 0x21be2c5bee8 <col:28, col:32> 'const unsigned char' lvalue
|   |     | |       |       |-ImplicitCastExpr 0x21be2c5beb8 <col:28> 'const unsigned char *' <LValueToRValue>
|   |     | |       |       | `-DeclRefExpr 0x21be2c5be78 <col:28> 'const unsigned char *' lvalue ParmVar 0x21be2c549a8 'in' 'const unsigned char *'
|   |     | |       |       `-ImplicitCastExpr 0x21be2c5bed0 <col:31> 'unsigned int' <LValueToRValue>
|   |     | |       |         `-DeclRefExpr 0x21be2c5be98 <col:31> 'unsigned int' lvalue Var 0x21be2c54fa8 'n' 'unsigned int'
|   |     | |       `-UnaryOperator 0x21be2c5c080 <line:1311:21, col:23> 'unsigned int' prefix '++'
|   |     | |         `-DeclRefExpr 0x21be2c5c060 <col:23> 'unsigned int' lvalue Var 0x21be2c54fa8 'n' 'unsigned int'
|   |     | `-ReturnStmt 0x21be2c5f190 <line:1316:13, col:20>
|   |     |   `-IntegerLiteral 0x21be2c5f168 <col:20> 'int' 0
|   |     `-IntegerLiteral 0x21be2c5f1d8 <line:1317:18> 'int' 0
|   |-ForStmt 0x21be2c5fb98 <line:1320:5, line:1340:5>
|   | |-BinaryOperator 0x21be2c5f2b0 <line:1320:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x21be2c5f250 <col:10> 'size_t':'unsigned long long' lvalue Var 0x21be2c510f8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x21be2c5f298 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x21be2c5f270 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x21be2c5f340 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x21be2c5f310 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21be2c5f2d0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x21be2c510f8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x21be2c5f328 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21be2c5f2f0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c54aa0 'len' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x21be2c5f380 <col:26, col:28> 'size_t':'unsigned long long' prefix '++'
|   | | `-DeclRefExpr 0x21be2c5f360 <col:28> 'size_t':'unsigned long long' lvalue Var 0x21be2c510f8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x21be2c5fb68 <col:31, line:1340:5>
|   |   |-DeclStmt 0x21be2c5f410 <line:1321:9, col:13>
|   |   | `-VarDecl 0x21be2c5f3a8 <col:9, col:12> col:12 used c 'u8':'unsigned char'
|   |   |-IfStmt 0x21be2c5f730 <line:1322:9, line:1333:9>
|   |   | |-BinaryOperator 0x21be2c5f4a0 <line:1322:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x21be2c5f470 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x21be2c5f428 <col:13> 'unsigned int' lvalue Var 0x21be2c54fa8 'n' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x21be2c5f488 <col:18> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x21be2c5f448 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x21be2c5f718 <col:21, line:1333:9>
|   |   |   `-UnaryOperator 0x21be2c5f500 <line:1324:13, col:15> 'unsigned int' prefix '++'
|   |   |     `-DeclRefExpr 0x21be2c5f4e0 <col:15> 'unsigned int' lvalue Var 0x21be2c51050 'ctr' 'unsigned int'
|   |   |-BinaryOperator 0x21be2c5f828 <line:1334:9, col:17> 'u8':'unsigned char' '='
|   |   | |-DeclRefExpr 0x21be2c5f748 <col:9> 'u8':'unsigned char' lvalue Var 0x21be2c5f3a8 'c' 'u8':'unsigned char'
|   |   | `-ImplicitCastExpr 0x21be2c5f810 <col:13, col:17> 'unsigned char' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x21be2c5f7f0 <col:13, col:17> 'const unsigned char' lvalue
|   |   |     |-ImplicitCastExpr 0x21be2c5f7c0 <col:13> 'const unsigned char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x21be2c5f780 <col:13> 'const unsigned char *' lvalue ParmVar 0x21be2c549a8 'in' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x21be2c5f7d8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x21be2c5f7a0 <col:16> 'size_t':'unsigned long long' lvalue Var 0x21be2c510f8 'i' 'size_t':'unsigned long long'
|   |   `-BinaryOperator 0x21be2c5fa90 <line:1337:9, col:23> 'unsigned int' '='
|   |     |-DeclRefExpr 0x21be2c5f958 <col:9> 'unsigned int' lvalue Var 0x21be2c54fa8 'n' 'unsigned int'
|   |     `-BinaryOperator 0x21be2c5fa70 <col:13, col:23> 'unsigned int' '%'
|   |       |-ParenExpr 0x21be2c5fa10 <col:13, col:19> 'unsigned int'
|   |       | `-BinaryOperator 0x21be2c5f9f0 <col:14, col:18> 'unsigned int' '+'
|   |       |   |-ImplicitCastExpr 0x21be2c5f9c0 <col:14> 'unsigned int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x21be2c5f978 <col:14> 'unsigned int' lvalue Var 0x21be2c54fa8 'n' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x21be2c5f9d8 <col:18> 'unsigned int' <IntegralCast>
|   |       |     `-IntegerLiteral 0x21be2c5f998 <col:18> 'int' 1
|   |       `-ImplicitCastExpr 0x21be2c5fa58 <col:23> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x21be2c5fa30 <col:23> 'int' 16
|   `-ReturnStmt 0x21be2c5fc18 <line:1343:5, col:12>
|     `-IntegerLiteral 0x21be2c5fbf0 <col:12> 'int' 0
|-FunctionDecl 0x21be2c60000 <line:1346:1, line:1468:1> line:1346:5 invalid CRYPTO_gcm128_encrypt_ctr32 'int (int *, const unsigned char *, unsigned char *, size_t, int)'
| |-ParmVarDecl 0x21be2c5fca8 <col:33, col:49> col:49 invalid ctx 'int *'
| |-ParmVarDecl 0x21be2c5fd28 <line:1347:33, col:54> col:54 used in 'const unsigned char *'
| |-ParmVarDecl 0x21be2c5fda8 <col:58, col:73> col:73 used out 'unsigned char *'
| |-ParmVarDecl 0x21be2c5fe20 <line:1348:33, col:40> col:40 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21be2c5fea0 <col:45, col:54> col:54 invalid stream 'int'
| `-CompoundStmt 0x21be2c5da58 <line:1349:1, line:1468:1>
|   |-DeclStmt 0x21be2c59428 <line:1353:5, line:1356:24>
|   | |-RecordDecl 0x21be2c590d0 <line:1353:11, line:1356:5> line:1353:11 union definition
|   | | |-FieldDecl 0x21be2c591a8 <line:1354:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x21be2c59210 <line:1355:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x21be2c592c8 <line:1353:5, line:1356:23> col:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:1353:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:1353:11)' cinit
|   |   `-InitListExpr 0x21be2c593b0 <col:19, col:23> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:1353:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:1353:11)' field Field 0x21be2c591a8 'one' 'long'
|   |     `-ImplicitCastExpr 0x21be2c593f8 <col:21> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x21be2c59330 <col:21> 'int' 1
|   |-DeclStmt 0x21be2c59558 <line:1357:5, col:24>
|   | |-VarDecl 0x21be2c59458 <col:5, col:18> col:18 used n 'unsigned int'
|   | `-VarDecl 0x21be2c594d8 <col:5, col:21> col:21 used ctr 'unsigned int'
|   |-DeclStmt 0x21be2c595e8 <line:1358:5, col:13>
|   | `-VarDecl 0x21be2c59580 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x21be2c596a0 <line:1359:5, col:29>
|   | `-VarDecl 0x21be2c59610 <col:5, col:9> col:9 used mlen 'u64':'unsigned long long'
|   |-DeclStmt 0x21be2c59738 <line:1360:5, col:25>
|   | `-VarDecl 0x21be2c596d0 <col:5, col:11> col:11 used key 'void *'
|   |-CompoundAssignOperator 0x21be2c597d8 <line:1369:5, col:13> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-DeclRefExpr 0x21be2c59750 <col:5> 'u64':'unsigned long long' lvalue Var 0x21be2c59610 'mlen' 'u64':'unsigned long long'
|   | `-ImplicitCastExpr 0x21be2c597c0 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x21be2c59788 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x21be2c59b70 <line:1370:5, line:1371:17>
|   | |-BinaryOperator 0x21be2c59b00 <line:1370:9, col:72> 'int' '||'
|   | | |-BinaryOperator 0x21be2c59950 <col:9, col:36> 'int' '>'
|   | | | |-ImplicitCastExpr 0x21be2c59938 <col:9> 'u64':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x21be2c59808 <col:9> 'u64':'unsigned long long' lvalue Var 0x21be2c59610 'mlen' 'u64':'unsigned long long'
|   | | | `-ParenExpr 0x21be2c59918 <col:16, col:36> 'unsigned long long'
|   | | |   `-BinaryOperator 0x21be2c598f8 <col:17, col:34> 'unsigned long long' '-'
|   | | |     |-ParenExpr 0x21be2c59898 <col:17, col:30> 'unsigned long long'
|   | | |     | `-BinaryOperator 0x21be2c59878 <<scratch space>:300:1, .//openssl//file_jk/after\crypto\modes\gcm128.c:1370:28> 'unsigned long long' '<<'
|   | | |     |   |-IntegerLiteral 0x21be2c59828 <<scratch space>:300:1> 'unsigned long long' 1
|   | | |     |   `-IntegerLiteral 0x21be2c59850 <.//openssl//file_jk/after\crypto\modes\gcm128.c:1370:28> 'int' 36
|   | | |     `-ImplicitCastExpr 0x21be2c598e0 <col:34> 'unsigned long long' <IntegralCast>
|   | | |       `-IntegerLiteral 0x21be2c598b8 <col:34> 'int' 32
|   | | `-ParenExpr 0x21be2c59ae0 <col:41, col:72> 'int'
|   | |   `-BinaryOperator 0x21be2c59ac0 <col:42, col:69> 'int' '&&'
|   | |     |-BinaryOperator 0x21be2c59a10 <col:42, col:57> 'int' '=='
|   | |     | |-UnaryExprOrTypeTraitExpr 0x21be2c599b0 <col:42, col:52> 'unsigned long long' sizeof
|   | |     | | `-ParenExpr 0x21be2c59990 <col:48, col:52> 'size_t':'unsigned long long' lvalue
|   | |     | |   `-DeclRefExpr 0x21be2c59970 <col:49> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long' non_odr_use_unevaluated
|   | |     | `-ImplicitCastExpr 0x21be2c599f8 <col:57> 'unsigned long long' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x21be2c599d0 <col:57> 'int' 8
|   | |     `-BinaryOperator 0x21be2c59aa0 <col:62, col:69> 'int' '<'
|   | |       |-ImplicitCastExpr 0x21be2c59a70 <col:62> 'u64':'unsigned long long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21be2c59a30 <col:62> 'u64':'unsigned long long' lvalue Var 0x21be2c59610 'mlen' 'u64':'unsigned long long'
|   | |       `-ImplicitCastExpr 0x21be2c59a88 <col:69> 'size_t':'unsigned long long' <LValueToRValue>
|   | |         `-DeclRefExpr 0x21be2c59a50 <col:69> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x21be2c59b60 <line:1371:9, col:17>
|   |   `-UnaryOperator 0x21be2c59b48 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21be2c59b20 <col:17> 'int' 1
|   |-IfStmt 0x21be2c59c40 <line:1374:5, line:1378:5>
|   | |-OpaqueValueExpr 0x21be2c59c28 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21be2c59c18 <line:1374:20, line:1378:5>
|   |-IfStmt 0x21be2c613c0 <line:1390:5, line:1402:5>
|   | |-ImplicitCastExpr 0x21be2c59df8 <line:1390:9> 'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x21be2c59dd8 <col:9> 'unsigned int' lvalue Var 0x21be2c59458 'n' 'unsigned int'
|   | `-CompoundStmt 0x21be2c613a0 <col:12, line:1402:5>
|   |   |-WhileStmt 0x21be2c61230 <line:1391:9, line:1395:9>
|   |   | |-BinaryOperator 0x21be2c59e80 <line:1391:16, col:21> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x21be2c59e50 <col:16> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x21be2c59e10 <col:16> 'unsigned int' lvalue Var 0x21be2c59458 'n' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x21be2c59e68 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x21be2c59e30 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long'
|   |   | `-CompoundStmt 0x21be2c61210 <col:26, line:1395:9>
|   |   |   |-UnaryOperator 0x21be2c5a010 <line:1393:13, col:15> 'size_t':'unsigned long long' prefix '--'
|   |   |   | `-DeclRefExpr 0x21be2c59ff0 <col:15> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x21be2c611f0 <line:1394:13, col:27> 'unsigned int' '='
|   |   |     |-DeclRefExpr 0x21be2c5a028 <col:13> 'unsigned int' lvalue Var 0x21be2c59458 'n' 'unsigned int'
|   |   |     `-BinaryOperator 0x21be2c611d0 <col:17, col:27> 'unsigned int' '%'
|   |   |       |-ParenExpr 0x21be2c61170 <col:17, col:23> 'unsigned int'
|   |   |       | `-BinaryOperator 0x21be2c61150 <col:18, col:22> 'unsigned int' '+'
|   |   |       |   |-ImplicitCastExpr 0x21be2c5a090 <col:18> 'unsigned int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x21be2c5a048 <col:18> 'unsigned int' lvalue Var 0x21be2c59458 'n' 'unsigned int'
|   |   |       |   `-ImplicitCastExpr 0x21be2c5a0a8 <col:22> 'unsigned int' <IntegralCast>
|   |   |       |     `-IntegerLiteral 0x21be2c5a068 <col:22> 'int' 1
|   |   |       `-ImplicitCastExpr 0x21be2c611b8 <col:27> 'unsigned int' <IntegralCast>
|   |   |         `-IntegerLiteral 0x21be2c61190 <col:27> 'int' 16
|   |   `-IfStmt 0x21be2c61378 <line:1396:9, line:1401:9> has_else
|   |     |-BinaryOperator 0x21be2c612c0 <line:1396:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x21be2c61290 <col:13> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x21be2c61248 <col:13> 'unsigned int' lvalue Var 0x21be2c59458 'n' 'unsigned int'
|   |     | `-ImplicitCastExpr 0x21be2c612a8 <col:18> 'unsigned int' <IntegralCast>
|   |     |   `-IntegerLiteral 0x21be2c61268 <col:18> 'int' 0
|   |     |-NullStmt 0x21be2c61370 <line:553:28>
|   |     `-CompoundStmt 0x21be2c61358 <line:1398:14, line:1401:9>
|   |       `-ReturnStmt 0x21be2c61348 <line:1400:13, col:20>
|   |         `-IntegerLiteral 0x21be2c61320 <col:20> 'int' 0
|   |-WhileStmt 0x21be2c61d20 <line:1404:5, line:1419:5>
|   | |-BinaryOperator 0x21be2c614b8 <line:1404:12, line:561:36> 'int' '>='
|   | | |-ImplicitCastExpr 0x21be2c61488 <line:1404:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21be2c613d8 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x21be2c614a0 <line:561:29, col:36> 'unsigned long long' <IntegralCast>
|   | |   `-ParenExpr 0x21be2c61468 <col:29, col:36> 'int'
|   | |     `-BinaryOperator 0x21be2c61448 <col:30, col:32> 'int' '*'
|   | |       |-IntegerLiteral 0x21be2c613f8 <col:30> 'int' 3
|   | |       `-IntegerLiteral 0x21be2c61420 <col:32> 'int' 1024
|   | `-CompoundStmt 0x21be2c61cf0 <line:1404:32, line:1419:5>
|   |   |-CompoundAssignOperator 0x21be2c61738 <line:1406:9, col:30> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x21be2c61628 <col:9> 'unsigned int' lvalue Var 0x21be2c594d8 'ctr' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x21be2c61720 <line:561:29, line:1406:30> 'unsigned int' <IntegralCast>
|   |   |   `-BinaryOperator 0x21be2c61700 <line:561:29, line:1406:30> 'int' '/'
|   |   |     |-ParenExpr 0x21be2c616b8 <line:561:29, col:36> 'int'
|   |   |     | `-BinaryOperator 0x21be2c61698 <col:30, col:32> 'int' '*'
|   |   |     |   |-IntegerLiteral 0x21be2c61648 <col:30> 'int' 3
|   |   |     |   `-IntegerLiteral 0x21be2c61670 <col:32> 'int' 1024
|   |   |     `-IntegerLiteral 0x21be2c616d8 <line:1406:30> 'int' 16
|   |   |-CompoundAssignOperator 0x21be2c61ae8 <line:1416:9, line:561:36> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x21be2c61a38 <line:1416:9> 'unsigned char *' lvalue ParmVar 0x21be2c5fda8 'out' 'unsigned char *'
|   |   | `-ParenExpr 0x21be2c61ac8 <line:561:29, col:36> 'int'
|   |   |   `-BinaryOperator 0x21be2c61aa8 <col:30, col:32> 'int' '*'
|   |   |     |-IntegerLiteral 0x21be2c61a58 <col:30> 'int' 3
|   |   |     `-IntegerLiteral 0x21be2c61a80 <col:32> 'int' 1024
|   |   |-CompoundAssignOperator 0x21be2c61bc8 <line:1417:9, line:561:36> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x21be2c61b18 <line:1417:9> 'const unsigned char *' lvalue ParmVar 0x21be2c5fd28 'in' 'const unsigned char *'
|   |   | `-ParenExpr 0x21be2c61ba8 <line:561:29, col:36> 'int'
|   |   |   `-BinaryOperator 0x21be2c61b88 <col:30, col:32> 'int' '*'
|   |   |     |-IntegerLiteral 0x21be2c61b38 <col:30> 'int' 3
|   |   |     `-IntegerLiteral 0x21be2c61b60 <col:32> 'int' 1024
|   |   `-CompoundAssignOperator 0x21be2c61cc0 <line:1418:9, line:561:36> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     |-DeclRefExpr 0x21be2c61bf8 <line:1418:9> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x21be2c61ca8 <line:561:29, col:36> 'unsigned long long' <IntegralCast>
|   |       `-ParenExpr 0x21be2c61c88 <col:29, col:36> 'int'
|   |         `-BinaryOperator 0x21be2c61c68 <col:30, col:32> 'int' '*'
|   |           |-IntegerLiteral 0x21be2c61c18 <col:30> 'int' 3
|   |           `-IntegerLiteral 0x21be2c61c40 <col:32> 'int' 1024
|   |-IfStmt 0x21be2c5d520 <line:1421:5, line:1447:5>
|   | |-ParenExpr 0x21be2c61e80 <line:1421:9, col:33> 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x21be2c61e60 <col:10, col:32> 'size_t':'unsigned long long' '='
|   | |   |-DeclRefExpr 0x21be2c61d38 <col:10> 'size_t':'unsigned long long' lvalue Var 0x21be2c59580 'i' 'size_t':'unsigned long long'
|   | |   `-ParenExpr 0x21be2c61e40 <col:14, col:32> 'unsigned long long'
|   | |     `-BinaryOperator 0x21be2c61e20 <col:15, col:30> 'unsigned long long' '&'
|   | |       |-ImplicitCastExpr 0x21be2c61e08 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21be2c61d70 <col:15> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long'
|   | |       `-CStyleCastExpr 0x21be2c61de0 <col:21, col:30> 'size_t':'unsigned long long' <IntegralCast>
|   | |         `-UnaryOperator 0x21be2c61db8 <col:29, col:30> 'int' prefix '-'
|   | |           `-IntegerLiteral 0x21be2c61d90 <col:30> 'int' 16
|   | `-CompoundStmt 0x21be2c5d4e8 <col:36, line:1447:5>
|   |   |-DeclStmt 0x21be2c61fb0 <line:1422:9, col:26>
|   |   | `-VarDecl 0x21be2c61eb0 <col:9, col:24> col:16 used j 'size_t':'unsigned long long' cinit
|   |   |   `-BinaryOperator 0x21be2c61f90 <col:20, col:24> 'unsigned long long' '/'
|   |   |     |-ImplicitCastExpr 0x21be2c61f60 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x21be2c61f18 <col:20> 'size_t':'unsigned long long' lvalue Var 0x21be2c59580 'i' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x21be2c61f78 <col:24> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x21be2c61f38 <col:24> 'int' 16
|   |   |-CompoundAssignOperator 0x21be2c620f8 <line:1425:9, col:30> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x21be2c62060 <col:9> 'unsigned int' lvalue Var 0x21be2c594d8 'ctr' 'unsigned int'
|   |   | `-CStyleCastExpr 0x21be2c620d0 <col:16, col:30> 'unsigned int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x21be2c620b8 <col:30> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x21be2c62080 <col:30> 'size_t':'unsigned long long' lvalue Var 0x21be2c61eb0 'j' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x21be2c5d348 <line:1434:9, col:15> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x21be2c5d2f0 <col:9> 'const unsigned char *' lvalue ParmVar 0x21be2c5fd28 'in' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x21be2c5d330 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x21be2c5d310 <col:15> 'size_t':'unsigned long long' lvalue Var 0x21be2c59580 'i' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x21be2c5d3d0 <line:1435:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x21be2c5d378 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x21be2c5d3b8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x21be2c5d398 <col:16> 'size_t':'unsigned long long' lvalue Var 0x21be2c59580 'i' 'size_t':'unsigned long long'
|   |   `-CompoundAssignOperator 0x21be2c5d4b8 <line:1438:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     |-DeclRefExpr 0x21be2c5d460 <col:9> 'unsigned char *' lvalue ParmVar 0x21be2c5fda8 'out' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x21be2c5d4a0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x21be2c5d480 <col:16> 'size_t':'unsigned long long' lvalue Var 0x21be2c59580 'i' 'size_t':'unsigned long long'
|   |-IfStmt 0x21be2c5d9e8 <line:1448:5, line:1463:5>
|   | |-ImplicitCastExpr 0x21be2c5d558 <line:1448:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x21be2c5d538 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x21be2c5d9c8 <col:14, line:1463:5>
|   |   |-UnaryOperator 0x21be2c5d5b0 <line:1450:9, col:11> 'unsigned int' prefix '++'
|   |   | `-DeclRefExpr 0x21be2c5d590 <col:11> 'unsigned int' lvalue Var 0x21be2c594d8 'ctr' 'unsigned int'
|   |   `-WhileStmt 0x21be2c5d9b0 <line:1459:9, line:1462:9>
|   |     |-UnaryOperator 0x21be2c5d7e8 <line:1459:16, col:19> 'size_t':'unsigned long long' postfix '--'
|   |     | `-DeclRefExpr 0x21be2c5d7c8 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5fe20 'len' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x21be2c5d998 <col:23, line:1462:9>
|   |       `-UnaryOperator 0x21be2c5d980 <line:1461:13, col:15> 'unsigned int' prefix '++'
|   |         `-DeclRefExpr 0x21be2c5d960 <col:15> 'unsigned int' lvalue Var 0x21be2c59458 'n' 'unsigned int'
|   `-ReturnStmt 0x21be2c5da48 <line:1466:5, col:12>
|     `-IntegerLiteral 0x21be2c5da20 <col:12> 'int' 0
|-FunctionDecl 0x21be2c5dd98 <line:1470:1, line:1599:1> line:1470:5 invalid CRYPTO_gcm128_decrypt_ctr32 'int (int *, const unsigned char *, unsigned char *, size_t, int)'
| |-ParmVarDecl 0x21be2c5dae8 <col:33, col:49> col:49 invalid ctx 'int *'
| |-ParmVarDecl 0x21be2c5db68 <line:1471:33, col:54> col:54 used in 'const unsigned char *'
| |-ParmVarDecl 0x21be2c5dbe8 <col:58, col:73> col:73 used out 'unsigned char *'
| |-ParmVarDecl 0x21be2c5dc60 <line:1472:33, col:40> col:40 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21be2c5dce0 <col:45, col:54> col:54 invalid stream 'int'
| `-CompoundStmt 0x21be2c5a9b8 <line:1473:1, line:1599:1>
|   |-DeclStmt 0x21be2c5e1f0 <line:1477:5, line:1480:24>
|   | |-RecordDecl 0x21be2c5de78 <line:1477:11, line:1480:5> line:1477:11 union definition
|   | | |-FieldDecl 0x21be2c5df48 <line:1478:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x21be2c5dfb0 <line:1479:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x21be2c5e068 <line:1477:5, line:1480:23> col:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:1477:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:1477:11)' cinit
|   |   `-InitListExpr 0x21be2c5e178 <col:19, col:23> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:1477:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:1477:11)' field Field 0x21be2c5df48 'one' 'long'
|   |     `-ImplicitCastExpr 0x21be2c5e1c0 <col:21> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x21be2c5e0d0 <col:21> 'int' 1
|   |-DeclStmt 0x21be2c5e320 <line:1481:5, col:24>
|   | |-VarDecl 0x21be2c5e220 <col:5, col:18> col:18 used n 'unsigned int'
|   | `-VarDecl 0x21be2c5e2a0 <col:5, col:21> col:21 used ctr 'unsigned int'
|   |-DeclStmt 0x21be2c5e3b0 <line:1482:5, col:13>
|   | `-VarDecl 0x21be2c5e348 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x21be2c5e468 <line:1483:5, col:29>
|   | `-VarDecl 0x21be2c5e3d8 <col:5, col:9> col:9 used mlen 'u64':'unsigned long long'
|   |-DeclStmt 0x21be2c5e500 <line:1484:5, col:25>
|   | `-VarDecl 0x21be2c5e498 <col:5, col:11> col:11 used key 'void *'
|   |-CompoundAssignOperator 0x21be2c5e5a0 <line:1493:5, col:13> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-DeclRefExpr 0x21be2c5e518 <col:5> 'u64':'unsigned long long' lvalue Var 0x21be2c5e3d8 'mlen' 'u64':'unsigned long long'
|   | `-ImplicitCastExpr 0x21be2c5e588 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x21be2c5e550 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x21be2c5e938 <line:1494:5, line:1495:17>
|   | |-BinaryOperator 0x21be2c5e8c8 <line:1494:9, col:72> 'int' '||'
|   | | |-BinaryOperator 0x21be2c5e718 <col:9, col:36> 'int' '>'
|   | | | |-ImplicitCastExpr 0x21be2c5e700 <col:9> 'u64':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x21be2c5e5d0 <col:9> 'u64':'unsigned long long' lvalue Var 0x21be2c5e3d8 'mlen' 'u64':'unsigned long long'
|   | | | `-ParenExpr 0x21be2c5e6e0 <col:16, col:36> 'unsigned long long'
|   | | |   `-BinaryOperator 0x21be2c5e6c0 <col:17, col:34> 'unsigned long long' '-'
|   | | |     |-ParenExpr 0x21be2c5e660 <col:17, col:30> 'unsigned long long'
|   | | |     | `-BinaryOperator 0x21be2c5e640 <<scratch space>:301:1, .//openssl//file_jk/after\crypto\modes\gcm128.c:1494:28> 'unsigned long long' '<<'
|   | | |     |   |-IntegerLiteral 0x21be2c5e5f0 <<scratch space>:301:1> 'unsigned long long' 1
|   | | |     |   `-IntegerLiteral 0x21be2c5e618 <.//openssl//file_jk/after\crypto\modes\gcm128.c:1494:28> 'int' 36
|   | | |     `-ImplicitCastExpr 0x21be2c5e6a8 <col:34> 'unsigned long long' <IntegralCast>
|   | | |       `-IntegerLiteral 0x21be2c5e680 <col:34> 'int' 32
|   | | `-ParenExpr 0x21be2c5e8a8 <col:41, col:72> 'int'
|   | |   `-BinaryOperator 0x21be2c5e888 <col:42, col:69> 'int' '&&'
|   | |     |-BinaryOperator 0x21be2c5e7d8 <col:42, col:57> 'int' '=='
|   | |     | |-UnaryExprOrTypeTraitExpr 0x21be2c5e778 <col:42, col:52> 'unsigned long long' sizeof
|   | |     | | `-ParenExpr 0x21be2c5e758 <col:48, col:52> 'size_t':'unsigned long long' lvalue
|   | |     | |   `-DeclRefExpr 0x21be2c5e738 <col:49> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long' non_odr_use_unevaluated
|   | |     | `-ImplicitCastExpr 0x21be2c5e7c0 <col:57> 'unsigned long long' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x21be2c5e798 <col:57> 'int' 8
|   | |     `-BinaryOperator 0x21be2c5e868 <col:62, col:69> 'int' '<'
|   | |       |-ImplicitCastExpr 0x21be2c5e838 <col:62> 'u64':'unsigned long long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21be2c5e7f8 <col:62> 'u64':'unsigned long long' lvalue Var 0x21be2c5e3d8 'mlen' 'u64':'unsigned long long'
|   | |       `-ImplicitCastExpr 0x21be2c5e850 <col:69> 'size_t':'unsigned long long' <LValueToRValue>
|   | |         `-DeclRefExpr 0x21be2c5e818 <col:69> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x21be2c5e928 <line:1495:9, col:17>
|   |   `-UnaryOperator 0x21be2c5e910 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21be2c5e8e8 <col:17> 'int' 1
|   |-IfStmt 0x21be2c5ea08 <line:1498:5, line:1502:5>
|   | |-OpaqueValueExpr 0x21be2c5e9f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21be2c5e9e0 <line:1498:20, line:1502:5>
|   |-IfStmt 0x21be2c60220 <line:1514:5, line:1528:5>
|   | |-ImplicitCastExpr 0x21be2c5ebc0 <line:1514:9> 'unsigned int' <LValueToRValue>
|   | | `-DeclRefExpr 0x21be2c5eba0 <col:9> 'unsigned int' lvalue Var 0x21be2c5e220 'n' 'unsigned int'
|   | `-CompoundStmt 0x21be2c60200 <col:12, line:1528:5>
|   |   |-WhileStmt 0x21be2c5f070 <line:1515:9, line:1521:9>
|   |   | |-BinaryOperator 0x21be2c5ec48 <line:1515:16, col:21> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x21be2c5ec18 <col:16> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x21be2c5ebd8 <col:16> 'unsigned int' lvalue Var 0x21be2c5e220 'n' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x21be2c5ec30 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x21be2c5ebf8 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long'
|   |   | `-CompoundStmt 0x21be2c5f048 <col:26, line:1521:9>
|   |   |   |-DeclStmt 0x21be2c5ed80 <line:1516:13, col:27>
|   |   |   | `-VarDecl 0x21be2c5ec78 <col:13, col:26> col:16 used c 'u8':'unsigned char' cinit
|   |   |   |   `-ImplicitCastExpr 0x21be2c5ed68 <col:20, col:26> 'unsigned char' <LValueToRValue>
|   |   |   |     `-UnaryOperator 0x21be2c5ed50 <col:20, col:26> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |       `-ParenExpr 0x21be2c5ed30 <col:21, col:26> 'const unsigned char *'
|   |   |   |         `-UnaryOperator 0x21be2c5ed18 <col:22, col:24> 'const unsigned char *' postfix '++'
|   |   |   |           `-DeclRefExpr 0x21be2c5ece0 <col:22> 'const unsigned char *' lvalue ParmVar 0x21be2c5db68 'in' 'const unsigned char *'
|   |   |   |-UnaryOperator 0x21be2c5eed8 <line:1519:13, col:15> 'size_t':'unsigned long long' prefix '--'
|   |   |   | `-DeclRefExpr 0x21be2c5eeb8 <col:15> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x21be2c5f028 <line:1520:13, col:27> 'unsigned int' '='
|   |   |     |-DeclRefExpr 0x21be2c5eef0 <col:13> 'unsigned int' lvalue Var 0x21be2c5e220 'n' 'unsigned int'
|   |   |     `-BinaryOperator 0x21be2c5f008 <col:17, col:27> 'unsigned int' '%'
|   |   |       |-ParenExpr 0x21be2c5efa8 <col:17, col:23> 'unsigned int'
|   |   |       | `-BinaryOperator 0x21be2c5ef88 <col:18, col:22> 'unsigned int' '+'
|   |   |       |   |-ImplicitCastExpr 0x21be2c5ef58 <col:18> 'unsigned int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x21be2c5ef10 <col:18> 'unsigned int' lvalue Var 0x21be2c5e220 'n' 'unsigned int'
|   |   |       |   `-ImplicitCastExpr 0x21be2c5ef70 <col:22> 'unsigned int' <IntegralCast>
|   |   |       |     `-IntegerLiteral 0x21be2c5ef30 <col:22> 'int' 1
|   |   |       `-ImplicitCastExpr 0x21be2c5eff0 <col:27> 'unsigned int' <IntegralCast>
|   |   |         `-IntegerLiteral 0x21be2c5efc8 <col:27> 'int' 16
|   |   `-IfStmt 0x21be2c601d8 <line:1522:9, line:1527:9> has_else
|   |     |-BinaryOperator 0x21be2c5f100 <line:1522:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x21be2c5f0d0 <col:13> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x21be2c5f088 <col:13> 'unsigned int' lvalue Var 0x21be2c5e220 'n' 'unsigned int'
|   |     | `-ImplicitCastExpr 0x21be2c5f0e8 <col:18> 'unsigned int' <IntegralCast>
|   |     |   `-IntegerLiteral 0x21be2c5f0a8 <col:18> 'int' 0
|   |     |-NullStmt 0x21be2c601d0 <line:553:28>
|   |     `-CompoundStmt 0x21be2c601b8 <line:1524:14, line:1527:9>
|   |       `-ReturnStmt 0x21be2c601a8 <line:1526:13, col:20>
|   |         `-IntegerLiteral 0x21be2c60180 <col:20> 'int' 0
|   |-WhileStmt 0x21be2c60b80 <line:1530:5, line:1545:5>
|   | |-BinaryOperator 0x21be2c60318 <line:1530:12, line:561:36> 'int' '>='
|   | | |-ImplicitCastExpr 0x21be2c602e8 <line:1530:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21be2c60238 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x21be2c60300 <line:561:29, col:36> 'unsigned long long' <IntegralCast>
|   | |   `-ParenExpr 0x21be2c602c8 <col:29, col:36> 'int'
|   | |     `-BinaryOperator 0x21be2c602a8 <col:30, col:32> 'int' '*'
|   | |       |-IntegerLiteral 0x21be2c60258 <col:30> 'int' 3
|   | |       `-IntegerLiteral 0x21be2c60280 <col:32> 'int' 1024
|   | `-CompoundStmt 0x21be2c60b50 <line:1530:32, line:1545:5>
|   |   |-CompoundAssignOperator 0x21be2c60668 <line:1533:9, col:30> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x21be2c60558 <col:9> 'unsigned int' lvalue Var 0x21be2c5e2a0 'ctr' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x21be2c60650 <line:561:29, line:1533:30> 'unsigned int' <IntegralCast>
|   |   |   `-BinaryOperator 0x21be2c60630 <line:561:29, line:1533:30> 'int' '/'
|   |   |     |-ParenExpr 0x21be2c605e8 <line:561:29, col:36> 'int'
|   |   |     | `-BinaryOperator 0x21be2c605c8 <col:30, col:32> 'int' '*'
|   |   |     |   |-IntegerLiteral 0x21be2c60578 <col:30> 'int' 3
|   |   |     |   `-IntegerLiteral 0x21be2c605a0 <col:32> 'int' 1024
|   |   |     `-IntegerLiteral 0x21be2c60608 <line:1533:30> 'int' 16
|   |   |-CompoundAssignOperator 0x21be2c60948 <line:1542:9, line:561:36> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x21be2c60898 <line:1542:9> 'unsigned char *' lvalue ParmVar 0x21be2c5dbe8 'out' 'unsigned char *'
|   |   | `-ParenExpr 0x21be2c60928 <line:561:29, col:36> 'int'
|   |   |   `-BinaryOperator 0x21be2c60908 <col:30, col:32> 'int' '*'
|   |   |     |-IntegerLiteral 0x21be2c608b8 <col:30> 'int' 3
|   |   |     `-IntegerLiteral 0x21be2c608e0 <col:32> 'int' 1024
|   |   |-CompoundAssignOperator 0x21be2c60a28 <line:1543:9, line:561:36> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x21be2c60978 <line:1543:9> 'const unsigned char *' lvalue ParmVar 0x21be2c5db68 'in' 'const unsigned char *'
|   |   | `-ParenExpr 0x21be2c60a08 <line:561:29, col:36> 'int'
|   |   |   `-BinaryOperator 0x21be2c609e8 <col:30, col:32> 'int' '*'
|   |   |     |-IntegerLiteral 0x21be2c60998 <col:30> 'int' 3
|   |   |     `-IntegerLiteral 0x21be2c609c0 <col:32> 'int' 1024
|   |   `-CompoundAssignOperator 0x21be2c60b20 <line:1544:9, line:561:36> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     |-DeclRefExpr 0x21be2c60a58 <line:1544:9> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x21be2c60b08 <line:561:29, col:36> 'unsigned long long' <IntegralCast>
|   |       `-ParenExpr 0x21be2c60ae8 <col:29, col:36> 'int'
|   |         `-BinaryOperator 0x21be2c60ac8 <col:30, col:32> 'int' '*'
|   |           |-IntegerLiteral 0x21be2c60a78 <col:30> 'int' 3
|   |           `-IntegerLiteral 0x21be2c60aa0 <col:32> 'int' 1024
|   |-IfStmt 0x21be2c5a378 <line:1547:5, line:1576:5>
|   | |-ParenExpr 0x21be2c60ce0 <line:1547:9, col:33> 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x21be2c60cc0 <col:10, col:32> 'size_t':'unsigned long long' '='
|   | |   |-DeclRefExpr 0x21be2c60b98 <col:10> 'size_t':'unsigned long long' lvalue Var 0x21be2c5e348 'i' 'size_t':'unsigned long long'
|   | |   `-ParenExpr 0x21be2c60ca0 <col:14, col:32> 'unsigned long long'
|   | |     `-BinaryOperator 0x21be2c60c80 <col:15, col:30> 'unsigned long long' '&'
|   | |       |-ImplicitCastExpr 0x21be2c60c68 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x21be2c60bd0 <col:15> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long'
|   | |       `-CStyleCastExpr 0x21be2c60c40 <col:21, col:30> 'size_t':'unsigned long long' <IntegralCast>
|   | |         `-UnaryOperator 0x21be2c60c18 <col:29, col:30> 'int' prefix '-'
|   | |           `-IntegerLiteral 0x21be2c60bf0 <col:30> 'int' 16
|   | `-CompoundStmt 0x21be2c5a340 <col:36, line:1576:5>
|   |   |-DeclStmt 0x21be2c60e10 <line:1548:9, col:26>
|   |   | `-VarDecl 0x21be2c60d10 <col:9, col:24> col:16 used j 'size_t':'unsigned long long' cinit
|   |   |   `-BinaryOperator 0x21be2c60df0 <col:20, col:24> 'unsigned long long' '/'
|   |   |     |-ImplicitCastExpr 0x21be2c60dc0 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x21be2c60d78 <col:20> 'size_t':'unsigned long long' lvalue Var 0x21be2c5e348 'i' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x21be2c60dd8 <col:24> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x21be2c60d98 <col:24> 'int' 16
|   |   |-CompoundAssignOperator 0x21be2c60fb8 <line:1564:9, col:30> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x21be2c60f20 <col:9> 'unsigned int' lvalue Var 0x21be2c5e2a0 'ctr' 'unsigned int'
|   |   | `-CStyleCastExpr 0x21be2c60f90 <col:16, col:30> 'unsigned int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x21be2c60f78 <col:30> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x21be2c60f40 <col:30> 'size_t':'unsigned long long' lvalue Var 0x21be2c60d10 'j' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x21be2c5a200 <line:1573:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   | |-DeclRefExpr 0x21be2c5a1a8 <col:9> 'unsigned char *' lvalue ParmVar 0x21be2c5dbe8 'out' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x21be2c5a1e8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x21be2c5a1c8 <col:16> 'size_t':'unsigned long long' lvalue Var 0x21be2c5e348 'i' 'size_t':'unsigned long long'
|   |   |-CompoundAssignOperator 0x21be2c5a288 <line:1574:9, col:15> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x21be2c5a230 <col:9> 'const unsigned char *' lvalue ParmVar 0x21be2c5db68 'in' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x21be2c5a270 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x21be2c5a250 <col:15> 'size_t':'unsigned long long' lvalue Var 0x21be2c5e348 'i' 'size_t':'unsigned long long'
|   |   `-CompoundAssignOperator 0x21be2c5a310 <line:1575:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |     |-DeclRefExpr 0x21be2c5a2b8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x21be2c5a2f8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x21be2c5a2d8 <col:16> 'size_t':'unsigned long long' lvalue Var 0x21be2c5e348 'i' 'size_t':'unsigned long long'
|   |-IfStmt 0x21be2c5a948 <line:1577:5, line:1594:5>
|   | |-ImplicitCastExpr 0x21be2c5a3b0 <line:1577:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x21be2c5a390 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x21be2c5a928 <col:14, line:1594:5>
|   |   |-UnaryOperator 0x21be2c5a408 <line:1579:9, col:11> 'unsigned int' prefix '++'
|   |   | `-DeclRefExpr 0x21be2c5a3e8 <col:11> 'unsigned int' lvalue Var 0x21be2c5e2a0 'ctr' 'unsigned int'
|   |   `-WhileStmt 0x21be2c5a910 <line:1588:9, line:1593:9>
|   |     |-UnaryOperator 0x21be2c5a640 <line:1588:16, col:19> 'size_t':'unsigned long long' postfix '--'
|   |     | `-DeclRefExpr 0x21be2c5a620 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x21be2c5dc60 'len' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x21be2c5a8f0 <col:23, line:1593:9>
|   |       |-DeclStmt 0x21be2c5a778 <line:1589:13, col:25>
|   |       | `-VarDecl 0x21be2c5a668 <col:13, col:24> col:16 used c 'u8':'unsigned char' cinit
|   |       |   `-ImplicitCastExpr 0x21be2c5a760 <col:20, col:24> 'unsigned char' <LValueToRValue>
|   |       |     `-ArraySubscriptExpr 0x21be2c5a740 <col:20, col:24> 'const unsigned char' lvalue
|   |       |       |-ImplicitCastExpr 0x21be2c5a710 <col:20> 'const unsigned char *' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x21be2c5a6d0 <col:20> 'const unsigned char *' lvalue ParmVar 0x21be2c5db68 'in' 'const unsigned char *'
|   |       |       `-ImplicitCastExpr 0x21be2c5a728 <col:23> 'unsigned int' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x21be2c5a6f0 <col:23> 'unsigned int' lvalue Var 0x21be2c5e220 'n' 'unsigned int'
|   |       `-UnaryOperator 0x21be2c5a8d8 <line:1592:13, col:15> 'unsigned int' prefix '++'
|   |         `-DeclRefExpr 0x21be2c5a8b8 <col:15> 'unsigned int' lvalue Var 0x21be2c5e220 'n' 'unsigned int'
|   `-ReturnStmt 0x21be2c5a9a8 <line:1597:5, col:12>
|     `-IntegerLiteral 0x21be2c5a980 <col:12> 'int' 0
|-FunctionDecl 0x21be2c5abe8 <line:1601:1, line:1643:1> line:1601:5 invalid CRYPTO_gcm128_finish 'int (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x21be2c5aa48 <col:26, col:42> col:42 invalid ctx 'int *'
| |-ParmVarDecl 0x21be2c5aac8 <col:47, col:68> col:68 used tag 'const unsigned char *'
| |-ParmVarDecl 0x21be2c5ab40 <line:1602:26, col:33> col:33 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x21be2cbf810 <line:1603:1, line:1643:1>
|   |-DeclStmt 0x21be2c5b008 <line:1604:5, line:1607:24>
|   | |-RecordDecl 0x21be2c5acb8 <line:1604:11, line:1607:5> line:1604:11 union definition
|   | | |-FieldDecl 0x21be2c5ad88 <line:1605:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x21be2c5adf0 <line:1606:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x21be2c5aea8 <line:1604:5, line:1607:23> col:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:1604:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:1604:11)' cinit
|   |   `-InitListExpr 0x21be2c5af90 <col:19, col:23> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:1604:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:1604:11)' field Field 0x21be2c5ad88 'one' 'long'
|   |     `-ImplicitCastExpr 0x21be2c5afd8 <col:21> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x21be2c5af10 <col:21> 'int' 1
|   |-DeclStmt 0x21be2cbef98 <line:1608:5, col:34>
|   | `-VarDecl 0x21be2c5b030 <col:5, col:9> col:9 used alen 'u64':'unsigned long long'
|   |-DeclStmt 0x21be2cbf078 <line:1609:5, col:34>
|   | `-VarDecl 0x21be2cbefc0 <col:5, col:9> col:9 used clen 'u64':'unsigned long long'
|   |-IfStmt 0x21be2cbf420 <line:1617:5, line:1630:5>
|   | |-ImplicitCastExpr 0x21be2cbf118 <line:1617:9, col:19> 'char' <LValueToRValue>
|   | | `-MemberExpr 0x21be2cbf0e8 <col:9, col:19> 'const char' lvalue .little 0x21be2c5adf0
|   | |   `-DeclRefExpr 0x21be2cbf0b0 <col:9> 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:1604:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:1604:11)' lvalue Var 0x21be2c5aea8 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\gcm128.c:1604:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\gcm128.c:1604:11)'
|   | `-CompoundStmt 0x21be2cbf400 <col:27, line:1630:5>
|   |   |-BinaryOperator 0x21be2cbf278 <line:1619:9, .//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:50> 'u64':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x21be2cbf130 <.//openssl//file_jk/after\crypto\modes\gcm128.c:1619:9> 'u64':'unsigned long long' lvalue Var 0x21be2c5b030 'alen' 'u64':'unsigned long long'
|   |   | `-CallExpr 0x21be2cbf250 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:25, col:50> 'unsigned long long'
|   |   |   |-ImplicitCastExpr 0x21be2cbf238 <col:25> 'unsigned long long (*)(unsigned long long)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x21be2cbf168 <col:25> 'unsigned long long (unsigned long long)' Function 0x21be2c4be50 '_byteswap_uint64' 'unsigned long long (unsigned long long)'
|   |   |   `-CStyleCastExpr 0x21be2cbf210 <col:42, col:49> 'u64':'unsigned long long' <NoOp>
|   |   |     `-ImplicitCastExpr 0x21be2cbf1f8 <col:47, col:49> 'u64':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |   |       `-ParenExpr 0x21be2cbf1d8 <col:47, col:49> 'u64':'unsigned long long' lvalue
|   |   |         `-DeclRefExpr 0x21be2cbf188 <.//openssl//file_jk/after\crypto\modes\gcm128.c:1619:23> 'u64':'unsigned long long' lvalue Var 0x21be2c5b030 'alen' 'u64':'unsigned long long'
|   |   `-BinaryOperator 0x21be2cbf3e0 <line:1620:9, .//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:50> 'u64':'unsigned long long' '='
|   |     |-DeclRefExpr 0x21be2cbf298 <.//openssl//file_jk/after\crypto\modes\gcm128.c:1620:9> 'u64':'unsigned long long' lvalue Var 0x21be2cbefc0 'clen' 'u64':'unsigned long long'
|   |     `-CallExpr 0x21be2cbf3b8 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:77:25, col:50> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x21be2cbf3a0 <col:25> 'unsigned long long (*)(unsigned long long)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x21be2cbf2d0 <col:25> 'unsigned long long (unsigned long long)' Function 0x21be2c4be50 '_byteswap_uint64' 'unsigned long long (unsigned long long)'
|   |       `-CStyleCastExpr 0x21be2cbf378 <col:42, col:49> 'u64':'unsigned long long' <NoOp>
|   |         `-ImplicitCastExpr 0x21be2cbf360 <col:47, col:49> 'u64':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |           `-ParenExpr 0x21be2cbf340 <col:47, col:49> 'u64':'unsigned long long' lvalue
|   |             `-DeclRefExpr 0x21be2cbf2f0 <.//openssl//file_jk/after\crypto\modes\gcm128.c:1620:23> 'u64':'unsigned long long' lvalue Var 0x21be2cbefc0 'clen' 'u64':'unsigned long long'
|   `-IfStmt 0x21be2cbf7e8 <line:1639:5, line:1642:17> has_else
|     |-OpaqueValueExpr 0x21be2cbf7d0 <<invalid sloc>> '_Bool'
|     |-NullStmt 0x21be2cbf7c8 <line:1640:9>
|     `-ReturnStmt 0x21be2cbf7b8 <line:1642:9, col:17>
|       `-UnaryOperator 0x21be2cbf7a0 <col:16, col:17> 'int' prefix '-'
|         `-IntegerLiteral 0x21be2cbf778 <col:17> 'int' 1
|-FunctionDecl 0x21be2cbfa78 <line:1645:1, line:1650:1> line:1645:6 invalid CRYPTO_gcm128_tag 'void (int *, unsigned char *, size_t)'
| |-ParmVarDecl 0x21be2cbf860 <col:24, col:40> col:40 invalid ctx 'int *'
| |-ParmVarDecl 0x21be2cbf8e0 <col:45, col:60> col:60 used tag 'unsigned char *'
| |-ParmVarDecl 0x21be2cbf958 <col:65, col:72> col:72 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x21be2cbfca8 <line:1646:1, line:1650:1>
|-FunctionDecl 0x21be2cbfe30 <line:1652:1, line:1660:1> line:1652:17 invalid CRYPTO_gcm128_new 'int *(void *, int)'
| |-ParmVarDecl 0x21be2cbfcd0 <col:35, col:41> col:41 used key 'void *'
| |-ParmVarDecl 0x21be2cbfd50 <col:46, col:57> col:57 invalid block 'int'
| `-CompoundStmt 0x21be2cc0128 <line:1653:1, line:1660:1>
`-FunctionDecl 0x21be2cc0218 <line:1662:1, line:1665:1> line:1662:6 invalid CRYPTO_gcm128_release 'void (int *)'
  |-ParmVarDecl 0x21be2cc0150 <col:28, col:44> col:44 invalid ctx 'int *'
  `-CompoundStmt 0x21be2cc03e8 <line:1663:1, line:1665:1>
