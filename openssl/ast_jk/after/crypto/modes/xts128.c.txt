TranslationUnitDecl 0x1d2109d6ae8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1d2109d7380 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1d2109d7080 '__int128'
|-TypedefDecl 0x1d2109d73f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1d2109d70a0 'unsigned __int128'
|-TypedefDecl 0x1d2109d7728 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1d2109d74e0 'struct __NSConstantString_tag'
|   `-Record 0x1d2109d7448 '__NSConstantString_tag'
|-TypedefDecl 0x1d2109d7798 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x1d2109d6cc0 'unsigned long long'
|-TypedefDecl 0x1d2109d7830 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1d2109d77f0 'char *'
|   `-BuiltinType 0x1d2109d6b80 'char'
|-TypedefDecl 0x1d2109d78a0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1d2109d77f0 'char *'
|   `-BuiltinType 0x1d2109d6b80 'char'
|-TypedefDecl 0x1d2109d7910 <.//openssl//file_jk/after\crypto\modes/modes_lcl.h:13:1, col:17> col:17 i64 'long long'
| `-BuiltinType 0x1d2109d6c20 'long long'
|-TypedefDecl 0x1d2109d7980 <line:14:1, col:26> col:26 referenced u64 'unsigned long long'
| `-BuiltinType 0x1d2109d6cc0 'unsigned long long'
|-TypedefDecl 0x1d2109d79f0 <line:26:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x1d2109d6c80 'unsigned int'
|-TypedefDecl 0x1d2109d7a60 <line:27:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x1d2109d6c40 'unsigned char'
|-RecordDecl 0x1d212371290 <line:94:32, line:96:1> line:94:32 struct definition
| |-FieldDecl 0x1d212371380 <line:95:5, col:9> col:9 hi 'u64':'unsigned long long'
| `-FieldDecl 0x1d2123713e8 <col:5, col:13> col:13 lo 'u64':'unsigned long long'
|-TypedefDecl 0x1d212371498 <line:94:24, line:96:3> col:3 referenced u128 'struct u128':'u128'
| `-ElaboratedType 0x1d212371440 'struct u128' sugar
|   `-RecordType 0x1d212371330 'u128'
|     `-Record 0x1d212371290 ''
|-RecordDecl 0x1d212371508 <line:107:1, line:130:1> line:107:8 invalid struct gcm128_context definition
| |-RecordDecl 0x1d2123715c0 <line:109:5, line:114:5> line:109:5 union definition
| | |-FieldDecl 0x1d212371758 <line:110:9, col:16> col:13 u 'u64 [2]'
| | |-FieldDecl 0x1d2123718a8 <line:111:9, col:16> col:13 d 'u32 [4]'
| | |-FieldDecl 0x1d2123719f8 <line:112:9, col:16> col:12 c 'u8 [16]'
| | `-FieldDecl 0x1d212371b78 <line:113:9, col:37> col:16 t 'size_t [2]'
| |-FieldDecl 0x1d212371c28 <line:109:5, line:114:7> col:7 Yi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d212371ca0 <line:109:5, line:114:11> col:11 EKi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d212371d18 <line:109:5, line:114:16> col:16 EK0 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d212371d90 <line:109:5, line:114:21> col:21 len 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d212371e08 <line:109:5, line:114:26> col:26 Xi 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d212371e80 <line:109:5, line:114:30> col:30 H 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)':'union gcm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:109:5)'
| |-FieldDecl 0x1d212372038 <line:122:5, col:19> col:10 Htable 'u128 [16]'
| |-FieldDecl 0x1d212373528 <line:123:5, col:52> col:12 gmult 'void (*)(u64 *, const u128 *)'
| |-FieldDecl 0x1d212373a38 <line:124:5, line:125:30> line:124:12 ghash 'void (*)(u64 *, const u128 *, const u8 *, size_t)'
| |-FieldDecl 0x1d212373aa8 <line:127:5, col:18> col:18 mres 'unsigned int'
| |-FieldDecl 0x1d212373b18 <col:5, col:24> col:24 ares 'unsigned int'
| |-FieldDecl 0x1d212373b88 <line:128:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1d212373bf8 <line:129:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1d212373cb8 <line:132:1, line:135:1> line:132:8 invalid struct xts128_context definition
| |-FieldDecl 0x1d212373d88 <line:133:5, col:11> col:11 key1 'void *'
| |-FieldDecl 0x1d212373df8 <col:5, col:18> col:18 key2 'void *'
| |-FieldDecl 0x1d212373e68 <line:134:5, col:16> col:16 invalid block1 'int'
| `-FieldDecl 0x1d212373ed8 <col:5, col:24> col:24 invalid block2 'int'
|-RecordDecl 0x1d212373f30 <line:137:1, line:145:1> line:137:8 invalid struct ccm128_context definition
| |-RecordDecl 0x1d212373ff0 <line:138:5, line:141:5> line:138:5 union definition
| | |-FieldDecl 0x1d212374110 <line:139:9, col:16> col:13 u 'u64 [2]'
| | `-FieldDecl 0x1d2123741c8 <line:140:9, col:16> col:12 c 'u8 [16]'
| |-FieldDecl 0x1d2123742c0 <line:138:5, line:141:7> col:7 nonce 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1d212374338 <line:138:5, line:141:14> col:14 cmac 'union (anonymous union at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)':'union ccm128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:138:5)'
| |-FieldDecl 0x1d2123743a0 <line:142:5, col:9> col:9 blocks 'u64':'unsigned long long'
| |-FieldDecl 0x1d212374410 <line:143:5, col:16> col:16 invalid block 'int'
| `-FieldDecl 0x1d212374480 <line:144:5, col:11> col:11 key 'void *'
|-RecordDecl 0x1d212374530 <line:149:9, line:152:1> line:149:9 union definition
| |-FieldDecl 0x1d212374650 <line:150:5, col:12> col:9 a 'u64 [2]'
| `-FieldDecl 0x1d212374710 <line:151:5, col:23> col:19 c 'unsigned char [16]'
|-TypedefDecl 0x1d2123747c8 <line:149:1, line:152:3> col:3 referenced OCB_BLOCK 'union OCB_BLOCK':'OCB_BLOCK'
| `-ElaboratedType 0x1d212374770 'union OCB_BLOCK' sugar
|   `-RecordType 0x1d2123745d0 'OCB_BLOCK'
|     `-Record 0x1d212374530 ''
|-RecordDecl 0x1d212374838 <line:163:1, line:185:1> line:163:8 invalid struct ocb128_context definition
| |-FieldDecl 0x1d212374908 <line:165:5, col:16> col:16 invalid encrypt 'int'
| |-FieldDecl 0x1d212374978 <line:166:5, col:16> col:16 invalid decrypt 'int'
| |-FieldDecl 0x1d2123749e8 <line:167:5, col:11> col:11 keyenc 'void *'
| |-FieldDecl 0x1d212374a58 <line:168:5, col:11> col:11 keydec 'void *'
| |-FieldDecl 0x1d212374ac8 <line:169:5, col:14> col:14 invalid stream 'int'
| |-FieldDecl 0x1d212374b30 <line:171:5, col:12> col:12 l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1d212374b98 <line:172:5, col:12> col:12 max_l_index 'size_t':'unsigned long long'
| |-FieldDecl 0x1d212374c20 <line:173:5, col:15> col:15 l_star 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1d212374c88 <line:174:5, col:15> col:15 l_dollar 'OCB_BLOCK':'OCB_BLOCK'
| |-FieldDecl 0x1d212374d48 <line:175:5, col:16> col:16 l 'OCB_BLOCK *'
| |-RecordDecl 0x1d212374da0 <line:177:5, line:184:5> line:177:5 struct definition
| | |-FieldDecl 0x1d212374e70 <line:178:9, col:13> col:13 blocks_hashed 'u64':'unsigned long long'
| | |-FieldDecl 0x1d212374ed8 <line:179:9, col:13> col:13 blocks_processed 'u64':'unsigned long long'
| | |-FieldDecl 0x1d212374f40 <line:180:9, col:19> col:19 offset_aad 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1d212374fa8 <line:181:9, col:19> col:19 sum 'OCB_BLOCK':'OCB_BLOCK'
| | |-FieldDecl 0x1d212375010 <line:182:9, col:19> col:19 offset 'OCB_BLOCK':'OCB_BLOCK'
| | `-FieldDecl 0x1d212375078 <line:183:9, col:19> col:19 checksum 'OCB_BLOCK':'OCB_BLOCK'
| `-FieldDecl 0x1d212375128 <line:177:5, line:184:7> col:7 sess 'struct (anonymous struct at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)':'struct ocb128_context::(anonymous at .//openssl//file_jk/after\crypto\modes/modes_lcl.h:177:5)'
|-TypedefDecl 0x1d2123751e8 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1d2109d6cc0 'unsigned long long'
|-TypedefDecl 0x1d212375258 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1d2109d77f0 'char *'
|   `-BuiltinType 0x1d2109d6b80 'char'
|-FunctionDecl 0x1d212478520 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d2124785c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1d212478630 <col:21> Implicit
|-FunctionDecl 0x1d212478688 prev 0x1d212478520 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d2124783b8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1d212478778 <col:21> Inherited Implicit
|-TypedefDecl 0x1d2124787b8 prev 0x1d2109d7798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1d2109d6cc0 'unsigned long long'
|-TypedefDecl 0x1d212478860 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1d212478830 'size_t' sugar
|   |-Typedef 0x1d2124787b8 'size_t'
|   `-BuiltinType 0x1d2109d6cc0 'unsigned long long'
|-TypedefDecl 0x1d2124788d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1d2109d6c20 'long long'
|-TypedefDecl 0x1d212478940 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1d2109d6c20 'long long'
|-TypedefDecl 0x1d2124789b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1d2109d6c60 'unsigned short'
|-TypedefDecl 0x1d212478a20 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1d2109d6c60 'unsigned short'
|-TypedefDecl 0x1d212478a90 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1d2109d6c60 'unsigned short'
|-TypedefDecl 0x1d212478b00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1d2109d6be0 'int'
|-TypedefDecl 0x1d212478b70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1d2109d6c00 'long'
|-TypedefDecl 0x1d212478be0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1d2109d6c20 'long long'
|-TypedefDecl 0x1d212478c70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1d212478c40 '__time64_t' sugar
|   |-Typedef 0x1d212478be0 '__time64_t'
|   `-BuiltinType 0x1d2109d6c20 'long long'
|-FunctionDecl 0x1d212478de8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1d212479008 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1d212481650 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1d212479148 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1d2124791c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1d212479238 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1d2124792b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1d2124813f0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1d212481730 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1d2124817f0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1d212481960 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1d212481910 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1d2124818b0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1d2124817d0 'struct threadlocaleinfostruct'
|       `-Record 0x1d212487420 'threadlocaleinfostruct'
|-TypedefDecl 0x1d212481a70 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1d212481a20 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1d2124819c0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1d212481890 'struct threadmbcinfostruct'
|       `-Record 0x1d2124817f0 'threadmbcinfostruct'
|-RecordDecl 0x1d212481ac8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1d212481b80 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1d212481c40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d212481cd0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1d212481d60 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1d212481e18 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1d212481dc0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1d212481c20 'struct localeinfo_struct'
|     `-Record 0x1d212481b80 'localeinfo_struct'
|-TypedefDecl 0x1d212481ef0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1d212481ea0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1d212481dc0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1d212481c20 'struct localeinfo_struct'
|       `-Record 0x1d212481b80 'localeinfo_struct'
|-RecordDecl 0x1d212481f68 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1d212482020 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d212482098 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1d212482158 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1d2124821f0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1d212482260 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1d212482318 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1d2124822c0 'struct localerefcount' sugar
|   `-RecordType 0x1d212482000 'struct localerefcount'
|     `-Record 0x1d212481f68 'localerefcount'
|-RecordDecl 0x1d212487420 prev 0x1d212481730 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1d2124874a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d212487518 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1d212487588 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1d2124875f8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1d212487668 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1d212487828 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1d212487898 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1d212487908 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1d212487978 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1d2124879e8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1d212487a58 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1d212487ab0 parent 0x1d2109d6ae8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1d212487c40 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1d212487cb0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1d212487d20 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1d212487d90 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1d212487e00 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1d212487e70 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1d212487f80 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1d2124880b8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1d212488168 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1d212488110 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1d2124817d0 'struct threadlocaleinfostruct'
|     `-Record 0x1d212487420 'threadlocaleinfostruct'
|-FunctionDecl 0x1d2124885c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1d2124881f0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1d2124882a0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1d212488320 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1d212488398 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d212488988 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1d212488a28 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1d212488a90 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1d212488af8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d212488b78 prev 0x1d212488988 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1d2124886b0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1d212488730 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1d2124887a8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d212488f38 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1d212488c60 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1d212488ce0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1d212488d58 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d21248b460 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d212489020 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1d2124890a0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1d212489118 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124891b0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d21248b768 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1d21248b808 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1d21248b870 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1d21248b8d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d21248b958 prev 0x1d21248b768 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1d21248b550 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1d21248b5d0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1d21248b648 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d21248bd18 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1d21248bdb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d21248be20 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1d21248be88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d21248bf08 prev 0x1d21248bd18 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1d21248ba40 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1d21248bac0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1d21248bb38 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d21248c3a8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1d21248c018 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1d21248c0b0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d21248c130 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1d21248c1a8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d212484718 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1d2124847b8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d212484820 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1d212484888 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d212484908 prev 0x1d212484718 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1d212484440 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1d2124844c0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1d212484538 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d212484d88 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1d212484e28 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d212484e90 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1d212484ef8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1d212484f60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d212484fe8 prev 0x1d212484d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1d212484ad0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1d212484b50 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1d212484bd0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1d212484c48 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124850a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1d21248c510 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1d212485270 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1d2124852f0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1d212485368 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d21248c5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1d21248c9c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1d21248c6f0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1d21248c768 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d21248c7e8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1d21248cd90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1d21248cba0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1d21248cc20 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1d21248ce40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d21248d250 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1d21248cf88 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1d21248d000 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1d21248d080 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1d21248e680 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1d21248e720 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1d21248e788 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d21248e800 prev 0x1d21248e680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1d21248e490 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1d21248e510 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1d21248e8b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d21248ec08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1d21248e9f8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1d21248ea70 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1d21248eaf0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1d21248ef30 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1d21248efd0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1d21248f038 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d21248f0b0 prev 0x1d21248ef30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1d21248edb0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1d21248ee30 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1d21248f160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d21248f4a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1d21248f540 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d21248f5a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d21248f620 prev 0x1d21248f4a0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1d21248f2a8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1d21248f328 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1d21248f870 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1d21248f910 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d21248f980 prev 0x1d21248f870 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1d21248f700 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1d21248fc78 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1d21248fa58 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1d21248fad0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d21248fec8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1d21248fd58 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1d21248fdd0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1d2124901f8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1d2124901e8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1d2124901b8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1d212490028 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1d212490008 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1d21248ffd8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1d21248ff90 <col:13> 'const char *' lvalue ParmVar 0x1d21248fd58 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1d21248fff0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1d21248ffb0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1d2124901a0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1d212490048 <col:24> 'int' 0
|       `-CallExpr 0x1d212490140 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1d212490128 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1d212490070 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1d21248fc78 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1d212490170 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1d212490090 <col:36> 'const char *' lvalue ParmVar 0x1d21248fd58 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1d212490188 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1d2124900b0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1d21248fdd0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1d21248d4c8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1d212490228 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1d2124902a0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d212490320 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1d212490398 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d21248d7d0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1d21248d870 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d21248d8d8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1d21248d940 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d21248d9c0 prev 0x1d21248d7d0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1d21248d5b8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1d21248d638 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1d21248d6b0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d21248dbf8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1d21248daa8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1d21248dec0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1d21248df60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d21248dfc8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1d21248e040 prev 0x1d21248dec0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1d21248dcd0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1d21248dd50 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1d21248e2a0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d21248e120 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1d21248e1a0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1d212490530 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d21248e380 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1d21248e400 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1d2124908e8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1d212490610 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1d212490690 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1d212490708 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d212490b50 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d2124909d0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1d212490a50 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1d212490e48 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1d212490c30 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1d212490cb0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1d212490d28 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124910b0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d212490f30 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1d212490fb0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1d2124913a8 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1d212491190 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1d212491210 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1d212491288 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d212447a48 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1d212447770 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1d2124477f0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1d212447868 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d212447eb0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d212447b30 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1d212447bb0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1d212447c28 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d212447ca0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124481b8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1d212447fa0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1d212448020 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1d212448098 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d212448550 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124482a0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1d212448320 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1d212448398 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d212448410 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124e9088 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1d2124e9128 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d2124e9190 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d2124e9208 prev 0x1d2124e9088 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1d212448640 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1d2124486c0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1d2124e94c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1d2124e93e0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1d2124e9568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124e9940 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1d2124e96b0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1d2124e9728 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124e97a8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1d2124e9c58 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1d2124e9cf8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1d2124e9d68 prev 0x1d2124e9c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1d2124e9b20 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1d2124e9e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124e6160 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1d2124e5f50 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1d2124e5fc8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124e6048 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1d2124e6468 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1d2124e6248 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1d2124e62c0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124e6758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d2124e6608 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1d2124e6800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124e6c10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124e6948 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1d2124e69c0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124e6a38 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124e8010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1d2124e6db8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1d2124e6e30 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2124e80c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124e8578 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1d2124e8208 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1d2124e8280 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d2124e8300 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1d2124e8378 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d2124e89f8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1d2124e8a98 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d2124e8b00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d2124e8b68 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d2124e8be8 prev 0x1d2124e89f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1d2124e8728 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1d2124e87a8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1d2124e8820 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124e8ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124ea030 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1d2124ea0d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d2124ea138 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d2124ea1a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d2124ea220 prev 0x1d2124ea030 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1d2124e8de8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1d2124e8e68 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1d2124e8ee0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124ea520 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1d2124ea308 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1d2124ea388 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1d2124ea400 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124ea8b8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124ea608 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1d2124ea688 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1d2124ea700 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124ea778 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124eac50 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1d2124ea9a8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1d2124eaa20 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d2124eaaa0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1d2124eab18 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d2124e3fb8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1d2124e4058 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d2124e40c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d2124e4128 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d2124e41a8 prev 0x1d2124e3fb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1d2124eae00 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1d2124eae80 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1d2124eaef8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124e4260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124e4718 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1d2124e43a8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1d2124e4420 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2124e44a0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1d2124e4518 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124e4b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1d2124e48c8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1d2124e4948 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1d2124e49c0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124e4c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124e6fd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1d2124e7070 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d2124e70d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d2124e7150 prev 0x1d2124e6fd0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1d2124e4d98 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1d2124e4e18 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1d2124e73b0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1d2124e7450 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d2124e74b8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1d2124e7530 prev 0x1d2124e73b0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1d2124e7230 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1d2124e72b0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1d2124e76f0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1d2124e7610 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1d2124e7940 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1d2124e79e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d2124e7a48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d2124e7ac0 prev 0x1d2124e7940 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1d2124e77c8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1d2124e7848 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1d2124e7d20 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1d2124e7dc0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d2124e7e28 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d2124e7ea0 prev 0x1d2124e7d20 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1d2124e7ba0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1d2124e7c20 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1d2124e51b0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1d2124e5250 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1d2124e52b8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d2124e5330 prev 0x1d2124e51b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1d2124e5030 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1d2124e50b0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1d2124e53e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124e57c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1d2124e5528 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1d2124e55a8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1d2124e5628 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1d2124e5a20 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1d2124e58b0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1d2124e5928 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124e5ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d2124e5bc0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1d2124e5d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124e30b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124e5e90 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1d2124e2f20 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124e2f98 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124e33d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1d2124e3258 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1d2124e32d0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2124e3480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124e3890 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1d2124e3930 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d2124e3998 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d2124e3a00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d2124e3a80 prev 0x1d2124e3890 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1d2124e35c8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1d2124e3648 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1d2124e36c0 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124ebfb0 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124e3b68 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1d2124e3be8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1d2124e3c60 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124e3cd8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124ec260 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1d2124ec300 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d2124ec370 prev 0x1d2124ec260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1d2124ec180 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1d2124ec418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1d2124ec760 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d2124ec5e0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1d2124ec660 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1d2124ec810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1d2124ecb58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d2124ec9d8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1d2124eca58 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1d2124ecc08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1d2124eceb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d2124ecdd0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1d2124ecf58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1d2124f23e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1d2124f21d0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1d2124f2250 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1d2124f22c8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124f24a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1d2124f2880 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1d2124f2668 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1d2124f26e8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1d2124f2760 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124f2938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1d2124f2be0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d2124f2b00 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1d2124f2c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1d2124edfd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1d2124f2e50 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1d2124f2ed0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1d2124ee080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1d2124ee328 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d2124ee248 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1d2124ee3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1d2124ee660 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1d2124ee4f0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1d2124ee9f0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1d2124ee730 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2124ee7a8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124ee820 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1d2124eeda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124eeb90 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d2124eec08 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1d2124eee58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124f1218 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1d2124f12b8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1d2124f1320 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1d2124f1398 prev 0x1d2124f1218 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1d2124f1000 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f1078 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d2124f1690 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1d2124f1730 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1d2124f1798 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1d2124f1810 prev 0x1d2124f1690 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1d2124f1470 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f14e8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1d2124f1af0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1d2124f18e8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2124f1960 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124f19d8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1d2124f1e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124f1c90 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d2124f1d08 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1d2124f1eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124eb1b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124eafa0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d2124eb018 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1d2124eb400 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1d2124eb4a0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1d2124eb510 prev 0x1d2124eb400 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1d2124eb290 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1d2124eb7f8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2124eb5e0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d2124eb658 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124eba40 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1d2124eb8d0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d2124eb948 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1d2124ebdd8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1d2124ebdc8 <line:307:5, col:56>
|     `-ConditionalOperator 0x1d2124ebd98 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1d2124ebc00 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1d2124ebbe0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1d2124ebbb0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1d2124ebb08 <col:13> 'const wchar_t *' lvalue ParmVar 0x1d2124eb8d0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1d2124ebbc8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1d2124ebb90 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1d2124ebb68 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1d2124ebb28 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1d2124ebd80 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1d2124ebc20 <col:29> 'int' 0
|       `-CallExpr 0x1d2124ebd20 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1d2124ebd08 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1d2124ebc48 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1d2124eb7f8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1d2124ebd50 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1d2124ebc68 <col:41> 'const wchar_t *' lvalue ParmVar 0x1d2124eb8d0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1d2124ebd68 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1d2124ebc88 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2124eb948 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124ef1e8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1d2124ebe00 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2124ebe78 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d2124ebef0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d2124eefe0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d2124ef650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2124ef390 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d2124ef408 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1d2124ef480 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124ef708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124efb18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1d2124efbb8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1d2124efc20 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1d2124efc88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d2124efd08 prev 0x1d2124efb18 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1d2124ef848 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124ef8c0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d2124ef938 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124f30d8 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1d2124efde8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2124efe60 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1d2124efed8 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d2124eff50 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d2124f3488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2124f3280 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d2124f32f8 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1d2124f3370 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124f3540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124f3898 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124f3680 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f36f8 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1d2124f3ae0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1d2124f3970 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f39e8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d2124f3d28 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124f3bb8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f3c30 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1d2124f3f70 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124f3e00 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f3e78 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1d2124f4288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124f4118 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d2124f4190 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1d2124f4338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124f47a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1d2124f4478 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d2124f44f0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f45d0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1d2124f4ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1d2124f4948 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1d2124f4b68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124f4f70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1d2124f4ca8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1d2124f4d20 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124f4da0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1d2124ed1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1d2124ed0e8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1d2124ed268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124ed630 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1d2124ed3a8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1d2124ed420 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124ed498 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1d2124ed888 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124ed710 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1d2124ed788 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1d2124edc28 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1d2124ed960 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124ed9d8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d2124eda50 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124edf18 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2124edd08 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124edd80 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d2124eddf8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124fc460 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124fc0f0 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124fc168 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1d2124fc1e0 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124fc258 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124fc8b8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1d2124fc548 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2124fc5c0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d2124fc638 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d2124fc6b0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124fcd20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1d2124fca60 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d2124fcad8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1d2124fcb50 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124fcdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124fa090 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1d2124fcf18 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1d2124fa420 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1d2124fa160 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2124fa1d8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124fa250 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d2124fa7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1d2124fa5c0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d2124fa638 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1d2124fa888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124fabe8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2124fa9c8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1d2124faa40 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124fae58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d2124fad80 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1d2124faf00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124fb360 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124fb0a0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d2124fb118 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124fb190 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124fb718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1d2124fb500 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1d2124fb578 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2124fb7c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124fba78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2124fb908 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1d2124fb980 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124fbce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d2124fbc10 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1d2124fbd90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124f70a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124fbed0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d2124fbf48 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124fbfc0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124f73b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1d2124f7240 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1d2124f72b8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d2124f7460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d2124f7860 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2124f75a0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2124f7618 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f7690 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124f7ca8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124f7940 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d2124f79b8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d2124f7a30 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124f7aa8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124f7f08 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124f7d90 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f7e08 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1d2124f51d8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1d2124f7fe0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124f5040 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f50b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124f5430 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124f52b8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f5330 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1d2124f5718 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1d2124f5508 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124f5580 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f55f8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124f5a08 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2124f57f8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124f5870 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f58e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124f5d90 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124f5ae8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124f5b60 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1d2124f5bd8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124f5c50 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124fd108 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2124f5e78 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124f5ef0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1d2124f5f68 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1d2124fd490 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1d2124fd1e8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124fd260 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1d2124fd2d8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d2124fd350 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d2124fd6f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1d2124fd618 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1d2124fd798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1d2124fdad0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124fd958 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124fd9d0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1d2124fdb80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1d2124fdf50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1d2124fdd40 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124fddb8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1d2124fde30 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124fe008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1d2124f83f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1d2124f81e8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d2124f8260 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1d2124f82d8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1d2124f84a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1d2124f8740 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d2124f8668 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1d2124f87e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1d2124f8b18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1d2124f89a8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1d2124f8a20 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1d2124f8bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1d2124f8e60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d2124f8d88 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1d2124f8f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1d2124f61d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d2124f6100 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1d2124f6280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1d2124f65b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d2124f6440 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1d2124f64b8 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1d2124f6668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
`-FunctionDecl 0x1d2124f6c70 <.//openssl//file_jk/after\crypto\modes\xts128.c:14:1, line:157:1> line:14:5 invalid CRYPTO_xts128_encrypt 'int (const int *, const unsigned char *, const unsigned char *, unsigned char *, size_t, int)'
  |-ParmVarDecl 0x1d2124f6790 <col:27, col:49> col:49 invalid ctx 'const int *'
  |-ParmVarDecl 0x1d2124f68d0 <line:15:27, col:52> col:47 used iv 'const unsigned char *':'const unsigned char *'
  |-ParmVarDecl 0x1d2124f6950 <line:16:27, col:48> col:48 used inp 'const unsigned char *'
  |-ParmVarDecl 0x1d2124f6a00 <col:53, col:68> col:68 used out 'unsigned char *'
  |-ParmVarDecl 0x1d2124f6a78 <line:17:27, col:34> col:34 used len 'size_t':'unsigned long long'
  |-ParmVarDecl 0x1d2124f6af8 <col:39, col:43> col:43 used enc 'int'
  `-CompoundStmt 0x1d21250a0d0 <line:18:1, line:157:1>
    |-DeclStmt 0x1d2124fe148 <line:19:5, line:24:6>
    | |-RecordDecl 0x1d2124f6d58 <line:19:11, line:22:5> line:19:11 union definition
    | | |-FieldDecl 0x1d2124f6e28 <line:20:9, col:14> col:14 one 'long'
    | | `-FieldDecl 0x1d2124f6e90 <line:21:9, col:14> col:14 referenced little 'char'
    | `-VarDecl 0x1d2124f6f48 <line:19:5, line:24:5> line:22:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)' cinit
    |   `-InitListExpr 0x1d2124fe0d0 <col:19, line:24:5> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)' field Field 0x1d2124f6e28 'one' 'long'
    |     `-ImplicitCastExpr 0x1d2124fe118 <line:23:9> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x1d2124f6fb0 <col:9> 'int' 1
    |-DeclStmt 0x1d2124fe5b8 <line:25:5, line:29:21>
    | |-RecordDecl 0x1d2124fe160 <line:25:5, line:29:5> line:25:5 union definition
    | | |-FieldDecl 0x1d2124fe280 <line:26:9, col:16> col:13 referenced u 'u64 [2]'
    | | |-FieldDecl 0x1d2124fe338 <line:27:9, col:16> col:13 referenced d 'u32 [4]'
    | | `-FieldDecl 0x1d2124fe3f0 <line:28:9, col:16> col:12 referenced c 'u8 [16]'
    | |-VarDecl 0x1d2124fe4a8 <line:25:5, line:29:7> col:7 used tweak 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | `-VarDecl 0x1d2124fe530 <line:25:5, line:29:14> col:14 used scratch 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |-DeclStmt 0x1d2124fe650 <line:30:5, col:19>
    | `-VarDecl 0x1d2124fe5e8 <col:5, col:18> col:18 used i 'unsigned int'
    |-IfStmt 0x1d2124fe768 <line:32:5, line:33:17>
    | |-BinaryOperator 0x1d2124fe6f8 <line:32:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1d2124fe6c8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1d2124fe668 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2124f6a78 'len' 'size_t':'unsigned long long'
    | | `-ImplicitCastExpr 0x1d2124fe6e0 <col:15> 'unsigned long long' <IntegralCast>
    | |   `-IntegerLiteral 0x1d2124fe6a0 <col:15> 'int' 16
    | `-ReturnStmt 0x1d2124fe758 <line:33:9, col:17>
    |   `-UnaryOperator 0x1d2124fe740 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x1d2124fe718 <col:17> 'int' 1
    |-CallExpr 0x1d2124fe910 <line:35:5, col:27> 'void *'
    | |-ImplicitCastExpr 0x1d2124fe8f8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1d2124fe780 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1d21248bf08 'memcpy' 'void *(void *, const void *, unsigned long long)'
    | |-ImplicitCastExpr 0x1d2124fe960 <col:12, col:18> 'void *' <BitCast>
    | | `-ImplicitCastExpr 0x1d2124fe948 <col:12, col:18> 'u8 *' <ArrayToPointerDecay>
    | |   `-MemberExpr 0x1d2124fe7d8 <col:12, col:18> 'u8 [16]' lvalue .c 0x1d2124fe3f0
    | |     `-DeclRefExpr 0x1d2124fe7a0 <col:12> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | |-ImplicitCastExpr 0x1d2124fe990 <col:21> 'const void *' <BitCast>
    | | `-ImplicitCastExpr 0x1d2124fe978 <col:21> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1d2124fe808 <col:21> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x1d2124f68d0 'iv' 'const unsigned char *':'const unsigned char *'
    | `-ImplicitCastExpr 0x1d2124fe9a8 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x1d2124fe840 <col:25> 'int' 16
    |-IfStmt 0x1d2124fec90 <line:39:5, line:40:16>
    | |-BinaryOperator 0x1d2124febe0 <line:39:9, col:26> 'int' '&&'
    | | |-UnaryOperator 0x1d2124feb10 <col:9, col:10> 'int' prefix '!' cannot overflow
    | | | `-ImplicitCastExpr 0x1d2124feaf8 <col:10> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1d2124feac0 <col:10> 'int' lvalue ParmVar 0x1d2124f6af8 'enc' 'int'
    | | `-ParenExpr 0x1d2124febc0 <col:17, col:26> 'unsigned long long'
    | |   `-BinaryOperator 0x1d2124feba0 <col:18, col:24> 'unsigned long long' '%'
    | |     |-ImplicitCastExpr 0x1d2124feb70 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
    | |     | `-DeclRefExpr 0x1d2124feb28 <col:18> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2124f6a78 'len' 'size_t':'unsigned long long'
    | |     `-ImplicitCastExpr 0x1d2124feb88 <col:24> 'unsigned long long' <IntegralCast>
    | |       `-IntegerLiteral 0x1d2124feb48 <col:24> 'int' 16
    | `-CompoundAssignOperator 0x1d2124fec60 <line:40:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |-DeclRefExpr 0x1d2124fec00 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2124f6a78 'len' 'size_t':'unsigned long long'
    |   `-ImplicitCastExpr 0x1d2124fec48 <col:16> 'unsigned long long' <IntegralCast>
    |     `-IntegerLiteral 0x1d2124fec20 <col:16> 'int' 16
    |-WhileStmt 0x1d2125020d0 <line:42:5, line:87:5>
    | |-BinaryOperator 0x1d2124fed20 <line:42:12, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x1d2124fecf0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1d2124feca8 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2124f6a78 'len' 'size_t':'unsigned long long'
    | | `-ImplicitCastExpr 0x1d2124fed08 <col:19> 'unsigned long long' <IntegralCast>
    | |   `-IntegerLiteral 0x1d2124fecc8 <col:19> 'int' 16
    | `-CompoundStmt 0x1d212502078 <col:23, line:87:5>
    |   |-BinaryOperator 0x1d2124feff8 <line:48:9, col:51> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1d2124fede8 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1d2124fedd0 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1d2124fed78 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | | |   `-DeclRefExpr 0x1d2124fed40 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1d2124feda8 <col:19> 'int' 0
    |   | `-BinaryOperator 0x1d2124fefd8 <col:24, col:51> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1d2124fefa8 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1d2124feed8 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1d2124fee90 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1d2124fee68 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1d2124fee50 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1d2124fee08 <col:32> 'const unsigned char *' lvalue ParmVar 0x1d2124f6950 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1d2124feeb0 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1d2124fefc0 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1d2124fef88 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1d2124fef70 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1d2124fef18 <col:42, col:48> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   |       |   `-DeclRefExpr 0x1d2124feef8 <col:42> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1d2124fef48 <col:50> 'int' 0
    |   |-BinaryOperator 0x1d2124ff2b8 <line:49:9, col:51> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1d2124ff0a8 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1d2124ff090 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1d2124ff038 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | | |   `-DeclRefExpr 0x1d2124ff018 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1d2124ff068 <col:19> 'int' 1
    |   | `-BinaryOperator 0x1d2124ff298 <col:24, col:51> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1d2124ff268 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1d2124ff198 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1d2124ff150 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1d2124ff128 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1d2124ff110 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1d2124ff0e0 <col:32> 'const unsigned char *' lvalue ParmVar 0x1d2124f6950 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1d2124ff170 <col:37> 'int' 1
    |   |   `-ImplicitCastExpr 0x1d2124ff280 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1d2124ff248 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1d2124ff230 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1d2124ff1d8 <col:42, col:48> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   |       |   `-DeclRefExpr 0x1d2124ff1b8 <col:42> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1d2124ff208 <col:50> 'int' 1
    |   |-BinaryOperator 0x1d2124ff610 <line:57:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1d2124ff448 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |   | | |-ParenExpr 0x1d2124ff400 <col:9, col:20> 'u64 *'
    |   | | | `-CStyleCastExpr 0x1d2124ff3d8 <col:10, col:17> 'u64 *' <BitCast>
    |   | | |   `-ImplicitCastExpr 0x1d2124ff3c0 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | | |     `-DeclRefExpr 0x1d2124ff378 <col:17> 'unsigned char *' lvalue ParmVar 0x1d2124f6a00 'out' 'unsigned char *'
    |   | | `-IntegerLiteral 0x1d2124ff420 <col:22> 'int' 0
    |   | `-CompoundAssignOperator 0x1d2124ff5e0 <col:27, col:52> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |   |-ArraySubscriptExpr 0x1d2124ff4f8 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |   |   | |-ImplicitCastExpr 0x1d2124ff4e0 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |   |   | | `-MemberExpr 0x1d2124ff488 <col:27, col:35> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   |   | |   `-DeclRefExpr 0x1d2124ff468 <col:27> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |   | `-IntegerLiteral 0x1d2124ff4b8 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1d2124ff5c8 <col:43, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1d2124ff5a8 <col:43, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1d2124ff590 <col:43, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1d2124ff538 <col:43, col:49> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   |       |   `-DeclRefExpr 0x1d2124ff518 <col:43> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1d2124ff568 <col:51> 'int' 0
    |   |-BinaryOperator 0x1d2124ff8b0 <line:58:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1d2124ff6e8 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |   | | |-ParenExpr 0x1d2124ff6a0 <col:9, col:20> 'u64 *'
    |   | | | `-CStyleCastExpr 0x1d2124ff678 <col:10, col:17> 'u64 *' <BitCast>
    |   | | |   `-ImplicitCastExpr 0x1d2124ff660 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | | |     `-DeclRefExpr 0x1d2124ff630 <col:17> 'unsigned char *' lvalue ParmVar 0x1d2124f6a00 'out' 'unsigned char *'
    |   | | `-IntegerLiteral 0x1d2124ff6c0 <col:22> 'int' 1
    |   | `-CompoundAssignOperator 0x1d2124ff880 <col:27, col:52> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |   |-ArraySubscriptExpr 0x1d2124ff798 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |   |   | |-ImplicitCastExpr 0x1d2124ff780 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |   |   | | `-MemberExpr 0x1d2124ff728 <col:27, col:35> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   |   | |   `-DeclRefExpr 0x1d2124ff708 <col:27> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |   | `-IntegerLiteral 0x1d2124ff758 <col:37> 'int' 1
    |   |   `-ImplicitCastExpr 0x1d2124ff868 <col:43, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1d2124ff848 <col:43, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1d2124ff830 <col:43, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1d2124ff7d8 <col:43, col:49> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   |       |   `-DeclRefExpr 0x1d2124ff7b8 <col:43> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1d2124ff808 <col:51> 'int' 1
    |   |-CompoundAssignOperator 0x1d2124ff918 <line:60:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |   | |-DeclRefExpr 0x1d2124ff8d0 <col:9> 'const unsigned char *' lvalue ParmVar 0x1d2124f6950 'inp' 'const unsigned char *'
    |   | `-IntegerLiteral 0x1d2124ff8f0 <col:16> 'int' 16
    |   |-CompoundAssignOperator 0x1d2124ff990 <line:61:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |   | |-DeclRefExpr 0x1d2124ff948 <col:9> 'unsigned char *' lvalue ParmVar 0x1d2124f6a00 'out' 'unsigned char *'
    |   | `-IntegerLiteral 0x1d2124ff968 <col:16> 'int' 16
    |   |-CompoundAssignOperator 0x1d2124ffa20 <line:62:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-DeclRefExpr 0x1d2124ff9c0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2124f6a78 'len' 'size_t':'unsigned long long'
    |   | `-ImplicitCastExpr 0x1d2124ffa08 <col:16> 'unsigned long long' <IntegralCast>
    |   |   `-IntegerLiteral 0x1d2124ff9e0 <col:16> 'int' 16
    |   |-IfStmt 0x1d2124ffb20 <line:64:9, line:65:20>
    |   | |-BinaryOperator 0x1d2124ffac8 <line:64:13, col:20> 'int' '=='
    |   | | |-ImplicitCastExpr 0x1d2124ffa98 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1d2124ffa50 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2124f6a78 'len' 'size_t':'unsigned long long'
    |   | | `-ImplicitCastExpr 0x1d2124ffab0 <col:20> 'unsigned long long' <IntegralCast>
    |   | |   `-IntegerLiteral 0x1d2124ffa70 <col:20> 'int' 0
    |   | `-ReturnStmt 0x1d2124ffb10 <line:65:13, col:20>
    |   |   `-IntegerLiteral 0x1d2124ffae8 <col:20> 'int' 0
    |   `-IfStmt 0x1d212502050 <line:67:9, line:86:9> has_else
    |     |-ImplicitCastExpr 0x1d2124ffba0 <line:67:13, col:23> 'char' <LValueToRValue>
    |     | `-MemberExpr 0x1d2124ffb70 <col:13, col:23> 'const char' lvalue .little 0x1d2124f6e90
    |     |   `-DeclRefExpr 0x1d2124ffb38 <col:13> 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)' lvalue Var 0x1d2124f6f48 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)'
    |     |-CompoundStmt 0x1d212501680 <col:31, line:74:9>
    |     | |-DeclStmt 0x1d2124ffcd0 <line:68:13, col:36>
    |     | | |-VarDecl 0x1d2124ffbd0 <col:13, col:26> col:26 used carry 'unsigned int'
    |     | | `-VarDecl 0x1d2124ffc50 <col:13, col:33> col:33 used res 'unsigned int'
    |     | |-BinaryOperator 0x1d2124fff68 <line:70:13, col:50> 'unsigned int' '='
    |     | | |-DeclRefExpr 0x1d2124ffce8 <col:13> 'unsigned int' lvalue Var 0x1d2124ffc50 'res' 'unsigned int'
    |     | | `-ImplicitCastExpr 0x1d2124fff50 <col:19, col:50> 'unsigned int' <IntegralCast>
    |     | |   `-BinaryOperator 0x1d2124fff30 <col:19, col:50> 'int' '&'
    |     | |     |-IntegerLiteral 0x1d2124ffd20 <col:19> 'int' 135
    |     | |     `-ParenExpr 0x1d2124fff10 <col:26, col:50> 'int'
    |     | |       `-BinaryOperator 0x1d2124ffef0 <col:27, col:48> 'int' '>>'
    |     | |         |-ParenExpr 0x1d2124ffea8 <col:27, col:43> 'int'
    |     | |         | `-CStyleCastExpr 0x1d2124ffe80 <col:28, col:42> 'int' <IntegralCast>
    |     | |         |   `-ImplicitCastExpr 0x1d2124ffe68 <col:33, col:42> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |     | |         |     `-ArraySubscriptExpr 0x1d2124ffe30 <col:33, col:42> 'u32':'unsigned int' lvalue
    |     | |         |       |-ImplicitCastExpr 0x1d2124ffe18 <col:33, col:39> 'u32 *' <ArrayToPointerDecay>
    |     | |         |       | `-MemberExpr 0x1d2124ffd68 <col:33, col:39> 'u32 [4]' lvalue .d 0x1d2124fe338
    |     | |         |       |   `-DeclRefExpr 0x1d2124ffd48 <col:33> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |     | |         |       `-IntegerLiteral 0x1d2124ffd98 <col:41> 'int' 3
    |     | |         `-IntegerLiteral 0x1d2124ffec8 <col:48> 'int' 31
    |     | |-BinaryOperator 0x1d212501180 <line:71:13, col:52> 'unsigned int' '='
    |     | | |-DeclRefExpr 0x1d2124fff88 <col:13> 'unsigned int' lvalue Var 0x1d2124ffbd0 'carry' 'unsigned int'
    |     | | `-CStyleCastExpr 0x1d212501158 <col:21, col:52> 'unsigned int' <IntegralCast>
    |     | |   `-ParenExpr 0x1d212501138 <col:35, col:52> 'u64':'unsigned long long'
    |     | |     `-BinaryOperator 0x1d2125000b0 <col:36, col:50> 'u64':'unsigned long long' '>>'
    |     | |       |-ImplicitCastExpr 0x1d212500098 <col:36, col:45> 'u64':'unsigned long long' <LValueToRValue>
    |     | |       | `-ArraySubscriptExpr 0x1d212500050 <col:36, col:45> 'u64':'unsigned long long' lvalue
    |     | |       |   |-ImplicitCastExpr 0x1d212500038 <col:36, col:42> 'u64 *' <ArrayToPointerDecay>
    |     | |       |   | `-MemberExpr 0x1d2124fffe0 <col:36, col:42> 'u64 [2]' lvalue .u 0x1d2124fe280
    |     | |       |   |   `-DeclRefExpr 0x1d2124fffc0 <col:36> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |     | |       |   `-IntegerLiteral 0x1d212500010 <col:44> 'int' 0
    |     | |       `-IntegerLiteral 0x1d212500070 <col:50> 'int' 63
    |     | |-BinaryOperator 0x1d2125013f0 <line:72:13, col:46> 'u64':'unsigned long long' '='
    |     | | |-ArraySubscriptExpr 0x1d212501230 <col:13, col:22> 'u64':'unsigned long long' lvalue
    |     | | | |-ImplicitCastExpr 0x1d212501218 <col:13, col:19> 'u64 *' <ArrayToPointerDecay>
    |     | | | | `-MemberExpr 0x1d2125011c0 <col:13, col:19> 'u64 [2]' lvalue .u 0x1d2124fe280
    |     | | | |   `-DeclRefExpr 0x1d2125011a0 <col:13> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |     | | | `-IntegerLiteral 0x1d2125011f0 <col:21> 'int' 0
    |     | | `-BinaryOperator 0x1d2125013d0 <col:26, col:46> 'unsigned long long' '^'
    |     | |   |-ParenExpr 0x1d212501360 <col:26, col:42> 'u64':'unsigned long long'
    |     | |   | `-BinaryOperator 0x1d212501340 <col:27, col:41> 'u64':'unsigned long long' '<<'
    |     | |   |   |-ImplicitCastExpr 0x1d212501328 <col:27, col:36> 'u64':'unsigned long long' <LValueToRValue>
    |     | |   |   | `-ArraySubscriptExpr 0x1d2125012e0 <col:27, col:36> 'u64':'unsigned long long' lvalue
    |     | |   |   |   |-ImplicitCastExpr 0x1d2125012c8 <col:27, col:33> 'u64 *' <ArrayToPointerDecay>
    |     | |   |   |   | `-MemberExpr 0x1d212501270 <col:27, col:33> 'u64 [2]' lvalue .u 0x1d2124fe280
    |     | |   |   |   |   `-DeclRefExpr 0x1d212501250 <col:27> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |     | |   |   |   `-IntegerLiteral 0x1d2125012a0 <col:35> 'int' 0
    |     | |   |   `-IntegerLiteral 0x1d212501300 <col:41> 'int' 1
    |     | |   `-ImplicitCastExpr 0x1d2125013b8 <col:46> 'unsigned long long' <IntegralCast>
    |     | |     `-ImplicitCastExpr 0x1d2125013a0 <col:46> 'unsigned int' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x1d212501380 <col:46> 'unsigned int' lvalue Var 0x1d2124ffc50 'res' 'unsigned int'
    |     | `-BinaryOperator 0x1d212501660 <line:73:13, col:46> 'u64':'unsigned long long' '='
    |     |   |-ArraySubscriptExpr 0x1d2125014a0 <col:13, col:22> 'u64':'unsigned long long' lvalue
    |     |   | |-ImplicitCastExpr 0x1d212501488 <col:13, col:19> 'u64 *' <ArrayToPointerDecay>
    |     |   | | `-MemberExpr 0x1d212501430 <col:13, col:19> 'u64 [2]' lvalue .u 0x1d2124fe280
    |     |   | |   `-DeclRefExpr 0x1d212501410 <col:13> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |     |   | `-IntegerLiteral 0x1d212501460 <col:21> 'int' 1
    |     |   `-BinaryOperator 0x1d212501640 <col:26, col:46> 'unsigned long long' '|'
    |     |     |-ParenExpr 0x1d2125015d0 <col:26, col:42> 'u64':'unsigned long long'
    |     |     | `-BinaryOperator 0x1d2125015b0 <col:27, col:41> 'u64':'unsigned long long' '<<'
    |     |     |   |-ImplicitCastExpr 0x1d212501598 <col:27, col:36> 'u64':'unsigned long long' <LValueToRValue>
    |     |     |   | `-ArraySubscriptExpr 0x1d212501550 <col:27, col:36> 'u64':'unsigned long long' lvalue
    |     |     |   |   |-ImplicitCastExpr 0x1d212501538 <col:27, col:33> 'u64 *' <ArrayToPointerDecay>
    |     |     |   |   | `-MemberExpr 0x1d2125014e0 <col:27, col:33> 'u64 [2]' lvalue .u 0x1d2124fe280
    |     |     |   |   |   `-DeclRefExpr 0x1d2125014c0 <col:27> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |     |     |   |   `-IntegerLiteral 0x1d212501510 <col:35> 'int' 1
    |     |     |   `-IntegerLiteral 0x1d212501570 <col:41> 'int' 1
    |     |     `-ImplicitCastExpr 0x1d212501628 <col:46> 'unsigned long long' <IntegralCast>
    |     |       `-ImplicitCastExpr 0x1d212501610 <col:46> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x1d2125015f0 <col:46> 'unsigned int' lvalue Var 0x1d2124ffbd0 'carry' 'unsigned int'
    |     `-CompoundStmt 0x1d212502028 <line:74:16, line:86:9>
    |       |-DeclStmt 0x1d212501730 <line:75:13, col:21>
    |       | `-VarDecl 0x1d2125016c8 <col:13, col:20> col:20 used c 'size_t':'unsigned long long'
    |       |-ForStmt 0x1d212501d68 <line:77:13, line:84:13>
    |       | |-BinaryOperator 0x1d212501878 <line:77:18, col:29> 'unsigned int' ','
    |       | | |-BinaryOperator 0x1d2125017c0 <col:18, col:22> 'size_t':'unsigned long long' '='
    |       | | | |-DeclRefExpr 0x1d212501748 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1d2125016c8 'c' 'size_t':'unsigned long long'
    |       | | | `-ImplicitCastExpr 0x1d2125017a8 <col:22> 'size_t':'unsigned long long' <IntegralCast>
    |       | | |   `-IntegerLiteral 0x1d212501780 <col:22> 'int' 0
    |       | | `-BinaryOperator 0x1d212501858 <col:25, col:29> 'unsigned int' '='
    |       | |   |-DeclRefExpr 0x1d2125017e0 <col:25> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |       | |   `-ImplicitCastExpr 0x1d212501840 <col:29> 'unsigned int' <IntegralCast>
    |       | |     `-IntegerLiteral 0x1d212501818 <col:29> 'int' 0
    |       | |-<<<NULL>>>
    |       | |-BinaryOperator 0x1d212501910 <col:32, col:36> 'int' '<'
    |       | | |-ImplicitCastExpr 0x1d2125018e0 <col:32> 'unsigned int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x1d212501898 <col:32> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |       | | `-ImplicitCastExpr 0x1d2125018f8 <col:36> 'unsigned int' <IntegralCast>
    |       | |   `-IntegerLiteral 0x1d2125018b8 <col:36> 'int' 16
    |       | |-UnaryOperator 0x1d212501950 <col:40, col:42> 'unsigned int' prefix '++'
    |       | | `-DeclRefExpr 0x1d212501930 <col:42> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |       | `-CompoundStmt 0x1d212501d40 <col:45, line:84:13>
    |       |   |-CompoundAssignOperator 0x1d212501b00 <line:81:17, col:46> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |       |   | |-DeclRefExpr 0x1d212501968 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1d2125016c8 'c' 'size_t':'unsigned long long'
    |       |   | `-BinaryOperator 0x1d212501ae0 <col:22, col:46> 'size_t':'unsigned long long' '<<'
    |       |   |   |-ParenExpr 0x1d212501a98 <col:22, col:41> 'size_t':'unsigned long long'
    |       |   |   | `-CStyleCastExpr 0x1d212501a70 <col:23, col:40> 'size_t':'unsigned long long' <IntegralCast>
    |       |   |   |   `-ImplicitCastExpr 0x1d212501a58 <col:31, col:40> 'u8':'unsigned char' <LValueToRValue> part_of_explicit_cast
    |       |   |   |     `-ArraySubscriptExpr 0x1d212501a28 <col:31, col:40> 'u8':'unsigned char' lvalue
    |       |   |   |       |-ImplicitCastExpr 0x1d2125019f8 <col:31, col:37> 'u8 *' <ArrayToPointerDecay>
    |       |   |   |       | `-MemberExpr 0x1d2125019a8 <col:31, col:37> 'u8 [16]' lvalue .c 0x1d2124fe3f0
    |       |   |   |       |   `-DeclRefExpr 0x1d212501988 <col:31> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |       |   |   |       `-ImplicitCastExpr 0x1d212501a10 <col:39> 'unsigned int' <LValueToRValue>
    |       |   |   |         `-DeclRefExpr 0x1d2125019d8 <col:39> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |       |   |   `-IntegerLiteral 0x1d212501ab8 <col:46> 'int' 1
    |       |   |-BinaryOperator 0x1d212501c60 <line:82:17, col:34> 'u8':'unsigned char' '='
    |       |   | |-ArraySubscriptExpr 0x1d212501bd0 <col:17, col:26> 'u8':'unsigned char' lvalue
    |       |   | | |-ImplicitCastExpr 0x1d212501ba0 <col:17, col:23> 'u8 *' <ArrayToPointerDecay>
    |       |   | | | `-MemberExpr 0x1d212501b50 <col:17, col:23> 'u8 [16]' lvalue .c 0x1d2124fe3f0
    |       |   | | |   `-DeclRefExpr 0x1d212501b30 <col:17> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |       |   | | `-ImplicitCastExpr 0x1d212501bb8 <col:25> 'unsigned int' <LValueToRValue>
    |       |   | |   `-DeclRefExpr 0x1d212501b80 <col:25> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |       |   | `-CStyleCastExpr 0x1d212501c38 <col:30, col:34> 'u8':'unsigned char' <IntegralCast>
    |       |   |   `-ImplicitCastExpr 0x1d212501c20 <col:34> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
    |       |   |     `-DeclRefExpr 0x1d212501bf0 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1d2125016c8 'c' 'size_t':'unsigned long long'
    |       |   `-BinaryOperator 0x1d212501d20 <line:83:17, col:26> 'size_t':'unsigned long long' '='
    |       |     |-DeclRefExpr 0x1d212501c80 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1d2125016c8 'c' 'size_t':'unsigned long long'
    |       |     `-BinaryOperator 0x1d212501d00 <col:21, col:26> 'size_t':'unsigned long long' '>>'
    |       |       |-ImplicitCastExpr 0x1d212501ce8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
    |       |       | `-DeclRefExpr 0x1d212501ca0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1d2125016c8 'c' 'size_t':'unsigned long long'
    |       |       `-IntegerLiteral 0x1d212501cc0 <col:26> 'int' 8
    |       `-CompoundAssignOperator 0x1d212501ff8 <line:85:13, col:46> 'u8':'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-ArraySubscriptExpr 0x1d212501e30 <col:13, col:22> 'u8':'unsigned char' lvalue
    |         | |-ImplicitCastExpr 0x1d212501e18 <col:13, col:19> 'u8 *' <ArrayToPointerDecay>
    |         | | `-MemberExpr 0x1d212501dc0 <col:13, col:19> 'u8 [16]' lvalue .c 0x1d2124fe3f0
    |         | |   `-DeclRefExpr 0x1d212501da0 <col:13> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |         | `-IntegerLiteral 0x1d212501df0 <col:21> 'int' 0
    |         `-ImplicitCastExpr 0x1d212501fe0 <col:27, col:46> 'int' <IntegralCast>
    |           `-CStyleCastExpr 0x1d212501fb8 <col:27, col:46> 'u8':'unsigned char' <IntegralCast>
    |             `-ParenExpr 0x1d212501f98 <col:31, col:46> 'unsigned long long'
    |               `-BinaryOperator 0x1d212501f48 <col:32, col:45> 'unsigned long long' '&'
    |                 |-ImplicitCastExpr 0x1d212501f30 <col:32> 'unsigned long long' <IntegralCast>
    |                 | `-IntegerLiteral 0x1d212501e50 <col:32> 'int' 135
    |                 `-ParenExpr 0x1d212501f10 <col:39, col:45> 'unsigned long long'
    |                   `-BinaryOperator 0x1d212501ef0 <col:40, col:44> 'unsigned long long' '-'
    |                     |-ImplicitCastExpr 0x1d212501ed8 <col:40> 'unsigned long long' <IntegralCast>
    |                     | `-IntegerLiteral 0x1d212501e78 <col:40> 'int' 0
    |                     `-ImplicitCastExpr 0x1d212501ec0 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
    |                       `-DeclRefExpr 0x1d212501ea0 <col:44> 'size_t':'unsigned long long' lvalue Var 0x1d2125016c8 'c' 'size_t':'unsigned long long'
    |-IfStmt 0x1d21250a070 <line:88:5, line:154:5> has_else
    | |-ImplicitCastExpr 0x1d212500110 <line:88:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1d2125000f0 <col:9> 'int' lvalue ParmVar 0x1d2124f6af8 'enc' 'int'
    | |-CompoundStmt 0x1d212500ff8 <col:14, line:100:5>
    | | |-ForStmt 0x1d2125006a0 <line:89:9, line:93:9>
    | | | |-BinaryOperator 0x1d212500188 <line:89:14, col:18> 'unsigned int' '='
    | | | | |-DeclRefExpr 0x1d212500128 <col:14> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    | | | | `-ImplicitCastExpr 0x1d212500170 <col:18> 'unsigned int' <IntegralCast>
    | | | |   `-IntegerLiteral 0x1d212500148 <col:18> 'int' 0
    | | | |-<<<NULL>>>
    | | | |-BinaryOperator 0x1d212500230 <col:21, col:25> 'int' '<'
    | | | | |-ImplicitCastExpr 0x1d212500218 <col:21> 'unsigned long long' <IntegralCast>
    | | | | | `-ImplicitCastExpr 0x1d2125001e8 <col:21> 'unsigned int' <LValueToRValue>
    | | | | |   `-DeclRefExpr 0x1d2125001a8 <col:21> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    | | | | `-ImplicitCastExpr 0x1d212500200 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x1d2125001c8 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2124f6a78 'len' 'size_t':'unsigned long long'
    | | | |-UnaryOperator 0x1d212500270 <col:30, col:32> 'unsigned int' prefix '++'
    | | | | `-DeclRefExpr 0x1d212500250 <col:32> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    | | | `-CompoundStmt 0x1d212500678 <col:35, line:93:9>
    | | |   |-DeclStmt 0x1d2125003a8 <line:90:13, col:26>
    | | |   | `-VarDecl 0x1d212500298 <col:13, col:25> col:16 used c 'u8':'unsigned char' cinit
    | | |   |   `-ImplicitCastExpr 0x1d212500390 <col:20, col:25> 'unsigned char' <LValueToRValue>
    | | |   |     `-ArraySubscriptExpr 0x1d212500370 <col:20, col:25> 'const unsigned char' lvalue
    | | |   |       |-ImplicitCastExpr 0x1d212500340 <col:20> 'const unsigned char *' <LValueToRValue>
    | | |   |       | `-DeclRefExpr 0x1d212500300 <col:20> 'const unsigned char *' lvalue ParmVar 0x1d2124f6950 'inp' 'const unsigned char *'
    | | |   |       `-ImplicitCastExpr 0x1d212500358 <col:24> 'unsigned int' <LValueToRValue>
    | | |   |         `-DeclRefExpr 0x1d212500320 <col:24> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    | | |   |-BinaryOperator 0x1d212500528 <line:91:13, col:33> 'unsigned char' '='
    | | |   | |-ArraySubscriptExpr 0x1d212500430 <col:13, col:18> 'unsigned char' lvalue
    | | |   | | |-ImplicitCastExpr 0x1d212500400 <col:13> 'unsigned char *' <LValueToRValue>
    | | |   | | | `-DeclRefExpr 0x1d2125003c0 <col:13> 'unsigned char *' lvalue ParmVar 0x1d2124f6a00 'out' 'unsigned char *'
    | | |   | | `-ImplicitCastExpr 0x1d212500418 <col:17> 'unsigned int' <LValueToRValue>
    | | |   | |   `-DeclRefExpr 0x1d2125003e0 <col:17> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    | | |   | `-ImplicitCastExpr 0x1d212500510 <col:22, col:33> 'u8':'unsigned char' <LValueToRValue>
    | | |   |   `-ArraySubscriptExpr 0x1d2125004f0 <col:22, col:33> 'u8':'unsigned char' lvalue
    | | |   |     |-ImplicitCastExpr 0x1d2125004c0 <col:22, col:30> 'u8 *' <ArrayToPointerDecay>
    | | |   |     | `-MemberExpr 0x1d212500470 <col:22, col:30> 'u8 [16]' lvalue .c 0x1d2124fe3f0
    | | |   |     |   `-DeclRefExpr 0x1d212500450 <col:22> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | | |   |     `-ImplicitCastExpr 0x1d2125004d8 <col:32> 'unsigned int' <LValueToRValue>
    | | |   |       `-DeclRefExpr 0x1d2125004a0 <col:32> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    | | |   `-BinaryOperator 0x1d212500658 <line:92:13, col:28> 'u8':'unsigned char' '='
    | | |     |-ArraySubscriptExpr 0x1d2125005e8 <col:13, col:24> 'u8':'unsigned char' lvalue
    | | |     | |-ImplicitCastExpr 0x1d2125005b8 <col:13, col:21> 'u8 *' <ArrayToPointerDecay>
    | | |     | | `-MemberExpr 0x1d212500568 <col:13, col:21> 'u8 [16]' lvalue .c 0x1d2124fe3f0
    | | |     | |   `-DeclRefExpr 0x1d212500548 <col:13> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | | |     | `-ImplicitCastExpr 0x1d2125005d0 <col:23> 'unsigned int' <LValueToRValue>
    | | |     |   `-DeclRefExpr 0x1d212500598 <col:23> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    | | |     `-ImplicitCastExpr 0x1d212500640 <col:28> 'u8':'unsigned char' <LValueToRValue>
    | | |       `-DeclRefExpr 0x1d212500608 <col:28> 'u8':'unsigned char' lvalue Var 0x1d212500298 'c' 'u8':'unsigned char'
    | | |-CompoundAssignOperator 0x1d212500850 <line:94:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1d212500768 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1d212500750 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1d2125006f8 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    | | | | |   `-DeclRefExpr 0x1d2125006d8 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1d212500728 <col:19> 'int' 0
    | | | `-ImplicitCastExpr 0x1d212500838 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1d212500818 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1d212500800 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1d2125007a8 <col:25, col:31> 'u64 [2]' lvalue .u 0x1d2124fe280
    | | |     |   `-DeclRefExpr 0x1d212500788 <col:25> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1d2125007d8 <col:33> 'int' 0
    | | |-CompoundAssignOperator 0x1d2125009f8 <line:95:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1d212500910 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1d2125008f8 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1d2125008a0 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    | | | | |   `-DeclRefExpr 0x1d212500880 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1d2125008d0 <col:19> 'int' 1
    | | | `-ImplicitCastExpr 0x1d2125009e0 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1d2125009c0 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1d2125009a8 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1d212500950 <col:25, col:31> 'u64 [2]' lvalue .u 0x1d2124fe280
    | | |     |   `-DeclRefExpr 0x1d212500930 <col:25> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1d212500980 <col:33> 'int' 1
    | | |-CompoundAssignOperator 0x1d212500c40 <line:97:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1d212500b58 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1d212500b40 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1d212500ae8 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    | | | | |   `-DeclRefExpr 0x1d212500ac8 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1d212500b18 <col:19> 'int' 0
    | | | `-ImplicitCastExpr 0x1d212500c28 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1d212500c08 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1d212500bf0 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1d212500b98 <col:25, col:31> 'u64 [2]' lvalue .u 0x1d2124fe280
    | | |     |   `-DeclRefExpr 0x1d212500b78 <col:25> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1d212500bc8 <col:33> 'int' 0
    | | |-CompoundAssignOperator 0x1d212500de8 <line:98:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | | | |-ArraySubscriptExpr 0x1d212500d00 <col:9, col:20> 'u64':'unsigned long long' lvalue
    | | | | |-ImplicitCastExpr 0x1d212500ce8 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    | | | | | `-MemberExpr 0x1d212500c90 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    | | | | |   `-DeclRefExpr 0x1d212500c70 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | | | | `-IntegerLiteral 0x1d212500cc0 <col:19> 'int' 1
    | | | `-ImplicitCastExpr 0x1d212500dd0 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1d212500db0 <col:25, col:34> 'u64':'unsigned long long' lvalue
    | | |     |-ImplicitCastExpr 0x1d212500d98 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    | | |     | `-MemberExpr 0x1d212500d40 <col:25, col:31> 'u64 [2]' lvalue .u 0x1d2124fe280
    | | |     |   `-DeclRefExpr 0x1d212500d20 <col:25> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | | |     `-IntegerLiteral 0x1d212500d70 <col:33> 'int' 1
    | | `-CallExpr 0x1d212500f60 <line:99:9, col:39> 'void *'
    | |   |-ImplicitCastExpr 0x1d212500f48 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x1d212500e18 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1d21248bf08 'memcpy' 'void *(void *, const void *, unsigned long long)'
    | |   |-ImplicitCastExpr 0x1d212500f98 <col:16, col:22> 'void *' <BitCast>
    | |   | `-BinaryOperator 0x1d212500e98 <col:16, col:22> 'unsigned char *' '-'
    | |   |   |-ImplicitCastExpr 0x1d212500e80 <col:16> 'unsigned char *' <LValueToRValue>
    | |   |   | `-DeclRefExpr 0x1d212500e38 <col:16> 'unsigned char *' lvalue ParmVar 0x1d2124f6a00 'out' 'unsigned char *'
    | |   |   `-IntegerLiteral 0x1d212500e58 <col:22> 'int' 16
    | |   |-ImplicitCastExpr 0x1d212500fc8 <col:26, col:34> 'const void *' <BitCast>
    | |   | `-ImplicitCastExpr 0x1d212500fb0 <col:26, col:34> 'u8 *' <ArrayToPointerDecay>
    | |   |   `-MemberExpr 0x1d212500ed8 <col:26, col:34> 'u8 [16]' lvalue .c 0x1d2124fe3f0
    | |   |     `-DeclRefExpr 0x1d212500eb8 <col:26> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    | |   `-ImplicitCastExpr 0x1d212500fe0 <col:37> 'unsigned long long' <IntegralCast>
    | |     `-IntegerLiteral 0x1d212500f08 <col:37> 'int' 16
    | `-CompoundStmt 0x1d21250a008 <line:100:12, line:154:5>
    |   |-DeclStmt 0x1d2125091e8 <line:101:9, line:104:17>
    |   | |-RecordDecl 0x1d212501038 <line:101:9, line:104:9> line:101:9 union definition
    |   | | |-FieldDecl 0x1d212509000 <line:102:13, col:20> col:17 referenced u 'u64 [2]'
    |   | | `-FieldDecl 0x1d2125090b8 <line:103:13, col:20> col:16 referenced c 'u8 [16]'
    |   | `-VarDecl 0x1d212509168 <line:101:9, line:104:11> col:11 used tweak1 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)'
    |   |-IfStmt 0x1d2125076c0 <line:106:9, line:125:9> has_else
    |   | |-ImplicitCastExpr 0x1d212509250 <line:106:13, col:23> 'char' <LValueToRValue>
    |   | | `-MemberExpr 0x1d212509220 <col:13, col:23> 'const char' lvalue .little 0x1d2124f6e90
    |   | |   `-DeclRefExpr 0x1d212509200 <col:13> 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)' lvalue Var 0x1d2124f6f48 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:19:11)'
    |   | |-CompoundStmt 0x1d212509d18 <col:31, line:113:9>
    |   | | |-DeclStmt 0x1d212509380 <line:107:13, col:36>
    |   | | | |-VarDecl 0x1d212509280 <col:13, col:26> col:26 used carry 'unsigned int'
    |   | | | `-VarDecl 0x1d212509300 <col:13, col:33> col:33 used res 'unsigned int'
    |   | | |-BinaryOperator 0x1d2125095c0 <line:109:13, col:50> 'unsigned int' '='
    |   | | | |-DeclRefExpr 0x1d212509398 <col:13> 'unsigned int' lvalue Var 0x1d212509300 'res' 'unsigned int'
    |   | | | `-ImplicitCastExpr 0x1d2125095a8 <col:19, col:50> 'unsigned int' <IntegralCast>
    |   | | |   `-BinaryOperator 0x1d212509588 <col:19, col:50> 'int' '&'
    |   | | |     |-IntegerLiteral 0x1d2125093d0 <col:19> 'int' 135
    |   | | |     `-ParenExpr 0x1d212509568 <col:26, col:50> 'int'
    |   | | |       `-BinaryOperator 0x1d212509548 <col:27, col:48> 'int' '>>'
    |   | | |         |-ParenExpr 0x1d212509500 <col:27, col:43> 'int'
    |   | | |         | `-CStyleCastExpr 0x1d2125094d8 <col:28, col:42> 'int' <IntegralCast>
    |   | | |         |   `-ImplicitCastExpr 0x1d2125094c0 <col:33, col:42> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |   | | |         |     `-ArraySubscriptExpr 0x1d212509488 <col:33, col:42> 'u32':'unsigned int' lvalue
    |   | | |         |       |-ImplicitCastExpr 0x1d212509470 <col:33, col:39> 'u32 *' <ArrayToPointerDecay>
    |   | | |         |       | `-MemberExpr 0x1d212509418 <col:33, col:39> 'u32 [4]' lvalue .d 0x1d2124fe338
    |   | | |         |       |   `-DeclRefExpr 0x1d2125093f8 <col:33> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | |         |       `-IntegerLiteral 0x1d212509448 <col:41> 'int' 3
    |   | | |         `-IntegerLiteral 0x1d212509520 <col:48> 'int' 31
    |   | | |-BinaryOperator 0x1d2125097a8 <line:110:13, col:52> 'unsigned int' '='
    |   | | | |-DeclRefExpr 0x1d2125095e0 <col:13> 'unsigned int' lvalue Var 0x1d212509280 'carry' 'unsigned int'
    |   | | | `-CStyleCastExpr 0x1d212509780 <col:21, col:52> 'unsigned int' <IntegralCast>
    |   | | |   `-ParenExpr 0x1d212509760 <col:35, col:52> 'u64':'unsigned long long'
    |   | | |     `-BinaryOperator 0x1d212509708 <col:36, col:50> 'u64':'unsigned long long' '>>'
    |   | | |       |-ImplicitCastExpr 0x1d2125096f0 <col:36, col:45> 'u64':'unsigned long long' <LValueToRValue>
    |   | | |       | `-ArraySubscriptExpr 0x1d2125096a8 <col:36, col:45> 'u64':'unsigned long long' lvalue
    |   | | |       |   |-ImplicitCastExpr 0x1d212509690 <col:36, col:42> 'u64 *' <ArrayToPointerDecay>
    |   | | |       |   | `-MemberExpr 0x1d212509638 <col:36, col:42> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | | |       |   |   `-DeclRefExpr 0x1d212509618 <col:36> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | |       |   `-IntegerLiteral 0x1d212509668 <col:44> 'int' 0
    |   | | |       `-IntegerLiteral 0x1d2125096c8 <col:50> 'int' 63
    |   | | |-BinaryOperator 0x1d212509a30 <line:111:13, col:47> 'u64':'unsigned long long' '='
    |   | | | |-ArraySubscriptExpr 0x1d212509870 <col:13, col:23> 'u64':'unsigned long long' lvalue
    |   | | | | |-ImplicitCastExpr 0x1d212509858 <col:13, col:20> 'u64 *' <ArrayToPointerDecay>
    |   | | | | | `-MemberExpr 0x1d212509800 <col:13, col:20> 'u64 [2]' lvalue .u 0x1d212509000
    |   | | | | |   `-DeclRefExpr 0x1d2125097c8 <col:13> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)' lvalue Var 0x1d212509168 'tweak1' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)'
    |   | | | | `-IntegerLiteral 0x1d212509830 <col:22> 'int' 0
    |   | | | `-BinaryOperator 0x1d212509a10 <col:27, col:47> 'unsigned long long' '^'
    |   | | |   |-ParenExpr 0x1d2125099a0 <col:27, col:43> 'u64':'unsigned long long'
    |   | | |   | `-BinaryOperator 0x1d212509980 <col:28, col:42> 'u64':'unsigned long long' '<<'
    |   | | |   |   |-ImplicitCastExpr 0x1d212509968 <col:28, col:37> 'u64':'unsigned long long' <LValueToRValue>
    |   | | |   |   | `-ArraySubscriptExpr 0x1d212509920 <col:28, col:37> 'u64':'unsigned long long' lvalue
    |   | | |   |   |   |-ImplicitCastExpr 0x1d212509908 <col:28, col:34> 'u64 *' <ArrayToPointerDecay>
    |   | | |   |   |   | `-MemberExpr 0x1d2125098b0 <col:28, col:34> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | | |   |   |   |   `-DeclRefExpr 0x1d212509890 <col:28> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | |   |   |   `-IntegerLiteral 0x1d2125098e0 <col:36> 'int' 0
    |   | | |   |   `-IntegerLiteral 0x1d212509940 <col:42> 'int' 1
    |   | | |   `-ImplicitCastExpr 0x1d2125099f8 <col:47> 'unsigned long long' <IntegralCast>
    |   | | |     `-ImplicitCastExpr 0x1d2125099e0 <col:47> 'unsigned int' <LValueToRValue>
    |   | | |       `-DeclRefExpr 0x1d2125099c0 <col:47> 'unsigned int' lvalue Var 0x1d212509300 'res' 'unsigned int'
    |   | | `-BinaryOperator 0x1d212509cf8 <line:112:13, col:47> 'u64':'unsigned long long' '='
    |   | |   |-ArraySubscriptExpr 0x1d212509b38 <col:13, col:23> 'u64':'unsigned long long' lvalue
    |   | |   | |-ImplicitCastExpr 0x1d212509b20 <col:13, col:20> 'u64 *' <ArrayToPointerDecay>
    |   | |   | | `-MemberExpr 0x1d212509ac8 <col:13, col:20> 'u64 [2]' lvalue .u 0x1d212509000
    |   | |   | |   `-DeclRefExpr 0x1d212509aa8 <col:13> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)' lvalue Var 0x1d212509168 'tweak1' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)'
    |   | |   | `-IntegerLiteral 0x1d212509af8 <col:22> 'int' 1
    |   | |   `-BinaryOperator 0x1d212509cd8 <col:27, col:47> 'unsigned long long' '|'
    |   | |     |-ParenExpr 0x1d212509c68 <col:27, col:43> 'u64':'unsigned long long'
    |   | |     | `-BinaryOperator 0x1d212509c48 <col:28, col:42> 'u64':'unsigned long long' '<<'
    |   | |     |   |-ImplicitCastExpr 0x1d212509c30 <col:28, col:37> 'u64':'unsigned long long' <LValueToRValue>
    |   | |     |   | `-ArraySubscriptExpr 0x1d212509be8 <col:28, col:37> 'u64':'unsigned long long' lvalue
    |   | |     |   |   |-ImplicitCastExpr 0x1d212509bd0 <col:28, col:34> 'u64 *' <ArrayToPointerDecay>
    |   | |     |   |   | `-MemberExpr 0x1d212509b78 <col:28, col:34> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | |     |   |   |   `-DeclRefExpr 0x1d212509b58 <col:28> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | |     |   |   `-IntegerLiteral 0x1d212509ba8 <col:36> 'int' 1
    |   | |     |   `-IntegerLiteral 0x1d212509c08 <col:42> 'int' 1
    |   | |     `-ImplicitCastExpr 0x1d212509cc0 <col:47> 'unsigned long long' <IntegralCast>
    |   | |       `-ImplicitCastExpr 0x1d212509ca8 <col:47> 'unsigned int' <LValueToRValue>
    |   | |         `-DeclRefExpr 0x1d212509c88 <col:47> 'unsigned int' lvalue Var 0x1d212509280 'carry' 'unsigned int'
    |   | `-CompoundStmt 0x1d212507698 <line:113:16, line:125:9>
    |   |   |-DeclStmt 0x1d212509dc8 <line:114:13, col:21>
    |   |   | `-VarDecl 0x1d212509d60 <col:13, col:20> col:20 used c 'size_t':'unsigned long long'
    |   |   |-ForStmt 0x1d2125073d8 <line:116:13, line:123:13>
    |   |   | |-BinaryOperator 0x1d212509ef8 <line:116:18, col:29> 'unsigned int' ','
    |   |   | | |-BinaryOperator 0x1d212509e58 <col:18, col:22> 'size_t':'unsigned long long' '='
    |   |   | | | |-DeclRefExpr 0x1d212509de0 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1d212509d60 'c' 'size_t':'unsigned long long'
    |   |   | | | `-ImplicitCastExpr 0x1d212509e40 <col:22> 'size_t':'unsigned long long' <IntegralCast>
    |   |   | | |   `-IntegerLiteral 0x1d212509e18 <col:22> 'int' 0
    |   |   | | `-BinaryOperator 0x1d212509ed8 <col:25, col:29> 'unsigned int' '='
    |   |   | |   |-DeclRefExpr 0x1d212509e78 <col:25> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   |   | |   `-ImplicitCastExpr 0x1d212509ec0 <col:29> 'unsigned int' <IntegralCast>
    |   |   | |     `-IntegerLiteral 0x1d212509e98 <col:29> 'int' 0
    |   |   | |-<<<NULL>>>
    |   |   | |-BinaryOperator 0x1d212506f80 <col:32, col:36> 'int' '<'
    |   |   | | |-ImplicitCastExpr 0x1d212509f60 <col:32> 'unsigned int' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x1d212509f18 <col:32> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   |   | | `-ImplicitCastExpr 0x1d212509f78 <col:36> 'unsigned int' <IntegralCast>
    |   |   | |   `-IntegerLiteral 0x1d212509f38 <col:36> 'int' 16
    |   |   | |-UnaryOperator 0x1d212506fc0 <col:40, col:42> 'unsigned int' prefix '++'
    |   |   | | `-DeclRefExpr 0x1d212506fa0 <col:42> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   |   | `-CompoundStmt 0x1d2125073b0 <col:45, line:123:13>
    |   |   |   |-CompoundAssignOperator 0x1d212507170 <line:120:17, col:46> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   |   |   | |-DeclRefExpr 0x1d212506fd8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1d212509d60 'c' 'size_t':'unsigned long long'
    |   |   |   | `-BinaryOperator 0x1d212507150 <col:22, col:46> 'size_t':'unsigned long long' '<<'
    |   |   |   |   |-ParenExpr 0x1d212507108 <col:22, col:41> 'size_t':'unsigned long long'
    |   |   |   |   | `-CStyleCastExpr 0x1d2125070e0 <col:23, col:40> 'size_t':'unsigned long long' <IntegralCast>
    |   |   |   |   |   `-ImplicitCastExpr 0x1d2125070c8 <col:31, col:40> 'u8':'unsigned char' <LValueToRValue> part_of_explicit_cast
    |   |   |   |   |     `-ArraySubscriptExpr 0x1d212507098 <col:31, col:40> 'u8':'unsigned char' lvalue
    |   |   |   |   |       |-ImplicitCastExpr 0x1d212507068 <col:31, col:37> 'u8 *' <ArrayToPointerDecay>
    |   |   |   |   |       | `-MemberExpr 0x1d212507018 <col:31, col:37> 'u8 [16]' lvalue .c 0x1d2124fe3f0
    |   |   |   |   |       |   `-DeclRefExpr 0x1d212506ff8 <col:31> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |   |   |   |       `-ImplicitCastExpr 0x1d212507080 <col:39> 'unsigned int' <LValueToRValue>
    |   |   |   |   |         `-DeclRefExpr 0x1d212507048 <col:39> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   |   |   |   `-IntegerLiteral 0x1d212507128 <col:46> 'int' 1
    |   |   |   |-BinaryOperator 0x1d2125072d0 <line:121:17, col:35> 'u8':'unsigned char' '='
    |   |   |   | |-ArraySubscriptExpr 0x1d212507240 <col:17, col:27> 'u8':'unsigned char' lvalue
    |   |   |   | | |-ImplicitCastExpr 0x1d212507210 <col:17, col:24> 'u8 *' <ArrayToPointerDecay>
    |   |   |   | | | `-MemberExpr 0x1d2125071c0 <col:17, col:24> 'u8 [16]' lvalue .c 0x1d2125090b8
    |   |   |   | | |   `-DeclRefExpr 0x1d2125071a0 <col:17> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)' lvalue Var 0x1d212509168 'tweak1' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)'
    |   |   |   | | `-ImplicitCastExpr 0x1d212507228 <col:26> 'unsigned int' <LValueToRValue>
    |   |   |   | |   `-DeclRefExpr 0x1d2125071f0 <col:26> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   |   |   | `-CStyleCastExpr 0x1d2125072a8 <col:31, col:35> 'u8':'unsigned char' <IntegralCast>
    |   |   |   |   `-ImplicitCastExpr 0x1d212507290 <col:35> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1d212507260 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1d212509d60 'c' 'size_t':'unsigned long long'
    |   |   |   `-BinaryOperator 0x1d212507390 <line:122:17, col:26> 'size_t':'unsigned long long' '='
    |   |   |     |-DeclRefExpr 0x1d2125072f0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1d212509d60 'c' 'size_t':'unsigned long long'
    |   |   |     `-BinaryOperator 0x1d212507370 <col:21, col:26> 'size_t':'unsigned long long' '>>'
    |   |   |       |-ImplicitCastExpr 0x1d212507358 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
    |   |   |       | `-DeclRefExpr 0x1d212507310 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1d212509d60 'c' 'size_t':'unsigned long long'
    |   |   |       `-IntegerLiteral 0x1d212507330 <col:26> 'int' 8
    |   |   `-CompoundAssignOperator 0x1d212507668 <line:124:13, col:47> 'u8':'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |     |-ArraySubscriptExpr 0x1d2125074a0 <col:13, col:23> 'u8':'unsigned char' lvalue
    |   |     | |-ImplicitCastExpr 0x1d212507488 <col:13, col:20> 'u8 *' <ArrayToPointerDecay>
    |   |     | | `-MemberExpr 0x1d212507430 <col:13, col:20> 'u8 [16]' lvalue .c 0x1d2125090b8
    |   |     | |   `-DeclRefExpr 0x1d212507410 <col:13> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)' lvalue Var 0x1d212509168 'tweak1' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)'
    |   |     | `-IntegerLiteral 0x1d212507460 <col:22> 'int' 0
    |   |     `-ImplicitCastExpr 0x1d212507650 <col:28, col:47> 'int' <IntegralCast>
    |   |       `-CStyleCastExpr 0x1d212507628 <col:28, col:47> 'u8':'unsigned char' <IntegralCast>
    |   |         `-ParenExpr 0x1d212507608 <col:32, col:47> 'unsigned long long'
    |   |           `-BinaryOperator 0x1d2125075b8 <col:33, col:46> 'unsigned long long' '&'
    |   |             |-ImplicitCastExpr 0x1d2125075a0 <col:33> 'unsigned long long' <IntegralCast>
    |   |             | `-IntegerLiteral 0x1d2125074c0 <col:33> 'int' 135
    |   |             `-ParenExpr 0x1d212507580 <col:40, col:46> 'unsigned long long'
    |   |               `-BinaryOperator 0x1d212507560 <col:41, col:45> 'unsigned long long' '-'
    |   |                 |-ImplicitCastExpr 0x1d212507548 <col:41> 'unsigned long long' <IntegralCast>
    |   |                 | `-IntegerLiteral 0x1d2125074e8 <col:41> 'int' 0
    |   |                 `-ImplicitCastExpr 0x1d212507530 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
    |   |                   `-DeclRefExpr 0x1d212507510 <col:45> 'size_t':'unsigned long long' lvalue Var 0x1d212509d60 'c' 'size_t':'unsigned long long'
    |   |-BinaryOperator 0x1d212507970 <line:131:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1d212507778 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1d212507760 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1d212507708 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | | |   `-DeclRefExpr 0x1d2125076e8 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1d212507738 <col:19> 'int' 0
    |   | `-BinaryOperator 0x1d212507950 <col:24, col:52> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1d212507920 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1d212507850 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1d212507808 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1d2125077e0 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1d2125077c8 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1d212507798 <col:32> 'const unsigned char *' lvalue ParmVar 0x1d2124f6950 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1d212507828 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1d212507938 <col:42, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1d212507900 <col:42, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1d2125078e8 <col:42, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1d212507890 <col:42, col:49> 'u64 [2]' lvalue .u 0x1d212509000
    |   |       |   `-DeclRefExpr 0x1d212507870 <col:42> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)' lvalue Var 0x1d212509168 'tweak1' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)'
    |   |       `-IntegerLiteral 0x1d2125078c0 <col:51> 'int' 0
    |   |-BinaryOperator 0x1d212507c18 <line:132:9, col:52> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1d212507a20 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1d212507a08 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1d2125079b0 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | | |   `-DeclRefExpr 0x1d212507990 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1d2125079e0 <col:19> 'int' 1
    |   | `-BinaryOperator 0x1d212507bf8 <col:24, col:52> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1d212507bc8 <col:24, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1d212507af8 <col:24, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ParenExpr 0x1d212507ab0 <col:24, col:35> 'u64 *'
    |   |   |   | `-CStyleCastExpr 0x1d212507a88 <col:25, col:32> 'u64 *' <BitCast>
    |   |   |   |   `-ImplicitCastExpr 0x1d212507a70 <col:32> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   |   |   |     `-DeclRefExpr 0x1d212507a40 <col:32> 'const unsigned char *' lvalue ParmVar 0x1d2124f6950 'inp' 'const unsigned char *'
    |   |   |   `-IntegerLiteral 0x1d212507ad0 <col:37> 'int' 1
    |   |   `-ImplicitCastExpr 0x1d212507be0 <col:42, col:52> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1d212507ba8 <col:42, col:52> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1d212507b90 <col:42, col:49> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1d212507b38 <col:42, col:49> 'u64 [2]' lvalue .u 0x1d212509000
    |   |       |   `-DeclRefExpr 0x1d212507b18 <col:42> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)' lvalue Var 0x1d212509168 'tweak1' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)'
    |   |       `-IntegerLiteral 0x1d212507b68 <col:51> 'int' 1
    |   |-CompoundAssignOperator 0x1d212507e50 <line:135:9, col:35> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1d212507d68 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1d212507d50 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1d212507cf8 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | | |   `-DeclRefExpr 0x1d212507cd8 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1d212507d28 <col:19> 'int' 0
    |   | `-ImplicitCastExpr 0x1d212507e38 <col:25, col:35> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1d212507e18 <col:25, col:35> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1d212507e00 <col:25, col:32> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1d212507da8 <col:25, col:32> 'u64 [2]' lvalue .u 0x1d212509000
    |   |     |   `-DeclRefExpr 0x1d212507d88 <col:25> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)' lvalue Var 0x1d212509168 'tweak1' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)'
    |   |     `-IntegerLiteral 0x1d212507dd8 <col:34> 'int' 0
    |   |-CompoundAssignOperator 0x1d212508008 <line:136:9, col:35> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1d212507f10 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1d212507ef8 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1d212507ea0 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | | |   `-DeclRefExpr 0x1d212507e80 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1d212507ed0 <col:19> 'int' 1
    |   | `-ImplicitCastExpr 0x1d212507ff0 <col:25, col:35> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1d212507fd0 <col:25, col:35> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1d212507fb8 <col:25, col:32> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1d212507f50 <col:25, col:32> 'u64 [2]' lvalue .u 0x1d212509000
    |   |     |   `-DeclRefExpr 0x1d212507f30 <col:25> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)' lvalue Var 0x1d212509168 'tweak1' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:101:9)'
    |   |     `-IntegerLiteral 0x1d212507f90 <col:34> 'int' 1
    |   |-ForStmt 0x1d212508670 <line:138:9, line:142:9>
    |   | |-BinaryOperator 0x1d212508098 <line:138:14, col:18> 'unsigned int' '='
    |   | | |-DeclRefExpr 0x1d212508038 <col:14> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x1d212508080 <col:18> 'unsigned int' <IntegralCast>
    |   | |   `-IntegerLiteral 0x1d212508058 <col:18> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x1d212508140 <col:21, col:25> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1d212508128 <col:21> 'unsigned long long' <IntegralCast>
    |   | | | `-ImplicitCastExpr 0x1d2125080f8 <col:21> 'unsigned int' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x1d2125080b8 <col:21> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x1d212508110 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1d2125080d8 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1d2124f6a78 'len' 'size_t':'unsigned long long'
    |   | |-UnaryOperator 0x1d212508180 <col:30, col:32> 'unsigned int' prefix '++'
    |   | | `-DeclRefExpr 0x1d212508160 <col:32> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   | `-CompoundStmt 0x1d212508648 <col:35, line:142:9>
    |   |   |-DeclStmt 0x1d212508318 <line:139:13, col:31>
    |   |   | `-VarDecl 0x1d2125081a8 <col:13, col:30> col:16 used c 'u8':'unsigned char' cinit
    |   |   |   `-ImplicitCastExpr 0x1d212508300 <col:20, col:30> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x1d2125082e0 <col:20, col:30> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x1d2125082c8 <col:20> 'const unsigned char *' <LValueToRValue>
    |   |   |       | `-DeclRefExpr 0x1d212508210 <col:20> 'const unsigned char *' lvalue ParmVar 0x1d2124f6950 'inp' 'const unsigned char *'
    |   |   |       `-BinaryOperator 0x1d2125082a8 <col:24, col:29> 'unsigned int' '+'
    |   |   |         |-ImplicitCastExpr 0x1d212508290 <col:24> 'unsigned int' <IntegralCast>
    |   |   |         | `-IntegerLiteral 0x1d212508230 <col:24> 'int' 16
    |   |   |         `-ImplicitCastExpr 0x1d212508278 <col:29> 'unsigned int' <LValueToRValue>
    |   |   |           `-DeclRefExpr 0x1d212508258 <col:29> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   |   |-BinaryOperator 0x1d2125084f8 <line:140:13, col:38> 'unsigned char' '='
    |   |   | |-ArraySubscriptExpr 0x1d212508400 <col:13, col:23> 'unsigned char' lvalue
    |   |   | | |-ImplicitCastExpr 0x1d2125083e8 <col:13> 'unsigned char *' <LValueToRValue>
    |   |   | | | `-DeclRefExpr 0x1d212508330 <col:13> 'unsigned char *' lvalue ParmVar 0x1d2124f6a00 'out' 'unsigned char *'
    |   |   | | `-BinaryOperator 0x1d2125083c8 <col:17, col:22> 'unsigned int' '+'
    |   |   | |   |-ImplicitCastExpr 0x1d2125083b0 <col:17> 'unsigned int' <IntegralCast>
    |   |   | |   | `-IntegerLiteral 0x1d212508350 <col:17> 'int' 16
    |   |   | |   `-ImplicitCastExpr 0x1d212508398 <col:22> 'unsigned int' <LValueToRValue>
    |   |   | |     `-DeclRefExpr 0x1d212508378 <col:22> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   |   | `-ImplicitCastExpr 0x1d2125084e0 <col:27, col:38> 'u8':'unsigned char' <LValueToRValue>
    |   |   |   `-ArraySubscriptExpr 0x1d2125084c0 <col:27, col:38> 'u8':'unsigned char' lvalue
    |   |   |     |-ImplicitCastExpr 0x1d212508490 <col:27, col:35> 'u8 *' <ArrayToPointerDecay>
    |   |   |     | `-MemberExpr 0x1d212508440 <col:27, col:35> 'u8 [16]' lvalue .c 0x1d2124fe3f0
    |   |   |     |   `-DeclRefExpr 0x1d212508420 <col:27> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |   |     `-ImplicitCastExpr 0x1d2125084a8 <col:37> 'unsigned int' <LValueToRValue>
    |   |   |       `-DeclRefExpr 0x1d212508470 <col:37> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   |   `-BinaryOperator 0x1d212508628 <line:141:13, col:28> 'u8':'unsigned char' '='
    |   |     |-ArraySubscriptExpr 0x1d2125085b8 <col:13, col:24> 'u8':'unsigned char' lvalue
    |   |     | |-ImplicitCastExpr 0x1d212508588 <col:13, col:21> 'u8 *' <ArrayToPointerDecay>
    |   |     | | `-MemberExpr 0x1d212508538 <col:13, col:21> 'u8 [16]' lvalue .c 0x1d2124fe3f0
    |   |     | |   `-DeclRefExpr 0x1d212508518 <col:13> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |     | `-ImplicitCastExpr 0x1d2125085a0 <col:23> 'unsigned int' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1d212508568 <col:23> 'unsigned int' lvalue Var 0x1d2124fe5e8 'i' 'unsigned int'
    |   |     `-ImplicitCastExpr 0x1d212508610 <col:28> 'u8':'unsigned char' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1d2125085d8 <col:28> 'u8':'unsigned char' lvalue Var 0x1d2125081a8 'c' 'u8':'unsigned char'
    |   |-CompoundAssignOperator 0x1d212508820 <line:143:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1d212508738 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1d212508720 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1d2125086c8 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | | |   `-DeclRefExpr 0x1d2125086a8 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1d2125086f8 <col:19> 'int' 0
    |   | `-ImplicitCastExpr 0x1d212508808 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1d2125087e8 <col:25, col:34> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1d2125087d0 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1d212508778 <col:25, col:31> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   |     |   `-DeclRefExpr 0x1d212508758 <col:25> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |     `-IntegerLiteral 0x1d2125087a8 <col:33> 'int' 0
    |   |-CompoundAssignOperator 0x1d2125089c8 <line:144:9, col:34> 'u64':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    |   | |-ArraySubscriptExpr 0x1d2125088e0 <col:9, col:20> 'u64':'unsigned long long' lvalue
    |   | | |-ImplicitCastExpr 0x1d2125088c8 <col:9, col:17> 'u64 *' <ArrayToPointerDecay>
    |   | | | `-MemberExpr 0x1d212508870 <col:9, col:17> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   | | |   `-DeclRefExpr 0x1d212508850 <col:9> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   | | `-IntegerLiteral 0x1d2125088a0 <col:19> 'int' 1
    |   | `-ImplicitCastExpr 0x1d2125089b0 <col:25, col:34> 'u64':'unsigned long long' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1d212508990 <col:25, col:34> 'u64':'unsigned long long' lvalue
    |   |     |-ImplicitCastExpr 0x1d212508978 <col:25, col:31> 'u64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x1d212508920 <col:25, col:31> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   |     |   `-DeclRefExpr 0x1d212508900 <col:25> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |     `-IntegerLiteral 0x1d212508950 <col:33> 'int' 1
    |   |-BinaryOperator 0x1d212508d20 <line:151:9, col:51> 'u64':'unsigned long long' '='
    |   | |-ArraySubscriptExpr 0x1d212508b50 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |   | | |-ParenExpr 0x1d212508b08 <col:9, col:20> 'u64 *'
    |   | | | `-CStyleCastExpr 0x1d212508ae0 <col:10, col:17> 'u64 *' <BitCast>
    |   | | |   `-ImplicitCastExpr 0x1d212508ac8 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | | |     `-DeclRefExpr 0x1d212508a98 <col:17> 'unsigned char *' lvalue ParmVar 0x1d2124f6a00 'out' 'unsigned char *'
    |   | | `-IntegerLiteral 0x1d212508b28 <col:22> 'int' 0
    |   | `-BinaryOperator 0x1d212508d00 <col:27, col:51> 'unsigned long long' '^'
    |   |   |-ImplicitCastExpr 0x1d212508cd0 <col:27, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |   |   | `-ArraySubscriptExpr 0x1d212508c00 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |   |   |   |-ImplicitCastExpr 0x1d212508be8 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |   |   |   | `-MemberExpr 0x1d212508b90 <col:27, col:35> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   |   |   |   `-DeclRefExpr 0x1d212508b70 <col:27> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |   |   `-IntegerLiteral 0x1d212508bc0 <col:37> 'int' 0
    |   |   `-ImplicitCastExpr 0x1d212508ce8 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |   |     `-ArraySubscriptExpr 0x1d212508cb0 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |   |       |-ImplicitCastExpr 0x1d212508c98 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |   |       | `-MemberExpr 0x1d212508c40 <col:42, col:48> 'u64 [2]' lvalue .u 0x1d2124fe280
    |   |       |   `-DeclRefExpr 0x1d212508c20 <col:42> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |   |       `-IntegerLiteral 0x1d212508c70 <col:50> 'int' 0
    |   `-BinaryOperator 0x1d212509fe8 <line:152:9, col:51> 'u64':'unsigned long long' '='
    |     |-ArraySubscriptExpr 0x1d212508df8 <col:9, col:23> 'u64':'unsigned long long' lvalue
    |     | |-ParenExpr 0x1d212508db0 <col:9, col:20> 'u64 *'
    |     | | `-CStyleCastExpr 0x1d212508d88 <col:10, col:17> 'u64 *' <BitCast>
    |     | |   `-ImplicitCastExpr 0x1d212508d70 <col:17> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
    |     | |     `-DeclRefExpr 0x1d212508d40 <col:17> 'unsigned char *' lvalue ParmVar 0x1d2124f6a00 'out' 'unsigned char *'
    |     | `-IntegerLiteral 0x1d212508dd0 <col:22> 'int' 1
    |     `-BinaryOperator 0x1d212509fc8 <col:27, col:51> 'unsigned long long' '^'
    |       |-ImplicitCastExpr 0x1d212508f78 <col:27, col:38> 'u64':'unsigned long long' <LValueToRValue>
    |       | `-ArraySubscriptExpr 0x1d212508ea8 <col:27, col:38> 'u64':'unsigned long long' lvalue
    |       |   |-ImplicitCastExpr 0x1d212508e90 <col:27, col:35> 'u64 *' <ArrayToPointerDecay>
    |       |   | `-MemberExpr 0x1d212508e38 <col:27, col:35> 'u64 [2]' lvalue .u 0x1d2124fe280
    |       |   |   `-DeclRefExpr 0x1d212508e18 <col:27> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe530 'scratch' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |       |   `-IntegerLiteral 0x1d212508e68 <col:37> 'int' 1
    |       `-ImplicitCastExpr 0x1d212509fb0 <col:42, col:51> 'u64':'unsigned long long' <LValueToRValue>
    |         `-ArraySubscriptExpr 0x1d212508f58 <col:42, col:51> 'u64':'unsigned long long' lvalue
    |           |-ImplicitCastExpr 0x1d212508f40 <col:42, col:48> 'u64 *' <ArrayToPointerDecay>
    |           | `-MemberExpr 0x1d212508ee8 <col:42, col:48> 'u64 [2]' lvalue .u 0x1d2124fe280
    |           |   `-DeclRefExpr 0x1d212508ec8 <col:42> 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)' lvalue Var 0x1d2124fe4a8 'tweak' 'union (anonymous union at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)':'union (anonymous at .//openssl//file_jk/after\crypto\modes\xts128.c:25:5)'
    |           `-IntegerLiteral 0x1d212508f18 <col:50> 'int' 1
    `-ReturnStmt 0x1d21250a0c0 <line:156:5, col:12>
      `-IntegerLiteral 0x1d21250a098 <col:12> 'int' 0
