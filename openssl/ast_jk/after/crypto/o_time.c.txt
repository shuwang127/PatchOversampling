TranslationUnitDecl 0x1baf99447c8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1baf9945060 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1baf9944d60 '__int128'
|-TypedefDecl 0x1baf99450d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1baf9944d80 'unsigned __int128'
|-TypedefDecl 0x1baf9945408 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1baf99451c0 'struct __NSConstantString_tag'
|   `-Record 0x1baf9945128 '__NSConstantString_tag'
|-TypedefDecl 0x1baf9945478 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1baf99449a0 'unsigned long long'
|-TypedefDecl 0x1baf9945510 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1baf99454d0 'char *'
|   `-BuiltinType 0x1baf9944860 'char'
|-TypedefDecl 0x1baf9945580 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1baf99454d0 'char *'
|   `-BuiltinType 0x1baf9944860 'char'
|-TypedefDecl 0x1baf9945640 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1baf99449a0 'unsigned long long'
|-TypedefDecl 0x1baf99456b0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1baf99454d0 'char *'
|   `-BuiltinType 0x1baf9944860 'char'
|-FunctionDecl 0x1bafb28f420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1bafb28f4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1bafb28f530 <col:21> Implicit
|-FunctionDecl 0x1bafb28f588 prev 0x1bafb28f420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1bafb28f2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1bafb28f678 <col:21> Inherited Implicit
|-TypedefDecl 0x1bafb28f6b8 prev 0x1baf9945478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1baf99449a0 'unsigned long long'
|-TypedefDecl 0x1bafb28f760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1bafb28f730 'size_t' sugar
|   |-Typedef 0x1bafb28f6b8 'size_t'
|   `-BuiltinType 0x1baf99449a0 'unsigned long long'
|-TypedefDecl 0x1bafb28f7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1baf9944900 'long long'
|-TypedefDecl 0x1bafb28f840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1baf9944900 'long long'
|-TypedefDecl 0x1bafb28f8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1baf9944940 'unsigned short'
|-TypedefDecl 0x1bafb28f920 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1baf9944940 'unsigned short'
|-TypedefDecl 0x1bafb28f990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1baf9944940 'unsigned short'
|-TypedefDecl 0x1bafb28fa00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1baf99448c0 'int'
|-TypedefDecl 0x1bafb28fa70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1baf99448e0 'long'
|-TypedefDecl 0x1bafb28fae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1baf9944900 'long long'
|-TypedefDecl 0x1bafb28fb70 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x1bafb28fb40 '__time64_t' sugar
|   |-Typedef 0x1bafb28fae0 '__time64_t'
|   `-BuiltinType 0x1baf9944900 'long long'
|-FunctionDecl 0x1bafb28fce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1bafb28ff08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1bafb2c9b00 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1bafb290048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1bafb2900c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1bafb290138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1bafb2901b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1bafb2c98a0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1bafb2c9be0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1bafb2c9ca0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1bafb2c9e10 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1bafb2c9dc0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1bafb2c9d60 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1bafb2c9c80 'struct threadlocaleinfostruct'
|       `-Record 0x1bafb2d1920 'threadlocaleinfostruct'
|-TypedefDecl 0x1bafb2c9f20 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1bafb2c9ed0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1bafb2c9e70 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1bafb2c9d40 'struct threadmbcinfostruct'
|       `-Record 0x1bafb2c9ca0 'threadmbcinfostruct'
|-RecordDecl 0x1bafb2c9f78 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1bafb2ca030 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1bafb2ca0f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bafb2ca180 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1bafb2ca210 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1bafb2ca2c8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1bafb2ca270 'struct localeinfo_struct' sugar
|   `-RecordType 0x1bafb2ca0d0 'struct localeinfo_struct'
|     `-Record 0x1bafb2ca030 'localeinfo_struct'
|-TypedefDecl 0x1bafb2ca3a0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1bafb2ca350 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1bafb2ca270 'struct localeinfo_struct' sugar
|     `-RecordType 0x1bafb2ca0d0 'struct localeinfo_struct'
|       `-Record 0x1bafb2ca030 'localeinfo_struct'
|-RecordDecl 0x1bafb2ca418 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1bafb2ca4d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bafb2ca548 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1bafb2ca608 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1bafb2ca6a0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1bafb2ca710 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1bafb2ca7c8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1bafb2ca770 'struct localerefcount' sugar
|   `-RecordType 0x1bafb2ca4b0 'struct localerefcount'
|     `-Record 0x1bafb2ca418 'localerefcount'
|-RecordDecl 0x1bafb2d1920 prev 0x1bafb2c9be0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1bafb2d19a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bafb2d1a18 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1bafb2d1a88 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1bafb2d1af8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1bafb2d1b68 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1bafb2d1d28 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1bafb2d1d98 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1bafb2d1e08 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1bafb2d1e78 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1bafb2d1ee8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1bafb2d1f58 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1bafb2d1fb0 parent 0x1baf99447c8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1bafb2d2140 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1bafb2d21b0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1bafb2d2220 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1bafb2d2290 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1bafb2d2330 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1bafb2d23a0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1bafb2d24b0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1bafb2d25e8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1bafb2d2698 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1bafb2d2640 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1bafb2c9c80 'struct threadlocaleinfostruct'
|     `-Record 0x1bafb2d1920 'threadlocaleinfostruct'
|-FunctionDecl 0x1bafb2d7b90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1bafb2d2720 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1bafb2d27d0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1bafb2d2850 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1bafb2d7980 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2d7f58 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb2d7ff8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1bafb2d8060 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1bafb2d80c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb2d8148 prev 0x1bafb2d7f58 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1bafb2d7c80 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1bafb2d7d00 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1bafb2d7d78 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2d8508 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1bafb2d8230 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1bafb2d82b0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1bafb2d8328 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2d3990 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb2d85f0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1bafb2d8670 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1bafb2d86e8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb2d8780 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb2d3c98 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb2d3d38 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1bafb2d3da0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1bafb2d3e08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb2d3e88 prev 0x1bafb2d3c98 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1bafb2d3a80 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1bafb2d3b00 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1bafb2d3b78 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2d4248 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb2d42e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bafb2d4350 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1bafb2d43b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb2d4438 prev 0x1bafb2d4248 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1bafb2d3f70 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1bafb2d3ff0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1bafb2d4068 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2d4950 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1bafb2d4548 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1bafb2d45e0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bafb2d4660 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1bafb2d46d8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bafb2d4d18 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb2d4db8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bafb2d4e20 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1bafb2d4e88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb2d4f08 prev 0x1bafb2d4d18 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1bafb2d4a40 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1bafb2d4ac0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1bafb2d4b38 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2d5388 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb2d5428 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bafb2d5490 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1bafb2d54f8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1bafb2d5560 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb2d55e8 prev 0x1bafb2d5388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1bafb2d50d0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1bafb2d5150 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1bafb2d51d0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1bafb2d5248 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb2d56a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1bafb2d0aa8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1bafb2d5870 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1bafb2d0910 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1bafb2d0988 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb2d0b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1bafb2d0f50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1bafb2d0c88 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1bafb2d0d00 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb2d0d80 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1bafb2d1320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1bafb2d1130 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1bafb2d11b0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1bafb2d13d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb2d17e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1bafb2d1518 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1bafb2d1590 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb2d1610 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1bafb2d8c50 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1bafb2d8cf0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1bafb2d8d58 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bafb2d8dd0 prev 0x1bafb2d8c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1bafb2d8a68 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1bafb2d8ae8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1bafb2d8e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb2d91d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1bafb2d8fc8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1bafb2d9040 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb2d90c0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1bafb2d9500 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1bafb2d95a0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1bafb2d9608 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bafb2d9680 prev 0x1bafb2d9500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1bafb2d9380 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1bafb2d9400 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1bafb2d9730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb2dba90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1bafb2dbb30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb2dbb98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bafb2dbc10 prev 0x1bafb2dba90 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1bafb2d9878 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1bafb2d98f8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1bafb2dbe60 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1bafb2dbf00 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bafb2dbf70 prev 0x1bafb2dbe60 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1bafb2dbcf0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1bafb2dc268 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1bafb2dc048 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1bafb2dc0c0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2dc4b8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1bafb2dc348 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1bafb2dc3c0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1bafb2dc7e8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1bafb2dc7d8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1bafb2dc7a8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1bafb2dc618 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1bafb2dc5f8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1bafb2dc5c8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1bafb2dc580 <col:13> 'const char *' lvalue ParmVar 0x1bafb2dc348 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1bafb2dc5e0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1bafb2dc5a0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1bafb2dc790 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1bafb2dc638 <col:24> 'int' 0
|       `-CallExpr 0x1bafb2dc730 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1bafb2dc718 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1bafb2dc660 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1bafb2dc268 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1bafb2dc760 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1bafb2dc680 <col:36> 'const char *' lvalue ParmVar 0x1bafb2dc348 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1bafb2dc778 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1bafb2dc6a0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1bafb2dc3c0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2d9ad8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1bafb2dc818 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1bafb2dc890 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bafb2dc910 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1bafb2d99a0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bafb2d9de0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb2d9e80 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bafb2d9ee8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1bafb2d9f50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb2d9fd0 prev 0x1bafb2d9de0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1bafb2d9bc8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1bafb2d9c48 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1bafb2d9cc0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2da208 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1bafb2da0b8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1bafb2da4d0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1bafb2da570 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb2da5d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bafb2da650 prev 0x1bafb2da4d0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1bafb2da2e0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1bafb2da360 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1bafb2da8b0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bafb2da730 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1bafb2da7b0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1bafb2dab30 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bafb2da9b0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1bafb2daa30 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1bafb2daee8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1bafb2dac10 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb2dac90 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1bafb2dad08 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb2db150 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bafb2dafd0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1bafb2db050 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1bafb2db448 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1bafb2db230 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb2db2b0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1bafb2db328 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb2db6b0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bafb2db530 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1bafb2db5b0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1bafb2dc9d0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1bafb2db790 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb2db810 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1bafb2db888 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb2dcd88 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bafb2dcab8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb2dcb38 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1bafb2dcbb0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2dd1f0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb2dce70 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb2dcef0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1bafb2dcf68 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb2dcfe0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb2dd4f8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bafb2dd2e0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb2dd360 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1bafb2dd3d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2dd890 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb2dd5e0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb2dd660 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1bafb2dd6d8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb2dd750 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb2d6b98 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1bafb2d6c38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb2d6ca0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bafb2d6d18 prev 0x1bafb2d6b98 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1bafb2d6970 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1bafb2d69f0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1bafb2d6fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1bafb2d6ef0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1bafb2d7078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb2d7450 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1bafb2d71c0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1bafb2d7238 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb2d72b8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1bafb2d7768 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1bafb2d7808 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bafb2d7878 prev 0x1bafb2d7768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1bafb2d7630 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1bafb2d7920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb2e1d30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1bafb2e1b20 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1bafb2e1b98 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb2e1c18 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1bafb2e2038 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1bafb2e1e18 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1bafb2e1e90 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2e2328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bafb2e21d8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1bafb2e23d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb2e27e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb2e2518 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1bafb2e2590 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb2e2608 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb2deba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1bafb2e2988 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1bafb2de9f0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bafb2dec50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb2df108 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1bafb2ded98 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1bafb2dee10 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bafb2dee90 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1bafb2def08 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bafb2df588 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb2df628 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1bafb2df690 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb2df6f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb2df778 prev 0x1bafb2df588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bafb2df2b8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1bafb2df338 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1bafb2df3b0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb2df830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb2ddb90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb2ddc30 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1bafb2ddc98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb2ddd00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb2ddd80 prev 0x1bafb2ddb90 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bafb2df978 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb2dd9f8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1bafb2dda70 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2de080 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bafb2dde68 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb2ddee8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1bafb2ddf60 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2de418 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb2de168 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb2de1e8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1bafb2de260 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb2de2d8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb2de7b0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1bafb2de508 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1bafb2de580 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bafb2de600 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1bafb2de678 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bafb2dfb98 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb2dfc38 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1bafb2dfca0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb2dfd08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb2dfd88 prev 0x1bafb2dfb98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bafb2de960 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1bafb2dfa00 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1bafb2dfa78 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb2dfe40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb2e02f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1bafb2dff88 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1bafb2e0000 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bafb2e0080 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1bafb2e00f8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb2e0778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1bafb2e04a8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1bafb2e0528 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1bafb2e05a0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb2e0830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb2e0b80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1bafb2e0c20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb2e0c88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bafb2e0d00 prev 0x1bafb2e0b80 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1bafb2e0978 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1bafb2e0a10 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1bafb2e0f60 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1bafb2e1000 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb2e1068 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bafb2e10e0 prev 0x1bafb2e0f60 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1bafb2e0de0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1bafb2e0e60 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1bafb2e12a0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1bafb2e11c0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1bafb2e14f0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1bafb2e1590 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb2e15f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bafb2e1670 prev 0x1bafb2e14f0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1bafb2e1378 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1bafb2e13f8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1bafb2e18d0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1bafb2e1970 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb309cc0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bafb309d38 prev 0x1bafb2e18d0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1bafb2e1750 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1bafb2e17d0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1bafb30a058 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1bafb30a0f8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1bafb30a160 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bafb30a1d8 prev 0x1bafb30a058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1bafb309ed8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1bafb309f58 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1bafb30a288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb30a668 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1bafb30a3d0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1bafb30a450 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1bafb30a4d0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1bafb30a8c0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1bafb30a750 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1bafb30a7c8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb30ab40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bafb30aa60 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1bafb30abe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb30afd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb30add0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1bafb30ae48 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb30aec0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb30b2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1bafb30b180 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1bafb30b1f8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bafb30b3a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb30b7c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb30b860 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1bafb30b8c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bafb30b930 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb30b9b0 prev 0x1bafb30b7c0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bafb30b4f0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1bafb30b570 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1bafb30b5e8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb312e88 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb30ba98 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1bafb30bb18 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1bafb30bb90 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb30bc08 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb313130 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1bafb3131d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bafb313240 prev 0x1bafb313130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1bafb313050 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1bafb3132e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1bafb313630 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bafb3134b0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb313530 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1bafb3136e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1bafb313a28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bafb3138a8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb313928 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1bafb313ad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1bafb30fd58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bafb313ca0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1bafb30fe00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1bafb310218 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bafb310000 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1bafb310080 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1bafb3100f8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb3102d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1bafb3106b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1bafb310498 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1bafb310518 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1bafb310590 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb310768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1bafb310a10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bafb310930 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1bafb310ab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1bafb30cdf0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1bafb310c80 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1bafb30ccf0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1bafb30cea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1bafb30d148 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bafb30d068 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1bafb30d1f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1bafb30d480 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1bafb30d310 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1bafb30d810 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1bafb30d550 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bafb30d5c8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb30d640 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1bafb30dbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb30d9b0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bafb30da28 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1bafb30dc78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb312058 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1bafb3120f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1bafb312160 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1bafb3121d8 prev 0x1bafb312058 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1bafb311e38 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bafb311eb0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1bafb3124d0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1bafb312570 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1bafb3125d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1bafb312650 prev 0x1bafb3124d0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1bafb3122b0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bafb312328 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bafb312930 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1bafb312728 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bafb3127a0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb312818 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1bafb312c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb312ad0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bafb312b48 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1bafb312cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb30e018 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb30ddf8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bafb30de70 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1bafb30e260 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1bafb30e300 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1bafb30e370 prev 0x1bafb30e260 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1bafb30e0f0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1bafb30e658 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bafb30e440 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bafb30e4b8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb30e8a0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1bafb30e730 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1bafb30e7a8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1bafb30ec38 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1bafb30ec28 <line:307:5, col:56>
|     `-ConditionalOperator 0x1bafb30ebf8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1bafb30ea60 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1bafb30ea40 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1bafb30ea10 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1bafb30e968 <col:13> 'const wchar_t *' lvalue ParmVar 0x1bafb30e730 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1bafb30ea28 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1bafb30e9f0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1bafb30e9c8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1bafb30e988 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1bafb30ebe0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1bafb30ea80 <col:29> 'int' 0
|       `-CallExpr 0x1bafb30eb80 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1bafb30eb68 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1bafb30eaa8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1bafb30e658 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1bafb30ebb0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1bafb30eac8 <col:41> 'const wchar_t *' lvalue ParmVar 0x1bafb30e730 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1bafb30ebc8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1bafb30eae8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1bafb30e7a8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb30bfd8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1bafb30ec60 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bafb30bce0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bafb30bd58 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bafb30bdd0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bafb30c440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bafb30c180 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bafb30c1f8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1bafb30c270 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb30c4f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb30c908 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1bafb30c9a8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1bafb30ca10 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1bafb30ca78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bafb30caf8 prev 0x1bafb30c908 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1bafb30c638 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb30c6b0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bafb30c728 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb313f10 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1bafb30cbd8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bafb30cc50 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bafb313d60 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bafb313dd8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bafb3142c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bafb3140b8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bafb314130 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1bafb3141a8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb314378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb3146d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb3144b8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bafb314530 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1bafb314920 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1bafb3147b0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bafb314828 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1bafb314b68 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb3149f8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bafb314a70 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1bafb314dd0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb314c40 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bafb314cb8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1bafb3150d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb314f68 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bafb314fe0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1bafb315188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb3155f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1bafb3152c8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bafb315340 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1bafb315420 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1bafb315910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1bafb315798 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1bafb3159b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb30ed80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1bafb315af8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1bafb315b70 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb315bf0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1bafb30f030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1bafb30ef58 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1bafb30f0d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb30f4a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1bafb30f218 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1bafb30f290 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb30f308 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1bafb30f6f8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb30f580 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bafb30f5f8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bafb30fa98 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bafb30f7d0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb30f848 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bafb30f8c0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb31be68 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bafb30fb78 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb30fbf0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bafb30fc68 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb31c2c0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb31bf48 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31bfc0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31c038 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb31c0b0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb31c718 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1bafb31c3a8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bafb31c420 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bafb31c498 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1bafb31c510 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb31cb80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1bafb31c8c0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bafb31c938 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1bafb31c9b0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb31cc38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb31cf00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1bafb31cd78 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1bafb31d290 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1bafb31cfd0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bafb31d048 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb31d0c0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1bafb31d648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1bafb31d430 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bafb31d4a8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1bafb31d6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb31da58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1bafb31d838 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1bafb31d8b0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb31dcc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bafb31dbf0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1bafb31dd70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb319170 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb318ea8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bafb318f20 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb318f98 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb319528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bafb319310 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1bafb319388 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bafb3195d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb319888 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1bafb319718 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1bafb319790 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb319af8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bafb319a20 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1bafb319ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb316f20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb319ce0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bafb316d90 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb316e08 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb317230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bafb3170c0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1bafb317138 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bafb3172e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bafb3176e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bafb317420 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bafb317498 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bafb317510 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb317b28 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb3177c0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bafb317838 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1bafb3178b0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb317928 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb319dc0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb317c10 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bafb317c88 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bafb31a0a8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bafb319e98 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb319f10 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bafb319f88 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb31a300 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb31a188 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bafb31a200 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bafb31a5e8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bafb31a3d8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31a450 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bafb31a4c8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb31a8d8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bafb31a6c8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31a740 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bafb31a7b8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb31ac60 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb31a9b8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31aa30 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31aaa8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb31ab20 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb31af68 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bafb31ad48 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31add0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bafb31ae48 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bafb31b2f0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bafb31b048 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31b0c0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31b138 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bafb31b1b0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bafb31b550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1bafb31b478 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1bafb31b5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1bafb31b930 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb31b7b8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31b830 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1bafb31b9e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1bafb31de00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bafb31bba0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31bc18 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bafb31bc90 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb31deb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1bafb31e280 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1bafb31e078 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bafb31e0f0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1bafb31e168 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bafb31e338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1bafb31e5d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bafb31e4f8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1bafb31e678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1bafb31e9a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1bafb31e838 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bafb31e8b0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1bafb31ea58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1bafb31ecf0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bafb31ec18 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1bafb31ed98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1bafb317ff0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bafb317f18 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1bafb318098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1bafb3183d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bafb318258 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bafb3182d0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1bafb318480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-RecordDecl 0x1bafb318590 <.//openssl//file_jk/after\crypto\o_time.c:14:1, col:8> col:8 struct tm
|-FunctionDecl 0x1bafb3189c0 <col:1, line:57:1> line:14:12 OPENSSL_gmtime 'struct tm *(const time_t *, struct tm *)'
| |-ParmVarDecl 0x1bafb3186d8 <col:27, col:41> col:41 used timer 'const time_t *'
| |-ParmVarDecl 0x1bafb3187f0 <col:48, col:59> col:59 used result 'struct tm *'
| `-CompoundStmt 0x1bafb3231e0 <line:15:1, line:57:1>
|   |-DeclStmt 0x1bafb318bb8 <line:16:5, col:25>
|   | `-VarDecl 0x1bafb318ab0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\o_time.c:16:16 used ts 'struct tm *' cinit
|   |   `-ImplicitCastExpr 0x1bafb318ba0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'struct tm *' <NullToPointer>
|   |     `-ParenExpr 0x1bafb318b80 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1bafb318b58 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1bafb318b18 <col:26> 'int' 0
|   |-BinaryOperator 0x1bafb322ec0 <.//openssl//file_jk/after\crypto\o_time.c:49:5, col:22> 'struct tm *' '='
|   | |-DeclRefExpr 0x1bafb318bd0 <col:5> 'struct tm *' lvalue Var 0x1bafb318ab0 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x1bafb322ea8 <col:10, col:22> 'struct tm *' <IntegralToPointer>
|   |   `-CallExpr 0x1bafb322e68 <col:10, col:22> 'int'
|   |     |-ImplicitCastExpr 0x1bafb322e50 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1bafb318d28 <col:10> 'int ()' Function 0x1bafb318c60 'gmtime' 'int ()'
|   |     `-ImplicitCastExpr 0x1bafb322e90 <col:17> 'const time_t *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1bafb318d48 <col:17> 'const time_t *' lvalue ParmVar 0x1bafb3186d8 'timer' 'const time_t *'
|   |-IfStmt 0x1bafb323088 <line:50:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x1bafb322fb8 <.//openssl//file_jk/after\crypto\o_time.c:50:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1bafb322f88 <.//openssl//file_jk/after\crypto\o_time.c:50:9> 'struct tm *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bafb322ee0 <col:9> 'struct tm *' lvalue Var 0x1bafb318ab0 'ts' 'struct tm *'
|   | | `-ImplicitCastExpr 0x1bafb322fa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'struct tm *' <BitCast>
|   | |   `-ParenExpr 0x1bafb322f68 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1bafb322f40 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1bafb322f00 <col:26> 'int' 0
|   | `-ReturnStmt 0x1bafb323078 <.//openssl//file_jk/after\crypto\o_time.c:51:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x1bafb323060 <col:17, col:27> 'struct tm *' <NullToPointer>
|   |     `-ParenExpr 0x1bafb323040 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1bafb323018 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1bafb322fd8 <col:26> 'int' 0
|   |-BinaryOperator 0x1bafb323178 <.//openssl//file_jk/after\crypto\o_time.c:54:5, col:10> 'struct tm *' '='
|   | |-DeclRefExpr 0x1bafb323120 <col:5> 'struct tm *' lvalue Var 0x1bafb318ab0 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x1bafb323160 <col:10> 'struct tm *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bafb323140 <col:10> 'struct tm *' lvalue ParmVar 0x1bafb3187f0 'result' 'struct tm *'
|   `-ReturnStmt 0x1bafb3231d0 <line:56:5, col:12>
|     `-ImplicitCastExpr 0x1bafb3231b8 <col:12> 'struct tm *' <LValueToRValue>
|       `-DeclRefExpr 0x1bafb323198 <col:12> 'struct tm *' lvalue Var 0x1bafb318ab0 'ts' 'struct tm *'
|-FunctionDecl 0x1bafb323460 <line:67:1, col:47> col:13 used date_to_julian 'long (int, int, int)' static
| |-ParmVarDecl 0x1bafb323230 <col:28, col:32> col:32 y 'int'
| |-ParmVarDecl 0x1bafb3232b0 <col:35, col:39> col:39 m 'int'
| `-ParmVarDecl 0x1bafb323330 <col:42, col:46> col:46 d 'int'
|-FunctionDecl 0x1bafb323818 <line:68:1, col:59> col:13 used julian_to_date 'void (long, int *, int *, int *)' static
| |-ParmVarDecl 0x1bafb323548 <col:28, col:33> col:33 jd 'long'
| |-ParmVarDecl 0x1bafb3235c8 <col:37, col:42> col:42 y 'int *'
| |-ParmVarDecl 0x1bafb323648 <col:45, col:50> col:50 m 'int *'
| `-ParmVarDecl 0x1bafb3236c8 <col:53, col:58> col:58 d 'int *'
|-FunctionDecl 0x1bafb323d70 <line:69:1, line:70:44> line:69:12 used julian_adj 'int (const struct tm *, int, long, long *, int *)' static
| |-ParmVarDecl 0x1bafb323970 <col:23, col:40> col:40 tm 'const struct tm *'
| |-ParmVarDecl 0x1bafb3239f0 <col:44, col:48> col:48 off_day 'int'
| |-ParmVarDecl 0x1bafb323a70 <col:57, col:62> col:62 offset_sec 'long'
| |-ParmVarDecl 0x1bafb323b20 <line:70:23, col:29> col:29 pday 'long *'
| `-ParmVarDecl 0x1bafb323ba0 <col:35, col:40> col:40 psec 'int *'
|-FunctionDecl 0x1bafb325110 <line:72:1, line:100:1> line:72:5 OPENSSL_gmtime_adj 'int (struct tm *, int, long)'
| |-ParmVarDecl 0x1bafb324e98 <col:24, col:35> col:35 used tm 'struct tm *'
| |-ParmVarDecl 0x1bafb324f18 <col:39, col:43> col:43 used off_day 'int'
| |-ParmVarDecl 0x1bafb324f98 <col:52, col:57> col:57 used offset_sec 'long'
| `-CompoundStmt 0x1bafb323f18 <line:73:1, line:100:1>
|   |-DeclStmt 0x1bafb325408 <line:74:5, col:50>
|   | |-VarDecl 0x1bafb3251f8 <col:5, col:9> col:9 used time_sec 'int'
|   | |-VarDecl 0x1bafb325278 <col:5, col:19> col:19 used time_year 'int'
|   | |-VarDecl 0x1bafb3252f8 <col:5, col:30> col:30 used time_month 'int'
|   | `-VarDecl 0x1bafb325378 <col:5, col:42> col:42 used time_day 'int'
|   |-DeclStmt 0x1bafb3254a0 <line:75:5, col:17>
|   | `-VarDecl 0x1bafb325438 <col:5, col:10> col:10 used time_jd 'long'
|   |-IfStmt 0x1bafb325748 <line:78:5, line:79:16>
|   | |-UnaryOperator 0x1bafb3256f8 <line:78:9, col:65> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1bafb325650 <col:10, col:65> 'int'
|   | |   |-ImplicitCastExpr 0x1bafb325638 <col:10> 'int (*)(const struct tm *, int, long, long *, int *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1bafb3254b8 <col:10> 'int (const struct tm *, int, long, long *, int *)' Function 0x1bafb323d70 'julian_adj' 'int (const struct tm *, int, long, long *, int *)'
|   | |   |-ImplicitCastExpr 0x1bafb3256b0 <col:21> 'const struct tm *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x1bafb325698 <col:21> 'struct tm *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1bafb3254d8 <col:21> 'struct tm *' lvalue ParmVar 0x1bafb324e98 'tm' 'struct tm *'
|   | |   |-ImplicitCastExpr 0x1bafb3256c8 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bafb3254f8 <col:25> 'int' lvalue ParmVar 0x1bafb324f18 'off_day' 'int'
|   | |   |-ImplicitCastExpr 0x1bafb3256e0 <col:34> 'long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bafb325518 <col:34> 'long' lvalue ParmVar 0x1bafb324f98 'offset_sec' 'long'
|   | |   |-UnaryOperator 0x1bafb325570 <col:46, col:47> 'long *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1bafb325538 <col:47> 'long' lvalue Var 0x1bafb325438 'time_jd' 'long'
|   | |   `-UnaryOperator 0x1bafb3255c0 <col:56, col:57> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x1bafb325588 <col:57> 'int' lvalue Var 0x1bafb3251f8 'time_sec' 'int'
|   | `-ReturnStmt 0x1bafb325738 <line:79:9, col:16>
|   |   `-IntegerLiteral 0x1bafb325710 <col:16> 'int' 0
|   |-CallExpr 0x1bafb3258d0 <line:83:5, col:63> 'void'
|   | |-ImplicitCastExpr 0x1bafb3258b8 <col:5> 'void (*)(long, int *, int *, int *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1bafb325760 <col:5> 'void (long, int *, int *, int *)' Function 0x1bafb323818 'julian_to_date' 'void (long, int *, int *, int *)'
|   | |-ImplicitCastExpr 0x1bafb325910 <col:20> 'long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1bafb325780 <col:20> 'long' lvalue Var 0x1bafb325438 'time_jd' 'long'
|   | |-UnaryOperator 0x1bafb3257d8 <col:29, col:30> 'int *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x1bafb3257a0 <col:30> 'int' lvalue Var 0x1bafb325278 'time_year' 'int'
|   | |-UnaryOperator 0x1bafb325828 <col:41, col:42> 'int *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x1bafb3257f0 <col:42> 'int' lvalue Var 0x1bafb3252f8 'time_month' 'int'
|   | `-UnaryOperator 0x1bafb325878 <col:54, col:55> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1bafb325840 <col:55> 'int' lvalue Var 0x1bafb325378 'time_day' 'int'
|   |-IfStmt 0x1bafb325a80 <line:85:5, line:86:16>
|   | |-BinaryOperator 0x1bafb325a28 <line:85:9, col:41> 'int' '||'
|   | | |-BinaryOperator 0x1bafb325988 <col:9, col:21> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1bafb325970 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1bafb325928 <col:9> 'int' lvalue Var 0x1bafb325278 'time_year' 'int'
|   | | | `-IntegerLiteral 0x1bafb325948 <col:21> 'int' 1900
|   | | `-BinaryOperator 0x1bafb325a08 <col:29, col:41> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1bafb3259f0 <col:29> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bafb3259a8 <col:29> 'int' lvalue Var 0x1bafb325278 'time_year' 'int'
|   | |   `-IntegerLiteral 0x1bafb3259c8 <col:41> 'int' 9999
|   | `-ReturnStmt 0x1bafb325a70 <line:86:9, col:16>
|   |   `-IntegerLiteral 0x1bafb325a48 <col:16> 'int' 0
|   `-ReturnStmt 0x1bafb323f08 <line:98:5, col:12>
|     `-IntegerLiteral 0x1bafb323ee0 <col:12> 'int' 1
|-FunctionDecl 0x1bafb3242c0 <line:102:1, line:130:1> line:102:5 OPENSSL_gmtime_diff 'int (int *, int *, const struct tm *, const struct tm *)'
| |-ParmVarDecl 0x1bafb323f70 <col:25, col:30> col:30 used pday 'int *'
| |-ParmVarDecl 0x1bafb323ff0 <col:36, col:41> col:41 used psec 'int *'
| |-ParmVarDecl 0x1bafb324080 <line:103:25, col:42> col:42 used from 'const struct tm *'
| |-ParmVarDecl 0x1bafb324110 <col:48, col:65> col:65 used to 'const struct tm *'
| `-CompoundStmt 0x1bafb327560 <line:104:1, line:130:1>
|   |-DeclStmt 0x1bafb324538 <line:105:5, col:35>
|   | |-VarDecl 0x1bafb3243b0 <col:5, col:9> col:9 used from_sec 'int'
|   | |-VarDecl 0x1bafb324430 <col:5, col:19> col:19 used to_sec 'int'
|   | `-VarDecl 0x1bafb3244b0 <col:5, col:27> col:27 used diff_sec 'int'
|   |-DeclStmt 0x1bafb3246f0 <line:106:5, col:34>
|   | |-VarDecl 0x1bafb324568 <col:5, col:10> col:10 used from_jd 'long'
|   | |-VarDecl 0x1bafb3245e8 <col:5, col:19> col:19 used to_jd 'long'
|   | `-VarDecl 0x1bafb324668 <col:5, col:26> col:26 used diff_day 'long'
|   |-IfStmt 0x1bafb324918 <line:107:5, line:108:16>
|   | |-UnaryOperator 0x1bafb3248c8 <line:107:9, col:52> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1bafb324850 <col:10, col:52> 'int'
|   | |   |-ImplicitCastExpr 0x1bafb324838 <col:10> 'int (*)(const struct tm *, int, long, long *, int *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1bafb324708 <col:10> 'int (const struct tm *, int, long, long *, int *)' Function 0x1bafb323d70 'julian_adj' 'int (const struct tm *, int, long, long *, int *)'
|   | |   |-ImplicitCastExpr 0x1bafb324898 <col:21> 'const struct tm *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bafb324728 <col:21> 'const struct tm *' lvalue ParmVar 0x1bafb324080 'from' 'const struct tm *'
|   | |   |-IntegerLiteral 0x1bafb324748 <col:27> 'int' 0
|   | |   |-ImplicitCastExpr 0x1bafb3248b0 <col:30> 'long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1bafb324770 <col:30> 'int' 0
|   | |   |-UnaryOperator 0x1bafb3247d0 <col:33, col:34> 'long *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1bafb324798 <col:34> 'long' lvalue Var 0x1bafb324568 'from_jd' 'long'
|   | |   `-UnaryOperator 0x1bafb324820 <col:43, col:44> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x1bafb3247e8 <col:44> 'int' lvalue Var 0x1bafb3243b0 'from_sec' 'int'
|   | `-ReturnStmt 0x1bafb324908 <line:108:9, col:16>
|   |   `-IntegerLiteral 0x1bafb3248e0 <col:16> 'int' 0
|   |-IfStmt 0x1bafb324b40 <line:109:5, line:110:16>
|   | |-UnaryOperator 0x1bafb324af0 <line:109:9, col:46> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1bafb324a78 <col:10, col:46> 'int'
|   | |   |-ImplicitCastExpr 0x1bafb324a60 <col:10> 'int (*)(const struct tm *, int, long, long *, int *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1bafb324930 <col:10> 'int (const struct tm *, int, long, long *, int *)' Function 0x1bafb323d70 'julian_adj' 'int (const struct tm *, int, long, long *, int *)'
|   | |   |-ImplicitCastExpr 0x1bafb324ac0 <col:21> 'const struct tm *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bafb324950 <col:21> 'const struct tm *' lvalue ParmVar 0x1bafb324110 'to' 'const struct tm *'
|   | |   |-IntegerLiteral 0x1bafb324970 <col:25> 'int' 0
|   | |   |-ImplicitCastExpr 0x1bafb324ad8 <col:28> 'long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1bafb324998 <col:28> 'int' 0
|   | |   |-UnaryOperator 0x1bafb3249f8 <col:31, col:32> 'long *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1bafb3249c0 <col:32> 'long' lvalue Var 0x1bafb3245e8 'to_jd' 'long'
|   | |   `-UnaryOperator 0x1bafb324a48 <col:39, col:40> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x1bafb324a10 <col:40> 'int' lvalue Var 0x1bafb324430 'to_sec' 'int'
|   | `-ReturnStmt 0x1bafb324b30 <line:110:9, col:16>
|   |   `-IntegerLiteral 0x1bafb324b08 <col:16> 'int' 0
|   |-BinaryOperator 0x1bafb324c20 <line:111:5, col:24> 'long' '='
|   | |-DeclRefExpr 0x1bafb324b58 <col:5> 'long' lvalue Var 0x1bafb324668 'diff_day' 'long'
|   | `-BinaryOperator 0x1bafb324c00 <col:16, col:24> 'long' '-'
|   |   |-ImplicitCastExpr 0x1bafb324bd0 <col:16> 'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1bafb324b90 <col:16> 'long' lvalue Var 0x1bafb3245e8 'to_jd' 'long'
|   |   `-ImplicitCastExpr 0x1bafb324be8 <col:24> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1bafb324bb0 <col:24> 'long' lvalue Var 0x1bafb324568 'from_jd' 'long'
|   |-BinaryOperator 0x1bafb324d08 <line:112:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x1bafb324c40 <col:5> 'int' lvalue Var 0x1bafb3244b0 'diff_sec' 'int'
|   | `-BinaryOperator 0x1bafb324ce8 <col:16, col:25> 'int' '-'
|   |   |-ImplicitCastExpr 0x1bafb324cb8 <col:16> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1bafb324c78 <col:16> 'int' lvalue Var 0x1bafb324430 'to_sec' 'int'
|   |   `-ImplicitCastExpr 0x1bafb324cd0 <col:25> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1bafb324c98 <col:25> 'int' lvalue Var 0x1bafb3243b0 'from_sec' 'int'
|   |-IfStmt 0x1bafb327010 <line:114:5, line:117:5>
|   | |-BinaryOperator 0x1bafb324e40 <line:114:9, col:36> 'int' '&&'
|   | | |-BinaryOperator 0x1bafb324da0 <col:9, col:20> 'int' '>'
|   | | | |-ImplicitCastExpr 0x1bafb324d70 <col:9> 'long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1bafb324d28 <col:9> 'long' lvalue Var 0x1bafb324668 'diff_day' 'long'
|   | | | `-ImplicitCastExpr 0x1bafb324d88 <col:20> 'long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1bafb324d48 <col:20> 'int' 0
|   | | `-BinaryOperator 0x1bafb324e20 <col:25, col:36> 'int' '<'
|   | |   |-ImplicitCastExpr 0x1bafb324e08 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bafb324dc0 <col:25> 'int' lvalue Var 0x1bafb3244b0 'diff_sec' 'int'
|   | |   `-IntegerLiteral 0x1bafb324de0 <col:36> 'int' 0
|   | `-CompoundStmt 0x1bafb326ff0 <col:39, line:117:5>
|   |   |-UnaryOperator 0x1bafb326eb0 <line:115:9, col:17> 'long' postfix '--'
|   |   | `-DeclRefExpr 0x1bafb326e90 <col:9> 'long' lvalue Var 0x1bafb324668 'diff_day' 'long'
|   |   `-CompoundAssignOperator 0x1bafb326fc0 <line:116:9, line:65:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1bafb326ec8 <line:116:9> 'int' lvalue Var 0x1bafb3244b0 'diff_sec' 'int'
|   |     `-ParenExpr 0x1bafb326fa0 <line:65:22, col:35> 'int'
|   |       `-BinaryOperator 0x1bafb326f80 <col:23, col:33> 'int' '*'
|   |         |-BinaryOperator 0x1bafb326f38 <col:23, col:28> 'int' '*'
|   |         | |-IntegerLiteral 0x1bafb326ee8 <col:23> 'int' 24
|   |         | `-IntegerLiteral 0x1bafb326f10 <col:28> 'int' 60
|   |         `-IntegerLiteral 0x1bafb326f58 <col:33> 'int' 60
|   |-IfStmt 0x1bafb3272e0 <line:118:5, line:121:5>
|   | |-BinaryOperator 0x1bafb327140 <line:118:9, col:36> 'int' '&&'
|   | | |-BinaryOperator 0x1bafb3270a0 <col:9, col:20> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1bafb327070 <col:9> 'long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1bafb327028 <col:9> 'long' lvalue Var 0x1bafb324668 'diff_day' 'long'
|   | | | `-ImplicitCastExpr 0x1bafb327088 <col:20> 'long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1bafb327048 <col:20> 'int' 0
|   | | `-BinaryOperator 0x1bafb327120 <col:25, col:36> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1bafb327108 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bafb3270c0 <col:25> 'int' lvalue Var 0x1bafb3244b0 'diff_sec' 'int'
|   | |   `-IntegerLiteral 0x1bafb3270e0 <col:36> 'int' 0
|   | `-CompoundStmt 0x1bafb3272c0 <col:39, line:121:5>
|   |   |-UnaryOperator 0x1bafb327180 <line:119:9, col:17> 'long' postfix '++'
|   |   | `-DeclRefExpr 0x1bafb327160 <col:9> 'long' lvalue Var 0x1bafb324668 'diff_day' 'long'
|   |   `-CompoundAssignOperator 0x1bafb327290 <line:120:9, line:65:35> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1bafb327198 <line:120:9> 'int' lvalue Var 0x1bafb3244b0 'diff_sec' 'int'
|   |     `-ParenExpr 0x1bafb327270 <line:65:22, col:35> 'int'
|   |       `-BinaryOperator 0x1bafb327250 <col:23, col:33> 'int' '*'
|   |         |-BinaryOperator 0x1bafb327208 <col:23, col:28> 'int' '*'
|   |         | |-IntegerLiteral 0x1bafb3271b8 <col:23> 'int' 24
|   |         | `-IntegerLiteral 0x1bafb3271e0 <col:28> 'int' 60
|   |         `-IntegerLiteral 0x1bafb327228 <col:33> 'int' 60
|   |-IfStmt 0x1bafb327418 <line:123:5, line:124:22>
|   | |-ImplicitCastExpr 0x1bafb327318 <line:123:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1bafb3272f8 <col:9> 'int *' lvalue ParmVar 0x1bafb323f70 'pday' 'int *'
|   | `-BinaryOperator 0x1bafb3273f8 <line:124:9, col:22> 'int' '='
|   |   |-UnaryOperator 0x1bafb327368 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1bafb327350 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1bafb327330 <col:10> 'int *' lvalue ParmVar 0x1bafb323f70 'pday' 'int *'
|   |   `-CStyleCastExpr 0x1bafb3273d0 <col:17, col:22> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1bafb3273b8 <col:22> 'long' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1bafb327380 <col:22> 'long' lvalue Var 0x1bafb324668 'diff_day' 'long'
|   |-IfStmt 0x1bafb327510 <line:125:5, line:126:17>
|   | |-ImplicitCastExpr 0x1bafb327450 <line:125:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1bafb327430 <col:9> 'int *' lvalue ParmVar 0x1bafb323ff0 'psec' 'int *'
|   | `-BinaryOperator 0x1bafb3274f0 <line:126:9, col:17> 'int' '='
|   |   |-UnaryOperator 0x1bafb3274a0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1bafb327488 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1bafb327468 <col:10> 'int *' lvalue ParmVar 0x1bafb323ff0 'psec' 'int *'
|   |   `-ImplicitCastExpr 0x1bafb3274d8 <col:17> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1bafb3274b8 <col:17> 'int' lvalue Var 0x1bafb3244b0 'diff_sec' 'int'
|   `-ReturnStmt 0x1bafb327550 <line:128:5, col:12>
|     `-IntegerLiteral 0x1bafb327528 <col:12> 'int' 1
|-FunctionDecl 0x1bafb327920 prev 0x1bafb323d70 <line:133:1, line:174:1> line:133:12 used julian_adj 'int (const struct tm *, int, long, long *, int *)' static
| |-ParmVarDecl 0x1bafb3275f0 <col:23, col:40> col:40 used tm 'const struct tm *'
| |-ParmVarDecl 0x1bafb327670 <col:44, col:48> col:48 used off_day 'int'
| |-ParmVarDecl 0x1bafb3276f0 <col:57, col:62> col:62 used offset_sec 'long'
| |-ParmVarDecl 0x1bafb327770 <line:134:23, col:29> col:29 used pday 'long *'
| |-ParmVarDecl 0x1bafb3277f0 <col:35, col:40> col:40 used psec 'int *'
| `-CompoundStmt 0x1bafb31fe20 <line:135:1, line:174:1>
|   |-DeclStmt 0x1bafb327b00 <line:136:5, col:31>
|   | |-VarDecl 0x1bafb327a00 <col:5, col:9> col:9 used offset_hms 'int'
|   | `-VarDecl 0x1bafb327a80 <col:5, col:21> col:21 used offset_day 'int'
|   |-DeclStmt 0x1bafb327b98 <line:137:5, col:17>
|   | `-VarDecl 0x1bafb327b30 <col:5, col:10> col:10 used time_jd 'long'
|   |-DeclStmt 0x1bafb327d50 <line:138:5, col:40>
|   | |-VarDecl 0x1bafb327bc8 <col:5, col:9> col:9 used time_year 'int'
|   | |-VarDecl 0x1bafb327c48 <col:5, col:20> col:20 used time_month 'int'
|   | `-VarDecl 0x1bafb327cc8 <col:5, col:32> col:32 used time_day 'int'
|   |-BinaryOperator 0x1bafb321ec8 <line:140:5, line:65:35> 'int' '='
|   | |-DeclRefExpr 0x1bafb327d68 <line:140:5> 'int' lvalue Var 0x1bafb327a80 'offset_day' 'int'
|   | `-ImplicitCastExpr 0x1bafb321eb0 <col:18, line:65:35> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x1bafb321e90 <line:140:18, line:65:35> 'long' '/'
|   |     |-ImplicitCastExpr 0x1bafb321e60 <line:140:18> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1bafb327da0 <col:18> 'long' lvalue ParmVar 0x1bafb3276f0 'offset_sec' 'long'
|   |     `-ImplicitCastExpr 0x1bafb321e78 <line:65:22, col:35> 'long' <IntegralCast>
|   |       `-ParenExpr 0x1bafb321e40 <col:22, col:35> 'int'
|   |         `-BinaryOperator 0x1bafb327e58 <col:23, col:33> 'int' '*'
|   |           |-BinaryOperator 0x1bafb327e10 <col:23, col:28> 'int' '*'
|   |           | |-IntegerLiteral 0x1bafb327dc0 <col:23> 'int' 24
|   |           | `-IntegerLiteral 0x1bafb327de8 <col:28> 'int' 60
|   |           `-IntegerLiteral 0x1bafb327e30 <col:33> 'int' 60
|   |-BinaryOperator 0x1bafb3220f8 <line:142:5, col:57> 'int' '='
|   | |-DeclRefExpr 0x1bafb321ee8 <col:5> 'int' lvalue Var 0x1bafb327a00 'offset_hms' 'int'
|   | `-ImplicitCastExpr 0x1bafb3220e0 <col:18, col:57> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x1bafb3220c0 <col:18, col:57> 'long' '-'
|   |     |-ImplicitCastExpr 0x1bafb322090 <col:18> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1bafb321f20 <col:18> 'long' lvalue ParmVar 0x1bafb3276f0 'offset_sec' 'long'
|   |     `-ImplicitCastExpr 0x1bafb3220a8 <col:31, col:57> 'long' <IntegralCast>
|   |       `-ParenExpr 0x1bafb322070 <col:31, col:57> 'int'
|   |         `-BinaryOperator 0x1bafb322050 <col:32, line:65:35> 'int' '*'
|   |           |-ImplicitCastExpr 0x1bafb322038 <line:142:32> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1bafb321f40 <col:32> 'int' lvalue Var 0x1bafb327a80 'offset_day' 'int'
|   |           `-ParenExpr 0x1bafb322018 <line:65:22, col:35> 'int'
|   |             `-BinaryOperator 0x1bafb321ff8 <col:23, col:33> 'int' '*'
|   |               |-BinaryOperator 0x1bafb321fb0 <col:23, col:28> 'int' '*'
|   |               | |-IntegerLiteral 0x1bafb321f60 <col:23> 'int' 24
|   |               | `-IntegerLiteral 0x1bafb321f88 <col:28> 'int' 60
|   |               `-IntegerLiteral 0x1bafb321fd0 <col:33> 'int' 60
|   |-CompoundAssignOperator 0x1bafb322170 <line:143:5, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x1bafb322118 <col:5> 'int' lvalue Var 0x1bafb327a80 'offset_day' 'int'
|   | `-ImplicitCastExpr 0x1bafb322158 <col:19> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bafb322138 <col:19> 'int' lvalue ParmVar 0x1bafb327670 'off_day' 'int'
|   |-IfStmt 0x1bafb322780 <line:147:5, line:153:5> has_else
|   | |-BinaryOperator 0x1bafb3223c8 <line:147:9, line:65:35> 'int' '>='
|   | | |-ImplicitCastExpr 0x1bafb3223b0 <line:147:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bafb3222b8 <col:9> 'int' lvalue Var 0x1bafb327a00 'offset_hms' 'int'
|   | | `-ParenExpr 0x1bafb322390 <line:65:22, col:35> 'int'
|   | |   `-BinaryOperator 0x1bafb322370 <col:23, col:33> 'int' '*'
|   | |     |-BinaryOperator 0x1bafb322328 <col:23, col:28> 'int' '*'
|   | |     | |-IntegerLiteral 0x1bafb3222d8 <col:23> 'int' 24
|   | |     | `-IntegerLiteral 0x1bafb322300 <col:28> 'int' 60
|   | |     `-IntegerLiteral 0x1bafb322348 <col:33> 'int' 60
|   | |-CompoundStmt 0x1bafb322548 <line:147:37, line:150:5>
|   | | |-UnaryOperator 0x1bafb322408 <line:148:9, col:19> 'int' postfix '++'
|   | | | `-DeclRefExpr 0x1bafb3223e8 <col:9> 'int' lvalue Var 0x1bafb327a80 'offset_day' 'int'
|   | | `-CompoundAssignOperator 0x1bafb322518 <line:149:9, line:65:35> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |   |-DeclRefExpr 0x1bafb322420 <line:149:9> 'int' lvalue Var 0x1bafb327a00 'offset_hms' 'int'
|   | |   `-ParenExpr 0x1bafb3224f8 <line:65:22, col:35> 'int'
|   | |     `-BinaryOperator 0x1bafb3224d8 <col:23, col:33> 'int' '*'
|   | |       |-BinaryOperator 0x1bafb322490 <col:23, col:28> 'int' '*'
|   | |       | |-IntegerLiteral 0x1bafb322440 <col:23> 'int' 24
|   | |       | `-IntegerLiteral 0x1bafb322468 <col:28> 'int' 60
|   | |       `-IntegerLiteral 0x1bafb3224b0 <col:33> 'int' 60
|   | `-IfStmt 0x1bafb322768 <line:150:12, line:153:5>
|   |   |-BinaryOperator 0x1bafb3225c8 <line:150:16, col:29> 'int' '<'
|   |   | |-ImplicitCastExpr 0x1bafb3225b0 <col:16> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1bafb322568 <col:16> 'int' lvalue Var 0x1bafb327a00 'offset_hms' 'int'
|   |   | `-IntegerLiteral 0x1bafb322588 <col:29> 'int' 0
|   |   `-CompoundStmt 0x1bafb322748 <col:32, line:153:5>
|   |     |-UnaryOperator 0x1bafb322608 <line:151:9, col:19> 'int' postfix '--'
|   |     | `-DeclRefExpr 0x1bafb3225e8 <col:9> 'int' lvalue Var 0x1bafb327a80 'offset_day' 'int'
|   |     `-CompoundAssignOperator 0x1bafb322718 <line:152:9, line:65:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |-DeclRefExpr 0x1bafb322620 <line:152:9> 'int' lvalue Var 0x1bafb327a00 'offset_hms' 'int'
|   |       `-ParenExpr 0x1bafb3226f8 <line:65:22, col:35> 'int'
|   |         `-BinaryOperator 0x1bafb3226d8 <col:23, col:33> 'int' '*'
|   |           |-BinaryOperator 0x1bafb322690 <col:23, col:28> 'int' '*'
|   |           | |-IntegerLiteral 0x1bafb322640 <col:23> 'int' 24
|   |           | `-IntegerLiteral 0x1bafb322668 <col:28> 'int' 60
|   |           `-IntegerLiteral 0x1bafb3226b0 <col:33> 'int' 60
|   |-BinaryOperator 0x1bafb322ac0 <line:163:5, col:61> 'long' '='
|   | |-DeclRefExpr 0x1bafb322948 <col:5> 'long' lvalue Var 0x1bafb327b30 'time_jd' 'long'
|   | `-CallExpr 0x1bafb322a40 <col:15, col:61> 'long'
|   |   |-ImplicitCastExpr 0x1bafb322a28 <col:15> 'long (*)(int, int, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1bafb322980 <col:15> 'long (int, int, int)' Function 0x1bafb323460 'date_to_julian' 'long (int, int, int)'
|   |   |-ImplicitCastExpr 0x1bafb322a78 <col:30> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1bafb3229a0 <col:30> 'int' lvalue Var 0x1bafb327bc8 'time_year' 'int'
|   |   |-ImplicitCastExpr 0x1bafb322a90 <col:41> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1bafb3229c0 <col:41> 'int' lvalue Var 0x1bafb327c48 'time_month' 'int'
|   |   `-ImplicitCastExpr 0x1bafb322aa8 <col:53> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1bafb3229e0 <col:53> 'int' lvalue Var 0x1bafb327cc8 'time_day' 'int'
|   |-CompoundAssignOperator 0x1bafb322b50 <line:166:5, col:16> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | |-DeclRefExpr 0x1bafb322ae0 <col:5> 'long' lvalue Var 0x1bafb327b30 'time_jd' 'long'
|   | `-ImplicitCastExpr 0x1bafb322b38 <col:16> 'long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1bafb322b20 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1bafb322b00 <col:16> 'int' lvalue Var 0x1bafb327a80 'offset_day' 'int'
|   |-IfStmt 0x1bafb322c50 <line:168:5, line:169:16>
|   | |-BinaryOperator 0x1bafb322bf8 <line:168:9, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x1bafb322bc8 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bafb322b80 <col:9> 'long' lvalue Var 0x1bafb327b30 'time_jd' 'long'
|   | | `-ImplicitCastExpr 0x1bafb322be0 <col:19> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1bafb322ba0 <col:19> 'int' 0
|   | `-ReturnStmt 0x1bafb322c40 <line:169:9, col:16>
|   |   `-IntegerLiteral 0x1bafb322c18 <col:16> 'int' 0
|   |-BinaryOperator 0x1bafb322cf0 <line:171:5, col:13> 'long' '='
|   | |-UnaryOperator 0x1bafb322ca0 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1bafb322c88 <col:6> 'long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bafb322c68 <col:6> 'long *' lvalue ParmVar 0x1bafb327770 'pday' 'long *'
|   | `-ImplicitCastExpr 0x1bafb322cd8 <col:13> 'long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bafb322cb8 <col:13> 'long' lvalue Var 0x1bafb327b30 'time_jd' 'long'
|   |-BinaryOperator 0x1bafb322d98 <line:172:5, col:13> 'int' '='
|   | |-UnaryOperator 0x1bafb322d48 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1bafb322d30 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bafb322d10 <col:6> 'int *' lvalue ParmVar 0x1bafb3277f0 'psec' 'int *'
|   | `-ImplicitCastExpr 0x1bafb322d80 <col:13> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bafb322d60 <col:13> 'int' lvalue Var 0x1bafb327a00 'offset_hms' 'int'
|   `-ReturnStmt 0x1bafb322de0 <line:173:5, col:12>
|     `-IntegerLiteral 0x1bafb322db8 <col:12> 'int' 1
|-FunctionDecl 0x1bafb3200a0 prev 0x1bafb323460 <line:179:1, line:184:1> line:179:13 used date_to_julian 'long (int, int, int)' static
| |-ParmVarDecl 0x1bafb31feb0 <col:28, col:32> col:32 used y 'int'
| |-ParmVarDecl 0x1bafb31ff30 <col:35, col:39> col:39 used m 'int'
| |-ParmVarDecl 0x1bafb31ffb0 <col:42, col:46> col:46 used d 'int'
| `-CompoundStmt 0x1bafb320a38 <line:180:1, line:184:1>
|   `-ReturnStmt 0x1bafb320a28 <line:181:5, line:183:60>
|     `-ImplicitCastExpr 0x1bafb320a10 <line:181:12, line:183:60> 'long' <IntegralCast>
|       `-BinaryOperator 0x1bafb3209f0 <line:181:12, line:183:60> 'int' '-'
|         |-BinaryOperator 0x1bafb3209a8 <line:181:12, line:183:56> 'int' '+'
|         | |-BinaryOperator 0x1bafb320950 <line:181:12, line:183:52> 'int' '-'
|         | | |-BinaryOperator 0x1bafb320670 <line:181:12, line:182:50> 'int' '+'
|         | | | |-BinaryOperator 0x1bafb320390 <line:181:12, col:50> 'int' '/'
|         | | | | |-ParenExpr 0x1bafb320348 <col:12, col:46> 'int'
|         | | | | | `-BinaryOperator 0x1bafb320328 <col:13, col:45> 'int' '*'
|         | | | | |   |-IntegerLiteral 0x1bafb320158 <col:13> 'int' 1461
|         | | | | |   `-ParenExpr 0x1bafb320308 <col:20, col:45> 'int'
|         | | | | |     `-BinaryOperator 0x1bafb3202e8 <col:21, col:43> 'int' '+'
|         | | | | |       |-BinaryOperator 0x1bafb3201e0 <col:21, col:25> 'int' '+'
|         | | | | |       | |-ImplicitCastExpr 0x1bafb3201c8 <col:21> 'int' <LValueToRValue>
|         | | | | |       | | `-DeclRefExpr 0x1bafb320180 <col:21> 'int' lvalue ParmVar 0x1bafb31feb0 'y' 'int'
|         | | | | |       | `-IntegerLiteral 0x1bafb3201a0 <col:25> 'int' 4800
|         | | | | |       `-BinaryOperator 0x1bafb3202c8 <col:32, col:43> 'int' '/'
|         | | | | |         |-ParenExpr 0x1bafb320280 <col:32, col:39> 'int'
|         | | | | |         | `-BinaryOperator 0x1bafb320260 <col:33, col:37> 'int' '-'
|         | | | | |         |   |-ImplicitCastExpr 0x1bafb320248 <col:33> 'int' <LValueToRValue>
|         | | | | |         |   | `-DeclRefExpr 0x1bafb320200 <col:33> 'int' lvalue ParmVar 0x1bafb31ff30 'm' 'int'
|         | | | | |         |   `-IntegerLiteral 0x1bafb320220 <col:37> 'int' 14
|         | | | | |         `-IntegerLiteral 0x1bafb3202a0 <col:43> 'int' 12
|         | | | | `-IntegerLiteral 0x1bafb320368 <col:50> 'int' 4
|         | | | `-BinaryOperator 0x1bafb320650 <line:182:9, col:50> 'int' '/'
|         | | |   |-ParenExpr 0x1bafb320608 <col:9, col:46> 'int'
|         | | |   | `-BinaryOperator 0x1bafb3205e8 <col:10, col:45> 'int' '*'
|         | | |   |   |-IntegerLiteral 0x1bafb3203b0 <col:10> 'int' 367
|         | | |   |   `-ParenExpr 0x1bafb3205c8 <col:16, col:45> 'int'
|         | | |   |     `-BinaryOperator 0x1bafb3205a8 <col:17, col:44> 'int' '-'
|         | | |   |       |-BinaryOperator 0x1bafb320438 <col:17, col:21> 'int' '-'
|         | | |   |       | |-ImplicitCastExpr 0x1bafb320420 <col:17> 'int' <LValueToRValue>
|         | | |   |       | | `-DeclRefExpr 0x1bafb3203d8 <col:17> 'int' lvalue ParmVar 0x1bafb31ff30 'm' 'int'
|         | | |   |       | `-IntegerLiteral 0x1bafb3203f8 <col:21> 'int' 2
|         | | |   |       `-BinaryOperator 0x1bafb320588 <col:25, col:44> 'int' '*'
|         | | |   |         |-IntegerLiteral 0x1bafb320458 <col:25> 'int' 12
|         | | |   |         `-ParenExpr 0x1bafb320568 <col:30, col:44> 'int'
|         | | |   |           `-BinaryOperator 0x1bafb320548 <col:31, col:42> 'int' '/'
|         | | |   |             |-ParenExpr 0x1bafb320500 <col:31, col:38> 'int'
|         | | |   |             | `-BinaryOperator 0x1bafb3204e0 <col:32, col:36> 'int' '-'
|         | | |   |             |   |-ImplicitCastExpr 0x1bafb3204c8 <col:32> 'int' <LValueToRValue>
|         | | |   |             |   | `-DeclRefExpr 0x1bafb320480 <col:32> 'int' lvalue ParmVar 0x1bafb31ff30 'm' 'int'
|         | | |   |             |   `-IntegerLiteral 0x1bafb3204a0 <col:36> 'int' 14
|         | | |   |             `-IntegerLiteral 0x1bafb320520 <col:42> 'int' 12
|         | | |   `-IntegerLiteral 0x1bafb320628 <col:50> 'int' 12
|         | | `-BinaryOperator 0x1bafb320930 <line:183:9, col:52> 'int' '/'
|         | |   |-ParenExpr 0x1bafb3208e8 <col:9, col:48> 'int'
|         | |   | `-BinaryOperator 0x1bafb3208c8 <col:10, col:47> 'int' '*'
|         | |   |   |-IntegerLiteral 0x1bafb320690 <col:10> 'int' 3
|         | |   |   `-ParenExpr 0x1bafb3208a8 <col:14, col:47> 'int'
|         | |   |     `-BinaryOperator 0x1bafb320888 <col:15, col:44> 'int' '/'
|         | |   |       |-ParenExpr 0x1bafb320840 <col:15, col:40> 'int'
|         | |   |       | `-BinaryOperator 0x1bafb320820 <col:16, col:38> 'int' '+'
|         | |   |       |   |-BinaryOperator 0x1bafb320718 <col:16, col:20> 'int' '+'
|         | |   |       |   | |-ImplicitCastExpr 0x1bafb320700 <col:16> 'int' <LValueToRValue>
|         | |   |       |   | | `-DeclRefExpr 0x1bafb3206b8 <col:16> 'int' lvalue ParmVar 0x1bafb31feb0 'y' 'int'
|         | |   |       |   | `-IntegerLiteral 0x1bafb3206d8 <col:20> 'int' 4900
|         | |   |       |   `-BinaryOperator 0x1bafb320800 <col:27, col:38> 'int' '/'
|         | |   |       |     |-ParenExpr 0x1bafb3207b8 <col:27, col:34> 'int'
|         | |   |       |     | `-BinaryOperator 0x1bafb320798 <col:28, col:32> 'int' '-'
|         | |   |       |     |   |-ImplicitCastExpr 0x1bafb320780 <col:28> 'int' <LValueToRValue>
|         | |   |       |     |   | `-DeclRefExpr 0x1bafb320738 <col:28> 'int' lvalue ParmVar 0x1bafb31ff30 'm' 'int'
|         | |   |       |     |   `-IntegerLiteral 0x1bafb320758 <col:32> 'int' 14
|         | |   |       |     `-IntegerLiteral 0x1bafb3207d8 <col:38> 'int' 12
|         | |   |       `-IntegerLiteral 0x1bafb320860 <col:44> 'int' 100
|         | |   `-IntegerLiteral 0x1bafb320908 <col:52> 'int' 4
|         | `-ImplicitCastExpr 0x1bafb320990 <col:56> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x1bafb320970 <col:56> 'int' lvalue ParmVar 0x1bafb31ffb0 'd' 'int'
|         `-IntegerLiteral 0x1bafb3209c8 <col:60> 'int' 32075
`-FunctionDecl 0x1bafb320cf0 prev 0x1bafb323818 <line:186:1, line:200:1> line:186:13 used julian_to_date 'void (long, int *, int *, int *)' static
  |-ParmVarDecl 0x1bafb320a68 <col:28, col:33> col:33 used jd 'long'
  |-ParmVarDecl 0x1bafb320ae8 <col:37, col:42> col:42 used y 'int *'
  |-ParmVarDecl 0x1bafb320b68 <col:45, col:50> col:50 used m 'int *'
  |-ParmVarDecl 0x1bafb320be8 <col:53, col:58> col:58 used d 'int *'
  `-CompoundStmt 0x1bafb3210f8 <line:187:1, line:200:1>
    |-DeclStmt 0x1bafb327fa0 <line:188:5, col:24>
    | `-VarDecl 0x1bafb327ea0 <col:5, col:19> col:10 used L 'long' cinit
    |   `-BinaryOperator 0x1bafb327f80 <col:14, col:19> 'long' '+'
    |     |-ImplicitCastExpr 0x1bafb327f50 <col:14> 'long' <LValueToRValue>
    |     | `-DeclRefExpr 0x1bafb327f08 <col:14> 'long' lvalue ParmVar 0x1bafb320a68 'jd' 'long'
    |     `-ImplicitCastExpr 0x1bafb327f68 <col:19> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x1bafb327f28 <col:19> 'int' 68569
    |-DeclStmt 0x1bafb328168 <line:189:5, col:30>
    | `-VarDecl 0x1bafb327fd0 <col:5, col:24> col:10 used n 'long' cinit
    |   `-BinaryOperator 0x1bafb328148 <col:14, col:24> 'long' '/'
    |     |-ParenExpr 0x1bafb3280e8 <col:14, col:20> 'long'
    |     | `-BinaryOperator 0x1bafb3280c8 <col:15, col:19> 'long' '*'
    |     |   |-ImplicitCastExpr 0x1bafb3280b0 <col:15> 'long' <IntegralCast>
    |     |   | `-IntegerLiteral 0x1bafb328038 <col:15> 'int' 4
    |     |   `-ImplicitCastExpr 0x1bafb328098 <col:19> 'long' <LValueToRValue>
    |     |     `-DeclRefExpr 0x1bafb328060 <col:19> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
    |     `-ImplicitCastExpr 0x1bafb328130 <col:24> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x1bafb328108 <col:24> 'int' 146097
    |-DeclStmt 0x1bafb328298 <line:190:5, col:14>
    | |-VarDecl 0x1bafb328198 <col:5, col:10> col:10 used i 'long'
    | `-VarDecl 0x1bafb328218 <col:5, col:13> col:13 used j 'long'
    |-BinaryOperator 0x1bafb3284b8 <line:192:5, col:32> 'long' '='
    | |-DeclRefExpr 0x1bafb3282b0 <col:5> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
    | `-BinaryOperator 0x1bafb328498 <col:9, col:32> 'long' '-'
    |   |-ImplicitCastExpr 0x1bafb328480 <col:9> 'long' <LValueToRValue>
    |   | `-DeclRefExpr 0x1bafb3282d0 <col:9> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
    |   `-BinaryOperator 0x1bafb328460 <col:13, col:32> 'long' '/'
    |     |-ParenExpr 0x1bafb328400 <col:13, col:28> 'long'
    |     | `-BinaryOperator 0x1bafb3283e0 <col:14, col:27> 'long' '+'
    |     |   |-BinaryOperator 0x1bafb328380 <col:14, col:23> 'long' '*'
    |     |   | |-ImplicitCastExpr 0x1bafb328368 <col:14> 'long' <IntegralCast>
    |     |   | | `-IntegerLiteral 0x1bafb3282f0 <col:14> 'int' 146097
    |     |   | `-ImplicitCastExpr 0x1bafb328350 <col:23> 'long' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x1bafb328318 <col:23> 'long' lvalue Var 0x1bafb327fd0 'n' 'long'
    |     |   `-ImplicitCastExpr 0x1bafb3283c8 <col:27> 'long' <IntegralCast>
    |     |     `-IntegerLiteral 0x1bafb3283a0 <col:27> 'int' 3
    |     `-ImplicitCastExpr 0x1bafb328448 <col:32> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x1bafb328420 <col:32> 'int' 4
    |-BinaryOperator 0x1bafb3286a8 <line:193:5, col:28> 'long' '='
    | |-DeclRefExpr 0x1bafb3284d8 <col:5> 'long' lvalue Var 0x1bafb328198 'i' 'long'
    | `-BinaryOperator 0x1bafb328688 <col:9, col:28> 'long' '/'
    |   |-ParenExpr 0x1bafb328628 <col:9, col:24> 'long'
    |   | `-BinaryOperator 0x1bafb328608 <col:10, col:23> 'long' '*'
    |   |   |-ImplicitCastExpr 0x1bafb3285f0 <col:10> 'long' <IntegralCast>
    |   |   | `-IntegerLiteral 0x1bafb328510 <col:10> 'int' 4000
    |   |   `-ParenExpr 0x1bafb3285d0 <col:17, col:23> 'long'
    |   |     `-BinaryOperator 0x1bafb3285b0 <col:18, col:22> 'long' '+'
    |   |       |-ImplicitCastExpr 0x1bafb328580 <col:18> 'long' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x1bafb328538 <col:18> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
    |   |       `-ImplicitCastExpr 0x1bafb328598 <col:22> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1bafb328558 <col:22> 'int' 1
    |   `-ImplicitCastExpr 0x1bafb328670 <col:28> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x1bafb328648 <col:28> 'int' 1461001
    |-BinaryOperator 0x1bafb3288b8 <line:194:5, col:30> 'long' '='
    | |-DeclRefExpr 0x1bafb3286c8 <col:5> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
    | `-BinaryOperator 0x1bafb328898 <col:9, col:30> 'long' '+'
    |   |-BinaryOperator 0x1bafb328838 <col:9, col:26> 'long' '-'
    |   | |-ImplicitCastExpr 0x1bafb328820 <col:9> 'long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1bafb3286e8 <col:9> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
    |   | `-BinaryOperator 0x1bafb328800 <col:13, col:26> 'long' '/'
    |   |   |-ParenExpr 0x1bafb3287a0 <col:13, col:22> 'long'
    |   |   | `-BinaryOperator 0x1bafb328780 <col:14, col:21> 'long' '*'
    |   |   |   |-ImplicitCastExpr 0x1bafb328768 <col:14> 'long' <IntegralCast>
    |   |   |   | `-IntegerLiteral 0x1bafb328708 <col:14> 'int' 1461
    |   |   |   `-ImplicitCastExpr 0x1bafb328750 <col:21> 'long' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x1bafb328730 <col:21> 'long' lvalue Var 0x1bafb328198 'i' 'long'
    |   |   `-ImplicitCastExpr 0x1bafb3287e8 <col:26> 'long' <IntegralCast>
    |   |     `-IntegerLiteral 0x1bafb3287c0 <col:26> 'int' 4
    |   `-ImplicitCastExpr 0x1bafb328880 <col:30> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x1bafb328858 <col:30> 'int' 31
    |-BinaryOperator 0x1bafb328a28 <line:195:5, col:20> 'long' '='
    | |-DeclRefExpr 0x1bafb3288d8 <col:5> 'long' lvalue Var 0x1bafb328218 'j' 'long'
    | `-BinaryOperator 0x1bafb328a08 <col:9, col:20> 'long' '/'
    |   |-ParenExpr 0x1bafb3289a8 <col:9, col:16> 'long'
    |   | `-BinaryOperator 0x1bafb328988 <col:10, col:15> 'long' '*'
    |   |   |-ImplicitCastExpr 0x1bafb328970 <col:10> 'long' <IntegralCast>
    |   |   | `-IntegerLiteral 0x1bafb328910 <col:10> 'int' 80
    |   |   `-ImplicitCastExpr 0x1bafb328958 <col:15> 'long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1bafb328938 <col:15> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
    |   `-ImplicitCastExpr 0x1bafb3289f0 <col:20> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x1bafb3289c8 <col:20> 'int' 2447
    |-BinaryOperator 0x1bafb328c20 <line:196:5, col:27> 'int' '='
    | |-UnaryOperator 0x1bafb328a80 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1bafb328a68 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1bafb328a48 <col:6> 'int *' lvalue ParmVar 0x1bafb320be8 'd' 'int *'
    | `-ImplicitCastExpr 0x1bafb328c08 <col:10, col:27> 'int' <IntegralCast>
    |   `-BinaryOperator 0x1bafb328be8 <col:10, col:27> 'long' '-'
    |     |-ImplicitCastExpr 0x1bafb328bd0 <col:10> 'long' <LValueToRValue>
    |     | `-DeclRefExpr 0x1bafb328a98 <col:10> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
    |     `-BinaryOperator 0x1bafb328bb0 <col:14, col:27> 'long' '/'
    |       |-ParenExpr 0x1bafb328b50 <col:14, col:23> 'long'
    |       | `-BinaryOperator 0x1bafb328b30 <col:15, col:22> 'long' '*'
    |       |   |-ImplicitCastExpr 0x1bafb328b18 <col:15> 'long' <IntegralCast>
    |       |   | `-IntegerLiteral 0x1bafb328ab8 <col:15> 'int' 2447
    |       |   `-ImplicitCastExpr 0x1bafb328b00 <col:22> 'long' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1bafb328ae0 <col:22> 'long' lvalue Var 0x1bafb328218 'j' 'long'
    |       `-ImplicitCastExpr 0x1bafb328b98 <col:27> 'long' <IntegralCast>
    |         `-IntegerLiteral 0x1bafb328b70 <col:27> 'int' 80
    |-BinaryOperator 0x1bafb328cf8 <line:197:5, col:13> 'long' '='
    | |-DeclRefExpr 0x1bafb328c40 <col:5> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
    | `-BinaryOperator 0x1bafb328cd8 <col:9, col:13> 'long' '/'
    |   |-ImplicitCastExpr 0x1bafb328ca8 <col:9> 'long' <LValueToRValue>
    |   | `-DeclRefExpr 0x1bafb328c60 <col:9> 'long' lvalue Var 0x1bafb328218 'j' 'long'
    |   `-ImplicitCastExpr 0x1bafb328cc0 <col:13> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x1bafb328c80 <col:13> 'int' 11
    |-BinaryOperator 0x1bafb320e88 <line:198:5, col:25> 'int' '='
    | |-UnaryOperator 0x1bafb328d50 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1bafb328d38 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1bafb328d18 <col:6> 'int *' lvalue ParmVar 0x1bafb320b68 'm' 'int *'
    | `-ImplicitCastExpr 0x1bafb320e70 <col:10, col:25> 'int' <IntegralCast>
    |   `-BinaryOperator 0x1bafb320e50 <col:10, col:25> 'long' '-'
    |     |-BinaryOperator 0x1bafb328de0 <col:10, col:14> 'long' '+'
    |     | |-ImplicitCastExpr 0x1bafb328db0 <col:10> 'long' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1bafb328d68 <col:10> 'long' lvalue Var 0x1bafb328218 'j' 'long'
    |     | `-ImplicitCastExpr 0x1bafb328dc8 <col:14> 'long' <IntegralCast>
    |     |   `-IntegerLiteral 0x1bafb328d88 <col:14> 'int' 2
    |     `-ParenExpr 0x1bafb320e30 <col:18, col:25> 'long'
    |       `-BinaryOperator 0x1bafb328e78 <col:19, col:24> 'long' '*'
    |         |-ImplicitCastExpr 0x1bafb328e60 <col:19> 'long' <IntegralCast>
    |         | `-IntegerLiteral 0x1bafb328e00 <col:19> 'int' 12
    |         `-ImplicitCastExpr 0x1bafb328e48 <col:24> 'long' <LValueToRValue>
    |           `-DeclRefExpr 0x1bafb328e28 <col:24> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
    `-BinaryOperator 0x1bafb3210d8 <line:199:5, col:31> 'int' '='
      |-UnaryOperator 0x1bafb320ee0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x1bafb320ec8 <col:6> 'int *' <LValueToRValue>
      |   `-DeclRefExpr 0x1bafb320ea8 <col:6> 'int *' lvalue ParmVar 0x1bafb320ae8 'y' 'int *'
      `-ImplicitCastExpr 0x1bafb3210c0 <col:10, col:31> 'int' <IntegralCast>
        `-BinaryOperator 0x1bafb3210a0 <col:10, col:31> 'long' '+'
          |-BinaryOperator 0x1bafb321048 <col:10, col:27> 'long' '+'
          | |-BinaryOperator 0x1bafb320ff0 <col:10, col:23> 'long' '*'
          | | |-ImplicitCastExpr 0x1bafb320fd8 <col:10> 'long' <IntegralCast>
          | | | `-IntegerLiteral 0x1bafb320ef8 <col:10> 'int' 100
          | | `-ParenExpr 0x1bafb320fb8 <col:16, col:23> 'long'
          | |   `-BinaryOperator 0x1bafb320f98 <col:17, col:21> 'long' '-'
          | |     |-ImplicitCastExpr 0x1bafb320f68 <col:17> 'long' <LValueToRValue>
          | |     | `-DeclRefExpr 0x1bafb320f20 <col:17> 'long' lvalue Var 0x1bafb327fd0 'n' 'long'
          | |     `-ImplicitCastExpr 0x1bafb320f80 <col:21> 'long' <IntegralCast>
          | |       `-IntegerLiteral 0x1bafb320f40 <col:21> 'int' 49
          | `-ImplicitCastExpr 0x1bafb321030 <col:27> 'long' <LValueToRValue>
          |   `-DeclRefExpr 0x1bafb321010 <col:27> 'long' lvalue Var 0x1bafb328198 'i' 'long'
          `-ImplicitCastExpr 0x1bafb321088 <col:31> 'long' <LValueToRValue>
            `-DeclRefExpr 0x1bafb321068 <col:31> 'long' lvalue Var 0x1bafb327ea0 'L' 'long'
