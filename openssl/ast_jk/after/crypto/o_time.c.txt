TranslationUnitDecl 0x1fab0f10ee8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1fab0f11780 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1fab0f11480 '__int128'
|-TypedefDecl 0x1fab0f117f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1fab0f114a0 'unsigned __int128'
|-TypedefDecl 0x1fab0f11b28 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1fab0f118e0 'struct __NSConstantString_tag'
|   `-Record 0x1fab0f11848 '__NSConstantString_tag'
|-TypedefDecl 0x1fab0f11b98 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1fab0f110c0 'unsigned long long'
|-TypedefDecl 0x1fab0f11c30 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1fab0f11bf0 'char *'
|   `-BuiltinType 0x1fab0f10f80 'char'
|-TypedefDecl 0x1fab0f11ca0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1fab0f11bf0 'char *'
|   `-BuiltinType 0x1fab0f10f80 'char'
|-TypedefDecl 0x1fab0f11d60 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1fab0f110c0 'unsigned long long'
|-TypedefDecl 0x1fab0f11dd0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1fab0f11bf0 'char *'
|   `-BuiltinType 0x1fab0f10f80 'char'
|-FunctionDecl 0x1fab292b810 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1fab292b8b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1fab292b920 <col:21> Implicit
|-FunctionDecl 0x1fab292b978 prev 0x1fab292b810 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1fab292b6a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1fab292ba68 <col:21> Inherited Implicit
|-TypedefDecl 0x1fab292baa8 prev 0x1fab0f11b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1fab0f110c0 'unsigned long long'
|-TypedefDecl 0x1fab292bb50 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1fab292bb20 'size_t' sugar
|   |-Typedef 0x1fab292baa8 'size_t'
|   `-BuiltinType 0x1fab0f110c0 'unsigned long long'
|-TypedefDecl 0x1fab292bbc0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1fab0f11020 'long long'
|-TypedefDecl 0x1fab292bc30 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1fab0f11020 'long long'
|-TypedefDecl 0x1fab292bca0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1fab0f11060 'unsigned short'
|-TypedefDecl 0x1fab292bd10 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1fab0f11060 'unsigned short'
|-TypedefDecl 0x1fab292bd80 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1fab0f11060 'unsigned short'
|-TypedefDecl 0x1fab292bdf0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1fab0f10fe0 'int'
|-TypedefDecl 0x1fab292be60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1fab0f11000 'long'
|-TypedefDecl 0x1fab292bed0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1fab0f11020 'long long'
|-TypedefDecl 0x1fab292bf60 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x1fab292bf30 '__time64_t' sugar
|   |-Typedef 0x1fab292bed0 '__time64_t'
|   `-BuiltinType 0x1fab0f11020 'long long'
|-FunctionDecl 0x1fab292c0d8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1fab292c2f8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1fab2967bf0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1fab292c438 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1fab292c4b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1fab292c528 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1fab292c5a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1fab2967990 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1fab2967cd0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1fab2967d90 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1fab2967f00 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1fab2967eb0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1fab2967e50 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1fab2967d70 'struct threadlocaleinfostruct'
|       `-Record 0x1fab296b9d0 'threadlocaleinfostruct'
|-TypedefDecl 0x1fab2968010 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1fab2967fc0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1fab2967f60 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1fab2967e30 'struct threadmbcinfostruct'
|       `-Record 0x1fab2967d90 'threadmbcinfostruct'
|-RecordDecl 0x1fab2968068 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1fab2968120 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1fab29681e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fab2968270 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1fab2968300 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1fab29683b8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1fab2968360 'struct localeinfo_struct' sugar
|   `-RecordType 0x1fab29681c0 'struct localeinfo_struct'
|     `-Record 0x1fab2968120 'localeinfo_struct'
|-TypedefDecl 0x1fab2968490 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1fab2968440 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1fab2968360 'struct localeinfo_struct' sugar
|     `-RecordType 0x1fab29681c0 'struct localeinfo_struct'
|       `-Record 0x1fab2968120 'localeinfo_struct'
|-RecordDecl 0x1fab2968508 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1fab29685c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fab2968638 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1fab29686f8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1fab2968790 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1fab2968800 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1fab29688b8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1fab2968860 'struct localerefcount' sugar
|   `-RecordType 0x1fab29685a0 'struct localerefcount'
|     `-Record 0x1fab2968508 'localerefcount'
|-RecordDecl 0x1fab296b9d0 prev 0x1fab2967cd0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1fab296ba50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fab296bac8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1fab296bb38 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1fab296bba8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1fab296bc18 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1fab296bdd8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1fab296be48 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1fab296beb8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1fab296bf28 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1fab296bf98 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1fab296c008 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1fab296c060 parent 0x1fab0f10ee8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1fab296c1f0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1fab296c260 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1fab296c2d0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1fab296c340 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1fab296c3e0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1fab296c450 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1fab296c560 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1fab296c698 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1fab296c748 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1fab296c6f0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1fab2967d70 'struct threadlocaleinfostruct'
|     `-Record 0x1fab296b9d0 'threadlocaleinfostruct'
|-FunctionDecl 0x1fab2970c30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1fab296c7d0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1fab296c880 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1fab296c900 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1fab2970a20 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2970ff8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1fab2971098 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1fab2971100 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1fab2971168 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab29711e8 prev 0x1fab2970ff8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1fab2970d20 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1fab2970da0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1fab2970e18 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab29715a8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1fab29712d0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1fab2971350 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1fab29713c8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2972a90 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab2971690 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1fab2971710 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1fab2971788 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab2971820 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2972d98 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1fab2972e38 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1fab2972ea0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1fab2972f08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab2972f88 prev 0x1fab2972d98 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1fab2972b80 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1fab2972c00 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1fab2972c78 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2973348 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1fab29733e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fab2973450 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1fab29734b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab2973538 prev 0x1fab2973348 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1fab2973070 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1fab29730f0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1fab2973168 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2973a50 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1fab2973648 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1fab29736e0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fab2973760 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1fab29737d8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fab2973e18 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1fab2973eb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fab2973f20 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1fab2973f88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab2974008 prev 0x1fab2973e18 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1fab2973b40 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1fab2973bc0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1fab2973c38 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2974488 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1fab2974528 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fab2974590 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1fab29745f8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1fab2974660 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab29746e8 prev 0x1fab2974488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1fab29741d0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1fab2974250 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1fab29742d0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1fab2974348 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab29747a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1fab296db88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1fab2974970 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1fab296d9f0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1fab296da68 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab296dc40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1fab296e030 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1fab296dd68 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1fab296dde0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab296de60 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1fab296e400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1fab296e210 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1fab296e290 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1fab296e4b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab296e8c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1fab296e5f8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1fab296e670 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fab296e6f0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1fab296cca0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1fab296cd40 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1fab296cda8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fab296ce20 prev 0x1fab296cca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1fab296cab8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1fab296cb38 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1fab296ced0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab296d228 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1fab296d018 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1fab296d090 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fab296d110 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1fab296d550 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1fab296d5f0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1fab296d658 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fab296d6d0 prev 0x1fab296d550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1fab296d3d0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1fab296d450 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1fab296d780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab2977b60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1fab2977c00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab2977c68 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fab2977ce0 prev 0x1fab2977b60 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1fab296d8c8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1fab296d948 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1fab2977f30 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1fab2977fd0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fab2978040 prev 0x1fab2977f30 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1fab2977dc0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1fab2978338 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1fab2978118 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1fab2978190 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2978588 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1fab2978418 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1fab2978490 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1fab29788b8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1fab29788a8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1fab2978878 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1fab29786e8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1fab29786c8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1fab2978698 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1fab2978650 <col:13> 'const char *' lvalue ParmVar 0x1fab2978418 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1fab29786b0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1fab2978670 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1fab2978860 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1fab2978708 <col:24> 'int' 0
|       `-CallExpr 0x1fab2978800 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1fab29787e8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1fab2978730 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1fab2978338 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1fab2978830 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1fab2978750 <col:36> 'const char *' lvalue ParmVar 0x1fab2978418 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1fab2978848 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1fab2978770 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1fab2978490 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2974b98 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1fab29788e8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1fab2978960 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fab29789e0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1fab2974a60 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fab2974ea0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1fab2974f40 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fab2974fa8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1fab2975010 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab2975090 prev 0x1fab2974ea0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1fab2974c88 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1fab2974d08 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1fab2974d80 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab29752c8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1fab2975178 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1fab2975590 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1fab2975630 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab2975698 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fab2975710 prev 0x1fab2975590 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1fab29753a0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1fab2975420 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1fab2975970 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fab29757f0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1fab2975870 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1fab297ac40 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fab297aac0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1fab297ab40 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1fab297aff8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1fab297ad20 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1fab297ada0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1fab297ae18 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab297b260 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fab297b0e0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1fab297b160 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1fab297b558 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1fab297b340 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1fab297b3c0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1fab297b438 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab297b7c0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fab297b640 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1fab297b6c0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1fab297cae0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1fab297b8a0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1fab297b920 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1fab297b998 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab297ce98 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fab297cbc8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fab297cc48 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1fab297ccc0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab297d300 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab297cf80 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fab297d000 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1fab297d078 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab297d0f0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab297d608 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fab297d3f0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fab297d470 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1fab297d4e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab297d9a0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab297d6f0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1fab297d770 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1fab297d7e8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab297d860 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2978cc8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1fab2978d68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab2978dd0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fab2978e48 prev 0x1fab2978cc8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1fab2978aa0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1fab2978b20 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1fab2979100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1fab2979020 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1fab29791a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab2979580 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1fab29792f0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1fab2979368 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab29793e8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1fab2979898 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1fab2979938 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fab29799a8 prev 0x1fab2979898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1fab2979760 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1fab2979a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab2979dc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1fab2979bb0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1fab2979c28 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab2979ca8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1fab297a0c8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1fab2979ea8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1fab2979f20 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab297a3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fab297a268 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1fab297a460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab297a870 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab297a5a8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1fab297a620 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab297a698 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab297bc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1fab297aa18 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1fab297bad0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fab297bd30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab297c1e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1fab297be78 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1fab297bef0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fab297bf70 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1fab297bfe8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fab297c668 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fab297c708 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1fab297c770 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab297c7d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab297c858 prev 0x1fab297c668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fab297c398 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1fab297c418 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1fab297c490 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab297c910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab2975c20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fab2975cc0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1fab2975d28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab2975d90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab2975e10 prev 0x1fab2975c20 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fab297ca58 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1fab2975a88 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1fab2975b00 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2976110 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fab2975ef8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1fab2975f78 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1fab2975ff0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab29764a8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab29761f8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fab2976278 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1fab29762f0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab2976368 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2976840 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1fab2976598 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1fab2976610 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fab2976690 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1fab2976708 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fab297dc88 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fab297dd28 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1fab297dd90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab297ddf8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab297de78 prev 0x1fab297dc88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fab29769f0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1fab297daf0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1fab297db68 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab297df30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab297e3e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1fab297e078 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1fab297e0f0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fab297e170 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1fab297e1e8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab297e868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1fab297e598 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1fab297e618 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1fab297e690 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab297e920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab297ec70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1fab297ed10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab297ed78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fab297edf0 prev 0x1fab297ec70 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1fab297ea68 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1fab297eb00 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1fab297f050 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1fab297f0f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab297f158 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fab297f1d0 prev 0x1fab297f050 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1fab297eed0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1fab297ef50 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1fab297f390 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1fab297f2b0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1fab297f5e0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1fab297f680 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab297f6e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fab297f760 prev 0x1fab297f5e0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1fab297f468 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1fab297f4e8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1fab297f9c0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1fab297fa60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab29f4000 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fab29f4078 prev 0x1fab297f9c0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1fab297f840 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1fab297f8c0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1fab29f4398 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1fab29f4438 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1fab29f44a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fab29f4518 prev 0x1fab29f4398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1fab29f4218 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1fab29f4298 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1fab29f45c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29f49a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1fab29f4710 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1fab29f4790 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1fab29f4810 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1fab29f4c00 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1fab29f4a90 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1fab29f4b08 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab29f4e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fab29f4da0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1fab29f4f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29f22e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab29f20e0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1fab29f2158 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab29f21d0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab29f2608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1fab29f2490 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1fab29f2508 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fab29f26b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29f2ad0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fab29f2b70 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1fab29f2bd8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fab29f2c40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab29f2cc0 prev 0x1fab29f2ad0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fab29f2800 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1fab29f2880 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1fab29f28f8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab29f8178 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab29f2da8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1fab29f2e28 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1fab29f2ea0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab29f2f18 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab29f8420 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1fab29f84c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fab29f8530 prev 0x1fab29f8420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1fab29f8340 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1fab29f85d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1fab29f8920 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fab29f87a0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1fab29f8820 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1fab29f89d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1fab29f8d18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fab29f8b98 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1fab29f8c18 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1fab29f8dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1fab29f7068 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fab29f8f90 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1fab29f7110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1fab29f7528 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fab29f7310 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1fab29f7390 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1fab29f7408 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab29f75e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1fab29f79c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1fab29f77a8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1fab29f7828 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1fab29f78a0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab29f7a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1fab29f7d20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fab29f7c40 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1fab29f7dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1fab29f9150 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1fab29f7f90 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1fab29f9050 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1fab29f9200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1fab29f94a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fab29f93c8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1fab29f9550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1fab29f97e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1fab29f9670 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1fab29f9b70 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1fab29f98b0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fab29f9928 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fab29f99a0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1fab29f9f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab29f9d10 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fab29f9d88 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1fab29f9fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29fa378 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1fab29fa418 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1fab29fa480 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1fab29fa4f8 prev 0x1fab29fa378 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1fab29fa158 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fa1d0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1fab29fa7f0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1fab29fa890 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1fab29fa8f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1fab29fa970 prev 0x1fab29fa7f0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1fab29fa5d0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fa648 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fab29fac50 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1fab29faa48 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fab29faac0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fab29fab38 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1fab29faf60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab29fadf0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fab29fae68 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1fab29fb010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29f3308 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab29f30e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fab29f3160 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1fab29f3550 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1fab29f35f0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1fab29f3660 prev 0x1fab29f3550 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1fab29f33e0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1fab29f3948 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fab29f3730 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fab29f37a8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab29f3b90 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1fab29f3a20 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1fab29f3a98 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1fab29f3f28 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1fab29f3f18 <line:307:5, col:56>
|     `-ConditionalOperator 0x1fab29f3ee8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1fab29f3d50 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1fab29f3d30 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1fab29f3d00 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1fab29f3c58 <col:13> 'const wchar_t *' lvalue ParmVar 0x1fab29f3a20 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1fab29f3d18 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1fab29f3ce0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1fab29f3cb8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1fab29f3c78 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1fab29f3ed0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1fab29f3d70 <col:29> 'int' 0
|       `-CallExpr 0x1fab29f3e70 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1fab29f3e58 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1fab29f3d98 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1fab29f3948 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1fab29f3ea0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1fab29f3db8 <col:41> 'const wchar_t *' lvalue ParmVar 0x1fab29f3a20 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1fab29f3eb8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1fab29f3dd8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1fab29f3a98 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab29fb368 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1fab29f3f50 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fab29fb070 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fab29fb0e8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fb160 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fab29fb7d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fab29fb510 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fab29fb588 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1fab29fb600 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab29fb888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29fbc98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1fab29fbd38 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1fab29fbda0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1fab29fbe08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fab29fbe88 prev 0x1fab29fbc98 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1fab29fb9c8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab29fba40 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fbab8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab29fc230 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1fab29fbf68 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fab29fbfe0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fab29fc080 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fc0f8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fab29fc5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fab29fc3d8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fab29fc450 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1fab29fc4c8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab29fc698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29fc9f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab29fc7d8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fc850 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1fab29fcc40 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1fab29fcad0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fcb48 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1fab29fce88 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab29fcd18 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fcd90 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1fab29f5070 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab29fcf60 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fcfd8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1fab29f5378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab29f5208 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fab29f5280 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1fab29f5428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29f5890 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1fab29f5568 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fab29f55e0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1fab29f56c0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1fab29f5bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1fab29f5a38 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1fab29f5c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29fd100 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1fab29f5d98 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1fab29f5e10 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab29f5e90 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1fab29fd3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1fab29fd2d8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1fab29fd458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29fd820 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1fab29fd598 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1fab29fd610 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab29fd688 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1fab29fda78 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab29fd900 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fd978 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fab29fde18 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fab29fdb50 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab29fdbc8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fdc40 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2a03178 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fab29fdef8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab29fdf70 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fdfe8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2a035d0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab2a03258 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a032d0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a03348 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab2a033c0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2a03a28 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1fab2a036b8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fab2a03730 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fab2a037a8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1fab2a03820 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2a03e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1fab2a03bd0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fab2a03c48 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1fab2a03cc0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab2a03f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab2a001d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1fab2a04088 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1fab2a00560 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1fab2a002a0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fab2a00318 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab2a00390 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1fab2a00918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1fab2a00700 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fab2a00778 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1fab2a009c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab2a00d28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1fab2a00b08 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1fab2a00b80 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2a00f98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fab2a00ec0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1fab2a01040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab2a044c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab2a041f8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fab2a04270 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab2a042e8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2a04878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fab2a04660 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1fab2a046d8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fab2a04928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab2a04bd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1fab2a04a68 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1fab2a04ae0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2a04e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fab2a04d70 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1fab2a04ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29fe230 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab2a05030 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fab29fe0a0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab29fe118 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab29fe540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fab29fe3d0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1fab29fe448 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fab29fe5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fab29fe9f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fab29fe730 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fab29fe7a8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fe820 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab29fee38 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab29fead0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fab29feb48 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1fab29febc0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab29fec38 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2a05110 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab29fef20 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fab29fef98 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fab2a053f8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fab2a051e8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a05260 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fab2a052d8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2a05650 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab2a054d8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fab2a05550 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fab2a05938 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fab2a05728 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a057a0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fab2a05818 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2a05c28 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fab2a05a18 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a05a90 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fab2a05b08 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2a05fb0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab2a05d08 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a05d80 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a05df8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab2a05e70 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2a062b8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fab2a06098 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a06120 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fab2a06198 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fab2a06640 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fab2a06398 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a06410 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a06488 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fab2a06500 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fab2a068a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1fab2a067c8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1fab2a06948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1fab2a06c80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab2a06b08 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a06b80 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1fab2a06d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1fab2a07130 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fab2a06ef0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a06f68 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a06fe0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab2a071e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1fab2a075b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1fab2a073a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fab2a07420 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1fab2a07498 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fab2a07668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1fab2a07900 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fab2a07828 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1fab2a079a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1fab2a07cd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1fab2a07b68 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fab2a07be0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1fab2a07d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1fab2a08020 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fab2a07f48 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1fab2a080c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1fab2a08390 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fab2a082b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1fab2a08438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1fab2a08770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fab2a085f8 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fab2a08670 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1fab2a08820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-RecordDecl 0x1fab2a08930 <.//openssl//file_jk/after\crypto\o_time.c:14:1, col:8> col:8 struct tm
|-FunctionDecl 0x1fab2a08d60 <col:1, line:57:1> line:14:12 OPENSSL_gmtime 'struct tm *(const time_t *, struct tm *)'
| |-ParmVarDecl 0x1fab2a08a78 <col:27, col:41> col:41 used timer 'const time_t *'
| |-ParmVarDecl 0x1fab2a08b90 <col:48, col:59> col:59 used result 'struct tm *'
| `-CompoundStmt 0x1fab2a01460 <line:15:1, line:57:1>
|   |-DeclStmt 0x1fab2a08f58 <line:16:5, col:25>
|   | `-VarDecl 0x1fab2a08e50 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\o_time.c:16:16 used ts 'struct tm *' cinit
|   |   `-ImplicitCastExpr 0x1fab2a08f40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'struct tm *' <NullToPointer>
|   |     `-ParenExpr 0x1fab2a08f20 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1fab2a08ef8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1fab2a08eb8 <col:26> 'int' 0
|   |-BinaryOperator 0x1fab2a01140 <.//openssl//file_jk/after\crypto\o_time.c:49:5, col:22> 'struct tm *' '='
|   | |-DeclRefExpr 0x1fab2a08f70 <col:5> 'struct tm *' lvalue Var 0x1fab2a08e50 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x1fab2a01128 <col:10, col:22> 'struct tm *' <IntegralToPointer>
|   |   `-CallExpr 0x1fab2a010e8 <col:10, col:22> 'int'
|   |     |-ImplicitCastExpr 0x1fab2a010d0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1fab2a090c8 <col:10> 'int ()' Function 0x1fab2a09000 'gmtime' 'int ()'
|   |     `-ImplicitCastExpr 0x1fab2a01110 <col:17> 'const time_t *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1fab2a090e8 <col:17> 'const time_t *' lvalue ParmVar 0x1fab2a08a78 'timer' 'const time_t *'
|   |-IfStmt 0x1fab2a01308 <line:50:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x1fab2a01238 <.//openssl//file_jk/after\crypto\o_time.c:50:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1fab2a01208 <.//openssl//file_jk/after\crypto\o_time.c:50:9> 'struct tm *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fab2a01160 <col:9> 'struct tm *' lvalue Var 0x1fab2a08e50 'ts' 'struct tm *'
|   | | `-ImplicitCastExpr 0x1fab2a01220 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'struct tm *' <BitCast>
|   | |   `-ParenExpr 0x1fab2a011e8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1fab2a011c0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1fab2a01180 <col:26> 'int' 0
|   | `-ReturnStmt 0x1fab2a012f8 <.//openssl//file_jk/after\crypto\o_time.c:51:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x1fab2a012e0 <col:17, col:27> 'struct tm *' <NullToPointer>
|   |     `-ParenExpr 0x1fab2a012c0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1fab2a01298 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1fab2a01258 <col:26> 'int' 0
|   |-BinaryOperator 0x1fab2a013f8 <.//openssl//file_jk/after\crypto\o_time.c:54:5, col:10> 'struct tm *' '='
|   | |-DeclRefExpr 0x1fab2a013a0 <col:5> 'struct tm *' lvalue Var 0x1fab2a08e50 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x1fab2a013e0 <col:10> 'struct tm *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fab2a013c0 <col:10> 'struct tm *' lvalue ParmVar 0x1fab2a08b90 'result' 'struct tm *'
|   `-ReturnStmt 0x1fab2a01450 <line:56:5, col:12>
|     `-ImplicitCastExpr 0x1fab2a01438 <col:12> 'struct tm *' <LValueToRValue>
|       `-DeclRefExpr 0x1fab2a01418 <col:12> 'struct tm *' lvalue Var 0x1fab2a08e50 'ts' 'struct tm *'
|-FunctionDecl 0x1fab2a016e0 <line:67:1, col:47> col:13 used date_to_julian 'long (int, int, int)' static
| |-ParmVarDecl 0x1fab2a014b0 <col:28, col:32> col:32 y 'int'
| |-ParmVarDecl 0x1fab2a01530 <col:35, col:39> col:39 m 'int'
| `-ParmVarDecl 0x1fab2a015b0 <col:42, col:46> col:46 d 'int'
|-FunctionDecl 0x1fab2a01a98 <line:68:1, col:59> col:13 used julian_to_date 'void (long, int *, int *, int *)' static
| |-ParmVarDecl 0x1fab2a017c8 <col:28, col:33> col:33 jd 'long'
| |-ParmVarDecl 0x1fab2a01848 <col:37, col:42> col:42 y 'int *'
| |-ParmVarDecl 0x1fab2a018c8 <col:45, col:50> col:50 m 'int *'
| `-ParmVarDecl 0x1fab2a01948 <col:53, col:58> col:58 d 'int *'
|-FunctionDecl 0x1fab2a01ff0 <line:69:1, line:70:44> line:69:12 used julian_adj 'int (const struct tm *, int, long, long *, int *)' static
| |-ParmVarDecl 0x1fab2a01bf0 <col:23, col:40> col:40 tm 'const struct tm *'
| |-ParmVarDecl 0x1fab2a01c70 <col:44, col:48> col:48 off_day 'int'
| |-ParmVarDecl 0x1fab2a01cf0 <col:57, col:62> col:62 offset_sec 'long'
| |-ParmVarDecl 0x1fab2a01da0 <line:70:23, col:29> col:29 pday 'long *'
| `-ParmVarDecl 0x1fab2a01e20 <col:35, col:40> col:40 psec 'int *'
|-FunctionDecl 0x1fab2a0b410 <line:72:1, line:100:1> line:72:5 OPENSSL_gmtime_adj 'int (struct tm *, int, long)'
| |-ParmVarDecl 0x1fab2a0b198 <col:24, col:35> col:35 used tm 'struct tm *'
| |-ParmVarDecl 0x1fab2a0b218 <col:39, col:43> col:43 used off_day 'int'
| |-ParmVarDecl 0x1fab2a0b298 <col:52, col:57> col:57 used offset_sec 'long'
| `-CompoundStmt 0x1fab2a0f268 <line:73:1, line:100:1>
|   |-DeclStmt 0x1fab2a0b708 <line:74:5, col:50>
|   | |-VarDecl 0x1fab2a0b4f8 <col:5, col:9> col:9 used time_sec 'int'
|   | |-VarDecl 0x1fab2a0b578 <col:5, col:19> col:19 used time_year 'int'
|   | |-VarDecl 0x1fab2a0b5f8 <col:5, col:30> col:30 used time_month 'int'
|   | `-VarDecl 0x1fab2a0b678 <col:5, col:42> col:42 used time_day 'int'
|   |-DeclStmt 0x1fab2a0b7a0 <line:75:5, col:17>
|   | `-VarDecl 0x1fab2a0b738 <col:5, col:10> col:10 used time_jd 'long'
|   |-IfStmt 0x1fab2a0ba48 <line:78:5, line:79:16>
|   | |-UnaryOperator 0x1fab2a0b9f8 <line:78:9, col:65> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1fab2a0b950 <col:10, col:65> 'int'
|   | |   |-ImplicitCastExpr 0x1fab2a0b938 <col:10> 'int (*)(const struct tm *, int, long, long *, int *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1fab2a0b7b8 <col:10> 'int (const struct tm *, int, long, long *, int *)' Function 0x1fab2a01ff0 'julian_adj' 'int (const struct tm *, int, long, long *, int *)'
|   | |   |-ImplicitCastExpr 0x1fab2a0b9b0 <col:21> 'const struct tm *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x1fab2a0b998 <col:21> 'struct tm *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1fab2a0b7d8 <col:21> 'struct tm *' lvalue ParmVar 0x1fab2a0b198 'tm' 'struct tm *'
|   | |   |-ImplicitCastExpr 0x1fab2a0b9c8 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fab2a0b7f8 <col:25> 'int' lvalue ParmVar 0x1fab2a0b218 'off_day' 'int'
|   | |   |-ImplicitCastExpr 0x1fab2a0b9e0 <col:34> 'long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fab2a0b818 <col:34> 'long' lvalue ParmVar 0x1fab2a0b298 'offset_sec' 'long'
|   | |   |-UnaryOperator 0x1fab2a0b870 <col:46, col:47> 'long *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1fab2a0b838 <col:47> 'long' lvalue Var 0x1fab2a0b738 'time_jd' 'long'
|   | |   `-UnaryOperator 0x1fab2a0b8c0 <col:56, col:57> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x1fab2a0b888 <col:57> 'int' lvalue Var 0x1fab2a0b4f8 'time_sec' 'int'
|   | `-ReturnStmt 0x1fab2a0ba38 <line:79:9, col:16>
|   |   `-IntegerLiteral 0x1fab2a0ba10 <col:16> 'int' 0
|   |-CallExpr 0x1fab2a0bbd0 <line:83:5, col:63> 'void'
|   | |-ImplicitCastExpr 0x1fab2a0bbb8 <col:5> 'void (*)(long, int *, int *, int *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1fab2a0ba60 <col:5> 'void (long, int *, int *, int *)' Function 0x1fab2a01a98 'julian_to_date' 'void (long, int *, int *, int *)'
|   | |-ImplicitCastExpr 0x1fab2a0bc10 <col:20> 'long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1fab2a0ba80 <col:20> 'long' lvalue Var 0x1fab2a0b738 'time_jd' 'long'
|   | |-UnaryOperator 0x1fab2a0bad8 <col:29, col:30> 'int *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x1fab2a0baa0 <col:30> 'int' lvalue Var 0x1fab2a0b578 'time_year' 'int'
|   | |-UnaryOperator 0x1fab2a0bb28 <col:41, col:42> 'int *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x1fab2a0baf0 <col:42> 'int' lvalue Var 0x1fab2a0b5f8 'time_month' 'int'
|   | `-UnaryOperator 0x1fab2a0bb78 <col:54, col:55> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x1fab2a0bb40 <col:55> 'int' lvalue Var 0x1fab2a0b678 'time_day' 'int'
|   |-IfStmt 0x1fab2a0bd80 <line:85:5, line:86:16>
|   | |-BinaryOperator 0x1fab2a0bd28 <line:85:9, col:41> 'int' '||'
|   | | |-BinaryOperator 0x1fab2a0bc88 <col:9, col:21> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1fab2a0bc70 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1fab2a0bc28 <col:9> 'int' lvalue Var 0x1fab2a0b578 'time_year' 'int'
|   | | | `-IntegerLiteral 0x1fab2a0bc48 <col:21> 'int' 1900
|   | | `-BinaryOperator 0x1fab2a0bd08 <col:29, col:41> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1fab2a0bcf0 <col:29> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fab2a0bca8 <col:29> 'int' lvalue Var 0x1fab2a0b578 'time_year' 'int'
|   | |   `-IntegerLiteral 0x1fab2a0bcc8 <col:41> 'int' 9999
|   | `-ReturnStmt 0x1fab2a0bd70 <line:86:9, col:16>
|   |   `-IntegerLiteral 0x1fab2a0bd48 <col:16> 'int' 0
|   `-ReturnStmt 0x1fab2a0f258 <line:98:5, col:12>
|     `-IntegerLiteral 0x1fab2a0f230 <col:12> 'int' 1
|-FunctionDecl 0x1fab2a0f610 <line:102:1, line:130:1> line:102:5 OPENSSL_gmtime_diff 'int (int *, int *, const struct tm *, const struct tm *)'
| |-ParmVarDecl 0x1fab2a0f2c0 <col:25, col:30> col:30 used pday 'int *'
| |-ParmVarDecl 0x1fab2a0f340 <col:36, col:41> col:41 used psec 'int *'
| |-ParmVarDecl 0x1fab2a0f3d0 <line:103:25, col:42> col:42 used from 'const struct tm *'
| |-ParmVarDecl 0x1fab2a0f460 <col:48, col:65> col:65 used to 'const struct tm *'
| `-CompoundStmt 0x1fab2a0c850 <line:104:1, line:130:1>
|   |-DeclStmt 0x1fab2a0f888 <line:105:5, col:35>
|   | |-VarDecl 0x1fab2a0f700 <col:5, col:9> col:9 used from_sec 'int'
|   | |-VarDecl 0x1fab2a0f780 <col:5, col:19> col:19 used to_sec 'int'
|   | `-VarDecl 0x1fab2a0f800 <col:5, col:27> col:27 used diff_sec 'int'
|   |-DeclStmt 0x1fab2a0fa40 <line:106:5, col:34>
|   | |-VarDecl 0x1fab2a0f8b8 <col:5, col:10> col:10 used from_jd 'long'
|   | |-VarDecl 0x1fab2a0f938 <col:5, col:19> col:19 used to_jd 'long'
|   | `-VarDecl 0x1fab2a0f9b8 <col:5, col:26> col:26 used diff_day 'long'
|   |-IfStmt 0x1fab2a0fc68 <line:107:5, line:108:16>
|   | |-UnaryOperator 0x1fab2a0fc18 <line:107:9, col:52> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1fab2a0fba0 <col:10, col:52> 'int'
|   | |   |-ImplicitCastExpr 0x1fab2a0fb88 <col:10> 'int (*)(const struct tm *, int, long, long *, int *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1fab2a0fa58 <col:10> 'int (const struct tm *, int, long, long *, int *)' Function 0x1fab2a01ff0 'julian_adj' 'int (const struct tm *, int, long, long *, int *)'
|   | |   |-ImplicitCastExpr 0x1fab2a0fbe8 <col:21> 'const struct tm *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fab2a0fa78 <col:21> 'const struct tm *' lvalue ParmVar 0x1fab2a0f3d0 'from' 'const struct tm *'
|   | |   |-IntegerLiteral 0x1fab2a0fa98 <col:27> 'int' 0
|   | |   |-ImplicitCastExpr 0x1fab2a0fc00 <col:30> 'long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1fab2a0fac0 <col:30> 'int' 0
|   | |   |-UnaryOperator 0x1fab2a0fb20 <col:33, col:34> 'long *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1fab2a0fae8 <col:34> 'long' lvalue Var 0x1fab2a0f8b8 'from_jd' 'long'
|   | |   `-UnaryOperator 0x1fab2a0fb70 <col:43, col:44> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x1fab2a0fb38 <col:44> 'int' lvalue Var 0x1fab2a0f700 'from_sec' 'int'
|   | `-ReturnStmt 0x1fab2a0fc58 <line:108:9, col:16>
|   |   `-IntegerLiteral 0x1fab2a0fc30 <col:16> 'int' 0
|   |-IfStmt 0x1fab2a0fe90 <line:109:5, line:110:16>
|   | |-UnaryOperator 0x1fab2a0fe40 <line:109:9, col:46> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1fab2a0fdc8 <col:10, col:46> 'int'
|   | |   |-ImplicitCastExpr 0x1fab2a0fdb0 <col:10> 'int (*)(const struct tm *, int, long, long *, int *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1fab2a0fc80 <col:10> 'int (const struct tm *, int, long, long *, int *)' Function 0x1fab2a01ff0 'julian_adj' 'int (const struct tm *, int, long, long *, int *)'
|   | |   |-ImplicitCastExpr 0x1fab2a0fe10 <col:21> 'const struct tm *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fab2a0fca0 <col:21> 'const struct tm *' lvalue ParmVar 0x1fab2a0f460 'to' 'const struct tm *'
|   | |   |-IntegerLiteral 0x1fab2a0fcc0 <col:25> 'int' 0
|   | |   |-ImplicitCastExpr 0x1fab2a0fe28 <col:28> 'long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x1fab2a0fce8 <col:28> 'int' 0
|   | |   |-UnaryOperator 0x1fab2a0fd48 <col:31, col:32> 'long *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1fab2a0fd10 <col:32> 'long' lvalue Var 0x1fab2a0f938 'to_jd' 'long'
|   | |   `-UnaryOperator 0x1fab2a0fd98 <col:39, col:40> 'int *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x1fab2a0fd60 <col:40> 'int' lvalue Var 0x1fab2a0f780 'to_sec' 'int'
|   | `-ReturnStmt 0x1fab2a0fe80 <line:110:9, col:16>
|   |   `-IntegerLiteral 0x1fab2a0fe58 <col:16> 'int' 0
|   |-BinaryOperator 0x1fab2a0ff70 <line:111:5, col:24> 'long' '='
|   | |-DeclRefExpr 0x1fab2a0fea8 <col:5> 'long' lvalue Var 0x1fab2a0f9b8 'diff_day' 'long'
|   | `-BinaryOperator 0x1fab2a0ff50 <col:16, col:24> 'long' '-'
|   |   |-ImplicitCastExpr 0x1fab2a0ff20 <col:16> 'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1fab2a0fee0 <col:16> 'long' lvalue Var 0x1fab2a0f938 'to_jd' 'long'
|   |   `-ImplicitCastExpr 0x1fab2a0ff38 <col:24> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1fab2a0ff00 <col:24> 'long' lvalue Var 0x1fab2a0f8b8 'from_jd' 'long'
|   |-BinaryOperator 0x1fab2a10058 <line:112:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x1fab2a0ff90 <col:5> 'int' lvalue Var 0x1fab2a0f800 'diff_sec' 'int'
|   | `-BinaryOperator 0x1fab2a10038 <col:16, col:25> 'int' '-'
|   |   |-ImplicitCastExpr 0x1fab2a10008 <col:16> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1fab2a0ffc8 <col:16> 'int' lvalue Var 0x1fab2a0f780 'to_sec' 'int'
|   |   `-ImplicitCastExpr 0x1fab2a10020 <col:25> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1fab2a0ffe8 <col:25> 'int' lvalue Var 0x1fab2a0f700 'from_sec' 'int'
|   |-IfStmt 0x1fab2a0c300 <line:114:5, line:117:5>
|   | |-BinaryOperator 0x1fab2a10190 <line:114:9, col:36> 'int' '&&'
|   | | |-BinaryOperator 0x1fab2a100f0 <col:9, col:20> 'int' '>'
|   | | | |-ImplicitCastExpr 0x1fab2a100c0 <col:9> 'long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1fab2a10078 <col:9> 'long' lvalue Var 0x1fab2a0f9b8 'diff_day' 'long'
|   | | | `-ImplicitCastExpr 0x1fab2a100d8 <col:20> 'long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1fab2a10098 <col:20> 'int' 0
|   | | `-BinaryOperator 0x1fab2a10170 <col:25, col:36> 'int' '<'
|   | |   |-ImplicitCastExpr 0x1fab2a10158 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fab2a10110 <col:25> 'int' lvalue Var 0x1fab2a0f800 'diff_sec' 'int'
|   | |   `-IntegerLiteral 0x1fab2a10130 <col:36> 'int' 0
|   | `-CompoundStmt 0x1fab2a0c2e0 <col:39, line:117:5>
|   |   |-UnaryOperator 0x1fab2a0c1a0 <line:115:9, col:17> 'long' postfix '--'
|   |   | `-DeclRefExpr 0x1fab2a0c180 <col:9> 'long' lvalue Var 0x1fab2a0f9b8 'diff_day' 'long'
|   |   `-CompoundAssignOperator 0x1fab2a0c2b0 <line:116:9, line:65:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1fab2a0c1b8 <line:116:9> 'int' lvalue Var 0x1fab2a0f800 'diff_sec' 'int'
|   |     `-ParenExpr 0x1fab2a0c290 <line:65:22, col:35> 'int'
|   |       `-BinaryOperator 0x1fab2a0c270 <col:23, col:33> 'int' '*'
|   |         |-BinaryOperator 0x1fab2a0c228 <col:23, col:28> 'int' '*'
|   |         | |-IntegerLiteral 0x1fab2a0c1d8 <col:23> 'int' 24
|   |         | `-IntegerLiteral 0x1fab2a0c200 <col:28> 'int' 60
|   |         `-IntegerLiteral 0x1fab2a0c248 <col:33> 'int' 60
|   |-IfStmt 0x1fab2a0c5d0 <line:118:5, line:121:5>
|   | |-BinaryOperator 0x1fab2a0c430 <line:118:9, col:36> 'int' '&&'
|   | | |-BinaryOperator 0x1fab2a0c390 <col:9, col:20> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1fab2a0c360 <col:9> 'long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1fab2a0c318 <col:9> 'long' lvalue Var 0x1fab2a0f9b8 'diff_day' 'long'
|   | | | `-ImplicitCastExpr 0x1fab2a0c378 <col:20> 'long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1fab2a0c338 <col:20> 'int' 0
|   | | `-BinaryOperator 0x1fab2a0c410 <col:25, col:36> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1fab2a0c3f8 <col:25> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1fab2a0c3b0 <col:25> 'int' lvalue Var 0x1fab2a0f800 'diff_sec' 'int'
|   | |   `-IntegerLiteral 0x1fab2a0c3d0 <col:36> 'int' 0
|   | `-CompoundStmt 0x1fab2a0c5b0 <col:39, line:121:5>
|   |   |-UnaryOperator 0x1fab2a0c470 <line:119:9, col:17> 'long' postfix '++'
|   |   | `-DeclRefExpr 0x1fab2a0c450 <col:9> 'long' lvalue Var 0x1fab2a0f9b8 'diff_day' 'long'
|   |   `-CompoundAssignOperator 0x1fab2a0c580 <line:120:9, line:65:35> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1fab2a0c488 <line:120:9> 'int' lvalue Var 0x1fab2a0f800 'diff_sec' 'int'
|   |     `-ParenExpr 0x1fab2a0c560 <line:65:22, col:35> 'int'
|   |       `-BinaryOperator 0x1fab2a0c540 <col:23, col:33> 'int' '*'
|   |         |-BinaryOperator 0x1fab2a0c4f8 <col:23, col:28> 'int' '*'
|   |         | |-IntegerLiteral 0x1fab2a0c4a8 <col:23> 'int' 24
|   |         | `-IntegerLiteral 0x1fab2a0c4d0 <col:28> 'int' 60
|   |         `-IntegerLiteral 0x1fab2a0c518 <col:33> 'int' 60
|   |-IfStmt 0x1fab2a0c708 <line:123:5, line:124:22>
|   | |-ImplicitCastExpr 0x1fab2a0c608 <line:123:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1fab2a0c5e8 <col:9> 'int *' lvalue ParmVar 0x1fab2a0f2c0 'pday' 'int *'
|   | `-BinaryOperator 0x1fab2a0c6e8 <line:124:9, col:22> 'int' '='
|   |   |-UnaryOperator 0x1fab2a0c658 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1fab2a0c640 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1fab2a0c620 <col:10> 'int *' lvalue ParmVar 0x1fab2a0f2c0 'pday' 'int *'
|   |   `-CStyleCastExpr 0x1fab2a0c6c0 <col:17, col:22> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1fab2a0c6a8 <col:22> 'long' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1fab2a0c670 <col:22> 'long' lvalue Var 0x1fab2a0f9b8 'diff_day' 'long'
|   |-IfStmt 0x1fab2a0c800 <line:125:5, line:126:17>
|   | |-ImplicitCastExpr 0x1fab2a0c740 <line:125:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1fab2a0c720 <col:9> 'int *' lvalue ParmVar 0x1fab2a0f340 'psec' 'int *'
|   | `-BinaryOperator 0x1fab2a0c7e0 <line:126:9, col:17> 'int' '='
|   |   |-UnaryOperator 0x1fab2a0c790 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1fab2a0c778 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1fab2a0c758 <col:10> 'int *' lvalue ParmVar 0x1fab2a0f340 'psec' 'int *'
|   |   `-ImplicitCastExpr 0x1fab2a0c7c8 <col:17> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1fab2a0c7a8 <col:17> 'int' lvalue Var 0x1fab2a0f800 'diff_sec' 'int'
|   `-ReturnStmt 0x1fab2a0c840 <line:128:5, col:12>
|     `-IntegerLiteral 0x1fab2a0c818 <col:12> 'int' 1
|-FunctionDecl 0x1fab2a0cc10 prev 0x1fab2a01ff0 <line:133:1, line:174:1> line:133:12 used julian_adj 'int (const struct tm *, int, long, long *, int *)' static
| |-ParmVarDecl 0x1fab2a0c8e0 <col:23, col:40> col:40 used tm 'const struct tm *'
| |-ParmVarDecl 0x1fab2a0c960 <col:44, col:48> col:48 used off_day 'int'
| |-ParmVarDecl 0x1fab2a0c9e0 <col:57, col:62> col:62 used offset_sec 'long'
| |-ParmVarDecl 0x1fab2a0ca60 <line:134:23, col:29> col:29 used pday 'long *'
| |-ParmVarDecl 0x1fab2a0cae0 <col:35, col:40> col:40 used psec 'int *'
| `-CompoundStmt 0x1fab2a0e1a0 <line:135:1, line:174:1>
|   |-DeclStmt 0x1fab2a0cdf0 <line:136:5, col:31>
|   | |-VarDecl 0x1fab2a0ccf0 <col:5, col:9> col:9 used offset_hms 'int'
|   | `-VarDecl 0x1fab2a0cd70 <col:5, col:21> col:21 used offset_day 'int'
|   |-DeclStmt 0x1fab2a0ce88 <line:137:5, col:17>
|   | `-VarDecl 0x1fab2a0ce20 <col:5, col:10> col:10 used time_jd 'long'
|   |-DeclStmt 0x1fab2a0d040 <line:138:5, col:40>
|   | |-VarDecl 0x1fab2a0ceb8 <col:5, col:9> col:9 used time_year 'int'
|   | |-VarDecl 0x1fab2a0cf38 <col:5, col:20> col:20 used time_month 'int'
|   | `-VarDecl 0x1fab2a0cfb8 <col:5, col:32> col:32 used time_day 'int'
|   |-BinaryOperator 0x1fab2a0a1e8 <line:140:5, line:65:35> 'int' '='
|   | |-DeclRefExpr 0x1fab2a0d058 <line:140:5> 'int' lvalue Var 0x1fab2a0cd70 'offset_day' 'int'
|   | `-ImplicitCastExpr 0x1fab2a0a1d0 <col:18, line:65:35> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x1fab2a0a1b0 <line:140:18, line:65:35> 'long' '/'
|   |     |-ImplicitCastExpr 0x1fab2a0a180 <line:140:18> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1fab2a0d090 <col:18> 'long' lvalue ParmVar 0x1fab2a0c9e0 'offset_sec' 'long'
|   |     `-ImplicitCastExpr 0x1fab2a0a198 <line:65:22, col:35> 'long' <IntegralCast>
|   |       `-ParenExpr 0x1fab2a0a160 <col:22, col:35> 'int'
|   |         `-BinaryOperator 0x1fab2a0d148 <col:23, col:33> 'int' '*'
|   |           |-BinaryOperator 0x1fab2a0d100 <col:23, col:28> 'int' '*'
|   |           | |-IntegerLiteral 0x1fab2a0d0b0 <col:23> 'int' 24
|   |           | `-IntegerLiteral 0x1fab2a0d0d8 <col:28> 'int' 60
|   |           `-IntegerLiteral 0x1fab2a0d120 <col:33> 'int' 60
|   |-BinaryOperator 0x1fab2a0a418 <line:142:5, col:57> 'int' '='
|   | |-DeclRefExpr 0x1fab2a0a208 <col:5> 'int' lvalue Var 0x1fab2a0ccf0 'offset_hms' 'int'
|   | `-ImplicitCastExpr 0x1fab2a0a400 <col:18, col:57> 'int' <IntegralCast>
|   |   `-BinaryOperator 0x1fab2a0a3e0 <col:18, col:57> 'long' '-'
|   |     |-ImplicitCastExpr 0x1fab2a0a3b0 <col:18> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1fab2a0a240 <col:18> 'long' lvalue ParmVar 0x1fab2a0c9e0 'offset_sec' 'long'
|   |     `-ImplicitCastExpr 0x1fab2a0a3c8 <col:31, col:57> 'long' <IntegralCast>
|   |       `-ParenExpr 0x1fab2a0a390 <col:31, col:57> 'int'
|   |         `-BinaryOperator 0x1fab2a0a370 <col:32, line:65:35> 'int' '*'
|   |           |-ImplicitCastExpr 0x1fab2a0a358 <line:142:32> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1fab2a0a260 <col:32> 'int' lvalue Var 0x1fab2a0cd70 'offset_day' 'int'
|   |           `-ParenExpr 0x1fab2a0a338 <line:65:22, col:35> 'int'
|   |             `-BinaryOperator 0x1fab2a0a318 <col:23, col:33> 'int' '*'
|   |               |-BinaryOperator 0x1fab2a0a2d0 <col:23, col:28> 'int' '*'
|   |               | |-IntegerLiteral 0x1fab2a0a280 <col:23> 'int' 24
|   |               | `-IntegerLiteral 0x1fab2a0a2a8 <col:28> 'int' 60
|   |               `-IntegerLiteral 0x1fab2a0a2f0 <col:33> 'int' 60
|   |-CompoundAssignOperator 0x1fab2a0a490 <line:143:5, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x1fab2a0a438 <col:5> 'int' lvalue Var 0x1fab2a0cd70 'offset_day' 'int'
|   | `-ImplicitCastExpr 0x1fab2a0a478 <col:19> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fab2a0a458 <col:19> 'int' lvalue ParmVar 0x1fab2a0c960 'off_day' 'int'
|   |-IfStmt 0x1fab2a0aaa0 <line:147:5, line:153:5> has_else
|   | |-BinaryOperator 0x1fab2a0a6e8 <line:147:9, line:65:35> 'int' '>='
|   | | |-ImplicitCastExpr 0x1fab2a0a6d0 <line:147:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fab2a0a5d8 <col:9> 'int' lvalue Var 0x1fab2a0ccf0 'offset_hms' 'int'
|   | | `-ParenExpr 0x1fab2a0a6b0 <line:65:22, col:35> 'int'
|   | |   `-BinaryOperator 0x1fab2a0a690 <col:23, col:33> 'int' '*'
|   | |     |-BinaryOperator 0x1fab2a0a648 <col:23, col:28> 'int' '*'
|   | |     | |-IntegerLiteral 0x1fab2a0a5f8 <col:23> 'int' 24
|   | |     | `-IntegerLiteral 0x1fab2a0a620 <col:28> 'int' 60
|   | |     `-IntegerLiteral 0x1fab2a0a668 <col:33> 'int' 60
|   | |-CompoundStmt 0x1fab2a0a868 <line:147:37, line:150:5>
|   | | |-UnaryOperator 0x1fab2a0a728 <line:148:9, col:19> 'int' postfix '++'
|   | | | `-DeclRefExpr 0x1fab2a0a708 <col:9> 'int' lvalue Var 0x1fab2a0cd70 'offset_day' 'int'
|   | | `-CompoundAssignOperator 0x1fab2a0a838 <line:149:9, line:65:35> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |   |-DeclRefExpr 0x1fab2a0a740 <line:149:9> 'int' lvalue Var 0x1fab2a0ccf0 'offset_hms' 'int'
|   | |   `-ParenExpr 0x1fab2a0a818 <line:65:22, col:35> 'int'
|   | |     `-BinaryOperator 0x1fab2a0a7f8 <col:23, col:33> 'int' '*'
|   | |       |-BinaryOperator 0x1fab2a0a7b0 <col:23, col:28> 'int' '*'
|   | |       | |-IntegerLiteral 0x1fab2a0a760 <col:23> 'int' 24
|   | |       | `-IntegerLiteral 0x1fab2a0a788 <col:28> 'int' 60
|   | |       `-IntegerLiteral 0x1fab2a0a7d0 <col:33> 'int' 60
|   | `-IfStmt 0x1fab2a0aa88 <line:150:12, line:153:5>
|   |   |-BinaryOperator 0x1fab2a0a8e8 <line:150:16, col:29> 'int' '<'
|   |   | |-ImplicitCastExpr 0x1fab2a0a8d0 <col:16> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1fab2a0a888 <col:16> 'int' lvalue Var 0x1fab2a0ccf0 'offset_hms' 'int'
|   |   | `-IntegerLiteral 0x1fab2a0a8a8 <col:29> 'int' 0
|   |   `-CompoundStmt 0x1fab2a0aa68 <col:32, line:153:5>
|   |     |-UnaryOperator 0x1fab2a0a928 <line:151:9, col:19> 'int' postfix '--'
|   |     | `-DeclRefExpr 0x1fab2a0a908 <col:9> 'int' lvalue Var 0x1fab2a0cd70 'offset_day' 'int'
|   |     `-CompoundAssignOperator 0x1fab2a0aa38 <line:152:9, line:65:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |-DeclRefExpr 0x1fab2a0a940 <line:152:9> 'int' lvalue Var 0x1fab2a0ccf0 'offset_hms' 'int'
|   |       `-ParenExpr 0x1fab2a0aa18 <line:65:22, col:35> 'int'
|   |         `-BinaryOperator 0x1fab2a0a9f8 <col:23, col:33> 'int' '*'
|   |           |-BinaryOperator 0x1fab2a0a9b0 <col:23, col:28> 'int' '*'
|   |           | |-IntegerLiteral 0x1fab2a0a960 <col:23> 'int' 24
|   |           | `-IntegerLiteral 0x1fab2a0a988 <col:28> 'int' 60
|   |           `-IntegerLiteral 0x1fab2a0a9d0 <col:33> 'int' 60
|   |-BinaryOperator 0x1fab2a0ade0 <line:163:5, col:61> 'long' '='
|   | |-DeclRefExpr 0x1fab2a0ac68 <col:5> 'long' lvalue Var 0x1fab2a0ce20 'time_jd' 'long'
|   | `-CallExpr 0x1fab2a0ad60 <col:15, col:61> 'long'
|   |   |-ImplicitCastExpr 0x1fab2a0ad48 <col:15> 'long (*)(int, int, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1fab2a0aca0 <col:15> 'long (int, int, int)' Function 0x1fab2a016e0 'date_to_julian' 'long (int, int, int)'
|   |   |-ImplicitCastExpr 0x1fab2a0ad98 <col:30> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1fab2a0acc0 <col:30> 'int' lvalue Var 0x1fab2a0ceb8 'time_year' 'int'
|   |   |-ImplicitCastExpr 0x1fab2a0adb0 <col:41> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1fab2a0ace0 <col:41> 'int' lvalue Var 0x1fab2a0cf38 'time_month' 'int'
|   |   `-ImplicitCastExpr 0x1fab2a0adc8 <col:53> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1fab2a0ad00 <col:53> 'int' lvalue Var 0x1fab2a0cfb8 'time_day' 'int'
|   |-CompoundAssignOperator 0x1fab2a0ae70 <line:166:5, col:16> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   | |-DeclRefExpr 0x1fab2a0ae00 <col:5> 'long' lvalue Var 0x1fab2a0ce20 'time_jd' 'long'
|   | `-ImplicitCastExpr 0x1fab2a0ae58 <col:16> 'long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1fab2a0ae40 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1fab2a0ae20 <col:16> 'int' lvalue Var 0x1fab2a0cd70 'offset_day' 'int'
|   |-IfStmt 0x1fab2a0af70 <line:168:5, line:169:16>
|   | |-BinaryOperator 0x1fab2a0af18 <line:168:9, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x1fab2a0aee8 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1fab2a0aea0 <col:9> 'long' lvalue Var 0x1fab2a0ce20 'time_jd' 'long'
|   | | `-ImplicitCastExpr 0x1fab2a0af00 <col:19> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1fab2a0aec0 <col:19> 'int' 0
|   | `-ReturnStmt 0x1fab2a0af60 <line:169:9, col:16>
|   |   `-IntegerLiteral 0x1fab2a0af38 <col:16> 'int' 0
|   |-BinaryOperator 0x1fab2a0b010 <line:171:5, col:13> 'long' '='
|   | |-UnaryOperator 0x1fab2a0afc0 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1fab2a0afa8 <col:6> 'long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fab2a0af88 <col:6> 'long *' lvalue ParmVar 0x1fab2a0ca60 'pday' 'long *'
|   | `-ImplicitCastExpr 0x1fab2a0aff8 <col:13> 'long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fab2a0afd8 <col:13> 'long' lvalue Var 0x1fab2a0ce20 'time_jd' 'long'
|   |-BinaryOperator 0x1fab2a0b0b8 <line:172:5, col:13> 'int' '='
|   | |-UnaryOperator 0x1fab2a0b068 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1fab2a0b050 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1fab2a0b030 <col:6> 'int *' lvalue ParmVar 0x1fab2a0cae0 'psec' 'int *'
|   | `-ImplicitCastExpr 0x1fab2a0b0a0 <col:13> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1fab2a0b080 <col:13> 'int' lvalue Var 0x1fab2a0ccf0 'offset_hms' 'int'
|   `-ReturnStmt 0x1fab2a0b100 <line:173:5, col:12>
|     `-IntegerLiteral 0x1fab2a0b0d8 <col:12> 'int' 1
|-FunctionDecl 0x1fab2a0e420 prev 0x1fab2a016e0 <line:179:1, line:184:1> line:179:13 used date_to_julian 'long (int, int, int)' static
| |-ParmVarDecl 0x1fab2a0e230 <col:28, col:32> col:32 used y 'int'
| |-ParmVarDecl 0x1fab2a0e2b0 <col:35, col:39> col:39 used m 'int'
| |-ParmVarDecl 0x1fab2a0e330 <col:42, col:46> col:46 used d 'int'
| `-CompoundStmt 0x1fab2a0edb8 <line:180:1, line:184:1>
|   `-ReturnStmt 0x1fab2a0eda8 <line:181:5, line:183:60>
|     `-ImplicitCastExpr 0x1fab2a0ed90 <line:181:12, line:183:60> 'long' <IntegralCast>
|       `-BinaryOperator 0x1fab2a0ed70 <line:181:12, line:183:60> 'int' '-'
|         |-BinaryOperator 0x1fab2a0ed28 <line:181:12, line:183:56> 'int' '+'
|         | |-BinaryOperator 0x1fab2a0ecd0 <line:181:12, line:183:52> 'int' '-'
|         | | |-BinaryOperator 0x1fab2a0e9f0 <line:181:12, line:182:50> 'int' '+'
|         | | | |-BinaryOperator 0x1fab2a0e710 <line:181:12, col:50> 'int' '/'
|         | | | | |-ParenExpr 0x1fab2a0e6c8 <col:12, col:46> 'int'
|         | | | | | `-BinaryOperator 0x1fab2a0e6a8 <col:13, col:45> 'int' '*'
|         | | | | |   |-IntegerLiteral 0x1fab2a0e4d8 <col:13> 'int' 1461
|         | | | | |   `-ParenExpr 0x1fab2a0e688 <col:20, col:45> 'int'
|         | | | | |     `-BinaryOperator 0x1fab2a0e668 <col:21, col:43> 'int' '+'
|         | | | | |       |-BinaryOperator 0x1fab2a0e560 <col:21, col:25> 'int' '+'
|         | | | | |       | |-ImplicitCastExpr 0x1fab2a0e548 <col:21> 'int' <LValueToRValue>
|         | | | | |       | | `-DeclRefExpr 0x1fab2a0e500 <col:21> 'int' lvalue ParmVar 0x1fab2a0e230 'y' 'int'
|         | | | | |       | `-IntegerLiteral 0x1fab2a0e520 <col:25> 'int' 4800
|         | | | | |       `-BinaryOperator 0x1fab2a0e648 <col:32, col:43> 'int' '/'
|         | | | | |         |-ParenExpr 0x1fab2a0e600 <col:32, col:39> 'int'
|         | | | | |         | `-BinaryOperator 0x1fab2a0e5e0 <col:33, col:37> 'int' '-'
|         | | | | |         |   |-ImplicitCastExpr 0x1fab2a0e5c8 <col:33> 'int' <LValueToRValue>
|         | | | | |         |   | `-DeclRefExpr 0x1fab2a0e580 <col:33> 'int' lvalue ParmVar 0x1fab2a0e2b0 'm' 'int'
|         | | | | |         |   `-IntegerLiteral 0x1fab2a0e5a0 <col:37> 'int' 14
|         | | | | |         `-IntegerLiteral 0x1fab2a0e620 <col:43> 'int' 12
|         | | | | `-IntegerLiteral 0x1fab2a0e6e8 <col:50> 'int' 4
|         | | | `-BinaryOperator 0x1fab2a0e9d0 <line:182:9, col:50> 'int' '/'
|         | | |   |-ParenExpr 0x1fab2a0e988 <col:9, col:46> 'int'
|         | | |   | `-BinaryOperator 0x1fab2a0e968 <col:10, col:45> 'int' '*'
|         | | |   |   |-IntegerLiteral 0x1fab2a0e730 <col:10> 'int' 367
|         | | |   |   `-ParenExpr 0x1fab2a0e948 <col:16, col:45> 'int'
|         | | |   |     `-BinaryOperator 0x1fab2a0e928 <col:17, col:44> 'int' '-'
|         | | |   |       |-BinaryOperator 0x1fab2a0e7b8 <col:17, col:21> 'int' '-'
|         | | |   |       | |-ImplicitCastExpr 0x1fab2a0e7a0 <col:17> 'int' <LValueToRValue>
|         | | |   |       | | `-DeclRefExpr 0x1fab2a0e758 <col:17> 'int' lvalue ParmVar 0x1fab2a0e2b0 'm' 'int'
|         | | |   |       | `-IntegerLiteral 0x1fab2a0e778 <col:21> 'int' 2
|         | | |   |       `-BinaryOperator 0x1fab2a0e908 <col:25, col:44> 'int' '*'
|         | | |   |         |-IntegerLiteral 0x1fab2a0e7d8 <col:25> 'int' 12
|         | | |   |         `-ParenExpr 0x1fab2a0e8e8 <col:30, col:44> 'int'
|         | | |   |           `-BinaryOperator 0x1fab2a0e8c8 <col:31, col:42> 'int' '/'
|         | | |   |             |-ParenExpr 0x1fab2a0e880 <col:31, col:38> 'int'
|         | | |   |             | `-BinaryOperator 0x1fab2a0e860 <col:32, col:36> 'int' '-'
|         | | |   |             |   |-ImplicitCastExpr 0x1fab2a0e848 <col:32> 'int' <LValueToRValue>
|         | | |   |             |   | `-DeclRefExpr 0x1fab2a0e800 <col:32> 'int' lvalue ParmVar 0x1fab2a0e2b0 'm' 'int'
|         | | |   |             |   `-IntegerLiteral 0x1fab2a0e820 <col:36> 'int' 14
|         | | |   |             `-IntegerLiteral 0x1fab2a0e8a0 <col:42> 'int' 12
|         | | |   `-IntegerLiteral 0x1fab2a0e9a8 <col:50> 'int' 12
|         | | `-BinaryOperator 0x1fab2a0ecb0 <line:183:9, col:52> 'int' '/'
|         | |   |-ParenExpr 0x1fab2a0ec68 <col:9, col:48> 'int'
|         | |   | `-BinaryOperator 0x1fab2a0ec48 <col:10, col:47> 'int' '*'
|         | |   |   |-IntegerLiteral 0x1fab2a0ea10 <col:10> 'int' 3
|         | |   |   `-ParenExpr 0x1fab2a0ec28 <col:14, col:47> 'int'
|         | |   |     `-BinaryOperator 0x1fab2a0ec08 <col:15, col:44> 'int' '/'
|         | |   |       |-ParenExpr 0x1fab2a0ebc0 <col:15, col:40> 'int'
|         | |   |       | `-BinaryOperator 0x1fab2a0eba0 <col:16, col:38> 'int' '+'
|         | |   |       |   |-BinaryOperator 0x1fab2a0ea98 <col:16, col:20> 'int' '+'
|         | |   |       |   | |-ImplicitCastExpr 0x1fab2a0ea80 <col:16> 'int' <LValueToRValue>
|         | |   |       |   | | `-DeclRefExpr 0x1fab2a0ea38 <col:16> 'int' lvalue ParmVar 0x1fab2a0e230 'y' 'int'
|         | |   |       |   | `-IntegerLiteral 0x1fab2a0ea58 <col:20> 'int' 4900
|         | |   |       |   `-BinaryOperator 0x1fab2a0eb80 <col:27, col:38> 'int' '/'
|         | |   |       |     |-ParenExpr 0x1fab2a0eb38 <col:27, col:34> 'int'
|         | |   |       |     | `-BinaryOperator 0x1fab2a0eb18 <col:28, col:32> 'int' '-'
|         | |   |       |     |   |-ImplicitCastExpr 0x1fab2a0eb00 <col:28> 'int' <LValueToRValue>
|         | |   |       |     |   | `-DeclRefExpr 0x1fab2a0eab8 <col:28> 'int' lvalue ParmVar 0x1fab2a0e2b0 'm' 'int'
|         | |   |       |     |   `-IntegerLiteral 0x1fab2a0ead8 <col:32> 'int' 14
|         | |   |       |     `-IntegerLiteral 0x1fab2a0eb58 <col:38> 'int' 12
|         | |   |       `-IntegerLiteral 0x1fab2a0ebe0 <col:44> 'int' 100
|         | |   `-IntegerLiteral 0x1fab2a0ec88 <col:52> 'int' 4
|         | `-ImplicitCastExpr 0x1fab2a0ed10 <col:56> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x1fab2a0ecf0 <col:56> 'int' lvalue ParmVar 0x1fab2a0e330 'd' 'int'
|         `-IntegerLiteral 0x1fab2a0ed48 <col:60> 'int' 32075
`-FunctionDecl 0x1fab2a0f070 prev 0x1fab2a01a98 <line:186:1, line:200:1> line:186:13 used julian_to_date 'void (long, int *, int *, int *)' static
  |-ParmVarDecl 0x1fab2a0ede8 <col:28, col:33> col:33 used jd 'long'
  |-ParmVarDecl 0x1fab2a0ee68 <col:37, col:42> col:42 used y 'int *'
  |-ParmVarDecl 0x1fab2a0eee8 <col:45, col:50> col:50 used m 'int *'
  |-ParmVarDecl 0x1fab2a0ef68 <col:53, col:58> col:58 used d 'int *'
  `-CompoundStmt 0x1fab2a0d458 <line:187:1, line:200:1>
    |-DeclStmt 0x1fab2a102c0 <line:188:5, col:24>
    | `-VarDecl 0x1fab2a101c0 <col:5, col:19> col:10 used L 'long' cinit
    |   `-BinaryOperator 0x1fab2a102a0 <col:14, col:19> 'long' '+'
    |     |-ImplicitCastExpr 0x1fab2a10270 <col:14> 'long' <LValueToRValue>
    |     | `-DeclRefExpr 0x1fab2a10228 <col:14> 'long' lvalue ParmVar 0x1fab2a0ede8 'jd' 'long'
    |     `-ImplicitCastExpr 0x1fab2a10288 <col:19> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x1fab2a10248 <col:19> 'int' 68569
    |-DeclStmt 0x1fab2a10488 <line:189:5, col:30>
    | `-VarDecl 0x1fab2a102f0 <col:5, col:24> col:10 used n 'long' cinit
    |   `-BinaryOperator 0x1fab2a10468 <col:14, col:24> 'long' '/'
    |     |-ParenExpr 0x1fab2a10408 <col:14, col:20> 'long'
    |     | `-BinaryOperator 0x1fab2a103e8 <col:15, col:19> 'long' '*'
    |     |   |-ImplicitCastExpr 0x1fab2a103d0 <col:15> 'long' <IntegralCast>
    |     |   | `-IntegerLiteral 0x1fab2a10358 <col:15> 'int' 4
    |     |   `-ImplicitCastExpr 0x1fab2a103b8 <col:19> 'long' <LValueToRValue>
    |     |     `-DeclRefExpr 0x1fab2a10380 <col:19> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
    |     `-ImplicitCastExpr 0x1fab2a10450 <col:24> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x1fab2a10428 <col:24> 'int' 146097
    |-DeclStmt 0x1fab2a105b8 <line:190:5, col:14>
    | |-VarDecl 0x1fab2a104b8 <col:5, col:10> col:10 used i 'long'
    | `-VarDecl 0x1fab2a10538 <col:5, col:13> col:13 used j 'long'
    |-BinaryOperator 0x1fab2a107d8 <line:192:5, col:32> 'long' '='
    | |-DeclRefExpr 0x1fab2a105d0 <col:5> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
    | `-BinaryOperator 0x1fab2a107b8 <col:9, col:32> 'long' '-'
    |   |-ImplicitCastExpr 0x1fab2a107a0 <col:9> 'long' <LValueToRValue>
    |   | `-DeclRefExpr 0x1fab2a105f0 <col:9> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
    |   `-BinaryOperator 0x1fab2a10780 <col:13, col:32> 'long' '/'
    |     |-ParenExpr 0x1fab2a10720 <col:13, col:28> 'long'
    |     | `-BinaryOperator 0x1fab2a10700 <col:14, col:27> 'long' '+'
    |     |   |-BinaryOperator 0x1fab2a106a0 <col:14, col:23> 'long' '*'
    |     |   | |-ImplicitCastExpr 0x1fab2a10688 <col:14> 'long' <IntegralCast>
    |     |   | | `-IntegerLiteral 0x1fab2a10610 <col:14> 'int' 146097
    |     |   | `-ImplicitCastExpr 0x1fab2a10670 <col:23> 'long' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x1fab2a10638 <col:23> 'long' lvalue Var 0x1fab2a102f0 'n' 'long'
    |     |   `-ImplicitCastExpr 0x1fab2a106e8 <col:27> 'long' <IntegralCast>
    |     |     `-IntegerLiteral 0x1fab2a106c0 <col:27> 'int' 3
    |     `-ImplicitCastExpr 0x1fab2a10768 <col:32> 'long' <IntegralCast>
    |       `-IntegerLiteral 0x1fab2a10740 <col:32> 'int' 4
    |-BinaryOperator 0x1fab2a109c8 <line:193:5, col:28> 'long' '='
    | |-DeclRefExpr 0x1fab2a107f8 <col:5> 'long' lvalue Var 0x1fab2a104b8 'i' 'long'
    | `-BinaryOperator 0x1fab2a109a8 <col:9, col:28> 'long' '/'
    |   |-ParenExpr 0x1fab2a10948 <col:9, col:24> 'long'
    |   | `-BinaryOperator 0x1fab2a10928 <col:10, col:23> 'long' '*'
    |   |   |-ImplicitCastExpr 0x1fab2a10910 <col:10> 'long' <IntegralCast>
    |   |   | `-IntegerLiteral 0x1fab2a10830 <col:10> 'int' 4000
    |   |   `-ParenExpr 0x1fab2a108f0 <col:17, col:23> 'long'
    |   |     `-BinaryOperator 0x1fab2a108d0 <col:18, col:22> 'long' '+'
    |   |       |-ImplicitCastExpr 0x1fab2a108a0 <col:18> 'long' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x1fab2a10858 <col:18> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
    |   |       `-ImplicitCastExpr 0x1fab2a108b8 <col:22> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1fab2a10878 <col:22> 'int' 1
    |   `-ImplicitCastExpr 0x1fab2a10990 <col:28> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x1fab2a10968 <col:28> 'int' 1461001
    |-BinaryOperator 0x1fab2a10bd8 <line:194:5, col:30> 'long' '='
    | |-DeclRefExpr 0x1fab2a109e8 <col:5> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
    | `-BinaryOperator 0x1fab2a10bb8 <col:9, col:30> 'long' '+'
    |   |-BinaryOperator 0x1fab2a10b58 <col:9, col:26> 'long' '-'
    |   | |-ImplicitCastExpr 0x1fab2a10b40 <col:9> 'long' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1fab2a10a08 <col:9> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
    |   | `-BinaryOperator 0x1fab2a10b20 <col:13, col:26> 'long' '/'
    |   |   |-ParenExpr 0x1fab2a10ac0 <col:13, col:22> 'long'
    |   |   | `-BinaryOperator 0x1fab2a10aa0 <col:14, col:21> 'long' '*'
    |   |   |   |-ImplicitCastExpr 0x1fab2a10a88 <col:14> 'long' <IntegralCast>
    |   |   |   | `-IntegerLiteral 0x1fab2a10a28 <col:14> 'int' 1461
    |   |   |   `-ImplicitCastExpr 0x1fab2a10a70 <col:21> 'long' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x1fab2a10a50 <col:21> 'long' lvalue Var 0x1fab2a104b8 'i' 'long'
    |   |   `-ImplicitCastExpr 0x1fab2a10b08 <col:26> 'long' <IntegralCast>
    |   |     `-IntegerLiteral 0x1fab2a10ae0 <col:26> 'int' 4
    |   `-ImplicitCastExpr 0x1fab2a10ba0 <col:30> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x1fab2a10b78 <col:30> 'int' 31
    |-BinaryOperator 0x1fab2a10d48 <line:195:5, col:20> 'long' '='
    | |-DeclRefExpr 0x1fab2a10bf8 <col:5> 'long' lvalue Var 0x1fab2a10538 'j' 'long'
    | `-BinaryOperator 0x1fab2a10d28 <col:9, col:20> 'long' '/'
    |   |-ParenExpr 0x1fab2a10cc8 <col:9, col:16> 'long'
    |   | `-BinaryOperator 0x1fab2a10ca8 <col:10, col:15> 'long' '*'
    |   |   |-ImplicitCastExpr 0x1fab2a10c90 <col:10> 'long' <IntegralCast>
    |   |   | `-IntegerLiteral 0x1fab2a10c30 <col:10> 'int' 80
    |   |   `-ImplicitCastExpr 0x1fab2a10c78 <col:15> 'long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1fab2a10c58 <col:15> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
    |   `-ImplicitCastExpr 0x1fab2a10d10 <col:20> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x1fab2a10ce8 <col:20> 'int' 2447
    |-BinaryOperator 0x1fab2a10f40 <line:196:5, col:27> 'int' '='
    | |-UnaryOperator 0x1fab2a10da0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1fab2a10d88 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1fab2a10d68 <col:6> 'int *' lvalue ParmVar 0x1fab2a0ef68 'd' 'int *'
    | `-ImplicitCastExpr 0x1fab2a10f28 <col:10, col:27> 'int' <IntegralCast>
    |   `-BinaryOperator 0x1fab2a10f08 <col:10, col:27> 'long' '-'
    |     |-ImplicitCastExpr 0x1fab2a10ef0 <col:10> 'long' <LValueToRValue>
    |     | `-DeclRefExpr 0x1fab2a10db8 <col:10> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
    |     `-BinaryOperator 0x1fab2a10ed0 <col:14, col:27> 'long' '/'
    |       |-ParenExpr 0x1fab2a10e70 <col:14, col:23> 'long'
    |       | `-BinaryOperator 0x1fab2a10e50 <col:15, col:22> 'long' '*'
    |       |   |-ImplicitCastExpr 0x1fab2a10e38 <col:15> 'long' <IntegralCast>
    |       |   | `-IntegerLiteral 0x1fab2a10dd8 <col:15> 'int' 2447
    |       |   `-ImplicitCastExpr 0x1fab2a10e20 <col:22> 'long' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1fab2a10e00 <col:22> 'long' lvalue Var 0x1fab2a10538 'j' 'long'
    |       `-ImplicitCastExpr 0x1fab2a10eb8 <col:27> 'long' <IntegralCast>
    |         `-IntegerLiteral 0x1fab2a10e90 <col:27> 'int' 80
    |-BinaryOperator 0x1fab2a11018 <line:197:5, col:13> 'long' '='
    | |-DeclRefExpr 0x1fab2a10f60 <col:5> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
    | `-BinaryOperator 0x1fab2a10ff8 <col:9, col:13> 'long' '/'
    |   |-ImplicitCastExpr 0x1fab2a10fc8 <col:9> 'long' <LValueToRValue>
    |   | `-DeclRefExpr 0x1fab2a10f80 <col:9> 'long' lvalue Var 0x1fab2a10538 'j' 'long'
    |   `-ImplicitCastExpr 0x1fab2a10fe0 <col:13> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x1fab2a10fa0 <col:13> 'int' 11
    |-BinaryOperator 0x1fab2a0d1e8 <line:198:5, col:25> 'int' '='
    | |-UnaryOperator 0x1fab2a11070 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1fab2a11058 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1fab2a11038 <col:6> 'int *' lvalue ParmVar 0x1fab2a0eee8 'm' 'int *'
    | `-ImplicitCastExpr 0x1fab2a0d1d0 <col:10, col:25> 'int' <IntegralCast>
    |   `-BinaryOperator 0x1fab2a0d1b0 <col:10, col:25> 'long' '-'
    |     |-BinaryOperator 0x1fab2a11100 <col:10, col:14> 'long' '+'
    |     | |-ImplicitCastExpr 0x1fab2a110d0 <col:10> 'long' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1fab2a11088 <col:10> 'long' lvalue Var 0x1fab2a10538 'j' 'long'
    |     | `-ImplicitCastExpr 0x1fab2a110e8 <col:14> 'long' <IntegralCast>
    |     |   `-IntegerLiteral 0x1fab2a110a8 <col:14> 'int' 2
    |     `-ParenExpr 0x1fab2a0d190 <col:18, col:25> 'long'
    |       `-BinaryOperator 0x1fab2a11198 <col:19, col:24> 'long' '*'
    |         |-ImplicitCastExpr 0x1fab2a11180 <col:19> 'long' <IntegralCast>
    |         | `-IntegerLiteral 0x1fab2a11120 <col:19> 'int' 12
    |         `-ImplicitCastExpr 0x1fab2a11168 <col:24> 'long' <LValueToRValue>
    |           `-DeclRefExpr 0x1fab2a11148 <col:24> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
    `-BinaryOperator 0x1fab2a0d438 <line:199:5, col:31> 'int' '='
      |-UnaryOperator 0x1fab2a0d240 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x1fab2a0d228 <col:6> 'int *' <LValueToRValue>
      |   `-DeclRefExpr 0x1fab2a0d208 <col:6> 'int *' lvalue ParmVar 0x1fab2a0ee68 'y' 'int *'
      `-ImplicitCastExpr 0x1fab2a0d420 <col:10, col:31> 'int' <IntegralCast>
        `-BinaryOperator 0x1fab2a0d400 <col:10, col:31> 'long' '+'
          |-BinaryOperator 0x1fab2a0d3a8 <col:10, col:27> 'long' '+'
          | |-BinaryOperator 0x1fab2a0d350 <col:10, col:23> 'long' '*'
          | | |-ImplicitCastExpr 0x1fab2a0d338 <col:10> 'long' <IntegralCast>
          | | | `-IntegerLiteral 0x1fab2a0d258 <col:10> 'int' 100
          | | `-ParenExpr 0x1fab2a0d318 <col:16, col:23> 'long'
          | |   `-BinaryOperator 0x1fab2a0d2f8 <col:17, col:21> 'long' '-'
          | |     |-ImplicitCastExpr 0x1fab2a0d2c8 <col:17> 'long' <LValueToRValue>
          | |     | `-DeclRefExpr 0x1fab2a0d280 <col:17> 'long' lvalue Var 0x1fab2a102f0 'n' 'long'
          | |     `-ImplicitCastExpr 0x1fab2a0d2e0 <col:21> 'long' <IntegralCast>
          | |       `-IntegerLiteral 0x1fab2a0d2a0 <col:21> 'int' 49
          | `-ImplicitCastExpr 0x1fab2a0d390 <col:27> 'long' <LValueToRValue>
          |   `-DeclRefExpr 0x1fab2a0d370 <col:27> 'long' lvalue Var 0x1fab2a104b8 'i' 'long'
          `-ImplicitCastExpr 0x1fab2a0d3e8 <col:31> 'long' <LValueToRValue>
            `-DeclRefExpr 0x1fab2a0d3c8 <col:31> 'long' lvalue Var 0x1fab2a101c0 'L' 'long'
