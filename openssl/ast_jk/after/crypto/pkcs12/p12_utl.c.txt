TranslationUnitDecl 0x1eaf8116ff8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1eaf8117890 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1eaf8117590 '__int128'
|-TypedefDecl 0x1eaf8117900 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1eaf81175b0 'unsigned __int128'
|-TypedefDecl 0x1eaf8117c38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1eaf81179f0 'struct __NSConstantString_tag'
|   `-Record 0x1eaf8117958 '__NSConstantString_tag'
|-TypedefDecl 0x1eaf8117ca8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1eaf81171d0 'unsigned long long'
|-TypedefDecl 0x1eaf8117d40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1eaf8117d00 'char *'
|   `-BuiltinType 0x1eaf8117090 'char'
|-TypedefDecl 0x1eaf8117db0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1eaf8117d00 'char *'
|   `-BuiltinType 0x1eaf8117090 'char'
|-TypedefDecl 0x1eaf8117e70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1eaf81171d0 'unsigned long long'
|-TypedefDecl 0x1eaf8117ee0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1eaf8117d00 'char *'
|   `-BuiltinType 0x1eaf8117090 'char'
|-FunctionDecl 0x1eaf9b8f3f0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1eaf9b8f490 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1eaf9b8f500 <col:21> Implicit
|-FunctionDecl 0x1eaf9b8f558 prev 0x1eaf9b8f3f0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1eaf9b8f280 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1eaf9b8f648 <col:21> Inherited Implicit
|-TypedefDecl 0x1eaf9b8f688 prev 0x1eaf8117ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1eaf81171d0 'unsigned long long'
|-TypedefDecl 0x1eaf9b8f730 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1eaf9b8f700 'size_t' sugar
|   |-Typedef 0x1eaf9b8f688 'size_t'
|   `-BuiltinType 0x1eaf81171d0 'unsigned long long'
|-TypedefDecl 0x1eaf9b8f7a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1eaf8117130 'long long'
|-TypedefDecl 0x1eaf9b8f810 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1eaf8117130 'long long'
|-TypedefDecl 0x1eaf9b8f880 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1eaf8117170 'unsigned short'
|-TypedefDecl 0x1eaf9b8f8f0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1eaf8117170 'unsigned short'
|-TypedefDecl 0x1eaf9b8f960 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1eaf8117170 'unsigned short'
|-TypedefDecl 0x1eaf9b8f9d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1eaf81170f0 'int'
|-TypedefDecl 0x1eaf9b8fa40 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1eaf8117110 'long'
|-TypedefDecl 0x1eaf9b8fab0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1eaf8117130 'long long'
|-TypedefDecl 0x1eaf9b8fb40 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1eaf9b8fb10 '__time64_t' sugar
|   |-Typedef 0x1eaf9b8fab0 '__time64_t'
|   `-BuiltinType 0x1eaf8117130 'long long'
|-FunctionDecl 0x1eaf9b8fcb8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1eaf9b8fed8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1eaf9bc7020 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1eaf9b90018 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9b90090 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9b90108 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9b90188 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1eaf9bc6dc0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1eaf9bc7100 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1eaf9bc71c0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1eaf9bc7330 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1eaf9bc72e0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1eaf9bc7280 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1eaf9bc71a0 'struct threadlocaleinfostruct'
|       `-Record 0x1eaf9bd4ea0 'threadlocaleinfostruct'
|-TypedefDecl 0x1eaf9bc7440 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1eaf9bc73f0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1eaf9bc7390 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1eaf9bc7260 'struct threadmbcinfostruct'
|       `-Record 0x1eaf9bc71c0 'threadmbcinfostruct'
|-RecordDecl 0x1eaf9bc7498 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1eaf9bc7550 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1eaf9bc7610 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1eaf9bc76a0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1eaf9bc7730 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1eaf9bc77e8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1eaf9bc7790 'struct localeinfo_struct' sugar
|   `-RecordType 0x1eaf9bc75f0 'struct localeinfo_struct'
|     `-Record 0x1eaf9bc7550 'localeinfo_struct'
|-TypedefDecl 0x1eaf9bc78c0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1eaf9bc7870 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1eaf9bc7790 'struct localeinfo_struct' sugar
|     `-RecordType 0x1eaf9bc75f0 'struct localeinfo_struct'
|       `-Record 0x1eaf9bc7550 'localeinfo_struct'
|-RecordDecl 0x1eaf9bc7938 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1eaf9bc79f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1eaf9bc7a68 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1eaf9bc7b28 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1eaf9bc7bc0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1eaf9bc7c30 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1eaf9bc7ce8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1eaf9bc7c90 'struct localerefcount' sugar
|   `-RecordType 0x1eaf9bc79d0 'struct localerefcount'
|     `-Record 0x1eaf9bc7938 'localerefcount'
|-RecordDecl 0x1eaf9bd4ea0 prev 0x1eaf9bc7100 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1eaf9bd4f20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1eaf9bd4f98 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1eaf9bd5008 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1eaf9bd5078 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1eaf9bd50e8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1eaf9bd52a8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1eaf9bd5318 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1eaf9bd5388 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1eaf9bd53f8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1eaf9bd5468 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1eaf9bd54d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1eaf9bd5530 parent 0x1eaf8116ff8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1eaf9bd56c0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1eaf9bd5730 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1eaf9bd57a0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1eaf9bd5810 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1eaf9bd58b0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1eaf9bd5920 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1eaf9bd5a30 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1eaf9bd5b68 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1eaf9bd5c18 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1eaf9bd5bc0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1eaf9bc71a0 'struct threadlocaleinfostruct'
|     `-Record 0x1eaf9bd4ea0 'threadlocaleinfostruct'
|-RecordDecl 0x1eaf9bd5cb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1eaf9bd5d70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1eaf9bd5de8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1eaf9bdcf20 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1eaf9bdcf90 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1eaf9bdd000 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1eaf9bdd070 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1eaf9bdd0e0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1eaf9bdd150 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1eaf9bdd1c0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1eaf9bdd270 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1eaf9bdd220 'struct _iobuf' sugar
|   `-RecordType 0x1eaf9bd5d50 'struct _iobuf'
|     `-Record 0x1eaf9bd5cb0 '_iobuf'
|-FunctionDecl 0x1eaf9bdd4a8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1eaf9bdd578 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1eaf8117130 'long long'
|-FunctionDecl 0x1eaf9bdd758 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9bdd5e0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1eaf9bdda50 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1eaf9bdd830 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1eaf9bdd8a8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1eaf9bdde00 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1eaf9bddb30 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1eaf9bddbb0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1eaf9bddc30 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1eaf9bd7030 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1eaf9bd6ec0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1eaf9bd7260 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1eaf9bd7120 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1eaf9bd7410 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9bd7330 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1eaf9bd7600 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1eaf9bd78f8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1eaf9bd76d0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1eaf9bd7750 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1eaf9bd7ab0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9bd79d0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1eaf9bd7c60 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9bd7b80 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1eaf9bd7e10 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9bd7d30 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1eaf9bd5fb8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9bd5ed8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1eaf9bd6148 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1eaf9bd64b0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1eaf9bd6210 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1eaf9bd6308 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1eaf9bd6868 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1eaf9bd6590 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1eaf9bd6610 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1eaf9bd6688 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1eaf9bd6a28 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9bd6948 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1eaf9bd6cf0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1eaf9bd6b00 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1eaf9bd6b80 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1eaf9bdef40 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1eaf9bdf338 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1eaf9bdf3d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1eaf9bdf440 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1eaf9bdf4b8 prev 0x1eaf9bdf338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1eaf9bdf110 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1eaf9bdf190 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1eaf9bdf568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9bdf9e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1eaf9bdf710 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1eaf9bdf790 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1eaf9bdf810 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1eaf9bdfd00 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1eaf9bdfda0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1eaf9bdfe08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1eaf9bdfe80 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1eaf9be0f60 prev 0x1eaf9bdfd00 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1eaf9bdfac0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9bdfb40 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1eaf9be1058 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1eaf9be1220 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1eaf9be10a0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1eaf9be1120 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1eaf9be1478 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1eaf9be1300 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1eaf9be1378 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1eaf9be16a8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1eaf9be1558 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1eaf9be19a0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1eaf9be1780 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1eaf9be17f8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1eaf9be1e38 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1eaf9be1ed8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1eaf9bddf30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1eaf9bddf98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1eaf9bde000 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1eaf9bde088 prev 0x1eaf9be1e38 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1eaf9be1a80 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1eaf9be1af8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9be1b70 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9be1be8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1eaf9bde590 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1eaf9bde178 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1eaf9bde1f0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9bde268 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9bde2e0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9bde358 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1eaf9bdea50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1eaf9bde780 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1eaf9bde800 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1eaf9bde878 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1eaf9bdeb08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9bdfff8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1eaf9bdec50 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1eaf9bdecd0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1eaf9bded50 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1eaf9bdedc8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1eaf9be03a0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1eaf9be0440 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1eaf9be04a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1eaf9be0520 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1eaf9be0588 prev 0x1eaf9be03a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1eaf9be01d8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9be0258 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1eaf9be0768 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1eaf9be0638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9be0ba8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9be08a8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9be0928 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9be09c0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9be0c60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9be1f70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1eaf9be0da0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1eaf9be0e20 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1eaf9be2260 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9be2048 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9be20c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9be2140 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9be25c0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1eaf9be2340 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1eaf9be2418 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1eaf9be2978 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1eaf9be2698 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9be2718 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1eaf9be2798 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1eaf9be2bd8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1eaf9be2a58 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1eaf9be2fc8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1eaf9be2ca8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9be2d28 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1eaf9be2da8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1eaf9be3228 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1eaf9be30a8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1eaf9be36e8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1eaf9be3788 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1eaf9be37f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1eaf9be3858 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1eaf9be38c0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1eaf9be3948 prev 0x1eaf9be36e8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1eaf9be3330 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1eaf9be33a8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9be3420 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9be3498 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1eaf9be3b10 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9be3a30 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1eaf9be3ca0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1eaf9be3e28 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1eaf9be4150 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1eaf9be3ef8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1eaf9be3fa0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1eaf9be4478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1eaf9be4330 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1eaf9be4520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9be4740 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9be4660 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1eaf9be4960 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1eaf9be4818 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1eaf9be4b10 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9be4a30 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1eaf9be4d60 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1eaf9be4be8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1eaf9be4c68 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1eaf9be4fa0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1eaf9be5040 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1eaf9be50b0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1eaf9be5118 prev 0x1eaf9be4fa0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1eaf9be4e40 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1eaf9be5208 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1eaf9be5338 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1eaf9be5258 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1eaf9be5588 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1eaf9be5410 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1eaf9be5488 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1eaf9be5748 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1eaf9be5668 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1eaf9be5968 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1eaf9be5820 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1eaf9be5bb8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1eaf9be5a40 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1eaf9be5ab8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1eaf9be5d78 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1eaf9be5c98 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1eaf9c300f0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1eaf9be5e50 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1eaf9be5ed0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1eaf9c302b0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1eaf9c301d0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1eaf9c30540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1eaf9c30460 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1eaf9c305e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1eaf9c307e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1eaf9c30708 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1eaf9c30970 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1eaf9c30c18 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1eaf9c30cb8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1eaf9c30d28 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1eaf9c30d90 prev 0x1eaf9c30c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1eaf9c30b00 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1eaf9c30f68 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1eaf9c30e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c32350 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c32118 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c32190 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9c32400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c32628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1eaf9c32548 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1eaf9c32878 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c32700 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c32778 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c32c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1eaf9c32a10 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c32a90 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1eaf9c32ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c32f10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1eaf9c32e30 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1eaf9c351b8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1eaf9c35070 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1eaf9c353a0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1eaf9c357f0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1eaf9c35468 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c354e8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1eaf9c35568 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1eaf9c355e0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1eaf9c35c70 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1eaf9c358e0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c35958 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c359d0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c35a50 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1eaf9c34060 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1eaf9c35d60 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c35dd8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c35e58 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1eaf9c34228 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1eaf9c34148 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1eaf9c34600 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1eaf9c346a0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1eaf9c34708 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1eaf9c34780 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1eaf9c347e8 prev 0x1eaf9c34600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1eaf9c343c0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1eaf9c34440 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1eaf9c349c8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1eaf9c34898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c34db8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c34ad8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1eaf9c34b58 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c34bd0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9c34e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c36180 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1eaf9c34fb8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1eaf9c36080 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1eaf9c36478 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c36260 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1eaf9c362e0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c36358 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c36908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1eaf9c36620 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1eaf9c36698 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c36718 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1eaf9c369c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c36f90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c36c00 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1eaf9c36c78 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c36cf8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c36d70 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9c380a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c38400 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1eaf9c381e8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1eaf9c38260 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c382e0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1eaf9c38798 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c384e8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1eaf9c38560 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c385e0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c38658 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c389f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1eaf9c38a98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c38d50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1eaf9c38be0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1eaf9c31030 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1eaf9c38e28 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1eaf9c38ea0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1eaf9c312b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1eaf9c311d0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1eaf9c31358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c31618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1eaf9c314a0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1eaf9c31518 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1eaf9c31a30 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1eaf9c31ad0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1eaf9c31b38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1eaf9c31ba0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1eaf9c31c20 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1eaf9c31c88 prev 0x1eaf9c31a30 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1eaf9c316f0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c31770 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c317e8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1eaf9c31d88 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1eaf9c37090 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1eaf9c37130 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1eaf9c37198 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1eaf9c37200 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1eaf9c37280 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1eaf9c372e8 prev 0x1eaf9c37090 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1eaf9c31dd0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c31e50 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c31ec8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1eaf9c373e8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1eaf9c37648 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c37430 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c374b0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c37528 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c37940 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c37728 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c377a8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c37820 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c37c88 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1eaf9c37d28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1eaf9c37d90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1eaf9c37e08 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1eaf9c37e70 prev 0x1eaf9c37c88 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1eaf9c37a28 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c37aa0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1eaf9c37f68 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1eaf9c391e8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1eaf9c39288 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1eaf9c392f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1eaf9c39368 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1eaf9c393d0 prev 0x1eaf9c391e8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1eaf9c37fb8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c390b0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1eaf9c394c8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1eaf9c39690 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c39518 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c39590 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c398e8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c39770 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c397e8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c39e48 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1eaf9c39ee8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1eaf9c39f50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1eaf9c39fb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1eaf9c3a020 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1eaf9c3a0c0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1eaf9c3a128 prev 0x1eaf9c39e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1eaf9c39a88 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c39b00 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c39b80 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c39bf8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1eaf9c3a318 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1eaf9c3a1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c3a788 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c3a368 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c3a3e0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c3a458 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c3a4d8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c3a550 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c3abc8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c3a880 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c3a8f8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c3a970 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c3a9f0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c3aa68 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c3af98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1eaf9c3ad80 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1eaf9c3adf8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c3ae78 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1eaf9c3b050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c334c0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c33210 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1eaf9c33288 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c33308 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c33380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1eaf9c33580 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c33978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c336c8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c33740 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c337c0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c33838 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c33d38 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c33a68 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1eaf9c33ae8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c33b60 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c3c180 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1eaf9c3c220 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1eaf9c3c288 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1eaf9c3c300 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1eaf9c3c368 prev 0x1eaf9c3c180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1eaf9c33ee0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1eaf9c33f60 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1eaf9c3c548 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1eaf9c3c418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c3c970 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1eaf9c3ca10 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1eaf9c3ca78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1eaf9c3cae0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1eaf9c3cb60 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1eaf9c3cbc8 prev 0x1eaf9c3c970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1eaf9c3c658 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1eaf9c3c6d8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c3c750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1eaf9c3cdb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1eaf9c3cc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c40120 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1eaf9c401c0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1eaf9c40228 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1eaf9c40290 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1eaf9c40310 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1eaf9c40378 prev 0x1eaf9c40120 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1eaf9c3ce00 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1eaf9c3ce80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c3cef8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1eaf9c40478 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1eaf9c40640 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c404c8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c40540 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c40938 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1eaf9c40720 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c40798 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c40818 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1eaf9c40cd0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c40a20 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c40a98 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c40b18 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c40b90 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c40f38 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1eaf9c40db8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1eaf9c40e38 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1eaf9c42140 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1eaf9c41018 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1eaf9c42430 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1eaf9c42218 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1eaf9c42290 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c42310 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1eaf9c42728 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c42510 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c42590 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c42608 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c42988 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c42810 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c42888 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c42d18 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c42a68 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1eaf9c42ae0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c42b60 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c42bd8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c42ee8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1eaf9c42e08 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1eaf9c41130 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1eaf9c42fc0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c43038 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c412f0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1eaf9c41210 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1eaf9c41480 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1eaf9c416c8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c41550 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c415c8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c41920 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c417a8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c41820 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c41b78 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c41a00 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c41a78 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c41f28 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c41c58 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c41cd0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c41d48 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c3f230 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c42010 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c42088 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c3f110 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c3f528 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c3f318 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c3f390 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c3f408 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c3f820 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c3f608 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c3f688 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c3f700 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c3fb18 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c3f900 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c3f980 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c3f9f8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c3fe10 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c3fbf8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c3fc78 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c3fcf0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c3d250 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c3fef0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c3ff70 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c3ffe8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c40060 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c3d5e8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c3d338 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c3d3b8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c3d430 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c3d4a8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c3d980 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c3d6d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c3d750 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c3d7c8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c3d840 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c3de18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c3db30 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c3dbb0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c3dc28 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9c3ded0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c3b3e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c3e018 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c3b0d0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c3b150 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c3b1c8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c3b780 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c3b4d0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c3b548 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c3b5c8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c3b640 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c3bcd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c3b970 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c3b9f0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c3ba68 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1eaf9c3bae0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1eaf9c3bd90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c463b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c3bed8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c3bf50 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c3bfd0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c3c048 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c46180 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c467f8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c464b0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c46528 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c465a8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c46620 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c46698 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c46a68 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c468f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c46968 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c46cc0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c46b48 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c46bc0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c46fb0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c46da0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c46e18 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c46e90 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c472c0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c47098 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c47110 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c471a0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c47718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c47468 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c474e0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c47560 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c475d8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9c477d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c47bd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c47920 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c47998 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c47a18 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c47a90 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c45170 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c47cc0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c47d38 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c47db0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c47e30 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1eaf9c47ea8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c456b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c45368 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c453e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c45460 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c454d8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1eaf9c45550 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1eaf9c45778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c45bf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c458c8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c45940 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c459c0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1eaf9c45a38 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c45ab0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c48200 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c45cf0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1eaf9c45d68 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c45de0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c45e60 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1eaf9c45ed8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c45f50 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c485c0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1eaf9c482f8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c48370 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c483f0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1eaf9c48830 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1eaf9c486c0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1eaf9c48a48 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1eaf9c48d28 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1eaf9c48b10 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1eaf9c48b88 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1eaf9c48f70 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1eaf9c48e00 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1eaf9c491b0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1eaf9c49040 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1eaf9c49338 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1eaf9c49570 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1eaf9c49400 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1eaf9c49478 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1eaf9c49720 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1eaf9c49648 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1eaf9c499c8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1eaf9c497f0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1eaf9c49868 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1eaf9c49d70 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1eaf9c49aa0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c49b20 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1eaf9c49b98 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1eaf9c4a070 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1eaf9c49e50 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c49ec8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1eaf9c44318 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1eaf9c4a148 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1eaf9c44170 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1eaf9c44620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1eaf9c444b0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1eaf9c446c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c44988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1eaf9c44808 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1eaf9c44c90 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c44a58 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1eaf9c44ad0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c44ee0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c44d68 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1eaf9c44de0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c4a1c0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1eaf9c44fb8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c4a370 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1eaf9c4a290 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c4a520 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1eaf9c4a440 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c4a8b8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4a5f0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c4a668 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4a6e0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4aba8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4a998 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c4aa10 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4aa88 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4ae98 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4ac88 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c4ad00 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4ad78 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4b1d0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4af78 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c4aff0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4b068 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4b4d0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4b2b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4b328 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4b720 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4b5a8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4b620 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4b970 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4b7f8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4b870 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4bbc0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4ba48 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4bac0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4bf78 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c4bc98 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c4bd10 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c4bd88 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c4c3f0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4c058 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c4c0d0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c4c148 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4c1e0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4c7a8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4c4d8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c4c550 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4c5c8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4ca98 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4c888 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c4c900 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4c978 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4cd88 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c4cb78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c4cbf0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c4cc68 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c4d110 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4ce68 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c4cee0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c4cf58 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4cfd0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4d5a0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c4d218 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c4d290 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c4d308 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c4d380 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c4daa8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4d688 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c4d700 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c4d778 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c4d7f0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4d868 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4de68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c4dc58 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c4dcd0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c4dd48 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1eaf9c4df20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c4e430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4e120 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c4e200 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c4e278 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c4e2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1eaf9c4e4f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c4e7a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c4e630 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1eaf9c4e6a8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c4e960 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1eaf9c4e880 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c4ec40 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4ea30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c4eaa8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4eb20 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c4ee98 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c4ed20 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c4ed98 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c56090 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c4ef70 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c4efe8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c4f060 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c56418 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c56170 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c561e8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c56260 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c562d8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c565e0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1eaf9c56500 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c56828 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c566b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c56728 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c56b30 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c56900 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c56978 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c56d80 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c56c08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c56c80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c56fd0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c56e58 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c56ed0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c50328 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c50058 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c500d0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c50148 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c50618 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c50408 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c50480 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c504f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c50908 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c506f8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c50770 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c507e8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c50cc8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c509e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c50a60 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c50ad8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c53060 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c50da8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c50e20 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c50e98 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c53350 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c53140 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c531b8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c53230 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c537a0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c53430 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c534a8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c53520 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c53598 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c53b30 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c53888 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c53900 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c53978 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c539f0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c53ec0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c53c18 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c53c90 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c53d08 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c53d80 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c55390 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c53fa8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c55080 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c550f8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c55170 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c55720 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c55478 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c554f0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c55568 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c555e0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c55ab0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c55808 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c55880 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c558f8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c55970 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c55fb8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c55b98 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c55c10 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c55c88 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c55d00 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c55d78 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c59428 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c590e8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c59160 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c591d8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c59250 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c592c8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c59858 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c59518 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c59590 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c59608 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c59680 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c596f8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c59ac0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c59948 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c599c0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c59d10 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c59b98 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c59c10 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c59ff8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c59de8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c59e60 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c59ed8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c523e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c52140 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c521b8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c52230 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c522a8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9c524a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c52a18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c525f0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c52668 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c526e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c52758 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c527d0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c52f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c52c10 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c52c88 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c52d00 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c52d78 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1eaf9c52df0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1eaf9c570a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c576b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c571e8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c57260 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c572d8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c57350 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c573c8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c57440 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c57bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c57978 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c579f0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1eaf9c57c60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1eaf9c57d78 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1eaf9c58318 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c58030 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c580c0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c58138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1eaf9c583d0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1eaf9c584e8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1eaf9c58a88 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c587a8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c58820 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c58898 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1eaf9c58b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1eaf9c58c60 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1eaf9c5b2f0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c58f20 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c58f98 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c59010 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1eaf9c5b0e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1eaf9c5b3b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1eaf9c5b4d0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1eaf9c5b7d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1eaf9c5b5f8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c5b670 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c5b6e8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1eaf9c54310 <line:37:1, line:44:1>
|   |-DeclStmt 0x1eaf9c5b920 <line:38:5, col:21>
|   | `-VarDecl 0x1eaf9c5b8b8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1eaf9c5b9b8 <line:39:5, col:13>
|   | `-VarDecl 0x1eaf9c5b950 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1eaf9c5bd10 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1eaf9c5bcf8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1eaf9c5bc10 <col:34> '<builtin fn type>' Function 0x1eaf9c5baa8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1eaf9c5bc48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1eaf9c5b8b8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1eaf9c5bc80 <col:29> 'const wchar_t *' lvalue ParmVar 0x1eaf9c5b6e8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1eaf9c5bfd0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1eaf9c5bd40 <col:5> 'int' lvalue Var 0x1eaf9c5b950 '_Ret' 'int'
|   | `-CallExpr 0x1eaf9c5bf10 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1eaf9c5bef8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1eaf9c5bd78 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1eaf9c55fb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1eaf9c5bf58 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1eaf9c5bd98 <col:27> 'wchar_t *' lvalue ParmVar 0x1eaf9c5b5f8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1eaf9c5bf70 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1eaf9c5bdb8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1eaf9c5b670 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1eaf9c5bf88 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1eaf9c5bdd8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1eaf9c5b6e8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1eaf9c5bfa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1eaf9c5be60 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1eaf9c5be38 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1eaf9c5bdf8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1eaf9c5bfb8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1eaf9c5be80 <col:59> 'va_list':'char *' lvalue Var 0x1eaf9c5b8b8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1eaf9c542a0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1eaf9c54288 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1eaf9c541d8 <col:34> '<builtin fn type>' Function 0x1eaf9c54070 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1eaf9c54210 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1eaf9c5b8b8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1eaf9c54300 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1eaf9c542e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1eaf9c542c8 <col:12> 'int' lvalue Var 0x1eaf9c5b950 '_Ret' 'int'
|-FunctionDecl 0x1eaf9c5baa8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1eaf9c5bb48 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1eaf9c5bbb8 <col:34> Implicit
|-FunctionDecl 0x1eaf9c54070 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1eaf9c54110 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1eaf9c54180 <col:34> Implicit
|-FunctionDecl 0x1eaf9c54608 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1eaf9c54360 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c543d8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c54450 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c544c8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1eaf9c548f0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1eaf9c548e0 <line:51:5, col:62>
|     `-CallExpr 0x1eaf9c54820 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1eaf9c54808 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1eaf9c546e0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1eaf9c55fb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1eaf9c54868 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1eaf9c54700 <col:27> 'wchar_t *' lvalue ParmVar 0x1eaf9c54360 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1eaf9c54880 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1eaf9c54720 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1eaf9c543d8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1eaf9c54898 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1eaf9c54740 <col:44> 'const wchar_t *' lvalue ParmVar 0x1eaf9c54450 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1eaf9c548b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1eaf9c547c8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1eaf9c547a0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1eaf9c54760 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1eaf9c548c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1eaf9c547e8 <col:59> 'va_list':'char *' lvalue ParmVar 0x1eaf9c544c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1eaf9c54b90 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1eaf9c54918 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c54990 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c54a08 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c54a80 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1eaf9c611e8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1eaf9c54ce0 <line:62:5, col:21>
|   | `-VarDecl 0x1eaf9c54c78 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1eaf9c54d78 <line:63:5, col:13>
|   | `-VarDecl 0x1eaf9c54d10 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1eaf9c54e20 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1eaf9c54e08 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1eaf9c54d90 <col:34> '<builtin fn type>' Function 0x1eaf9c5baa8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1eaf9c54db0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1eaf9c54c78 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1eaf9c54de8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1eaf9c54a80 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1eaf9c55020 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1eaf9c54e50 <col:5> 'int' lvalue Var 0x1eaf9c54d10 '_Ret' 'int'
|   | `-CallExpr 0x1eaf9c54f60 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1eaf9c54f48 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1eaf9c54e88 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1eaf9c55fb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1eaf9c54fa8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1eaf9c54ea8 <col:27> 'wchar_t *' lvalue ParmVar 0x1eaf9c54918 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1eaf9c54fc0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1eaf9c54ec8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1eaf9c54990 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1eaf9c54fd8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1eaf9c54ee8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1eaf9c54a08 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1eaf9c54ff0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1eaf9c54f08 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1eaf9c54a80 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1eaf9c55008 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1eaf9c54f28 <col:64> 'va_list':'char *' lvalue Var 0x1eaf9c54c78 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1eaf9c61178 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1eaf9c61160 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1eaf9c55040 <col:34> '<builtin fn type>' Function 0x1eaf9c54070 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1eaf9c61140 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1eaf9c54c78 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1eaf9c611d8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1eaf9c611c0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1eaf9c611a0 <col:12> 'int' lvalue Var 0x1eaf9c54d10 '_Ret' 'int'
|-FunctionDecl 0x1eaf9c61578 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1eaf9c61238 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1eaf9c612b0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c61328 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c613a0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1eaf9c61418 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1eaf9c61800 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1eaf9c617f0 <line:75:5, col:67>
|     `-CallExpr 0x1eaf9c61730 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1eaf9c61718 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1eaf9c61658 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1eaf9c55fb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1eaf9c61778 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1eaf9c61678 <col:27> 'wchar_t *' lvalue ParmVar 0x1eaf9c61238 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1eaf9c61790 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1eaf9c61698 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1eaf9c612b0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1eaf9c617a8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1eaf9c616b8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1eaf9c61328 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1eaf9c617c0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1eaf9c616d8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1eaf9c613a0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1eaf9c617d8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1eaf9c616f8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1eaf9c61418 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1eaf9c61a48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1eaf9c61828 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c618a0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1eaf9c61c98 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1eaf9c61b20 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c61b98 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c61f80 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1eaf9c61d70 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c61de8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1eaf9c61e60 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1eaf9c622c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c62150 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c621c8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1eaf9c62378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c62788 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c62578 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c625f0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c62668 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9c62840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c62af8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c62980 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1eaf9c629f8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c62de0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c62bd0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c62c48 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c62cc0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c5d170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c62f80 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c62ff8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1eaf9c5d220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c5d6f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c5d420 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c5d498 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c5d510 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9c5d7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c5da68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c5d8f0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c5d968 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c5dd50 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c5db40 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c5dbb8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c5dc30 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c60218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c5def0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c5df68 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c5dfe0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1eaf9c602d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c60850 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c604d0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c60548 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c605c0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c60638 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9c60910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c60c60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c60a50 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c60ac8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c60b40 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c60fe8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c60d40 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c60db8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c60e30 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c60ea8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c5f2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1eaf9c5f1f0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1eaf9c5f378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c5f6f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c5f578 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c5f5f0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1eaf9c5f7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c5f9c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1eaf9c5f8e0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1eaf9c5fc08 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1eaf9c5fa90 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c5fb08 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1eaf9c5ff08 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1eaf9c5fce8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1eaf9c5fd60 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1eaf9c63308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1eaf9c600a0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c63160 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1eaf9c633b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c637c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1eaf9c63500 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1eaf9c63578 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c635f0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1eaf9c63c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1eaf9c63960 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c639d8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c63a50 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1eaf9c63cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c641b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1eaf9c63e20 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1eaf9c63e98 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1eaf9c63f10 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c63f88 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1eaf9c64410 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1eaf9c642a0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1eaf9c64650 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1eaf9c644e0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1eaf9c64558 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1eaf9c64808 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1eaf9c64728 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1eaf9c64af8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1eaf9c648d8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1eaf9c64950 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1eaf9c64d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1eaf9c64c90 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1eaf9c64e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1eaf9c65028 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1eaf9c64f50 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1eaf9c65278 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1eaf9c650f8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1eaf9c65180 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1eaf9c654c0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1eaf9c65350 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1eaf9c653c8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1eaf9c65670 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1eaf9c65598 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1eaf9c65818 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1eaf9c65740 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1eaf9c659c8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9c658e8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1eaf9c65b78 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1eaf9c65a98 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1eaf9c65ef0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1eaf9c65c50 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1eaf9c65cc8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c65d40 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c65db8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1eaf9c6b3b0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1eaf9c65fe0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1eaf9c66058 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c660d0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c6b1e0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c6b258 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1eaf9c6b6c0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1eaf9c6b4a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c6b520 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1eaf9c6b5a0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1eaf9c6b880 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1eaf9c6b7a0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1eaf9c6bb70 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1eaf9c6b950 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1eaf9c6b9d0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1eaf9c6ba50 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1eaf9c6bd30 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1eaf9c6bc50 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1eaf9c6c0a8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1eaf9c6be08 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1eaf9c6be80 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1eaf9c6bef8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1eaf9c6bf70 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1eaf9c6c368 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1eaf9c6c1f0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1eaf9c6c268 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1eaf9c6c6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1eaf9c6c520 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1eaf9c6c5a0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1eaf9c6c750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1eaf9c6ca08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1eaf9c6caa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1eaf9c6cde8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1eaf9c6cc70 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1eaf9c6ccf0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1eaf9c6ce98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1eaf9c691c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1eaf9c69260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1eaf9c69500 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1eaf9c69420 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1eaf9c695a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1eaf9c69828 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1eaf9c698c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1eaf9c69b70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1eaf9c69a90 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1eaf9c69c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1eaf9c69ef8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1eaf9c69e18 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1eaf9c69fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1eaf9c6a348 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1eaf9c6a1d0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1eaf9c6a248 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1eaf9c6a3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1eaf9c6a6b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1eaf9c6a758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1eaf9c6abc0 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:16:1, line:39:1> line:16:16 used OPENSSL_asc2uni 'unsigned char *(const char *, int, unsigned char **, int *)'
| |-ParmVarDecl 0x1eaf9c6a880 <col:32, col:44> col:44 used asc 'const char *'
| |-ParmVarDecl 0x1eaf9c6a900 <col:49, col:53> col:53 used asclen 'int'
| |-ParmVarDecl 0x1eaf9c6a9e8 <line:17:32, col:48> col:48 used uni 'unsigned char **'
| |-ParmVarDecl 0x1eaf9c6aa68 <col:53, col:58> col:58 used unilen 'int *'
| `-CompoundStmt 0x1eaf9c6e0c0 <line:18:1, line:39:1>
|   |-DeclStmt 0x1eaf9c6adb0 <line:19:5, col:16>
|   | |-VarDecl 0x1eaf9c6acb0 <col:5, col:9> col:9 used ulen 'int'
|   | `-VarDecl 0x1eaf9c6ad30 <col:5, col:15> col:15 used i 'int'
|   |-DeclStmt 0x1eaf9c6ae48 <line:20:5, col:26>
|   | `-VarDecl 0x1eaf9c6ade0 <col:5, col:20> col:20 used unitmp 'unsigned char *'
|   |-IfStmt 0x1eaf9c6b188 <line:22:5, line:23:28>
|   | |-BinaryOperator 0x1eaf9c6aed8 <line:22:9, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x1eaf9c6aec0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c6ae60 <col:9> 'int' lvalue ParmVar 0x1eaf9c6a900 'asclen' 'int'
|   | | `-UnaryOperator 0x1eaf9c6aea8 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1eaf9c6ae80 <col:20> 'int' 1
|   | `-BinaryOperator 0x1eaf9c6b168 <line:23:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1eaf9c6aef8 <col:9> 'int' lvalue ParmVar 0x1eaf9c6a900 'asclen' 'int'
|   |   `-ImplicitCastExpr 0x1eaf9c6b150 <col:18, col:28> 'int' <IntegralCast>
|   |     `-CallExpr 0x1eaf9c6b110 <col:18, col:28> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x1eaf9c6b0f8 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1eaf9c6b060 <col:18> 'unsigned long long (const char *)' Function 0x1eaf9c6af50 'strlen' 'unsigned long long (const char *)'
|   |       `-ImplicitCastExpr 0x1eaf9c6b138 <col:25> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1eaf9c6b098 <col:25> 'const char *' lvalue ParmVar 0x1eaf9c6a880 'asc' 'const char *'
|   |-BinaryOperator 0x1eaf9c6d2e0 <line:24:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x1eaf9c6b1a0 <col:5> 'int' lvalue Var 0x1eaf9c6acb0 'ulen' 'int'
|   | `-BinaryOperator 0x1eaf9c6d2c0 <col:12, col:25> 'int' '+'
|   |   |-BinaryOperator 0x1eaf9c6d278 <col:12, col:21> 'int' '*'
|   |   | |-ImplicitCastExpr 0x1eaf9c6d260 <col:12> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1eaf9c6d218 <col:12> 'int' lvalue ParmVar 0x1eaf9c6a900 'asclen' 'int'
|   |   | `-IntegerLiteral 0x1eaf9c6d238 <col:21> 'int' 2
|   |   `-IntegerLiteral 0x1eaf9c6d298 <col:25> 'int' 2
|   |-IfStmt 0x1eaf9c6d6e8 <line:25:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x1eaf9c6d618 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:25:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x1eaf9c6d558 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:25:9, col:39> 'unsigned char *'
|   | | | `-BinaryOperator 0x1eaf9c6d538 <col:10, col:38> 'unsigned char *' '='
|   | | |   |-DeclRefExpr 0x1eaf9c6d300 <col:10> 'unsigned char *' lvalue Var 0x1eaf9c6ade0 'unitmp' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x1eaf9c6d520 <col:19, col:38> 'unsigned char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x1eaf9c6d4e0 <col:19, col:38> 'int'
|   | | |       |-ImplicitCastExpr 0x1eaf9c6d4c8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x1eaf9c6d458 <col:19> 'int ()' Function 0x1eaf9c6d390 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x1eaf9c6d508 <col:34> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1eaf9c6d478 <col:34> 'int' lvalue Var 0x1eaf9c6acb0 'ulen' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c6d600 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1eaf9c6d5e0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1eaf9c6d5b8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1eaf9c6d578 <col:26> 'int' 0
|   | `-ReturnStmt 0x1eaf9c6d6d8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:26:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1eaf9c6d6c0 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1eaf9c6d6a0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1eaf9c6d678 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1eaf9c6d638 <col:26> 'int' 0
|   |-ForStmt 0x1eaf9c6dbe0 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:27:5, line:30:5>
|   | |-BinaryOperator 0x1eaf9c6d760 <line:27:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1eaf9c6d700 <col:10> 'int' lvalue Var 0x1eaf9c6ad30 'i' 'int'
|   | | `-IntegerLiteral 0x1eaf9c6d738 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1eaf9c6d838 <col:17, col:28> 'int' '<'
|   | | |-ImplicitCastExpr 0x1eaf9c6d820 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c6d780 <col:17> 'int' lvalue Var 0x1eaf9c6ad30 'i' 'int'
|   | | `-BinaryOperator 0x1eaf9c6d800 <col:21, col:28> 'int' '-'
|   | |   |-ImplicitCastExpr 0x1eaf9c6d7e8 <col:21> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1eaf9c6d7a0 <col:21> 'int' lvalue Var 0x1eaf9c6acb0 'ulen' 'int'
|   | |   `-IntegerLiteral 0x1eaf9c6d7c0 <col:28> 'int' 2
|   | |-CompoundAssignOperator 0x1eaf9c6d8a0 <col:31, col:36> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x1eaf9c6d858 <col:31> 'int' lvalue Var 0x1eaf9c6ad30 'i' 'int'
|   | | `-IntegerLiteral 0x1eaf9c6d878 <col:36> 'int' 2
|   | `-CompoundStmt 0x1eaf9c6dbc0 <col:39, line:30:5>
|   |   |-BinaryOperator 0x1eaf9c6d9a0 <line:28:9, col:21> 'unsigned char' '='
|   |   | |-ArraySubscriptExpr 0x1eaf9c6d940 <col:9, col:17> 'unsigned char' lvalue
|   |   | | |-ImplicitCastExpr 0x1eaf9c6d910 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1eaf9c6d8d0 <col:9> 'unsigned char *' lvalue Var 0x1eaf9c6ade0 'unitmp' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x1eaf9c6d928 <col:16> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1eaf9c6d8f0 <col:16> 'int' lvalue Var 0x1eaf9c6ad30 'i' 'int'
|   |   | `-ImplicitCastExpr 0x1eaf9c6d988 <col:21> 'unsigned char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1eaf9c6d960 <col:21> 'int' 0
|   |   `-BinaryOperator 0x1eaf9c6dba0 <line:29:9, col:35> 'unsigned char' '='
|   |     |-ArraySubscriptExpr 0x1eaf9c6da78 <col:9, col:21> 'unsigned char' lvalue
|   |     | |-ImplicitCastExpr 0x1eaf9c6da60 <col:9> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1eaf9c6d9c0 <col:9> 'unsigned char *' lvalue Var 0x1eaf9c6ade0 'unitmp' 'unsigned char *'
|   |     | `-BinaryOperator 0x1eaf9c6da40 <col:16, col:20> 'int' '+'
|   |     |   |-ImplicitCastExpr 0x1eaf9c6da28 <col:16> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1eaf9c6d9e0 <col:16> 'int' lvalue Var 0x1eaf9c6ad30 'i' 'int'
|   |     |   `-IntegerLiteral 0x1eaf9c6da00 <col:20> 'int' 1
|   |     `-ImplicitCastExpr 0x1eaf9c6db88 <col:25, col:35> 'unsigned char' <IntegralCast>
|   |       `-ImplicitCastExpr 0x1eaf9c6db70 <col:25, col:35> 'char' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1eaf9c6db50 <col:25, col:35> 'const char' lvalue
|   |           |-ImplicitCastExpr 0x1eaf9c6db38 <col:25> 'const char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1eaf9c6da98 <col:25> 'const char *' lvalue ParmVar 0x1eaf9c6a880 'asc' 'const char *'
|   |           `-BinaryOperator 0x1eaf9c6db18 <col:29, col:34> 'int' '>>'
|   |             |-ImplicitCastExpr 0x1eaf9c6db00 <col:29> 'int' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1eaf9c6dab8 <col:29> 'int' lvalue Var 0x1eaf9c6ad30 'i' 'int'
|   |             `-IntegerLiteral 0x1eaf9c6dad8 <col:34> 'int' 1
|   |-BinaryOperator 0x1eaf9c6dd30 <line:32:5, col:24> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1eaf9c6dcd0 <col:5, col:20> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1eaf9c6dcb8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c6dc18 <col:5> 'unsigned char *' lvalue Var 0x1eaf9c6ade0 'unitmp' 'unsigned char *'
|   | | `-BinaryOperator 0x1eaf9c6dc98 <col:12, col:19> 'int' '-'
|   | |   |-ImplicitCastExpr 0x1eaf9c6dc80 <col:12> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1eaf9c6dc38 <col:12> 'int' lvalue Var 0x1eaf9c6acb0 'ulen' 'int'
|   | |   `-IntegerLiteral 0x1eaf9c6dc58 <col:19> 'int' 2
|   | `-ImplicitCastExpr 0x1eaf9c6dd18 <col:24> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1eaf9c6dcf0 <col:24> 'int' 0
|   |-BinaryOperator 0x1eaf9c6de68 <line:33:5, col:24> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1eaf9c6de08 <col:5, col:20> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1eaf9c6ddf0 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c6dd50 <col:5> 'unsigned char *' lvalue Var 0x1eaf9c6ade0 'unitmp' 'unsigned char *'
|   | | `-BinaryOperator 0x1eaf9c6ddd0 <col:12, col:19> 'int' '-'
|   | |   |-ImplicitCastExpr 0x1eaf9c6ddb8 <col:12> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1eaf9c6dd70 <col:12> 'int' lvalue Var 0x1eaf9c6acb0 'ulen' 'int'
|   | |   `-IntegerLiteral 0x1eaf9c6dd90 <col:19> 'int' 1
|   | `-ImplicitCastExpr 0x1eaf9c6de50 <col:24> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1eaf9c6de28 <col:24> 'int' 0
|   |-IfStmt 0x1eaf9c6df68 <line:34:5, line:35:19>
|   | |-ImplicitCastExpr 0x1eaf9c6dea8 <line:34:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1eaf9c6de88 <col:9> 'int *' lvalue ParmVar 0x1eaf9c6aa68 'unilen' 'int *'
|   | `-BinaryOperator 0x1eaf9c6df48 <line:35:9, col:19> 'int' '='
|   |   |-UnaryOperator 0x1eaf9c6def8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1eaf9c6dee0 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1eaf9c6dec0 <col:10> 'int *' lvalue ParmVar 0x1eaf9c6aa68 'unilen' 'int *'
|   |   `-ImplicitCastExpr 0x1eaf9c6df30 <col:19> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1eaf9c6df10 <col:19> 'int' lvalue Var 0x1eaf9c6acb0 'ulen' 'int'
|   |-IfStmt 0x1eaf9c6e060 <line:36:5, line:37:16>
|   | |-ImplicitCastExpr 0x1eaf9c6dfa0 <line:36:9> 'unsigned char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x1eaf9c6df80 <col:9> 'unsigned char **' lvalue ParmVar 0x1eaf9c6a9e8 'uni' 'unsigned char **'
|   | `-BinaryOperator 0x1eaf9c6e040 <line:37:9, col:16> 'unsigned char *' '='
|   |   |-UnaryOperator 0x1eaf9c6dff0 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1eaf9c6dfd8 <col:10> 'unsigned char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1eaf9c6dfb8 <col:10> 'unsigned char **' lvalue ParmVar 0x1eaf9c6a9e8 'uni' 'unsigned char **'
|   |   `-ImplicitCastExpr 0x1eaf9c6e028 <col:16> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1eaf9c6e008 <col:16> 'unsigned char *' lvalue Var 0x1eaf9c6ade0 'unitmp' 'unsigned char *'
|   `-ReturnStmt 0x1eaf9c6e0b0 <line:38:5, col:12>
|     `-ImplicitCastExpr 0x1eaf9c6e098 <col:12> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x1eaf9c6e078 <col:12> 'unsigned char *' lvalue Var 0x1eaf9c6ade0 'unitmp' 'unsigned char *'
|-FunctionDecl 0x1eaf9c6af50 <line:23:18> col:18 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1eaf9c6aff0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1eaf9c662a0 <line:41:1, line:59:1> line:41:7 used OPENSSL_uni2asc 'char *(const unsigned char *, int)'
| |-ParmVarDecl 0x1eaf9c6e140 <col:23, col:44> col:44 used uni 'const unsigned char *'
| |-ParmVarDecl 0x1eaf9c66190 <col:49, col:53> col:53 used unilen 'int'
| `-CompoundStmt 0x1eaf9c670f8 <line:42:1, line:59:1>
|   |-DeclStmt 0x1eaf9c66480 <line:43:5, col:18>
|   | |-VarDecl 0x1eaf9c66380 <col:5, col:9> col:9 used asclen 'int'
|   | `-VarDecl 0x1eaf9c66400 <col:5, col:17> col:17 used i 'int'
|   |-DeclStmt 0x1eaf9c66518 <line:44:5, col:17>
|   | `-VarDecl 0x1eaf9c664b0 <col:5, col:11> col:11 used asctmp 'char *'
|   |-IfStmt 0x1eaf9c66660 <line:46:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x1eaf9c66590 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:46:9, col:18> 'int' '&'
|   | | |-ImplicitCastExpr 0x1eaf9c66578 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c66530 <col:9> 'int' lvalue ParmVar 0x1eaf9c66190 'unilen' 'int'
|   | | `-IntegerLiteral 0x1eaf9c66550 <col:18> 'int' 1
|   | `-ReturnStmt 0x1eaf9c66650 <line:47:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1eaf9c66638 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1eaf9c66618 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1eaf9c665f0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1eaf9c665b0 <col:26> 'int' 0
|   |-BinaryOperator 0x1eaf9c66730 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:48:5, col:23> 'int' '='
|   | |-DeclRefExpr 0x1eaf9c66678 <col:5> 'int' lvalue Var 0x1eaf9c66380 'asclen' 'int'
|   | `-BinaryOperator 0x1eaf9c66710 <col:14, col:23> 'int' '/'
|   |   |-ImplicitCastExpr 0x1eaf9c666f8 <col:14> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1eaf9c666b0 <col:14> 'int' lvalue ParmVar 0x1eaf9c66190 'unilen' 'int'
|   |   `-IntegerLiteral 0x1eaf9c666d0 <col:23> 'int' 2
|   |-IfStmt 0x1eaf9c66900 <line:50:5, line:51:15>
|   | |-BinaryOperator 0x1eaf9c668a8 <line:50:9, col:34> 'int' '||'
|   | | |-UnaryOperator 0x1eaf9c66788 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1eaf9c66770 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1eaf9c66750 <col:10> 'int' lvalue ParmVar 0x1eaf9c66190 'unilen' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c66890 <col:20, col:34> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1eaf9c66878 <col:20, col:34> 'unsigned char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x1eaf9c66858 <col:20, col:34> 'const unsigned char' lvalue
|   | |       |-ImplicitCastExpr 0x1eaf9c66840 <col:20> 'const unsigned char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x1eaf9c667a0 <col:20> 'const unsigned char *' lvalue ParmVar 0x1eaf9c6e140 'uni' 'const unsigned char *'
|   | |       `-BinaryOperator 0x1eaf9c66820 <col:24, col:33> 'int' '-'
|   | |         |-ImplicitCastExpr 0x1eaf9c66808 <col:24> 'int' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x1eaf9c667c0 <col:24> 'int' lvalue ParmVar 0x1eaf9c66190 'unilen' 'int'
|   | |         `-IntegerLiteral 0x1eaf9c667e0 <col:33> 'int' 1
|   | `-UnaryOperator 0x1eaf9c668e8 <line:51:9, col:15> 'int' postfix '++'
|   |   `-DeclRefExpr 0x1eaf9c668c8 <col:9> 'int' lvalue Var 0x1eaf9c66380 'asclen' 'int'
|   |-UnaryOperator 0x1eaf9c66938 <line:52:5, col:8> 'const unsigned char *' postfix '++'
|   | `-DeclRefExpr 0x1eaf9c66918 <col:5> 'const unsigned char *' lvalue ParmVar 0x1eaf9c6e140 'uni' 'const unsigned char *'
|   |-IfStmt 0x1eaf9c66be8 <line:53:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x1eaf9c66b18 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:53:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x1eaf9c66a58 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:53:9, col:41> 'char *'
|   | | | `-BinaryOperator 0x1eaf9c66a38 <col:10, col:40> 'char *' '='
|   | | |   |-DeclRefExpr 0x1eaf9c66950 <col:10> 'char *' lvalue Var 0x1eaf9c664b0 'asctmp' 'char *'
|   | | |   `-ImplicitCastExpr 0x1eaf9c66a20 <col:19, col:40> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x1eaf9c669e0 <col:19, col:40> 'int'
|   | | |       |-ImplicitCastExpr 0x1eaf9c669c8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x1eaf9c66988 <col:19> 'int ()' Function 0x1eaf9c6d390 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x1eaf9c66a08 <col:34> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1eaf9c669a8 <col:34> 'int' lvalue Var 0x1eaf9c66380 'asclen' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c66b00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1eaf9c66ae0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1eaf9c66ab8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1eaf9c66a78 <col:26> 'int' 0
|   | `-ReturnStmt 0x1eaf9c66bd8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:54:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1eaf9c66bc0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1eaf9c66ba0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1eaf9c66b78 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1eaf9c66b38 <col:26> 'int' 0
|   |-ForStmt 0x1eaf9c66f40 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:55:5, line:56:31>
|   | |-BinaryOperator 0x1eaf9c66c60 <line:55:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1eaf9c66c00 <col:10> 'int' lvalue Var 0x1eaf9c66400 'i' 'int'
|   | | `-IntegerLiteral 0x1eaf9c66c38 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1eaf9c66cf0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1eaf9c66cc0 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c66c80 <col:17> 'int' lvalue Var 0x1eaf9c66400 'i' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c66cd8 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1eaf9c66ca0 <col:21> 'int' lvalue ParmVar 0x1eaf9c66190 'unilen' 'int'
|   | |-CompoundAssignOperator 0x1eaf9c66d58 <col:29, col:34> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x1eaf9c66d10 <col:29> 'int' lvalue Var 0x1eaf9c66400 'i' 'int'
|   | | `-IntegerLiteral 0x1eaf9c66d30 <col:34> 'int' 2
|   | `-BinaryOperator 0x1eaf9c66f20 <line:56:9, col:31> 'char' '='
|   |   |-ArraySubscriptExpr 0x1eaf9c66e40 <col:9, col:22> 'char' lvalue
|   |   | |-ImplicitCastExpr 0x1eaf9c66e28 <col:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1eaf9c66d88 <col:9> 'char *' lvalue Var 0x1eaf9c664b0 'asctmp' 'char *'
|   |   | `-BinaryOperator 0x1eaf9c66e08 <col:16, col:21> 'int' '>>'
|   |   |   |-ImplicitCastExpr 0x1eaf9c66df0 <col:16> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1eaf9c66da8 <col:16> 'int' lvalue Var 0x1eaf9c66400 'i' 'int'
|   |   |   `-IntegerLiteral 0x1eaf9c66dc8 <col:21> 'int' 1
|   |   `-ImplicitCastExpr 0x1eaf9c66f08 <col:26, col:31> 'char' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1eaf9c66ef0 <col:26, col:31> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x1eaf9c66ed0 <col:26, col:31> 'const unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x1eaf9c66ea0 <col:26> 'const unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1eaf9c66e60 <col:26> 'const unsigned char *' lvalue ParmVar 0x1eaf9c6e140 'uni' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x1eaf9c66eb8 <col:30> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1eaf9c66e80 <col:30> 'int' lvalue Var 0x1eaf9c66400 'i' 'int'
|   |-BinaryOperator 0x1eaf9c67090 <line:57:5, col:26> 'char' '='
|   | |-ArraySubscriptExpr 0x1eaf9c67030 <col:5, col:22> 'char' lvalue
|   | | |-ImplicitCastExpr 0x1eaf9c67018 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c66f78 <col:5> 'char *' lvalue Var 0x1eaf9c664b0 'asctmp' 'char *'
|   | | `-BinaryOperator 0x1eaf9c66ff8 <col:12, col:21> 'int' '-'
|   | |   |-ImplicitCastExpr 0x1eaf9c66fe0 <col:12> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1eaf9c66f98 <col:12> 'int' lvalue Var 0x1eaf9c66380 'asclen' 'int'
|   | |   `-IntegerLiteral 0x1eaf9c66fb8 <col:21> 'int' 1
|   | `-ImplicitCastExpr 0x1eaf9c67078 <col:26> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x1eaf9c67050 <col:26> 'int' 0
|   `-ReturnStmt 0x1eaf9c670e8 <line:58:5, col:12>
|     `-ImplicitCastExpr 0x1eaf9c670d0 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1eaf9c670b0 <col:12> 'char *' lvalue Var 0x1eaf9c664b0 'asctmp' 'char *'
|-FunctionDecl 0x1eaf9c6e4a8 <line:70:1, line:142:1> line:70:16 OPENSSL_utf82uni 'unsigned char *(const char *, int, unsigned char **, int *)'
| |-ParmVarDecl 0x1eaf9c6e210 <col:33, col:45> col:45 used asc 'const char *'
| |-ParmVarDecl 0x1eaf9c6e290 <col:50, col:54> col:54 used asclen 'int'
| |-ParmVarDecl 0x1eaf9c6e318 <line:71:33, col:49> col:49 used uni 'unsigned char **'
| |-ParmVarDecl 0x1eaf9c6e398 <col:54, col:59> col:59 used unilen 'int *'
| `-CompoundStmt 0x1eaf9c68fa8 <line:72:1, line:142:1>
|   |-DeclStmt 0x1eaf9c6e720 <line:73:5, col:19>
|   | |-VarDecl 0x1eaf9c6e598 <col:5, col:9> col:9 used ulen 'int'
|   | |-VarDecl 0x1eaf9c6e618 <col:5, col:15> col:15 used i 'int'
|   | `-VarDecl 0x1eaf9c6e698 <col:5, col:18> col:18 used j 'int'
|   |-DeclStmt 0x1eaf9c6e850 <line:74:5, col:32>
|   | |-VarDecl 0x1eaf9c6e750 <col:5, col:20> col:20 used unitmp 'unsigned char *'
|   | `-VarDecl 0x1eaf9c6e7d0 <col:5, col:29> col:29 used ret 'unsigned char *'
|   |-DeclStmt 0x1eaf9c6e928 <line:75:5, col:31>
|   | `-VarDecl 0x1eaf9c6e880 <col:5, col:30> col:19 used utf32chr 'unsigned long' cinit
|   |   `-ImplicitCastExpr 0x1eaf9c6e910 <col:30> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x1eaf9c6e8e8 <col:30> 'int' 0
|   |-IfStmt 0x1eaf9c6eae0 <line:77:5, line:78:28>
|   | |-BinaryOperator 0x1eaf9c6e9b8 <line:77:9, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x1eaf9c6e9a0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c6e940 <col:9> 'int' lvalue ParmVar 0x1eaf9c6e290 'asclen' 'int'
|   | | `-UnaryOperator 0x1eaf9c6e988 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1eaf9c6e960 <col:20> 'int' 1
|   | `-BinaryOperator 0x1eaf9c6eac0 <line:78:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x1eaf9c6e9d8 <col:9> 'int' lvalue ParmVar 0x1eaf9c6e290 'asclen' 'int'
|   |   `-ImplicitCastExpr 0x1eaf9c6eaa8 <col:18, col:28> 'int' <IntegralCast>
|   |     `-CallExpr 0x1eaf9c6ea68 <col:18, col:28> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x1eaf9c6ea50 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1eaf9c6e9f8 <col:18> 'unsigned long long (const char *)' Function 0x1eaf9c6af50 'strlen' 'unsigned long long (const char *)'
|   |       `-ImplicitCastExpr 0x1eaf9c6ea90 <col:25> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1eaf9c6ea18 <col:25> 'const char *' lvalue ParmVar 0x1eaf9c6e210 'asc' 'const char *'
|   |-ForStmt 0x1eaf9c67608 <line:80:5, line:109:5>
|   | |-BinaryOperator 0x1eaf9c6ebf8 <line:80:10, col:24> 'int' ','
|   | | |-BinaryOperator 0x1eaf9c6eb58 <col:10, col:17> 'int' '='
|   | | | |-DeclRefExpr 0x1eaf9c6eaf8 <col:10> 'int' lvalue Var 0x1eaf9c6e598 'ulen' 'int'
|   | | | `-IntegerLiteral 0x1eaf9c6eb30 <col:17> 'int' 0
|   | | `-BinaryOperator 0x1eaf9c6ebd8 <col:20, col:24> 'int' '='
|   | |   |-DeclRefExpr 0x1eaf9c6eb78 <col:20> 'int' lvalue Var 0x1eaf9c6e618 'i' 'int'
|   | |   `-IntegerLiteral 0x1eaf9c6ebb0 <col:24> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1eaf9c6ec88 <col:27, col:31> 'int' '<'
|   | | |-ImplicitCastExpr 0x1eaf9c6ec58 <col:27> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c6ec18 <col:27> 'int' lvalue Var 0x1eaf9c6e618 'i' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c6ec70 <col:31> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1eaf9c6ec38 <col:31> 'int' lvalue ParmVar 0x1eaf9c6e290 'asclen' 'int'
|   | |-CompoundAssignOperator 0x1eaf9c6ed18 <col:39, col:44> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x1eaf9c6eca8 <col:39> 'int' lvalue Var 0x1eaf9c6e618 'i' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c6ed00 <col:44> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1eaf9c6ecc8 <col:44> 'int' lvalue Var 0x1eaf9c6e698 'j' 'int'
|   | `-CompoundStmt 0x1eaf9c675d8 <col:47, line:109:5>
|   |   |-BinaryOperator 0x1eaf9c6f0a0 <line:81:9, col:72> 'int' '='
|   |   | |-DeclRefExpr 0x1eaf9c6ed48 <col:9> 'int' lvalue Var 0x1eaf9c6e698 'j' 'int'
|   |   | `-CallExpr 0x1eaf9c6f068 <col:13, col:72> 'int'
|   |   |   |-ImplicitCastExpr 0x1eaf9c6f050 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1eaf9c6ee58 <col:13> 'int ()' Function 0x1eaf9c6ed90 'UTF8_getc' 'int ()'
|   |   |   |-BinaryOperator 0x1eaf9c6ef28 <col:23, col:50> 'const unsigned char *' '+'
|   |   |   | |-CStyleCastExpr 0x1eaf9c6eec8 <col:23, col:46> 'const unsigned char *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x1eaf9c6eeb0 <col:46> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |   |   | |   `-DeclRefExpr 0x1eaf9c6ee78 <col:46> 'const char *' lvalue ParmVar 0x1eaf9c6e210 'asc' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x1eaf9c6ef10 <col:50> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1eaf9c6eef0 <col:50> 'int' lvalue Var 0x1eaf9c6e618 'i' 'int'
|   |   |   |-BinaryOperator 0x1eaf9c6efb8 <col:53, col:60> 'int' '-'
|   |   |   | |-ImplicitCastExpr 0x1eaf9c6ef88 <col:53> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1eaf9c6ef48 <col:53> 'int' lvalue ParmVar 0x1eaf9c6e290 'asclen' 'int'
|   |   |   | `-ImplicitCastExpr 0x1eaf9c6efa0 <col:60> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1eaf9c6ef68 <col:60> 'int' lvalue Var 0x1eaf9c6e618 'i' 'int'
|   |   |   `-UnaryOperator 0x1eaf9c6f038 <col:63, col:64> 'unsigned long *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x1eaf9c6efd8 <col:64> 'unsigned long' lvalue Var 0x1eaf9c6e880 'utf32chr' 'unsigned long'
|   |   |-IfStmt 0x1eaf9c67268 <line:99:9, line:100:53>
|   |   | |-BinaryOperator 0x1eaf9c6f120 <line:99:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1eaf9c6f108 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1eaf9c6f0c0 <col:13> 'int' lvalue Var 0x1eaf9c6e698 'j' 'int'
|   |   | | `-IntegerLiteral 0x1eaf9c6f0e0 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x1eaf9c67258 <line:100:6, col:53>
|   |   |   `-CallExpr 0x1eaf9c671b8 <col:13, col:53> 'unsigned char *'
|   |   |     |-ImplicitCastExpr 0x1eaf9c671a0 <col:13> 'unsigned char *(*)(const char *, int, unsigned char **, int *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1eaf9c6f140 <col:13> 'unsigned char *(const char *, int, unsigned char **, int *)' Function 0x1eaf9c6abc0 'OPENSSL_asc2uni' 'unsigned char *(const char *, int, unsigned char **, int *)'
|   |   |     |-ImplicitCastExpr 0x1eaf9c671f8 <col:29> 'const char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1eaf9c6f160 <col:29> 'const char *' lvalue ParmVar 0x1eaf9c6e210 'asc' 'const char *'
|   |   |     |-ImplicitCastExpr 0x1eaf9c67210 <col:34> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1eaf9c6f180 <col:34> 'int' lvalue ParmVar 0x1eaf9c6e290 'asclen' 'int'
|   |   |     |-ImplicitCastExpr 0x1eaf9c67228 <col:42> 'unsigned char **' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1eaf9c6f1a0 <col:42> 'unsigned char **' lvalue ParmVar 0x1eaf9c6e318 'uni' 'unsigned char **'
|   |   |     `-ImplicitCastExpr 0x1eaf9c67240 <col:47> 'int *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1eaf9c6f1c0 <col:47> 'int *' lvalue ParmVar 0x1eaf9c6e398 'unilen' 'int *'
|   |   |-IfStmt 0x1eaf9c673c8 <line:102:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   | |-BinaryOperator 0x1eaf9c672f8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:102:13, col:24> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1eaf9c672c8 <col:13> 'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1eaf9c67280 <col:13> 'unsigned long' lvalue Var 0x1eaf9c6e880 'utf32chr' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x1eaf9c672e0 <col:24> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1eaf9c672a0 <col:24> 'int' 1114111
|   |   | `-ReturnStmt 0x1eaf9c673b8 <line:103:6, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   |   `-ImplicitCastExpr 0x1eaf9c673a0 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |   |     `-ParenExpr 0x1eaf9c67380 <col:17, col:27> 'void *'
|   |   |       `-CStyleCastExpr 0x1eaf9c67358 <col:18, col:26> 'void *' <NullToPointer>
|   |   |         `-IntegerLiteral 0x1eaf9c67318 <col:26> 'int' 0
|   |   `-IfStmt 0x1eaf9c675b0 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:105:9, line:108:21> has_else
|   |     |-BinaryOperator 0x1eaf9c67458 <line:105:13, col:25> 'int' '>='
|   |     | |-ImplicitCastExpr 0x1eaf9c67428 <col:13> 'unsigned long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1eaf9c673e0 <col:13> 'unsigned long' lvalue Var 0x1eaf9c6e880 'utf32chr' 'unsigned long'
|   |     | `-ImplicitCastExpr 0x1eaf9c67440 <col:25> 'unsigned long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1eaf9c67400 <col:25> 'int' 65536
|   |     |-CompoundAssignOperator 0x1eaf9c67508 <line:106:13, col:23> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x1eaf9c67478 <col:13> 'int' lvalue Var 0x1eaf9c6e598 'ulen' 'int'
|   |     | `-BinaryOperator 0x1eaf9c674e8 <col:21, col:23> 'int' '*'
|   |     |   |-IntegerLiteral 0x1eaf9c67498 <col:21> 'int' 2
|   |     |   `-IntegerLiteral 0x1eaf9c674c0 <col:23> 'int' 2
|   |     `-CompoundAssignOperator 0x1eaf9c67580 <line:108:13, col:21> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |-DeclRefExpr 0x1eaf9c67538 <col:13> 'int' lvalue Var 0x1eaf9c6e598 'ulen' 'int'
|   |       `-IntegerLiteral 0x1eaf9c67558 <col:21> 'int' 2
|   |-CompoundAssignOperator 0x1eaf9c67688 <line:111:5, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x1eaf9c67640 <col:5> 'int' lvalue Var 0x1eaf9c6e598 'ulen' 'int'
|   | `-IntegerLiteral 0x1eaf9c67660 <col:13> 'int' 2
|   |-IfStmt 0x1eaf9c67950 <line:113:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x1eaf9c67880 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:113:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x1eaf9c677c0 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:113:9, col:36> 'unsigned char *'
|   | | | `-BinaryOperator 0x1eaf9c677a0 <col:10, col:35> 'unsigned char *' '='
|   | | |   |-DeclRefExpr 0x1eaf9c676b8 <col:10> 'unsigned char *' lvalue Var 0x1eaf9c6e7d0 'ret' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x1eaf9c67788 <col:16, col:35> 'unsigned char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x1eaf9c67748 <col:16, col:35> 'int'
|   | | |       |-ImplicitCastExpr 0x1eaf9c67730 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x1eaf9c676f0 <col:16> 'int ()' Function 0x1eaf9c6d390 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x1eaf9c67770 <col:31> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1eaf9c67710 <col:31> 'int' lvalue Var 0x1eaf9c6e598 'ulen' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c67868 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1eaf9c67848 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1eaf9c67820 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1eaf9c677e0 <col:26> 'int' 0
|   | `-ReturnStmt 0x1eaf9c67940 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:114:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1eaf9c67928 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1eaf9c67908 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1eaf9c678e0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1eaf9c678a0 <col:26> 'int' 0
|   |-ForStmt 0x1eaf9c68bd8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:117:5, line:133:5>
|   | |-BinaryOperator 0x1eaf9c67a60 <line:117:10, col:28> 'int' ','
|   | | |-BinaryOperator 0x1eaf9c679d8 <col:10, col:19> 'unsigned char *' '='
|   | | | |-DeclRefExpr 0x1eaf9c67968 <col:10> 'unsigned char *' lvalue Var 0x1eaf9c6e750 'unitmp' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x1eaf9c679c0 <col:19> 'unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1eaf9c679a0 <col:19> 'unsigned char *' lvalue Var 0x1eaf9c6e7d0 'ret' 'unsigned char *'
|   | | `-BinaryOperator 0x1eaf9c67a40 <col:24, col:28> 'int' '='
|   | |   |-DeclRefExpr 0x1eaf9c679f8 <col:24> 'int' lvalue Var 0x1eaf9c6e618 'i' 'int'
|   | |   `-IntegerLiteral 0x1eaf9c67a18 <col:28> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1eaf9c67af0 <col:31, col:35> 'int' '<'
|   | | |-ImplicitCastExpr 0x1eaf9c67ac0 <col:31> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c67a80 <col:31> 'int' lvalue Var 0x1eaf9c6e618 'i' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c67ad8 <col:35> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1eaf9c67aa0 <col:35> 'int' lvalue ParmVar 0x1eaf9c6e290 'asclen' 'int'
|   | |-CompoundAssignOperator 0x1eaf9c67b68 <col:43, col:48> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x1eaf9c67b10 <col:43> 'int' lvalue Var 0x1eaf9c6e618 'i' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c67b50 <col:48> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1eaf9c67b30 <col:48> 'int' lvalue Var 0x1eaf9c6e698 'j' 'int'
|   | `-CompoundStmt 0x1eaf9c68bb8 <col:51, line:133:5>
|   |   |-BinaryOperator 0x1eaf9c67dc0 <line:118:9, col:72> 'int' '='
|   |   | |-DeclRefExpr 0x1eaf9c67b98 <col:9> 'int' lvalue Var 0x1eaf9c6e698 'j' 'int'
|   |   | `-CallExpr 0x1eaf9c67d88 <col:13, col:72> 'int'
|   |   |   |-ImplicitCastExpr 0x1eaf9c67d70 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1eaf9c67bb8 <col:13> 'int ()' Function 0x1eaf9c6ed90 'UTF8_getc' 'int ()'
|   |   |   |-BinaryOperator 0x1eaf9c67c88 <col:23, col:50> 'const unsigned char *' '+'
|   |   |   | |-CStyleCastExpr 0x1eaf9c67c28 <col:23, col:46> 'const unsigned char *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x1eaf9c67c10 <col:46> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |   |   | |   `-DeclRefExpr 0x1eaf9c67bd8 <col:46> 'const char *' lvalue ParmVar 0x1eaf9c6e210 'asc' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x1eaf9c67c70 <col:50> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1eaf9c67c50 <col:50> 'int' lvalue Var 0x1eaf9c6e618 'i' 'int'
|   |   |   |-BinaryOperator 0x1eaf9c67d18 <col:53, col:60> 'int' '-'
|   |   |   | |-ImplicitCastExpr 0x1eaf9c67ce8 <col:53> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1eaf9c67ca8 <col:53> 'int' lvalue ParmVar 0x1eaf9c6e290 'asclen' 'int'
|   |   |   | `-ImplicitCastExpr 0x1eaf9c67d00 <col:60> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1eaf9c67cc8 <col:60> 'int' lvalue Var 0x1eaf9c6e618 'i' 'int'
|   |   |   `-UnaryOperator 0x1eaf9c67d58 <col:63, col:64> 'unsigned long *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x1eaf9c67d38 <col:64> 'unsigned long' lvalue Var 0x1eaf9c6e880 'utf32chr' 'unsigned long'
|   |   `-IfStmt 0x1eaf9c68b90 <line:119:9, line:132:9> has_else
|   |     |-BinaryOperator 0x1eaf9c67e58 <line:119:13, col:25> 'int' '>='
|   |     | |-ImplicitCastExpr 0x1eaf9c67e28 <col:13> 'unsigned long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1eaf9c67de0 <col:13> 'unsigned long' lvalue Var 0x1eaf9c6e880 'utf32chr' 'unsigned long'
|   |     | `-ImplicitCastExpr 0x1eaf9c67e40 <col:25> 'unsigned long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1eaf9c67e00 <col:25> 'int' 65536
|   |     |-CompoundStmt 0x1eaf9c68888 <col:34, line:129:9>
|   |     | |-DeclStmt 0x1eaf9c67f90 <line:120:13, col:32>
|   |     | | |-VarDecl 0x1eaf9c67e90 <col:13, col:26> col:26 used hi 'unsigned int'
|   |     | | `-VarDecl 0x1eaf9c67f10 <col:13, col:30> col:30 used lo 'unsigned int'
|   |     | |-CompoundAssignOperator 0x1eaf9c68008 <line:122:13, col:25> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x1eaf9c67fa8 <col:13> 'unsigned long' lvalue Var 0x1eaf9c6e880 'utf32chr' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1eaf9c67ff0 <col:25> 'unsigned long' <IntegralCast>
|   |     | |   `-IntegerLiteral 0x1eaf9c67fc8 <col:25> 'int' 65536
|   |     | |-BinaryOperator 0x1eaf9c681b0 <line:123:13, col:40> 'unsigned int' '='
|   |     | | |-DeclRefExpr 0x1eaf9c68038 <col:13> 'unsigned int' lvalue Var 0x1eaf9c67e90 'hi' 'unsigned int'
|   |     | | `-ImplicitCastExpr 0x1eaf9c68170 <col:18, col:40> 'unsigned int' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1eaf9c68150 <col:18, col:40> 'unsigned long' '+'
|   |     | |     |-ImplicitCastExpr 0x1eaf9c68138 <col:18> 'unsigned long' <IntegralCast>
|   |     | |     | `-IntegerLiteral 0x1eaf9c68070 <col:18> 'int' 55296
|   |     | |     `-ParenExpr 0x1eaf9c68118 <col:27, col:40> 'unsigned long'
|   |     | |       `-BinaryOperator 0x1eaf9c680f8 <col:28, col:38> 'unsigned long' '>>'
|   |     | |         |-ImplicitCastExpr 0x1eaf9c680e0 <col:28> 'unsigned long' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x1eaf9c68098 <col:28> 'unsigned long' lvalue Var 0x1eaf9c6e880 'utf32chr' 'unsigned long'
|   |     | |         `-IntegerLiteral 0x1eaf9c680b8 <col:38> 'int' 10
|   |     | |-BinaryOperator 0x1eaf9c68338 <line:124:13, col:42> 'unsigned int' '='
|   |     | | |-DeclRefExpr 0x1eaf9c681d0 <col:13> 'unsigned int' lvalue Var 0x1eaf9c67f10 'lo' 'unsigned int'
|   |     | | `-ImplicitCastExpr 0x1eaf9c68320 <col:18, col:42> 'unsigned int' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1eaf9c68300 <col:18, col:42> 'unsigned long' '+'
|   |     | |     |-ImplicitCastExpr 0x1eaf9c682e8 <col:18> 'unsigned long' <IntegralCast>
|   |     | |     | `-IntegerLiteral 0x1eaf9c68208 <col:18> 'int' 56320
|   |     | |     `-ParenExpr 0x1eaf9c682c8 <col:27, col:42> 'unsigned long'
|   |     | |       `-BinaryOperator 0x1eaf9c682a8 <col:28, col:37> 'unsigned long' '&'
|   |     | |         |-ImplicitCastExpr 0x1eaf9c68278 <col:28> 'unsigned long' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x1eaf9c68230 <col:28> 'unsigned long' lvalue Var 0x1eaf9c6e880 'utf32chr' 'unsigned long'
|   |     | |         `-ImplicitCastExpr 0x1eaf9c68290 <col:37> 'unsigned long' <IntegralCast>
|   |     | |           `-IntegerLiteral 0x1eaf9c68250 <col:37> 'int' 1023
|   |     | |-BinaryOperator 0x1eaf9c684a8 <line:125:13, col:46> 'unsigned char' '='
|   |     | | |-UnaryOperator 0x1eaf9c68390 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x1eaf9c68378 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x1eaf9c68358 <col:14> 'unsigned char *' lvalue Var 0x1eaf9c6e750 'unitmp' 'unsigned char *'
|   |     | | `-CStyleCastExpr 0x1eaf9c68480 <col:25, col:46> 'unsigned char' <IntegralCast>
|   |     | |   `-ParenExpr 0x1eaf9c68460 <col:40, col:46> 'unsigned int'
|   |     | |     `-BinaryOperator 0x1eaf9c68408 <col:41, col:45> 'unsigned int' '>>'
|   |     | |       |-ImplicitCastExpr 0x1eaf9c683f0 <col:41> 'unsigned int' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x1eaf9c683a8 <col:41> 'unsigned int' lvalue Var 0x1eaf9c67e90 'hi' 'unsigned int'
|   |     | |       `-IntegerLiteral 0x1eaf9c683c8 <col:45> 'int' 8
|   |     | |-BinaryOperator 0x1eaf9c685d0 <line:126:13, col:43> 'unsigned char' '='
|   |     | | |-UnaryOperator 0x1eaf9c68500 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x1eaf9c684e8 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x1eaf9c684c8 <col:14> 'unsigned char *' lvalue Var 0x1eaf9c6e750 'unitmp' 'unsigned char *'
|   |     | | `-CStyleCastExpr 0x1eaf9c685a8 <col:25, col:43> 'unsigned char' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x1eaf9c68590 <col:40, col:43> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     | |     `-ParenExpr 0x1eaf9c68570 <col:40, col:43> 'unsigned int' lvalue
|   |     | |       `-DeclRefExpr 0x1eaf9c68518 <col:41> 'unsigned int' lvalue Var 0x1eaf9c67e90 'hi' 'unsigned int'
|   |     | |-BinaryOperator 0x1eaf9c68740 <line:127:13, col:46> 'unsigned char' '='
|   |     | | |-UnaryOperator 0x1eaf9c68628 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x1eaf9c68610 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x1eaf9c685f0 <col:14> 'unsigned char *' lvalue Var 0x1eaf9c6e750 'unitmp' 'unsigned char *'
|   |     | | `-CStyleCastExpr 0x1eaf9c68718 <col:25, col:46> 'unsigned char' <IntegralCast>
|   |     | |   `-ParenExpr 0x1eaf9c686f8 <col:40, col:46> 'unsigned int'
|   |     | |     `-BinaryOperator 0x1eaf9c686a0 <col:41, col:45> 'unsigned int' '>>'
|   |     | |       |-ImplicitCastExpr 0x1eaf9c68688 <col:41> 'unsigned int' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x1eaf9c68640 <col:41> 'unsigned int' lvalue Var 0x1eaf9c67f10 'lo' 'unsigned int'
|   |     | |       `-IntegerLiteral 0x1eaf9c68660 <col:45> 'int' 8
|   |     | `-BinaryOperator 0x1eaf9c68868 <line:128:13, col:43> 'unsigned char' '='
|   |     |   |-UnaryOperator 0x1eaf9c68798 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     |   | `-UnaryOperator 0x1eaf9c68780 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     |   |   `-DeclRefExpr 0x1eaf9c68760 <col:14> 'unsigned char *' lvalue Var 0x1eaf9c6e750 'unitmp' 'unsigned char *'
|   |     |   `-CStyleCastExpr 0x1eaf9c68840 <col:25, col:43> 'unsigned char' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x1eaf9c68828 <col:40, col:43> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ParenExpr 0x1eaf9c68808 <col:40, col:43> 'unsigned int' lvalue
|   |     |         `-DeclRefExpr 0x1eaf9c687b0 <col:41> 'unsigned int' lvalue Var 0x1eaf9c67f10 'lo' 'unsigned int'
|   |     `-CompoundStmt 0x1eaf9c68b70 <line:129:16, line:132:9>
|   |       |-BinaryOperator 0x1eaf9c68a28 <line:130:13, col:52> 'unsigned char' '='
|   |       | |-UnaryOperator 0x1eaf9c68910 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |       | | `-UnaryOperator 0x1eaf9c688f8 <col:14, col:20> 'unsigned char *' postfix '++'
|   |       | |   `-DeclRefExpr 0x1eaf9c688d8 <col:14> 'unsigned char *' lvalue Var 0x1eaf9c6e750 'unitmp' 'unsigned char *'
|   |       | `-CStyleCastExpr 0x1eaf9c68a00 <col:25, col:52> 'unsigned char' <IntegralCast>
|   |       |   `-ParenExpr 0x1eaf9c689e0 <col:40, col:52> 'unsigned long'
|   |       |     `-BinaryOperator 0x1eaf9c68988 <col:41, col:51> 'unsigned long' '>>'
|   |       |       |-ImplicitCastExpr 0x1eaf9c68970 <col:41> 'unsigned long' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x1eaf9c68928 <col:41> 'unsigned long' lvalue Var 0x1eaf9c6e880 'utf32chr' 'unsigned long'
|   |       |       `-IntegerLiteral 0x1eaf9c68948 <col:51> 'int' 8
|   |       `-BinaryOperator 0x1eaf9c68b50 <line:131:13, col:49> 'unsigned char' '='
|   |         |-UnaryOperator 0x1eaf9c68a80 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |         | `-UnaryOperator 0x1eaf9c68a68 <col:14, col:20> 'unsigned char *' postfix '++'
|   |         |   `-DeclRefExpr 0x1eaf9c68a48 <col:14> 'unsigned char *' lvalue Var 0x1eaf9c6e750 'unitmp' 'unsigned char *'
|   |         `-CStyleCastExpr 0x1eaf9c68b28 <col:25, col:49> 'unsigned char' <IntegralCast>
|   |           `-ImplicitCastExpr 0x1eaf9c68b10 <col:40, col:49> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |             `-ParenExpr 0x1eaf9c68af0 <col:40, col:49> 'unsigned long' lvalue
|   |               `-DeclRefExpr 0x1eaf9c68a98 <col:41> 'unsigned long' lvalue Var 0x1eaf9c6e880 'utf32chr' 'unsigned long'
|   |-BinaryOperator 0x1eaf9c68ca0 <line:135:5, col:17> 'unsigned char' '='
|   | |-UnaryOperator 0x1eaf9c68c48 <col:5, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x1eaf9c68c30 <col:6, col:12> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x1eaf9c68c10 <col:6> 'unsigned char *' lvalue Var 0x1eaf9c6e750 'unitmp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1eaf9c68c88 <col:17> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1eaf9c68c60 <col:17> 'int' 0
|   |-BinaryOperator 0x1eaf9c68d50 <line:136:5, col:17> 'unsigned char' '='
|   | |-UnaryOperator 0x1eaf9c68cf8 <col:5, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x1eaf9c68ce0 <col:6, col:12> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x1eaf9c68cc0 <col:6> 'unsigned char *' lvalue Var 0x1eaf9c6e750 'unitmp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1eaf9c68d38 <col:17> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1eaf9c68d10 <col:17> 'int' 0
|   |-IfStmt 0x1eaf9c68e50 <line:137:5, line:138:19>
|   | |-ImplicitCastExpr 0x1eaf9c68d90 <line:137:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1eaf9c68d70 <col:9> 'int *' lvalue ParmVar 0x1eaf9c6e398 'unilen' 'int *'
|   | `-BinaryOperator 0x1eaf9c68e30 <line:138:9, col:19> 'int' '='
|   |   |-UnaryOperator 0x1eaf9c68de0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1eaf9c68dc8 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1eaf9c68da8 <col:10> 'int *' lvalue ParmVar 0x1eaf9c6e398 'unilen' 'int *'
|   |   `-ImplicitCastExpr 0x1eaf9c68e18 <col:19> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1eaf9c68df8 <col:19> 'int' lvalue Var 0x1eaf9c6e598 'ulen' 'int'
|   |-IfStmt 0x1eaf9c68f48 <line:139:5, line:140:16>
|   | |-ImplicitCastExpr 0x1eaf9c68e88 <line:139:9> 'unsigned char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x1eaf9c68e68 <col:9> 'unsigned char **' lvalue ParmVar 0x1eaf9c6e318 'uni' 'unsigned char **'
|   | `-BinaryOperator 0x1eaf9c68f28 <line:140:9, col:16> 'unsigned char *' '='
|   |   |-UnaryOperator 0x1eaf9c68ed8 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x1eaf9c68ec0 <col:10> 'unsigned char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1eaf9c68ea0 <col:10> 'unsigned char **' lvalue ParmVar 0x1eaf9c6e318 'uni' 'unsigned char **'
|   |   `-ImplicitCastExpr 0x1eaf9c68f10 <col:16> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1eaf9c68ef0 <col:16> 'unsigned char *' lvalue Var 0x1eaf9c6e7d0 'ret' 'unsigned char *'
|   `-ReturnStmt 0x1eaf9c68f98 <line:141:5, col:12>
|     `-ImplicitCastExpr 0x1eaf9c68f80 <col:12> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x1eaf9c68f60 <col:12> 'unsigned char *' lvalue Var 0x1eaf9c6e7d0 'ret' 'unsigned char *'
|-FunctionDecl 0x1eaf9c7fbf0 <line:144:1, line:169:1> line:144:12 used bmp_to_utf8 'int (char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x1eaf9c69038 <col:24, col:30> col:30 used str 'char *'
| |-ParmVarDecl 0x1eaf9c690b8 <col:35, col:56> col:56 used utf16 'const unsigned char *'
| |-ParmVarDecl 0x1eaf9c69138 <col:63, col:67> col:67 used len 'int'
| `-CompoundStmt 0x1eaf9c7de98 <line:145:1, line:169:1>
|   |-DeclStmt 0x1eaf9c7fd40 <line:146:5, col:27>
|   | `-VarDecl 0x1eaf9c7fcd8 <col:5, col:19> col:19 used utf32chr 'unsigned long'
|   |-IfStmt 0x1eaf9c7fe10 <line:148:5, col:26>
|   | |-BinaryOperator 0x1eaf9c7fdb8 <col:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x1eaf9c7fda0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c7fd58 <col:9> 'int' lvalue ParmVar 0x1eaf9c69138 'len' 'int'
|   | | `-IntegerLiteral 0x1eaf9c7fd78 <col:16> 'int' 0
|   | `-ReturnStmt 0x1eaf9c7fe00 <col:19, col:26>
|   |   `-IntegerLiteral 0x1eaf9c7fdd8 <col:26> 'int' 0
|   |-IfStmt 0x1eaf9c7fef8 <line:150:5, col:26>
|   | |-BinaryOperator 0x1eaf9c7fe88 <col:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1eaf9c7fe70 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c7fe28 <col:9> 'int' lvalue ParmVar 0x1eaf9c69138 'len' 'int'
|   | | `-IntegerLiteral 0x1eaf9c7fe48 <col:15> 'int' 2
|   | `-ReturnStmt 0x1eaf9c7fee8 <col:18, col:26>
|   |   `-UnaryOperator 0x1eaf9c7fed0 <col:25, col:26> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1eaf9c7fea8 <col:26> 'int' 1
|   |-BinaryOperator 0x1eaf9c80148 <line:153:5, col:39> 'unsigned long' '='
|   | |-DeclRefExpr 0x1eaf9c7ff10 <col:5> 'unsigned long' lvalue Var 0x1eaf9c7fcd8 'utf32chr' 'unsigned long'
|   | `-ImplicitCastExpr 0x1eaf9c80130 <col:16, col:39> 'unsigned long' <IntegralCast>
|   |   `-BinaryOperator 0x1eaf9c80110 <col:16, col:39> 'int' '|'
|   |     |-ParenExpr 0x1eaf9c80040 <col:16, col:28> 'int'
|   |     | `-BinaryOperator 0x1eaf9c80020 <col:17, col:27> 'int' '<<'
|   |     |   |-ImplicitCastExpr 0x1eaf9c80008 <col:17, col:24> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x1eaf9c7fff0 <col:17, col:24> 'unsigned char' <LValueToRValue>
|   |     |   |   `-ArraySubscriptExpr 0x1eaf9c7ffa8 <col:17, col:24> 'const unsigned char' lvalue
|   |     |   |     |-ImplicitCastExpr 0x1eaf9c7ff90 <col:17> 'const unsigned char *' <LValueToRValue>
|   |     |   |     | `-DeclRefExpr 0x1eaf9c7ff48 <col:17> 'const unsigned char *' lvalue ParmVar 0x1eaf9c690b8 'utf16' 'const unsigned char *'
|   |     |   |     `-IntegerLiteral 0x1eaf9c7ff68 <col:23> 'int' 0
|   |     |   `-IntegerLiteral 0x1eaf9c7ffc8 <col:27> 'int' 8
|   |     `-ImplicitCastExpr 0x1eaf9c800f8 <col:32, col:39> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x1eaf9c800e0 <col:32, col:39> 'unsigned char' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1eaf9c800c0 <col:32, col:39> 'const unsigned char' lvalue
|   |           |-ImplicitCastExpr 0x1eaf9c800a8 <col:32> 'const unsigned char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1eaf9c80060 <col:32> 'const unsigned char *' lvalue ParmVar 0x1eaf9c690b8 'utf16' 'const unsigned char *'
|   |           `-IntegerLiteral 0x1eaf9c80080 <col:38> 'int' 1
|   |-IfStmt 0x1eaf9c7db50 <line:155:5, line:166:5>
|   | |-BinaryOperator 0x1eaf9c80298 <line:155:9, col:42> 'int' '&&'
|   | | |-BinaryOperator 0x1eaf9c801e0 <col:9, col:21> 'int' '>='
|   | | | |-ImplicitCastExpr 0x1eaf9c801b0 <col:9> 'unsigned long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1eaf9c80168 <col:9> 'unsigned long' lvalue Var 0x1eaf9c7fcd8 'utf32chr' 'unsigned long'
|   | | | `-ImplicitCastExpr 0x1eaf9c801c8 <col:21> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1eaf9c80188 <col:21> 'int' 55296
|   | | `-BinaryOperator 0x1eaf9c80278 <col:31, col:42> 'int' '<'
|   | |   |-ImplicitCastExpr 0x1eaf9c80248 <col:31> 'unsigned long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1eaf9c80200 <col:31> 'unsigned long' lvalue Var 0x1eaf9c7fcd8 'utf32chr' 'unsigned long'
|   | |   `-ImplicitCastExpr 0x1eaf9c80260 <col:42> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x1eaf9c80220 <col:42> 'int' 57344
|   | `-CompoundStmt 0x1eaf9c7db00 <col:50, line:166:5>
|   |   |-DeclStmt 0x1eaf9c80338 <line:156:9, col:24>
|   |   | `-VarDecl 0x1eaf9c802d0 <col:9, col:22> col:22 used lo 'unsigned int'
|   |   |-IfStmt 0x1eaf9c80420 <line:158:9, col:30>
|   |   | |-BinaryOperator 0x1eaf9c803b0 <col:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1eaf9c80398 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1eaf9c80350 <col:13> 'int' lvalue ParmVar 0x1eaf9c69138 'len' 'int'
|   |   | | `-IntegerLiteral 0x1eaf9c80370 <col:19> 'int' 4
|   |   | `-ReturnStmt 0x1eaf9c80410 <col:22, col:30>
|   |   |   `-UnaryOperator 0x1eaf9c803f8 <col:29, col:30> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x1eaf9c803d0 <col:30> 'int' 1
|   |   |-CompoundAssignOperator 0x1eaf9c80498 <line:160:9, col:21> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | |-DeclRefExpr 0x1eaf9c80438 <col:9> 'unsigned long' lvalue Var 0x1eaf9c7fcd8 'utf32chr' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x1eaf9c80480 <col:21> 'unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1eaf9c80458 <col:21> 'int' 55296
|   |   |-CompoundAssignOperator 0x1eaf9c80528 <line:161:9, col:22> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | |-DeclRefExpr 0x1eaf9c804c8 <col:9> 'unsigned long' lvalue Var 0x1eaf9c7fcd8 'utf32chr' 'unsigned long'
|   |   | `-IntegerLiteral 0x1eaf9c804e8 <col:22> 'int' 10
|   |   |-BinaryOperator 0x1eaf9c80790 <line:162:9, col:37> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x1eaf9c80558 <col:9> 'unsigned int' lvalue Var 0x1eaf9c802d0 'lo' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x1eaf9c80778 <col:14, col:37> 'unsigned int' <IntegralCast>
|   |   |   `-BinaryOperator 0x1eaf9c80758 <col:14, col:37> 'int' '|'
|   |   |     |-ParenExpr 0x1eaf9c80688 <col:14, col:26> 'int'
|   |   |     | `-BinaryOperator 0x1eaf9c80668 <col:15, col:25> 'int' '<<'
|   |   |     |   |-ImplicitCastExpr 0x1eaf9c80650 <col:15, col:22> 'int' <IntegralCast>
|   |   |     |   | `-ImplicitCastExpr 0x1eaf9c80638 <col:15, col:22> 'unsigned char' <LValueToRValue>
|   |   |     |   |   `-ArraySubscriptExpr 0x1eaf9c805f0 <col:15, col:22> 'const unsigned char' lvalue
|   |   |     |   |     |-ImplicitCastExpr 0x1eaf9c805d8 <col:15> 'const unsigned char *' <LValueToRValue>
|   |   |     |   |     | `-DeclRefExpr 0x1eaf9c80590 <col:15> 'const unsigned char *' lvalue ParmVar 0x1eaf9c690b8 'utf16' 'const unsigned char *'
|   |   |     |   |     `-IntegerLiteral 0x1eaf9c805b0 <col:21> 'int' 2
|   |   |     |   `-IntegerLiteral 0x1eaf9c80610 <col:25> 'int' 8
|   |   |     `-ImplicitCastExpr 0x1eaf9c80740 <col:30, col:37> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x1eaf9c80728 <col:30, col:37> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x1eaf9c80708 <col:30, col:37> 'const unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x1eaf9c806f0 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x1eaf9c806a8 <col:30> 'const unsigned char *' lvalue ParmVar 0x1eaf9c690b8 'utf16' 'const unsigned char *'
|   |   |           `-IntegerLiteral 0x1eaf9c806c8 <col:36> 'int' 3
|   |   |-IfStmt 0x1eaf9c80950 <line:163:9, col:50>
|   |   | |-BinaryOperator 0x1eaf9c808e0 <col:13, col:34> 'int' '||'
|   |   | | |-BinaryOperator 0x1eaf9c80828 <col:13, col:18> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1eaf9c807f8 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1eaf9c807b0 <col:13> 'unsigned int' lvalue Var 0x1eaf9c802d0 'lo' 'unsigned int'
|   |   | | | `-ImplicitCastExpr 0x1eaf9c80810 <col:18> 'unsigned int' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x1eaf9c807d0 <col:18> 'int' 56320
|   |   | | `-BinaryOperator 0x1eaf9c808c0 <col:28, col:34> 'int' '>='
|   |   | |   |-ImplicitCastExpr 0x1eaf9c80890 <col:28> 'unsigned int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1eaf9c80848 <col:28> 'unsigned int' lvalue Var 0x1eaf9c802d0 'lo' 'unsigned int'
|   |   | |   `-ImplicitCastExpr 0x1eaf9c808a8 <col:34> 'unsigned int' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x1eaf9c80868 <col:34> 'int' 57344
|   |   | `-ReturnStmt 0x1eaf9c80940 <col:42, col:50>
|   |   |   `-UnaryOperator 0x1eaf9c80928 <col:49, col:50> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x1eaf9c80900 <col:50> 'int' 1
|   |   |-CompoundAssignOperator 0x1eaf9c80a38 <line:164:9, col:24> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | |-DeclRefExpr 0x1eaf9c80968 <col:9> 'unsigned long' lvalue Var 0x1eaf9c7fcd8 'utf32chr' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x1eaf9c80a20 <col:21, col:24> 'unsigned long' <IntegralCast>
|   |   |   `-BinaryOperator 0x1eaf9c80a00 <col:21, col:24> 'unsigned int' '-'
|   |   |     |-ImplicitCastExpr 0x1eaf9c809d0 <col:21> 'unsigned int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1eaf9c80988 <col:21> 'unsigned int' lvalue Var 0x1eaf9c802d0 'lo' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x1eaf9c809e8 <col:24> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1eaf9c809a8 <col:24> 'int' 56320
|   |   `-CompoundAssignOperator 0x1eaf9c80ac8 <line:165:9, col:21> 'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     |-DeclRefExpr 0x1eaf9c80a68 <col:9> 'unsigned long' lvalue Var 0x1eaf9c7fcd8 'utf32chr' 'unsigned long'
|   |     `-ImplicitCastExpr 0x1eaf9c80ab0 <col:21> 'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x1eaf9c80a88 <col:21> 'int' 65536
|   `-ReturnStmt 0x1eaf9c7de88 <line:168:5, col:71>
|     `-CallExpr 0x1eaf9c7de38 <col:12, col:71> 'int'
|       |-ImplicitCastExpr 0x1eaf9c7de20 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1eaf9c7dc58 <col:12> 'int ()' Function 0x1eaf9c7db90 'UTF8_putc' 'int ()'
|       |-CStyleCastExpr 0x1eaf9c7dcc8 <col:22, col:39> 'unsigned char *' <BitCast>
|       | `-ImplicitCastExpr 0x1eaf9c7dcb0 <col:39> 'char *' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x1eaf9c7dc78 <col:39> 'char *' lvalue ParmVar 0x1eaf9c69038 'str' 'char *'
|       |-ConditionalOperator 0x1eaf9c7ddd0 <col:44, col:58> 'int'
|       | |-BinaryOperator 0x1eaf9c7dd50 <col:44, col:50> 'int' '>'
|       | | |-ImplicitCastExpr 0x1eaf9c7dd38 <col:44> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1eaf9c7dcf0 <col:44> 'int' lvalue ParmVar 0x1eaf9c69138 'len' 'int'
|       | | `-IntegerLiteral 0x1eaf9c7dd10 <col:50> 'int' 4
|       | |-IntegerLiteral 0x1eaf9c7dd70 <col:54> 'int' 4
|       | `-ImplicitCastExpr 0x1eaf9c7ddb8 <col:58> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x1eaf9c7dd98 <col:58> 'int' lvalue ParmVar 0x1eaf9c69138 'len' 'int'
|       `-ImplicitCastExpr 0x1eaf9c7de70 <col:63> 'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x1eaf9c7de00 <col:63> 'unsigned long' lvalue Var 0x1eaf9c7fcd8 'utf32chr' 'unsigned long'
|-FunctionDecl 0x1eaf9c7e040 <line:171:1, line:213:1> line:171:7 OPENSSL_uni2utf8 'char *(const unsigned char *, int)'
| |-ParmVarDecl 0x1eaf9c7def0 <col:24, col:45> col:45 used uni 'const unsigned char *'
| |-ParmVarDecl 0x1eaf9c7df70 <col:50, col:54> col:54 used unilen 'int'
| `-CompoundStmt 0x1eaf9c7ed80 <line:172:1, line:213:1>
|   |-DeclStmt 0x1eaf9c7e2a8 <line:173:5, col:21>
|   | |-VarDecl 0x1eaf9c7e120 <col:5, col:9> col:9 used asclen 'int'
|   | |-VarDecl 0x1eaf9c7e1a0 <col:5, col:17> col:17 used i 'int'
|   | `-VarDecl 0x1eaf9c7e220 <col:5, col:20> col:20 used j 'int'
|   |-DeclStmt 0x1eaf9c7e340 <line:174:5, col:17>
|   | `-VarDecl 0x1eaf9c7e2d8 <col:5, col:11> col:11 used asctmp 'char *'
|   |-IfStmt 0x1eaf9c7e488 <line:177:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x1eaf9c7e3b8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:177:9, col:18> 'int' '&'
|   | | |-ImplicitCastExpr 0x1eaf9c7e3a0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c7e358 <col:9> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   | | `-IntegerLiteral 0x1eaf9c7e378 <col:18> 'int' 1
|   | `-ReturnStmt 0x1eaf9c7e478 <line:178:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1eaf9c7e460 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1eaf9c7e440 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1eaf9c7e418 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1eaf9c7e3d8 <col:26> 'int' 0
|   |-ForStmt 0x1eaf9c7bce8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:180:5, line:191:5>
|   | |-BinaryOperator 0x1eaf9c7e5a0 <line:180:10, col:26> 'int' ','
|   | | |-BinaryOperator 0x1eaf9c7e500 <col:10, col:19> 'int' '='
|   | | | |-DeclRefExpr 0x1eaf9c7e4a0 <col:10> 'int' lvalue Var 0x1eaf9c7e120 'asclen' 'int'
|   | | | `-IntegerLiteral 0x1eaf9c7e4d8 <col:19> 'int' 0
|   | | `-BinaryOperator 0x1eaf9c7e580 <col:22, col:26> 'int' '='
|   | |   |-DeclRefExpr 0x1eaf9c7e520 <col:22> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   | |   `-IntegerLiteral 0x1eaf9c7e558 <col:26> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1eaf9c7e630 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x1eaf9c7e600 <col:29> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c7e5c0 <col:29> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c7e618 <col:33> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1eaf9c7e5e0 <col:33> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1eaf9c7bcb8 <col:43, line:191:5>
|   |   |-BinaryOperator 0x1eaf9c7e8e0 <line:181:9, col:46> 'int' '='
|   |   | |-DeclRefExpr 0x1eaf9c7e650 <col:9> 'int' lvalue Var 0x1eaf9c7e220 'j' 'int'
|   |   | `-CallExpr 0x1eaf9c7e890 <col:13, col:46> 'int'
|   |   |   |-ImplicitCastExpr 0x1eaf9c7e878 <col:13> 'int (*)(char *, const unsigned char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1eaf9c7e688 <col:13> 'int (char *, const unsigned char *, int)' Function 0x1eaf9c7fbf0 'bmp_to_utf8' 'int (char *, const unsigned char *, int)'
|   |   |   |-ImplicitCastExpr 0x1eaf9c7e8c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   |   | `-ParenExpr 0x1eaf9c7e710 <col:17, col:27> 'void *'
|   |   |   |   `-CStyleCastExpr 0x1eaf9c7e6e8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   |     `-IntegerLiteral 0x1eaf9c7e6a8 <col:26> 'int' 0
|   |   |   |-BinaryOperator 0x1eaf9c7e7a0 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:181:31, col:35> 'const unsigned char *' '+'
|   |   |   | |-ImplicitCastExpr 0x1eaf9c7e770 <col:31> 'const unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1eaf9c7e730 <col:31> 'const unsigned char *' lvalue ParmVar 0x1eaf9c7def0 'uni' 'const unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x1eaf9c7e788 <col:35> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1eaf9c7e750 <col:35> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   |   |   `-BinaryOperator 0x1eaf9c7e830 <col:38, col:45> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x1eaf9c7e800 <col:38> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1eaf9c7e7c0 <col:38> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   |   |     `-ImplicitCastExpr 0x1eaf9c7e818 <col:45> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1eaf9c7e7e0 <col:45> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   |   |-IfStmt 0x1eaf9c7ea90 <line:187:9, col:54>
|   |   | |-BinaryOperator 0x1eaf9c7e960 <col:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1eaf9c7e948 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1eaf9c7e900 <col:13> 'int' lvalue Var 0x1eaf9c7e220 'j' 'int'
|   |   | | `-IntegerLiteral 0x1eaf9c7e920 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x1eaf9c7ea80 <col:20, col:54>
|   |   |   `-CallExpr 0x1eaf9c7ea20 <col:27, col:54> 'char *'
|   |   |     |-ImplicitCastExpr 0x1eaf9c7ea08 <col:27> 'char *(*)(const unsigned char *, int)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1eaf9c7e980 <col:27> 'char *(const unsigned char *, int)' Function 0x1eaf9c662a0 'OPENSSL_uni2asc' 'char *(const unsigned char *, int)'
|   |   |     |-ImplicitCastExpr 0x1eaf9c7ea50 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1eaf9c7e9a0 <col:43> 'const unsigned char *' lvalue ParmVar 0x1eaf9c7def0 'uni' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x1eaf9c7ea68 <col:48> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1eaf9c7e9c0 <col:48> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   |   |-IfStmt 0x1eaf9c7bc08 <line:188:9, line:189:26> has_else
|   |   | |-BinaryOperator 0x1eaf9c7baf8 <line:188:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1eaf9c7bae0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1eaf9c7eaa8 <col:13> 'int' lvalue Var 0x1eaf9c7e220 'j' 'int'
|   |   | | `-IntegerLiteral 0x1eaf9c7eac8 <col:18> 'int' 4
|   |   | |-CompoundAssignOperator 0x1eaf9c7bb60 <col:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | | |-DeclRefExpr 0x1eaf9c7bb18 <col:21> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   |   | | `-IntegerLiteral 0x1eaf9c7bb38 <col:26> 'int' 4
|   |   | `-CompoundAssignOperator 0x1eaf9c7bbd8 <line:189:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x1eaf9c7bb90 <col:21> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   |   |   `-IntegerLiteral 0x1eaf9c7bbb0 <col:26> 'int' 2
|   |   `-CompoundAssignOperator 0x1eaf9c7bc88 <line:190:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1eaf9c7bc30 <col:9> 'int' lvalue Var 0x1eaf9c7e120 'asclen' 'int'
|   |     `-ImplicitCastExpr 0x1eaf9c7bc70 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1eaf9c7bc50 <col:19> 'int' lvalue Var 0x1eaf9c7e220 'j' 'int'
|   |-IfStmt 0x1eaf9c7c018 <line:194:5, line:195:15>
|   | |-BinaryOperator 0x1eaf9c7bfc0 <line:194:9, col:51> 'int' '||'
|   | | |-UnaryOperator 0x1eaf9c7bd58 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1eaf9c7bd40 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1eaf9c7bd20 <col:10> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   | | `-ParenExpr 0x1eaf9c7bfa0 <col:20, col:51> 'int'
|   | |   `-BinaryOperator 0x1eaf9c7bf80 <col:21, col:50> 'int' '||'
|   | |     |-ImplicitCastExpr 0x1eaf9c7bf38 <col:21, col:33> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x1eaf9c7bf20 <col:21, col:33> 'unsigned char' <LValueToRValue>
|   | |     |   `-ArraySubscriptExpr 0x1eaf9c7be28 <col:21, col:33> 'const unsigned char' lvalue
|   | |     |     |-ImplicitCastExpr 0x1eaf9c7be10 <col:21> 'const unsigned char *' <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x1eaf9c7bd70 <col:21> 'const unsigned char *' lvalue ParmVar 0x1eaf9c7def0 'uni' 'const unsigned char *'
|   | |     |     `-BinaryOperator 0x1eaf9c7bdf0 <col:25, col:32> 'int' '-'
|   | |     |       |-ImplicitCastExpr 0x1eaf9c7bdd8 <col:25> 'int' <LValueToRValue>
|   | |     |       | `-DeclRefExpr 0x1eaf9c7bd90 <col:25> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   | |     |       `-IntegerLiteral 0x1eaf9c7bdb0 <col:32> 'int' 2
|   | |     `-ImplicitCastExpr 0x1eaf9c7bf68 <col:36, col:50> 'int' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x1eaf9c7bf50 <col:36, col:50> 'unsigned char' <LValueToRValue>
|   | |         `-ArraySubscriptExpr 0x1eaf9c7bf00 <col:36, col:50> 'const unsigned char' lvalue
|   | |           |-ImplicitCastExpr 0x1eaf9c7bee8 <col:36> 'const unsigned char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x1eaf9c7be48 <col:36> 'const unsigned char *' lvalue ParmVar 0x1eaf9c7def0 'uni' 'const unsigned char *'
|   | |           `-BinaryOperator 0x1eaf9c7bec8 <col:40, col:49> 'int' '-'
|   | |             |-ImplicitCastExpr 0x1eaf9c7beb0 <col:40> 'int' <LValueToRValue>
|   | |             | `-DeclRefExpr 0x1eaf9c7be68 <col:40> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   | |             `-IntegerLiteral 0x1eaf9c7be88 <col:49> 'int' 1
|   | `-UnaryOperator 0x1eaf9c7c000 <line:195:9, col:15> 'int' postfix '++'
|   |   `-DeclRefExpr 0x1eaf9c7bfe0 <col:9> 'int' lvalue Var 0x1eaf9c7e120 'asclen' 'int'
|   |-IfStmt 0x1eaf9c7c2c8 <line:197:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x1eaf9c7c1f8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:197:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x1eaf9c7c138 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:197:9, col:41> 'char *'
|   | | | `-BinaryOperator 0x1eaf9c7c118 <col:10, col:40> 'char *' '='
|   | | |   |-DeclRefExpr 0x1eaf9c7c030 <col:10> 'char *' lvalue Var 0x1eaf9c7e2d8 'asctmp' 'char *'
|   | | |   `-ImplicitCastExpr 0x1eaf9c7c100 <col:19, col:40> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x1eaf9c7c0c0 <col:19, col:40> 'int'
|   | | |       |-ImplicitCastExpr 0x1eaf9c7c0a8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x1eaf9c7c068 <col:19> 'int ()' Function 0x1eaf9c6d390 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x1eaf9c7c0e8 <col:34> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x1eaf9c7c088 <col:34> 'int' lvalue Var 0x1eaf9c7e120 'asclen' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c7c1e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1eaf9c7c1c0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1eaf9c7c198 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1eaf9c7c158 <col:26> 'int' 0
|   | `-ReturnStmt 0x1eaf9c7c2b8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:198:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1eaf9c7c2a0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1eaf9c7c280 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1eaf9c7c258 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1eaf9c7c218 <col:26> 'int' 0
|   |-ForStmt 0x1eaf9c7c908 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:201:5, line:206:5>
|   | |-BinaryOperator 0x1eaf9c7c3b0 <line:201:10, col:26> 'int' ','
|   | | |-BinaryOperator 0x1eaf9c7c328 <col:10, col:19> 'int' '='
|   | | | |-DeclRefExpr 0x1eaf9c7c2e0 <col:10> 'int' lvalue Var 0x1eaf9c7e120 'asclen' 'int'
|   | | | `-IntegerLiteral 0x1eaf9c7c300 <col:19> 'int' 0
|   | | `-BinaryOperator 0x1eaf9c7c390 <col:22, col:26> 'int' '='
|   | |   |-DeclRefExpr 0x1eaf9c7c348 <col:22> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   | |   `-IntegerLiteral 0x1eaf9c7c368 <col:26> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1eaf9c7c440 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x1eaf9c7c410 <col:29> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1eaf9c7c3d0 <col:29> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   | | `-ImplicitCastExpr 0x1eaf9c7c428 <col:33> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1eaf9c7c3f0 <col:33> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1eaf9c7c8e0 <col:43, line:206:5>
|   |   |-BinaryOperator 0x1eaf9c7c6a0 <line:202:9, col:55> 'int' '='
|   |   | |-DeclRefExpr 0x1eaf9c7c460 <col:9> 'int' lvalue Var 0x1eaf9c7e220 'j' 'int'
|   |   | `-CallExpr 0x1eaf9c7c668 <col:13, col:55> 'int'
|   |   |   |-ImplicitCastExpr 0x1eaf9c7c650 <col:13> 'int (*)(char *, const unsigned char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1eaf9c7c480 <col:13> 'int (char *, const unsigned char *, int)' Function 0x1eaf9c7fbf0 'bmp_to_utf8' 'int (char *, const unsigned char *, int)'
|   |   |   |-BinaryOperator 0x1eaf9c7c510 <col:25, col:32> 'char *' '+'
|   |   |   | |-ImplicitCastExpr 0x1eaf9c7c4e0 <col:25> 'char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1eaf9c7c4a0 <col:25> 'char *' lvalue Var 0x1eaf9c7e2d8 'asctmp' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1eaf9c7c4f8 <col:32> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1eaf9c7c4c0 <col:32> 'int' lvalue Var 0x1eaf9c7e120 'asclen' 'int'
|   |   |   |-BinaryOperator 0x1eaf9c7c5a0 <col:40, col:44> 'const unsigned char *' '+'
|   |   |   | |-ImplicitCastExpr 0x1eaf9c7c570 <col:40> 'const unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1eaf9c7c530 <col:40> 'const unsigned char *' lvalue ParmVar 0x1eaf9c7def0 'uni' 'const unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x1eaf9c7c588 <col:44> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1eaf9c7c550 <col:44> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   |   |   `-BinaryOperator 0x1eaf9c7c630 <col:47, col:54> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x1eaf9c7c600 <col:47> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1eaf9c7c5c0 <col:47> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   |   |     `-ImplicitCastExpr 0x1eaf9c7c618 <col:54> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1eaf9c7c5e0 <col:54> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   |   |-IfStmt 0x1eaf9c7c830 <line:203:9, line:204:26> has_else
|   |   | |-BinaryOperator 0x1eaf9c7c720 <line:203:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1eaf9c7c708 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1eaf9c7c6c0 <col:13> 'int' lvalue Var 0x1eaf9c7e220 'j' 'int'
|   |   | | `-IntegerLiteral 0x1eaf9c7c6e0 <col:18> 'int' 4
|   |   | |-CompoundAssignOperator 0x1eaf9c7c788 <col:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | | |-DeclRefExpr 0x1eaf9c7c740 <col:21> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   |   | | `-IntegerLiteral 0x1eaf9c7c760 <col:26> 'int' 4
|   |   | `-CompoundAssignOperator 0x1eaf9c7c800 <line:204:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x1eaf9c7c7b8 <col:21> 'int' lvalue Var 0x1eaf9c7e1a0 'i' 'int'
|   |   |   `-IntegerLiteral 0x1eaf9c7c7d8 <col:26> 'int' 2
|   |   `-CompoundAssignOperator 0x1eaf9c7c8b0 <line:205:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1eaf9c7c858 <col:9> 'int' lvalue Var 0x1eaf9c7e120 'asclen' 'int'
|   |     `-ImplicitCastExpr 0x1eaf9c7c898 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1eaf9c7c878 <col:19> 'int' lvalue Var 0x1eaf9c7e220 'j' 'int'
|   |-IfStmt 0x1eaf9c7ed20 <line:209:5, line:210:26>
|   | |-BinaryOperator 0x1eaf9c7ec20 <line:209:9, col:51> 'int' '||'
|   | | |-UnaryOperator 0x1eaf9c7c978 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x1eaf9c7c960 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1eaf9c7c940 <col:10> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   | | `-ParenExpr 0x1eaf9c7ec00 <col:20, col:51> 'int'
|   | |   `-BinaryOperator 0x1eaf9c7ebe0 <col:21, col:50> 'int' '||'
|   | |     |-ImplicitCastExpr 0x1eaf9c7eb98 <col:21, col:33> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x1eaf9c7eb80 <col:21, col:33> 'unsigned char' <LValueToRValue>
|   | |     |   `-ArraySubscriptExpr 0x1eaf9c7ca48 <col:21, col:33> 'const unsigned char' lvalue
|   | |     |     |-ImplicitCastExpr 0x1eaf9c7ca30 <col:21> 'const unsigned char *' <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x1eaf9c7c990 <col:21> 'const unsigned char *' lvalue ParmVar 0x1eaf9c7def0 'uni' 'const unsigned char *'
|   | |     |     `-BinaryOperator 0x1eaf9c7ca10 <col:25, col:32> 'int' '-'
|   | |     |       |-ImplicitCastExpr 0x1eaf9c7c9f8 <col:25> 'int' <LValueToRValue>
|   | |     |       | `-DeclRefExpr 0x1eaf9c7c9b0 <col:25> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   | |     |       `-IntegerLiteral 0x1eaf9c7c9d0 <col:32> 'int' 2
|   | |     `-ImplicitCastExpr 0x1eaf9c7ebc8 <col:36, col:50> 'int' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x1eaf9c7ebb0 <col:36, col:50> 'unsigned char' <LValueToRValue>
|   | |         `-ArraySubscriptExpr 0x1eaf9c7eb60 <col:36, col:50> 'const unsigned char' lvalue
|   | |           |-ImplicitCastExpr 0x1eaf9c7eb48 <col:36> 'const unsigned char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x1eaf9c7ca68 <col:36> 'const unsigned char *' lvalue ParmVar 0x1eaf9c7def0 'uni' 'const unsigned char *'
|   | |           `-BinaryOperator 0x1eaf9c7eb28 <col:40, col:49> 'int' '-'
|   | |             |-ImplicitCastExpr 0x1eaf9c7eb10 <col:40> 'int' <LValueToRValue>
|   | |             | `-DeclRefExpr 0x1eaf9c7ca88 <col:40> 'int' lvalue ParmVar 0x1eaf9c7df70 'unilen' 'int'
|   | |             `-IntegerLiteral 0x1eaf9c7caa8 <col:49> 'int' 1
|   | `-BinaryOperator 0x1eaf9c7ed00 <line:210:9, col:26> 'char' '='
|   |   |-ArraySubscriptExpr 0x1eaf9c7ecb0 <col:9, col:22> 'char' lvalue
|   |   | |-ImplicitCastExpr 0x1eaf9c7ec80 <col:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1eaf9c7ec40 <col:9> 'char *' lvalue Var 0x1eaf9c7e2d8 'asctmp' 'char *'
|   |   | `-ImplicitCastExpr 0x1eaf9c7ec98 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1eaf9c7ec60 <col:16> 'int' lvalue Var 0x1eaf9c7e120 'asclen' 'int'
|   |   `-ImplicitCastExpr 0x1eaf9c7ece8 <col:26> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x1eaf9c7ecd0 <col:26> 'int' 0
|   `-ReturnStmt 0x1eaf9c7ed70 <line:212:5, col:12>
|     `-ImplicitCastExpr 0x1eaf9c7ed58 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1eaf9c7ed38 <col:12> 'char *' lvalue Var 0x1eaf9c7e2d8 'asctmp' 'char *'
|-FunctionDecl 0x1eaf9c7ef50 <line:215:1, line:218:1> line:215:5 invalid i2d_PKCS12_bio 'int (int *, int *)'
| |-ParmVarDecl 0x1eaf9c7edf0 <col:20, col:25> col:25 invalid bp 'int *'
| |-ParmVarDecl 0x1eaf9c7ee70 <col:29, col:37> col:37 invalid p12 'int *'
| `-CompoundStmt 0x1eaf9c7f238 <line:216:1, line:218:1>
|-FunctionDecl 0x1eaf9c7f3f0 <line:221:1, line:224:1> line:221:5 invalid i2d_PKCS12_fp 'int (FILE *, int *)'
| |-ParmVarDecl 0x1eaf9c7f258 <col:19, col:25> col:25 used fp 'FILE *'
| |-ParmVarDecl 0x1eaf9c7f2d8 <col:29, col:37> col:37 invalid p12 'int *'
| `-CompoundStmt 0x1eaf9c7f620 <line:222:1, line:224:1>
|-FunctionDecl 0x1eaf9c7f7d0 <line:227:1, line:230:1> line:227:9 invalid d2i_PKCS12_bio 'int *(int *, int **)'
| |-ParmVarDecl 0x1eaf9c7f648 <col:24, col:29> col:29 invalid bp 'int *'
| |-ParmVarDecl 0x1eaf9c7f6f8 <col:33, col:42> col:42 invalid p12 'int **'
| `-CompoundStmt 0x1eaf9c7f9c8 <line:228:1, line:230:1>
`-FunctionDecl 0x1eaf9c80be0 <line:233:1, line:236:1> line:233:9 invalid d2i_PKCS12_fp 'int *(FILE *, int **)'
  |-ParmVarDecl 0x1eaf9c7f9e8 <col:23, col:29> col:29 used fp 'FILE *'
  |-ParmVarDecl 0x1eaf9c7fa70 <col:33, col:42> col:42 invalid p12 'int **'
  `-CompoundStmt 0x1eaf9c80e10 <line:234:1, line:236:1>
