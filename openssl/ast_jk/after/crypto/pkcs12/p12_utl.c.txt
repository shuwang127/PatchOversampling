TranslationUnitDecl 0x12ba293abc8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12ba293b460 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12ba293b160 '__int128'
|-TypedefDecl 0x12ba293b4d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12ba293b180 'unsigned __int128'
|-TypedefDecl 0x12ba293b808 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12ba293b5c0 'struct __NSConstantString_tag'
|   `-Record 0x12ba293b528 '__NSConstantString_tag'
|-TypedefDecl 0x12ba293b878 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x12ba293ada0 'unsigned long long'
|-TypedefDecl 0x12ba293b910 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12ba293b8d0 'char *'
|   `-BuiltinType 0x12ba293ac60 'char'
|-TypedefDecl 0x12ba293b980 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12ba293b8d0 'char *'
|   `-BuiltinType 0x12ba293ac60 'char'
|-TypedefDecl 0x12ba293ba40 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x12ba293ada0 'unsigned long long'
|-TypedefDecl 0x12ba293bab0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x12ba293b8d0 'char *'
|   `-BuiltinType 0x12ba293ac60 'char'
|-FunctionDecl 0x12ba44a6420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x12ba44a64c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x12ba44a6530 <col:21> Implicit
|-FunctionDecl 0x12ba44a6588 prev 0x12ba44a6420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x12ba44a62b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x12ba44a6678 <col:21> Inherited Implicit
|-TypedefDecl 0x12ba44a66b8 prev 0x12ba293b878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x12ba293ada0 'unsigned long long'
|-TypedefDecl 0x12ba44a6760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x12ba44a6730 'size_t' sugar
|   |-Typedef 0x12ba44a66b8 'size_t'
|   `-BuiltinType 0x12ba293ada0 'unsigned long long'
|-TypedefDecl 0x12ba44a67d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x12ba293ad00 'long long'
|-TypedefDecl 0x12ba44a6840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x12ba293ad00 'long long'
|-TypedefDecl 0x12ba44a68b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x12ba293ad40 'unsigned short'
|-TypedefDecl 0x12ba44a6920 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x12ba293ad40 'unsigned short'
|-TypedefDecl 0x12ba44a6990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x12ba293ad40 'unsigned short'
|-TypedefDecl 0x12ba44a6a00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x12ba293acc0 'int'
|-TypedefDecl 0x12ba44a6a70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x12ba293ace0 'long'
|-TypedefDecl 0x12ba44a6ae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x12ba293ad00 'long long'
|-TypedefDecl 0x12ba44a6b70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x12ba44a6b40 '__time64_t' sugar
|   |-Typedef 0x12ba44a6ae0 '__time64_t'
|   `-BuiltinType 0x12ba293ad00 'long long'
|-FunctionDecl 0x12ba44a6ce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x12ba44a6f08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x12ba44dd140 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x12ba44a7048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x12ba44a70c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x12ba44a7138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x12ba44a71b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x12ba44dcee0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x12ba44dd220 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x12ba44dd2e0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x12ba44dd450 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x12ba44dd400 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x12ba44dd3a0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x12ba44dd2c0 'struct threadlocaleinfostruct'
|       `-Record 0x12ba44e9fb0 'threadlocaleinfostruct'
|-TypedefDecl 0x12ba44dd560 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x12ba44dd510 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x12ba44dd4b0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x12ba44dd380 'struct threadmbcinfostruct'
|       `-Record 0x12ba44dd2e0 'threadmbcinfostruct'
|-RecordDecl 0x12ba44dd5b8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x12ba44dd670 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x12ba44dd730 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12ba44dd7c0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x12ba44dd850 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x12ba44dd908 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x12ba44dd8b0 'struct localeinfo_struct' sugar
|   `-RecordType 0x12ba44dd710 'struct localeinfo_struct'
|     `-Record 0x12ba44dd670 'localeinfo_struct'
|-TypedefDecl 0x12ba44dd9e0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x12ba44dd990 'struct localeinfo_struct *'
|   `-ElaboratedType 0x12ba44dd8b0 'struct localeinfo_struct' sugar
|     `-RecordType 0x12ba44dd710 'struct localeinfo_struct'
|       `-Record 0x12ba44dd670 'localeinfo_struct'
|-RecordDecl 0x12ba44dda58 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x12ba44ddb10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12ba44ddb88 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x12ba44ddc48 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x12ba44ddce0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x12ba44ddd50 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x12ba44dde08 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x12ba44dddb0 'struct localerefcount' sugar
|   `-RecordType 0x12ba44ddaf0 'struct localerefcount'
|     `-Record 0x12ba44dda58 'localerefcount'
|-RecordDecl 0x12ba44e9fb0 prev 0x12ba44dd220 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x12ba44ea030 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12ba44ea0a8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x12ba44ea118 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x12ba44ea188 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x12ba44ea1f8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x12ba44ea3b8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x12ba44ea428 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x12ba44ea498 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x12ba44ea508 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x12ba44ea578 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x12ba44ea5e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x12ba44ea640 parent 0x12ba293abc8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x12ba44ea7d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x12ba44ea840 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x12ba44ea8b0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x12ba44ea920 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x12ba44ea9c0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x12ba44eaa30 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x12ba44eab40 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x12ba44eac78 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x12ba44ead28 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x12ba44eacd0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x12ba44dd2c0 'struct threadlocaleinfostruct'
|     `-Record 0x12ba44e9fb0 'threadlocaleinfostruct'
|-RecordDecl 0x12ba44eadc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x12ba44eae80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12ba44eaef8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x12ba44f1020 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x12ba44f1090 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x12ba44f1100 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x12ba44f1170 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x12ba44f11e0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x12ba44f1250 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x12ba44f12c0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x12ba44f1370 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x12ba44f1320 'struct _iobuf' sugar
|   `-RecordType 0x12ba44eae60 'struct _iobuf'
|     `-Record 0x12ba44eadc0 '_iobuf'
|-FunctionDecl 0x12ba44f15a8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x12ba44f1678 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x12ba293ad00 'long long'
|-FunctionDecl 0x12ba44f1858 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba44f16e0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x12ba44f1b50 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12ba44f1930 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x12ba44f19a8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x12ba44f1f00 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x12ba44f1c30 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x12ba44f1cb0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x12ba44f1d30 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x12ba44ec140 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12ba44ebfd0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x12ba44ec370 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x12ba44ec230 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x12ba44ec520 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba44ec440 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x12ba44ec710 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12ba44eca08 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x12ba44ec7e0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x12ba44ec860 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x12ba44ecbc0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba44ecae0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x12ba44ecd70 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba44ecc90 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x12ba44ecf20 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba44ece40 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x12ba44ed0e8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba44ed008 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x12ba44ed278 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12ba44ed5e0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x12ba44ed340 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x12ba44ed438 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x12ba44ed998 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x12ba44ed6c0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x12ba44ed740 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x12ba44ed7b8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x12ba44edb58 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba44eda78 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x12ba44ede20 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x12ba44edc30 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x12ba44edcb0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x12ba44f8090 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12ba44f8488 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x12ba44f8528 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x12ba44f8590 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x12ba44f8608 prev 0x12ba44f8488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x12ba44f8260 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x12ba44f82e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x12ba44f86b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba44f8b30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x12ba44f8860 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x12ba44f88e0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x12ba44f8960 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x12ba44f8e50 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x12ba44f8ef0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x12ba44f8f58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x12ba44f8fd0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x12ba44f4050 prev 0x12ba44f8e50 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12ba44f8c10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x12ba44f8c90 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x12ba44f4148 <col:40> Inherited printf 2 3
|-FunctionDecl 0x12ba44f4310 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12ba44f4190 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x12ba44f4210 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x12ba44f4568 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12ba44f43f0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x12ba44f4468 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x12ba44f4798 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12ba44f4648 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x12ba44f4a90 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x12ba44f4870 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x12ba44f48e8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x12ba44f4f28 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x12ba44f4fc8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12ba44f5060 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x12ba44f50c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x12ba44f5130 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x12ba44f51b8 prev 0x12ba44f4f28 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x12ba44f4b70 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x12ba44f4be8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba44f4c60 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba44f4cd8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x12ba44f56c0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12ba44f52a8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x12ba44f5320 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba44f5398 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba44f5410 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba44f5488 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x12ba44f5b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x12ba44f58b0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x12ba44f5930 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x12ba44f59a8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x12ba44f5c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba44f30e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x12ba44f5d80 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x12ba44f5e00 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x12ba44f5e80 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x12ba44f5ef8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x12ba44f3490 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x12ba44f3530 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x12ba44f3598 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x12ba44f3610 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x12ba44f3678 prev 0x12ba44f3490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x12ba44f32c8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x12ba44f3348 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x12ba44f3858 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x12ba44f3728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba44f3c98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba44f3998 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x12ba44f3a18 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x12ba44f3ab0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba44f3d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba44f7080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12ba44f3e90 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x12ba44f3f10 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x12ba44f7370 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba44f7158 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12ba44f71d8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x12ba44f7250 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba44f76d0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x12ba44f7450 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x12ba44f7528 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x12ba44f7a88 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x12ba44f77a8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x12ba44f7828 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x12ba44f78a8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x12ba44f7ce8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x12ba44f7b68 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x12ba44f90e8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x12ba44f7db8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x12ba44f7e38 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x12ba44f7eb8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x12ba44f9348 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x12ba44f91c8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x12ba44f9808 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x12ba44f98a8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x12ba44f9910 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x12ba44f9978 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x12ba44f99e0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x12ba44f9a68 prev 0x12ba44f9808 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x12ba44f9450 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x12ba44f94c8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba44f9540 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba44f95b8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x12ba44f9c30 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba44f9b50 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x12ba44f9dc0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12ba44f9f48 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12ba44f21f0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x12ba44fa018 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x12ba44f2040 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x12ba44f2518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x12ba44f23d0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x12ba44f25c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba44f27e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba44f2700 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x12ba44f2a00 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x12ba44f28b8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x12ba44f2bb0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba44f2ad0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x12ba44f2e00 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x12ba44f2c88 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x12ba44f2d08 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x12ba44fa0b0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x12ba44fa150 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x12ba44fa1c0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x12ba44fa228 prev 0x12ba44fa0b0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x12ba44f2ee0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x12ba44fa318 <col:40> Inherited printf 1 2
|-FunctionDecl 0x12ba44fa448 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12ba44fa368 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x12ba44fa698 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12ba44fa520 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x12ba44fa598 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x12ba44fa858 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12ba44fa778 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x12ba44faa78 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x12ba44fa930 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x12ba44facc8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12ba44fab50 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x12ba44fabc8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x12ba44fae88 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x12ba44fada8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x12ba4549000 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x12ba44faf60 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x12ba44fafe0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x12ba45491c0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x12ba45490e0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x12ba4549450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x12ba4549370 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x12ba45494f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x12ba45496f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12ba4549618 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x12ba4549880 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12ba4549b28 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x12ba4549bc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x12ba4549c38 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x12ba4549ca0 prev 0x12ba4549b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x12ba4549a10 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x12ba4549e78 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x12ba4549d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba454d280 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba454d048 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x12ba454d0c0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba454d330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba454d558 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12ba454d478 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x12ba454d7a8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba454d630 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x12ba454d6a8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba454db68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x12ba454d940 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x12ba454d9c0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x12ba454dc18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba454de40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12ba454dd60 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x12ba454a088 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x12ba4549f40 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x12ba454a270 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x12ba454a6c0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x12ba454a338 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x12ba454a3b8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x12ba454a438 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x12ba454a4b0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x12ba454ab40 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x12ba454a7b0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba454a828 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba454a8a0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba454a920 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x12ba454af50 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12ba454ac30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba454aca8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba454ad28 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x12ba454b118 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12ba454b038 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x12ba454b4f0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x12ba454b590 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12ba454b5f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x12ba454b670 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x12ba454b6d8 prev 0x12ba454b4f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x12ba454b2b0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x12ba454b330 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x12ba454b8b8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x12ba454b788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba454bca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba454b9c8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x12ba454ba48 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x12ba454bac0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba454bd60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba454c060 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x12ba454bea8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x12ba454bf60 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x12ba454c358 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba454c140 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x12ba454c1c0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x12ba454c238 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba454c7e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12ba454c500 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x12ba454c578 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba454c5f8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x12ba454c8a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba454ce70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba454cae0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x12ba454cb58 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba454cbd8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x12ba454cc50 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba4547f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4548280 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12ba4548068 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x12ba45480e0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba4548160 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x12ba4548618 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4548368 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x12ba45483e0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4548460 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x12ba45484d8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba4548878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x12ba4548918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4548bd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x12ba4548a60 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x12ba4545f00 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x12ba4548ca8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x12ba4548d20 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x12ba4546180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x12ba45460a0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x12ba4546228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba45464e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12ba4546370 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x12ba45463e8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x12ba4546900 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12ba45469a0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x12ba4546a08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12ba4546a70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12ba4546af0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x12ba4546b58 prev 0x12ba4546900 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12ba45465c0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x12ba4546640 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x12ba45466b8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12ba4546c58 <col:40> Inherited printf 2 0
|-FunctionDecl 0x12ba454df80 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x12ba454e020 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x12ba454e088 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12ba454e0f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12ba454e170 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x12ba454e1d8 prev 0x12ba454df80 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x12ba4546ca0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x12ba4546d20 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x12ba4546d98 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12ba454e2d8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x12ba454e538 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x12ba454e320 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x12ba454e3a0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x12ba454e418 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba454e830 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x12ba454e618 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x12ba454e698 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x12ba454e710 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba454eb78 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12ba454ec18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12ba454ec80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12ba454ecf8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x12ba454ed60 prev 0x12ba454eb78 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12ba454e918 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x12ba454e990 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12ba454ee58 <col:40> Inherited printf 1 0
|-FunctionDecl 0x12ba4547048 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x12ba45470e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12ba4547150 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12ba45471c8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x12ba4547230 prev 0x12ba4547048 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x12ba454eea8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x12ba4546f10 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12ba4547328 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x12ba45474f0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12ba4547378 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x12ba45473f0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4547748 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12ba45475d0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x12ba4547648 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4547ca8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12ba4547d48 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12ba4547db0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x12ba4547e18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12ba4547e80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12ba4552fd0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x12ba4553038 prev 0x12ba4547ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12ba45478e8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba4547960 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba45479e0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x12ba4547a58 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x12ba4553228 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x12ba45530f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4553698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12ba4553278 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba45532f0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4553368 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba45533e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x12ba4553460 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4553ad8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12ba4553790 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba4553808 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4553880 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4553900 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x12ba4553978 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4553ea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12ba4553c90 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x12ba4553d08 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4553d88 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x12ba4553f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4555460 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12ba45551b0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x12ba4555228 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba45552a8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x12ba4555320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x12ba4555520 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4555918 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12ba4555668 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba45556e0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4555760 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x12ba45557d8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4555cd8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x12ba4555a08 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x12ba4555a88 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x12ba4555b00 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba454f030 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x12ba454f0d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12ba454f138 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x12ba454f1b0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x12ba454f218 prev 0x12ba454f030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x12ba4555e80 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x12ba4555f00 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x12ba454f3f8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x12ba454f2c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba454f820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12ba454f8c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12ba454f928 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12ba454f990 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12ba454fa10 <col:94> Implicit printf 2 0
|-FunctionDecl 0x12ba454fa78 prev 0x12ba454f820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12ba454f508 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x12ba454f588 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x12ba454f600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x12ba454fc60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x12ba454fb30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4553fe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x12ba4554080 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12ba45540e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12ba4554150 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12ba45541d0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x12ba4554238 prev 0x12ba4553fe0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x12ba454fcb0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x12ba454fd30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x12ba454fda8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12ba4554338 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x12ba4554500 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12ba4554388 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x12ba4554400 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba45547f8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12ba45545e0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba4554658 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba45546d8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x12ba4554b90 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12ba45548e0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba4554958 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba45549d8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x12ba4554a50 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4554df8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12ba4554c78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x12ba4554cf8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x12ba4557010 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12ba4554ed8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x12ba4557300 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12ba45570e8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x12ba4557160 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba45571e0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x12ba45575f8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x12ba45573e0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12ba4557460 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x12ba45574d8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4557858 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12ba45576e0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x12ba4557758 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4557be8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12ba4557938 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x12ba45579b0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4557a30 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x12ba4557aa8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4557db8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12ba4557cd8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x12ba4550fb0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12ba4557e90 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x12ba4557f08 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4551170 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12ba4551090 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x12ba4551300 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12ba4551548 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba45513d0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x12ba4551448 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba45517a0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4551628 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x12ba45516a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba45519f8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4551880 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x12ba45518f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba4551da8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4551ad8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x12ba4551b50 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba4551bc8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba45500c0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4551e90 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x12ba4551f08 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba454ffa0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba45503b8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba45501a8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x12ba4550220 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba4550298 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba45506b0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4550498 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x12ba4550518 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x12ba4550590 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba45509a8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4550790 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12ba4550810 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x12ba4550888 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba4550ca0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4550a88 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12ba4550b08 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x12ba4550b80 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba4552120 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4550d80 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12ba4550e00 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x12ba4550e78 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba4550ef0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba45524b8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4552208 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12ba4552288 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x12ba4552300 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba4552378 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4552850 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba45525a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12ba4552620 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x12ba4552698 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba4552710 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4552ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4552a00 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba4552a80 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x12ba4552af8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba4552da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba455a350 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4552ee8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455a040 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455a0c0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x12ba455a138 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba455a6f0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba455a440 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455a4b8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455a538 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x12ba455a5b0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba455ac40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba455a8e0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455a960 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x12ba455a9d8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12ba455aa50 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x12ba455ad00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba455f2c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba455ae48 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455aec0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455af40 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x12ba455afb8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba455f090 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba455f708 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba455f3c0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455f438 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455f4b8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x12ba455f530 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba455f5a8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba455f978 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba455f800 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x12ba455f878 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba455fbd0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba455fa58 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x12ba455fad0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba455fec0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba455fcb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x12ba455fd28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba455fda0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba455c190 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba455ffa8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x12ba4560020 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba455c070 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba455c5e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba455c338 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455c3b0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455c430 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x12ba455c4a8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba455c6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba455caa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba455c7f0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455c868 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455c8e8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x12ba455c960 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba455d070 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba455cb90 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455cc08 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455cc80 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455cd00 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x12ba455cd78 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba455d5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba455d268 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455d2e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455d360 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x12ba455d3d8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12ba455d450 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x12ba455d678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba455daf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba455d7c8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455d840 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455d8c0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x12ba455d938 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba455d9b0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba455e0e0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba455dbf0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x12ba455dc68 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455dce0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba455dd60 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x12ba455ddd8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba455de50 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba455e4a0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x12ba455e1d8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12ba455e250 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x12ba455e2d0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x12ba455e710 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x12ba455e5a0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x12ba455e928 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x12ba455ec08 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x12ba455e9f0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x12ba455ea68 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x12ba455ee50 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x12ba455ece0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x12ba4558020 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x12ba455ef20 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x12ba45581a8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x12ba45583e0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x12ba4558270 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x12ba45582e8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x12ba4558590 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x12ba45584b8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x12ba4558838 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x12ba4558660 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x12ba45586d8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x12ba4558be0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x12ba4558910 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x12ba4558990 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x12ba4558a08 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x12ba4558ee0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x12ba4558cc0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x12ba4558d38 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x12ba45591e8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x12ba4558fb8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x12ba4559040 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x12ba45594f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x12ba4559380 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x12ba4559598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4559858 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x12ba45596d8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x12ba4559b60 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4559928 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x12ba45599a0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba4559db0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4559c38 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x12ba4559cb0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba455b050 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12ba4559e88 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba455b200 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12ba455b120 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba455b3b0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12ba455b2d0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba455b748 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba455b480 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x12ba455b4f8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba455b570 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba455ba38 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba455b828 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x12ba455b8a0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba455b918 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba455bd28 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba455bb18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12ba455bb90 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba455bc08 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba45610b0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba455be08 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x12ba455be80 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba455bef8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba45613b0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4561190 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4561208 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4561600 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4561488 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4561500 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4561850 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba45616d8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4561750 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4561aa0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4561928 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba45619a0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4561e58 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4561b78 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x12ba4561bf0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba4561c68 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba45622d0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4561f38 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x12ba4561fb0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4562028 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba45620c0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4562688 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba45623b8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12ba4562430 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba45624a8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4562978 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4562768 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x12ba45627e0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4562858 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4562c68 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4562a58 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba4562ad0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba4562b48 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba4562ff0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4562d48 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba4562dc0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4562e38 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4562eb0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4563480 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba45630f8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba4563170 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba45631e8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba4563260 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba4563988 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4563568 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba45635e0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4563658 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba45636d0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4563748 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4563d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4563b38 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12ba4563bb0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4563c28 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12ba4563e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4564310 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4564000 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12ba45640e0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4564158 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba45641d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x12ba45643d0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4564688 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4564510 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x12ba4564588 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba4564840 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12ba4564760 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba4564b20 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4564910 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12ba4564988 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4564a00 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4564d78 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4564c00 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4564c78 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba456bf80 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4564e50 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba4564ec8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba4564f40 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba456c308 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba456c060 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba456c0d8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456c150 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba456c1c8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba456c4d0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12ba456c3f0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba456c718 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba456c5a0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba456c618 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba456ca20 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba456c7f0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba456c868 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba456cc70 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba456caf8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba456cb70 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba456cec0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba456cd48 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba456cdc0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba4567228 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4566f58 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4566fd0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba4567048 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4567518 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4567308 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4567380 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba45673f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4567808 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba45675f8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4567670 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba45676e8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4567bc8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba45678e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12ba4567960 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba45679d8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba456cf90 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4567ca8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12ba4567d20 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4567d98 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba456d280 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba456d070 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12ba456d0e8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba456d160 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba456d6d0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba456d360 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12ba456d3d8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba456d450 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba456d4c8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba456da60 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba456d7b8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x12ba456d830 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba456d8a8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba456d920 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba456ddf0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba456db48 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x12ba456dbc0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba456dc38 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba456dcb0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba456e2b0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba456ded8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba456dfa0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456e018 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba456e090 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba456e640 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba456e398 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba456e410 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456e488 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba456e500 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba456e9d0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba456e728 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba456e7a0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456e818 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba456e890 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba456eed8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba456eab8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba456eb30 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456eba8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba456ec20 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba456ec98 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba45692b8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4568f78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba4568ff0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4569068 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba45690e0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba4569158 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba45696e8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba45693a8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba4569420 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4569498 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4569510 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba4569588 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4569950 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba45697d8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4569850 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba4569ba0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4569a28 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4569aa0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba4569e88 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4569c78 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4569cf0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba4569d68 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba456f348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba456f0a0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba456f118 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456f190 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba456f208 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba456f408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba456f978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba456f550 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba456f5c8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456f640 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456f6b8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba456f730 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba456feb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba456fb70 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba456fbe8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456fc60 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba456fcd8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12ba456fd50 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x12ba4567f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4568550 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4568088 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12ba4568100 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4568178 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba45681f0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4568268 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba45682e0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4568a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4568818 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12ba4568890 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x12ba4568b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12ba4568c18 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12ba4570228 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4568ed0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12ba456ffd0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4570048 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x12ba45702e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12ba45703f8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12ba4570998 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba45706b8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12ba4570730 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba45707a8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x12ba4570a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12ba4570b70 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12ba45711e0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4570e30 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12ba4570ea8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4570f20 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12ba4570fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x12ba45712a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12ba45713c0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12ba45716c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x12ba45714e8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x12ba4571560 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba45715d8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x12ba456b210 <line:37:1, line:44:1>
|   |-DeclStmt 0x12ba4571810 <line:38:5, col:21>
|   | `-VarDecl 0x12ba45717a8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x12ba45718a8 <line:39:5, col:13>
|   | `-VarDecl 0x12ba4571840 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x12ba4571c00 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x12ba4571be8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12ba4571b00 <col:34> '<builtin fn type>' Function 0x12ba4571998 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x12ba4571b38 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x12ba45717a8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x12ba4571b70 <col:29> 'const wchar_t *' lvalue ParmVar 0x12ba45715d8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x12ba4571ec0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x12ba4571c30 <col:5> 'int' lvalue Var 0x12ba4571840 '_Ret' 'int'
|   | `-CallExpr 0x12ba4571e00 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x12ba4571de8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12ba4571c68 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12ba456eed8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x12ba4571e48 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12ba4571c88 <col:27> 'wchar_t *' lvalue ParmVar 0x12ba45714e8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x12ba4571e60 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12ba4571ca8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12ba4571560 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x12ba4571e78 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12ba4571cc8 <col:44> 'const wchar_t *' lvalue ParmVar 0x12ba45715d8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x12ba4571e90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x12ba4571d50 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x12ba4571d28 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x12ba4571ce8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x12ba4571ea8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12ba4571d70 <col:59> 'va_list':'char *' lvalue Var 0x12ba45717a8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x12ba456b1a0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x12ba456b188 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12ba456b0d8 <col:34> '<builtin fn type>' Function 0x12ba456af70 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x12ba456b110 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x12ba45717a8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x12ba456b200 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x12ba456b1e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12ba456b1c8 <col:12> 'int' lvalue Var 0x12ba4571840 '_Ret' 'int'
|-FunctionDecl 0x12ba4571998 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x12ba4571a38 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x12ba4571aa8 <col:34> Implicit
|-FunctionDecl 0x12ba456af70 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x12ba456b010 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x12ba456b080 <col:34> Implicit
|-FunctionDecl 0x12ba456b508 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x12ba456b260 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x12ba456b2d8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456b350 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba456b3c8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x12ba456b7f0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x12ba456b7e0 <line:51:5, col:62>
|     `-CallExpr 0x12ba456b720 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x12ba456b708 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12ba456b5e0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12ba456eed8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x12ba456b768 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12ba456b600 <col:27> 'wchar_t *' lvalue ParmVar 0x12ba456b260 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x12ba456b780 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x12ba456b620 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12ba456b2d8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x12ba456b798 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12ba456b640 <col:44> 'const wchar_t *' lvalue ParmVar 0x12ba456b350 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x12ba456b7b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x12ba456b6c8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x12ba456b6a0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x12ba456b660 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x12ba456b7c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x12ba456b6e8 <col:59> 'va_list':'char *' lvalue ParmVar 0x12ba456b3c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x12ba456ba90 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x12ba456b818 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x12ba456b890 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba456b908 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba456b980 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x12ba45770d8 <line:61:1, line:68:1>
|   |-DeclStmt 0x12ba456bbe0 <line:62:5, col:21>
|   | `-VarDecl 0x12ba456bb78 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x12ba456bc78 <line:63:5, col:13>
|   | `-VarDecl 0x12ba456bc10 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x12ba456bd20 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x12ba456bd08 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12ba456bc90 <col:34> '<builtin fn type>' Function 0x12ba4571998 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x12ba456bcb0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x12ba456bb78 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x12ba456bce8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x12ba456b980 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x12ba456bf20 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x12ba456bd50 <col:5> 'int' lvalue Var 0x12ba456bc10 '_Ret' 'int'
|   | `-CallExpr 0x12ba456be60 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x12ba456be48 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12ba456bd88 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12ba456eed8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x12ba456bea8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12ba456bda8 <col:27> 'wchar_t *' lvalue ParmVar 0x12ba456b818 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x12ba456bec0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12ba456bdc8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12ba456b890 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x12ba456bed8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12ba456bde8 <col:44> 'const wchar_t *' lvalue ParmVar 0x12ba456b908 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x12ba456bef0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12ba456be08 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x12ba456b980 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x12ba456bf08 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12ba456be28 <col:64> 'va_list':'char *' lvalue Var 0x12ba456bb78 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x12ba4577068 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x12ba4577050 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12ba456bf40 <col:34> '<builtin fn type>' Function 0x12ba456af70 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x12ba4577030 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x12ba456bb78 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x12ba45770c8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x12ba45770b0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12ba4577090 <col:12> 'int' lvalue Var 0x12ba456bc10 '_Ret' 'int'
|-FunctionDecl 0x12ba4577468 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x12ba4577128 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x12ba45771a0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4577218 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4577290 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12ba4577308 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x12ba45776f0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x12ba45776e0 <line:75:5, col:67>
|     `-CallExpr 0x12ba4577620 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x12ba4577608 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12ba4577548 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12ba456eed8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x12ba4577668 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12ba4577568 <col:27> 'wchar_t *' lvalue ParmVar 0x12ba4577128 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x12ba4577680 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x12ba4577588 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12ba45771a0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x12ba4577698 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12ba45775a8 <col:44> 'const wchar_t *' lvalue ParmVar 0x12ba4577218 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x12ba45776b0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x12ba45775c8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x12ba4577290 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x12ba45776c8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x12ba45775e8 <col:64> 'va_list':'char *' lvalue ParmVar 0x12ba4577308 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x12ba4577938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12ba4577718 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x12ba4577790 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x12ba4577b88 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12ba4577a10 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4577a88 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4577e70 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12ba4577c60 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4577cd8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12ba4577d50 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12ba4576198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4576020 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x12ba4576098 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12ba4576248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4576658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4576448 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x12ba45764c0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4576538 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba4576710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba45769c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4576850 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x12ba45768c8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba4576cb0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4576aa0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12ba4576b18 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4576b90 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba45780b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4576e50 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12ba4576ec8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12ba4578160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4578638 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4578360 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12ba45783d8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4578450 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba45786f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba45789a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4578830 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x12ba45788a8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba4578c90 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4578a80 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12ba4578af8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4578b70 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba4579138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4578e30 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12ba4578ea8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4578f20 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12ba45791f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4579770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba45793f0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12ba4579468 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba45794e0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba4579558 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba4579830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4579b80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba4579970 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12ba45799e8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba4579a60 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba4579f08 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4579c60 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12ba4579cd8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4579d50 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba4579dc8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba45751c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x12ba45750e0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12ba4575268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba45755e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4575468 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12ba45754e0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12ba4575690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba45758b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12ba45757d0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x12ba4575af8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12ba4575980 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12ba45759f8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12ba4575df8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x12ba4575bd8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x12ba4575c50 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x12ba457a208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12ba4575f90 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12ba457a060 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x12ba457a2b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba457a6c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12ba457a400 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x12ba457a478 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x12ba457a4f0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x12ba457ab20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x12ba457a860 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12ba457a8d8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x12ba457a950 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x12ba457abd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4573038 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x12ba457ad20 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x12ba457ad98 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12ba457ae10 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x12ba457ae88 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x12ba4573290 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x12ba4573120 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x12ba45734d0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12ba4573360 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x12ba45733d8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x12ba4573688 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x12ba45735a8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x12ba4573978 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x12ba4573758 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x12ba45737d0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x12ba4573be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x12ba4573b10 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x12ba4573c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12ba4573ea8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x12ba4573dd0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x12ba45821d8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x12ba4573f78 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x12ba45820e0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x12ba4582420 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x12ba45822b0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x12ba4582328 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x12ba45825d0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12ba45824f8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x12ba4582778 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12ba45826a0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x12ba4582928 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba4582848 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x12ba4582ad8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12ba45829f8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x12ba4582e50 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12ba4582bb0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x12ba4582c28 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4582ca0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba4582d18 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x12ba457e270 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12ba4582f40 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x12ba4582fb8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba4583030 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba457e0a0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba457e118 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x12ba457e580 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x12ba457e360 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12ba457e3e0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x12ba457e460 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x12ba457e740 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x12ba457e660 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x12ba457ea30 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x12ba457e810 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x12ba457e890 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x12ba457e910 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x12ba457ebf0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x12ba457eb10 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x12ba457ef68 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12ba457ecc8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x12ba457ed40 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12ba457edb8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12ba457ee30 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x12ba457c1f8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12ba457c080 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x12ba457c0f8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x12ba457c530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x12ba457c3b0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x12ba457c430 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x12ba457c5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x12ba457c898 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12ba457c938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x12ba457cc78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x12ba457cb00 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x12ba457cb80 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x12ba457cd28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x12ba457f0b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12ba457f150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x12ba457f3f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x12ba457f310 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x12ba457f498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x12ba457f718 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12ba457f7b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x12ba457fa60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x12ba457f980 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x12ba457fb08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x12ba457fde8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x12ba457fd08 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x12ba457fe90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x12ba4581248 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12ba45810d0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x12ba4581148 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x12ba45812f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x12ba45815b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12ba4581658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x12ba4581ac0 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:16:1, line:39:1> line:16:16 used OPENSSL_asc2uni 'unsigned char *(const char *, int, unsigned char **, int *)'
| |-ParmVarDecl 0x12ba4581780 <col:32, col:44> col:44 used asc 'const char *'
| |-ParmVarDecl 0x12ba4581800 <col:49, col:53> col:53 used asclen 'int'
| |-ParmVarDecl 0x12ba45818e8 <line:17:32, col:48> col:48 used uni 'unsigned char **'
| |-ParmVarDecl 0x12ba4581968 <col:53, col:58> col:58 used unilen 'int *'
| `-CompoundStmt 0x12ba457bf30 <line:18:1, line:39:1>
|   |-DeclStmt 0x12ba4581cb0 <line:19:5, col:16>
|   | |-VarDecl 0x12ba4581bb0 <col:5, col:9> col:9 used ulen 'int'
|   | `-VarDecl 0x12ba4581c30 <col:5, col:15> col:15 used i 'int'
|   |-DeclStmt 0x12ba4581d48 <line:20:5, col:26>
|   | `-VarDecl 0x12ba4581ce0 <col:5, col:20> col:20 used unitmp 'unsigned char *'
|   |-IfStmt 0x12ba4582088 <line:22:5, line:23:28>
|   | |-BinaryOperator 0x12ba4581dd8 <line:22:9, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x12ba4581dc0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba4581d60 <col:9> 'int' lvalue ParmVar 0x12ba4581800 'asclen' 'int'
|   | | `-UnaryOperator 0x12ba4581da8 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x12ba4581d80 <col:20> 'int' 1
|   | `-BinaryOperator 0x12ba4582068 <line:23:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x12ba4581df8 <col:9> 'int' lvalue ParmVar 0x12ba4581800 'asclen' 'int'
|   |   `-ImplicitCastExpr 0x12ba4582050 <col:18, col:28> 'int' <IntegralCast>
|   |     `-CallExpr 0x12ba4582010 <col:18, col:28> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x12ba4581ff8 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12ba4581f60 <col:18> 'unsigned long long (const char *)' Function 0x12ba4581e50 'strlen' 'unsigned long long (const char *)'
|   |       `-ImplicitCastExpr 0x12ba4582038 <col:25> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x12ba4581f98 <col:25> 'const char *' lvalue ParmVar 0x12ba4581780 'asc' 'const char *'
|   |-BinaryOperator 0x12ba457b150 <line:24:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x12ba45820a0 <col:5> 'int' lvalue Var 0x12ba4581bb0 'ulen' 'int'
|   | `-BinaryOperator 0x12ba457b130 <col:12, col:25> 'int' '+'
|   |   |-BinaryOperator 0x12ba457b0e8 <col:12, col:21> 'int' '*'
|   |   | |-ImplicitCastExpr 0x12ba457b0d0 <col:12> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12ba457b088 <col:12> 'int' lvalue ParmVar 0x12ba4581800 'asclen' 'int'
|   |   | `-IntegerLiteral 0x12ba457b0a8 <col:21> 'int' 2
|   |   `-IntegerLiteral 0x12ba457b108 <col:25> 'int' 2
|   |-IfStmt 0x12ba457b558 <line:25:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x12ba457b488 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:25:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x12ba457b3c8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:25:9, col:39> 'unsigned char *'
|   | | | `-BinaryOperator 0x12ba457b3a8 <col:10, col:38> 'unsigned char *' '='
|   | | |   |-DeclRefExpr 0x12ba457b170 <col:10> 'unsigned char *' lvalue Var 0x12ba4581ce0 'unitmp' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x12ba457b390 <col:19, col:38> 'unsigned char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x12ba457b350 <col:19, col:38> 'int'
|   | | |       |-ImplicitCastExpr 0x12ba457b338 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x12ba457b2c8 <col:19> 'int ()' Function 0x12ba457b200 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x12ba457b378 <col:34> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x12ba457b2e8 <col:34> 'int' lvalue Var 0x12ba4581bb0 'ulen' 'int'
|   | | `-ImplicitCastExpr 0x12ba457b470 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x12ba457b450 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x12ba457b428 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x12ba457b3e8 <col:26> 'int' 0
|   | `-ReturnStmt 0x12ba457b548 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:26:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x12ba457b530 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x12ba457b510 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x12ba457b4e8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x12ba457b4a8 <col:26> 'int' 0
|   |-ForStmt 0x12ba457ba50 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:27:5, line:30:5>
|   | |-BinaryOperator 0x12ba457b5d0 <line:27:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x12ba457b570 <col:10> 'int' lvalue Var 0x12ba4581c30 'i' 'int'
|   | | `-IntegerLiteral 0x12ba457b5a8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12ba457b6a8 <col:17, col:28> 'int' '<'
|   | | |-ImplicitCastExpr 0x12ba457b690 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba457b5f0 <col:17> 'int' lvalue Var 0x12ba4581c30 'i' 'int'
|   | | `-BinaryOperator 0x12ba457b670 <col:21, col:28> 'int' '-'
|   | |   |-ImplicitCastExpr 0x12ba457b658 <col:21> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x12ba457b610 <col:21> 'int' lvalue Var 0x12ba4581bb0 'ulen' 'int'
|   | |   `-IntegerLiteral 0x12ba457b630 <col:28> 'int' 2
|   | |-CompoundAssignOperator 0x12ba457b710 <col:31, col:36> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x12ba457b6c8 <col:31> 'int' lvalue Var 0x12ba4581c30 'i' 'int'
|   | | `-IntegerLiteral 0x12ba457b6e8 <col:36> 'int' 2
|   | `-CompoundStmt 0x12ba457ba30 <col:39, line:30:5>
|   |   |-BinaryOperator 0x12ba457b810 <line:28:9, col:21> 'unsigned char' '='
|   |   | |-ArraySubscriptExpr 0x12ba457b7b0 <col:9, col:17> 'unsigned char' lvalue
|   |   | | |-ImplicitCastExpr 0x12ba457b780 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12ba457b740 <col:9> 'unsigned char *' lvalue Var 0x12ba4581ce0 'unitmp' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x12ba457b798 <col:16> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x12ba457b760 <col:16> 'int' lvalue Var 0x12ba4581c30 'i' 'int'
|   |   | `-ImplicitCastExpr 0x12ba457b7f8 <col:21> 'unsigned char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x12ba457b7d0 <col:21> 'int' 0
|   |   `-BinaryOperator 0x12ba457ba10 <line:29:9, col:35> 'unsigned char' '='
|   |     |-ArraySubscriptExpr 0x12ba457b8e8 <col:9, col:21> 'unsigned char' lvalue
|   |     | |-ImplicitCastExpr 0x12ba457b8d0 <col:9> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12ba457b830 <col:9> 'unsigned char *' lvalue Var 0x12ba4581ce0 'unitmp' 'unsigned char *'
|   |     | `-BinaryOperator 0x12ba457b8b0 <col:16, col:20> 'int' '+'
|   |     |   |-ImplicitCastExpr 0x12ba457b898 <col:16> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x12ba457b850 <col:16> 'int' lvalue Var 0x12ba4581c30 'i' 'int'
|   |     |   `-IntegerLiteral 0x12ba457b870 <col:20> 'int' 1
|   |     `-ImplicitCastExpr 0x12ba457b9f8 <col:25, col:35> 'unsigned char' <IntegralCast>
|   |       `-ImplicitCastExpr 0x12ba457b9e0 <col:25, col:35> 'char' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x12ba457b9c0 <col:25, col:35> 'const char' lvalue
|   |           |-ImplicitCastExpr 0x12ba457b9a8 <col:25> 'const char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x12ba457b908 <col:25> 'const char *' lvalue ParmVar 0x12ba4581780 'asc' 'const char *'
|   |           `-BinaryOperator 0x12ba457b988 <col:29, col:34> 'int' '>>'
|   |             |-ImplicitCastExpr 0x12ba457b970 <col:29> 'int' <LValueToRValue>
|   |             | `-DeclRefExpr 0x12ba457b928 <col:29> 'int' lvalue Var 0x12ba4581c30 'i' 'int'
|   |             `-IntegerLiteral 0x12ba457b948 <col:34> 'int' 1
|   |-BinaryOperator 0x12ba457bba0 <line:32:5, col:24> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x12ba457bb40 <col:5, col:20> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x12ba457bb28 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba457ba88 <col:5> 'unsigned char *' lvalue Var 0x12ba4581ce0 'unitmp' 'unsigned char *'
|   | | `-BinaryOperator 0x12ba457bb08 <col:12, col:19> 'int' '-'
|   | |   |-ImplicitCastExpr 0x12ba457baf0 <col:12> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x12ba457baa8 <col:12> 'int' lvalue Var 0x12ba4581bb0 'ulen' 'int'
|   | |   `-IntegerLiteral 0x12ba457bac8 <col:19> 'int' 2
|   | `-ImplicitCastExpr 0x12ba457bb88 <col:24> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x12ba457bb60 <col:24> 'int' 0
|   |-BinaryOperator 0x12ba457bcd8 <line:33:5, col:24> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x12ba457bc78 <col:5, col:20> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x12ba457bc60 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba457bbc0 <col:5> 'unsigned char *' lvalue Var 0x12ba4581ce0 'unitmp' 'unsigned char *'
|   | | `-BinaryOperator 0x12ba457bc40 <col:12, col:19> 'int' '-'
|   | |   |-ImplicitCastExpr 0x12ba457bc28 <col:12> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x12ba457bbe0 <col:12> 'int' lvalue Var 0x12ba4581bb0 'ulen' 'int'
|   | |   `-IntegerLiteral 0x12ba457bc00 <col:19> 'int' 1
|   | `-ImplicitCastExpr 0x12ba457bcc0 <col:24> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x12ba457bc98 <col:24> 'int' 0
|   |-IfStmt 0x12ba457bdd8 <line:34:5, line:35:19>
|   | |-ImplicitCastExpr 0x12ba457bd18 <line:34:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x12ba457bcf8 <col:9> 'int *' lvalue ParmVar 0x12ba4581968 'unilen' 'int *'
|   | `-BinaryOperator 0x12ba457bdb8 <line:35:9, col:19> 'int' '='
|   |   |-UnaryOperator 0x12ba457bd68 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x12ba457bd50 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12ba457bd30 <col:10> 'int *' lvalue ParmVar 0x12ba4581968 'unilen' 'int *'
|   |   `-ImplicitCastExpr 0x12ba457bda0 <col:19> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12ba457bd80 <col:19> 'int' lvalue Var 0x12ba4581bb0 'ulen' 'int'
|   |-IfStmt 0x12ba457bed0 <line:36:5, line:37:16>
|   | |-ImplicitCastExpr 0x12ba457be10 <line:36:9> 'unsigned char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x12ba457bdf0 <col:9> 'unsigned char **' lvalue ParmVar 0x12ba45818e8 'uni' 'unsigned char **'
|   | `-BinaryOperator 0x12ba457beb0 <line:37:9, col:16> 'unsigned char *' '='
|   |   |-UnaryOperator 0x12ba457be60 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x12ba457be48 <col:10> 'unsigned char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12ba457be28 <col:10> 'unsigned char **' lvalue ParmVar 0x12ba45818e8 'uni' 'unsigned char **'
|   |   `-ImplicitCastExpr 0x12ba457be98 <col:16> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12ba457be78 <col:16> 'unsigned char *' lvalue Var 0x12ba4581ce0 'unitmp' 'unsigned char *'
|   `-ReturnStmt 0x12ba457bf20 <line:38:5, col:12>
|     `-ImplicitCastExpr 0x12ba457bf08 <col:12> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x12ba457bee8 <col:12> 'unsigned char *' lvalue Var 0x12ba4581ce0 'unitmp' 'unsigned char *'
|-FunctionDecl 0x12ba4581e50 <line:23:18> col:18 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x12ba4581ef0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x12ba4583200 <line:41:1, line:59:1> line:41:7 used OPENSSL_uni2asc 'char *(const unsigned char *, int)'
| |-ParmVarDecl 0x12ba457bfb0 <col:23, col:44> col:44 used uni 'const unsigned char *'
| |-ParmVarDecl 0x12ba45830f0 <col:49, col:53> col:53 used unilen 'int'
| `-CompoundStmt 0x12ba4584058 <line:42:1, line:59:1>
|   |-DeclStmt 0x12ba45833e0 <line:43:5, col:18>
|   | |-VarDecl 0x12ba45832e0 <col:5, col:9> col:9 used asclen 'int'
|   | `-VarDecl 0x12ba4583360 <col:5, col:17> col:17 used i 'int'
|   |-DeclStmt 0x12ba4583478 <line:44:5, col:17>
|   | `-VarDecl 0x12ba4583410 <col:5, col:11> col:11 used asctmp 'char *'
|   |-IfStmt 0x12ba45835c0 <line:46:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x12ba45834f0 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:46:9, col:18> 'int' '&'
|   | | |-ImplicitCastExpr 0x12ba45834d8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba4583490 <col:9> 'int' lvalue ParmVar 0x12ba45830f0 'unilen' 'int'
|   | | `-IntegerLiteral 0x12ba45834b0 <col:18> 'int' 1
|   | `-ReturnStmt 0x12ba45835b0 <line:47:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x12ba4583598 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x12ba4583578 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x12ba4583550 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x12ba4583510 <col:26> 'int' 0
|   |-BinaryOperator 0x12ba4583690 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:48:5, col:23> 'int' '='
|   | |-DeclRefExpr 0x12ba45835d8 <col:5> 'int' lvalue Var 0x12ba45832e0 'asclen' 'int'
|   | `-BinaryOperator 0x12ba4583670 <col:14, col:23> 'int' '/'
|   |   |-ImplicitCastExpr 0x12ba4583658 <col:14> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12ba4583610 <col:14> 'int' lvalue ParmVar 0x12ba45830f0 'unilen' 'int'
|   |   `-IntegerLiteral 0x12ba4583630 <col:23> 'int' 2
|   |-IfStmt 0x12ba4583860 <line:50:5, line:51:15>
|   | |-BinaryOperator 0x12ba4583808 <line:50:9, col:34> 'int' '||'
|   | | |-UnaryOperator 0x12ba45836e8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x12ba45836d0 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12ba45836b0 <col:10> 'int' lvalue ParmVar 0x12ba45830f0 'unilen' 'int'
|   | | `-ImplicitCastExpr 0x12ba45837f0 <col:20, col:34> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x12ba45837d8 <col:20, col:34> 'unsigned char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x12ba45837b8 <col:20, col:34> 'const unsigned char' lvalue
|   | |       |-ImplicitCastExpr 0x12ba45837a0 <col:20> 'const unsigned char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x12ba4583700 <col:20> 'const unsigned char *' lvalue ParmVar 0x12ba457bfb0 'uni' 'const unsigned char *'
|   | |       `-BinaryOperator 0x12ba4583780 <col:24, col:33> 'int' '-'
|   | |         |-ImplicitCastExpr 0x12ba4583768 <col:24> 'int' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x12ba4583720 <col:24> 'int' lvalue ParmVar 0x12ba45830f0 'unilen' 'int'
|   | |         `-IntegerLiteral 0x12ba4583740 <col:33> 'int' 1
|   | `-UnaryOperator 0x12ba4583848 <line:51:9, col:15> 'int' postfix '++'
|   |   `-DeclRefExpr 0x12ba4583828 <col:9> 'int' lvalue Var 0x12ba45832e0 'asclen' 'int'
|   |-UnaryOperator 0x12ba4583898 <line:52:5, col:8> 'const unsigned char *' postfix '++'
|   | `-DeclRefExpr 0x12ba4583878 <col:5> 'const unsigned char *' lvalue ParmVar 0x12ba457bfb0 'uni' 'const unsigned char *'
|   |-IfStmt 0x12ba4583b48 <line:53:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x12ba4583a78 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:53:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x12ba45839b8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:53:9, col:41> 'char *'
|   | | | `-BinaryOperator 0x12ba4583998 <col:10, col:40> 'char *' '='
|   | | |   |-DeclRefExpr 0x12ba45838b0 <col:10> 'char *' lvalue Var 0x12ba4583410 'asctmp' 'char *'
|   | | |   `-ImplicitCastExpr 0x12ba4583980 <col:19, col:40> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x12ba4583940 <col:19, col:40> 'int'
|   | | |       |-ImplicitCastExpr 0x12ba4583928 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x12ba45838e8 <col:19> 'int ()' Function 0x12ba457b200 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x12ba4583968 <col:34> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x12ba4583908 <col:34> 'int' lvalue Var 0x12ba45832e0 'asclen' 'int'
|   | | `-ImplicitCastExpr 0x12ba4583a60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x12ba4583a40 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x12ba4583a18 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x12ba45839d8 <col:26> 'int' 0
|   | `-ReturnStmt 0x12ba4583b38 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:54:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x12ba4583b20 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x12ba4583b00 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x12ba4583ad8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x12ba4583a98 <col:26> 'int' 0
|   |-ForStmt 0x12ba4583ea0 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:55:5, line:56:31>
|   | |-BinaryOperator 0x12ba4583bc0 <line:55:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x12ba4583b60 <col:10> 'int' lvalue Var 0x12ba4583360 'i' 'int'
|   | | `-IntegerLiteral 0x12ba4583b98 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12ba4583c50 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x12ba4583c20 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba4583be0 <col:17> 'int' lvalue Var 0x12ba4583360 'i' 'int'
|   | | `-ImplicitCastExpr 0x12ba4583c38 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12ba4583c00 <col:21> 'int' lvalue ParmVar 0x12ba45830f0 'unilen' 'int'
|   | |-CompoundAssignOperator 0x12ba4583cb8 <col:29, col:34> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x12ba4583c70 <col:29> 'int' lvalue Var 0x12ba4583360 'i' 'int'
|   | | `-IntegerLiteral 0x12ba4583c90 <col:34> 'int' 2
|   | `-BinaryOperator 0x12ba4583e80 <line:56:9, col:31> 'char' '='
|   |   |-ArraySubscriptExpr 0x12ba4583da0 <col:9, col:22> 'char' lvalue
|   |   | |-ImplicitCastExpr 0x12ba4583d88 <col:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12ba4583ce8 <col:9> 'char *' lvalue Var 0x12ba4583410 'asctmp' 'char *'
|   |   | `-BinaryOperator 0x12ba4583d68 <col:16, col:21> 'int' '>>'
|   |   |   |-ImplicitCastExpr 0x12ba4583d50 <col:16> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x12ba4583d08 <col:16> 'int' lvalue Var 0x12ba4583360 'i' 'int'
|   |   |   `-IntegerLiteral 0x12ba4583d28 <col:21> 'int' 1
|   |   `-ImplicitCastExpr 0x12ba4583e68 <col:26, col:31> 'char' <IntegralCast>
|   |     `-ImplicitCastExpr 0x12ba4583e50 <col:26, col:31> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x12ba4583e30 <col:26, col:31> 'const unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x12ba4583e00 <col:26> 'const unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x12ba4583dc0 <col:26> 'const unsigned char *' lvalue ParmVar 0x12ba457bfb0 'uni' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x12ba4583e18 <col:30> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x12ba4583de0 <col:30> 'int' lvalue Var 0x12ba4583360 'i' 'int'
|   |-BinaryOperator 0x12ba4583ff0 <line:57:5, col:26> 'char' '='
|   | |-ArraySubscriptExpr 0x12ba4583f90 <col:5, col:22> 'char' lvalue
|   | | |-ImplicitCastExpr 0x12ba4583f78 <col:5> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba4583ed8 <col:5> 'char *' lvalue Var 0x12ba4583410 'asctmp' 'char *'
|   | | `-BinaryOperator 0x12ba4583f58 <col:12, col:21> 'int' '-'
|   | |   |-ImplicitCastExpr 0x12ba4583f40 <col:12> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x12ba4583ef8 <col:12> 'int' lvalue Var 0x12ba45832e0 'asclen' 'int'
|   | |   `-IntegerLiteral 0x12ba4583f18 <col:21> 'int' 1
|   | `-ImplicitCastExpr 0x12ba4583fd8 <col:26> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x12ba4583fb0 <col:26> 'int' 0
|   `-ReturnStmt 0x12ba4584048 <line:58:5, col:12>
|     `-ImplicitCastExpr 0x12ba4584030 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x12ba4584010 <col:12> 'char *' lvalue Var 0x12ba4583410 'asctmp' 'char *'
|-FunctionDecl 0x12ba4580358 <line:70:1, line:142:1> line:70:16 OPENSSL_utf82uni 'unsigned char *(const char *, int, unsigned char **, int *)'
| |-ParmVarDecl 0x12ba45800c0 <col:33, col:45> col:45 used asc 'const char *'
| |-ParmVarDecl 0x12ba4580140 <col:50, col:54> col:54 used asclen 'int'
| |-ParmVarDecl 0x12ba45801c8 <line:71:33, col:49> col:49 used uni 'unsigned char **'
| |-ParmVarDecl 0x12ba4580248 <col:54, col:59> col:59 used unilen 'int *'
| `-CompoundStmt 0x12ba4585f08 <line:72:1, line:142:1>
|   |-DeclStmt 0x12ba45805d0 <line:73:5, col:19>
|   | |-VarDecl 0x12ba4580448 <col:5, col:9> col:9 used ulen 'int'
|   | |-VarDecl 0x12ba45804c8 <col:5, col:15> col:15 used i 'int'
|   | `-VarDecl 0x12ba4580548 <col:5, col:18> col:18 used j 'int'
|   |-DeclStmt 0x12ba4580700 <line:74:5, col:32>
|   | |-VarDecl 0x12ba4580600 <col:5, col:20> col:20 used unitmp 'unsigned char *'
|   | `-VarDecl 0x12ba4580680 <col:5, col:29> col:29 used ret 'unsigned char *'
|   |-DeclStmt 0x12ba45807d8 <line:75:5, col:31>
|   | `-VarDecl 0x12ba4580730 <col:5, col:30> col:19 used utf32chr 'unsigned long' cinit
|   |   `-ImplicitCastExpr 0x12ba45807c0 <col:30> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x12ba4580798 <col:30> 'int' 0
|   |-IfStmt 0x12ba4580990 <line:77:5, line:78:28>
|   | |-BinaryOperator 0x12ba4580868 <line:77:9, col:20> 'int' '=='
|   | | |-ImplicitCastExpr 0x12ba4580850 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba45807f0 <col:9> 'int' lvalue ParmVar 0x12ba4580140 'asclen' 'int'
|   | | `-UnaryOperator 0x12ba4580838 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x12ba4580810 <col:20> 'int' 1
|   | `-BinaryOperator 0x12ba4580970 <line:78:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x12ba4580888 <col:9> 'int' lvalue ParmVar 0x12ba4580140 'asclen' 'int'
|   |   `-ImplicitCastExpr 0x12ba4580958 <col:18, col:28> 'int' <IntegralCast>
|   |     `-CallExpr 0x12ba4580918 <col:18, col:28> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x12ba4580900 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x12ba45808a8 <col:18> 'unsigned long long (const char *)' Function 0x12ba4581e50 'strlen' 'unsigned long long (const char *)'
|   |       `-ImplicitCastExpr 0x12ba4580940 <col:25> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x12ba45808c8 <col:25> 'const char *' lvalue ParmVar 0x12ba45800c0 'asc' 'const char *'
|   |-ForStmt 0x12ba4584568 <line:80:5, line:109:5>
|   | |-BinaryOperator 0x12ba4580aa8 <line:80:10, col:24> 'int' ','
|   | | |-BinaryOperator 0x12ba4580a08 <col:10, col:17> 'int' '='
|   | | | |-DeclRefExpr 0x12ba45809a8 <col:10> 'int' lvalue Var 0x12ba4580448 'ulen' 'int'
|   | | | `-IntegerLiteral 0x12ba45809e0 <col:17> 'int' 0
|   | | `-BinaryOperator 0x12ba4580a88 <col:20, col:24> 'int' '='
|   | |   |-DeclRefExpr 0x12ba4580a28 <col:20> 'int' lvalue Var 0x12ba45804c8 'i' 'int'
|   | |   `-IntegerLiteral 0x12ba4580a60 <col:24> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12ba4580b38 <col:27, col:31> 'int' '<'
|   | | |-ImplicitCastExpr 0x12ba4580b08 <col:27> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba4580ac8 <col:27> 'int' lvalue Var 0x12ba45804c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x12ba4580b20 <col:31> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12ba4580ae8 <col:31> 'int' lvalue ParmVar 0x12ba4580140 'asclen' 'int'
|   | |-CompoundAssignOperator 0x12ba4580bc8 <col:39, col:44> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x12ba4580b58 <col:39> 'int' lvalue Var 0x12ba45804c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x12ba4580bb0 <col:44> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12ba4580b78 <col:44> 'int' lvalue Var 0x12ba4580548 'j' 'int'
|   | `-CompoundStmt 0x12ba4584538 <col:47, line:109:5>
|   |   |-BinaryOperator 0x12ba4580f50 <line:81:9, col:72> 'int' '='
|   |   | |-DeclRefExpr 0x12ba4580bf8 <col:9> 'int' lvalue Var 0x12ba4580548 'j' 'int'
|   |   | `-CallExpr 0x12ba4580f18 <col:13, col:72> 'int'
|   |   |   |-ImplicitCastExpr 0x12ba4580f00 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12ba4580d08 <col:13> 'int ()' Function 0x12ba4580c40 'UTF8_getc' 'int ()'
|   |   |   |-BinaryOperator 0x12ba4580dd8 <col:23, col:50> 'const unsigned char *' '+'
|   |   |   | |-CStyleCastExpr 0x12ba4580d78 <col:23, col:46> 'const unsigned char *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x12ba4580d60 <col:46> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |   |   | |   `-DeclRefExpr 0x12ba4580d28 <col:46> 'const char *' lvalue ParmVar 0x12ba45800c0 'asc' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x12ba4580dc0 <col:50> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12ba4580da0 <col:50> 'int' lvalue Var 0x12ba45804c8 'i' 'int'
|   |   |   |-BinaryOperator 0x12ba4580e68 <col:53, col:60> 'int' '-'
|   |   |   | |-ImplicitCastExpr 0x12ba4580e38 <col:53> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x12ba4580df8 <col:53> 'int' lvalue ParmVar 0x12ba4580140 'asclen' 'int'
|   |   |   | `-ImplicitCastExpr 0x12ba4580e50 <col:60> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12ba4580e18 <col:60> 'int' lvalue Var 0x12ba45804c8 'i' 'int'
|   |   |   `-UnaryOperator 0x12ba4580ee8 <col:63, col:64> 'unsigned long *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x12ba4580e88 <col:64> 'unsigned long' lvalue Var 0x12ba4580730 'utf32chr' 'unsigned long'
|   |   |-IfStmt 0x12ba45841c8 <line:99:9, line:100:53>
|   |   | |-BinaryOperator 0x12ba4580fd0 <line:99:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x12ba4580fb8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12ba4580f70 <col:13> 'int' lvalue Var 0x12ba4580548 'j' 'int'
|   |   | | `-IntegerLiteral 0x12ba4580f90 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x12ba45841b8 <line:100:6, col:53>
|   |   |   `-CallExpr 0x12ba4584118 <col:13, col:53> 'unsigned char *'
|   |   |     |-ImplicitCastExpr 0x12ba4584100 <col:13> 'unsigned char *(*)(const char *, int, unsigned char **, int *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x12ba4580ff0 <col:13> 'unsigned char *(const char *, int, unsigned char **, int *)' Function 0x12ba4581ac0 'OPENSSL_asc2uni' 'unsigned char *(const char *, int, unsigned char **, int *)'
|   |   |     |-ImplicitCastExpr 0x12ba4584158 <col:29> 'const char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x12ba4581010 <col:29> 'const char *' lvalue ParmVar 0x12ba45800c0 'asc' 'const char *'
|   |   |     |-ImplicitCastExpr 0x12ba4584170 <col:34> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x12ba4581030 <col:34> 'int' lvalue ParmVar 0x12ba4580140 'asclen' 'int'
|   |   |     |-ImplicitCastExpr 0x12ba4584188 <col:42> 'unsigned char **' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x12ba4581050 <col:42> 'unsigned char **' lvalue ParmVar 0x12ba45801c8 'uni' 'unsigned char **'
|   |   |     `-ImplicitCastExpr 0x12ba45841a0 <col:47> 'int *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x12ba4581070 <col:47> 'int *' lvalue ParmVar 0x12ba4580248 'unilen' 'int *'
|   |   |-IfStmt 0x12ba4584328 <line:102:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   | |-BinaryOperator 0x12ba4584258 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:102:13, col:24> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x12ba4584228 <col:13> 'unsigned long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12ba45841e0 <col:13> 'unsigned long' lvalue Var 0x12ba4580730 'utf32chr' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x12ba4584240 <col:24> 'unsigned long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x12ba4584200 <col:24> 'int' 1114111
|   |   | `-ReturnStmt 0x12ba4584318 <line:103:6, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   |   `-ImplicitCastExpr 0x12ba4584300 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |   |     `-ParenExpr 0x12ba45842e0 <col:17, col:27> 'void *'
|   |   |       `-CStyleCastExpr 0x12ba45842b8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |         `-IntegerLiteral 0x12ba4584278 <col:26> 'int' 0
|   |   `-IfStmt 0x12ba4584510 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:105:9, line:108:21> has_else
|   |     |-BinaryOperator 0x12ba45843b8 <line:105:13, col:25> 'int' '>='
|   |     | |-ImplicitCastExpr 0x12ba4584388 <col:13> 'unsigned long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12ba4584340 <col:13> 'unsigned long' lvalue Var 0x12ba4580730 'utf32chr' 'unsigned long'
|   |     | `-ImplicitCastExpr 0x12ba45843a0 <col:25> 'unsigned long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x12ba4584360 <col:25> 'int' 65536
|   |     |-CompoundAssignOperator 0x12ba4584468 <line:106:13, col:23> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x12ba45843d8 <col:13> 'int' lvalue Var 0x12ba4580448 'ulen' 'int'
|   |     | `-BinaryOperator 0x12ba4584448 <col:21, col:23> 'int' '*'
|   |     |   |-IntegerLiteral 0x12ba45843f8 <col:21> 'int' 2
|   |     |   `-IntegerLiteral 0x12ba4584420 <col:23> 'int' 2
|   |     `-CompoundAssignOperator 0x12ba45844e0 <line:108:13, col:21> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |-DeclRefExpr 0x12ba4584498 <col:13> 'int' lvalue Var 0x12ba4580448 'ulen' 'int'
|   |       `-IntegerLiteral 0x12ba45844b8 <col:21> 'int' 2
|   |-CompoundAssignOperator 0x12ba45845e8 <line:111:5, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x12ba45845a0 <col:5> 'int' lvalue Var 0x12ba4580448 'ulen' 'int'
|   | `-IntegerLiteral 0x12ba45845c0 <col:13> 'int' 2
|   |-IfStmt 0x12ba45848b0 <line:113:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x12ba45847e0 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:113:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x12ba4584720 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:113:9, col:36> 'unsigned char *'
|   | | | `-BinaryOperator 0x12ba4584700 <col:10, col:35> 'unsigned char *' '='
|   | | |   |-DeclRefExpr 0x12ba4584618 <col:10> 'unsigned char *' lvalue Var 0x12ba4580680 'ret' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x12ba45846e8 <col:16, col:35> 'unsigned char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x12ba45846a8 <col:16, col:35> 'int'
|   | | |       |-ImplicitCastExpr 0x12ba4584690 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x12ba4584650 <col:16> 'int ()' Function 0x12ba457b200 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x12ba45846d0 <col:31> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x12ba4584670 <col:31> 'int' lvalue Var 0x12ba4580448 'ulen' 'int'
|   | | `-ImplicitCastExpr 0x12ba45847c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x12ba45847a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x12ba4584780 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x12ba4584740 <col:26> 'int' 0
|   | `-ReturnStmt 0x12ba45848a0 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:114:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x12ba4584888 <col:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x12ba4584868 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x12ba4584840 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x12ba4584800 <col:26> 'int' 0
|   |-ForStmt 0x12ba4585b38 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:117:5, line:133:5>
|   | |-BinaryOperator 0x12ba45849c0 <line:117:10, col:28> 'int' ','
|   | | |-BinaryOperator 0x12ba4584938 <col:10, col:19> 'unsigned char *' '='
|   | | | |-DeclRefExpr 0x12ba45848c8 <col:10> 'unsigned char *' lvalue Var 0x12ba4580600 'unitmp' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x12ba4584920 <col:19> 'unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12ba4584900 <col:19> 'unsigned char *' lvalue Var 0x12ba4580680 'ret' 'unsigned char *'
|   | | `-BinaryOperator 0x12ba45849a0 <col:24, col:28> 'int' '='
|   | |   |-DeclRefExpr 0x12ba4584958 <col:24> 'int' lvalue Var 0x12ba45804c8 'i' 'int'
|   | |   `-IntegerLiteral 0x12ba4584978 <col:28> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12ba4584a50 <col:31, col:35> 'int' '<'
|   | | |-ImplicitCastExpr 0x12ba4584a20 <col:31> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba45849e0 <col:31> 'int' lvalue Var 0x12ba45804c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x12ba4584a38 <col:35> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12ba4584a00 <col:35> 'int' lvalue ParmVar 0x12ba4580140 'asclen' 'int'
|   | |-CompoundAssignOperator 0x12ba4584ac8 <col:43, col:48> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x12ba4584a70 <col:43> 'int' lvalue Var 0x12ba45804c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x12ba4584ab0 <col:48> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12ba4584a90 <col:48> 'int' lvalue Var 0x12ba4580548 'j' 'int'
|   | `-CompoundStmt 0x12ba4585b18 <col:51, line:133:5>
|   |   |-BinaryOperator 0x12ba4584d20 <line:118:9, col:72> 'int' '='
|   |   | |-DeclRefExpr 0x12ba4584af8 <col:9> 'int' lvalue Var 0x12ba4580548 'j' 'int'
|   |   | `-CallExpr 0x12ba4584ce8 <col:13, col:72> 'int'
|   |   |   |-ImplicitCastExpr 0x12ba4584cd0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12ba4584b18 <col:13> 'int ()' Function 0x12ba4580c40 'UTF8_getc' 'int ()'
|   |   |   |-BinaryOperator 0x12ba4584be8 <col:23, col:50> 'const unsigned char *' '+'
|   |   |   | |-CStyleCastExpr 0x12ba4584b88 <col:23, col:46> 'const unsigned char *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x12ba4584b70 <col:46> 'const char *' <LValueToRValue> part_of_explicit_cast
|   |   |   | |   `-DeclRefExpr 0x12ba4584b38 <col:46> 'const char *' lvalue ParmVar 0x12ba45800c0 'asc' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x12ba4584bd0 <col:50> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12ba4584bb0 <col:50> 'int' lvalue Var 0x12ba45804c8 'i' 'int'
|   |   |   |-BinaryOperator 0x12ba4584c78 <col:53, col:60> 'int' '-'
|   |   |   | |-ImplicitCastExpr 0x12ba4584c48 <col:53> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x12ba4584c08 <col:53> 'int' lvalue ParmVar 0x12ba4580140 'asclen' 'int'
|   |   |   | `-ImplicitCastExpr 0x12ba4584c60 <col:60> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12ba4584c28 <col:60> 'int' lvalue Var 0x12ba45804c8 'i' 'int'
|   |   |   `-UnaryOperator 0x12ba4584cb8 <col:63, col:64> 'unsigned long *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x12ba4584c98 <col:64> 'unsigned long' lvalue Var 0x12ba4580730 'utf32chr' 'unsigned long'
|   |   `-IfStmt 0x12ba4585af0 <line:119:9, line:132:9> has_else
|   |     |-BinaryOperator 0x12ba4584db8 <line:119:13, col:25> 'int' '>='
|   |     | |-ImplicitCastExpr 0x12ba4584d88 <col:13> 'unsigned long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x12ba4584d40 <col:13> 'unsigned long' lvalue Var 0x12ba4580730 'utf32chr' 'unsigned long'
|   |     | `-ImplicitCastExpr 0x12ba4584da0 <col:25> 'unsigned long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x12ba4584d60 <col:25> 'int' 65536
|   |     |-CompoundStmt 0x12ba45857e8 <col:34, line:129:9>
|   |     | |-DeclStmt 0x12ba4584ef0 <line:120:13, col:32>
|   |     | | |-VarDecl 0x12ba4584df0 <col:13, col:26> col:26 used hi 'unsigned int'
|   |     | | `-VarDecl 0x12ba4584e70 <col:13, col:30> col:30 used lo 'unsigned int'
|   |     | |-CompoundAssignOperator 0x12ba4584f68 <line:122:13, col:25> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x12ba4584f08 <col:13> 'unsigned long' lvalue Var 0x12ba4580730 'utf32chr' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x12ba4584f50 <col:25> 'unsigned long' <IntegralCast>
|   |     | |   `-IntegerLiteral 0x12ba4584f28 <col:25> 'int' 65536
|   |     | |-BinaryOperator 0x12ba4585110 <line:123:13, col:40> 'unsigned int' '='
|   |     | | |-DeclRefExpr 0x12ba4584f98 <col:13> 'unsigned int' lvalue Var 0x12ba4584df0 'hi' 'unsigned int'
|   |     | | `-ImplicitCastExpr 0x12ba45850d0 <col:18, col:40> 'unsigned int' <IntegralCast>
|   |     | |   `-BinaryOperator 0x12ba45850b0 <col:18, col:40> 'unsigned long' '+'
|   |     | |     |-ImplicitCastExpr 0x12ba4585098 <col:18> 'unsigned long' <IntegralCast>
|   |     | |     | `-IntegerLiteral 0x12ba4584fd0 <col:18> 'int' 55296
|   |     | |     `-ParenExpr 0x12ba4585078 <col:27, col:40> 'unsigned long'
|   |     | |       `-BinaryOperator 0x12ba4585058 <col:28, col:38> 'unsigned long' '>>'
|   |     | |         |-ImplicitCastExpr 0x12ba4585040 <col:28> 'unsigned long' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x12ba4584ff8 <col:28> 'unsigned long' lvalue Var 0x12ba4580730 'utf32chr' 'unsigned long'
|   |     | |         `-IntegerLiteral 0x12ba4585018 <col:38> 'int' 10
|   |     | |-BinaryOperator 0x12ba4585298 <line:124:13, col:42> 'unsigned int' '='
|   |     | | |-DeclRefExpr 0x12ba4585130 <col:13> 'unsigned int' lvalue Var 0x12ba4584e70 'lo' 'unsigned int'
|   |     | | `-ImplicitCastExpr 0x12ba4585280 <col:18, col:42> 'unsigned int' <IntegralCast>
|   |     | |   `-BinaryOperator 0x12ba4585260 <col:18, col:42> 'unsigned long' '+'
|   |     | |     |-ImplicitCastExpr 0x12ba4585248 <col:18> 'unsigned long' <IntegralCast>
|   |     | |     | `-IntegerLiteral 0x12ba4585168 <col:18> 'int' 56320
|   |     | |     `-ParenExpr 0x12ba4585228 <col:27, col:42> 'unsigned long'
|   |     | |       `-BinaryOperator 0x12ba4585208 <col:28, col:37> 'unsigned long' '&'
|   |     | |         |-ImplicitCastExpr 0x12ba45851d8 <col:28> 'unsigned long' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x12ba4585190 <col:28> 'unsigned long' lvalue Var 0x12ba4580730 'utf32chr' 'unsigned long'
|   |     | |         `-ImplicitCastExpr 0x12ba45851f0 <col:37> 'unsigned long' <IntegralCast>
|   |     | |           `-IntegerLiteral 0x12ba45851b0 <col:37> 'int' 1023
|   |     | |-BinaryOperator 0x12ba4585408 <line:125:13, col:46> 'unsigned char' '='
|   |     | | |-UnaryOperator 0x12ba45852f0 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x12ba45852d8 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x12ba45852b8 <col:14> 'unsigned char *' lvalue Var 0x12ba4580600 'unitmp' 'unsigned char *'
|   |     | | `-CStyleCastExpr 0x12ba45853e0 <col:25, col:46> 'unsigned char' <IntegralCast>
|   |     | |   `-ParenExpr 0x12ba45853c0 <col:40, col:46> 'unsigned int'
|   |     | |     `-BinaryOperator 0x12ba4585368 <col:41, col:45> 'unsigned int' '>>'
|   |     | |       |-ImplicitCastExpr 0x12ba4585350 <col:41> 'unsigned int' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x12ba4585308 <col:41> 'unsigned int' lvalue Var 0x12ba4584df0 'hi' 'unsigned int'
|   |     | |       `-IntegerLiteral 0x12ba4585328 <col:45> 'int' 8
|   |     | |-BinaryOperator 0x12ba4585530 <line:126:13, col:43> 'unsigned char' '='
|   |     | | |-UnaryOperator 0x12ba4585460 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x12ba4585448 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x12ba4585428 <col:14> 'unsigned char *' lvalue Var 0x12ba4580600 'unitmp' 'unsigned char *'
|   |     | | `-CStyleCastExpr 0x12ba4585508 <col:25, col:43> 'unsigned char' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x12ba45854f0 <col:40, col:43> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     | |     `-ParenExpr 0x12ba45854d0 <col:40, col:43> 'unsigned int' lvalue
|   |     | |       `-DeclRefExpr 0x12ba4585478 <col:41> 'unsigned int' lvalue Var 0x12ba4584df0 'hi' 'unsigned int'
|   |     | |-BinaryOperator 0x12ba45856a0 <line:127:13, col:46> 'unsigned char' '='
|   |     | | |-UnaryOperator 0x12ba4585588 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | | | `-UnaryOperator 0x12ba4585570 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     | | |   `-DeclRefExpr 0x12ba4585550 <col:14> 'unsigned char *' lvalue Var 0x12ba4580600 'unitmp' 'unsigned char *'
|   |     | | `-CStyleCastExpr 0x12ba4585678 <col:25, col:46> 'unsigned char' <IntegralCast>
|   |     | |   `-ParenExpr 0x12ba4585658 <col:40, col:46> 'unsigned int'
|   |     | |     `-BinaryOperator 0x12ba4585600 <col:41, col:45> 'unsigned int' '>>'
|   |     | |       |-ImplicitCastExpr 0x12ba45855e8 <col:41> 'unsigned int' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x12ba45855a0 <col:41> 'unsigned int' lvalue Var 0x12ba4584e70 'lo' 'unsigned int'
|   |     | |       `-IntegerLiteral 0x12ba45855c0 <col:45> 'int' 8
|   |     | `-BinaryOperator 0x12ba45857c8 <line:128:13, col:43> 'unsigned char' '='
|   |     |   |-UnaryOperator 0x12ba45856f8 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     |   | `-UnaryOperator 0x12ba45856e0 <col:14, col:20> 'unsigned char *' postfix '++'
|   |     |   |   `-DeclRefExpr 0x12ba45856c0 <col:14> 'unsigned char *' lvalue Var 0x12ba4580600 'unitmp' 'unsigned char *'
|   |     |   `-CStyleCastExpr 0x12ba45857a0 <col:25, col:43> 'unsigned char' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x12ba4585788 <col:40, col:43> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ParenExpr 0x12ba4585768 <col:40, col:43> 'unsigned int' lvalue
|   |     |         `-DeclRefExpr 0x12ba4585710 <col:41> 'unsigned int' lvalue Var 0x12ba4584e70 'lo' 'unsigned int'
|   |     `-CompoundStmt 0x12ba4585ad0 <line:129:16, line:132:9>
|   |       |-BinaryOperator 0x12ba4585988 <line:130:13, col:52> 'unsigned char' '='
|   |       | |-UnaryOperator 0x12ba4585870 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |       | | `-UnaryOperator 0x12ba4585858 <col:14, col:20> 'unsigned char *' postfix '++'
|   |       | |   `-DeclRefExpr 0x12ba4585838 <col:14> 'unsigned char *' lvalue Var 0x12ba4580600 'unitmp' 'unsigned char *'
|   |       | `-CStyleCastExpr 0x12ba4585960 <col:25, col:52> 'unsigned char' <IntegralCast>
|   |       |   `-ParenExpr 0x12ba4585940 <col:40, col:52> 'unsigned long'
|   |       |     `-BinaryOperator 0x12ba45858e8 <col:41, col:51> 'unsigned long' '>>'
|   |       |       |-ImplicitCastExpr 0x12ba45858d0 <col:41> 'unsigned long' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x12ba4585888 <col:41> 'unsigned long' lvalue Var 0x12ba4580730 'utf32chr' 'unsigned long'
|   |       |       `-IntegerLiteral 0x12ba45858a8 <col:51> 'int' 8
|   |       `-BinaryOperator 0x12ba4585ab0 <line:131:13, col:49> 'unsigned char' '='
|   |         |-UnaryOperator 0x12ba45859e0 <col:13, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |         | `-UnaryOperator 0x12ba45859c8 <col:14, col:20> 'unsigned char *' postfix '++'
|   |         |   `-DeclRefExpr 0x12ba45859a8 <col:14> 'unsigned char *' lvalue Var 0x12ba4580600 'unitmp' 'unsigned char *'
|   |         `-CStyleCastExpr 0x12ba4585a88 <col:25, col:49> 'unsigned char' <IntegralCast>
|   |           `-ImplicitCastExpr 0x12ba4585a70 <col:40, col:49> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |             `-ParenExpr 0x12ba4585a50 <col:40, col:49> 'unsigned long' lvalue
|   |               `-DeclRefExpr 0x12ba45859f8 <col:41> 'unsigned long' lvalue Var 0x12ba4580730 'utf32chr' 'unsigned long'
|   |-BinaryOperator 0x12ba4585c00 <line:135:5, col:17> 'unsigned char' '='
|   | |-UnaryOperator 0x12ba4585ba8 <col:5, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x12ba4585b90 <col:6, col:12> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x12ba4585b70 <col:6> 'unsigned char *' lvalue Var 0x12ba4580600 'unitmp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x12ba4585be8 <col:17> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x12ba4585bc0 <col:17> 'int' 0
|   |-BinaryOperator 0x12ba4585cb0 <line:136:5, col:17> 'unsigned char' '='
|   | |-UnaryOperator 0x12ba4585c58 <col:5, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x12ba4585c40 <col:6, col:12> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x12ba4585c20 <col:6> 'unsigned char *' lvalue Var 0x12ba4580600 'unitmp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x12ba4585c98 <col:17> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x12ba4585c70 <col:17> 'int' 0
|   |-IfStmt 0x12ba4585db0 <line:137:5, line:138:19>
|   | |-ImplicitCastExpr 0x12ba4585cf0 <line:137:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x12ba4585cd0 <col:9> 'int *' lvalue ParmVar 0x12ba4580248 'unilen' 'int *'
|   | `-BinaryOperator 0x12ba4585d90 <line:138:9, col:19> 'int' '='
|   |   |-UnaryOperator 0x12ba4585d40 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x12ba4585d28 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12ba4585d08 <col:10> 'int *' lvalue ParmVar 0x12ba4580248 'unilen' 'int *'
|   |   `-ImplicitCastExpr 0x12ba4585d78 <col:19> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12ba4585d58 <col:19> 'int' lvalue Var 0x12ba4580448 'ulen' 'int'
|   |-IfStmt 0x12ba4585ea8 <line:139:5, line:140:16>
|   | |-ImplicitCastExpr 0x12ba4585de8 <line:139:9> 'unsigned char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x12ba4585dc8 <col:9> 'unsigned char **' lvalue ParmVar 0x12ba45801c8 'uni' 'unsigned char **'
|   | `-BinaryOperator 0x12ba4585e88 <line:140:9, col:16> 'unsigned char *' '='
|   |   |-UnaryOperator 0x12ba4585e38 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x12ba4585e20 <col:10> 'unsigned char **' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12ba4585e00 <col:10> 'unsigned char **' lvalue ParmVar 0x12ba45801c8 'uni' 'unsigned char **'
|   |   `-ImplicitCastExpr 0x12ba4585e70 <col:16> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12ba4585e50 <col:16> 'unsigned char *' lvalue Var 0x12ba4580680 'ret' 'unsigned char *'
|   `-ReturnStmt 0x12ba4585ef8 <line:141:5, col:12>
|     `-ImplicitCastExpr 0x12ba4585ee0 <col:12> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x12ba4585ec0 <col:12> 'unsigned char *' lvalue Var 0x12ba4580680 'ret' 'unsigned char *'
|-FunctionDecl 0x12ba4595150 <line:144:1, line:169:1> line:144:12 used bmp_to_utf8 'int (char *, const unsigned char *, int)' static
| |-ParmVarDecl 0x12ba4585f98 <col:24, col:30> col:30 used str 'char *'
| |-ParmVarDecl 0x12ba4586018 <col:35, col:56> col:56 used utf16 'const unsigned char *'
| |-ParmVarDecl 0x12ba4586098 <col:63, col:67> col:67 used len 'int'
| `-CompoundStmt 0x12ba45933f8 <line:145:1, line:169:1>
|   |-DeclStmt 0x12ba45952a0 <line:146:5, col:27>
|   | `-VarDecl 0x12ba4595238 <col:5, col:19> col:19 used utf32chr 'unsigned long'
|   |-IfStmt 0x12ba4595370 <line:148:5, col:26>
|   | |-BinaryOperator 0x12ba4595318 <col:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x12ba4595300 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba45952b8 <col:9> 'int' lvalue ParmVar 0x12ba4586098 'len' 'int'
|   | | `-IntegerLiteral 0x12ba45952d8 <col:16> 'int' 0
|   | `-ReturnStmt 0x12ba4595360 <col:19, col:26>
|   |   `-IntegerLiteral 0x12ba4595338 <col:26> 'int' 0
|   |-IfStmt 0x12ba4595458 <line:150:5, col:26>
|   | |-BinaryOperator 0x12ba45953e8 <col:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x12ba45953d0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba4595388 <col:9> 'int' lvalue ParmVar 0x12ba4586098 'len' 'int'
|   | | `-IntegerLiteral 0x12ba45953a8 <col:15> 'int' 2
|   | `-ReturnStmt 0x12ba4595448 <col:18, col:26>
|   |   `-UnaryOperator 0x12ba4595430 <col:25, col:26> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12ba4595408 <col:26> 'int' 1
|   |-BinaryOperator 0x12ba45956a8 <line:153:5, col:39> 'unsigned long' '='
|   | |-DeclRefExpr 0x12ba4595470 <col:5> 'unsigned long' lvalue Var 0x12ba4595238 'utf32chr' 'unsigned long'
|   | `-ImplicitCastExpr 0x12ba4595690 <col:16, col:39> 'unsigned long' <IntegralCast>
|   |   `-BinaryOperator 0x12ba4595670 <col:16, col:39> 'int' '|'
|   |     |-ParenExpr 0x12ba45955a0 <col:16, col:28> 'int'
|   |     | `-BinaryOperator 0x12ba4595580 <col:17, col:27> 'int' '<<'
|   |     |   |-ImplicitCastExpr 0x12ba4595568 <col:17, col:24> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x12ba4595550 <col:17, col:24> 'unsigned char' <LValueToRValue>
|   |     |   |   `-ArraySubscriptExpr 0x12ba4595508 <col:17, col:24> 'const unsigned char' lvalue
|   |     |   |     |-ImplicitCastExpr 0x12ba45954f0 <col:17> 'const unsigned char *' <LValueToRValue>
|   |     |   |     | `-DeclRefExpr 0x12ba45954a8 <col:17> 'const unsigned char *' lvalue ParmVar 0x12ba4586018 'utf16' 'const unsigned char *'
|   |     |   |     `-IntegerLiteral 0x12ba45954c8 <col:23> 'int' 0
|   |     |   `-IntegerLiteral 0x12ba4595528 <col:27> 'int' 8
|   |     `-ImplicitCastExpr 0x12ba4595658 <col:32, col:39> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x12ba4595640 <col:32, col:39> 'unsigned char' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x12ba4595620 <col:32, col:39> 'const unsigned char' lvalue
|   |           |-ImplicitCastExpr 0x12ba4595608 <col:32> 'const unsigned char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x12ba45955c0 <col:32> 'const unsigned char *' lvalue ParmVar 0x12ba4586018 'utf16' 'const unsigned char *'
|   |           `-IntegerLiteral 0x12ba45955e0 <col:38> 'int' 1
|   |-IfStmt 0x12ba45930b0 <line:155:5, line:166:5>
|   | |-BinaryOperator 0x12ba45957f8 <line:155:9, col:42> 'int' '&&'
|   | | |-BinaryOperator 0x12ba4595740 <col:9, col:21> 'int' '>='
|   | | | |-ImplicitCastExpr 0x12ba4595710 <col:9> 'unsigned long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x12ba45956c8 <col:9> 'unsigned long' lvalue Var 0x12ba4595238 'utf32chr' 'unsigned long'
|   | | | `-ImplicitCastExpr 0x12ba4595728 <col:21> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x12ba45956e8 <col:21> 'int' 55296
|   | | `-BinaryOperator 0x12ba45957d8 <col:31, col:42> 'int' '<'
|   | |   |-ImplicitCastExpr 0x12ba45957a8 <col:31> 'unsigned long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x12ba4595760 <col:31> 'unsigned long' lvalue Var 0x12ba4595238 'utf32chr' 'unsigned long'
|   | |   `-ImplicitCastExpr 0x12ba45957c0 <col:42> 'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x12ba4595780 <col:42> 'int' 57344
|   | `-CompoundStmt 0x12ba4593060 <col:50, line:166:5>
|   |   |-DeclStmt 0x12ba4595898 <line:156:9, col:24>
|   |   | `-VarDecl 0x12ba4595830 <col:9, col:22> col:22 used lo 'unsigned int'
|   |   |-IfStmt 0x12ba4595980 <line:158:9, col:30>
|   |   | |-BinaryOperator 0x12ba4595910 <col:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x12ba45958f8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12ba45958b0 <col:13> 'int' lvalue ParmVar 0x12ba4586098 'len' 'int'
|   |   | | `-IntegerLiteral 0x12ba45958d0 <col:19> 'int' 4
|   |   | `-ReturnStmt 0x12ba4595970 <col:22, col:30>
|   |   |   `-UnaryOperator 0x12ba4595958 <col:29, col:30> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x12ba4595930 <col:30> 'int' 1
|   |   |-CompoundAssignOperator 0x12ba45959f8 <line:160:9, col:21> 'unsigned long' '-=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | |-DeclRefExpr 0x12ba4595998 <col:9> 'unsigned long' lvalue Var 0x12ba4595238 'utf32chr' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x12ba45959e0 <col:21> 'unsigned long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x12ba45959b8 <col:21> 'int' 55296
|   |   |-CompoundAssignOperator 0x12ba4595a88 <line:161:9, col:22> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | |-DeclRefExpr 0x12ba4595a28 <col:9> 'unsigned long' lvalue Var 0x12ba4595238 'utf32chr' 'unsigned long'
|   |   | `-IntegerLiteral 0x12ba4595a48 <col:22> 'int' 10
|   |   |-BinaryOperator 0x12ba4595cf0 <line:162:9, col:37> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x12ba4595ab8 <col:9> 'unsigned int' lvalue Var 0x12ba4595830 'lo' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x12ba4595cd8 <col:14, col:37> 'unsigned int' <IntegralCast>
|   |   |   `-BinaryOperator 0x12ba4595cb8 <col:14, col:37> 'int' '|'
|   |   |     |-ParenExpr 0x12ba4595be8 <col:14, col:26> 'int'
|   |   |     | `-BinaryOperator 0x12ba4595bc8 <col:15, col:25> 'int' '<<'
|   |   |     |   |-ImplicitCastExpr 0x12ba4595bb0 <col:15, col:22> 'int' <IntegralCast>
|   |   |     |   | `-ImplicitCastExpr 0x12ba4595b98 <col:15, col:22> 'unsigned char' <LValueToRValue>
|   |   |     |   |   `-ArraySubscriptExpr 0x12ba4595b50 <col:15, col:22> 'const unsigned char' lvalue
|   |   |     |   |     |-ImplicitCastExpr 0x12ba4595b38 <col:15> 'const unsigned char *' <LValueToRValue>
|   |   |     |   |     | `-DeclRefExpr 0x12ba4595af0 <col:15> 'const unsigned char *' lvalue ParmVar 0x12ba4586018 'utf16' 'const unsigned char *'
|   |   |     |   |     `-IntegerLiteral 0x12ba4595b10 <col:21> 'int' 2
|   |   |     |   `-IntegerLiteral 0x12ba4595b70 <col:25> 'int' 8
|   |   |     `-ImplicitCastExpr 0x12ba4595ca0 <col:30, col:37> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x12ba4595c88 <col:30, col:37> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x12ba4595c68 <col:30, col:37> 'const unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x12ba4595c50 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x12ba4595c08 <col:30> 'const unsigned char *' lvalue ParmVar 0x12ba4586018 'utf16' 'const unsigned char *'
|   |   |           `-IntegerLiteral 0x12ba4595c28 <col:36> 'int' 3
|   |   |-IfStmt 0x12ba4595eb0 <line:163:9, col:50>
|   |   | |-BinaryOperator 0x12ba4595e40 <col:13, col:34> 'int' '||'
|   |   | | |-BinaryOperator 0x12ba4595d88 <col:13, col:18> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x12ba4595d58 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x12ba4595d10 <col:13> 'unsigned int' lvalue Var 0x12ba4595830 'lo' 'unsigned int'
|   |   | | | `-ImplicitCastExpr 0x12ba4595d70 <col:18> 'unsigned int' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x12ba4595d30 <col:18> 'int' 56320
|   |   | | `-BinaryOperator 0x12ba4595e20 <col:28, col:34> 'int' '>='
|   |   | |   |-ImplicitCastExpr 0x12ba4595df0 <col:28> 'unsigned int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x12ba4595da8 <col:28> 'unsigned int' lvalue Var 0x12ba4595830 'lo' 'unsigned int'
|   |   | |   `-ImplicitCastExpr 0x12ba4595e08 <col:34> 'unsigned int' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x12ba4595dc8 <col:34> 'int' 57344
|   |   | `-ReturnStmt 0x12ba4595ea0 <col:42, col:50>
|   |   |   `-UnaryOperator 0x12ba4595e88 <col:49, col:50> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x12ba4595e60 <col:50> 'int' 1
|   |   |-CompoundAssignOperator 0x12ba4595f98 <line:164:9, col:24> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | |-DeclRefExpr 0x12ba4595ec8 <col:9> 'unsigned long' lvalue Var 0x12ba4595238 'utf32chr' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x12ba4595f80 <col:21, col:24> 'unsigned long' <IntegralCast>
|   |   |   `-BinaryOperator 0x12ba4595f60 <col:21, col:24> 'unsigned int' '-'
|   |   |     |-ImplicitCastExpr 0x12ba4595f30 <col:21> 'unsigned int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x12ba4595ee8 <col:21> 'unsigned int' lvalue Var 0x12ba4595830 'lo' 'unsigned int'
|   |   |     `-ImplicitCastExpr 0x12ba4595f48 <col:24> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x12ba4595f08 <col:24> 'int' 56320
|   |   `-CompoundAssignOperator 0x12ba4596028 <line:165:9, col:21> 'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     |-DeclRefExpr 0x12ba4595fc8 <col:9> 'unsigned long' lvalue Var 0x12ba4595238 'utf32chr' 'unsigned long'
|   |     `-ImplicitCastExpr 0x12ba4596010 <col:21> 'unsigned long' <IntegralCast>
|   |       `-IntegerLiteral 0x12ba4595fe8 <col:21> 'int' 65536
|   `-ReturnStmt 0x12ba45933e8 <line:168:5, col:71>
|     `-CallExpr 0x12ba4593398 <col:12, col:71> 'int'
|       |-ImplicitCastExpr 0x12ba4593380 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12ba45931b8 <col:12> 'int ()' Function 0x12ba45930f0 'UTF8_putc' 'int ()'
|       |-CStyleCastExpr 0x12ba4593228 <col:22, col:39> 'unsigned char *' <BitCast>
|       | `-ImplicitCastExpr 0x12ba4593210 <col:39> 'char *' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x12ba45931d8 <col:39> 'char *' lvalue ParmVar 0x12ba4585f98 'str' 'char *'
|       |-ConditionalOperator 0x12ba4593330 <col:44, col:58> 'int'
|       | |-BinaryOperator 0x12ba45932b0 <col:44, col:50> 'int' '>'
|       | | |-ImplicitCastExpr 0x12ba4593298 <col:44> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x12ba4593250 <col:44> 'int' lvalue ParmVar 0x12ba4586098 'len' 'int'
|       | | `-IntegerLiteral 0x12ba4593270 <col:50> 'int' 4
|       | |-IntegerLiteral 0x12ba45932d0 <col:54> 'int' 4
|       | `-ImplicitCastExpr 0x12ba4593318 <col:58> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x12ba45932f8 <col:58> 'int' lvalue ParmVar 0x12ba4586098 'len' 'int'
|       `-ImplicitCastExpr 0x12ba45933d0 <col:63> 'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x12ba4593360 <col:63> 'unsigned long' lvalue Var 0x12ba4595238 'utf32chr' 'unsigned long'
|-FunctionDecl 0x12ba45935a0 <line:171:1, line:213:1> line:171:7 OPENSSL_uni2utf8 'char *(const unsigned char *, int)'
| |-ParmVarDecl 0x12ba4593450 <col:24, col:45> col:45 used uni 'const unsigned char *'
| |-ParmVarDecl 0x12ba45934d0 <col:50, col:54> col:54 used unilen 'int'
| `-CompoundStmt 0x12ba458f290 <line:172:1, line:213:1>
|   |-DeclStmt 0x12ba4593808 <line:173:5, col:21>
|   | |-VarDecl 0x12ba4593680 <col:5, col:9> col:9 used asclen 'int'
|   | |-VarDecl 0x12ba4593700 <col:5, col:17> col:17 used i 'int'
|   | `-VarDecl 0x12ba4593780 <col:5, col:20> col:20 used j 'int'
|   |-DeclStmt 0x12ba45938a0 <line:174:5, col:17>
|   | `-VarDecl 0x12ba4593838 <col:5, col:11> col:11 used asctmp 'char *'
|   |-IfStmt 0x12ba45939e8 <line:177:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x12ba4593918 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:177:9, col:18> 'int' '&'
|   | | |-ImplicitCastExpr 0x12ba4593900 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba45938b8 <col:9> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   | | `-IntegerLiteral 0x12ba45938d8 <col:18> 'int' 1
|   | `-ReturnStmt 0x12ba45939d8 <line:178:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x12ba45939c0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x12ba45939a0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x12ba4593978 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x12ba4593938 <col:26> 'int' 0
|   |-ForStmt 0x12ba4594278 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:180:5, line:191:5>
|   | |-BinaryOperator 0x12ba4593b00 <line:180:10, col:26> 'int' ','
|   | | |-BinaryOperator 0x12ba4593a60 <col:10, col:19> 'int' '='
|   | | | |-DeclRefExpr 0x12ba4593a00 <col:10> 'int' lvalue Var 0x12ba4593680 'asclen' 'int'
|   | | | `-IntegerLiteral 0x12ba4593a38 <col:19> 'int' 0
|   | | `-BinaryOperator 0x12ba4593ae0 <col:22, col:26> 'int' '='
|   | |   |-DeclRefExpr 0x12ba4593a80 <col:22> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   | |   `-IntegerLiteral 0x12ba4593ab8 <col:26> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12ba4593b90 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x12ba4593b60 <col:29> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba4593b20 <col:29> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   | | `-ImplicitCastExpr 0x12ba4593b78 <col:33> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12ba4593b40 <col:33> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x12ba4594248 <col:43, line:191:5>
|   |   |-BinaryOperator 0x12ba4593e40 <line:181:9, col:46> 'int' '='
|   |   | |-DeclRefExpr 0x12ba4593bb0 <col:9> 'int' lvalue Var 0x12ba4593780 'j' 'int'
|   |   | `-CallExpr 0x12ba4593df0 <col:13, col:46> 'int'
|   |   |   |-ImplicitCastExpr 0x12ba4593dd8 <col:13> 'int (*)(char *, const unsigned char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12ba4593be8 <col:13> 'int (char *, const unsigned char *, int)' Function 0x12ba4595150 'bmp_to_utf8' 'int (char *, const unsigned char *, int)'
|   |   |   |-ImplicitCastExpr 0x12ba4593e28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   |   | `-ParenExpr 0x12ba4593c70 <col:17, col:27> 'void *'
|   |   |   |   `-CStyleCastExpr 0x12ba4593c48 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   |     `-IntegerLiteral 0x12ba4593c08 <col:26> 'int' 0
|   |   |   |-BinaryOperator 0x12ba4593d00 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:181:31, col:35> 'const unsigned char *' '+'
|   |   |   | |-ImplicitCastExpr 0x12ba4593cd0 <col:31> 'const unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x12ba4593c90 <col:31> 'const unsigned char *' lvalue ParmVar 0x12ba4593450 'uni' 'const unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x12ba4593ce8 <col:35> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12ba4593cb0 <col:35> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   |   |   `-BinaryOperator 0x12ba4593d90 <col:38, col:45> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x12ba4593d60 <col:38> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x12ba4593d20 <col:38> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   |   |     `-ImplicitCastExpr 0x12ba4593d78 <col:45> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x12ba4593d40 <col:45> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   |   |-IfStmt 0x12ba4593ff0 <line:187:9, col:54>
|   |   | |-BinaryOperator 0x12ba4593ec0 <col:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x12ba4593ea8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12ba4593e60 <col:13> 'int' lvalue Var 0x12ba4593780 'j' 'int'
|   |   | | `-IntegerLiteral 0x12ba4593e80 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x12ba4593fe0 <col:20, col:54>
|   |   |   `-CallExpr 0x12ba4593f80 <col:27, col:54> 'char *'
|   |   |     |-ImplicitCastExpr 0x12ba4593f68 <col:27> 'char *(*)(const unsigned char *, int)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x12ba4593ee0 <col:27> 'char *(const unsigned char *, int)' Function 0x12ba4583200 'OPENSSL_uni2asc' 'char *(const unsigned char *, int)'
|   |   |     |-ImplicitCastExpr 0x12ba4593fb0 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x12ba4593f00 <col:43> 'const unsigned char *' lvalue ParmVar 0x12ba4593450 'uni' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x12ba4593fc8 <col:48> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x12ba4593f20 <col:48> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   |   |-IfStmt 0x12ba4594198 <line:188:9, line:189:26> has_else
|   |   | |-BinaryOperator 0x12ba4594088 <line:188:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x12ba4594070 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12ba4594008 <col:13> 'int' lvalue Var 0x12ba4593780 'j' 'int'
|   |   | | `-IntegerLiteral 0x12ba4594028 <col:18> 'int' 4
|   |   | |-CompoundAssignOperator 0x12ba45940f0 <col:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | | |-DeclRefExpr 0x12ba45940a8 <col:21> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   |   | | `-IntegerLiteral 0x12ba45940c8 <col:26> 'int' 4
|   |   | `-CompoundAssignOperator 0x12ba4594168 <line:189:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x12ba4594120 <col:21> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   |   |   `-IntegerLiteral 0x12ba4594140 <col:26> 'int' 2
|   |   `-CompoundAssignOperator 0x12ba4594218 <line:190:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x12ba45941c0 <col:9> 'int' lvalue Var 0x12ba4593680 'asclen' 'int'
|   |     `-ImplicitCastExpr 0x12ba4594200 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12ba45941e0 <col:19> 'int' lvalue Var 0x12ba4593780 'j' 'int'
|   |-IfStmt 0x12ba45945a8 <line:194:5, line:195:15>
|   | |-BinaryOperator 0x12ba4594550 <line:194:9, col:51> 'int' '||'
|   | | |-UnaryOperator 0x12ba45942e8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x12ba45942d0 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12ba45942b0 <col:10> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   | | `-ParenExpr 0x12ba4594530 <col:20, col:51> 'int'
|   | |   `-BinaryOperator 0x12ba4594510 <col:21, col:50> 'int' '||'
|   | |     |-ImplicitCastExpr 0x12ba45944c8 <col:21, col:33> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x12ba45944b0 <col:21, col:33> 'unsigned char' <LValueToRValue>
|   | |     |   `-ArraySubscriptExpr 0x12ba45943b8 <col:21, col:33> 'const unsigned char' lvalue
|   | |     |     |-ImplicitCastExpr 0x12ba45943a0 <col:21> 'const unsigned char *' <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x12ba4594300 <col:21> 'const unsigned char *' lvalue ParmVar 0x12ba4593450 'uni' 'const unsigned char *'
|   | |     |     `-BinaryOperator 0x12ba4594380 <col:25, col:32> 'int' '-'
|   | |     |       |-ImplicitCastExpr 0x12ba4594368 <col:25> 'int' <LValueToRValue>
|   | |     |       | `-DeclRefExpr 0x12ba4594320 <col:25> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   | |     |       `-IntegerLiteral 0x12ba4594340 <col:32> 'int' 2
|   | |     `-ImplicitCastExpr 0x12ba45944f8 <col:36, col:50> 'int' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x12ba45944e0 <col:36, col:50> 'unsigned char' <LValueToRValue>
|   | |         `-ArraySubscriptExpr 0x12ba4594490 <col:36, col:50> 'const unsigned char' lvalue
|   | |           |-ImplicitCastExpr 0x12ba4594478 <col:36> 'const unsigned char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x12ba45943d8 <col:36> 'const unsigned char *' lvalue ParmVar 0x12ba4593450 'uni' 'const unsigned char *'
|   | |           `-BinaryOperator 0x12ba4594458 <col:40, col:49> 'int' '-'
|   | |             |-ImplicitCastExpr 0x12ba4594440 <col:40> 'int' <LValueToRValue>
|   | |             | `-DeclRefExpr 0x12ba45943f8 <col:40> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   | |             `-IntegerLiteral 0x12ba4594418 <col:49> 'int' 1
|   | `-UnaryOperator 0x12ba4594590 <line:195:9, col:15> 'int' postfix '++'
|   |   `-DeclRefExpr 0x12ba4594570 <col:9> 'int' lvalue Var 0x12ba4593680 'asclen' 'int'
|   |-IfStmt 0x12ba4594858 <line:197:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x12ba4594788 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:197:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x12ba45946c8 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:197:9, col:41> 'char *'
|   | | | `-BinaryOperator 0x12ba45946a8 <col:10, col:40> 'char *' '='
|   | | |   |-DeclRefExpr 0x12ba45945c0 <col:10> 'char *' lvalue Var 0x12ba4593838 'asctmp' 'char *'
|   | | |   `-ImplicitCastExpr 0x12ba4594690 <col:19, col:40> 'char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x12ba4594650 <col:19, col:40> 'int'
|   | | |       |-ImplicitCastExpr 0x12ba4594638 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x12ba45945f8 <col:19> 'int ()' Function 0x12ba457b200 'OPENSSL_malloc' 'int ()'
|   | | |       `-ImplicitCastExpr 0x12ba4594678 <col:34> 'int' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x12ba4594618 <col:34> 'int' lvalue Var 0x12ba4593680 'asclen' 'int'
|   | | `-ImplicitCastExpr 0x12ba4594770 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x12ba4594750 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x12ba4594728 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x12ba45946e8 <col:26> 'int' 0
|   | `-ReturnStmt 0x12ba4594848 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:198:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x12ba4594830 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x12ba4594810 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x12ba45947e8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x12ba45947a8 <col:26> 'int' 0
|   |-ForStmt 0x12ba4594e98 <.//openssl//file_jk/after\crypto\pkcs12\p12_utl.c:201:5, line:206:5>
|   | |-BinaryOperator 0x12ba4594940 <line:201:10, col:26> 'int' ','
|   | | |-BinaryOperator 0x12ba45948b8 <col:10, col:19> 'int' '='
|   | | | |-DeclRefExpr 0x12ba4594870 <col:10> 'int' lvalue Var 0x12ba4593680 'asclen' 'int'
|   | | | `-IntegerLiteral 0x12ba4594890 <col:19> 'int' 0
|   | | `-BinaryOperator 0x12ba4594920 <col:22, col:26> 'int' '='
|   | |   |-DeclRefExpr 0x12ba45948d8 <col:22> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   | |   `-IntegerLiteral 0x12ba45948f8 <col:26> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12ba45949d0 <col:29, col:33> 'int' '<'
|   | | |-ImplicitCastExpr 0x12ba45949a0 <col:29> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12ba4594960 <col:29> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   | | `-ImplicitCastExpr 0x12ba45949b8 <col:33> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12ba4594980 <col:33> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x12ba4594e70 <col:43, line:206:5>
|   |   |-BinaryOperator 0x12ba4594c30 <line:202:9, col:55> 'int' '='
|   |   | |-DeclRefExpr 0x12ba45949f0 <col:9> 'int' lvalue Var 0x12ba4593780 'j' 'int'
|   |   | `-CallExpr 0x12ba4594bf8 <col:13, col:55> 'int'
|   |   |   |-ImplicitCastExpr 0x12ba4594be0 <col:13> 'int (*)(char *, const unsigned char *, int)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x12ba4594a10 <col:13> 'int (char *, const unsigned char *, int)' Function 0x12ba4595150 'bmp_to_utf8' 'int (char *, const unsigned char *, int)'
|   |   |   |-BinaryOperator 0x12ba4594aa0 <col:25, col:32> 'char *' '+'
|   |   |   | |-ImplicitCastExpr 0x12ba4594a70 <col:25> 'char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x12ba4594a30 <col:25> 'char *' lvalue Var 0x12ba4593838 'asctmp' 'char *'
|   |   |   | `-ImplicitCastExpr 0x12ba4594a88 <col:32> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12ba4594a50 <col:32> 'int' lvalue Var 0x12ba4593680 'asclen' 'int'
|   |   |   |-BinaryOperator 0x12ba4594b30 <col:40, col:44> 'const unsigned char *' '+'
|   |   |   | |-ImplicitCastExpr 0x12ba4594b00 <col:40> 'const unsigned char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x12ba4594ac0 <col:40> 'const unsigned char *' lvalue ParmVar 0x12ba4593450 'uni' 'const unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x12ba4594b18 <col:44> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x12ba4594ae0 <col:44> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   |   |   `-BinaryOperator 0x12ba4594bc0 <col:47, col:54> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x12ba4594b90 <col:47> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x12ba4594b50 <col:47> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   |   |     `-ImplicitCastExpr 0x12ba4594ba8 <col:54> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x12ba4594b70 <col:54> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   |   |-IfStmt 0x12ba4594dc0 <line:203:9, line:204:26> has_else
|   |   | |-BinaryOperator 0x12ba4594cb0 <line:203:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x12ba4594c98 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x12ba4594c50 <col:13> 'int' lvalue Var 0x12ba4593780 'j' 'int'
|   |   | | `-IntegerLiteral 0x12ba4594c70 <col:18> 'int' 4
|   |   | |-CompoundAssignOperator 0x12ba4594d18 <col:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | | |-DeclRefExpr 0x12ba4594cd0 <col:21> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   |   | | `-IntegerLiteral 0x12ba4594cf0 <col:26> 'int' 4
|   |   | `-CompoundAssignOperator 0x12ba4594d90 <line:204:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x12ba4594d48 <col:21> 'int' lvalue Var 0x12ba4593700 'i' 'int'
|   |   |   `-IntegerLiteral 0x12ba4594d68 <col:26> 'int' 2
|   |   `-CompoundAssignOperator 0x12ba4594e40 <line:205:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x12ba4594de8 <col:9> 'int' lvalue Var 0x12ba4593680 'asclen' 'int'
|   |     `-ImplicitCastExpr 0x12ba4594e28 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x12ba4594e08 <col:19> 'int' lvalue Var 0x12ba4593780 'j' 'int'
|   |-IfStmt 0x12ba458f230 <line:209:5, line:210:26>
|   | |-BinaryOperator 0x12ba458f130 <line:209:9, col:51> 'int' '||'
|   | | |-UnaryOperator 0x12ba4594f08 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x12ba4594ef0 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12ba4594ed0 <col:10> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   | | `-ParenExpr 0x12ba458f110 <col:20, col:51> 'int'
|   | |   `-BinaryOperator 0x12ba458f0f0 <col:21, col:50> 'int' '||'
|   | |     |-ImplicitCastExpr 0x12ba458f0a8 <col:21, col:33> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x12ba458f090 <col:21, col:33> 'unsigned char' <LValueToRValue>
|   | |     |   `-ArraySubscriptExpr 0x12ba4594fd8 <col:21, col:33> 'const unsigned char' lvalue
|   | |     |     |-ImplicitCastExpr 0x12ba4594fc0 <col:21> 'const unsigned char *' <LValueToRValue>
|   | |     |     | `-DeclRefExpr 0x12ba4594f20 <col:21> 'const unsigned char *' lvalue ParmVar 0x12ba4593450 'uni' 'const unsigned char *'
|   | |     |     `-BinaryOperator 0x12ba4594fa0 <col:25, col:32> 'int' '-'
|   | |     |       |-ImplicitCastExpr 0x12ba4594f88 <col:25> 'int' <LValueToRValue>
|   | |     |       | `-DeclRefExpr 0x12ba4594f40 <col:25> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   | |     |       `-IntegerLiteral 0x12ba4594f60 <col:32> 'int' 2
|   | |     `-ImplicitCastExpr 0x12ba458f0d8 <col:36, col:50> 'int' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x12ba458f0c0 <col:36, col:50> 'unsigned char' <LValueToRValue>
|   | |         `-ArraySubscriptExpr 0x12ba458f070 <col:36, col:50> 'const unsigned char' lvalue
|   | |           |-ImplicitCastExpr 0x12ba458f058 <col:36> 'const unsigned char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x12ba4594ff8 <col:36> 'const unsigned char *' lvalue ParmVar 0x12ba4593450 'uni' 'const unsigned char *'
|   | |           `-BinaryOperator 0x12ba458f038 <col:40, col:49> 'int' '-'
|   | |             |-ImplicitCastExpr 0x12ba458f020 <col:40> 'int' <LValueToRValue>
|   | |             | `-DeclRefExpr 0x12ba4595018 <col:40> 'int' lvalue ParmVar 0x12ba45934d0 'unilen' 'int'
|   | |             `-IntegerLiteral 0x12ba4595038 <col:49> 'int' 1
|   | `-BinaryOperator 0x12ba458f210 <line:210:9, col:26> 'char' '='
|   |   |-ArraySubscriptExpr 0x12ba458f1c0 <col:9, col:22> 'char' lvalue
|   |   | |-ImplicitCastExpr 0x12ba458f190 <col:9> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12ba458f150 <col:9> 'char *' lvalue Var 0x12ba4593838 'asctmp' 'char *'
|   |   | `-ImplicitCastExpr 0x12ba458f1a8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x12ba458f170 <col:16> 'int' lvalue Var 0x12ba4593680 'asclen' 'int'
|   |   `-ImplicitCastExpr 0x12ba458f1f8 <col:26> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x12ba458f1e0 <col:26> 'int' 0
|   `-ReturnStmt 0x12ba458f280 <line:212:5, col:12>
|     `-ImplicitCastExpr 0x12ba458f268 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x12ba458f248 <col:12> 'char *' lvalue Var 0x12ba4593838 'asctmp' 'char *'
|-FunctionDecl 0x12ba458f460 <line:215:1, line:218:1> line:215:5 invalid i2d_PKCS12_bio 'int (int *, int *)'
| |-ParmVarDecl 0x12ba458f300 <col:20, col:25> col:25 invalid bp 'int *'
| |-ParmVarDecl 0x12ba458f380 <col:29, col:37> col:37 invalid p12 'int *'
| `-CompoundStmt 0x12ba458f748 <line:216:1, line:218:1>
|-FunctionDecl 0x12ba458f900 <line:221:1, line:224:1> line:221:5 invalid i2d_PKCS12_fp 'int (FILE *, int *)'
| |-ParmVarDecl 0x12ba458f768 <col:19, col:25> col:25 used fp 'FILE *'
| |-ParmVarDecl 0x12ba458f7e8 <col:29, col:37> col:37 invalid p12 'int *'
| `-CompoundStmt 0x12ba458fb30 <line:222:1, line:224:1>
|-FunctionDecl 0x12ba458fce0 <line:227:1, line:230:1> line:227:9 invalid d2i_PKCS12_bio 'int *(int *, int **)'
| |-ParmVarDecl 0x12ba458fb58 <col:24, col:29> col:29 invalid bp 'int *'
| |-ParmVarDecl 0x12ba458fc08 <col:33, col:42> col:42 invalid p12 'int **'
| `-CompoundStmt 0x12ba458fed8 <line:228:1, line:230:1>
`-FunctionDecl 0x12ba4597150 <line:233:1, line:236:1> line:233:9 invalid d2i_PKCS12_fp 'int *(FILE *, int **)'
  |-ParmVarDecl 0x12ba458fef8 <col:23, col:29> col:29 used fp 'FILE *'
  |-ParmVarDecl 0x12ba458ff80 <col:33, col:42> col:42 invalid p12 'int **'
  `-CompoundStmt 0x12ba4597380 <line:234:1, line:236:1>
