TranslationUnitDecl 0x194b1b460a8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x194b1b46940 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x194b1b46640 '__int128'
|-TypedefDecl 0x194b1b469b0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x194b1b46660 'unsigned __int128'
|-TypedefDecl 0x194b1b46ce8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x194b1b46aa0 'struct __NSConstantString_tag'
|   `-Record 0x194b1b46a08 '__NSConstantString_tag'
|-TypedefDecl 0x194b1b46d58 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x194b1b46280 'unsigned long long'
|-TypedefDecl 0x194b1b46df0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x194b1b46db0 'char *'
|   `-BuiltinType 0x194b1b46140 'char'
|-TypedefDecl 0x194b1b46e60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x194b1b46db0 'char *'
|   `-BuiltinType 0x194b1b46140 'char'
|-TypedefDecl 0x194b1b46f20 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x194b1b46280 'unsigned long long'
|-TypedefDecl 0x194b1b46f90 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x194b1b46db0 'char *'
|   `-BuiltinType 0x194b1b46140 'char'
|-FunctionDecl 0x194b35d1410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x194b35d14b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x194b35d1520 <col:21> Implicit
|-FunctionDecl 0x194b35d1578 prev 0x194b35d1410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x194b35d12a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x194b35d1668 <col:21> Inherited Implicit
|-TypedefDecl 0x194b35d16a8 prev 0x194b1b46d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x194b1b46280 'unsigned long long'
|-TypedefDecl 0x194b35d1750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x194b35d1720 'size_t' sugar
|   |-Typedef 0x194b35d16a8 'size_t'
|   `-BuiltinType 0x194b1b46280 'unsigned long long'
|-TypedefDecl 0x194b35d17c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x194b1b461e0 'long long'
|-TypedefDecl 0x194b35d1830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x194b1b461e0 'long long'
|-TypedefDecl 0x194b35d18a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x194b1b46220 'unsigned short'
|-TypedefDecl 0x194b35d1910 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x194b1b46220 'unsigned short'
|-TypedefDecl 0x194b35d1980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x194b1b46220 'unsigned short'
|-TypedefDecl 0x194b35d19f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x194b1b461a0 'int'
|-TypedefDecl 0x194b35d1a60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x194b1b461c0 'long'
|-TypedefDecl 0x194b35d1ad0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x194b1b461e0 'long long'
|-TypedefDecl 0x194b35d1b60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x194b35d1b30 '__time64_t' sugar
|   |-Typedef 0x194b35d1ad0 '__time64_t'
|   `-BuiltinType 0x194b1b461e0 'long long'
|-FunctionDecl 0x194b35d1cd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x194b35d1ef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x194b360b180 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x194b35d2038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x194b35d20b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x194b35d2128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x194b35d21a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x194b360af20 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x194b360b260 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x194b360b320 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x194b360b490 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x194b360b440 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x194b360b3e0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x194b360b300 'struct threadlocaleinfostruct'
|       `-Record 0x194b3617ff0 'threadlocaleinfostruct'
|-TypedefDecl 0x194b360b5a0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x194b360b550 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x194b360b4f0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x194b360b3c0 'struct threadmbcinfostruct'
|       `-Record 0x194b360b320 'threadmbcinfostruct'
|-RecordDecl 0x194b360b5f8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x194b360b6b0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x194b360b770 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x194b360b800 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x194b360b890 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x194b360b948 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x194b360b8f0 'struct localeinfo_struct' sugar
|   `-RecordType 0x194b360b750 'struct localeinfo_struct'
|     `-Record 0x194b360b6b0 'localeinfo_struct'
|-TypedefDecl 0x194b360ba20 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x194b360b9d0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x194b360b8f0 'struct localeinfo_struct' sugar
|     `-RecordType 0x194b360b750 'struct localeinfo_struct'
|       `-Record 0x194b360b6b0 'localeinfo_struct'
|-RecordDecl 0x194b360ba98 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x194b360bb50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x194b360bbc8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x194b360bc88 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x194b360bd20 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x194b360bd90 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x194b360be48 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x194b360bdf0 'struct localerefcount' sugar
|   `-RecordType 0x194b360bb30 'struct localerefcount'
|     `-Record 0x194b360ba98 'localerefcount'
|-RecordDecl 0x194b3617ff0 prev 0x194b360b260 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x194b3618070 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x194b36180e8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x194b3618158 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x194b36181c8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x194b3618238 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x194b36183f8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x194b3618468 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x194b36184d8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x194b3618548 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x194b36185b8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x194b3618628 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x194b3618680 parent 0x194b1b460a8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x194b3618810 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x194b3618880 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x194b36188f0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x194b3618960 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x194b3618a00 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x194b3618a70 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x194b3618b80 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x194b3618cb8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x194b3618d68 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x194b3618d10 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x194b360b300 'struct threadlocaleinfostruct'
|     `-Record 0x194b3617ff0 'threadlocaleinfostruct'
|-TypedefDecl 0x194b3622090 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x194b3618f60 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x194b3618f00 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x194b3618eb0 'int (void)' sugar
|     | `-FunctionProtoType 0x194b3618e80 'int (void)' cdecl
|     |   `-BuiltinType 0x194b1b461a0 'int'
|     `-ParenType 0x194b3618eb0 'int (void)' sugar
|       `-FunctionProtoType 0x194b3618e80 'int (void)' cdecl
|         `-BuiltinType 0x194b1b461a0 'int'
|-RecordDecl 0x194b36220e8 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x194b36221a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x194b3622218 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x194b3622288 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x194b3622338 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x194b36222e0 'struct _div_t' sugar
|   `-RecordType 0x194b3622180 'struct _div_t'
|     `-Record 0x194b36220e8 '_div_t'
|-RecordDecl 0x194b36223a8 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x194b3622460 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x194b36224d8 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x194b3622548 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x194b36225f8 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x194b36225a0 'struct _ldiv_t' sugar
|   `-RecordType 0x194b3622440 'struct _ldiv_t'
|     `-Record 0x194b36223a8 '_ldiv_t'
|-RecordDecl 0x194b3622668 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x194b3622720 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x194b3622798 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x194b3622808 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x194b36228b8 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x194b3622860 'struct _lldiv_t' sugar
|   `-RecordType 0x194b3622700 'struct _lldiv_t'
|     `-Record 0x194b3622668 '_lldiv_t'
|-RecordDecl 0x194b3622950 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x194b3622a10 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x194b3622b10 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x194b3622bc8 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x194b3622b70 'struct _LDOUBLE' sugar
|   `-RecordType 0x194b36229f0 '_LDOUBLE'
|     `-Record 0x194b3622950 ''
|-RecordDecl 0x194b3622c38 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x194b3622d08 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x194b3622db8 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x194b3622d60 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x194b3622cd0 '_CRT_DOUBLE'
|     `-Record 0x194b3622c38 ''
|-RecordDecl 0x194b3622e28 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x194b3622ef8 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x194b3622fa8 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x194b3622f50 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x194b3622ec0 '_CRT_FLOAT'
|     `-Record 0x194b3622e28 ''
|-RecordDecl 0x194b361e050 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x194b361e128 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x194b361e1d8 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x194b361e180 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x194b361e0f0 '_LONGDOUBLE'
|     `-Record 0x194b361e050 ''
|-RecordDecl 0x194b361e270 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x194b361e330 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x194b361e430 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x194b361e4e8 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x194b361e490 'struct _LDBL12' sugar
|   `-RecordType 0x194b361e310 '_LDBL12'
|     `-Record 0x194b361e270 ''
|-VarDecl 0x194b361e570 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x194b361e6f0 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x194b361e948 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x194b361e7e0 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x194b361eb90 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x194b361eb30 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x194b361ead0 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x194b361ea80 'void (void)' sugar
|     | `-FunctionProtoType 0x194b35d1c30 'void (void)' cdecl
|     |   `-BuiltinType 0x194b1b46100 'void'
|     `-ParenType 0x194b361ea80 'void (void)' sugar
|       `-FunctionProtoType 0x194b35d1c30 'void (void)' cdecl
|         `-BuiltinType 0x194b1b46100 'void'
|-FunctionDecl 0x194b361ed90 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x194b361ec20 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x194b361efa8 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x194b361b3d8 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x194b361b350 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x194b361b2f0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x194b361b2a0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x194b360afe0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x194b1b46100 'void'
|     |   |-PointerType 0x194b35d2000 'const wchar_t *'
|     |   | `-QualType 0x194b35d1fb1 'const wchar_t' const
|     |   |   `-TypedefType 0x194b35d1fb0 'wchar_t' sugar
|     |   |     |-Typedef 0x194b35d18a0 'wchar_t'
|     |   |     `-BuiltinType 0x194b1b46220 'unsigned short'
|     |   |-PointerType 0x194b35d2000 'const wchar_t *'
|     |   | `-QualType 0x194b35d1fb1 'const wchar_t' const
|     |   |   `-TypedefType 0x194b35d1fb0 'wchar_t' sugar
|     |   |     |-Typedef 0x194b35d18a0 'wchar_t'
|     |   |     `-BuiltinType 0x194b1b46220 'unsigned short'
|     |   |-PointerType 0x194b35d2000 'const wchar_t *'
|     |   | `-QualType 0x194b35d1fb1 'const wchar_t' const
|     |   |   `-TypedefType 0x194b35d1fb0 'wchar_t' sugar
|     |   |     |-Typedef 0x194b35d18a0 'wchar_t'
|     |   |     `-BuiltinType 0x194b1b46220 'unsigned short'
|     |   |-BuiltinType 0x194b1b46240 'unsigned int'
|     |   `-TypedefType 0x194b35d2210 'uintptr_t' sugar
|     |     |-Typedef 0x194b1b46f20 'uintptr_t'
|     |     `-BuiltinType 0x194b1b46280 'unsigned long long'
|     `-ParenType 0x194b361b2a0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x194b360afe0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x194b1b46100 'void'
|         |-PointerType 0x194b35d2000 'const wchar_t *'
|         | `-QualType 0x194b35d1fb1 'const wchar_t' const
|         |   `-TypedefType 0x194b35d1fb0 'wchar_t' sugar
|         |     |-Typedef 0x194b35d18a0 'wchar_t'
|         |     `-BuiltinType 0x194b1b46220 'unsigned short'
|         |-PointerType 0x194b35d2000 'const wchar_t *'
|         | `-QualType 0x194b35d1fb1 'const wchar_t' const
|         |   `-TypedefType 0x194b35d1fb0 'wchar_t' sugar
|         |     |-Typedef 0x194b35d18a0 'wchar_t'
|         |     `-BuiltinType 0x194b1b46220 'unsigned short'
|         |-PointerType 0x194b35d2000 'const wchar_t *'
|         | `-QualType 0x194b35d1fb1 'const wchar_t' const
|         |   `-TypedefType 0x194b35d1fb0 'wchar_t' sugar
|         |     |-Typedef 0x194b35d18a0 'wchar_t'
|         |     `-BuiltinType 0x194b1b46220 'unsigned short'
|         |-BuiltinType 0x194b1b46240 'unsigned int'
|         `-TypedefType 0x194b35d2210 'uintptr_t' sugar
|           |-Typedef 0x194b1b46f20 'uintptr_t'
|           `-BuiltinType 0x194b1b46280 'unsigned long long'
|-FunctionDecl 0x194b361b5d0 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x194b361b460 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x194b361b7e8 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x194b361b9d0 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x194b361bc40 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x194b361bac8 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x194b361be90 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x194b361bd18 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x194b3623150 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x194b3623390 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x194b3623220 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x194b36235e0 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x194b3623468 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x194b36238c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x194b3623960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3623c20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x194b3623cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x194b3623e08 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x194b3623ea0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x194b3623f90 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x194b3624028 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x194b361d070 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x194b361d200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x194b361d268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x194b361d4a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x194b361d510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b361d7d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x194b361d658 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x194b361da20 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x194b361d8a8 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x194b361dbf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x194b361dc58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b361de78 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x194b361dda0 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x194b361c030 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x194b361df50 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x194b361c280 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x194b361c320 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x194b361c390 prev 0x194b361c280 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x194b361c108 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x194b361c540 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x194b361c5e0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x194b361c650 prev 0x194b361c540 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x194b361c468 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x194b361c7d8 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x194b361c878 prev 0x194b361c7d8 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x194b361cb30 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x194b361c948 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x194b361c9c8 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x194b361cd28 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x194b361cdc8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x194b361ce38 <col:19> Implicit
| `-ConstAttr 0x194b361ce90 <col:19> Implicit
|-FunctionDecl 0x194b361ceb8 prev 0x194b361cd28 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x194b361cc10 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x194b361cfa8 <col:19> Inherited Implicit
| `-ConstAttr 0x194b361cfd0 <col:19> Inherited Implicit
|-FunctionDecl 0x194b36241f8 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x194b3624298 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x194b3624308 <col:19> Implicit
| `-ConstAttr 0x194b3624360 <col:19> Implicit
|-FunctionDecl 0x194b3624388 prev 0x194b36241f8 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x194b36240b0 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x194b3624478 <col:19> Inherited Implicit
| `-ConstAttr 0x194b36244a0 <col:19> Inherited Implicit
|-FunctionDecl 0x194b3624628 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x194b36246c8 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x194b3624738 <col:19> Implicit
| `-ConstAttr 0x194b3624790 <col:19> Implicit
|-FunctionDecl 0x194b36247b8 prev 0x194b3624628 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x194b36244e0 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x194b36248a8 <col:19> Inherited Implicit
| `-ConstAttr 0x194b36248d0 <col:19> Inherited Implicit
|-FunctionDecl 0x194b36249d8 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x194b3624910 <col:35> col:42 'long long'
|-FunctionDecl 0x194b3624cd8 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x194b3624b70 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x194b3624ef8 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x194b3624db0 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x194b3625200 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x194b3624fd0 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x194b3625048 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3625428 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x194b36252e0 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x194b3625720 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x194b3625500 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x194b3625578 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3625948 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x194b3625800 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x194b3625c40 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x194b3625a20 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x194b3625a98 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3625e68 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x194b3625d20 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x194b365c8a0 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x194b3625f40 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x194b3625fb8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b365d190 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x194b365c9b0 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x194b365ca30 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x194b365cad0 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x194b365cb48 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x194b365cea0 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x194b365cf20 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x194b36598f8 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x194b365d290 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x194b365d310 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x194b365d388 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b365d400 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b365d6d8 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x194b365a000 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x194b36599f0 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x194b3659a68 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x194b3659ae0 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x194b3659d48 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x194b3659dc8 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x194b365a5c8 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x194b365a0f8 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x194b365a170 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b365a1e8 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b365a3c8 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x194b36567d8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x194b3656878 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x194b36568e8 <col:47> Implicit
| `-ConstAttr 0x194b3656940 <col:47> Implicit
|-FunctionDecl 0x194b3656968 prev 0x194b36567d8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x194b365a6b8 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x194b3656a58 <col:47> Inherited Implicit
| `-ConstAttr 0x194b3656a80 <col:47> Inherited Implicit
|-FunctionDecl 0x194b3656c08 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x194b3656ca8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x194b3656d18 <col:47> Implicit
| `-ConstAttr 0x194b3656d70 <col:47> Implicit
|-FunctionDecl 0x194b3656d98 prev 0x194b3656c08 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x194b3656ac0 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x194b3656e88 <col:47> Inherited Implicit
| `-ConstAttr 0x194b3656eb0 <col:47> Inherited Implicit
|-FunctionDecl 0x194b3657038 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x194b36570d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x194b3657148 <col:49> Implicit
| `-ConstAttr 0x194b36571a0 <col:49> Implicit
|-FunctionDecl 0x194b36571c8 prev 0x194b3657038 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x194b3656ef0 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x194b36572b8 <col:49> Inherited Implicit
| `-ConstAttr 0x194b36572e0 <col:49> Inherited Implicit
|-FunctionDecl 0x194b3657568 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x194b3657348 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x194b36573c8 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x194b365a8f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x194b365a7b0 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x194b365a9a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b365aeb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x194b365ab38 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x194b365abb8 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x194b365ac30 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x194b365acb0 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x194b365b270 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x194b365afa8 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x194b365b020 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x194b365b0a0 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x194b365b6d8 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x194b365b358 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x194b365b3d8 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x194b365b450 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b365b4d0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x194b365bb68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x194b365b8d0 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x194b365b950 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x194b365b9d0 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x194b365bc20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b365c0e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x194b365bd68 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x194b365bde8 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x194b365be60 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b365bee0 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x194b365c538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x194b365c298 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x194b365c318 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x194b365c398 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x194b365c5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3658a88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x194b365c738 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x194b3658790 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x194b3658808 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b3658888 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x194b3658ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x194b3658c38 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x194b3658cb8 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x194b3658d38 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x194b3658f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36591b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x194b36590d8 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x194b3659408 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x194b3659290 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x194b3659308 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3655760 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x194b36594e8 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x194b3659568 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x194b36595e8 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x194b3655bd0 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x194b3655848 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x194b36558c8 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x194b3655948 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x194b36559c0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3655f58 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x194b3655cc0 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x194b3655d40 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x194b3655dc0 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x194b36563c0 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x194b3656040 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x194b36560c0 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x194b3656140 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x194b36561b8 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3662830 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x194b36564d8 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x194b3656558 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x194b3662b58 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x194b3662938 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x194b36629b8 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x194b3662fb8 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x194b3662c38 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x194b3662cb8 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x194b3662d30 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b3662db0 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x194b3663408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x194b3663168 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x194b36631e8 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x194b3663268 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x194b36634c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b365e7f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x194b3663608 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x194b3663680 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x194b365eb98 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x194b365e8d0 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x194b365e948 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b365e9c0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b365edf0 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x194b365ec80 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x194b365f0e8 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x194b365eec8 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x194b365ef40 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b365f3e8 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x194b365f1c8 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x194b365f240 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x194b3663840 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x194b365f4c8 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x194b365f540 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b365f5b8 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3663bf8 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x194b3663920 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x194b36639a0 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x194b3663a18 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x194b3664050 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x194b3663cd8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x194b3663d58 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x194b3663dd0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b3663e48 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3664550 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x194b3664138 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x194b36641b0 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x194b3664228 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b36642a8 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x194b3664320 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x194b365f9d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x194b3664700 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x194b3664780 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x194b365f800 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x194b365fa88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3660088 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x194b365fbc8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x194b365fc40 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x194b365fcb8 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b365fd38 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x194b365fdb0 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b365fe28 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b36605e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x194b3660278 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x194b36602f8 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x194b3660370 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b36603e8 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x194b36606a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3664910 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x194b3664ac0 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x194b36649e0 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x194b3664ce0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x194b3664b98 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x194b3664fa0 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x194b3665040 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x194b36650a8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x194b3665120 prev 0x194b3664fa0 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x194b3664db8 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x194b3664e38 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x194b36654d8 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x194b3665200 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x194b3665280 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x194b36652f8 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3660858 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x194b36608f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x194b3660960 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x194b36609c8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x194b3660a48 prev 0x194b3660858 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x194b36655c0 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x194b3665640 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x194b36656c0 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x194b3660eb0 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x194b3660b30 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x194b3660bb0 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x194b3660c30 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x194b3660ca8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b36611c0 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x194b3661260 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x194b36612c8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x194b3661330 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x194b36613b0 prev 0x194b36611c0 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x194b3660fa0 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x194b3661020 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x194b36610a0 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x194b3661750 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x194b3661498 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x194b3661518 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x194b3661598 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x194b3661610 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3661ae8 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x194b3661b88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x194b3661bf0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x194b3661c58 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x194b3661cd8 prev 0x194b3661ae8 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x194b3661850 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x194b36618d0 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x194b3661950 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x194b3662140 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x194b3661dc0 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x194b3661e40 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x194b3661ec0 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x194b3661f38 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3662450 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x194b36624f0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x194b3662558 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x194b36625c0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x194b3662640 prev 0x194b3662450 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x194b3662230 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x194b36622b0 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x194b3662330 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x194b365d9b0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x194b3662728 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x194b36627a8 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x194b365d7f8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x194b365d870 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b365dc90 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x194b365dd30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x194b365dd98 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x194b365de10 prev 0x194b365dc90 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x194b365daa0 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x194b365db20 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x194b365e1c8 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x194b365def0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x194b365df70 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x194b365dfe8 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b365e4a0 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x194b365e540 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x194b365e5a8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x194b365e620 prev 0x194b365e4a0 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x194b365e2b0 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x194b365e330 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x194b366cb28 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x194b365e700 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x194b366c8d0 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x194b366c948 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b366ccf0 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x194b366cc10 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x194b366d148 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x194b366cdc8 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x194b366ce48 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x194b366cec0 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b366cf40 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x194b366d598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x194b366d2f8 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x194b366d378 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x194b366d3f8 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x194b366d650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3666a20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x194b366d858 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x194b3666870 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x194b3666ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3666fa8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x194b3666cd8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x194b3666d50 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x194b3666dc8 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x194b3667060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3667518 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x194b36671a8 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x194b3667228 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x194b36672a0 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x194b3667318 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x194b3665a10 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x194b3667608 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x194b3667688 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x194b3667700 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b3667778 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x194b36677f0 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3665f20 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x194b3665b00 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x194b3665b80 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x194b3665bf8 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b3665c70 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x194b3665ce8 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x194b36663a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x194b36660d8 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x194b3666150 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x194b36661c8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x194b3666458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3667a78 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x194b3666598 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x194b3666618 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x194b3666690 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b3666708 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x194b3666780 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b36667f8 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3667fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x194b3667c38 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x194b3667cb0 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x194b3667d28 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b3667da0 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x194b3668068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36683d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x194b3668470 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x194b36684d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x194b3668550 prev 0x194b36683d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x194b36681a8 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b3668220 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x194b3668600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x194b3668658 <line:615:33> restrict
|-FunctionDecl 0x194b366a8b0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x194b36686b0 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x194b366a958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x194b366ab58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x194b366abf8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x194b366ac68 prev 0x194b366ab58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x194b366a9d8 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x194b366ad10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x194b366ad68 <line:615:33> restrict
|-FunctionDecl 0x194b366afe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x194b366b080 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x194b366b0e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x194b366b160 prev 0x194b366afe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x194b366adc0 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x194b366ae38 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x194b366b210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x194b366b268 <line:615:33> restrict
|-FunctionDecl 0x194b366b588 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x194b366b2c0 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x194b366b338 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366b3b0 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x194b366b640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x194b366b698 <line:615:33> restrict
|-FunctionDecl 0x194b366b7c8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x194b366b6f0 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x194b366b870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x194b366eac0 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x194b366e948 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366e9c0 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x194b366eb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x194b366ebc8 <line:615:33> restrict
|-FunctionDecl 0x194b366eee8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x194b366ec18 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366ec90 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366ed08 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x194b366efa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x194b366eff8 <line:615:33> restrict
|-FunctionDecl 0x194b366f260 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x194b366f050 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x194b366f0c8 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366f140 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x194b366f318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x194b366f370 <line:615:33> restrict
|-FunctionDecl 0x194b366f740 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x194b366f3c8 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x194b366f440 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366f4b8 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366f530 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x194b366f800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x194b366f858 <line:615:33> restrict
|-FunctionDecl 0x194b366fba8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x194b366f900 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x194b366f978 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366f9f0 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366fa68 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x194b366fc68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x194b366fcc0 <line:615:33> restrict
|-FunctionDecl 0x194b3670138 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x194b366fd18 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x194b366fd90 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366fe08 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366fe80 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b366fef8 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x194b3670200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x194b3670258 <line:615:33> restrict
|-FunctionDecl 0x194b3670570 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x194b36702b0 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x194b3670328 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b36703a0 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x194b3669988 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x194b3670658 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x194b36706d0 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x194b3670748 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b36707c8 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x194b3669e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x194b3669b38 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x194b3669bb0 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x194b3669c30 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x194b3669eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b366a378 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x194b366a000 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x194b366a078 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x194b366a0f0 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b366a170 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x194b366a7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x194b366a528 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x194b366a5a0 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x194b366a620 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x194b36688a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3668d68 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x194b36689f0 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x194b3668a68 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x194b3668ae0 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b3668b60 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x194b36691e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x194b3668f18 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x194b3668f90 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x194b3669010 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x194b3669298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3669600 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x194b36693d8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x194b3669458 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x194b3670a38 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x194b36696d8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3669758 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x194b36697d0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3670df8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x194b3670b18 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3670b98 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x194b3670c18 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x194b3671260 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x194b3670ed8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3670f58 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x194b3670fd8 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x194b3671050 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3671628 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x194b3671348 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b36713c8 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x194b3671448 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x194b3671ab0 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x194b3671708 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3671788 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x194b3671808 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x194b3671880 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3671e78 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x194b3671b98 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3671c18 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x194b3671c98 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x194b36722e0 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x194b3671f58 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3671fd8 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x194b3672058 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x194b36720d0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b36726a8 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x194b36723c8 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3672448 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x194b36724c8 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x194b3672b40 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x194b3672788 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3672808 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x194b3672888 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x194b3672930 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3672e50 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x194b3672c28 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x194b3672ca8 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x194b36731f8 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x194b3672f28 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3672fa8 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x194b3673020 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3673500 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x194b36732d8 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x194b3673358 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x194b366b8c0 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x194b36735d8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3673658 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x194b36736d0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b366bbd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x194b366ba60 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x194b366bc78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b366c128 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x194b366bdb8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x194b366be30 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x194b366bea8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b366bf20 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x194b366c4e0 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x194b366c218 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x194b366c290 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x194b366c308 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x194b366c738 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x194b366c5c0 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x194b369c158 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x194b366c808 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x194b369c450 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x194b369c228 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x194b369c2a0 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b369c608 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x194b369c528 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x194b369c900 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x194b369c6d8 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x194b369c750 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b369cb58 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x194b369c9d8 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x194b369ce50 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x194b369cc28 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x194b369cca0 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b369a0a8 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x194b369cf28 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x194b369a3a0 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x194b369a178 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x194b369a1f0 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b369a7f8 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x194b369a480 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x194b369a4f8 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x194b369a570 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b369a5f0 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x194b369ac70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x194b369a9a8 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x194b369aa20 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x194b369aaa0 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x194b369ad28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36961b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x194b369ae70 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x194b369aee8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x194b369af60 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x194b369afe0 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x194b3696630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x194b3696368 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x194b36963e0 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x194b3696460 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x194b36966e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3696908 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x194b3696828 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x194b3696b50 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x194b36969d8 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x194b3696a50 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3696e48 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x194b3696c28 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3696ca8 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x194b3696d28 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x194b369b238 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x194b3696f28 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b3696fa8 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x194b369b080 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x194b369b0f8 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b369b540 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x194b369b320 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b369b3a0 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x194b369b420 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x194b369b8d8 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x194b369b620 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x194b369b6a0 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x194b369b720 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x194b369b798 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b369bc98 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x194b369b9c8 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x194b369ba48 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x194b369bac0 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x194b3698238 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x194b369bd80 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x194b369bdf8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b369be78 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x194b369bef8 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x194b369bf78 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x194b369bff8 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x194b3698730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x194b36983f8 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x194b3698478 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x194b36984f8 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x194b3698578 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x194b36987f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b3698d28 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x194b3698938 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x194b36989b0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b3698a30 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x194b3698ab0 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x194b3698b30 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x194b3698bb0 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x194b369d1f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x194b3698ee8 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x194b3698f68 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x194b3698fe8 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x194b369d0b8 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x194b369d2b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b369d778 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x194b369d400 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x194b369d478 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b369d4f8 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x194b369d578 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x194b369dbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x194b369d928 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x194b369d9a8 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x194b369da28 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x194b369dc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b369e0b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x194b369de38 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x194b369deb8 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x194b369e430 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x194b369e208 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x194b369e288 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x194b369e7b0 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x194b369e588 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x194b369e608 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x194b369eb58 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x194b369e888 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x194b369e908 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x194b369e980 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b369ef08 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x194b369ec38 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x194b369ecb8 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x194b369ed30 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3697298 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x194b369efe8 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x194b3697040 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x194b36970b8 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x194b3697570 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x194b3697610 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x194b3697678 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x194b36976f0 <col:46> Implicit
|-FunctionDecl 0x194b3697748 prev 0x194b3697570 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x194b3697380 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x194b3697400 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x194b3697840 <col:46> Inherited Implicit
|-FunctionDecl 0x194b3697a00 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x194b3697aa0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x194b3697b08 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x194b3697b80 <col:46> Implicit
|-FunctionDecl 0x194b3697bd8 prev 0x194b3697a00 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x194b3697880 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x194b3697900 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x194b3697cd0 <col:46> Inherited Implicit
|-FunctionDecl 0x194b36a62e8 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x194b3697d10 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x194b3697d88 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b3697e08 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x194b3697e88 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x194b3697f08 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x194b3697f88 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x194b36a6890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x194b36a64a8 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x194b36a6528 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x194b36a65a8 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x194b36a6628 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x194b36a66a8 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x194b36a6958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a6c30 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x194b36a6ac0 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x194b36a6e50 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x194b36a6d08 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x194b36a7008 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x194b36a6f28 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x194b36a02f8 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x194b36a00d0 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x194b36a0150 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x194b36a05c0 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x194b36a0660 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x194b36a06c8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x194b36a0740 <col:30> Implicit
|-FunctionDecl 0x194b36a0798 prev 0x194b36a05c0 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x194b36a03d8 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x194b36a0458 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x194b36a0890 <col:30> Inherited Implicit
|-FunctionDecl 0x194b36a0ac0 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x194b36a0b60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x194b36a0bc8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x194b36a0c40 <col:34> Implicit
|-FunctionDecl 0x194b36a0c98 prev 0x194b36a0ac0 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x194b36a08d0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x194b36a0950 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x194b36a0d90 <col:34> Inherited Implicit
|-FunctionDecl 0x194b36a0f50 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x194b36a0ff0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x194b36a1058 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x194b36a4110 <col:30> Implicit
|-FunctionDecl 0x194b36a4168 prev 0x194b36a0f50 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x194b36a0dd0 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x194b36a0e50 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x194b36a4260 <col:30> Inherited Implicit
|-FunctionDecl 0x194b36a4420 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x194b36a44c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x194b36a4528 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x194b36a45a0 <col:34> Implicit
|-FunctionDecl 0x194b36a45f8 prev 0x194b36a4420 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x194b36a42a0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x194b36a4320 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x194b36a46f0 <col:34> Inherited Implicit
|-FunctionDecl 0x194b36a4aa8 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x194b36a4730 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x194b36a47b0 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x194b36a4830 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x194b36a48a8 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x194b36a4ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x194b36a4c58 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x194b36a4cd8 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x194b36a4d58 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x194b36a4fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a55e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x194b36a51f8 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x194b36a5278 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x194b36a52f8 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x194b36a5378 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x194b36a53f8 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x194b36a56a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a5ec0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x194b36a57f0 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x194b36a5870 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x194b36a58e8 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b36a5968 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x194b36a59e0 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b36a5a60 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x194b36a5ad8 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b36a5b58 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x194b36a5bd0 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x194b369f250 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x194b36a5fd8 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x194b36a6058 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x194b369f0c0 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x194b369f5f0 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x194b369f330 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x194b369f3a8 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x194b369f420 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x194b369fb88 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x194b369f6d0 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x194b369f748 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b369f7c0 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x194b369f838 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x194b369f8b0 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x194b369f928 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x194b36a71f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x194b369fd40 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x194b369fdb8 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x194b369fe30 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x194b369fea8 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x194b369ff20 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x194b36a72b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a7570 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x194b36a73f8 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x194b36a7720 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x194b36a7640 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x194b36a7a08 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x194b36a77f0 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x194b36a7868 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x194b36a7e48 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x194b36a7ae0 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x194b36a7b58 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x194b36a7bd0 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x194b36a7c48 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x194b36a8320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x194b36a7ff0 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x194b36a8068 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x194b36a8150 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x194b36a83d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a89f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x194b36a85d8 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x194b36a8650 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x194b36a86c8 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x194b36a8740 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x194b36a87b8 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x194b36a8ab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a1290 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x194b36a8bf8 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x194b36a8c70 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x194b36a8ce8 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b36a8d60 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x194b36a8dd8 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b36a8e50 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x194b36a8ec8 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b36a8f40 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x194b36a8fb8 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x194b36a15b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x194b36a14a8 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x194b36a1658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x194b36a1a48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x194b36a1868 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x194b36a18e8 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x194b36a1af8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x194b36a1e40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x194b36a1d00 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x194b36a1ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x194b36a9598 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x194b36a92d8 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x194b36a9358 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x194b36a93d8 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x194b36a9458 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x194b36a9658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x194b36a9750 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a9c88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x194b36a99c8 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x194b36a9a48 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x194b36a9ac8 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x194b36a9b48 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x194b36a9d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x194b36a9e40 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a2290 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x194b36aa0b8 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x194b36a20f0 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x194b36a2170 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x194b36a2348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x194b36a2440 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a28d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x194b36a26b8 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x194b36a2738 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x194b36a27b8 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x194b36a2990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x194b36a2a88 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a2f20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x194b36a2d00 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x194b36a2d80 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x194b36a2e00 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x194b36a2fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x194b36aa170 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36aa440 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x194b36aa360 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x194b36aa4e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x194b36aa8c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x194b36aa6b0 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x194b36aa730 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x194b36aa7b0 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x194b36aa980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x194b36aae60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x194b36aac40 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x194b36aacc0 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x194b36aad40 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x194b36aaf18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x194b36ab010 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x194b36a31d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x194b36a3100 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-TypedefDecl 0x194b36a32b0 <.//openssl//file_jk/after\crypto\poly1305\poly1305_ieee754.c:55:1, col:23> col:23 u8 'unsigned char'
| `-BuiltinType 0x194b1b46200 'unsigned char'
|-TypedefDecl 0x194b36a3320 <line:56:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x194b1b46240 'unsigned int'
|-TypedefDecl 0x194b36a3390 <line:57:1, col:28> col:28 referenced u64 'unsigned long long'
| `-BuiltinType 0x194b1b46280 'unsigned long long'
|-RecordDecl 0x194b36a33e8 <line:58:9, col:34> col:9 union definition
| |-FieldDecl 0x194b36a34b8 <col:17, col:24> col:24 referenced d 'double'
| `-FieldDecl 0x194b36a3540 <col:27, col:31> col:31 referenced u 'u64':'unsigned long long'
|-TypedefDecl 0x194b36a35f8 <col:1, col:36> col:36 referenced elem64 'union elem64':'elem64'
| `-ElaboratedType 0x194b36a35a0 'union elem64' sugar
|   `-RecordType 0x194b36a3480 'elem64'
|     `-Record 0x194b36a33e8 ''
|-RecordDecl 0x194b36a3668 <line:89:9, line:93:1> line:89:9 struct definition
| |-FieldDecl 0x194b36a3878 <line:90:5, col:15> col:12 referenced h 'elem64 [4]'
| |-FieldDecl 0x194b36a3970 <line:91:5, col:15> col:12 referenced r 'double [8]'
| `-FieldDecl 0x194b36a3a70 <line:92:5, col:15> col:12 referenced s 'double [6]'
|-TypedefDecl 0x194b36a3b28 <line:89:1, line:93:3> col:3 referenced poly1305_internal 'struct poly1305_internal':'poly1305_internal'
| `-ElaboratedType 0x194b36a3ad0 'struct poly1305_internal' sugar
|   `-RecordType 0x194b36a3700 'poly1305_internal'
|     `-Record 0x194b36a3668 ''
|-VarDecl 0x194b36a3bd0 <line:97:1, col:26> col:18 used mxcsr 'const u32':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x194b36a3c78 <col:26> 'u32':'unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x194b36a3c38 <col:26> 'int' 32640
|-FunctionDecl 0x194b36a3f70 <line:108:1, line:213:1> line:108:5 poly1305_init 'int (void *, const unsigned char *)'
| |-ParmVarDecl 0x194b36a3ca8 <col:19, col:25> col:25 used ctx 'void *'
| |-ParmVarDecl 0x194b36a3e20 <col:30, col:56> col:50 used key 'const unsigned char *':'const unsigned char *'
| `-CompoundStmt 0x194b370d630 <line:109:1, line:213:1>
|   |-DeclStmt 0x194b36ae288 <line:110:5, col:54>
|   | `-VarDecl 0x194b36ae1b0 <col:5, col:51> col:24 used st 'poly1305_internal *' cinit
|   |   `-CStyleCastExpr 0x194b36ae260 <col:29, col:51> 'poly1305_internal *' <BitCast>
|   |     `-ImplicitCastExpr 0x194b36ae248 <col:51> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x194b36ae218 <col:51> 'void *' lvalue ParmVar 0x194b36a3ca8 'ctx' 'void *'
|   |-DeclStmt 0x194b36ae4a8 <line:111:5, col:26>
|   | |-VarDecl 0x194b36ae2b0 <col:5, col:12> col:12 used r0 'elem64':'elem64'
|   | |-VarDecl 0x194b36ae328 <col:5, col:16> col:16 used r1 'elem64':'elem64'
|   | |-VarDecl 0x194b36ae3a0 <col:5, col:20> col:20 used r2 'elem64':'elem64'
|   | `-VarDecl 0x194b36ae418 <col:5, col:24> col:24 used r3 'elem64':'elem64'
|   |-BinaryOperator 0x194b36ae7a8 <line:120:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x194b36ae600 <line:120:5, col:14> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   | | `-ArraySubscriptExpr 0x194b36ae5e0 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x194b36ae5c8 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x194b36ae510 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   | |   |   `-ImplicitCastExpr 0x194b36ae4f8 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x194b36ae4c0 <col:5> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x194b36ae540 <col:11> 'int' 0
|   | `-ParenExpr 0x194b36ae788 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x194b36ae768 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x194b36ae720 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x194b36ae700 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x194b36ae630 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x194b36ae6e8 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x194b36ae6c8 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x194b36ae6a8 <line:120:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x194b36ae658 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x194b36ae680 <col:25> 'int' 0
|   |     `-IntegerLiteral 0x194b36ae740 <line:67:33> 'int' 52
|   |-BinaryOperator 0x194b36aea38 <line:121:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x194b36ae890 <line:121:5, col:14> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   | | `-ArraySubscriptExpr 0x194b36ae870 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x194b36ae858 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x194b36ae800 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   | |   |   `-ImplicitCastExpr 0x194b36ae7e8 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x194b36ae7c8 <col:5> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x194b36ae830 <col:11> 'int' 1
|   | `-ParenExpr 0x194b36aea18 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x194b36ae9f8 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x194b36ae9b0 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x194b36ae990 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x194b36ae8c0 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x194b36ae978 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x194b36ae958 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x194b36ae938 <line:121:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x194b36ae8e8 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x194b36ae910 <col:25> 'int' 32
|   |     `-IntegerLiteral 0x194b36ae9d0 <line:67:33> 'int' 52
|   |-BinaryOperator 0x194b36aecc8 <line:122:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x194b36aeb20 <line:122:5, col:14> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   | | `-ArraySubscriptExpr 0x194b36aeb00 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x194b36aeae8 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x194b36aea90 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   | |   |   `-ImplicitCastExpr 0x194b36aea78 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x194b36aea58 <col:5> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x194b36aeac0 <col:11> 'int' 2
|   | `-ParenExpr 0x194b36aeca8 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x194b36aec88 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x194b36aec40 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x194b36aec20 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x194b36aeb50 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x194b36aec08 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x194b36aebe8 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x194b36aebc8 <line:122:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x194b36aeb78 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x194b36aeba0 <col:25> 'int' 64
|   |     `-IntegerLiteral 0x194b36aec60 <line:67:33> 'int' 52
|   |-BinaryOperator 0x194b36aef58 <line:123:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x194b36aedb0 <line:123:5, col:14> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   | | `-ArraySubscriptExpr 0x194b36aed90 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x194b36aed78 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x194b36aed20 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   | |   |   `-ImplicitCastExpr 0x194b36aed08 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x194b36aece8 <col:5> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x194b36aed50 <col:11> 'int' 3
|   | `-ParenExpr 0x194b36aef38 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x194b36aef18 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x194b36aeed0 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x194b36aeeb0 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x194b36aede0 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x194b36aee98 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x194b36aee78 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x194b36aee58 <line:123:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x194b36aee08 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x194b36aee30 <col:25> 'int' 96
|   |     `-IntegerLiteral 0x194b36aeef0 <line:67:33> 'int' 52
|   |-IfStmt 0x194b370d5e0 <line:126:5, line:210:5>
|   | |-ImplicitCastExpr 0x194b36aef98 <line:126:9> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x194b36aef78 <col:9> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x194b36a3e20 'key' 'const unsigned char *':'const unsigned char *'
|   | `-CompoundStmt 0x194b370d4e8 <col:14, line:210:5>
|   |   |-DeclStmt 0x194b36af028 <line:131:9, col:23>
|   |   | `-VarDecl 0x194b36aefc0 <col:9, col:13> col:13 used mxcsr_orig 'u32':'unsigned int'
|   |   |-GCCAsmStmt 0x194b36af130 <line:133:9, col:52>
|   |   | `-DeclRefExpr 0x194b36af0f8 <col:41> 'u32':'unsigned int' lvalue Var 0x194b36aefc0 'mxcsr_orig' 'u32':'unsigned int'
|   |   |-GCCAsmStmt 0x194b36b0278 <line:134:9, col:47>
|   |   | `-DeclRefExpr 0x194b36b0258 <col:41> 'const u32':'const unsigned int' lvalue Var 0x194b36a3bd0 'mxcsr' 'const u32':'const unsigned int'
|   |   |-BinaryOperator 0x194b36b0738 <line:153:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x194b36b0320 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   |   | | `-DeclRefExpr 0x194b36b02e8 <col:9> 'elem64':'elem64' lvalue Var 0x194b36ae2b0 'r0' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x194b36b0718 <line:67:17, line:153:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x194b36b04a8 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x194b36b0488 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x194b36b0440 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x194b36b0420 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x194b36b0350 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x194b36b0408 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x194b36b03e8 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x194b36b03c8 <line:153:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x194b36b0378 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x194b36b03a0 <col:23> 'int' 0
|   |   |   |   `-IntegerLiteral 0x194b36b0460 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x194b36b0700 <line:153:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x194b36b06e0 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x194b36b06c0 <line:70:21, line:153:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x194b36b0690 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x194b36b0648 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x194b36b0630 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x194b36b0608 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x194b36b05e8 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x194b36b0548 <line:153:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x194b36b0528 <col:39, col:44> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x194b36b0510 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x194b36b04c8 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x194b36a3e20 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x194b36b04e8 <col:43> 'int' 0
|   |   |         `-ImplicitCastExpr 0x194b36b06a8 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x194b36b0668 <col:50> 'int' 268435455
|   |   |-BinaryOperator 0x194b36b0b50 <line:154:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x194b36b0790 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   |   | | `-DeclRefExpr 0x194b36b0758 <col:9> 'elem64':'elem64' lvalue Var 0x194b36ae328 'r1' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x194b36b0b30 <line:67:17, line:154:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x194b36b0918 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x194b36b08f8 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x194b36b08b0 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x194b36b0890 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x194b36b07c0 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x194b36b0878 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x194b36b0858 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x194b36b0838 <line:154:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x194b36b07e8 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x194b36b0810 <col:23> 'int' 32
|   |   |   |   `-IntegerLiteral 0x194b36b08d0 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x194b36b0b18 <line:154:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x194b36b0af8 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x194b36b0ad8 <line:70:21, line:154:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x194b36b0aa8 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x194b36b0a60 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x194b36b0a48 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x194b36b0a20 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x194b36b0a00 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x194b36b09b8 <line:154:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x194b36b0998 <col:39, col:44> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x194b36b0980 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x194b36b0938 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x194b36a3e20 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x194b36b0958 <col:43> 'int' 4
|   |   |         `-ImplicitCastExpr 0x194b36b0ac0 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x194b36b0a80 <col:50> 'int' 268435452
|   |   |-BinaryOperator 0x194b36b0f68 <line:155:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x194b36b0ba8 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   |   | | `-DeclRefExpr 0x194b36b0b70 <col:9> 'elem64':'elem64' lvalue Var 0x194b36ae3a0 'r2' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x194b36b0f48 <line:67:17, line:155:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x194b36b0d30 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x194b36b0d10 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x194b36b0cc8 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x194b36b0ca8 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x194b36b0bd8 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x194b36b0c90 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x194b36b0c70 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x194b36b0c50 <line:155:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x194b36b0c00 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x194b36b0c28 <col:23> 'int' 64
|   |   |   |   `-IntegerLiteral 0x194b36b0ce8 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x194b36b0f30 <line:155:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x194b36b0f10 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x194b36b0ef0 <line:70:21, line:155:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x194b36b0ec0 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x194b36b0e78 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x194b36b0e60 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x194b36b0e38 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x194b36b0e18 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x194b36b0dd0 <line:155:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x194b36b0db0 <col:39, col:44> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x194b36b0d98 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x194b36b0d50 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x194b36a3e20 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x194b36b0d70 <col:43> 'int' 8
|   |   |         `-ImplicitCastExpr 0x194b36b0ed8 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x194b36b0e98 <col:50> 'int' 268435452
|   |   |-BinaryOperator 0x194b36ab338 <line:156:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x194b36b0fc0 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   |   | | `-DeclRefExpr 0x194b36b0f88 <col:9> 'elem64':'elem64' lvalue Var 0x194b36ae418 'r3' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x194b36ab318 <line:67:17, line:156:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x194b36b1148 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x194b36b1128 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x194b36b10e0 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x194b36b10c0 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x194b36b0ff0 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x194b36b10a8 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x194b36b1088 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x194b36b1068 <line:156:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x194b36b1018 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x194b36b1040 <col:23> 'int' 96
|   |   |   |   `-IntegerLiteral 0x194b36b1100 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x194b36ab300 <line:156:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x194b36ab2e0 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x194b36ab2c0 <line:70:21, line:156:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x194b36ab290 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x194b36ab248 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x194b36ab230 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x194b36ab208 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x194b36ab1e8 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x194b36ab1a0 <line:156:38, col:45> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x194b36ab180 <col:39, col:45> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x194b36b11b0 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x194b36b1168 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x194b36a3e20 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x194b36b1188 <col:43> 'int' 12
|   |   |         `-ImplicitCastExpr 0x194b36ab2a8 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x194b36ab268 <col:50> 'int' 268435452
|   |   |-BinaryOperator 0x194b36ab758 <line:158:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b36ab430 <line:158:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b36ab418 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b36ab390 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b36ab378 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b36ab358 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b36ab3c0 <col:15> 'int' 0
|   |   | `-BinaryOperator 0x194b36ab738 <col:20, line:60:37> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b36ab720 <line:158:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x194b36ab470 <col:20, col:23> 'double' lvalue .d 0x194b36a34b8
|   |   |   |   `-DeclRefExpr 0x194b36ab450 <col:20> 'elem64':'elem64' lvalue Var 0x194b36ae2b0 'r0' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x194b36ab700 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x194b36ab5b0 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b36ab588 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b36ab568 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b36ab510 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b36ab4a0 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b36ab4f0 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b36ab4c8 <line:158:31> 'int' 52
|   |   |     `-ParenExpr 0x194b36ab6e0 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x194b36ab6b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x194b36ab698 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x194b36ab640 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x194b36ab5d0 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x194b36ab620 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x194b36ab5f8 <line:61:19> 'int' 0
|   |   |-BinaryOperator 0x194b36abb48 <line:159:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b36ab820 <line:159:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b36ab808 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b36ab7b0 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b36ab798 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b36ab778 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b36ab7e0 <col:15> 'int' 2
|   |   | `-BinaryOperator 0x194b36abb28 <col:20, line:60:37> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b36abb10 <line:159:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x194b36ab860 <col:20, col:23> 'double' lvalue .d 0x194b36a34b8
|   |   |   |   `-DeclRefExpr 0x194b36ab840 <col:20> 'elem64':'elem64' lvalue Var 0x194b36ae328 'r1' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x194b36abaf0 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x194b36ab9a0 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b36ab978 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b36ab958 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b36ab900 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b36ab890 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b36ab8e0 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b36ab8b8 <line:159:31> 'int' 52
|   |   |     `-ParenExpr 0x194b36abad0 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x194b36abaa8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x194b36aba88 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x194b36aba30 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x194b36ab9c0 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x194b36aba10 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x194b36ab9e8 <line:62:20> 'int' 32
|   |   |-BinaryOperator 0x194b36ac0a8 <line:160:9, line:63:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b36abc10 <line:160:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b36abbf8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b36abba0 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b36abb88 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b36abb68 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b36abbd0 <col:15> 'int' 4
|   |   | `-BinaryOperator 0x194b36ac088 <col:20, line:63:30> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b36ac070 <line:160:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x194b36abc50 <col:20, col:23> 'double' lvalue .d 0x194b36a34b8
|   |   |   |   `-DeclRefExpr 0x194b36abc30 <col:20> 'elem64':'elem64' lvalue Var 0x194b36ae3a0 'r2' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x194b36ac050 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-ParenExpr 0x194b36abd90 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b36abd68 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b36abd48 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b36abcf0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b36abc80 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b36abcd0 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b36abca8 <line:160:31> 'int' 52
|   |   |     `-ParenExpr 0x194b36ac030 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b36ac010 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b36abec0 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x194b36abe98 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x194b36abe78 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x194b36abe20 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x194b36abdb0 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x194b36abe00 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x194b36abdd8 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x194b36abff0 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b36abfc8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b36abfa8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b36abf50 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b36abee0 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b36abf30 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b36abf08 <line:63:27> 'int' 32
|   |   |-BinaryOperator 0x194b36b3808 <line:161:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b36b3200 <line:161:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b36ac158 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b36ac100 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b36ac0e8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b36ac0c8 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b36ac130 <col:15> 'int' 6
|   |   | `-BinaryOperator 0x194b36b37e8 <col:20, line:64:30> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b36b37d0 <line:161:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x194b36b3240 <col:20, col:23> 'double' lvalue .d 0x194b36a34b8
|   |   |   |   `-DeclRefExpr 0x194b36b3220 <col:20> 'elem64':'elem64' lvalue Var 0x194b36ae418 'r3' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x194b36b37b0 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-ParenExpr 0x194b36b3380 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b36b3358 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b36b3338 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b36b32e0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b36b3270 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b36b32c0 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b36b3298 <line:161:31> 'int' 52
|   |   |     `-ParenExpr 0x194b36b3790 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b36b3770 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b36b3620 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x194b36b3600 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x194b36b34b0 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x194b36b3488 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x194b36b3468 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x194b36b3410 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x194b36b33a0 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x194b36b33f0 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x194b36b33c8 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x194b36b35e0 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x194b36b35b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x194b36b3598 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x194b36b3540 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x194b36b34d0 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x194b36b3520 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x194b36b34f8 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x194b36b3750 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b36b3728 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b36b3708 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b36b36b0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b36b3640 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b36b3690 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b36b3668 <line:64:27> 'int' 32
|   |   |-BinaryOperator 0x194b36b3fd8 <line:163:9, col:42> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b36b38d0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b36b38b8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b36b3860 <col:9, col:13> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   | | |   `-ImplicitCastExpr 0x194b36b3848 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b36b3828 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b36b3890 <col:15> 'int' 0
|   |   | `-BinaryOperator 0x194b36b3fb8 <col:20, col:42> 'double' '*'
|   |   |   |-ImplicitCastExpr 0x194b36b3fa0 <col:20, col:27> 'double' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x194b36b3998 <col:20, col:27> 'double' lvalue
|   |   |   |   |-ImplicitCastExpr 0x194b36b3980 <col:20, col:24> 'double *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x194b36b3928 <col:20, col:24> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |   |   |   `-ImplicitCastExpr 0x194b36b3910 <col:20> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x194b36b38f0 <col:20> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |   |   `-IntegerLiteral 0x194b36b3958 <col:26> 'int' 2
|   |   |   `-ParenExpr 0x194b36b3f80 <col:31, col:42> 'double'
|   |   |     `-BinaryOperator 0x194b36b3f60 <col:32, line:65:31> 'double' '/'
|   |   |       |-FloatingLiteral 0x194b36b39b8 <line:163:32> 'double' 5.000000e+00
|   |   |       `-ParenExpr 0x194b36b3f40 <line:65:17, col:31> 'double'
|   |   |         `-BinaryOperator 0x194b36b3f20 <line:64:16, line:60:37> 'double' '*'
|   |   |           |-ParenExpr 0x194b36b3dd0 <line:64:16, col:30> 'double'
|   |   |           | `-BinaryOperator 0x194b36b3db0 <line:63:16, line:60:37> 'double' '*'
|   |   |           |   |-ParenExpr 0x194b36b3c60 <line:63:16, col:30> 'double'
|   |   |           |   | `-BinaryOperator 0x194b36b3c40 <line:60:17, col:37> 'double' '*'
|   |   |           |   |   |-ParenExpr 0x194b36b3af0 <col:17, col:37> 'double'
|   |   |           |   |   | `-CStyleCastExpr 0x194b36b3ac8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |   |   `-ParenExpr 0x194b36b3aa8 <col:26, col:36> 'unsigned long long'
|   |   |           |   |   |     `-BinaryOperator 0x194b36b3a50 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |   |       |-IntegerLiteral 0x194b36b39e0 <col:27> 'unsigned long long' 1
|   |   |           |   |   |       `-ParenExpr 0x194b36b3a30 <col:33, col:35> 'int'
|   |   |           |   |   |         `-IntegerLiteral 0x194b36b3a08 <line:62:20> 'int' 32
|   |   |           |   |   `-ParenExpr 0x194b36b3c20 <line:60:17, col:37> 'double'
|   |   |           |   |     `-CStyleCastExpr 0x194b36b3bf8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |       `-ParenExpr 0x194b36b3bd8 <col:26, col:36> 'unsigned long long'
|   |   |           |   |         `-BinaryOperator 0x194b36b3b80 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |           |-IntegerLiteral 0x194b36b3b10 <col:27> 'unsigned long long' 1
|   |   |           |   |           `-ParenExpr 0x194b36b3b60 <col:33, col:35> 'int'
|   |   |           |   |             `-IntegerLiteral 0x194b36b3b38 <line:63:27> 'int' 32
|   |   |           |   `-ParenExpr 0x194b36b3d90 <line:60:17, col:37> 'double'
|   |   |           |     `-CStyleCastExpr 0x194b36b3d68 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |       `-ParenExpr 0x194b36b3d48 <col:26, col:36> 'unsigned long long'
|   |   |           |         `-BinaryOperator 0x194b36b3cf0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |           |-IntegerLiteral 0x194b36b3c80 <col:27> 'unsigned long long' 1
|   |   |           |           `-ParenExpr 0x194b36b3cd0 <col:33, col:35> 'int'
|   |   |           |             `-IntegerLiteral 0x194b36b3ca8 <line:64:27> 'int' 32
|   |   |           `-ParenExpr 0x194b36b3f00 <line:60:17, col:37> 'double'
|   |   |             `-CStyleCastExpr 0x194b36b3ed8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |               `-ParenExpr 0x194b36b3eb8 <col:26, col:36> 'unsigned long long'
|   |   |                 `-BinaryOperator 0x194b36b3e60 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                   |-IntegerLiteral 0x194b36b3df0 <col:27> 'unsigned long long' 1
|   |   |                   `-ParenExpr 0x194b36b3e40 <col:33, col:35> 'int'
|   |   |                     `-IntegerLiteral 0x194b36b3e18 <line:65:28> 'int' 34
|   |   |-BinaryOperator 0x194b36b1788 <line:164:9, col:42> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b36b40a0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b36b4088 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b36b4030 <col:9, col:13> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   | | |   `-ImplicitCastExpr 0x194b36b4018 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b36b3ff8 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b36b4060 <col:15> 'int' 2
|   |   | `-BinaryOperator 0x194b36b1768 <col:20, col:42> 'double' '*'
|   |   |   |-ImplicitCastExpr 0x194b36b1750 <col:20, col:27> 'double' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x194b36b4168 <col:20, col:27> 'double' lvalue
|   |   |   |   |-ImplicitCastExpr 0x194b36b4150 <col:20, col:24> 'double *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x194b36b40f8 <col:20, col:24> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |   |   |   `-ImplicitCastExpr 0x194b36b40e0 <col:20> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x194b36b40c0 <col:20> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |   |   `-IntegerLiteral 0x194b36b4128 <col:26> 'int' 4
|   |   |   `-ParenExpr 0x194b36b1730 <col:31, col:42> 'double'
|   |   |     `-BinaryOperator 0x194b36b1710 <col:32, line:65:31> 'double' '/'
|   |   |       |-FloatingLiteral 0x194b36b4188 <line:164:32> 'double' 5.000000e+00
|   |   |       `-ParenExpr 0x194b36b16f0 <line:65:17, col:31> 'double'
|   |   |         `-BinaryOperator 0x194b36b16d0 <line:64:16, line:60:37> 'double' '*'
|   |   |           |-ParenExpr 0x194b36b1580 <line:64:16, col:30> 'double'
|   |   |           | `-BinaryOperator 0x194b36b1560 <line:63:16, line:60:37> 'double' '*'
|   |   |           |   |-ParenExpr 0x194b36b1410 <line:63:16, col:30> 'double'
|   |   |           |   | `-BinaryOperator 0x194b36b13f0 <line:60:17, col:37> 'double' '*'
|   |   |           |   |   |-ParenExpr 0x194b36b12a0 <col:17, col:37> 'double'
|   |   |           |   |   | `-CStyleCastExpr 0x194b36b1278 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |   |   `-ParenExpr 0x194b36b1258 <col:26, col:36> 'unsigned long long'
|   |   |           |   |   |     `-BinaryOperator 0x194b36b1200 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |   |       |-IntegerLiteral 0x194b36b41b0 <col:27> 'unsigned long long' 1
|   |   |           |   |   |       `-ParenExpr 0x194b36b11e0 <col:33, col:35> 'int'
|   |   |           |   |   |         `-IntegerLiteral 0x194b36b41d8 <line:62:20> 'int' 32
|   |   |           |   |   `-ParenExpr 0x194b36b13d0 <line:60:17, col:37> 'double'
|   |   |           |   |     `-CStyleCastExpr 0x194b36b13a8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |       `-ParenExpr 0x194b36b1388 <col:26, col:36> 'unsigned long long'
|   |   |           |   |         `-BinaryOperator 0x194b36b1330 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |           |-IntegerLiteral 0x194b36b12c0 <col:27> 'unsigned long long' 1
|   |   |           |   |           `-ParenExpr 0x194b36b1310 <col:33, col:35> 'int'
|   |   |           |   |             `-IntegerLiteral 0x194b36b12e8 <line:63:27> 'int' 32
|   |   |           |   `-ParenExpr 0x194b36b1540 <line:60:17, col:37> 'double'
|   |   |           |     `-CStyleCastExpr 0x194b36b1518 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |       `-ParenExpr 0x194b36b14f8 <col:26, col:36> 'unsigned long long'
|   |   |           |         `-BinaryOperator 0x194b36b14a0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |           |-IntegerLiteral 0x194b36b1430 <col:27> 'unsigned long long' 1
|   |   |           |           `-ParenExpr 0x194b36b1480 <col:33, col:35> 'int'
|   |   |           |             `-IntegerLiteral 0x194b36b1458 <line:64:27> 'int' 32
|   |   |           `-ParenExpr 0x194b36b16b0 <line:60:17, col:37> 'double'
|   |   |             `-CStyleCastExpr 0x194b36b1688 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |               `-ParenExpr 0x194b36b1668 <col:26, col:36> 'unsigned long long'
|   |   |                 `-BinaryOperator 0x194b36b1610 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                   |-IntegerLiteral 0x194b36b15a0 <col:27> 'unsigned long long' 1
|   |   |                   `-ParenExpr 0x194b36b15f0 <col:33, col:35> 'int'
|   |   |                     `-IntegerLiteral 0x194b36b15c8 <line:65:28> 'int' 34
|   |   |-BinaryOperator 0x194b36b1f58 <line:165:9, col:42> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b36b1850 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b36b1838 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b36b17e0 <col:9, col:13> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   | | |   `-ImplicitCastExpr 0x194b36b17c8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b36b17a8 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b36b1810 <col:15> 'int' 4
|   |   | `-BinaryOperator 0x194b36b1f38 <col:20, col:42> 'double' '*'
|   |   |   |-ImplicitCastExpr 0x194b36b1f20 <col:20, col:27> 'double' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x194b36b1918 <col:20, col:27> 'double' lvalue
|   |   |   |   |-ImplicitCastExpr 0x194b36b1900 <col:20, col:24> 'double *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x194b36b18a8 <col:20, col:24> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |   |   |   `-ImplicitCastExpr 0x194b36b1890 <col:20> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x194b36b1870 <col:20> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |   |   `-IntegerLiteral 0x194b36b18d8 <col:26> 'int' 6
|   |   |   `-ParenExpr 0x194b36b1f00 <col:31, col:42> 'double'
|   |   |     `-BinaryOperator 0x194b36b1ee0 <col:32, line:65:31> 'double' '/'
|   |   |       |-FloatingLiteral 0x194b36b1938 <line:165:32> 'double' 5.000000e+00
|   |   |       `-ParenExpr 0x194b36b1ec0 <line:65:17, col:31> 'double'
|   |   |         `-BinaryOperator 0x194b36b1ea0 <line:64:16, line:60:37> 'double' '*'
|   |   |           |-ParenExpr 0x194b36b1d50 <line:64:16, col:30> 'double'
|   |   |           | `-BinaryOperator 0x194b36b1d30 <line:63:16, line:60:37> 'double' '*'
|   |   |           |   |-ParenExpr 0x194b36b1be0 <line:63:16, col:30> 'double'
|   |   |           |   | `-BinaryOperator 0x194b36b1bc0 <line:60:17, col:37> 'double' '*'
|   |   |           |   |   |-ParenExpr 0x194b36b1a70 <col:17, col:37> 'double'
|   |   |           |   |   | `-CStyleCastExpr 0x194b36b1a48 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |   |   `-ParenExpr 0x194b36b1a28 <col:26, col:36> 'unsigned long long'
|   |   |           |   |   |     `-BinaryOperator 0x194b36b19d0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |   |       |-IntegerLiteral 0x194b36b1960 <col:27> 'unsigned long long' 1
|   |   |           |   |   |       `-ParenExpr 0x194b36b19b0 <col:33, col:35> 'int'
|   |   |           |   |   |         `-IntegerLiteral 0x194b36b1988 <line:62:20> 'int' 32
|   |   |           |   |   `-ParenExpr 0x194b36b1ba0 <line:60:17, col:37> 'double'
|   |   |           |   |     `-CStyleCastExpr 0x194b36b1b78 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |       `-ParenExpr 0x194b36b1b58 <col:26, col:36> 'unsigned long long'
|   |   |           |   |         `-BinaryOperator 0x194b36b1b00 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |           |-IntegerLiteral 0x194b36b1a90 <col:27> 'unsigned long long' 1
|   |   |           |   |           `-ParenExpr 0x194b36b1ae0 <col:33, col:35> 'int'
|   |   |           |   |             `-IntegerLiteral 0x194b36b1ab8 <line:63:27> 'int' 32
|   |   |           |   `-ParenExpr 0x194b36b1d10 <line:60:17, col:37> 'double'
|   |   |           |     `-CStyleCastExpr 0x194b36b1ce8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |       `-ParenExpr 0x194b36b1cc8 <col:26, col:36> 'unsigned long long'
|   |   |           |         `-BinaryOperator 0x194b36b1c70 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |           |-IntegerLiteral 0x194b36b1c00 <col:27> 'unsigned long long' 1
|   |   |           |           `-ParenExpr 0x194b36b1c50 <col:33, col:35> 'int'
|   |   |           |             `-IntegerLiteral 0x194b36b1c28 <line:64:27> 'int' 32
|   |   |           `-ParenExpr 0x194b36b1e80 <line:60:17, col:37> 'double'
|   |   |             `-CStyleCastExpr 0x194b36b1e58 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |               `-ParenExpr 0x194b36b1e38 <col:26, col:36> 'unsigned long long'
|   |   |                 `-BinaryOperator 0x194b36b1de0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                   |-IntegerLiteral 0x194b36b1d70 <col:27> 'unsigned long long' 1
|   |   |                   `-ParenExpr 0x194b36b1dc0 <col:33, col:35> 'int'
|   |   |                     `-IntegerLiteral 0x194b36b1d98 <line:65:28> 'int' 34
|   |   |-BinaryOperator 0x194b36b2940 <line:170:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b36b2020 <line:170:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b36b2008 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b36b1fb0 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b36b1f98 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b36b1f78 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b36b1fe0 <col:15> 'int' 1
|   |   | `-BinaryOperator 0x194b36b2920 <col:20, line:60:37> 'double' '-'
|   |   |   |-ParenExpr 0x194b36b2530 <line:170:20, col:52> 'double'
|   |   |   | `-BinaryOperator 0x194b36b2510 <col:21, line:60:37> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x194b36b24f8 <line:170:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x194b36b20e8 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x194b36b20d0 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x194b36b2078 <col:21, col:25> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |   |   |   |   `-ImplicitCastExpr 0x194b36b2060 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x194b36b2040 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x194b36b20a8 <col:27> 'int' 0
|   |   |   |   `-BinaryOperator 0x194b36b24d8 <line:60:17, col:37> 'double' '*'
|   |   |   |     |-BinaryOperator 0x194b36b2388 <col:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x194b36b2238 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x194b36b2210 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x194b36b21f0 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x194b36b2178 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x194b36b2108 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x194b36b2158 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x194b36b2130 <line:170:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x194b36b2368 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x194b36b2340 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x194b36b2320 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x194b36b22c8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x194b36b2258 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x194b36b22a8 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x194b36b2280 <line:170:44> 'int' 16
|   |   |   |     `-ParenExpr 0x194b36b24b8 <line:60:17, col:37> 'double'
|   |   |   |       `-CStyleCastExpr 0x194b36b2490 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         `-ParenExpr 0x194b36b2470 <col:26, col:36> 'unsigned long long'
|   |   |   |           `-BinaryOperator 0x194b36b2418 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |             |-IntegerLiteral 0x194b36b23a8 <col:27> 'unsigned long long' 1
|   |   |   |             `-ParenExpr 0x194b36b23f8 <col:33, col:35> 'int'
|   |   |   |               `-IntegerLiteral 0x194b36b23d0 <line:61:19> 'int' 0
|   |   |   `-BinaryOperator 0x194b36b2900 <line:60:17, col:37> 'double' '*'
|   |   |     |-BinaryOperator 0x194b36b27b0 <col:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x194b36b2660 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x194b36b2638 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x194b36b2618 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x194b36b25c0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x194b36b2550 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x194b36b25a0 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x194b36b2578 <line:171:36> 'int' 52
|   |   |     | `-ParenExpr 0x194b36b2790 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x194b36b2768 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x194b36b2748 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x194b36b26f0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x194b36b2680 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x194b36b26d0 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x194b36b26a8 <line:171:44> 'int' 16
|   |   |     `-ParenExpr 0x194b36b28e0 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x194b36b28b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x194b36b2898 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x194b36b2840 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x194b36b27d0 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x194b36b2820 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x194b36b27f8 <line:61:19> 'int' 0
|   |   |-CompoundAssignOperator 0x194b36b2b08 <line:172:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x194b36b2a08 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b36b29f0 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b36b2998 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b36b2980 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b36b2960 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b36b29c8 <col:15> 'int' 0
|   |   | `-ImplicitCastExpr 0x194b36b2af0 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x194b36b2ad0 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x194b36b2ab8 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b36b2a60 <col:21, col:25> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |     |   `-ImplicitCastExpr 0x194b36b2a48 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b36b2a28 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b36b2a90 <col:27> 'int' 1
|   |   |-BinaryOperator 0x194b370f308 <line:174:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b36b2be0 <line:174:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b36b2bc8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b36b2b70 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b36b2b58 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b36b2b38 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b36b2ba0 <col:15> 'int' 3
|   |   | `-BinaryOperator 0x194b370f2e8 <col:20, line:60:37> 'double' '-'
|   |   |   |-ParenExpr 0x194b36b30d0 <line:174:20, col:53> 'double'
|   |   |   | `-BinaryOperator 0x194b36b30b0 <col:21, line:60:37> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x194b36b3098 <line:174:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x194b36b2ca8 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x194b36b2c90 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x194b36b2c38 <col:21, col:25> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |   |   |   |   `-ImplicitCastExpr 0x194b36b2c20 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x194b36b2c00 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x194b36b2c68 <col:27> 'int' 2
|   |   |   |   `-BinaryOperator 0x194b36b3078 <line:60:17, col:37> 'double' '*'
|   |   |   |     |-BinaryOperator 0x194b36b2f28 <col:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x194b36b2dd8 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x194b36b2db0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x194b36b2d90 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x194b36b2d38 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x194b36b2cc8 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x194b36b2d18 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x194b36b2cf0 <line:174:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x194b36b2f08 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x194b36b2ee0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x194b36b2ec0 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x194b36b2e68 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x194b36b2df8 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x194b36b2e48 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x194b36b2e20 <line:174:44> 'int' 16
|   |   |   |     `-ParenExpr 0x194b36b3058 <line:60:17, col:37> 'double'
|   |   |   |       `-CStyleCastExpr 0x194b36b3030 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         `-ParenExpr 0x194b36b3010 <col:26, col:36> 'unsigned long long'
|   |   |   |           `-BinaryOperator 0x194b36b2fb8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |             |-IntegerLiteral 0x194b36b2f48 <col:27> 'unsigned long long' 1
|   |   |   |             `-ParenExpr 0x194b36b2f98 <col:33, col:35> 'int'
|   |   |   |               `-IntegerLiteral 0x194b36b2f70 <line:62:20> 'int' 32
|   |   |   `-BinaryOperator 0x194b370f2c8 <line:60:17, col:37> 'double' '*'
|   |   |     |-BinaryOperator 0x194b370f178 <col:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x194b370f028 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x194b370f000 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x194b36b31b8 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x194b36b3160 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x194b36b30f0 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x194b36b3140 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x194b36b3118 <line:175:36> 'int' 52
|   |   |     | `-ParenExpr 0x194b370f158 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x194b370f130 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x194b370f110 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x194b370f0b8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x194b370f048 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x194b370f098 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x194b370f070 <line:175:44> 'int' 16
|   |   |     `-ParenExpr 0x194b370f2a8 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x194b370f280 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x194b370f260 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x194b370f208 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x194b370f198 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x194b370f1e8 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x194b370f1c0 <line:62:20> 'int' 32
|   |   |-CompoundAssignOperator 0x194b370f4d0 <line:176:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x194b370f3d0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b370f3b8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b370f360 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b370f348 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b370f328 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b370f390 <col:15> 'int' 2
|   |   | `-ImplicitCastExpr 0x194b370f4b8 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x194b370f498 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x194b370f480 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b370f428 <col:21, col:25> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |     |   `-ImplicitCastExpr 0x194b370f410 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b370f3f0 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b370f458 <col:27> 'int' 3
|   |   |-BinaryOperator 0x194b37111a8 <line:178:9, line:63:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b370f5a8 <line:178:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b370f590 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b370f538 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b370f520 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b370f500 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b370f568 <col:15> 'int' 5
|   |   | `-BinaryOperator 0x194b3711188 <col:20, line:63:30> 'double' '-'
|   |   |   |-ParenExpr 0x194b370fc08 <line:178:20, col:53> 'double'
|   |   |   | `-BinaryOperator 0x194b370fbe8 <col:21, line:63:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x194b370fbd0 <line:178:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x194b370f670 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x194b370f658 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x194b370f600 <col:21, col:25> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |   |   |   |   `-ImplicitCastExpr 0x194b370f5e8 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x194b370f5c8 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x194b370f630 <col:27> 'int' 4
|   |   |   |   `-BinaryOperator 0x194b370fbb0 <line:60:17, line:63:30> 'double' '*'
|   |   |   |     |-BinaryOperator 0x194b370f8f0 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x194b370f7a0 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x194b370f778 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x194b370f758 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x194b370f700 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x194b370f690 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x194b370f6e0 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x194b370f6b8 <line:178:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x194b370f8d0 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x194b370f8a8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x194b370f888 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x194b370f830 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x194b370f7c0 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x194b370f810 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x194b370f7e8 <line:178:44> 'int' 16
|   |   |   |     `-ParenExpr 0x194b370fb90 <line:63:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x194b370fb70 <line:60:17, col:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x194b370fa20 <col:17, col:37> 'double'
|   |   |   |         | `-CStyleCastExpr 0x194b370f9f8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   `-ParenExpr 0x194b370f9d8 <col:26, col:36> 'unsigned long long'
|   |   |   |         |     `-BinaryOperator 0x194b370f980 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |       |-IntegerLiteral 0x194b370f910 <col:27> 'unsigned long long' 1
|   |   |   |         |       `-ParenExpr 0x194b370f960 <col:33, col:35> 'int'
|   |   |   |         |         `-IntegerLiteral 0x194b370f938 <line:62:20> 'int' 32
|   |   |   |         `-ParenExpr 0x194b370fb50 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x194b370fb28 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x194b370fb08 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x194b370fab0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x194b370fa40 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x194b370fa90 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x194b370fa68 <line:63:27> 'int' 32
|   |   |   `-BinaryOperator 0x194b3711168 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-BinaryOperator 0x194b370fe88 <line:60:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x194b370fd38 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x194b370fd10 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x194b370fcf0 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x194b370fc98 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x194b370fc28 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x194b370fc78 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x194b370fc50 <line:179:36> 'int' 52
|   |   |     | `-ParenExpr 0x194b370fe68 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x194b370fe40 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x194b370fe20 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x194b370fdc8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x194b370fd58 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x194b370fda8 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x194b370fd80 <line:179:44> 'int' 16
|   |   |     `-ParenExpr 0x194b3711148 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b3711128 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b370ffb8 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x194b370ff90 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x194b370ff70 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x194b370ff18 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x194b370fea8 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x194b370fef8 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x194b370fed0 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x194b3711108 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b37110e0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b37110c0 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b3711068 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b370ffd8 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b3711048 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b3711020 <line:63:27> 'int' 32
|   |   |-CompoundAssignOperator 0x194b3711370 <line:180:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x194b3711270 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b3711258 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b3711200 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b37111e8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b37111c8 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b3711230 <col:15> 'int' 4
|   |   | `-ImplicitCastExpr 0x194b3711358 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x194b3711338 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x194b3711320 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b37112c8 <col:21, col:25> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |     |   `-ImplicitCastExpr 0x194b37112b0 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b3711290 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b37112f8 <col:27> 'int' 5
|   |   |-BinaryOperator 0x194b3713338 <line:182:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b3711448 <line:182:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b3711430 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b37113d8 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b37113c0 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b37113a0 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b3711408 <col:15> 'int' 7
|   |   | `-BinaryOperator 0x194b3713318 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x194b3711c18 <line:182:20, col:53> 'double'
|   |   |   | `-BinaryOperator 0x194b3711bf8 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x194b3711be0 <line:182:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x194b3711510 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x194b37114f8 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x194b37114a0 <col:21, col:25> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |   |   |   |   `-ImplicitCastExpr 0x194b3711488 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x194b3711468 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x194b37114d0 <col:27> 'int' 6
|   |   |   |   `-BinaryOperator 0x194b3711bc0 <line:60:17, line:64:30> 'double' '*'
|   |   |   |     |-BinaryOperator 0x194b3711790 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x194b3711640 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x194b3711618 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x194b37115f8 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x194b37115a0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x194b3711530 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x194b3711580 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x194b3711558 <line:182:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x194b3711770 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x194b3711748 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x194b3711728 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x194b37116d0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x194b3711660 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x194b37116b0 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x194b3711688 <line:182:44> 'int' 16
|   |   |   |     `-ParenExpr 0x194b3711ba0 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x194b3711b80 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x194b3711a30 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x194b3711a10 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x194b37118c0 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x194b3711898 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x194b3711878 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x194b3711820 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x194b37117b0 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x194b3711800 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x194b37117d8 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x194b37119f0 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x194b37119c8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x194b37119a8 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x194b3711950 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x194b37118e0 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x194b3711930 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x194b3711908 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x194b3711b60 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x194b3711b38 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x194b3711b18 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x194b3711ac0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x194b3711a50 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x194b3711aa0 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x194b3711a78 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x194b37132f8 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-BinaryOperator 0x194b3711e98 <line:60:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x194b3711d48 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x194b3711d20 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x194b3711d00 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x194b3711ca8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x194b3711c38 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x194b3711c88 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x194b3711c60 <line:183:36> 'int' 52
|   |   |     | `-ParenExpr 0x194b3711e78 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x194b3711e50 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x194b3711e30 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x194b3711dd8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x194b3711d68 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x194b3711db8 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x194b3711d90 <line:183:44> 'int' 16
|   |   |     `-ParenExpr 0x194b37132d8 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b37132b8 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b3713168 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x194b3713148 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x194b3711fc8 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x194b3711fa0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x194b3711f80 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x194b3711f28 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x194b3711eb8 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x194b3711f08 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x194b3711ee0 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x194b3713128 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x194b3713100 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x194b37130e0 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x194b3713088 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x194b3711fe8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x194b3713068 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x194b3713040 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x194b3713298 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b3713270 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b3713250 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b37131f8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b3713188 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b37131d8 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b37131b0 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x194b3713500 <line:184:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x194b3713400 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b37133e8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b3713390 <col:9, col:13> 'double [8]' lvalue ->r 0x194b36a3970
|   |   | | |   `-ImplicitCastExpr 0x194b3713378 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b3713358 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b37133c0 <col:15> 'int' 6
|   |   | `-ImplicitCastExpr 0x194b37134e8 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x194b37134c8 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x194b37134b0 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b3713458 <col:21, col:25> 'double [8]' lvalue ->r 0x194b36a3970
|   |   |     |   `-ImplicitCastExpr 0x194b3713440 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b3713420 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b3713488 <col:27> 'int' 7
|   |   |-BinaryOperator 0x194b3710720 <line:186:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b37135d8 <line:186:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b37135c0 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b3713568 <col:9, col:13> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   | | |   `-ImplicitCastExpr 0x194b3713550 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b3713530 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b3713598 <col:15> 'int' 1
|   |   | `-BinaryOperator 0x194b3710700 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x194b3713ef8 <line:186:20, col:58> 'double'
|   |   |   | `-BinaryOperator 0x194b3713ed8 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x194b3713ec0 <line:186:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x194b37136a0 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x194b3713688 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x194b3713630 <col:21, col:25> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   |   |   |   |   `-ImplicitCastExpr 0x194b3713618 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x194b37135f8 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x194b3713660 <col:27> 'int' 0
|   |   |   |   `-BinaryOperator 0x194b3713ea0 <line:60:17, line:64:30> 'double' '/'
|   |   |   |     |-BinaryOperator 0x194b3713a70 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-BinaryOperator 0x194b3713920 <col:17, col:37> 'double' '*'
|   |   |   |     | | |-ParenExpr 0x194b37137d0 <col:17, col:37> 'double'
|   |   |   |     | | | `-CStyleCastExpr 0x194b37137a8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | | |   `-ParenExpr 0x194b3713788 <col:26, col:36> 'unsigned long long'
|   |   |   |     | | |     `-BinaryOperator 0x194b3713730 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | | |       |-IntegerLiteral 0x194b37136c0 <col:27> 'unsigned long long' 1
|   |   |   |     | | |       `-ParenExpr 0x194b3713710 <col:33, col:35> 'int'
|   |   |   |     | | |         `-IntegerLiteral 0x194b37136e8 <line:186:36> 'int' 52
|   |   |   |     | | `-ParenExpr 0x194b3713900 <line:60:17, col:37> 'double'
|   |   |   |     | |   `-CStyleCastExpr 0x194b37138d8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |     `-ParenExpr 0x194b37138b8 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |       `-BinaryOperator 0x194b3713860 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |         |-IntegerLiteral 0x194b37137f0 <col:27> 'unsigned long long' 1
|   |   |   |     | |         `-ParenExpr 0x194b3713840 <col:33, col:35> 'int'
|   |   |   |     | |           `-IntegerLiteral 0x194b3713818 <line:186:44> 'int' 16
|   |   |   |     | `-ParenExpr 0x194b3713a50 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x194b3713a28 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x194b3713a08 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x194b37139b0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x194b3713940 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x194b3713990 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x194b3713968 <line:61:19> 'int' 0
|   |   |   |     `-ParenExpr 0x194b3713e80 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x194b3713e60 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x194b3713d10 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x194b3713cf0 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x194b3713ba0 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x194b3713b78 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x194b3713b58 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x194b3713b00 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x194b3713a90 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x194b3713ae0 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x194b3713ab8 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x194b3713cd0 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x194b3713ca8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x194b3713c88 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x194b3713c30 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x194b3713bc0 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x194b3713c10 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x194b3713be8 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x194b3713e40 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x194b3713e18 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x194b3713df8 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x194b3713da0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x194b3713d30 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x194b3713d80 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x194b3713d58 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x194b37106e0 <line:60:17, line:64:30> 'double' '/'
|   |   |     |-BinaryOperator 0x194b37102b0 <line:60:17, col:37> 'double' '*'
|   |   |     | |-BinaryOperator 0x194b3710160 <col:17, col:37> 'double' '*'
|   |   |     | | |-ParenExpr 0x194b3710010 <col:17, col:37> 'double'
|   |   |     | | | `-CStyleCastExpr 0x194b3714000 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | | |   `-ParenExpr 0x194b3713fe0 <col:26, col:36> 'unsigned long long'
|   |   |     | | |     `-BinaryOperator 0x194b3713f88 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | | |       |-IntegerLiteral 0x194b3713f18 <col:27> 'unsigned long long' 1
|   |   |     | | |       `-ParenExpr 0x194b3713f68 <col:33, col:35> 'int'
|   |   |     | | |         `-IntegerLiteral 0x194b3713f40 <line:187:36> 'int' 52
|   |   |     | | `-ParenExpr 0x194b3710140 <line:60:17, col:37> 'double'
|   |   |     | |   `-CStyleCastExpr 0x194b3710118 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |     `-ParenExpr 0x194b37100f8 <col:26, col:36> 'unsigned long long'
|   |   |     | |       `-BinaryOperator 0x194b37100a0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |         |-IntegerLiteral 0x194b3710030 <col:27> 'unsigned long long' 1
|   |   |     | |         `-ParenExpr 0x194b3710080 <col:33, col:35> 'int'
|   |   |     | |           `-IntegerLiteral 0x194b3710058 <line:187:44> 'int' 16
|   |   |     | `-ParenExpr 0x194b3710290 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x194b3710268 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x194b3710248 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x194b37101f0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x194b3710180 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x194b37101d0 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x194b37101a8 <line:61:19> 'int' 0
|   |   |     `-ParenExpr 0x194b37106c0 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b37106a0 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b3710550 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x194b3710530 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x194b37103e0 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x194b37103b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x194b3710398 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x194b3710340 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x194b37102d0 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x194b3710320 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x194b37102f8 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x194b3710510 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x194b37104e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x194b37104c8 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x194b3710470 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x194b3710400 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x194b3710450 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x194b3710428 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x194b3710680 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b3710658 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b3710638 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b37105e0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b3710570 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b37105c0 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b3710598 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x194b37108e8 <line:188:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x194b37107e8 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b37107d0 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b3710778 <col:9, col:13> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   | | |   `-ImplicitCastExpr 0x194b3710760 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b3710740 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b37107a8 <col:15> 'int' 0
|   |   | `-ImplicitCastExpr 0x194b37108d0 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x194b37108b0 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x194b3710898 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b3710840 <col:21, col:25> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   |     |   `-ImplicitCastExpr 0x194b3710828 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b3710808 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b3710870 <col:27> 'int' 1
|   |   |-BinaryOperator 0x194b3714b78 <line:190:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b37109c0 <line:190:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b37109a8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b3710950 <col:9, col:13> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   | | |   `-ImplicitCastExpr 0x194b3710938 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b3710918 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b3710980 <col:15> 'int' 3
|   |   | `-BinaryOperator 0x194b3714b58 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x194b3714338 <line:190:20, col:59> 'double'
|   |   |   | `-BinaryOperator 0x194b3714318 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x194b3714300 <line:190:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x194b3710a88 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x194b3710a70 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x194b3710a18 <col:21, col:25> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   |   |   |   |   `-ImplicitCastExpr 0x194b3710a00 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x194b37109e0 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x194b3710a48 <col:27> 'int' 2
|   |   |   |   `-BinaryOperator 0x194b37142e0 <line:60:17, line:64:30> 'double' '/'
|   |   |   |     |-BinaryOperator 0x194b3710e58 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-BinaryOperator 0x194b3710d08 <col:17, col:37> 'double' '*'
|   |   |   |     | | |-ParenExpr 0x194b3710bb8 <col:17, col:37> 'double'
|   |   |   |     | | | `-CStyleCastExpr 0x194b3710b90 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | | |   `-ParenExpr 0x194b3710b70 <col:26, col:36> 'unsigned long long'
|   |   |   |     | | |     `-BinaryOperator 0x194b3710b18 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | | |       |-IntegerLiteral 0x194b3710aa8 <col:27> 'unsigned long long' 1
|   |   |   |     | | |       `-ParenExpr 0x194b3710af8 <col:33, col:35> 'int'
|   |   |   |     | | |         `-IntegerLiteral 0x194b3710ad0 <line:190:36> 'int' 52
|   |   |   |     | | `-ParenExpr 0x194b3710ce8 <line:60:17, col:37> 'double'
|   |   |   |     | |   `-CStyleCastExpr 0x194b3710cc0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |     `-ParenExpr 0x194b3710ca0 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |       `-BinaryOperator 0x194b3710c48 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |         |-IntegerLiteral 0x194b3710bd8 <col:27> 'unsigned long long' 1
|   |   |   |     | |         `-ParenExpr 0x194b3710c28 <col:33, col:35> 'int'
|   |   |   |     | |           `-IntegerLiteral 0x194b3710c00 <line:190:44> 'int' 16
|   |   |   |     | `-ParenExpr 0x194b3710e38 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x194b3710e10 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x194b3710df0 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x194b3710d98 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x194b3710d28 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x194b3710d78 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x194b3710d50 <line:62:20> 'int' 32
|   |   |   |     `-ParenExpr 0x194b37142c0 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x194b37142a0 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x194b3714150 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x194b3714130 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x194b3710f88 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x194b3710f60 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x194b3710f40 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x194b3710ee8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x194b3710e78 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x194b3710ec8 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x194b3710ea0 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x194b3714110 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x194b37140e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x194b37140c8 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x194b3714070 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x194b3710fa8 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x194b3714050 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x194b3710fd0 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x194b3714280 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x194b3714258 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x194b3714238 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x194b37141e0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x194b3714170 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x194b37141c0 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x194b3714198 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x194b3714b38 <line:60:17, line:64:30> 'double' '/'
|   |   |     |-BinaryOperator 0x194b3714708 <line:60:17, col:37> 'double' '*'
|   |   |     | |-BinaryOperator 0x194b37145b8 <col:17, col:37> 'double' '*'
|   |   |     | | |-ParenExpr 0x194b3714468 <col:17, col:37> 'double'
|   |   |     | | | `-CStyleCastExpr 0x194b3714440 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | | |   `-ParenExpr 0x194b3714420 <col:26, col:36> 'unsigned long long'
|   |   |     | | |     `-BinaryOperator 0x194b37143c8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | | |       |-IntegerLiteral 0x194b3714358 <col:27> 'unsigned long long' 1
|   |   |     | | |       `-ParenExpr 0x194b37143a8 <col:33, col:35> 'int'
|   |   |     | | |         `-IntegerLiteral 0x194b3714380 <line:191:36> 'int' 52
|   |   |     | | `-ParenExpr 0x194b3714598 <line:60:17, col:37> 'double'
|   |   |     | |   `-CStyleCastExpr 0x194b3714570 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |     `-ParenExpr 0x194b3714550 <col:26, col:36> 'unsigned long long'
|   |   |     | |       `-BinaryOperator 0x194b37144f8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |         |-IntegerLiteral 0x194b3714488 <col:27> 'unsigned long long' 1
|   |   |     | |         `-ParenExpr 0x194b37144d8 <col:33, col:35> 'int'
|   |   |     | |           `-IntegerLiteral 0x194b37144b0 <line:191:44> 'int' 16
|   |   |     | `-ParenExpr 0x194b37146e8 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x194b37146c0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x194b37146a0 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x194b3714648 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x194b37145d8 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x194b3714628 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x194b3714600 <line:62:20> 'int' 32
|   |   |     `-ParenExpr 0x194b3714b18 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b3714af8 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b37149a8 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x194b3714988 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x194b3714838 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x194b3714810 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x194b37147f0 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x194b3714798 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x194b3714728 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x194b3714778 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x194b3714750 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x194b3714968 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x194b3714940 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x194b3714920 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x194b37148c8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x194b3714858 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x194b37148a8 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x194b3714880 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x194b3714ad8 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b3714ab0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b3714a90 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b3714a38 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b37149c8 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b3714a18 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b37149f0 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x194b3714d40 <line:192:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x194b3714c40 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b3714c28 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b3714bd0 <col:9, col:13> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   | | |   `-ImplicitCastExpr 0x194b3714bb8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b3714b98 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b3714c00 <col:15> 'int' 2
|   |   | `-ImplicitCastExpr 0x194b3714d28 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x194b3714d08 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x194b3714cf0 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b3714c98 <col:21, col:25> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   |     |   `-ImplicitCastExpr 0x194b3714c80 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b3714c60 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b3714cc8 <col:27> 'int' 3
|   |   |-BinaryOperator 0x194b370d218 <line:194:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x194b3714e18 <line:194:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b3714e00 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b3714da8 <col:9, col:13> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   | | |   `-ImplicitCastExpr 0x194b3714d90 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b3714d70 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b3714dd8 <col:15> 'int' 5
|   |   | `-BinaryOperator 0x194b370d1f8 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x194b37128a8 <line:194:20, col:59> 'double'
|   |   |   | `-BinaryOperator 0x194b3712888 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x194b3712870 <line:194:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x194b3714ee0 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x194b3714ec8 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x194b3714e70 <col:21, col:25> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   |   |   |   |   `-ImplicitCastExpr 0x194b3714e58 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x194b3714e38 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x194b3714ea0 <col:27> 'int' 4
|   |   |   |   `-BinaryOperator 0x194b3712850 <line:60:17, line:64:30> 'double' '/'
|   |   |   |     |-BinaryOperator 0x194b3712420 <line:60:17, line:63:30> 'double' '*'
|   |   |   |     | |-BinaryOperator 0x194b3712160 <line:60:17, col:37> 'double' '*'
|   |   |   |     | | |-ParenExpr 0x194b3715010 <col:17, col:37> 'double'
|   |   |   |     | | | `-CStyleCastExpr 0x194b3714fe8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | | |   `-ParenExpr 0x194b3714fc8 <col:26, col:36> 'unsigned long long'
|   |   |   |     | | |     `-BinaryOperator 0x194b3714f70 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | | |       |-IntegerLiteral 0x194b3714f00 <col:27> 'unsigned long long' 1
|   |   |   |     | | |       `-ParenExpr 0x194b3714f50 <col:33, col:35> 'int'
|   |   |   |     | | |         `-IntegerLiteral 0x194b3714f28 <line:194:36> 'int' 52
|   |   |   |     | | `-ParenExpr 0x194b3712140 <line:60:17, col:37> 'double'
|   |   |   |     | |   `-CStyleCastExpr 0x194b3712118 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |     `-ParenExpr 0x194b37120f8 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |       `-BinaryOperator 0x194b37120a0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |         |-IntegerLiteral 0x194b3712030 <col:27> 'unsigned long long' 1
|   |   |   |     | |         `-ParenExpr 0x194b3712080 <col:33, col:35> 'int'
|   |   |   |     | |           `-IntegerLiteral 0x194b3712058 <line:194:44> 'int' 16
|   |   |   |     | `-ParenExpr 0x194b3712400 <line:63:16, col:30> 'double'
|   |   |   |     |   `-BinaryOperator 0x194b37123e0 <line:60:17, col:37> 'double' '*'
|   |   |   |     |     |-ParenExpr 0x194b3712290 <col:17, col:37> 'double'
|   |   |   |     |     | `-CStyleCastExpr 0x194b3712268 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     |   `-ParenExpr 0x194b3712248 <col:26, col:36> 'unsigned long long'
|   |   |   |     |     |     `-BinaryOperator 0x194b37121f0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |     |       |-IntegerLiteral 0x194b3712180 <col:27> 'unsigned long long' 1
|   |   |   |     |     |       `-ParenExpr 0x194b37121d0 <col:33, col:35> 'int'
|   |   |   |     |     |         `-IntegerLiteral 0x194b37121a8 <line:62:20> 'int' 32
|   |   |   |     |     `-ParenExpr 0x194b37123c0 <line:60:17, col:37> 'double'
|   |   |   |     |       `-CStyleCastExpr 0x194b3712398 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |         `-ParenExpr 0x194b3712378 <col:26, col:36> 'unsigned long long'
|   |   |   |     |           `-BinaryOperator 0x194b3712320 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |             |-IntegerLiteral 0x194b37122b0 <col:27> 'unsigned long long' 1
|   |   |   |     |             `-ParenExpr 0x194b3712300 <col:33, col:35> 'int'
|   |   |   |     |               `-IntegerLiteral 0x194b37122d8 <line:63:27> 'int' 32
|   |   |   |     `-ParenExpr 0x194b3712830 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x194b3712810 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x194b37126c0 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x194b37126a0 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x194b3712550 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x194b3712528 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x194b3712508 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x194b37124b0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x194b3712440 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x194b3712490 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x194b3712468 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x194b3712680 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x194b3712658 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x194b3712638 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x194b37125e0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x194b3712570 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x194b37125c0 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x194b3712598 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x194b37127f0 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x194b37127c8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x194b37127a8 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x194b3712750 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x194b37126e0 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x194b3712730 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x194b3712708 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x194b370d1d8 <line:60:17, line:64:30> 'double' '/'
|   |   |     |-BinaryOperator 0x194b3712de8 <line:60:17, line:63:30> 'double' '*'
|   |   |     | |-BinaryOperator 0x194b3712b28 <line:60:17, col:37> 'double' '*'
|   |   |     | | |-ParenExpr 0x194b37129d8 <col:17, col:37> 'double'
|   |   |     | | | `-CStyleCastExpr 0x194b37129b0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | | |   `-ParenExpr 0x194b3712990 <col:26, col:36> 'unsigned long long'
|   |   |     | | |     `-BinaryOperator 0x194b3712938 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | | |       |-IntegerLiteral 0x194b37128c8 <col:27> 'unsigned long long' 1
|   |   |     | | |       `-ParenExpr 0x194b3712918 <col:33, col:35> 'int'
|   |   |     | | |         `-IntegerLiteral 0x194b37128f0 <line:195:36> 'int' 52
|   |   |     | | `-ParenExpr 0x194b3712b08 <line:60:17, col:37> 'double'
|   |   |     | |   `-CStyleCastExpr 0x194b3712ae0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |     `-ParenExpr 0x194b3712ac0 <col:26, col:36> 'unsigned long long'
|   |   |     | |       `-BinaryOperator 0x194b3712a68 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |         |-IntegerLiteral 0x194b37129f8 <col:27> 'unsigned long long' 1
|   |   |     | |         `-ParenExpr 0x194b3712a48 <col:33, col:35> 'int'
|   |   |     | |           `-IntegerLiteral 0x194b3712a20 <line:195:44> 'int' 16
|   |   |     | `-ParenExpr 0x194b3712dc8 <line:63:16, col:30> 'double'
|   |   |     |   `-BinaryOperator 0x194b3712da8 <line:60:17, col:37> 'double' '*'
|   |   |     |     |-ParenExpr 0x194b3712c58 <col:17, col:37> 'double'
|   |   |     |     | `-CStyleCastExpr 0x194b3712c30 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     |   `-ParenExpr 0x194b3712c10 <col:26, col:36> 'unsigned long long'
|   |   |     |     |     `-BinaryOperator 0x194b3712bb8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |     |       |-IntegerLiteral 0x194b3712b48 <col:27> 'unsigned long long' 1
|   |   |     |     |       `-ParenExpr 0x194b3712b98 <col:33, col:35> 'int'
|   |   |     |     |         `-IntegerLiteral 0x194b3712b70 <line:62:20> 'int' 32
|   |   |     |     `-ParenExpr 0x194b3712d88 <line:60:17, col:37> 'double'
|   |   |     |       `-CStyleCastExpr 0x194b3712d60 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |         `-ParenExpr 0x194b3712d40 <col:26, col:36> 'unsigned long long'
|   |   |     |           `-BinaryOperator 0x194b3712ce8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |             |-IntegerLiteral 0x194b3712c78 <col:27> 'unsigned long long' 1
|   |   |     |             `-ParenExpr 0x194b3712cc8 <col:33, col:35> 'int'
|   |   |     |               `-IntegerLiteral 0x194b3712ca0 <line:63:27> 'int' 32
|   |   |     `-ParenExpr 0x194b370d1b8 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b370d198 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b370d048 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x194b370d028 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x194b3712f18 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x194b3712ef0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x194b3712ed0 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x194b3712e78 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x194b3712e08 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x194b3712e58 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x194b3712e30 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x194b370d008 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x194b370cfe0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x194b3713000 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x194b3712fa8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x194b3712f38 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x194b3712f88 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x194b3712f60 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x194b370d178 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b370d150 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b370d130 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b370d0d8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b370d068 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b370d0b8 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b370d090 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x194b370d3e0 <line:196:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x194b370d2e0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x194b370d2c8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x194b370d270 <col:9, col:13> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   | | |   `-ImplicitCastExpr 0x194b370d258 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x194b370d238 <col:9> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x194b370d2a0 <col:15> 'int' 4
|   |   | `-ImplicitCastExpr 0x194b370d3c8 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x194b370d3a8 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x194b370d390 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b370d338 <col:21, col:25> 'double [6]' lvalue ->s 0x194b36a3a70
|   |   |     |   `-ImplicitCastExpr 0x194b370d320 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b370d300 <col:21> 'poly1305_internal *' lvalue Var 0x194b36ae1b0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b370d368 <col:27> 'int' 5
|   |   `-GCCAsmStmt 0x194b370d478 <line:202:9, col:52>
|   |     `-DeclRefExpr 0x194b370d458 <col:41> 'u32':'unsigned int' lvalue Var 0x194b36aefc0 'mxcsr_orig' 'u32':'unsigned int'
|   `-ReturnStmt 0x194b370d620 <line:212:5, col:12>
|     `-IntegerLiteral 0x194b370d5f8 <col:12> 'int' 0
|-FunctionDecl 0x194b370d9b8 <line:215:1, line:412:1> line:215:6 poly1305_blocks 'void (void *, const unsigned char *, size_t, int)'
| |-ParmVarDecl 0x194b370d698 <col:22, col:28> col:28 used ctx 'void *'
| |-ParmVarDecl 0x194b370d718 <col:33, col:54> col:54 used inp 'const unsigned char *'
| |-ParmVarDecl 0x194b370d790 <col:59, col:66> col:66 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x194b370d810 <line:216:22, col:26> col:26 used padbit 'int'
| `-CompoundStmt 0x194b372de78 <line:217:1, line:412:1>
|   |-DeclStmt 0x194b370db78 <line:218:5, col:53>
|   | `-VarDecl 0x194b370daa0 <col:5, col:50> col:24 used st 'poly1305_internal *' cinit
|   |   `-CStyleCastExpr 0x194b370db50 <col:29, col:50> 'poly1305_internal *' <BitCast>
|   |     `-ImplicitCastExpr 0x194b370db38 <col:50> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x194b370db08 <col:50> 'void *' lvalue ParmVar 0x194b370d698 'ctx' 'void *'
|   |-DeclStmt 0x194b370dd98 <line:219:5, col:30>
|   | |-VarDecl 0x194b370dba0 <col:5, col:12> col:12 used in0 'elem64':'elem64'
|   | |-VarDecl 0x194b370dc18 <col:5, col:17> col:17 used in1 'elem64':'elem64'
|   | |-VarDecl 0x194b370dc90 <col:5, col:22> col:22 used in2 'elem64':'elem64'
|   | `-VarDecl 0x194b370dd08 <col:5, col:27> col:27 used in3 'elem64':'elem64'
|   |-DeclStmt 0x194b370dee0 <line:220:5, col:30>
|   | `-VarDecl 0x194b370ddc0 <col:5, col:28> col:9 used pad 'u64':'unsigned long long' cinit
|   |   `-BinaryOperator 0x194b370dec0 <col:15, col:28> 'u64':'unsigned long long' '<<'
|   |     |-CStyleCastExpr 0x194b370de70 <col:15, col:20> 'u64':'unsigned long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x194b370de58 <col:20> 'int' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x194b370de28 <col:20> 'int' lvalue ParmVar 0x194b370d810 'padbit' 'int'
|   |     `-IntegerLiteral 0x194b370de98 <col:28> 'int' 32
|   |-DeclStmt 0x194b37151f0 <line:222:5, col:26>
|   | |-VarDecl 0x194b370df10 <col:5, col:12> col:12 used x0 'double'
|   | |-VarDecl 0x194b3715060 <col:5, col:16> col:16 used x1 'double'
|   | |-VarDecl 0x194b37150e0 <col:5, col:20> col:20 used x2 'double'
|   | `-VarDecl 0x194b3715160 <col:5, col:24> col:24 used x3 'double'
|   |-DeclStmt 0x194b3715650 <line:223:5, col:58>
|   | |-VarDecl 0x194b3715220 <col:5, col:12> col:12 used h0lo 'double'
|   | |-VarDecl 0x194b37152a0 <col:5, col:18> col:18 used h0hi 'double'
|   | |-VarDecl 0x194b3715320 <col:5, col:24> col:24 used h1lo 'double'
|   | |-VarDecl 0x194b37153a0 <col:5, col:30> col:30 used h1hi 'double'
|   | |-VarDecl 0x194b3715420 <col:5, col:36> col:36 used h2lo 'double'
|   | |-VarDecl 0x194b37154a0 <col:5, col:42> col:42 used h2hi 'double'
|   | |-VarDecl 0x194b3715520 <col:5, col:48> col:48 used h3lo 'double'
|   | `-VarDecl 0x194b37155a0 <col:5, col:54> col:54 used h3hi 'double'
|   |-DeclStmt 0x194b3715ab0 <line:224:5, col:58>
|   | |-VarDecl 0x194b3715680 <col:5, col:12> col:12 used c0lo 'double'
|   | |-VarDecl 0x194b3715700 <col:5, col:18> col:18 used c0hi 'double'
|   | |-VarDecl 0x194b3715780 <col:5, col:24> col:24 used c1lo 'double'
|   | |-VarDecl 0x194b3715800 <col:5, col:30> col:30 used c1hi 'double'
|   | |-VarDecl 0x194b3715880 <col:5, col:36> col:36 used c2lo 'double'
|   | |-VarDecl 0x194b3715900 <col:5, col:42> col:42 used c2hi 'double'
|   | |-VarDecl 0x194b3715980 <col:5, col:48> col:48 used c3lo 'double'
|   | `-VarDecl 0x194b3715a00 <col:5, col:54> col:54 used c3hi 'double'
|   |-DeclStmt 0x194b3715c40 <line:226:5, col:33>
|   | `-VarDecl 0x194b3715ae0 <col:5, col:32> col:18 used r0lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b3715c28 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b3715c08 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b3715bf0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b3715b98 <col:25, col:29> 'double [8]' lvalue ->r 0x194b36a3970
|   |       |   `-ImplicitCastExpr 0x194b3715b80 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b3715b48 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b3715bc8 <col:31> 'int' 0
|   |-DeclStmt 0x194b3715db8 <line:227:5, col:33>
|   | `-VarDecl 0x194b3715c70 <col:5, col:32> col:18 used r0hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b3715da0 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b3715d80 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b3715d68 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b3715d10 <col:25, col:29> 'double [8]' lvalue ->r 0x194b36a3970
|   |       |   `-ImplicitCastExpr 0x194b3715cf8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b3715cd8 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b3715d40 <col:31> 'int' 1
|   |-DeclStmt 0x194b3715f30 <line:228:5, col:33>
|   | `-VarDecl 0x194b3715de8 <col:5, col:32> col:18 used r1lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b3715f18 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b3715ef8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b3715ee0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b3715e88 <col:25, col:29> 'double [8]' lvalue ->r 0x194b36a3970
|   |       |   `-ImplicitCastExpr 0x194b3715e70 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b3715e50 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b3715eb8 <col:31> 'int' 2
|   |-DeclStmt 0x194b370e040 <line:229:5, col:33>
|   | `-VarDecl 0x194b3715f60 <col:5, col:32> col:18 used r1hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370e028 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370e008 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370dff0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b3716000 <col:25, col:29> 'double [8]' lvalue ->r 0x194b36a3970
|   |       |   `-ImplicitCastExpr 0x194b3715fe8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b3715fc8 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b3716030 <col:31> 'int' 3
|   |-DeclStmt 0x194b370e1b8 <line:230:5, col:33>
|   | `-VarDecl 0x194b370e070 <col:5, col:32> col:18 used r2lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370e1a0 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370e180 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370e168 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b370e110 <col:25, col:29> 'double [8]' lvalue ->r 0x194b36a3970
|   |       |   `-ImplicitCastExpr 0x194b370e0f8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b370e0d8 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b370e140 <col:31> 'int' 4
|   |-DeclStmt 0x194b370e330 <line:231:5, col:33>
|   | `-VarDecl 0x194b370e1e8 <col:5, col:32> col:18 used r2hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370e318 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370e2f8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370e2e0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b370e288 <col:25, col:29> 'double [8]' lvalue ->r 0x194b36a3970
|   |       |   `-ImplicitCastExpr 0x194b370e270 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b370e250 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b370e2b8 <col:31> 'int' 5
|   |-DeclStmt 0x194b370e4a8 <line:232:5, col:33>
|   | `-VarDecl 0x194b370e360 <col:5, col:32> col:18 used r3lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370e490 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370e470 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370e458 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b370e400 <col:25, col:29> 'double [8]' lvalue ->r 0x194b36a3970
|   |       |   `-ImplicitCastExpr 0x194b370e3e8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b370e3c8 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b370e430 <col:31> 'int' 6
|   |-DeclStmt 0x194b370e620 <line:233:5, col:33>
|   | `-VarDecl 0x194b370e4d8 <col:5, col:32> col:18 used r3hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370e608 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370e5e8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370e5d0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b370e578 <col:25, col:29> 'double [8]' lvalue ->r 0x194b36a3970
|   |       |   `-ImplicitCastExpr 0x194b370e560 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b370e540 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b370e5a8 <col:31> 'int' 7
|   |-DeclStmt 0x194b370e798 <line:235:5, col:33>
|   | `-VarDecl 0x194b370e650 <col:5, col:32> col:18 used s1lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370e780 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370e760 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370e748 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b370e6f0 <col:25, col:29> 'double [6]' lvalue ->s 0x194b36a3a70
|   |       |   `-ImplicitCastExpr 0x194b370e6d8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b370e6b8 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b370e720 <col:31> 'int' 0
|   |-DeclStmt 0x194b370e910 <line:236:5, col:33>
|   | `-VarDecl 0x194b370e7c8 <col:5, col:32> col:18 used s1hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370e8f8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370e8d8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370e8c0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b370e868 <col:25, col:29> 'double [6]' lvalue ->s 0x194b36a3a70
|   |       |   `-ImplicitCastExpr 0x194b370e850 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b370e830 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b370e898 <col:31> 'int' 1
|   |-DeclStmt 0x194b370ea88 <line:237:5, col:33>
|   | `-VarDecl 0x194b370e940 <col:5, col:32> col:18 used s2lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370ea70 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370ea50 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370ea38 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b370e9e0 <col:25, col:29> 'double [6]' lvalue ->s 0x194b36a3a70
|   |       |   `-ImplicitCastExpr 0x194b370e9c8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b370e9a8 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b370ea10 <col:31> 'int' 2
|   |-DeclStmt 0x194b370ec00 <line:238:5, col:33>
|   | `-VarDecl 0x194b370eab8 <col:5, col:32> col:18 used s2hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370ebe8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370ebc8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370ebb0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b370eb58 <col:25, col:29> 'double [6]' lvalue ->s 0x194b36a3a70
|   |       |   `-ImplicitCastExpr 0x194b370eb40 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b370eb20 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b370eb88 <col:31> 'int' 3
|   |-DeclStmt 0x194b370ed78 <line:239:5, col:33>
|   | `-VarDecl 0x194b370ec30 <col:5, col:32> col:18 used s3lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370ed60 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370ed40 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370ed28 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b370ecd0 <col:25, col:29> 'double [6]' lvalue ->s 0x194b36a3a70
|   |       |   `-ImplicitCastExpr 0x194b370ecb8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b370ec98 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b370ed00 <col:31> 'int' 4
|   |-DeclStmt 0x194b370eef0 <line:240:5, col:33>
|   | `-VarDecl 0x194b370eda8 <col:5, col:32> col:18 used s3hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x194b370eed8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x194b370eeb8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x194b370eea0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x194b370ee48 <col:25, col:29> 'double [6]' lvalue ->s 0x194b36a3a70
|   |       |   `-ImplicitCastExpr 0x194b370ee30 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x194b370ee10 <col:25> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x194b370ee78 <col:31> 'int' 5
|   |-DeclStmt 0x194b370ef80 <line:246:5, col:19>
|   | `-VarDecl 0x194b370ef18 <col:5, col:9> col:9 used mxcsr_orig 'u32':'unsigned int'
|   |-GCCAsmStmt 0x194b37160a8 <line:248:5, col:48>
|   | `-DeclRefExpr 0x194b3716070 <col:37> 'u32':'unsigned int' lvalue Var 0x194b370ef18 'mxcsr_orig' 'u32':'unsigned int'
|   |-GCCAsmStmt 0x194b3716180 <line:249:5, col:43>
|   | `-DeclRefExpr 0x194b3716160 <col:37> 'const u32':'const unsigned int' lvalue Var 0x194b36a3bd0 'mxcsr' 'const u32':'const unsigned int'
|   |-BinaryOperator 0x194b37165d8 <line:270:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x194b37161f0 <line:270:5> 'double' lvalue Var 0x194b3715220 'h0lo' 'double'
|   | `-BinaryOperator 0x194b37165b8 <col:12, line:60:37> 'double' '-'
|   |   |-ImplicitCastExpr 0x194b37165a0 <line:270:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x194b37162f0 <col:12, col:21> 'double' lvalue .d 0x194b36a34b8
|   |   |   `-ArraySubscriptExpr 0x194b37162d0 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x194b37162b8 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b3716260 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   |   |     |   `-ImplicitCastExpr 0x194b3716248 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b3716228 <col:12> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b3716290 <col:18> 'int' 0
|   |   `-BinaryOperator 0x194b3716580 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x194b3716430 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3716408 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b37163e8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3716390 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3716320 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3716370 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3716348 <line:270:29> 'int' 52
|   |     `-ParenExpr 0x194b3716560 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x194b3716538 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x194b3716518 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x194b37164c0 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x194b3716450 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x194b37164a0 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x194b3716478 <line:61:19> 'int' 0
|   |-BinaryOperator 0x194b37169e0 <line:271:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x194b37165f8 <line:271:5> 'double' lvalue Var 0x194b3715320 'h1lo' 'double'
|   | `-BinaryOperator 0x194b37169c0 <col:12, line:60:37> 'double' '-'
|   |   |-ImplicitCastExpr 0x194b37169a8 <line:271:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x194b37166f8 <col:12, col:21> 'double' lvalue .d 0x194b36a34b8
|   |   |   `-ArraySubscriptExpr 0x194b37166d8 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x194b37166c0 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b3716668 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   |   |     |   `-ImplicitCastExpr 0x194b3716650 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b3716630 <col:12> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b3716698 <col:18> 'int' 1
|   |   `-BinaryOperator 0x194b3716988 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x194b3716838 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3716810 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b37167f0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3716798 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3716728 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3716778 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3716750 <line:271:29> 'int' 52
|   |     `-ParenExpr 0x194b3716968 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x194b3716940 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x194b3716920 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x194b37168c8 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x194b3716858 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x194b37168a8 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x194b3716880 <line:62:20> 'int' 32
|   |-BinaryOperator 0x194b3716f58 <line:272:5, line:63:30> 'double' '='
|   | |-DeclRefExpr 0x194b3716a00 <line:272:5> 'double' lvalue Var 0x194b3715420 'h2lo' 'double'
|   | `-BinaryOperator 0x194b3716f38 <col:12, line:63:30> 'double' '-'
|   |   |-ImplicitCastExpr 0x194b3716f20 <line:272:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x194b3716b00 <col:12, col:21> 'double' lvalue .d 0x194b36a34b8
|   |   |   `-ArraySubscriptExpr 0x194b3716ae0 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x194b3716ac8 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b3716a70 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   |   |     |   `-ImplicitCastExpr 0x194b3716a58 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b3716a38 <col:12> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b3716aa0 <col:18> 'int' 2
|   |   `-BinaryOperator 0x194b3716f00 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x194b3716c40 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3716c18 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b3716bf8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3716ba0 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3716b30 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3716b80 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3716b58 <line:272:29> 'int' 52
|   |     `-ParenExpr 0x194b3716ee0 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x194b3716ec0 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x194b3716d70 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x194b3716d48 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x194b3716d28 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x194b3716cd0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x194b3716c60 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x194b3716cb0 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x194b3716c88 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x194b3716ea0 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x194b3716e78 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x194b3716e58 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x194b3716e00 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x194b3716d90 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x194b3716de0 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x194b3716db8 <line:63:27> 'int' 32
|   |-BinaryOperator 0x194b371d6c8 <line:273:5, line:64:30> 'double' '='
|   | |-DeclRefExpr 0x194b3716f78 <line:273:5> 'double' lvalue Var 0x194b3715520 'h3lo' 'double'
|   | `-BinaryOperator 0x194b371d6a8 <col:12, line:64:30> 'double' '-'
|   |   |-ImplicitCastExpr 0x194b371d690 <line:273:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x194b371d100 <col:12, col:21> 'double' lvalue .d 0x194b36a34b8
|   |   |   `-ArraySubscriptExpr 0x194b371d0e0 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x194b3717040 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x194b3716fe8 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   |   |     |   `-ImplicitCastExpr 0x194b3716fd0 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x194b3716fb0 <col:12> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x194b3717018 <col:18> 'int' 3
|   |   `-BinaryOperator 0x194b371d670 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x194b371d240 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b371d218 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b371d1f8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b371d1a0 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b371d130 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b371d180 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b371d158 <line:273:29> 'int' 52
|   |     `-ParenExpr 0x194b371d650 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x194b371d630 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x194b371d4e0 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x194b371d4c0 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x194b371d370 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x194b371d348 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x194b371d328 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x194b371d2d0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x194b371d260 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x194b371d2b0 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x194b371d288 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x194b371d4a0 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x194b371d478 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x194b371d458 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x194b371d400 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x194b371d390 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x194b371d3e0 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x194b371d3b8 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x194b371d610 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x194b371d5e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x194b371d5c8 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x194b371d570 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x194b371d500 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x194b371d550 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x194b371d528 <line:64:27> 'int' 32
|   |-BinaryOperator 0x194b371d760 <line:276:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x194b371d6e8 <col:5> 'double' lvalue Var 0x194b37152a0 'h0hi' 'double'
|   | `-ImplicitCastExpr 0x194b371d748 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x194b371d720 <col:12> 'int' 0
|   |-BinaryOperator 0x194b371d7f8 <line:277:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x194b371d780 <col:5> 'double' lvalue Var 0x194b37153a0 'h1hi' 'double'
|   | `-ImplicitCastExpr 0x194b371d7e0 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x194b371d7b8 <col:12> 'int' 0
|   |-BinaryOperator 0x194b371d890 <line:278:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x194b371d818 <col:5> 'double' lvalue Var 0x194b37154a0 'h2hi' 'double'
|   | `-ImplicitCastExpr 0x194b371d878 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x194b371d850 <col:12> 'int' 0
|   |-BinaryOperator 0x194b371d928 <line:279:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x194b371d8b0 <col:5> 'double' lvalue Var 0x194b37155a0 'h3hi' 'double'
|   | `-ImplicitCastExpr 0x194b371d910 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x194b371d8e8 <col:12> 'int' 0
|   |-DoStmt 0x194b3726088 <line:299:5, line:364:23>
|   | |-CompoundStmt 0x194b3725eb0 <line:299:8, line:364:5>
|   | | |-BinaryOperator 0x194b371dcc0 <line:300:9, line:70:39> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x194b371d980 <line:300:9, col:13> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   | | | | `-DeclRefExpr 0x194b371d948 <col:9> 'elem64':'elem64' lvalue Var 0x194b370dba0 'in0' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x194b371dca0 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   |-ParenExpr 0x194b371db08 <line:67:17, col:35> 'unsigned long long'
|   | | |   | `-BinaryOperator 0x194b371dae8 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   |   |-ParenExpr 0x194b371daa0 <col:18, col:30> 'unsigned long long'
|   | | |   |   | `-BinaryOperator 0x194b371da80 <col:19, col:29> 'unsigned long long' '+'
|   | | |   |   |   |-IntegerLiteral 0x194b371d9b0 <col:19> 'unsigned long long' 1023
|   | | |   |   |   `-ImplicitCastExpr 0x194b371da68 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   |     `-ParenExpr 0x194b371da48 <col:27, col:29> 'int'
|   | | |   |   |       `-BinaryOperator 0x194b371da28 <line:300:21, col:24> 'int' '+'
|   | | |   |   |         |-IntegerLiteral 0x194b371d9d8 <col:21> 'int' 52
|   | | |   |   |         `-IntegerLiteral 0x194b371da00 <col:24> 'int' 0
|   | | |   |   `-IntegerLiteral 0x194b371dac0 <line:67:33> 'int' 52
|   | | |   `-ImplicitCastExpr 0x194b371dc88 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x194b371dc70 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |       `-ParenExpr 0x194b371dc50 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |         `-UnaryOperator 0x194b371dc38 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |           `-CStyleCastExpr 0x194b371dc10 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |             `-ParenExpr 0x194b371dbf0 <col:36, col:38> 'const unsigned char *'
|   | | |               `-UnaryOperator 0x194b371dba8 <line:300:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   | | |                 `-ArraySubscriptExpr 0x194b371db88 <col:39, col:44> 'const unsigned char' lvalue
|   | | |                   |-ImplicitCastExpr 0x194b371db70 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |                   | `-DeclRefExpr 0x194b371db28 <col:39> 'const unsigned char *' lvalue ParmVar 0x194b370d718 'inp' 'const unsigned char *'
|   | | |                   `-IntegerLiteral 0x194b371db48 <col:43> 'int' 0
|   | | |-BinaryOperator 0x194b371e058 <line:301:9, line:70:39> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x194b371dd18 <line:301:9, col:13> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   | | | | `-DeclRefExpr 0x194b371dce0 <col:9> 'elem64':'elem64' lvalue Var 0x194b370dc18 'in1' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x194b371e038 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   |-ParenExpr 0x194b371dea0 <line:67:17, col:35> 'unsigned long long'
|   | | |   | `-BinaryOperator 0x194b371de80 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   |   |-ParenExpr 0x194b371de38 <col:18, col:30> 'unsigned long long'
|   | | |   |   | `-BinaryOperator 0x194b371de18 <col:19, col:29> 'unsigned long long' '+'
|   | | |   |   |   |-IntegerLiteral 0x194b371dd48 <col:19> 'unsigned long long' 1023
|   | | |   |   |   `-ImplicitCastExpr 0x194b371de00 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   |     `-ParenExpr 0x194b371dde0 <col:27, col:29> 'int'
|   | | |   |   |       `-BinaryOperator 0x194b371ddc0 <line:301:21, col:24> 'int' '+'
|   | | |   |   |         |-IntegerLiteral 0x194b371dd70 <col:21> 'int' 52
|   | | |   |   |         `-IntegerLiteral 0x194b371dd98 <col:24> 'int' 32
|   | | |   |   `-IntegerLiteral 0x194b371de58 <line:67:33> 'int' 52
|   | | |   `-ImplicitCastExpr 0x194b371e020 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x194b371e008 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |       `-ParenExpr 0x194b371dfe8 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |         `-UnaryOperator 0x194b371dfd0 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |           `-CStyleCastExpr 0x194b371dfa8 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |             `-ParenExpr 0x194b371df88 <col:36, col:38> 'const unsigned char *'
|   | | |               `-UnaryOperator 0x194b371df40 <line:301:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   | | |                 `-ArraySubscriptExpr 0x194b371df20 <col:39, col:44> 'const unsigned char' lvalue
|   | | |                   |-ImplicitCastExpr 0x194b371df08 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |                   | `-DeclRefExpr 0x194b371dec0 <col:39> 'const unsigned char *' lvalue ParmVar 0x194b370d718 'inp' 'const unsigned char *'
|   | | |                   `-IntegerLiteral 0x194b371dee0 <col:43> 'int' 4
|   | | |-BinaryOperator 0x194b371c3e0 <line:302:9, line:70:39> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x194b371e0b0 <line:302:9, col:13> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   | | | | `-DeclRefExpr 0x194b371e078 <col:9> 'elem64':'elem64' lvalue Var 0x194b370dc90 'in2' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x194b371c3c0 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   |-ParenExpr 0x194b371c228 <line:67:17, col:35> 'unsigned long long'
|   | | |   | `-BinaryOperator 0x194b371c208 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   |   |-ParenExpr 0x194b371c1c0 <col:18, col:30> 'unsigned long long'
|   | | |   |   | `-BinaryOperator 0x194b371c1a0 <col:19, col:29> 'unsigned long long' '+'
|   | | |   |   |   |-IntegerLiteral 0x194b371c0d0 <col:19> 'unsigned long long' 1023
|   | | |   |   |   `-ImplicitCastExpr 0x194b371c188 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   |     `-ParenExpr 0x194b371c168 <col:27, col:29> 'int'
|   | | |   |   |       `-BinaryOperator 0x194b371c148 <line:302:21, col:24> 'int' '+'
|   | | |   |   |         |-IntegerLiteral 0x194b371c0f8 <col:21> 'int' 52
|   | | |   |   |         `-IntegerLiteral 0x194b371c120 <col:24> 'int' 64
|   | | |   |   `-IntegerLiteral 0x194b371c1e0 <line:67:33> 'int' 52
|   | | |   `-ImplicitCastExpr 0x194b371c3a8 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x194b371c390 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |       `-ParenExpr 0x194b371c370 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |         `-UnaryOperator 0x194b371c358 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |           `-CStyleCastExpr 0x194b371c330 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |             `-ParenExpr 0x194b371c310 <col:36, col:38> 'const unsigned char *'
|   | | |               `-UnaryOperator 0x194b371c2c8 <line:302:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   | | |                 `-ArraySubscriptExpr 0x194b371c2a8 <col:39, col:44> 'const unsigned char' lvalue
|   | | |                   |-ImplicitCastExpr 0x194b371c290 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |                   | `-DeclRefExpr 0x194b371c248 <col:39> 'const unsigned char *' lvalue ParmVar 0x194b370d718 'inp' 'const unsigned char *'
|   | | |                   `-IntegerLiteral 0x194b371c268 <col:43> 'int' 8
|   | | |-BinaryOperator 0x194b371c7e8 <line:303:9, col:50> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x194b371c438 <col:9, col:13> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
|   | | | | `-DeclRefExpr 0x194b371c400 <col:9> 'elem64':'elem64' lvalue Var 0x194b370dd08 'in3' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x194b371c7c8 <line:67:17, line:303:50> 'unsigned long long' '|'
|   | | |   |-BinaryOperator 0x194b371c758 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   | |-ParenExpr 0x194b371c5c0 <line:67:17, col:35> 'unsigned long long'
|   | | |   | | `-BinaryOperator 0x194b371c5a0 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   | |   |-ParenExpr 0x194b371c558 <col:18, col:30> 'unsigned long long'
|   | | |   | |   | `-BinaryOperator 0x194b371c538 <col:19, col:29> 'unsigned long long' '+'
|   | | |   | |   |   |-IntegerLiteral 0x194b371c468 <col:19> 'unsigned long long' 1023
|   | | |   | |   |   `-ImplicitCastExpr 0x194b371c520 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   | |   |     `-ParenExpr 0x194b371c500 <col:27, col:29> 'int'
|   | | |   | |   |       `-BinaryOperator 0x194b371c4e0 <line:303:21, col:24> 'int' '+'
|   | | |   | |   |         |-IntegerLiteral 0x194b371c490 <col:21> 'int' 52
|   | | |   | |   |         `-IntegerLiteral 0x194b371c4b8 <col:24> 'int' 96
|   | | |   | |   `-IntegerLiteral 0x194b371c578 <line:67:33> 'int' 52
|   | | |   | `-ImplicitCastExpr 0x194b371c740 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |   |   `-ImplicitCastExpr 0x194b371c728 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |   |     `-ParenExpr 0x194b371c708 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |   |       `-UnaryOperator 0x194b371c6f0 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |   |         `-CStyleCastExpr 0x194b371c6c8 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |   |           `-ParenExpr 0x194b371c6a8 <col:36, col:38> 'const unsigned char *'
|   | | |   |             `-UnaryOperator 0x194b371c660 <line:303:38, col:45> 'const unsigned char *' prefix '&' cannot overflow
|   | | |   |               `-ArraySubscriptExpr 0x194b371c640 <col:39, col:45> 'const unsigned char' lvalue
|   | | |   |                 |-ImplicitCastExpr 0x194b371c628 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |   |                 | `-DeclRefExpr 0x194b371c5e0 <col:39> 'const unsigned char *' lvalue ParmVar 0x194b370d718 'inp' 'const unsigned char *'
|   | | |   |                 `-IntegerLiteral 0x194b371c600 <col:43> 'int' 12
|   | | |   `-ImplicitCastExpr 0x194b371c7b0 <col:50> 'u64':'unsigned long long' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x194b371c778 <col:50> 'u64':'unsigned long long' lvalue Var 0x194b370ddc0 'pad' 'u64':'unsigned long long'
|   | | |-BinaryOperator 0x194b371cb48 <line:305:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x194b371c808 <line:305:9> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | | `-BinaryOperator 0x194b371cb28 <col:14, line:60:37> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x194b371cb10 <line:305:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x194b371c860 <col:14, col:18> 'double' lvalue .d 0x194b36a34b8
|   | | |   |   `-DeclRefExpr 0x194b371c840 <col:14> 'elem64':'elem64' lvalue Var 0x194b370dba0 'in0' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x194b371caf0 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x194b371c9a0 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b371c978 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b371c958 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b371c900 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b371c890 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b371c8e0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b371c8b8 <line:305:26> 'int' 52
|   | | |     `-ParenExpr 0x194b371cad0 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x194b371caa8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x194b371ca88 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x194b371ca30 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x194b371c9c0 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x194b371ca10 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x194b371c9e8 <line:61:19> 'int' 0
|   | | |-BinaryOperator 0x194b371cea8 <line:306:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x194b371cb68 <line:306:9> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | | `-BinaryOperator 0x194b371ce88 <col:14, line:60:37> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x194b371ce70 <line:306:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x194b371cbc0 <col:14, col:18> 'double' lvalue .d 0x194b36a34b8
|   | | |   |   `-DeclRefExpr 0x194b371cba0 <col:14> 'elem64':'elem64' lvalue Var 0x194b370dc18 'in1' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x194b371ce50 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x194b371cd00 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b371ccd8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b371ccb8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b371cc60 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b371cbf0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b371cc40 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b371cc18 <line:306:26> 'int' 52
|   | | |     `-ParenExpr 0x194b371ce30 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x194b371ce08 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x194b371cde8 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x194b371cd90 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x194b371cd20 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x194b371cd70 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x194b371cd48 <line:62:20> 'int' 32
|   | | |-BinaryOperator 0x194b371e398 <line:307:9, line:63:30> 'double' '='
|   | | | |-DeclRefExpr 0x194b371cec8 <line:307:9> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | | `-BinaryOperator 0x194b371e378 <col:14, line:63:30> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x194b371e360 <line:307:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x194b371cf20 <col:14, col:18> 'double' lvalue .d 0x194b36a34b8
|   | | |   |   `-DeclRefExpr 0x194b371cf00 <col:14> 'elem64':'elem64' lvalue Var 0x194b370dc90 'in2' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x194b371e340 <line:60:17, line:63:30> 'double' '*'
|   | | |     |-ParenExpr 0x194b371d060 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b371d038 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b371d018 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b371cfc0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b371cf50 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b371cfa0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b371cf78 <line:307:26> 'int' 52
|   | | |     `-ParenExpr 0x194b371e320 <line:63:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x194b371e300 <line:60:17, col:37> 'double' '*'
|   | | |         |-ParenExpr 0x194b371e1b0 <col:17, col:37> 'double'
|   | | |         | `-CStyleCastExpr 0x194b371e188 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   `-ParenExpr 0x194b371e168 <col:26, col:36> 'unsigned long long'
|   | | |         |     `-BinaryOperator 0x194b371e110 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |       |-IntegerLiteral 0x194b371d080 <col:27> 'unsigned long long' 1
|   | | |         |       `-ParenExpr 0x194b371e0f0 <col:33, col:35> 'int'
|   | | |         |         `-IntegerLiteral 0x194b371d0a8 <line:62:20> 'int' 32
|   | | |         `-ParenExpr 0x194b371e2e0 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x194b371e2b8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x194b371e298 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x194b371e240 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x194b371e1d0 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x194b371e220 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x194b371e1f8 <line:63:27> 'int' 32
|   | | |-BinaryOperator 0x194b371e9d8 <line:308:9, line:64:30> 'double' '='
|   | | | |-DeclRefExpr 0x194b371e3b8 <line:308:9> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | | `-BinaryOperator 0x194b371e9b8 <col:14, line:64:30> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x194b371e9a0 <line:308:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x194b371e410 <col:14, col:18> 'double' lvalue .d 0x194b36a34b8
|   | | |   |   `-DeclRefExpr 0x194b371e3f0 <col:14> 'elem64':'elem64' lvalue Var 0x194b370dd08 'in3' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x194b371e980 <line:60:17, line:64:30> 'double' '*'
|   | | |     |-ParenExpr 0x194b371e550 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b371e528 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b371e508 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b371e4b0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b371e440 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b371e490 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b371e468 <line:308:26> 'int' 52
|   | | |     `-ParenExpr 0x194b371e960 <line:64:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x194b371e940 <line:63:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x194b371e7f0 <line:63:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x194b371e7d0 <line:60:17, col:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x194b371e680 <col:17, col:37> 'double'
|   | | |         |   | `-CStyleCastExpr 0x194b371e658 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   `-ParenExpr 0x194b371e638 <col:26, col:36> 'unsigned long long'
|   | | |         |   |     `-BinaryOperator 0x194b371e5e0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |       |-IntegerLiteral 0x194b371e570 <col:27> 'unsigned long long' 1
|   | | |         |   |       `-ParenExpr 0x194b371e5c0 <col:33, col:35> 'int'
|   | | |         |   |         `-IntegerLiteral 0x194b371e598 <line:62:20> 'int' 32
|   | | |         |   `-ParenExpr 0x194b371e7b0 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x194b371e788 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x194b371e768 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x194b371e710 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x194b371e6a0 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x194b371e6f0 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x194b371e6c8 <line:63:27> 'int' 32
|   | | |         `-ParenExpr 0x194b371e920 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x194b371e8f8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x194b371e8d8 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x194b371e880 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x194b371e810 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x194b371e860 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x194b371e838 <line:64:27> 'int' 32
|   | | |-CompoundAssignOperator 0x194b371ea50 <line:314:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x194b371e9f8 <col:9> 'double' lvalue Var 0x194b3715220 'h0lo' 'double'
|   | | | `-ImplicitCastExpr 0x194b371ea38 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x194b371ea18 <col:17> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | |-CompoundAssignOperator 0x194b371ead8 <line:315:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x194b371ea80 <col:9> 'double' lvalue Var 0x194b37152a0 'h0hi' 'double'
|   | | | `-ImplicitCastExpr 0x194b371eac0 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x194b371eaa0 <col:17> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | |-CompoundAssignOperator 0x194b371eb60 <line:316:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x194b371eb08 <col:9> 'double' lvalue Var 0x194b3715420 'h2lo' 'double'
|   | | | `-ImplicitCastExpr 0x194b371eb48 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x194b371eb28 <col:17> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | |-CompoundAssignOperator 0x194b371ebe8 <line:317:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x194b371eb90 <col:9> 'double' lvalue Var 0x194b37154a0 'h2hi' 'double'
|   | | | `-ImplicitCastExpr 0x194b371ebd0 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x194b371ebb0 <col:17> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | |-BinaryOperator 0x194b371a1b0 <line:322:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x194b371ec18 <line:322:9> 'double' lvalue Var 0x194b3715680 'c0lo' 'double'
|   | | | `-BinaryOperator 0x194b371a190 <col:16, line:60:37> 'double' '-'
|   | | |   |-ParenExpr 0x194b371ef28 <line:322:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x194b371ef08 <col:17, line:60:37> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x194b371eef0 <line:322:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b371ec50 <col:17> 'double' lvalue Var 0x194b3715220 'h0lo' 'double'
|   | | |   |   `-BinaryOperator 0x194b371eed0 <line:60:17, col:37> 'double' '*'
|   | | |   |     |-ParenExpr 0x194b371ed80 <col:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x194b371ed58 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x194b371ed38 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x194b371ece0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x194b371ec70 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x194b371ecc0 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x194b371ec98 <line:322:28> 'int' 52
|   | | |   |     `-ParenExpr 0x194b371eeb0 <line:60:17, col:37> 'double'
|   | | |   |       `-CStyleCastExpr 0x194b371ee88 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         `-ParenExpr 0x194b371ee68 <col:26, col:36> 'unsigned long long'
|   | | |   |           `-BinaryOperator 0x194b371ee10 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |             |-IntegerLiteral 0x194b371eda0 <col:27> 'unsigned long long' 1
|   | | |   |             `-ParenExpr 0x194b371edf0 <col:33, col:35> 'int'
|   | | |   |               `-IntegerLiteral 0x194b371edc8 <line:62:20> 'int' 32
|   | | |   `-BinaryOperator 0x194b371a170 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x194b371f058 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b371f030 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b371f010 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b371efb8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b371ef48 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b371ef98 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b371ef70 <line:322:46> 'int' 52
|   | | |     `-ParenExpr 0x194b371a150 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x194b371a128 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x194b371a108 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x194b371a0b0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x194b371f078 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x194b371f0c8 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x194b371f0a0 <line:62:20> 'int' 32
|   | | |-BinaryOperator 0x194b371aa80 <line:323:9, line:63:30> 'double' '='
|   | | | |-DeclRefExpr 0x194b371a1d0 <line:323:9> 'double' lvalue Var 0x194b3715780 'c1lo' 'double'
|   | | | `-BinaryOperator 0x194b371aa60 <col:16, line:63:30> 'double' '-'
|   | | |   |-ParenExpr 0x194b371a650 <line:323:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x194b371a630 <col:17, line:63:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x194b371a618 <line:323:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b371a208 <col:17> 'double' lvalue Var 0x194b3715320 'h1lo' 'double'
|   | | |   |   `-BinaryOperator 0x194b371a5f8 <line:60:17, line:63:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x194b371a338 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x194b371a310 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x194b371a2f0 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x194b371a298 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x194b371a228 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x194b371a278 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x194b371a250 <line:323:28> 'int' 52
|   | | |   |     `-ParenExpr 0x194b371a5d8 <line:63:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x194b371a5b8 <line:60:17, col:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x194b371a468 <col:17, col:37> 'double'
|   | | |   |         | `-CStyleCastExpr 0x194b371a440 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   `-ParenExpr 0x194b371a420 <col:26, col:36> 'unsigned long long'
|   | | |   |         |     `-BinaryOperator 0x194b371a3c8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |       |-IntegerLiteral 0x194b371a358 <col:27> 'unsigned long long' 1
|   | | |   |         |       `-ParenExpr 0x194b371a3a8 <col:33, col:35> 'int'
|   | | |   |         |         `-IntegerLiteral 0x194b371a380 <line:62:20> 'int' 32
|   | | |   |         `-ParenExpr 0x194b371a598 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x194b371a570 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x194b371a550 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x194b371a4f8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x194b371a488 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x194b371a4d8 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x194b371a4b0 <line:63:27> 'int' 32
|   | | |   `-BinaryOperator 0x194b371aa40 <line:60:17, line:63:30> 'double' '*'
|   | | |     |-ParenExpr 0x194b371a780 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b371a758 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b371a738 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b371a6e0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b371a670 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b371a6c0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b371a698 <line:323:46> 'int' 52
|   | | |     `-ParenExpr 0x194b371aa20 <line:63:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x194b371aa00 <line:60:17, col:37> 'double' '*'
|   | | |         |-ParenExpr 0x194b371a8b0 <col:17, col:37> 'double'
|   | | |         | `-CStyleCastExpr 0x194b371a888 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   `-ParenExpr 0x194b371a868 <col:26, col:36> 'unsigned long long'
|   | | |         |     `-BinaryOperator 0x194b371a810 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |       |-IntegerLiteral 0x194b371a7a0 <col:27> 'unsigned long long' 1
|   | | |         |       `-ParenExpr 0x194b371a7f0 <col:33, col:35> 'int'
|   | | |         |         `-IntegerLiteral 0x194b371a7c8 <line:62:20> 'int' 32
|   | | |         `-ParenExpr 0x194b371a9e0 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x194b371a9b8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x194b371a998 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x194b371a940 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x194b371a8d0 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x194b371a920 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x194b371a8f8 <line:63:27> 'int' 32
|   | | |-BinaryOperator 0x194b371b640 <line:324:9, line:64:30> 'double' '='
|   | | | |-DeclRefExpr 0x194b371aaa0 <line:324:9> 'double' lvalue Var 0x194b3715880 'c2lo' 'double'
|   | | | `-BinaryOperator 0x194b371b620 <col:16, line:64:30> 'double' '-'
|   | | |   |-ParenExpr 0x194b371b090 <line:324:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x194b371b070 <col:17, line:64:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x194b371b058 <line:324:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b371aad8 <col:17> 'double' lvalue Var 0x194b3715420 'h2lo' 'double'
|   | | |   |   `-BinaryOperator 0x194b371b038 <line:60:17, line:64:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x194b371ac08 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x194b371abe0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x194b371abc0 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x194b371ab68 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x194b371aaf8 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x194b371ab48 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x194b371ab20 <line:324:28> 'int' 52
|   | | |   |     `-ParenExpr 0x194b371b018 <line:64:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x194b371aff8 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x194b371aea8 <line:63:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x194b371ae88 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x194b371ad38 <col:17, col:37> 'double'
|   | | |   |         |   | `-CStyleCastExpr 0x194b371ad10 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   `-ParenExpr 0x194b371acf0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |     `-BinaryOperator 0x194b371ac98 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |       |-IntegerLiteral 0x194b371ac28 <col:27> 'unsigned long long' 1
|   | | |   |         |   |       `-ParenExpr 0x194b371ac78 <col:33, col:35> 'int'
|   | | |   |         |   |         `-IntegerLiteral 0x194b371ac50 <line:62:20> 'int' 32
|   | | |   |         |   `-ParenExpr 0x194b371ae68 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x194b371ae40 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x194b371ae20 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x194b371adc8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x194b371ad58 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x194b371ada8 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x194b371ad80 <line:63:27> 'int' 32
|   | | |   |         `-ParenExpr 0x194b371afd8 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x194b371afb0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x194b371af90 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x194b371af38 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x194b371aec8 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x194b371af18 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x194b371aef0 <line:64:27> 'int' 32
|   | | |   `-BinaryOperator 0x194b371b600 <line:60:17, line:64:30> 'double' '*'
|   | | |     |-ParenExpr 0x194b371b1d0 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b371b1a8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b371b188 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b371b130 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b371b0c0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b371b110 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b371b0e8 <line:324:46> 'int' 52
|   | | |     `-ParenExpr 0x194b371b5e0 <line:64:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x194b371b5c0 <line:63:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x194b371b470 <line:63:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x194b371b450 <line:60:17, col:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x194b371b300 <col:17, col:37> 'double'
|   | | |         |   | `-CStyleCastExpr 0x194b371b2d8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   `-ParenExpr 0x194b371b2b8 <col:26, col:36> 'unsigned long long'
|   | | |         |   |     `-BinaryOperator 0x194b371b260 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |       |-IntegerLiteral 0x194b371b1f0 <col:27> 'unsigned long long' 1
|   | | |         |   |       `-ParenExpr 0x194b371b240 <col:33, col:35> 'int'
|   | | |         |   |         `-IntegerLiteral 0x194b371b218 <line:62:20> 'int' 32
|   | | |         |   `-ParenExpr 0x194b371b430 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x194b371b408 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x194b371b3e8 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x194b371b390 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x194b371b320 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x194b371b370 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x194b371b348 <line:63:27> 'int' 32
|   | | |         `-ParenExpr 0x194b371b5a0 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x194b371b578 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x194b371b558 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x194b371b500 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x194b371b490 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x194b371b4e0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x194b371b4b8 <line:64:27> 'int' 32
|   | | |-BinaryOperator 0x194b371f520 <line:325:9, line:65:31> 'double' '='
|   | | | |-DeclRefExpr 0x194b371b660 <line:325:9> 'double' lvalue Var 0x194b3715980 'c3lo' 'double'
|   | | | `-BinaryOperator 0x194b371f500 <col:16, line:65:31> 'double' '-'
|   | | |   |-ParenExpr 0x194b371bdc0 <line:325:16, col:38> 'double'
|   | | |   | `-BinaryOperator 0x194b371bda0 <col:17, line:65:31> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x194b371bd88 <line:325:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b371b698 <col:17> 'double' lvalue Var 0x194b3715520 'h3lo' 'double'
|   | | |   |   `-BinaryOperator 0x194b371bd68 <line:60:17, line:65:31> 'double' '*'
|   | | |   |     |-ParenExpr 0x194b371b7c8 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x194b371b7a0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x194b371b780 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x194b371b728 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x194b371b6b8 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x194b371b708 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x194b371b6e0 <line:325:28> 'int' 52
|   | | |   |     `-ParenExpr 0x194b371bd48 <line:65:17, col:31> 'double'
|   | | |   |       `-BinaryOperator 0x194b371bd28 <line:64:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x194b371bbd8 <line:64:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x194b371bbb8 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x194b371ba68 <line:63:16, col:30> 'double'
|   | | |   |         |   | `-BinaryOperator 0x194b371ba48 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |   |-ParenExpr 0x194b371b8f8 <col:17, col:37> 'double'
|   | | |   |         |   |   | `-CStyleCastExpr 0x194b371b8d0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   |   `-ParenExpr 0x194b371b8b0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |   |     `-BinaryOperator 0x194b371b858 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |   |       |-IntegerLiteral 0x194b371b7e8 <col:27> 'unsigned long long' 1
|   | | |   |         |   |   |       `-ParenExpr 0x194b371b838 <col:33, col:35> 'int'
|   | | |   |         |   |   |         `-IntegerLiteral 0x194b371b810 <line:62:20> 'int' 32
|   | | |   |         |   |   `-ParenExpr 0x194b371ba28 <line:60:17, col:37> 'double'
|   | | |   |         |   |     `-CStyleCastExpr 0x194b371ba00 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |       `-ParenExpr 0x194b371b9e0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |         `-BinaryOperator 0x194b371b988 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |           |-IntegerLiteral 0x194b371b918 <col:27> 'unsigned long long' 1
|   | | |   |         |   |           `-ParenExpr 0x194b371b968 <col:33, col:35> 'int'
|   | | |   |         |   |             `-IntegerLiteral 0x194b371b940 <line:63:27> 'int' 32
|   | | |   |         |   `-ParenExpr 0x194b371bb98 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x194b371bb70 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x194b371bb50 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x194b371baf8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x194b371ba88 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x194b371bad8 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x194b371bab0 <line:64:27> 'int' 32
|   | | |   |         `-ParenExpr 0x194b371bd08 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x194b371bce0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x194b371bcc0 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x194b371bc68 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x194b371bbf8 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x194b371bc48 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x194b371bc20 <line:65:28> 'int' 34
|   | | |   `-BinaryOperator 0x194b371f4e0 <line:60:17, line:65:31> 'double' '*'
|   | | |     |-ParenExpr 0x194b371bef0 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b371bec8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b371bea8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b371be50 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b371bde0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b371be30 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b371be08 <line:325:46> 'int' 52
|   | | |     `-ParenExpr 0x194b371f4c0 <line:65:17, col:31> 'double'
|   | | |       `-BinaryOperator 0x194b371f4a0 <line:64:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x194b371f350 <line:64:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x194b371f330 <line:63:16, line:60:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x194b371f1e0 <line:63:16, col:30> 'double'
|   | | |         |   | `-BinaryOperator 0x194b371f1c0 <line:60:17, col:37> 'double' '*'
|   | | |         |   |   |-ParenExpr 0x194b371c020 <col:17, col:37> 'double'
|   | | |         |   |   | `-CStyleCastExpr 0x194b371bff8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   |   `-ParenExpr 0x194b371bfd8 <col:26, col:36> 'unsigned long long'
|   | | |         |   |   |     `-BinaryOperator 0x194b371bf80 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |   |       |-IntegerLiteral 0x194b371bf10 <col:27> 'unsigned long long' 1
|   | | |         |   |   |       `-ParenExpr 0x194b371bf60 <col:33, col:35> 'int'
|   | | |         |   |   |         `-IntegerLiteral 0x194b371bf38 <line:62:20> 'int' 32
|   | | |         |   |   `-ParenExpr 0x194b371f1a0 <line:60:17, col:37> 'double'
|   | | |         |   |     `-CStyleCastExpr 0x194b371f178 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |       `-ParenExpr 0x194b371f158 <col:26, col:36> 'unsigned long long'
|   | | |         |   |         `-BinaryOperator 0x194b371f100 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |           |-IntegerLiteral 0x194b371c040 <col:27> 'unsigned long long' 1
|   | | |         |   |           `-ParenExpr 0x194b371c090 <col:33, col:35> 'int'
|   | | |         |   |             `-IntegerLiteral 0x194b371c068 <line:63:27> 'int' 32
|   | | |         |   `-ParenExpr 0x194b371f310 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x194b371f2e8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x194b371f2c8 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x194b371f270 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x194b371f200 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x194b371f250 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x194b371f228 <line:64:27> 'int' 32
|   | | |         `-ParenExpr 0x194b371f480 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x194b371f458 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x194b371f438 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x194b371f3e0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x194b371f370 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x194b371f3c0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x194b371f398 <line:65:28> 'int' 34
|   | | |-BinaryOperator 0x194b371fb10 <line:327:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x194b371f540 <line:327:9> 'double' lvalue Var 0x194b3715700 'c0hi' 'double'
|   | | | `-BinaryOperator 0x194b371faf0 <col:16, line:60:37> 'double' '-'
|   | | |   |-ParenExpr 0x194b371f850 <line:327:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x194b371f830 <col:17, line:60:37> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x194b371f818 <line:327:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b371f578 <col:17> 'double' lvalue Var 0x194b37152a0 'h0hi' 'double'
|   | | |   |   `-BinaryOperator 0x194b371f7f8 <line:60:17, col:37> 'double' '*'
|   | | |   |     |-ParenExpr 0x194b371f6a8 <col:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x194b371f680 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x194b371f660 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x194b371f608 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x194b371f598 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x194b371f5e8 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x194b371f5c0 <line:327:28> 'int' 52
|   | | |   |     `-ParenExpr 0x194b371f7d8 <line:60:17, col:37> 'double'
|   | | |   |       `-CStyleCastExpr 0x194b371f7b0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         `-ParenExpr 0x194b371f790 <col:26, col:36> 'unsigned long long'
|   | | |   |           `-BinaryOperator 0x194b371f738 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |             |-IntegerLiteral 0x194b371f6c8 <col:27> 'unsigned long long' 1
|   | | |   |             `-ParenExpr 0x194b371f718 <col:33, col:35> 'int'
|   | | |   |               `-IntegerLiteral 0x194b371f6f0 <line:62:20> 'int' 32
|   | | |   `-BinaryOperator 0x194b371fad0 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x194b371f980 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b371f958 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b371f938 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b371f8e0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b371f870 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b371f8c0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b371f898 <line:327:46> 'int' 52
|   | | |     `-ParenExpr 0x194b371fab0 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x194b371fa88 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x194b371fa68 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x194b371fa10 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x194b371f9a0 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x194b371f9f0 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x194b371f9c8 <line:62:20> 'int' 32
|   | | |-BinaryOperator 0x194b3718370 <line:328:9, line:63:30> 'double' '='
|   | | | |-DeclRefExpr 0x194b371fb30 <line:328:9> 'double' lvalue Var 0x194b3715800 'c1hi' 'double'
|   | | | `-BinaryOperator 0x194b3718350 <col:16, line:63:30> 'double' '-'
|   | | |   |-ParenExpr 0x194b371ffb0 <line:328:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x194b371ff90 <col:17, line:63:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x194b371ff78 <line:328:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b371fb68 <col:17> 'double' lvalue Var 0x194b37153a0 'h1hi' 'double'
|   | | |   |   `-BinaryOperator 0x194b371ff58 <line:60:17, line:63:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x194b371fc98 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x194b371fc70 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x194b371fc50 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x194b371fbf8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x194b371fb88 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x194b371fbd8 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x194b371fbb0 <line:328:28> 'int' 52
|   | | |   |     `-ParenExpr 0x194b371ff38 <line:63:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x194b371ff18 <line:60:17, col:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x194b371fdc8 <col:17, col:37> 'double'
|   | | |   |         | `-CStyleCastExpr 0x194b371fda0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   `-ParenExpr 0x194b371fd80 <col:26, col:36> 'unsigned long long'
|   | | |   |         |     `-BinaryOperator 0x194b371fd28 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |       |-IntegerLiteral 0x194b371fcb8 <col:27> 'unsigned long long' 1
|   | | |   |         |       `-ParenExpr 0x194b371fd08 <col:33, col:35> 'int'
|   | | |   |         |         `-IntegerLiteral 0x194b371fce0 <line:62:20> 'int' 32
|   | | |   |         `-ParenExpr 0x194b371fef8 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x194b371fed0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x194b371feb0 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x194b371fe58 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x194b371fde8 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x194b371fe38 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x194b371fe10 <line:63:27> 'int' 32
|   | | |   `-BinaryOperator 0x194b3718330 <line:60:17, line:63:30> 'double' '*'
|   | | |     |-ParenExpr 0x194b37200e0 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b37200b8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b3720098 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b3720040 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b371ffd0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b3720020 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b371fff8 <line:328:46> 'int' 52
|   | | |     `-ParenExpr 0x194b3718310 <line:63:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x194b37182f0 <line:60:17, col:37> 'double' '*'
|   | | |         |-ParenExpr 0x194b37181a0 <col:17, col:37> 'double'
|   | | |         | `-CStyleCastExpr 0x194b3718178 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   `-ParenExpr 0x194b3718158 <col:26, col:36> 'unsigned long long'
|   | | |         |     `-BinaryOperator 0x194b3718100 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |       |-IntegerLiteral 0x194b3718090 <col:27> 'unsigned long long' 1
|   | | |         |       `-ParenExpr 0x194b37180e0 <col:33, col:35> 'int'
|   | | |         |         `-IntegerLiteral 0x194b37180b8 <line:62:20> 'int' 32
|   | | |         `-ParenExpr 0x194b37182d0 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x194b37182a8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x194b3718288 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x194b3718230 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x194b37181c0 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x194b3718210 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x194b37181e8 <line:63:27> 'int' 32
|   | | |-BinaryOperator 0x194b3718f20 <line:329:9, line:64:30> 'double' '='
|   | | | |-DeclRefExpr 0x194b3718390 <line:329:9> 'double' lvalue Var 0x194b3715900 'c2hi' 'double'
|   | | | `-BinaryOperator 0x194b3718f00 <col:16, line:64:30> 'double' '-'
|   | | |   |-ParenExpr 0x194b3718980 <line:329:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x194b3718960 <col:17, line:64:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x194b3718948 <line:329:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b37183c8 <col:17> 'double' lvalue Var 0x194b37154a0 'h2hi' 'double'
|   | | |   |   `-BinaryOperator 0x194b3718928 <line:60:17, line:64:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x194b37184f8 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x194b37184d0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x194b37184b0 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x194b3718458 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x194b37183e8 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x194b3718438 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x194b3718410 <line:329:28> 'int' 52
|   | | |   |     `-ParenExpr 0x194b3718908 <line:64:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x194b37188e8 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x194b3718798 <line:63:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x194b3718778 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x194b3718628 <col:17, col:37> 'double'
|   | | |   |         |   | `-CStyleCastExpr 0x194b3718600 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   `-ParenExpr 0x194b37185e0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |     `-BinaryOperator 0x194b3718588 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |       |-IntegerLiteral 0x194b3718518 <col:27> 'unsigned long long' 1
|   | | |   |         |   |       `-ParenExpr 0x194b3718568 <col:33, col:35> 'int'
|   | | |   |         |   |         `-IntegerLiteral 0x194b3718540 <line:62:20> 'int' 32
|   | | |   |         |   `-ParenExpr 0x194b3718758 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x194b3718730 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x194b3718710 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x194b37186b8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x194b3718648 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x194b3718698 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x194b3718670 <line:63:27> 'int' 32
|   | | |   |         `-ParenExpr 0x194b37188c8 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x194b37188a0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x194b3718880 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x194b3718828 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x194b37187b8 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x194b3718808 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x194b37187e0 <line:64:27> 'int' 32
|   | | |   `-BinaryOperator 0x194b3718ee0 <line:60:17, line:64:30> 'double' '*'
|   | | |     |-ParenExpr 0x194b3718ab0 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b3718a88 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b3718a68 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b3718a10 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b37189a0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b37189f0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b37189c8 <line:329:46> 'int' 52
|   | | |     `-ParenExpr 0x194b3718ec0 <line:64:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x194b3718ea0 <line:63:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x194b3718d50 <line:63:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x194b3718d30 <line:60:17, col:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x194b3718be0 <col:17, col:37> 'double'
|   | | |         |   | `-CStyleCastExpr 0x194b3718bb8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   `-ParenExpr 0x194b3718b98 <col:26, col:36> 'unsigned long long'
|   | | |         |   |     `-BinaryOperator 0x194b3718b40 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |       |-IntegerLiteral 0x194b3718ad0 <col:27> 'unsigned long long' 1
|   | | |         |   |       `-ParenExpr 0x194b3718b20 <col:33, col:35> 'int'
|   | | |         |   |         `-IntegerLiteral 0x194b3718af8 <line:62:20> 'int' 32
|   | | |         |   `-ParenExpr 0x194b3718d10 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x194b3718ce8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x194b3718cc8 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x194b3718c70 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x194b3718c00 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x194b3718c50 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x194b3718c28 <line:63:27> 'int' 32
|   | | |         `-ParenExpr 0x194b3718e80 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x194b3718e58 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x194b3718e38 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x194b3718de0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x194b3718d70 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x194b3718dc0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x194b3718d98 <line:64:27> 'int' 32
|   | | |-BinaryOperator 0x194b3720e40 <line:330:9, line:65:31> 'double' '='
|   | | | |-DeclRefExpr 0x194b3718f40 <line:330:9> 'double' lvalue Var 0x194b3715a00 'c3hi' 'double'
|   | | | `-BinaryOperator 0x194b3720e20 <col:16, line:65:31> 'double' '-'
|   | | |   |-ParenExpr 0x194b3720730 <line:330:16, col:38> 'double'
|   | | |   | `-BinaryOperator 0x194b3720710 <col:17, line:65:31> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x194b37206f8 <line:330:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3718f78 <col:17> 'double' lvalue Var 0x194b37155a0 'h3hi' 'double'
|   | | |   |   `-BinaryOperator 0x194b37206d8 <line:60:17, line:65:31> 'double' '*'
|   | | |   |     |-ParenExpr 0x194b3720138 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x194b3720110 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x194b3719060 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x194b3719008 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x194b3718f98 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x194b3718fe8 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x194b3718fc0 <line:330:28> 'int' 52
|   | | |   |     `-ParenExpr 0x194b37206b8 <line:65:17, col:31> 'double'
|   | | |   |       `-BinaryOperator 0x194b3720698 <line:64:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x194b3720548 <line:64:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x194b3720528 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x194b37203d8 <line:63:16, col:30> 'double'
|   | | |   |         |   | `-BinaryOperator 0x194b37203b8 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |   |-ParenExpr 0x194b3720268 <col:17, col:37> 'double'
|   | | |   |         |   |   | `-CStyleCastExpr 0x194b3720240 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   |   `-ParenExpr 0x194b3720220 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |   |     `-BinaryOperator 0x194b37201c8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |   |       |-IntegerLiteral 0x194b3720158 <col:27> 'unsigned long long' 1
|   | | |   |         |   |   |       `-ParenExpr 0x194b37201a8 <col:33, col:35> 'int'
|   | | |   |         |   |   |         `-IntegerLiteral 0x194b3720180 <line:62:20> 'int' 32
|   | | |   |         |   |   `-ParenExpr 0x194b3720398 <line:60:17, col:37> 'double'
|   | | |   |         |   |     `-CStyleCastExpr 0x194b3720370 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |       `-ParenExpr 0x194b3720350 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |         `-BinaryOperator 0x194b37202f8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |           |-IntegerLiteral 0x194b3720288 <col:27> 'unsigned long long' 1
|   | | |   |         |   |           `-ParenExpr 0x194b37202d8 <col:33, col:35> 'int'
|   | | |   |         |   |             `-IntegerLiteral 0x194b37202b0 <line:63:27> 'int' 32
|   | | |   |         |   `-ParenExpr 0x194b3720508 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x194b37204e0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x194b37204c0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x194b3720468 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x194b37203f8 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x194b3720448 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x194b3720420 <line:64:27> 'int' 32
|   | | |   |         `-ParenExpr 0x194b3720678 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x194b3720650 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x194b3720630 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x194b37205d8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x194b3720568 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x194b37205b8 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x194b3720590 <line:65:28> 'int' 34
|   | | |   `-BinaryOperator 0x194b3720e00 <line:60:17, line:65:31> 'double' '*'
|   | | |     |-ParenExpr 0x194b3720860 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x194b3720838 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x194b3720818 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x194b37207c0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x194b3720750 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x194b37207a0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x194b3720778 <line:330:46> 'int' 52
|   | | |     `-ParenExpr 0x194b3720de0 <line:65:17, col:31> 'double'
|   | | |       `-BinaryOperator 0x194b3720dc0 <line:64:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x194b3720c70 <line:64:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x194b3720c50 <line:63:16, line:60:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x194b3720b00 <line:63:16, col:30> 'double'
|   | | |         |   | `-BinaryOperator 0x194b3720ae0 <line:60:17, col:37> 'double' '*'
|   | | |         |   |   |-ParenExpr 0x194b3720990 <col:17, col:37> 'double'
|   | | |         |   |   | `-CStyleCastExpr 0x194b3720968 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   |   `-ParenExpr 0x194b3720948 <col:26, col:36> 'unsigned long long'
|   | | |         |   |   |     `-BinaryOperator 0x194b37208f0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |   |       |-IntegerLiteral 0x194b3720880 <col:27> 'unsigned long long' 1
|   | | |         |   |   |       `-ParenExpr 0x194b37208d0 <col:33, col:35> 'int'
|   | | |         |   |   |         `-IntegerLiteral 0x194b37208a8 <line:62:20> 'int' 32
|   | | |         |   |   `-ParenExpr 0x194b3720ac0 <line:60:17, col:37> 'double'
|   | | |         |   |     `-CStyleCastExpr 0x194b3720a98 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |       `-ParenExpr 0x194b3720a78 <col:26, col:36> 'unsigned long long'
|   | | |         |   |         `-BinaryOperator 0x194b3720a20 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |           |-IntegerLiteral 0x194b37209b0 <col:27> 'unsigned long long' 1
|   | | |         |   |           `-ParenExpr 0x194b3720a00 <col:33, col:35> 'int'
|   | | |         |   |             `-IntegerLiteral 0x194b37209d8 <line:63:27> 'int' 32
|   | | |         |   `-ParenExpr 0x194b3720c30 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x194b3720c08 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x194b3720be8 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x194b3720b90 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x194b3720b20 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x194b3720b70 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x194b3720b48 <line:64:27> 'int' 32
|   | | |         `-ParenExpr 0x194b3720da0 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x194b3720d78 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x194b3720d58 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x194b3720d00 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x194b3720c90 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x194b3720ce0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x194b3720cb8 <line:65:28> 'int' 34
|   | | |-BinaryOperator 0x194b3720f88 <line:335:9, col:31> 'double' '='
|   | | | |-DeclRefExpr 0x194b3720e60 <col:9> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | | `-BinaryOperator 0x194b3720f68 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x194b3720f10 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x194b3720ef0 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x194b3720ec0 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3720e80 <col:16> 'double' lvalue Var 0x194b3715320 'h1lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x194b3720ed8 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3720ea0 <col:23> 'double' lvalue Var 0x194b3715780 'c1lo' 'double'
|   | | |   `-ImplicitCastExpr 0x194b3720f50 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x194b3720f30 <col:31> 'double' lvalue Var 0x194b3715680 'c0lo' 'double'
|   | | |-BinaryOperator 0x194b37210d0 <line:336:9, col:31> 'double' '='
|   | | | |-DeclRefExpr 0x194b3720fa8 <col:9> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | | `-BinaryOperator 0x194b37210b0 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x194b3721058 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x194b3721038 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x194b3721008 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3720fc8 <col:16> 'double' lvalue Var 0x194b3715420 'h2lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x194b3721020 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3720fe8 <col:23> 'double' lvalue Var 0x194b3715880 'c2lo' 'double'
|   | | |   `-ImplicitCastExpr 0x194b3721098 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x194b3721078 <col:31> 'double' lvalue Var 0x194b3715780 'c1lo' 'double'
|   | | |-BinaryOperator 0x194b37191a8 <line:337:9, col:31> 'double' '='
|   | | | |-DeclRefExpr 0x194b37210f0 <col:9> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | | `-BinaryOperator 0x194b3719188 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x194b3719130 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x194b3719110 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x194b37190e0 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b37190a0 <col:16> 'double' lvalue Var 0x194b3715520 'h3lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x194b37190f8 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b37190c0 <col:23> 'double' lvalue Var 0x194b3715980 'c3lo' 'double'
|   | | |   `-ImplicitCastExpr 0x194b3719170 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x194b3719150 <col:31> 'double' lvalue Var 0x194b3715880 'c2lo' 'double'
|   | | |-BinaryOperator 0x194b37198f8 <line:338:9, col:49> 'double' '='
|   | | | |-DeclRefExpr 0x194b37191c8 <col:9> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | | `-BinaryOperator 0x194b37198d8 <col:15, col:49> 'double' '+'
|   | | |   |-ParenExpr 0x194b3719278 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x194b3719258 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x194b3719228 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b37191e8 <col:16> 'double' lvalue Var 0x194b3715220 'h0lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x194b3719240 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3719208 <col:23> 'double' lvalue Var 0x194b3715680 'c0lo' 'double'
|   | | |   `-BinaryOperator 0x194b37198b8 <col:31, col:49> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x194b37198a0 <col:31> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x194b3719298 <col:31> 'double' lvalue Var 0x194b3715980 'c3lo' 'double'
|   | | |     `-ParenExpr 0x194b3719880 <col:38, col:49> 'double'
|   | | |       `-BinaryOperator 0x194b3719860 <col:39, line:65:31> 'double' '/'
|   | | |         |-FloatingLiteral 0x194b37192b8 <line:338:39> 'double' 5.000000e+00
|   | | |         `-ParenExpr 0x194b3719840 <line:65:17, col:31> 'double'
|   | | |           `-BinaryOperator 0x194b3719820 <line:64:16, line:60:37> 'double' '*'
|   | | |             |-ParenExpr 0x194b37196d0 <line:64:16, col:30> 'double'
|   | | |             | `-BinaryOperator 0x194b37196b0 <line:63:16, line:60:37> 'double' '*'
|   | | |             |   |-ParenExpr 0x194b3719560 <line:63:16, col:30> 'double'
|   | | |             |   | `-BinaryOperator 0x194b3719540 <line:60:17, col:37> 'double' '*'
|   | | |             |   |   |-ParenExpr 0x194b37193f0 <col:17, col:37> 'double'
|   | | |             |   |   | `-CStyleCastExpr 0x194b37193c8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |   |   `-ParenExpr 0x194b37193a8 <col:26, col:36> 'unsigned long long'
|   | | |             |   |   |     `-BinaryOperator 0x194b3719350 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |   |       |-IntegerLiteral 0x194b37192e0 <col:27> 'unsigned long long' 1
|   | | |             |   |   |       `-ParenExpr 0x194b3719330 <col:33, col:35> 'int'
|   | | |             |   |   |         `-IntegerLiteral 0x194b3719308 <line:62:20> 'int' 32
|   | | |             |   |   `-ParenExpr 0x194b3719520 <line:60:17, col:37> 'double'
|   | | |             |   |     `-CStyleCastExpr 0x194b37194f8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |       `-ParenExpr 0x194b37194d8 <col:26, col:36> 'unsigned long long'
|   | | |             |   |         `-BinaryOperator 0x194b3719480 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |           |-IntegerLiteral 0x194b3719410 <col:27> 'unsigned long long' 1
|   | | |             |   |           `-ParenExpr 0x194b3719460 <col:33, col:35> 'int'
|   | | |             |   |             `-IntegerLiteral 0x194b3719438 <line:63:27> 'int' 32
|   | | |             |   `-ParenExpr 0x194b3719690 <line:60:17, col:37> 'double'
|   | | |             |     `-CStyleCastExpr 0x194b3719668 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |       `-ParenExpr 0x194b3719648 <col:26, col:36> 'unsigned long long'
|   | | |             |         `-BinaryOperator 0x194b37195f0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |           |-IntegerLiteral 0x194b3719580 <col:27> 'unsigned long long' 1
|   | | |             |           `-ParenExpr 0x194b37195d0 <col:33, col:35> 'int'
|   | | |             |             `-IntegerLiteral 0x194b37195a8 <line:64:27> 'int' 32
|   | | |             `-ParenExpr 0x194b3719800 <line:60:17, col:37> 'double'
|   | | |               `-CStyleCastExpr 0x194b37197d8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |                 `-ParenExpr 0x194b37197b8 <col:26, col:36> 'unsigned long long'
|   | | |                   `-BinaryOperator 0x194b3719760 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                     |-IntegerLiteral 0x194b37196f0 <col:27> 'unsigned long long' 1
|   | | |                     `-ParenExpr 0x194b3719740 <col:33, col:35> 'int'
|   | | |                       `-IntegerLiteral 0x194b3719718 <line:65:28> 'int' 34
|   | | |-CompoundAssignOperator 0x194b3719a40 <line:340:9, col:31> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x194b3719918 <col:9> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | | `-BinaryOperator 0x194b3719a20 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x194b37199c8 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x194b37199a8 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x194b3719978 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3719938 <col:16> 'double' lvalue Var 0x194b37153a0 'h1hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x194b3719990 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3719958 <col:23> 'double' lvalue Var 0x194b3715800 'c1hi' 'double'
|   | | |   `-ImplicitCastExpr 0x194b3719a08 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x194b37199e8 <col:31> 'double' lvalue Var 0x194b3715700 'c0hi' 'double'
|   | | |-CompoundAssignOperator 0x194b3719b98 <line:341:9, col:31> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x194b3719a70 <col:9> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | | `-BinaryOperator 0x194b3719b78 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x194b3719b20 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x194b3719b00 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x194b3719ad0 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3719a90 <col:16> 'double' lvalue Var 0x194b37154a0 'h2hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x194b3719ae8 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3719ab0 <col:23> 'double' lvalue Var 0x194b3715900 'c2hi' 'double'
|   | | |   `-ImplicitCastExpr 0x194b3719b60 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x194b3719b40 <col:31> 'double' lvalue Var 0x194b3715800 'c1hi' 'double'
|   | | |-CompoundAssignOperator 0x194b3719cf0 <line:342:9, col:31> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x194b3719bc8 <col:9> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | | `-BinaryOperator 0x194b3719cd0 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x194b3719c78 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x194b3719c58 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x194b3719c28 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3719be8 <col:16> 'double' lvalue Var 0x194b37155a0 'h3hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x194b3719c40 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3719c08 <col:23> 'double' lvalue Var 0x194b3715a00 'c3hi' 'double'
|   | | |   `-ImplicitCastExpr 0x194b3719cb8 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x194b3719c98 <col:31> 'double' lvalue Var 0x194b3715900 'c2hi' 'double'
|   | | |-CompoundAssignOperator 0x194b3726528 <line:343:9, col:49> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x194b3719d20 <col:9> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | | `-BinaryOperator 0x194b3726508 <col:15, col:49> 'double' '+'
|   | | |   |-ParenExpr 0x194b3719dd0 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x194b3719db0 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x194b3719d80 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3719d40 <col:16> 'double' lvalue Var 0x194b37152a0 'h0hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x194b3719d98 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3719d60 <col:23> 'double' lvalue Var 0x194b3715700 'c0hi' 'double'
|   | | |   `-BinaryOperator 0x194b37264e8 <col:31, col:49> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x194b37264d0 <col:31> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x194b3719df0 <col:31> 'double' lvalue Var 0x194b3715a00 'c3hi' 'double'
|   | | |     `-ParenExpr 0x194b37264b0 <col:38, col:49> 'double'
|   | | |       `-BinaryOperator 0x194b3726490 <col:39, line:65:31> 'double' '/'
|   | | |         |-FloatingLiteral 0x194b3719e10 <line:343:39> 'double' 5.000000e+00
|   | | |         `-ParenExpr 0x194b3726470 <line:65:17, col:31> 'double'
|   | | |           `-BinaryOperator 0x194b3726450 <line:64:16, line:60:37> 'double' '*'
|   | | |             |-ParenExpr 0x194b3726300 <line:64:16, col:30> 'double'
|   | | |             | `-BinaryOperator 0x194b37262e0 <line:63:16, line:60:37> 'double' '*'
|   | | |             |   |-ParenExpr 0x194b3726190 <line:63:16, col:30> 'double'
|   | | |             |   | `-BinaryOperator 0x194b3726170 <line:60:17, col:37> 'double' '*'
|   | | |             |   |   |-ParenExpr 0x194b3719f48 <col:17, col:37> 'double'
|   | | |             |   |   | `-CStyleCastExpr 0x194b3719f20 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |   |   `-ParenExpr 0x194b3719f00 <col:26, col:36> 'unsigned long long'
|   | | |             |   |   |     `-BinaryOperator 0x194b3719ea8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |   |       |-IntegerLiteral 0x194b3719e38 <col:27> 'unsigned long long' 1
|   | | |             |   |   |       `-ParenExpr 0x194b3719e88 <col:33, col:35> 'int'
|   | | |             |   |   |         `-IntegerLiteral 0x194b3719e60 <line:62:20> 'int' 32
|   | | |             |   |   `-ParenExpr 0x194b371a078 <line:60:17, col:37> 'double'
|   | | |             |   |     `-CStyleCastExpr 0x194b371a050 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |       `-ParenExpr 0x194b371a030 <col:26, col:36> 'unsigned long long'
|   | | |             |   |         `-BinaryOperator 0x194b3719fd8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |           |-IntegerLiteral 0x194b3719f68 <col:27> 'unsigned long long' 1
|   | | |             |   |           `-ParenExpr 0x194b3719fb8 <col:33, col:35> 'int'
|   | | |             |   |             `-IntegerLiteral 0x194b3719f90 <line:63:27> 'int' 32
|   | | |             |   `-ParenExpr 0x194b37262c0 <line:60:17, col:37> 'double'
|   | | |             |     `-CStyleCastExpr 0x194b3726298 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |       `-ParenExpr 0x194b3726278 <col:26, col:36> 'unsigned long long'
|   | | |             |         `-BinaryOperator 0x194b3726220 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |           |-IntegerLiteral 0x194b37261b0 <col:27> 'unsigned long long' 1
|   | | |             |           `-ParenExpr 0x194b3726200 <col:33, col:35> 'int'
|   | | |             |             `-IntegerLiteral 0x194b37261d8 <line:64:27> 'int' 32
|   | | |             `-ParenExpr 0x194b3726430 <line:60:17, col:37> 'double'
|   | | |               `-CStyleCastExpr 0x194b3726408 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |                 `-ParenExpr 0x194b37263e8 <col:26, col:36> 'unsigned long long'
|   | | |                   `-BinaryOperator 0x194b3726390 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                     |-IntegerLiteral 0x194b3726320 <col:27> 'unsigned long long' 1
|   | | |                     `-ParenExpr 0x194b3726370 <col:33, col:35> 'int'
|   | | |                       `-IntegerLiteral 0x194b3726348 <line:65:28> 'int' 34
|   | | |-BinaryOperator 0x194b3726878 <line:351:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x194b3726558 <col:9> 'double' lvalue Var 0x194b3715220 'h0lo' 'double'
|   | | | `-BinaryOperator 0x194b3726858 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x194b3726790 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x194b37266c8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x194b3726600 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x194b37265d0 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x194b3726578 <col:16> 'const double' lvalue Var 0x194b370ec30 's3lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x194b37265e8 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x194b37265b0 <col:23> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x194b37266a8 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x194b3726678 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x194b3726620 <col:28> 'const double' lvalue Var 0x194b370e940 's2lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x194b3726690 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x194b3726658 <col:35> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x194b3726770 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x194b3726740 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b37266e8 <col:40> 'const double' lvalue Var 0x194b370e650 's1lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x194b3726758 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3726720 <col:47> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | |   `-BinaryOperator 0x194b3726838 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x194b3726808 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x194b37267b0 <col:52> 'const double' lvalue Var 0x194b3715ae0 'r0lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x194b3726820 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x194b37267e8 <col:59> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | |-BinaryOperator 0x194b3726b70 <line:352:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x194b3726898 <col:9> 'double' lvalue Var 0x194b3715320 'h1lo' 'double'
|   | | | `-BinaryOperator 0x194b3726b50 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x194b3726a88 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x194b37269d8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x194b3726928 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x194b37268f8 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x194b37268b8 <col:16> 'const double' lvalue Var 0x194b3715ae0 'r0lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x194b3726910 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x194b37268d8 <col:23> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x194b37269b8 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x194b3726988 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x194b3726948 <col:28> 'const double' lvalue Var 0x194b370ec30 's3lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x194b37269a0 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x194b3726968 <col:35> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x194b3726a68 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x194b3726a38 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b37269f8 <col:40> 'const double' lvalue Var 0x194b370e940 's2lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x194b3726a50 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3726a18 <col:47> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | |   `-BinaryOperator 0x194b3726b30 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x194b3726b00 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x194b3726aa8 <col:52> 'const double' lvalue Var 0x194b3715de8 'r1lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x194b3726b18 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x194b3726ae0 <col:59> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | |-BinaryOperator 0x194b3726e68 <line:353:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x194b3726b90 <col:9> 'double' lvalue Var 0x194b3715420 'h2lo' 'double'
|   | | | `-BinaryOperator 0x194b3726e48 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x194b3726d80 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x194b3726cd0 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x194b3726c20 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x194b3726bf0 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x194b3726bb0 <col:16> 'const double' lvalue Var 0x194b3715de8 'r1lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x194b3726c08 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x194b3726bd0 <col:23> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x194b3726cb0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x194b3726c80 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x194b3726c40 <col:28> 'const double' lvalue Var 0x194b3715ae0 'r0lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x194b3726c98 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x194b3726c60 <col:35> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x194b3726d60 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x194b3726d30 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3726cf0 <col:40> 'const double' lvalue Var 0x194b370ec30 's3lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x194b3726d48 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3726d10 <col:47> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | |   `-BinaryOperator 0x194b3726e28 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x194b3726df8 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x194b3726da0 <col:52> 'const double' lvalue Var 0x194b370e070 'r2lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x194b3726e10 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x194b3726dd8 <col:59> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | |-BinaryOperator 0x194b3725160 <line:354:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x194b3726e88 <col:9> 'double' lvalue Var 0x194b3715520 'h3lo' 'double'
|   | | | `-BinaryOperator 0x194b3727140 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x194b3727078 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x194b3726fc8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x194b3726f18 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x194b3726ee8 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x194b3726ea8 <col:16> 'const double' lvalue Var 0x194b370e070 'r2lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x194b3726f00 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x194b3726ec8 <col:23> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x194b3726fa8 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x194b3726f78 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x194b3726f38 <col:28> 'const double' lvalue Var 0x194b3715de8 'r1lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x194b3726f90 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x194b3726f58 <col:35> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x194b3727058 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x194b3727028 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3726fe8 <col:40> 'const double' lvalue Var 0x194b3715ae0 'r0lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x194b3727040 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3727008 <col:47> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | |   `-BinaryOperator 0x194b3727120 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x194b37270f0 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x194b3727098 <col:52> 'const double' lvalue Var 0x194b370e360 'r3lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x194b3727108 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x194b37270d0 <col:59> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | |-BinaryOperator 0x194b37254a0 <line:356:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x194b3725180 <col:9> 'double' lvalue Var 0x194b37152a0 'h0hi' 'double'
|   | | | `-BinaryOperator 0x194b3725480 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x194b37253b8 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x194b37252f0 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x194b3725228 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x194b37251f8 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x194b37251a0 <col:16> 'const double' lvalue Var 0x194b370eda8 's3hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x194b3725210 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x194b37251d8 <col:23> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x194b37252d0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x194b37252a0 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x194b3725248 <col:28> 'const double' lvalue Var 0x194b370eab8 's2hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x194b37252b8 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x194b3725280 <col:35> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x194b3725398 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x194b3725368 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3725310 <col:40> 'const double' lvalue Var 0x194b370e7c8 's1hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x194b3725380 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3725348 <col:47> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | |   `-BinaryOperator 0x194b3725460 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x194b3725430 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x194b37253d8 <col:52> 'const double' lvalue Var 0x194b3715c70 'r0hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x194b3725448 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x194b3725410 <col:59> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | |-BinaryOperator 0x194b3725798 <line:357:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x194b37254c0 <col:9> 'double' lvalue Var 0x194b37153a0 'h1hi' 'double'
|   | | | `-BinaryOperator 0x194b3725778 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x194b37256b0 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x194b3725600 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x194b3725550 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x194b3725520 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x194b37254e0 <col:16> 'const double' lvalue Var 0x194b3715c70 'r0hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x194b3725538 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x194b3725500 <col:23> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x194b37255e0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x194b37255b0 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x194b3725570 <col:28> 'const double' lvalue Var 0x194b370eda8 's3hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x194b37255c8 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x194b3725590 <col:35> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x194b3725690 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x194b3725660 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3725620 <col:40> 'const double' lvalue Var 0x194b370eab8 's2hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x194b3725678 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3725640 <col:47> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | |   `-BinaryOperator 0x194b3725758 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x194b3725728 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x194b37256d0 <col:52> 'const double' lvalue Var 0x194b3715f60 'r1hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x194b3725740 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x194b3725708 <col:59> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | |-BinaryOperator 0x194b3725a90 <line:358:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x194b37257b8 <col:9> 'double' lvalue Var 0x194b37154a0 'h2hi' 'double'
|   | | | `-BinaryOperator 0x194b3725a70 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x194b37259a8 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x194b37258f8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x194b3725848 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x194b3725818 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x194b37257d8 <col:16> 'const double' lvalue Var 0x194b3715f60 'r1hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x194b3725830 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x194b37257f8 <col:23> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x194b37258d8 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x194b37258a8 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x194b3725868 <col:28> 'const double' lvalue Var 0x194b3715c70 'r0hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x194b37258c0 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x194b3725888 <col:35> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x194b3725988 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x194b3725958 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3725918 <col:40> 'const double' lvalue Var 0x194b370eda8 's3hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x194b3725970 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3725938 <col:47> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | |   `-BinaryOperator 0x194b3725a50 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x194b3725a20 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x194b37259c8 <col:52> 'const double' lvalue Var 0x194b370e1e8 'r2hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x194b3725a38 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x194b3725a00 <col:59> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | |-BinaryOperator 0x194b3725d88 <line:359:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x194b3725ab0 <col:9> 'double' lvalue Var 0x194b37155a0 'h3hi' 'double'
|   | | | `-BinaryOperator 0x194b3725d68 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x194b3725ca0 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x194b3725bf0 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x194b3725b40 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x194b3725b10 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x194b3725ad0 <col:16> 'const double' lvalue Var 0x194b370e1e8 'r2hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x194b3725b28 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x194b3725af0 <col:23> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x194b3725bd0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x194b3725ba0 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x194b3725b60 <col:28> 'const double' lvalue Var 0x194b3715f60 'r1hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x194b3725bb8 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x194b3725b80 <col:35> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | | |   | `-BinaryOperator 0x194b3725c80 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x194b3725c50 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x194b3725c10 <col:40> 'const double' lvalue Var 0x194b3715c70 'r0hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x194b3725c68 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x194b3725c30 <col:47> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | | |   `-BinaryOperator 0x194b3725d48 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x194b3725d18 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x194b3725cc0 <col:52> 'const double' lvalue Var 0x194b370e4d8 'r3hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x194b3725d30 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x194b3725cf8 <col:59> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | | |-CompoundAssignOperator 0x194b3725df0 <line:361:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | | | |-DeclRefExpr 0x194b3725da8 <col:9> 'const unsigned char *' lvalue ParmVar 0x194b370d718 'inp' 'const unsigned char *'
|   | | | `-IntegerLiteral 0x194b3725dc8 <col:16> 'int' 16
|   | | `-CompoundAssignOperator 0x194b3725e80 <line:362:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |   |-DeclRefExpr 0x194b3725e20 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x194b370d790 'len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x194b3725e68 <col:16> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x194b3725e40 <col:16> 'int' 16
|   | `-BinaryOperator 0x194b3726068 <line:364:14, col:21> 'int' '>='
|   |   |-ImplicitCastExpr 0x194b3726038 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x194b3725ff0 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x194b370d790 'len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x194b3726050 <col:21> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x194b3726010 <col:21> 'int' 16
|   |-BinaryOperator 0x194b3727688 <line:369:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x194b37260a8 <line:369:5> 'double' lvalue Var 0x194b3715680 'c0lo' 'double'
|   | `-BinaryOperator 0x194b3727668 <col:12, line:60:37> 'double' '-'
|   |   |-ParenExpr 0x194b37273c8 <line:369:12, col:33> 'double'
|   |   | `-BinaryOperator 0x194b37273a8 <col:13, line:60:37> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x194b3727390 <line:369:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b37260c8 <col:13> 'double' lvalue Var 0x194b3715220 'h0lo' 'double'
|   |   |   `-BinaryOperator 0x194b3727370 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x194b3727220 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b37271f8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b37271d8 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b3727180 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b37260e8 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b3726138 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b3726110 <line:369:24> 'int' 52
|   |   |     `-ParenExpr 0x194b3727350 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x194b3727328 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x194b3727308 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x194b37272b0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x194b3727240 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x194b3727290 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x194b3727268 <line:62:20> 'int' 32
|   |   `-BinaryOperator 0x194b3727648 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x194b37274f8 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b37274d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b37274b0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3727458 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b37273e8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3727438 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3727410 <line:369:42> 'int' 52
|   |     `-ParenExpr 0x194b3727628 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x194b3727600 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x194b37275e0 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x194b3727588 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x194b3727518 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x194b3727568 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x194b3727540 <line:62:20> 'int' 32
|   |-BinaryOperator 0x194b3727f40 <line:370:5, line:63:30> 'double' '='
|   | |-DeclRefExpr 0x194b37276a8 <line:370:5> 'double' lvalue Var 0x194b3715780 'c1lo' 'double'
|   | `-BinaryOperator 0x194b3727f20 <col:12, line:63:30> 'double' '-'
|   |   |-ParenExpr 0x194b3727b10 <line:370:12, col:33> 'double'
|   |   | `-BinaryOperator 0x194b3727af0 <col:13, line:63:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x194b3727ad8 <line:370:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b37276c8 <col:13> 'double' lvalue Var 0x194b3715320 'h1lo' 'double'
|   |   |   `-BinaryOperator 0x194b3727ab8 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-ParenExpr 0x194b37277f8 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b37277d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b37277b0 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b3727758 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b37276e8 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b3727738 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b3727710 <line:370:24> 'int' 52
|   |   |     `-ParenExpr 0x194b3727a98 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b3727a78 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b3727928 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x194b3727900 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x194b37278e0 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x194b3727888 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x194b3727818 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x194b3727868 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x194b3727840 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x194b3727a58 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b3727a30 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b3727a10 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b37279b8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b3727948 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b3727998 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b3727970 <line:63:27> 'int' 32
|   |   `-BinaryOperator 0x194b3727f00 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x194b3727c40 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3727c18 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b3727bf8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3727ba0 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3727b30 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3727b80 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3727b58 <line:370:42> 'int' 52
|   |     `-ParenExpr 0x194b3727ee0 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x194b3727ec0 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x194b3727d70 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x194b3727d48 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x194b3727d28 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x194b3727cd0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x194b3727c60 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x194b3727cb0 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x194b3727c88 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x194b3727ea0 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x194b3727e78 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x194b3727e58 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x194b3727e00 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x194b3727d90 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x194b3727de0 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x194b3727db8 <line:63:27> 'int' 32
|   |-BinaryOperator 0x194b3723a98 <line:371:5, line:64:30> 'double' '='
|   | |-DeclRefExpr 0x194b3727f60 <line:371:5> 'double' lvalue Var 0x194b3715880 'c2lo' 'double'
|   | `-BinaryOperator 0x194b3723a78 <col:12, line:64:30> 'double' '-'
|   |   |-ParenExpr 0x194b37234f8 <line:371:12, col:33> 'double'
|   |   | `-BinaryOperator 0x194b37234d8 <col:13, line:64:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x194b37234c0 <line:371:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3727f80 <col:13> 'double' lvalue Var 0x194b3715420 'h2lo' 'double'
|   |   |   `-BinaryOperator 0x194b37234a0 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-ParenExpr 0x194b37280b0 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b3728088 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b3728068 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b3728010 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b3727fa0 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b3727ff0 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b3727fc8 <line:371:24> 'int' 52
|   |   |     `-ParenExpr 0x194b3723480 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b3723460 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b3723310 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x194b37232f0 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x194b37231a0 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x194b3723178 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x194b3723158 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x194b3728140 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x194b37280d0 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x194b3728120 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x194b37280f8 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x194b37232d0 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x194b37232a8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x194b3723288 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x194b3723230 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x194b37231c0 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x194b3723210 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x194b37231e8 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x194b3723440 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b3723418 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b37233f8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b37233a0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b3723330 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b3723380 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b3723358 <line:64:27> 'int' 32
|   |   `-BinaryOperator 0x194b3723a58 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x194b3723628 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3723600 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b37235e0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3723588 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3723518 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3723568 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3723540 <line:371:42> 'int' 52
|   |     `-ParenExpr 0x194b3723a38 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x194b3723a18 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x194b37238c8 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x194b37238a8 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x194b3723758 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x194b3723730 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x194b3723710 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x194b37236b8 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x194b3723648 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x194b3723698 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x194b3723670 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x194b3723888 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x194b3723860 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x194b3723840 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x194b37237e8 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x194b3723778 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x194b37237c8 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x194b37237a0 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x194b37239f8 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x194b37239d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x194b37239b0 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x194b3723958 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x194b37238e8 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x194b3723938 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x194b3723910 <line:64:27> 'int' 32
|   |-BinaryOperator 0x194b3724940 <line:372:5, line:65:31> 'double' '='
|   | |-DeclRefExpr 0x194b3723ab8 <line:372:5> 'double' lvalue Var 0x194b3715980 'c3lo' 'double'
|   | `-BinaryOperator 0x194b3724920 <col:12, line:65:31> 'double' '-'
|   |   |-ParenExpr 0x194b3724230 <line:372:12, col:34> 'double'
|   |   | `-BinaryOperator 0x194b3724210 <col:13, line:65:31> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x194b37241f8 <line:372:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3723ad8 <col:13> 'double' lvalue Var 0x194b3715520 'h3lo' 'double'
|   |   |   `-BinaryOperator 0x194b37241d8 <line:60:17, line:65:31> 'double' '*'
|   |   |     |-ParenExpr 0x194b3723c08 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b3723be0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b3723bc0 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b3723b68 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b3723af8 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b3723b48 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b3723b20 <line:372:24> 'int' 52
|   |   |     `-ParenExpr 0x194b37241b8 <line:65:17, col:31> 'double'
|   |   |       `-BinaryOperator 0x194b3724198 <line:64:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b3724018 <line:64:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x194b3723ff8 <line:63:16, line:60:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x194b3723ea8 <line:63:16, col:30> 'double'
|   |   |         |   | `-BinaryOperator 0x194b3723e88 <line:60:17, col:37> 'double' '*'
|   |   |         |   |   |-ParenExpr 0x194b3723d38 <col:17, col:37> 'double'
|   |   |         |   |   | `-CStyleCastExpr 0x194b3723d10 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   |   `-ParenExpr 0x194b3723cf0 <col:26, col:36> 'unsigned long long'
|   |   |         |   |   |     `-BinaryOperator 0x194b3723c98 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |   |       |-IntegerLiteral 0x194b3723c28 <col:27> 'unsigned long long' 1
|   |   |         |   |   |       `-ParenExpr 0x194b3723c78 <col:33, col:35> 'int'
|   |   |         |   |   |         `-IntegerLiteral 0x194b3723c50 <line:62:20> 'int' 32
|   |   |         |   |   `-ParenExpr 0x194b3723e68 <line:60:17, col:37> 'double'
|   |   |         |   |     `-CStyleCastExpr 0x194b3723e40 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |       `-ParenExpr 0x194b3723e20 <col:26, col:36> 'unsigned long long'
|   |   |         |   |         `-BinaryOperator 0x194b3723dc8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |           |-IntegerLiteral 0x194b3723d58 <col:27> 'unsigned long long' 1
|   |   |         |   |           `-ParenExpr 0x194b3723da8 <col:33, col:35> 'int'
|   |   |         |   |             `-IntegerLiteral 0x194b3723d80 <line:63:27> 'int' 32
|   |   |         |   `-ParenExpr 0x194b3723fd8 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x194b3723fb0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x194b3723f90 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x194b3723f38 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x194b3723ec8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x194b3723f18 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x194b3723ef0 <line:64:27> 'int' 32
|   |   |         `-ParenExpr 0x194b3724178 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b3724150 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b3724100 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b37240a8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b3724038 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b3724088 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b3724060 <line:65:28> 'int' 34
|   |   `-BinaryOperator 0x194b3724900 <line:60:17, line:65:31> 'double' '*'
|   |     |-ParenExpr 0x194b3724360 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3724338 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b3724318 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b37242c0 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3724250 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b37242a0 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3724278 <line:372:42> 'int' 52
|   |     `-ParenExpr 0x194b37248e0 <line:65:17, col:31> 'double'
|   |       `-BinaryOperator 0x194b37248c0 <line:64:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x194b3724770 <line:64:16, col:30> 'double'
|   |         | `-BinaryOperator 0x194b3724750 <line:63:16, line:60:37> 'double' '*'
|   |         |   |-ParenExpr 0x194b3724600 <line:63:16, col:30> 'double'
|   |         |   | `-BinaryOperator 0x194b37245e0 <line:60:17, col:37> 'double' '*'
|   |         |   |   |-ParenExpr 0x194b3724490 <col:17, col:37> 'double'
|   |         |   |   | `-CStyleCastExpr 0x194b3724468 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   |   `-ParenExpr 0x194b3724448 <col:26, col:36> 'unsigned long long'
|   |         |   |   |     `-BinaryOperator 0x194b37243f0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |   |       |-IntegerLiteral 0x194b3724380 <col:27> 'unsigned long long' 1
|   |         |   |   |       `-ParenExpr 0x194b37243d0 <col:33, col:35> 'int'
|   |         |   |   |         `-IntegerLiteral 0x194b37243a8 <line:62:20> 'int' 32
|   |         |   |   `-ParenExpr 0x194b37245c0 <line:60:17, col:37> 'double'
|   |         |   |     `-CStyleCastExpr 0x194b3724598 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |       `-ParenExpr 0x194b3724578 <col:26, col:36> 'unsigned long long'
|   |         |   |         `-BinaryOperator 0x194b3724520 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |           |-IntegerLiteral 0x194b37244b0 <col:27> 'unsigned long long' 1
|   |         |   |           `-ParenExpr 0x194b3724500 <col:33, col:35> 'int'
|   |         |   |             `-IntegerLiteral 0x194b37244d8 <line:63:27> 'int' 32
|   |         |   `-ParenExpr 0x194b3724730 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x194b3724708 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x194b37246e8 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x194b3724690 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x194b3724620 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x194b3724670 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x194b3724648 <line:64:27> 'int' 32
|   |         `-ParenExpr 0x194b37248a0 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x194b3724878 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x194b3724858 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x194b3724800 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x194b3724790 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x194b37247e0 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x194b37247b8 <line:65:28> 'int' 34
|   |-BinaryOperator 0x194b3724f18 <line:374:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x194b3724960 <line:374:5> 'double' lvalue Var 0x194b3715700 'c0hi' 'double'
|   | `-BinaryOperator 0x194b3724ef8 <col:12, line:60:37> 'double' '-'
|   |   |-ParenExpr 0x194b3724c58 <line:374:12, col:33> 'double'
|   |   | `-BinaryOperator 0x194b3724c38 <col:13, line:60:37> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x194b3724c20 <line:374:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3724980 <col:13> 'double' lvalue Var 0x194b37152a0 'h0hi' 'double'
|   |   |   `-BinaryOperator 0x194b3724c00 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x194b3724ab0 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b3724a88 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b3724a68 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b3724a10 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b37249a0 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b37249f0 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b37249c8 <line:374:24> 'int' 52
|   |   |     `-ParenExpr 0x194b3724be0 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x194b3724bb8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x194b3724b98 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x194b3724b40 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x194b3724ad0 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x194b3724b20 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x194b3724af8 <line:62:20> 'int' 32
|   |   `-BinaryOperator 0x194b3724ed8 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x194b3724d88 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3724d60 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b3724d40 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3724ce8 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3724c78 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3724cc8 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3724ca0 <line:374:42> 'int' 52
|   |     `-ParenExpr 0x194b3724eb8 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x194b3724e90 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x194b3724e70 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x194b3724e18 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x194b3724da8 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x194b3724df8 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x194b3724dd0 <line:62:20> 'int' 32
|   |-BinaryOperator 0x194b3728828 <line:375:5, line:63:30> 'double' '='
|   | |-DeclRefExpr 0x194b3724f38 <line:375:5> 'double' lvalue Var 0x194b3715800 'c1hi' 'double'
|   | `-BinaryOperator 0x194b3728808 <col:12, line:63:30> 'double' '-'
|   |   |-ParenExpr 0x194b37283f8 <line:375:12, col:33> 'double'
|   |   | `-BinaryOperator 0x194b37283d8 <col:13, line:63:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x194b37283c0 <line:375:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3724f58 <col:13> 'double' lvalue Var 0x194b37153a0 'h1hi' 'double'
|   |   |   `-BinaryOperator 0x194b37283a0 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-ParenExpr 0x194b3725088 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b3725060 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b3725040 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b3724fe8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b3724f78 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b3724fc8 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b3724fa0 <line:375:24> 'int' 52
|   |   |     `-ParenExpr 0x194b3728380 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b3728360 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b3728210 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x194b37281e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x194b37281c8 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x194b3725118 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x194b37250a8 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x194b37250f8 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x194b37250d0 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x194b3728340 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b3728318 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b37282f8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b37282a0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b3728230 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b3728280 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b3728258 <line:63:27> 'int' 32
|   |   `-BinaryOperator 0x194b37287e8 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x194b3728528 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3728500 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b37284e0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3728488 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3728418 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3728468 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3728440 <line:375:42> 'int' 52
|   |     `-ParenExpr 0x194b37287c8 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x194b37287a8 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x194b3728658 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x194b3728630 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x194b3728610 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x194b37285b8 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x194b3728548 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x194b3728598 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x194b3728570 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x194b3728788 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x194b3728760 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x194b3728740 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x194b37286e8 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x194b3728678 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x194b37286c8 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x194b37286a0 <line:63:27> 'int' 32
|   |-BinaryOperator 0x194b3721358 <line:376:5, line:64:30> 'double' '='
|   | |-DeclRefExpr 0x194b3728848 <line:376:5> 'double' lvalue Var 0x194b3715900 'c2hi' 'double'
|   | `-BinaryOperator 0x194b3721338 <col:12, line:64:30> 'double' '-'
|   |   |-ParenExpr 0x194b3728e20 <line:376:12, col:33> 'double'
|   |   | `-BinaryOperator 0x194b3728e00 <col:13, line:64:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x194b3728de8 <line:376:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3728868 <col:13> 'double' lvalue Var 0x194b37154a0 'h2hi' 'double'
|   |   |   `-BinaryOperator 0x194b3728dc8 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-ParenExpr 0x194b3728998 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b3728970 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b3728950 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b37288f8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b3728888 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b37288d8 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b37288b0 <line:376:24> 'int' 52
|   |   |     `-ParenExpr 0x194b3728da8 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x194b3728d88 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b3728c38 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x194b3728c18 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x194b3728ac8 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x194b3728aa0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x194b3728a80 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x194b3728a28 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x194b37289b8 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x194b3728a08 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x194b37289e0 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x194b3728bf8 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x194b3728bd0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x194b3728bb0 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x194b3728b58 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x194b3728ae8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x194b3728b38 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x194b3728b10 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x194b3728d68 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b3728d40 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b3728d20 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b3728cc8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b3728c58 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b3728ca8 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b3728c80 <line:64:27> 'int' 32
|   |   `-BinaryOperator 0x194b3721318 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x194b3728f50 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3728f28 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b3728f08 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3728eb0 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3728e40 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3728e90 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3728e68 <line:376:42> 'int' 52
|   |     `-ParenExpr 0x194b37212f8 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x194b37212d8 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x194b3721188 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x194b3721168 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x194b3729080 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x194b3729058 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x194b3729038 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x194b3728fe0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x194b3728f70 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x194b3728fc0 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x194b3728f98 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x194b3721148 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x194b3721120 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x194b3729168 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x194b3729110 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x194b37290a0 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x194b37290f0 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x194b37290c8 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x194b37212b8 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x194b3721290 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x194b3721270 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x194b3721218 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x194b37211a8 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x194b37211f8 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x194b37211d0 <line:64:27> 'int' 32
|   |-BinaryOperator 0x194b3729268 <line:377:5, line:65:31> 'double' '='
|   | |-DeclRefExpr 0x194b3721378 <line:377:5> 'double' lvalue Var 0x194b3715a00 'c3hi' 'double'
|   | `-BinaryOperator 0x194b3729248 <col:12, line:65:31> 'double' '-'
|   |   |-ParenExpr 0x194b3721ac0 <line:377:12, col:34> 'double'
|   |   | `-BinaryOperator 0x194b3721aa0 <col:13, line:65:31> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x194b3721a88 <line:377:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3721398 <col:13> 'double' lvalue Var 0x194b37155a0 'h3hi' 'double'
|   |   |   `-BinaryOperator 0x194b3721a68 <line:60:17, line:65:31> 'double' '*'
|   |   |     |-ParenExpr 0x194b37214c8 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x194b37214a0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x194b3721480 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x194b3721428 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x194b37213b8 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x194b3721408 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x194b37213e0 <line:377:24> 'int' 52
|   |   |     `-ParenExpr 0x194b3721a48 <line:65:17, col:31> 'double'
|   |   |       `-BinaryOperator 0x194b3721a28 <line:64:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x194b37218d8 <line:64:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x194b37218b8 <line:63:16, line:60:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x194b3721768 <line:63:16, col:30> 'double'
|   |   |         |   | `-BinaryOperator 0x194b3721748 <line:60:17, col:37> 'double' '*'
|   |   |         |   |   |-ParenExpr 0x194b37215f8 <col:17, col:37> 'double'
|   |   |         |   |   | `-CStyleCastExpr 0x194b37215d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   |   `-ParenExpr 0x194b37215b0 <col:26, col:36> 'unsigned long long'
|   |   |         |   |   |     `-BinaryOperator 0x194b3721558 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |   |       |-IntegerLiteral 0x194b37214e8 <col:27> 'unsigned long long' 1
|   |   |         |   |   |       `-ParenExpr 0x194b3721538 <col:33, col:35> 'int'
|   |   |         |   |   |         `-IntegerLiteral 0x194b3721510 <line:62:20> 'int' 32
|   |   |         |   |   `-ParenExpr 0x194b3721728 <line:60:17, col:37> 'double'
|   |   |         |   |     `-CStyleCastExpr 0x194b3721700 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |       `-ParenExpr 0x194b37216e0 <col:26, col:36> 'unsigned long long'
|   |   |         |   |         `-BinaryOperator 0x194b3721688 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |           |-IntegerLiteral 0x194b3721618 <col:27> 'unsigned long long' 1
|   |   |         |   |           `-ParenExpr 0x194b3721668 <col:33, col:35> 'int'
|   |   |         |   |             `-IntegerLiteral 0x194b3721640 <line:63:27> 'int' 32
|   |   |         |   `-ParenExpr 0x194b3721898 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x194b3721870 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x194b3721850 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x194b37217f8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x194b3721788 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x194b37217d8 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x194b37217b0 <line:64:27> 'int' 32
|   |   |         `-ParenExpr 0x194b3721a08 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x194b37219e0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x194b37219c0 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x194b3721968 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x194b37218f8 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x194b3721948 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x194b3721920 <line:65:28> 'int' 34
|   |   `-BinaryOperator 0x194b3729228 <line:60:17, line:65:31> 'double' '*'
|   |     |-ParenExpr 0x194b3721bf0 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3721bc8 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b3721ba8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3721b50 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3721ae0 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3721b30 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3721b08 <line:377:42> 'int' 52
|   |     `-ParenExpr 0x194b3729208 <line:65:17, col:31> 'double'
|   |       `-BinaryOperator 0x194b37291e8 <line:64:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x194b3722000 <line:64:16, col:30> 'double'
|   |         | `-BinaryOperator 0x194b3721fe0 <line:63:16, line:60:37> 'double' '*'
|   |         |   |-ParenExpr 0x194b3721e90 <line:63:16, col:30> 'double'
|   |         |   | `-BinaryOperator 0x194b3721e70 <line:60:17, col:37> 'double' '*'
|   |         |   |   |-ParenExpr 0x194b3721d20 <col:17, col:37> 'double'
|   |         |   |   | `-CStyleCastExpr 0x194b3721cf8 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   |   `-ParenExpr 0x194b3721cd8 <col:26, col:36> 'unsigned long long'
|   |         |   |   |     `-BinaryOperator 0x194b3721c80 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |   |       |-IntegerLiteral 0x194b3721c10 <col:27> 'unsigned long long' 1
|   |         |   |   |       `-ParenExpr 0x194b3721c60 <col:33, col:35> 'int'
|   |         |   |   |         `-IntegerLiteral 0x194b3721c38 <line:62:20> 'int' 32
|   |         |   |   `-ParenExpr 0x194b3721e50 <line:60:17, col:37> 'double'
|   |         |   |     `-CStyleCastExpr 0x194b3721e28 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |       `-ParenExpr 0x194b3721e08 <col:26, col:36> 'unsigned long long'
|   |         |   |         `-BinaryOperator 0x194b3721db0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |           |-IntegerLiteral 0x194b3721d40 <col:27> 'unsigned long long' 1
|   |         |   |           `-ParenExpr 0x194b3721d90 <col:33, col:35> 'int'
|   |         |   |             `-IntegerLiteral 0x194b3721d68 <line:63:27> 'int' 32
|   |         |   `-ParenExpr 0x194b3721fc0 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x194b3721f98 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x194b3721f78 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x194b3721f20 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x194b3721eb0 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x194b3721f00 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x194b3721ed8 <line:64:27> 'int' 32
|   |         `-ParenExpr 0x194b37291c8 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x194b37291a0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x194b37220e8 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x194b3722090 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x194b3722020 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x194b3722070 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x194b3722048 <line:65:28> 'int' 34
|   |-BinaryOperator 0x194b37293b0 <line:382:5, col:27> 'double' '='
|   | |-DeclRefExpr 0x194b3729288 <col:5> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | `-BinaryOperator 0x194b3729390 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x194b3729338 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x194b3729318 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b37292e8 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b37292a8 <col:12> 'double' lvalue Var 0x194b3715320 'h1lo' 'double'
|   |   |   `-ImplicitCastExpr 0x194b3729300 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x194b37292c8 <col:19> 'double' lvalue Var 0x194b3715780 'c1lo' 'double'
|   |   `-ImplicitCastExpr 0x194b3729378 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x194b3729358 <col:27> 'double' lvalue Var 0x194b3715680 'c0lo' 'double'
|   |-BinaryOperator 0x194b37294f8 <line:383:5, col:27> 'double' '='
|   | |-DeclRefExpr 0x194b37293d0 <col:5> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | `-BinaryOperator 0x194b37294d8 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x194b3729480 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x194b3729460 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b3729430 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b37293f0 <col:12> 'double' lvalue Var 0x194b3715420 'h2lo' 'double'
|   |   |   `-ImplicitCastExpr 0x194b3729448 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x194b3729410 <col:19> 'double' lvalue Var 0x194b3715880 'c2lo' 'double'
|   |   `-ImplicitCastExpr 0x194b37294c0 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x194b37294a0 <col:27> 'double' lvalue Var 0x194b3715780 'c1lo' 'double'
|   |-BinaryOperator 0x194b3729640 <line:384:5, col:27> 'double' '='
|   | |-DeclRefExpr 0x194b3729518 <col:5> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | `-BinaryOperator 0x194b3729620 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x194b37295c8 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x194b37295a8 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b3729578 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3729538 <col:12> 'double' lvalue Var 0x194b3715520 'h3lo' 'double'
|   |   |   `-ImplicitCastExpr 0x194b3729590 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x194b3729558 <col:19> 'double' lvalue Var 0x194b3715980 'c3lo' 'double'
|   |   `-ImplicitCastExpr 0x194b3729608 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x194b37295e8 <col:27> 'double' lvalue Var 0x194b3715880 'c2lo' 'double'
|   |-BinaryOperator 0x194b3729d90 <line:385:5, col:45> 'double' '='
|   | |-DeclRefExpr 0x194b3729660 <col:5> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | `-BinaryOperator 0x194b3729d70 <col:11, col:45> 'double' '+'
|   |   |-ParenExpr 0x194b3729710 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x194b37296f0 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b37296c0 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3729680 <col:12> 'double' lvalue Var 0x194b3715220 'h0lo' 'double'
|   |   |   `-ImplicitCastExpr 0x194b37296d8 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x194b37296a0 <col:19> 'double' lvalue Var 0x194b3715680 'c0lo' 'double'
|   |   `-BinaryOperator 0x194b3729d50 <col:27, col:45> 'double' '*'
|   |     |-ImplicitCastExpr 0x194b3729d38 <col:27> 'double' <LValueToRValue>
|   |     | `-DeclRefExpr 0x194b3729730 <col:27> 'double' lvalue Var 0x194b3715980 'c3lo' 'double'
|   |     `-ParenExpr 0x194b3729d18 <col:34, col:45> 'double'
|   |       `-BinaryOperator 0x194b3729cf8 <col:35, line:65:31> 'double' '/'
|   |         |-FloatingLiteral 0x194b3729750 <line:385:35> 'double' 5.000000e+00
|   |         `-ParenExpr 0x194b3729cd8 <line:65:17, col:31> 'double'
|   |           `-BinaryOperator 0x194b3729cb8 <line:64:16, line:60:37> 'double' '*'
|   |             |-ParenExpr 0x194b3729b68 <line:64:16, col:30> 'double'
|   |             | `-BinaryOperator 0x194b3729b48 <line:63:16, line:60:37> 'double' '*'
|   |             |   |-ParenExpr 0x194b37299f8 <line:63:16, col:30> 'double'
|   |             |   | `-BinaryOperator 0x194b37299d8 <line:60:17, col:37> 'double' '*'
|   |             |   |   |-ParenExpr 0x194b3729888 <col:17, col:37> 'double'
|   |             |   |   | `-CStyleCastExpr 0x194b3729860 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |   |   `-ParenExpr 0x194b3729840 <col:26, col:36> 'unsigned long long'
|   |             |   |   |     `-BinaryOperator 0x194b37297e8 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |   |       |-IntegerLiteral 0x194b3729778 <col:27> 'unsigned long long' 1
|   |             |   |   |       `-ParenExpr 0x194b37297c8 <col:33, col:35> 'int'
|   |             |   |   |         `-IntegerLiteral 0x194b37297a0 <line:62:20> 'int' 32
|   |             |   |   `-ParenExpr 0x194b37299b8 <line:60:17, col:37> 'double'
|   |             |   |     `-CStyleCastExpr 0x194b3729990 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |       `-ParenExpr 0x194b3729970 <col:26, col:36> 'unsigned long long'
|   |             |   |         `-BinaryOperator 0x194b3729918 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |           |-IntegerLiteral 0x194b37298a8 <col:27> 'unsigned long long' 1
|   |             |   |           `-ParenExpr 0x194b37298f8 <col:33, col:35> 'int'
|   |             |   |             `-IntegerLiteral 0x194b37298d0 <line:63:27> 'int' 32
|   |             |   `-ParenExpr 0x194b3729b28 <line:60:17, col:37> 'double'
|   |             |     `-CStyleCastExpr 0x194b3729b00 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |       `-ParenExpr 0x194b3729ae0 <col:26, col:36> 'unsigned long long'
|   |             |         `-BinaryOperator 0x194b3729a88 <col:27, col:35> 'unsigned long long' '<<'
|   |             |           |-IntegerLiteral 0x194b3729a18 <col:27> 'unsigned long long' 1
|   |             |           `-ParenExpr 0x194b3729a68 <col:33, col:35> 'int'
|   |             |             `-IntegerLiteral 0x194b3729a40 <line:64:27> 'int' 32
|   |             `-ParenExpr 0x194b3729c98 <line:60:17, col:37> 'double'
|   |               `-CStyleCastExpr 0x194b3729c70 <col:18, col:36> 'double' <IntegralToFloating>
|   |                 `-ParenExpr 0x194b3729c50 <col:26, col:36> 'unsigned long long'
|   |                   `-BinaryOperator 0x194b3729bf8 <col:27, col:35> 'unsigned long long' '<<'
|   |                     |-IntegerLiteral 0x194b3729b88 <col:27> 'unsigned long long' 1
|   |                     `-ParenExpr 0x194b3729bd8 <col:33, col:35> 'int'
|   |                       `-IntegerLiteral 0x194b3729bb0 <line:65:28> 'int' 34
|   |-CompoundAssignOperator 0x194b3729ed8 <line:387:5, col:27> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x194b3729db0 <col:5> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   | `-BinaryOperator 0x194b3729eb8 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x194b3729e60 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x194b3729e40 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b3729e10 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3729dd0 <col:12> 'double' lvalue Var 0x194b37153a0 'h1hi' 'double'
|   |   |   `-ImplicitCastExpr 0x194b3729e28 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x194b3729df0 <col:19> 'double' lvalue Var 0x194b3715800 'c1hi' 'double'
|   |   `-ImplicitCastExpr 0x194b3729ea0 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x194b3729e80 <col:27> 'double' lvalue Var 0x194b3715700 'c0hi' 'double'
|   |-CompoundAssignOperator 0x194b372a030 <line:388:5, col:27> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x194b3729f08 <col:5> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   | `-BinaryOperator 0x194b372a010 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x194b3729fb8 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x194b3729f98 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b3729f68 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3729f28 <col:12> 'double' lvalue Var 0x194b37154a0 'h2hi' 'double'
|   |   |   `-ImplicitCastExpr 0x194b3729f80 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x194b3729f48 <col:19> 'double' lvalue Var 0x194b3715900 'c2hi' 'double'
|   |   `-ImplicitCastExpr 0x194b3729ff8 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x194b3729fd8 <col:27> 'double' lvalue Var 0x194b3715800 'c1hi' 'double'
|   |-CompoundAssignOperator 0x194b3722130 <line:389:5, col:27> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x194b372a060 <col:5> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   | `-BinaryOperator 0x194b372a168 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x194b372a110 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x194b372a0f0 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b372a0c0 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b372a080 <col:12> 'double' lvalue Var 0x194b37155a0 'h3hi' 'double'
|   |   |   `-ImplicitCastExpr 0x194b372a0d8 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x194b372a0a0 <col:19> 'double' lvalue Var 0x194b3715a00 'c3hi' 'double'
|   |   `-ImplicitCastExpr 0x194b372a150 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x194b372a130 <col:27> 'double' lvalue Var 0x194b3715900 'c2hi' 'double'
|   |-CompoundAssignOperator 0x194b3722890 <line:390:5, col:45> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x194b3722160 <col:5> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   | `-BinaryOperator 0x194b3722870 <col:11, col:45> 'double' '+'
|   |   |-ParenExpr 0x194b3722210 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x194b37221f0 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x194b37221c0 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x194b3722180 <col:12> 'double' lvalue Var 0x194b37152a0 'h0hi' 'double'
|   |   |   `-ImplicitCastExpr 0x194b37221d8 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x194b37221a0 <col:19> 'double' lvalue Var 0x194b3715700 'c0hi' 'double'
|   |   `-BinaryOperator 0x194b3722850 <col:27, col:45> 'double' '*'
|   |     |-ImplicitCastExpr 0x194b3722838 <col:27> 'double' <LValueToRValue>
|   |     | `-DeclRefExpr 0x194b3722230 <col:27> 'double' lvalue Var 0x194b3715a00 'c3hi' 'double'
|   |     `-ParenExpr 0x194b3722818 <col:34, col:45> 'double'
|   |       `-BinaryOperator 0x194b37227f8 <col:35, line:65:31> 'double' '/'
|   |         |-FloatingLiteral 0x194b3722250 <line:390:35> 'double' 5.000000e+00
|   |         `-ParenExpr 0x194b37227d8 <line:65:17, col:31> 'double'
|   |           `-BinaryOperator 0x194b37227b8 <line:64:16, line:60:37> 'double' '*'
|   |             |-ParenExpr 0x194b3722668 <line:64:16, col:30> 'double'
|   |             | `-BinaryOperator 0x194b3722648 <line:63:16, line:60:37> 'double' '*'
|   |             |   |-ParenExpr 0x194b37224f8 <line:63:16, col:30> 'double'
|   |             |   | `-BinaryOperator 0x194b37224d8 <line:60:17, col:37> 'double' '*'
|   |             |   |   |-ParenExpr 0x194b3722388 <col:17, col:37> 'double'
|   |             |   |   | `-CStyleCastExpr 0x194b3722360 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |   |   `-ParenExpr 0x194b3722340 <col:26, col:36> 'unsigned long long'
|   |             |   |   |     `-BinaryOperator 0x194b37222e8 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |   |       |-IntegerLiteral 0x194b3722278 <col:27> 'unsigned long long' 1
|   |             |   |   |       `-ParenExpr 0x194b37222c8 <col:33, col:35> 'int'
|   |             |   |   |         `-IntegerLiteral 0x194b37222a0 <line:62:20> 'int' 32
|   |             |   |   `-ParenExpr 0x194b37224b8 <line:60:17, col:37> 'double'
|   |             |   |     `-CStyleCastExpr 0x194b3722490 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |       `-ParenExpr 0x194b3722470 <col:26, col:36> 'unsigned long long'
|   |             |   |         `-BinaryOperator 0x194b3722418 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |           |-IntegerLiteral 0x194b37223a8 <col:27> 'unsigned long long' 1
|   |             |   |           `-ParenExpr 0x194b37223f8 <col:33, col:35> 'int'
|   |             |   |             `-IntegerLiteral 0x194b37223d0 <line:63:27> 'int' 32
|   |             |   `-ParenExpr 0x194b3722628 <line:60:17, col:37> 'double'
|   |             |     `-CStyleCastExpr 0x194b3722600 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |       `-ParenExpr 0x194b37225e0 <col:26, col:36> 'unsigned long long'
|   |             |         `-BinaryOperator 0x194b3722588 <col:27, col:35> 'unsigned long long' '<<'
|   |             |           |-IntegerLiteral 0x194b3722518 <col:27> 'unsigned long long' 1
|   |             |           `-ParenExpr 0x194b3722568 <col:33, col:35> 'int'
|   |             |             `-IntegerLiteral 0x194b3722540 <line:64:27> 'int' 32
|   |             `-ParenExpr 0x194b3722798 <line:60:17, col:37> 'double'
|   |               `-CStyleCastExpr 0x194b3722770 <col:18, col:36> 'double' <IntegralToFloating>
|   |                 `-ParenExpr 0x194b3722750 <col:26, col:36> 'unsigned long long'
|   |                   `-BinaryOperator 0x194b37226f8 <col:27, col:35> 'unsigned long long' '<<'
|   |                     |-IntegerLiteral 0x194b3722688 <col:27> 'unsigned long long' 1
|   |                     `-ParenExpr 0x194b37226d8 <col:33, col:35> 'int'
|   |                       `-IntegerLiteral 0x194b37226b0 <line:65:28> 'int' 34
|   |-BinaryOperator 0x194b3722c90 <line:395:5, line:60:37> 'double' '='
|   | |-MemberExpr 0x194b3722988 <line:395:5, col:14> 'double' lvalue .d 0x194b36a34b8
|   | | `-ArraySubscriptExpr 0x194b3722968 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x194b3722950 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x194b37228f8 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   | |   |   `-ImplicitCastExpr 0x194b37228e0 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x194b37228c0 <col:5> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x194b3722928 <col:11> 'int' 1
|   | `-BinaryOperator 0x194b3722c70 <col:18, line:60:37> 'double' '+'
|   |   |-ImplicitCastExpr 0x194b3722c58 <line:395:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x194b37229b8 <col:18> 'double' lvalue Var 0x194b3715060 'x1' 'double'
|   |   `-BinaryOperator 0x194b3722c38 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x194b3722ae8 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3722ac0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b3722aa0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3722a48 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b37229d8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3722a28 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3722a00 <line:395:27> 'int' 52
|   |     `-ParenExpr 0x194b3722c18 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x194b3722bf0 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x194b3722bd0 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x194b3722b78 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x194b3722b08 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x194b3722b58 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x194b3722b30 <line:62:20> 'int' 32
|   |-BinaryOperator 0x194b372d2c0 <line:396:5, line:63:30> 'double' '='
|   | |-MemberExpr 0x194b3722d78 <line:396:5, col:14> 'double' lvalue .d 0x194b36a34b8
|   | | `-ArraySubscriptExpr 0x194b3722d58 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x194b3722d40 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x194b3722ce8 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   | |   |   `-ImplicitCastExpr 0x194b3722cd0 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x194b3722cb0 <col:5> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x194b3722d18 <col:11> 'int' 2
|   | `-BinaryOperator 0x194b372d2a0 <col:18, line:63:30> 'double' '+'
|   |   |-ImplicitCastExpr 0x194b372d288 <line:396:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x194b3722da8 <col:18> 'double' lvalue Var 0x194b37150e0 'x2' 'double'
|   |   `-BinaryOperator 0x194b372d268 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x194b3722ed8 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b3722eb0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b3722e90 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b3722e38 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b3722dc8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b3722e18 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b3722df0 <line:396:27> 'int' 52
|   |     `-ParenExpr 0x194b372d248 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x194b372d228 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x194b3723008 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x194b3722fe0 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x194b3722fc0 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x194b3722f68 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x194b3722ef8 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x194b3722f48 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x194b3722f20 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x194b372d208 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x194b372d1e0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x194b37230f0 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x194b3723098 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x194b3723028 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x194b3723078 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x194b3723050 <line:63:27> 'int' 32
|   |-BinaryOperator 0x194b372d990 <line:397:5, line:64:30> 'double' '='
|   | |-MemberExpr 0x194b372d3a8 <line:397:5, col:14> 'double' lvalue .d 0x194b36a34b8
|   | | `-ArraySubscriptExpr 0x194b372d388 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x194b372d370 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x194b372d318 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   | |   |   `-ImplicitCastExpr 0x194b372d300 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x194b372d2e0 <col:5> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x194b372d348 <col:11> 'int' 3
|   | `-BinaryOperator 0x194b372d970 <col:18, line:64:30> 'double' '+'
|   |   |-ImplicitCastExpr 0x194b372d958 <line:397:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x194b372d3d8 <col:18> 'double' lvalue Var 0x194b3715160 'x3' 'double'
|   |   `-BinaryOperator 0x194b372d938 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x194b372d508 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b372d4e0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b372d4c0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b372d468 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b372d3f8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b372d448 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b372d420 <line:397:27> 'int' 52
|   |     `-ParenExpr 0x194b372d918 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x194b372d8f8 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x194b372d7a8 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x194b372d788 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x194b372d638 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x194b372d610 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x194b372d5f0 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x194b372d598 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x194b372d528 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x194b372d578 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x194b372d550 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x194b372d768 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x194b372d740 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x194b372d720 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x194b372d6c8 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x194b372d658 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x194b372d6a8 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x194b372d680 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x194b372d8d8 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x194b372d8b0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x194b372d890 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x194b372d838 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x194b372d7c8 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x194b372d818 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x194b372d7f0 <line:64:27> 'int' 32
|   |-BinaryOperator 0x194b372dd80 <line:398:5, line:60:37> 'double' '='
|   | |-MemberExpr 0x194b372da78 <line:398:5, col:14> 'double' lvalue .d 0x194b36a34b8
|   | | `-ArraySubscriptExpr 0x194b372da58 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x194b372da40 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x194b372d9e8 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x194b36a3878
|   | |   |   `-ImplicitCastExpr 0x194b372d9d0 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x194b372d9b0 <col:5> 'poly1305_internal *' lvalue Var 0x194b370daa0 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x194b372da18 <col:11> 'int' 0
|   | `-BinaryOperator 0x194b372dd60 <col:18, line:60:37> 'double' '+'
|   |   |-ImplicitCastExpr 0x194b372dd48 <line:398:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x194b372daa8 <col:18> 'double' lvalue Var 0x194b370df10 'x0' 'double'
|   |   `-BinaryOperator 0x194b372dd28 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x194b372dbd8 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x194b372dbb0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x194b372db90 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x194b372db38 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x194b372dac8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x194b372db18 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x194b372daf0 <line:398:27> 'int' 52
|   |     `-ParenExpr 0x194b372dd08 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x194b372dce0 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x194b372dcc0 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x194b372dc68 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x194b372dbf8 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x194b372dc48 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x194b372dc20 <line:61:19> 'int' 0
|   `-GCCAsmStmt 0x194b372de08 <line:404:5, col:48>
|     `-DeclRefExpr 0x194b372dde8 <col:37> 'u32':'unsigned int' lvalue Var 0x194b370ef18 'mxcsr_orig' 'u32':'unsigned int'
`-FunctionDecl 0x194b3731508 <line:414:1, line:472:1> line:414:6 poly1305_emit 'void (void *, unsigned char *, const u32 *)'
  |-ParmVarDecl 0x194b372e048 <col:20, col:26> col:26 used ctx 'void *'
  |-ParmVarDecl 0x194b3731220 <col:31, col:51> col:45 used mac 'unsigned char *':'unsigned char *'
  |-ParmVarDecl 0x194b37313a0 <col:54, col:71> col:64 used nonce 'const u32 *':'const u32 *'
  `-CompoundStmt 0x194b372b1c0 <line:415:1, line:472:1>
    |-DeclStmt 0x194b37316c0 <line:416:5, col:54>
    | `-VarDecl 0x194b37315e8 <col:5, col:51> col:24 used st 'poly1305_internal *' cinit
    |   `-CStyleCastExpr 0x194b3731698 <col:29, col:51> 'poly1305_internal *' <BitCast>
    |     `-ImplicitCastExpr 0x194b3731680 <col:51> 'void *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x194b3731650 <col:51> 'void *' lvalue ParmVar 0x194b372e048 'ctx' 'void *'
    |-DeclStmt 0x194b3731960 <line:417:5, col:27>
    | |-VarDecl 0x194b37316e8 <col:5, col:9> col:9 used h0 'u64':'unsigned long long'
    | |-VarDecl 0x194b3731760 <col:5, col:13> col:13 used h1 'u64':'unsigned long long'
    | |-VarDecl 0x194b37317d8 <col:5, col:17> col:17 used h2 'u64':'unsigned long long'
    | |-VarDecl 0x194b3731850 <col:5, col:21> col:21 used h3 'u64':'unsigned long long'
    | `-VarDecl 0x194b37318c8 <col:5, col:25> col:25 used h4 'u64':'unsigned long long'
    |-DeclStmt 0x194b3731c00 <line:418:5, col:27>
    | |-VarDecl 0x194b3731988 <col:5, col:9> col:9 used g0 'u32':'unsigned int'
    | |-VarDecl 0x194b3731a00 <col:5, col:13> col:13 used g1 'u32':'unsigned int'
    | |-VarDecl 0x194b3731a78 <col:5, col:17> col:17 used g2 'u32':'unsigned int'
    | |-VarDecl 0x194b3731af0 <col:5, col:21> col:21 used g3 'u32':'unsigned int'
    | `-VarDecl 0x194b3731b68 <col:5, col:25> col:25 used g4 'u32':'unsigned int'
    |-DeclStmt 0x194b3731c90 <line:419:5, col:10>
    | `-VarDecl 0x194b3731c28 <col:5, col:9> col:9 used t 'u64':'unsigned long long'
    |-DeclStmt 0x194b3731d20 <line:420:5, col:13>
    | `-VarDecl 0x194b3731cb8 <col:5, col:9> col:9 used mask 'u32':'unsigned int'
    |-BinaryOperator 0x194b3731ee0 <line:425:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x194b3731d38 <col:5> 'u64':'unsigned long long' lvalue Var 0x194b37316e8 'h0' 'u64':'unsigned long long'
    | `-BinaryOperator 0x194b3731ec0 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x194b3731ea8 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x194b3731e50 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
    |   |   `-ArraySubscriptExpr 0x194b3731e30 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x194b3731e18 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x194b3731dc0 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x194b36a3878
    |   |     |   `-ImplicitCastExpr 0x194b3731da8 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x194b3731d70 <col:10> 'poly1305_internal *' lvalue Var 0x194b37315e8 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x194b3731df0 <col:16> 'int' 0
    |   `-IntegerLiteral 0x194b3731e80 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x194b3732090 <line:426:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x194b3731f00 <col:5> 'u64':'unsigned long long' lvalue Var 0x194b3731760 'h1' 'u64':'unsigned long long'
    | `-BinaryOperator 0x194b3732070 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x194b3732058 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x194b3732000 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
    |   |   `-ArraySubscriptExpr 0x194b3731fe0 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x194b3731fc8 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x194b3731f70 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x194b36a3878
    |   |     |   `-ImplicitCastExpr 0x194b3731f58 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x194b3731f38 <col:10> 'poly1305_internal *' lvalue Var 0x194b37315e8 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x194b3731fa0 <col:16> 'int' 1
    |   `-IntegerLiteral 0x194b3732030 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x194b372e210 <line:427:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x194b37320b0 <col:5> 'u64':'unsigned long long' lvalue Var 0x194b37317d8 'h2' 'u64':'unsigned long long'
    | `-BinaryOperator 0x194b372e1f0 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x194b3732208 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x194b37321b0 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
    |   |   `-ArraySubscriptExpr 0x194b3732190 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x194b3732178 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x194b3732120 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x194b36a3878
    |   |     |   `-ImplicitCastExpr 0x194b3732108 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x194b37320e8 <col:10> 'poly1305_internal *' lvalue Var 0x194b37315e8 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x194b3732150 <col:16> 'int' 2
    |   `-IntegerLiteral 0x194b37321e0 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x194b372e3c0 <line:428:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x194b372e230 <col:5> 'u64':'unsigned long long' lvalue Var 0x194b3731850 'h3' 'u64':'unsigned long long'
    | `-BinaryOperator 0x194b372e3a0 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x194b372e388 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x194b372e330 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x194b36a3540
    |   |   `-ArraySubscriptExpr 0x194b372e310 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x194b372e2f8 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x194b372e2a0 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x194b36a3878
    |   |     |   `-ImplicitCastExpr 0x194b372e288 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x194b372e268 <col:10> 'poly1305_internal *' lvalue Var 0x194b37315e8 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x194b372e2d0 <col:16> 'int' 3
    |   `-IntegerLiteral 0x194b372e360 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x194b372e498 <line:433:5, col:14> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x194b372e3e0 <col:5> 'u64':'unsigned long long' lvalue Var 0x194b37318c8 'h4' 'u64':'unsigned long long'
    | `-BinaryOperator 0x194b372e478 <col:10, col:14> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x194b372e460 <col:10> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x194b372e418 <col:10> 'u64':'unsigned long long' lvalue Var 0x194b3731850 'h3' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x194b372e438 <col:14> 'int' 32
    |-CompoundAssignOperator 0x194b372e518 <col:18, col:24> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372e4b8 <col:18> 'u64':'unsigned long long' lvalue Var 0x194b3731850 'h3' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x194b372e500 <col:24> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x194b372e4d8 <col:24> 'unsigned int' 4294967295
    |-BinaryOperator 0x194b372e648 <line:434:5, col:14> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372e548 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731b68 'g4' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x194b372e630 <col:10, col:14> 'u32':'unsigned int' <IntegralCast>
    |   `-BinaryOperator 0x194b372e610 <col:10, col:14> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x194b372e5e0 <col:10> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x194b372e580 <col:10> 'u64':'unsigned long long' lvalue Var 0x194b37318c8 'h4' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x194b372e5f8 <col:13, col:14> 'unsigned long long' <IntegralCast>
    |       `-UnaryOperator 0x194b372e5c8 <col:13, col:14> 'int' prefix '-'
    |         `-IntegerLiteral 0x194b372e5a0 <col:14> 'int' 4
    |-CompoundAssignOperator 0x194b372e6c8 <line:435:5, col:11> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372e668 <col:5> 'u64':'unsigned long long' lvalue Var 0x194b37318c8 'h4' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x194b372e6b0 <col:11> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x194b372e688 <col:11> 'int' 3
    |-CompoundAssignOperator 0x194b372e798 <line:436:5, col:15> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x194b372e6f8 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731b68 'g4' 'u32':'unsigned int'
    | `-BinaryOperator 0x194b372e778 <col:11, col:15> 'u32':'unsigned int' '>>'
    |   |-ImplicitCastExpr 0x194b372e760 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x194b372e718 <col:11> 'u32':'unsigned int' lvalue Var 0x194b3731b68 'g4' 'u32':'unsigned int'
    |   `-IntegerLiteral 0x194b372e738 <col:15> 'int' 2
    |-CompoundAssignOperator 0x194b372e838 <line:438:5, col:11> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372e7c8 <col:5> 'u64':'unsigned long long' lvalue Var 0x194b37316e8 'h0' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x194b372e820 <col:11> 'unsigned long long' <IntegralCast>
    |   `-ImplicitCastExpr 0x194b372e808 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x194b372e7e8 <col:11> 'u32':'unsigned int' lvalue Var 0x194b3731b68 'g4' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x194b372e908 <line:439:5, col:15> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372e868 <col:5> 'u64':'unsigned long long' lvalue Var 0x194b3731760 'h1' 'u64':'unsigned long long'
    | `-BinaryOperator 0x194b372e8e8 <col:11, col:15> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x194b372e8d0 <col:11> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x194b372e888 <col:11> 'u64':'unsigned long long' lvalue Var 0x194b37316e8 'h0' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x194b372e8a8 <col:15> 'int' 32
    |-CompoundAssignOperator 0x194b372e998 <col:19, col:25> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372e938 <col:19> 'u64':'unsigned long long' lvalue Var 0x194b37316e8 'h0' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x194b372e980 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x194b372e958 <col:25> 'unsigned int' 4294967295
    |-CompoundAssignOperator 0x194b372ea68 <line:440:5, col:15> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372e9c8 <col:5> 'u64':'unsigned long long' lvalue Var 0x194b37317d8 'h2' 'u64':'unsigned long long'
    | `-BinaryOperator 0x194b372ea48 <col:11, col:15> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x194b372ea30 <col:11> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x194b372e9e8 <col:11> 'u64':'unsigned long long' lvalue Var 0x194b3731760 'h1' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x194b372ea08 <col:15> 'int' 32
    |-CompoundAssignOperator 0x194b372eaf8 <col:19, col:25> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372ea98 <col:19> 'u64':'unsigned long long' lvalue Var 0x194b3731760 'h1' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x194b372eae0 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x194b372eab8 <col:25> 'unsigned int' 4294967295
    |-CompoundAssignOperator 0x194b372ebc8 <line:441:5, col:15> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372eb28 <col:5> 'u64':'unsigned long long' lvalue Var 0x194b3731850 'h3' 'u64':'unsigned long long'
    | `-BinaryOperator 0x194b372eba8 <col:11, col:15> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x194b372eb90 <col:11> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x194b372eb48 <col:11> 'u64':'unsigned long long' lvalue Var 0x194b37317d8 'h2' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x194b372eb68 <col:15> 'int' 32
    |-CompoundAssignOperator 0x194b372ec58 <col:19, col:25> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372ebf8 <col:19> 'u64':'unsigned long long' lvalue Var 0x194b37317d8 'h2' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x194b372ec40 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x194b372ec18 <col:25> 'unsigned int' 4294967295
    |-BinaryOperator 0x194b372ee28 <line:444:5, col:26> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372ec88 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731988 'g0' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x194b372ee00 <col:10, col:26> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x194b372ede0 <col:15, col:26> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x194b372ed90 <col:16, col:25> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x194b372ecc0 <col:16> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x194b372ed70 <col:20, col:25> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x194b372ed40 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x194b372ecf8 <col:20> 'u64':'unsigned long long' lvalue Var 0x194b37316e8 'h0' 'u64':'unsigned long long'
    |         `-ImplicitCastExpr 0x194b372ed58 <col:25> 'unsigned long long' <IntegralCast>
    |           `-IntegerLiteral 0x194b372ed18 <col:25> 'int' 5
    |-BinaryOperator 0x194b372f030 <line:445:5, col:34> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372ee48 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731a00 'g1' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x194b372f008 <col:10, col:34> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x194b372efe8 <col:15, col:34> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x194b372ef98 <col:16, col:33> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x194b372ee80 <col:16> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x194b372ef78 <col:20, col:33> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x194b372ef60 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x194b372eea0 <col:20> 'u64':'unsigned long long' lvalue Var 0x194b3731760 'h1' 'u64':'unsigned long long'
    |         `-ParenExpr 0x194b372ef40 <col:25, col:33> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x194b372ef20 <col:26, col:31> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x194b372ef08 <col:26> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x194b372eec0 <col:26> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x194b372eee0 <col:31> 'int' 32
    |-BinaryOperator 0x194b372f248 <line:446:5, col:34> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372f050 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731a78 'g2' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x194b372f220 <col:10, col:34> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x194b372f200 <col:15, col:34> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x194b372f1a0 <col:16, col:33> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x194b372f088 <col:16> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x194b372f180 <col:20, col:33> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x194b372f168 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x194b372f0a8 <col:20> 'u64':'unsigned long long' lvalue Var 0x194b37317d8 'h2' 'u64':'unsigned long long'
    |         `-ParenExpr 0x194b372f148 <col:25, col:33> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x194b372f128 <col:26, col:31> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x194b372f110 <col:26> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x194b372f0c8 <col:26> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x194b372f0e8 <col:31> 'int' 32
    |-BinaryOperator 0x194b372f450 <line:447:5, col:34> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372f268 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731af0 'g3' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x194b372f428 <col:10, col:34> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x194b372f408 <col:15, col:34> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x194b372f3b8 <col:16, col:33> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x194b372f2a0 <col:16> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x194b372f398 <col:20, col:33> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x194b372f380 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x194b372f2c0 <col:20> 'u64':'unsigned long long' lvalue Var 0x194b3731850 'h3' 'u64':'unsigned long long'
    |         `-ParenExpr 0x194b372f360 <col:25, col:33> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x194b372f340 <col:26, col:31> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x194b372f328 <col:26> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x194b372f2e0 <col:26> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x194b372f300 <col:31> 'int' 32
    |-BinaryOperator 0x194b372f610 <line:448:5, col:28> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372f470 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731b68 'g4' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x194b372f5f8 <col:10, col:28> 'u32':'unsigned int' <IntegralCast>
    |   `-BinaryOperator 0x194b372f5d8 <col:10, col:28> 'unsigned long long' '+'
    |     |-ImplicitCastExpr 0x194b372f5a8 <col:10> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x194b372f490 <col:10> 'u64':'unsigned long long' lvalue Var 0x194b37318c8 'h4' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x194b372f5c0 <col:15, col:28> 'unsigned long long' <IntegralCast>
    |       `-CStyleCastExpr 0x194b372f580 <col:15, col:28> 'u32':'unsigned int' <IntegralCast>
    |         `-ParenExpr 0x194b372f560 <col:20, col:28> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x194b372f510 <col:21, col:26> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x194b372f4f8 <col:21> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x194b372f4b0 <col:21> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x194b372f4d0 <col:26> 'int' 32
    |-BinaryOperator 0x194b372f768 <line:451:5, col:24> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372f630 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    | `-BinaryOperator 0x194b372f748 <col:12, col:24> 'unsigned int' '-'
    |   |-ImplicitCastExpr 0x194b372f730 <col:12> 'unsigned int' <IntegralCast>
    |   | `-IntegerLiteral 0x194b372f668 <col:12> 'int' 0
    |   `-ParenExpr 0x194b372f710 <col:16, col:24> 'u32':'unsigned int'
    |     `-BinaryOperator 0x194b372f6f0 <col:17, col:23> 'u32':'unsigned int' '>>'
    |       |-ImplicitCastExpr 0x194b372f6d8 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |       | `-DeclRefExpr 0x194b372f690 <col:17> 'u32':'unsigned int' lvalue Var 0x194b3731b68 'g4' 'u32':'unsigned int'
    |       `-IntegerLiteral 0x194b372f6b0 <col:23> 'int' 2
    |-CompoundAssignOperator 0x194b372f7e0 <line:452:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x194b372f788 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731988 'g0' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x194b372f7c8 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x194b372f7a8 <col:11> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x194b372f868 <line:453:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x194b372f810 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731a00 'g1' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x194b372f850 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x194b372f830 <col:11> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x194b372f8f0 <line:454:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x194b372f898 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731a78 'g2' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x194b372f8d8 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x194b372f8b8 <col:11> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x194b372f978 <line:455:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x194b372f920 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731af0 'g3' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x194b372f960 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x194b372f940 <col:11> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    |-BinaryOperator 0x194b372fa18 <line:456:5, col:13> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372f9a8 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    | `-UnaryOperator 0x194b372fa00 <col:12, col:13> 'u32':'unsigned int' prefix '~' cannot overflow
    |   `-ImplicitCastExpr 0x194b372f9e8 <col:13> 'u32':'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x194b372f9c8 <col:13> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x194b372fb20 <line:457:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372fa38 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731988 'g0' 'u32':'unsigned int'
    | `-ParenExpr 0x194b372fb00 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x194b372fae0 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x194b372fa98 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x194b372fa58 <col:12> 'u64':'unsigned long long' lvalue Var 0x194b37316e8 'h0' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x194b372fac8 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x194b372fab0 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x194b372fa78 <col:17> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x194b372fc38 <line:458:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372fb50 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731a00 'g1' 'u32':'unsigned int'
    | `-ParenExpr 0x194b372fc18 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x194b372fbf8 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x194b372fbb0 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x194b372fb70 <col:12> 'u64':'unsigned long long' lvalue Var 0x194b3731760 'h1' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x194b372fbe0 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x194b372fbc8 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x194b372fb90 <col:17> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x194b372fd50 <line:459:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372fc68 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731a78 'g2' 'u32':'unsigned int'
    | `-ParenExpr 0x194b372fd30 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x194b372fd10 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x194b372fcc8 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x194b372fc88 <col:12> 'u64':'unsigned long long' lvalue Var 0x194b37317d8 'h2' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x194b372fcf8 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x194b372fce0 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x194b372fca8 <col:17> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x194b372fe68 <line:460:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x194b372fd80 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731af0 'g3' 'u32':'unsigned int'
    | `-ParenExpr 0x194b372fe48 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x194b372fe28 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x194b372fde0 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x194b372fda0 <col:12> 'u64':'unsigned long long' lvalue Var 0x194b3731850 'h3' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x194b372fe10 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x194b372fdf8 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x194b372fdc0 <col:17> 'u32':'unsigned int' lvalue Var 0x194b3731cb8 'mask' 'u32':'unsigned int'
    |-BinaryOperator 0x194b37300b0 <line:463:5, col:38> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372fe98 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731988 'g0' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x194b3730088 <col:10, col:38> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x194b3730068 <col:15, col:38> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x194b3730018 <col:16, col:37> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x194b372feb8 <col:16> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x194b372fff8 <col:20, col:37> 'unsigned long long' '+'
    |         |-CStyleCastExpr 0x194b372ff20 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | `-ImplicitCastExpr 0x194b372ff08 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         |   `-DeclRefExpr 0x194b372fed8 <col:25> 'u32':'unsigned int' lvalue Var 0x194b3731988 'g0' 'u32':'unsigned int'
    |         `-ImplicitCastExpr 0x194b372ffe0 <col:30, col:37> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x194b372ffc8 <col:30, col:37> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x194b372ffa8 <col:30, col:37> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x194b372ff90 <col:30> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x194b372ff48 <col:30> 'const u32 *':'const u32 *' lvalue ParmVar 0x194b37313a0 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x194b372ff68 <col:36> 'int' 0
    |-BinaryOperator 0x194b372a358 <line:464:5, col:50> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b37300d0 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731a00 'g1' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x194b372a330 <col:10, col:50> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x194b372a310 <col:15, col:50> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x194b372a2c0 <col:16, col:49> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x194b37300f0 <col:16> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x194b372a2a0 <col:20, col:49> 'unsigned long long' '+'
    |         |-BinaryOperator 0x194b372a1d0 <col:20, col:38> 'unsigned long long' '+'
    |         | |-CStyleCastExpr 0x194b3730158 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | | `-ImplicitCastExpr 0x194b3730140 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         | |   `-DeclRefExpr 0x194b3730110 <col:25> 'u32':'unsigned int' lvalue Var 0x194b3731a00 'g1' 'u32':'unsigned int'
    |         | `-ParenExpr 0x194b372a1b0 <col:30, col:38> 'u64':'unsigned long long'
    |         |   `-BinaryOperator 0x194b37301e0 <col:31, col:36> 'u64':'unsigned long long' '>>'
    |         |     |-ImplicitCastExpr 0x194b37301c8 <col:31> 'u64':'unsigned long long' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x194b3730180 <col:31> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |         |     `-IntegerLiteral 0x194b37301a0 <col:36> 'int' 32
    |         `-ImplicitCastExpr 0x194b372a288 <col:42, col:49> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x194b372a270 <col:42, col:49> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x194b372a250 <col:42, col:49> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x194b372a238 <col:42> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x194b372a1f0 <col:42> 'const u32 *':'const u32 *' lvalue ParmVar 0x194b37313a0 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x194b372a210 <col:48> 'int' 1
    |-BinaryOperator 0x194b372a650 <line:465:5, col:50> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372a378 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731a78 'g2' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x194b372a628 <col:10, col:50> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x194b372a608 <col:15, col:50> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x194b372a5b8 <col:16, col:49> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x194b372a398 <col:16> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x194b372a598 <col:20, col:49> 'unsigned long long' '+'
    |         |-BinaryOperator 0x194b372a4c8 <col:20, col:38> 'unsigned long long' '+'
    |         | |-CStyleCastExpr 0x194b372a400 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | | `-ImplicitCastExpr 0x194b372a3e8 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         | |   `-DeclRefExpr 0x194b372a3b8 <col:25> 'u32':'unsigned int' lvalue Var 0x194b3731a78 'g2' 'u32':'unsigned int'
    |         | `-ParenExpr 0x194b372a4a8 <col:30, col:38> 'u64':'unsigned long long'
    |         |   `-BinaryOperator 0x194b372a488 <col:31, col:36> 'u64':'unsigned long long' '>>'
    |         |     |-ImplicitCastExpr 0x194b372a470 <col:31> 'u64':'unsigned long long' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x194b372a428 <col:31> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |         |     `-IntegerLiteral 0x194b372a448 <col:36> 'int' 32
    |         `-ImplicitCastExpr 0x194b372a580 <col:42, col:49> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x194b372a568 <col:42, col:49> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x194b372a548 <col:42, col:49> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x194b372a530 <col:42> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x194b372a4e8 <col:42> 'const u32 *':'const u32 *' lvalue ParmVar 0x194b37313a0 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x194b372a508 <col:48> 'int' 2
    |-BinaryOperator 0x194b372a948 <line:466:5, col:50> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x194b372a670 <col:5> 'u32':'unsigned int' lvalue Var 0x194b3731af0 'g3' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x194b372a920 <col:10, col:50> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x194b372a900 <col:15, col:50> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x194b372a8b0 <col:16, col:49> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x194b372a690 <col:16> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x194b372a890 <col:20, col:49> 'unsigned long long' '+'
    |         |-BinaryOperator 0x194b372a7c0 <col:20, col:38> 'unsigned long long' '+'
    |         | |-CStyleCastExpr 0x194b372a6f8 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | | `-ImplicitCastExpr 0x194b372a6e0 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         | |   `-DeclRefExpr 0x194b372a6b0 <col:25> 'u32':'unsigned int' lvalue Var 0x194b3731af0 'g3' 'u32':'unsigned int'
    |         | `-ParenExpr 0x194b372a7a0 <col:30, col:38> 'u64':'unsigned long long'
    |         |   `-BinaryOperator 0x194b372a780 <col:31, col:36> 'u64':'unsigned long long' '>>'
    |         |     |-ImplicitCastExpr 0x194b372a768 <col:31> 'u64':'unsigned long long' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x194b372a720 <col:31> 'u64':'unsigned long long' lvalue Var 0x194b3731c28 't' 'u64':'unsigned long long'
    |         |     `-IntegerLiteral 0x194b372a740 <col:36> 'int' 32
    |         `-ImplicitCastExpr 0x194b372a878 <col:42, col:49> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x194b372a860 <col:42, col:49> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x194b372a840 <col:42, col:49> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x194b372a828 <col:42> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x194b372a7e0 <col:42> 'const u32 *':'const u32 *' lvalue ParmVar 0x194b37313a0 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x194b372a800 <col:48> 'int' 3
    |-ParenExpr 0x194b372ab50 <line:71:22, col:40> 'u32':'unsigned int'
    | `-BinaryOperator 0x194b372ab30 <col:23, col:39> 'u32':'unsigned int' '='
    |   |-UnaryOperator 0x194b372aac0 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
    |   | `-CStyleCastExpr 0x194b372aa98 <col:24, col:33> 'u32 *' <BitCast>
    |   |   `-ParenExpr 0x194b372aa78 <col:31, col:33> 'unsigned char *':'unsigned char *'
    |   |     `-BinaryOperator 0x194b372a9c8 <line:468:12, col:18> 'unsigned char *':'unsigned char *' '+'
    |   |       |-ImplicitCastExpr 0x194b372a9b0 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x194b372a968 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x194b3731220 'mac' 'unsigned char *':'unsigned char *'
    |   |       `-IntegerLiteral 0x194b372a988 <col:18> 'int' 0
    |   `-ImplicitCastExpr 0x194b372ab18 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
    |     `-ParenExpr 0x194b372aaf8 <col:37, col:39> 'u32':'unsigned int' lvalue
    |       `-DeclRefExpr 0x194b372aad8 <line:468:21> 'u32':'unsigned int' lvalue Var 0x194b3731988 'g0' 'u32':'unsigned int'
    |-ParenExpr 0x194b372acf8 <line:71:22, col:40> 'u32':'unsigned int'
    | `-BinaryOperator 0x194b372acd8 <col:23, col:39> 'u32':'unsigned int' '='
    |   |-UnaryOperator 0x194b372ac68 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
    |   | `-CStyleCastExpr 0x194b372ac40 <col:24, col:33> 'u32 *' <BitCast>
    |   |   `-ParenExpr 0x194b372ac20 <col:31, col:33> 'unsigned char *':'unsigned char *'
    |   |     `-BinaryOperator 0x194b372abd0 <line:469:12, col:18> 'unsigned char *':'unsigned char *' '+'
    |   |       |-ImplicitCastExpr 0x194b372abb8 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x194b372ab70 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x194b3731220 'mac' 'unsigned char *':'unsigned char *'
    |   |       `-IntegerLiteral 0x194b372ab90 <col:18> 'int' 4
    |   `-ImplicitCastExpr 0x194b372acc0 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
    |     `-ParenExpr 0x194b372aca0 <col:37, col:39> 'u32':'unsigned int' lvalue
    |       `-DeclRefExpr 0x194b372ac80 <line:469:21> 'u32':'unsigned int' lvalue Var 0x194b3731a00 'g1' 'u32':'unsigned int'
    |-ParenExpr 0x194b372aea0 <line:71:22, col:40> 'u32':'unsigned int'
    | `-BinaryOperator 0x194b372ae80 <col:23, col:39> 'u32':'unsigned int' '='
    |   |-UnaryOperator 0x194b372ae10 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
    |   | `-CStyleCastExpr 0x194b372ade8 <col:24, col:33> 'u32 *' <BitCast>
    |   |   `-ParenExpr 0x194b372adc8 <col:31, col:33> 'unsigned char *':'unsigned char *'
    |   |     `-BinaryOperator 0x194b372ad78 <line:470:12, col:18> 'unsigned char *':'unsigned char *' '+'
    |   |       |-ImplicitCastExpr 0x194b372ad60 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x194b372ad18 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x194b3731220 'mac' 'unsigned char *':'unsigned char *'
    |   |       `-IntegerLiteral 0x194b372ad38 <col:18> 'int' 8
    |   `-ImplicitCastExpr 0x194b372ae68 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
    |     `-ParenExpr 0x194b372ae48 <col:37, col:39> 'u32':'unsigned int' lvalue
    |       `-DeclRefExpr 0x194b372ae28 <line:470:21> 'u32':'unsigned int' lvalue Var 0x194b3731a78 'g2' 'u32':'unsigned int'
    `-ParenExpr 0x194b372b048 <line:71:22, col:40> 'u32':'unsigned int'
      `-BinaryOperator 0x194b372b028 <col:23, col:39> 'u32':'unsigned int' '='
        |-UnaryOperator 0x194b372afb8 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
        | `-CStyleCastExpr 0x194b372af90 <col:24, col:33> 'u32 *' <BitCast>
        |   `-ParenExpr 0x194b372af70 <col:31, col:33> 'unsigned char *':'unsigned char *'
        |     `-BinaryOperator 0x194b372af20 <line:471:12, col:18> 'unsigned char *':'unsigned char *' '+'
        |       |-ImplicitCastExpr 0x194b372af08 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
        |       | `-DeclRefExpr 0x194b372aec0 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x194b3731220 'mac' 'unsigned char *':'unsigned char *'
        |       `-IntegerLiteral 0x194b372aee0 <col:18> 'int' 12
        `-ImplicitCastExpr 0x194b372b010 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
          `-ParenExpr 0x194b372aff0 <col:37, col:39> 'u32':'unsigned int' lvalue
            `-DeclRefExpr 0x194b372afd0 <line:471:22> 'u32':'unsigned int' lvalue Var 0x194b3731af0 'g3' 'u32':'unsigned int'
