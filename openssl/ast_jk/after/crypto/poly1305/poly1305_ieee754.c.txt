TranslationUnitDecl 0x2ab40c29cc8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2ab40c2a560 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2ab40c2a260 '__int128'
|-TypedefDecl 0x2ab40c2a5d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2ab40c2a280 'unsigned __int128'
|-TypedefDecl 0x2ab40c2a908 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2ab40c2a6c0 'struct __NSConstantString_tag'
|   `-Record 0x2ab40c2a628 '__NSConstantString_tag'
|-TypedefDecl 0x2ab40c2a978 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2ab40c29ea0 'unsigned long long'
|-TypedefDecl 0x2ab40c2aa10 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2ab40c2a9d0 'char *'
|   `-BuiltinType 0x2ab40c29d60 'char'
|-TypedefDecl 0x2ab40c2aa80 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2ab40c2a9d0 'char *'
|   `-BuiltinType 0x2ab40c29d60 'char'
|-TypedefDecl 0x2ab40c2ab40 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2ab40c29ea0 'unsigned long long'
|-TypedefDecl 0x2ab40c2abb0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2ab40c2a9d0 'char *'
|   `-BuiltinType 0x2ab40c29d60 'char'
|-FunctionDecl 0x2ab4287a460 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2ab4287a500 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2ab4287a570 <col:21> Implicit
|-FunctionDecl 0x2ab4287a5c8 prev 0x2ab4287a460 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2ab4287a2f0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2ab4287a6b8 <col:21> Inherited Implicit
|-TypedefDecl 0x2ab4287a6f8 prev 0x2ab40c2a978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2ab40c29ea0 'unsigned long long'
|-TypedefDecl 0x2ab4287a7a0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2ab4287a770 'size_t' sugar
|   |-Typedef 0x2ab4287a6f8 'size_t'
|   `-BuiltinType 0x2ab40c29ea0 'unsigned long long'
|-TypedefDecl 0x2ab4287a810 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2ab40c29e00 'long long'
|-TypedefDecl 0x2ab4287a880 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2ab40c29e00 'long long'
|-TypedefDecl 0x2ab4287a8f0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2ab40c29e40 'unsigned short'
|-TypedefDecl 0x2ab4287a960 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x2ab40c29e40 'unsigned short'
|-TypedefDecl 0x2ab4287a9d0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2ab40c29e40 'unsigned short'
|-TypedefDecl 0x2ab4287aa40 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2ab40c29dc0 'int'
|-TypedefDecl 0x2ab4287aab0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2ab40c29de0 'long'
|-TypedefDecl 0x2ab4287ab20 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2ab40c29e00 'long long'
|-TypedefDecl 0x2ab4287abb0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2ab4287ab80 '__time64_t' sugar
|   |-Typedef 0x2ab4287ab20 '__time64_t'
|   `-BuiltinType 0x2ab40c29e00 'long long'
|-FunctionDecl 0x2ab4287ad28 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2ab4287af48 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2ab428b2190 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2ab4287b088 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2ab4287b100 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2ab4287b178 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2ab4287b1f8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2ab428b1f30 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2ab428b2270 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2ab428b2330 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2ab428b24a0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2ab428b2450 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2ab428b23f0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2ab428b2310 'struct threadlocaleinfostruct'
|       `-Record 0x2ab428b8fa0 'threadlocaleinfostruct'
|-TypedefDecl 0x2ab428b25b0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2ab428b2560 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2ab428b2500 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2ab428b23d0 'struct threadmbcinfostruct'
|       `-Record 0x2ab428b2330 'threadmbcinfostruct'
|-RecordDecl 0x2ab428b2608 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2ab428b26c0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2ab428b2780 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2ab428b2810 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2ab428b28a0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2ab428b2958 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2ab428b2900 'struct localeinfo_struct' sugar
|   `-RecordType 0x2ab428b2760 'struct localeinfo_struct'
|     `-Record 0x2ab428b26c0 'localeinfo_struct'
|-TypedefDecl 0x2ab428b2a30 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2ab428b29e0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2ab428b2900 'struct localeinfo_struct' sugar
|     `-RecordType 0x2ab428b2760 'struct localeinfo_struct'
|       `-Record 0x2ab428b26c0 'localeinfo_struct'
|-RecordDecl 0x2ab428b2aa8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2ab428b2b60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2ab428b2bd8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2ab428b2c98 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2ab428b2d30 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2ab428b2da0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2ab428b2e58 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2ab428b2e00 'struct localerefcount' sugar
|   `-RecordType 0x2ab428b2b40 'struct localerefcount'
|     `-Record 0x2ab428b2aa8 'localerefcount'
|-RecordDecl 0x2ab428b8fa0 prev 0x2ab428b2270 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2ab428b9020 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2ab428b9098 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2ab428b9108 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2ab428b9178 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2ab428b91e8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2ab428b93a8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2ab428b9418 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2ab428b9488 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2ab428b94f8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2ab428b9568 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2ab428b95d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2ab428b9630 parent 0x2ab40c29cc8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2ab428b97c0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2ab428b9830 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2ab428b98a0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2ab428b9910 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2ab428b99b0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2ab428b9a20 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2ab428b9b30 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2ab428b9c68 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2ab428b9d18 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2ab428b9cc0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2ab428b2310 'struct threadlocaleinfostruct'
|     `-Record 0x2ab428b8fa0 'threadlocaleinfostruct'
|-TypedefDecl 0x2ab428b7f90 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x2ab428b9f10 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x2ab428b9eb0 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x2ab428b9e60 'int (void)' sugar
|     | `-FunctionProtoType 0x2ab428b9e30 'int (void)' cdecl
|     |   `-BuiltinType 0x2ab40c29dc0 'int'
|     `-ParenType 0x2ab428b9e60 'int (void)' sugar
|       `-FunctionProtoType 0x2ab428b9e30 'int (void)' cdecl
|         `-BuiltinType 0x2ab40c29dc0 'int'
|-RecordDecl 0x2ab428b7fe8 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x2ab428b80a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2ab428b8118 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x2ab428b8188 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x2ab428b8238 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x2ab428b81e0 'struct _div_t' sugar
|   `-RecordType 0x2ab428b8080 'struct _div_t'
|     `-Record 0x2ab428b7fe8 '_div_t'
|-RecordDecl 0x2ab428b82a8 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x2ab428b8360 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2ab428b83d8 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x2ab428b8448 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x2ab428b84f8 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x2ab428b84a0 'struct _ldiv_t' sugar
|   `-RecordType 0x2ab428b8340 'struct _ldiv_t'
|     `-Record 0x2ab428b82a8 '_ldiv_t'
|-RecordDecl 0x2ab428b8568 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x2ab428b8620 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2ab428b8698 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x2ab428b8708 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x2ab428b87b8 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x2ab428b8760 'struct _lldiv_t' sugar
|   `-RecordType 0x2ab428b8600 'struct _lldiv_t'
|     `-Record 0x2ab428b8568 '_lldiv_t'
|-RecordDecl 0x2ab428b8850 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x2ab428b8910 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x2ab428b8a10 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x2ab428b8ac8 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x2ab428b8a70 'struct _LDOUBLE' sugar
|   `-RecordType 0x2ab428b88f0 '_LDOUBLE'
|     `-Record 0x2ab428b8850 ''
|-RecordDecl 0x2ab428b8b38 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x2ab428b8c08 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x2ab428b8cb8 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x2ab428b8c60 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x2ab428b8bd0 '_CRT_DOUBLE'
|     `-Record 0x2ab428b8b38 ''
|-RecordDecl 0x2ab428b8d28 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x2ab428b8df8 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x2ab428b8ea8 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x2ab428b8e50 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x2ab428b8dc0 '_CRT_FLOAT'
|     `-Record 0x2ab428b8d28 ''
|-RecordDecl 0x2ab428c0010 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x2ab428c00e8 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x2ab428c0198 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x2ab428c0140 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x2ab428c00b0 '_LONGDOUBLE'
|     `-Record 0x2ab428c0010 ''
|-RecordDecl 0x2ab428c0230 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x2ab428c02f0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x2ab428c03f0 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x2ab428c04a8 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x2ab428c0450 'struct _LDBL12' sugar
|   `-RecordType 0x2ab428c02d0 '_LDBL12'
|     `-Record 0x2ab428c0230 ''
|-VarDecl 0x2ab428c0530 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x2ab428c06b0 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2ab428c0908 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x2ab428c07a0 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x2ab428c0b50 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x2ab428c0af0 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x2ab428c0a90 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x2ab428c0a40 'void (void)' sugar
|     | `-FunctionProtoType 0x2ab4287ac80 'void (void)' cdecl
|     |   `-BuiltinType 0x2ab40c29d20 'void'
|     `-ParenType 0x2ab428c0a40 'void (void)' sugar
|       `-FunctionProtoType 0x2ab4287ac80 'void (void)' cdecl
|         `-BuiltinType 0x2ab40c29d20 'void'
|-FunctionDecl 0x2ab428c0d50 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x2ab428c0be0 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x2ab428c0f68 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x2ab428c5418 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x2ab428c5390 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x2ab428c5330 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x2ab428c52e0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x2ab428b1ff0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x2ab40c29d20 'void'
|     |   |-PointerType 0x2ab4287b050 'const wchar_t *'
|     |   | `-QualType 0x2ab4287b001 'const wchar_t' const
|     |   |   `-TypedefType 0x2ab4287b000 'wchar_t' sugar
|     |   |     |-Typedef 0x2ab4287a8f0 'wchar_t'
|     |   |     `-BuiltinType 0x2ab40c29e40 'unsigned short'
|     |   |-PointerType 0x2ab4287b050 'const wchar_t *'
|     |   | `-QualType 0x2ab4287b001 'const wchar_t' const
|     |   |   `-TypedefType 0x2ab4287b000 'wchar_t' sugar
|     |   |     |-Typedef 0x2ab4287a8f0 'wchar_t'
|     |   |     `-BuiltinType 0x2ab40c29e40 'unsigned short'
|     |   |-PointerType 0x2ab4287b050 'const wchar_t *'
|     |   | `-QualType 0x2ab4287b001 'const wchar_t' const
|     |   |   `-TypedefType 0x2ab4287b000 'wchar_t' sugar
|     |   |     |-Typedef 0x2ab4287a8f0 'wchar_t'
|     |   |     `-BuiltinType 0x2ab40c29e40 'unsigned short'
|     |   |-BuiltinType 0x2ab40c29e60 'unsigned int'
|     |   `-TypedefType 0x2ab4287b260 'uintptr_t' sugar
|     |     |-Typedef 0x2ab40c2ab40 'uintptr_t'
|     |     `-BuiltinType 0x2ab40c29ea0 'unsigned long long'
|     `-ParenType 0x2ab428c52e0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x2ab428b1ff0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x2ab40c29d20 'void'
|         |-PointerType 0x2ab4287b050 'const wchar_t *'
|         | `-QualType 0x2ab4287b001 'const wchar_t' const
|         |   `-TypedefType 0x2ab4287b000 'wchar_t' sugar
|         |     |-Typedef 0x2ab4287a8f0 'wchar_t'
|         |     `-BuiltinType 0x2ab40c29e40 'unsigned short'
|         |-PointerType 0x2ab4287b050 'const wchar_t *'
|         | `-QualType 0x2ab4287b001 'const wchar_t' const
|         |   `-TypedefType 0x2ab4287b000 'wchar_t' sugar
|         |     |-Typedef 0x2ab4287a8f0 'wchar_t'
|         |     `-BuiltinType 0x2ab40c29e40 'unsigned short'
|         |-PointerType 0x2ab4287b050 'const wchar_t *'
|         | `-QualType 0x2ab4287b001 'const wchar_t' const
|         |   `-TypedefType 0x2ab4287b000 'wchar_t' sugar
|         |     |-Typedef 0x2ab4287a8f0 'wchar_t'
|         |     `-BuiltinType 0x2ab40c29e40 'unsigned short'
|         |-BuiltinType 0x2ab40c29e60 'unsigned int'
|         `-TypedefType 0x2ab4287b260 'uintptr_t' sugar
|           |-Typedef 0x2ab40c2ab40 'uintptr_t'
|           `-BuiltinType 0x2ab40c29ea0 'unsigned long long'
|-FunctionDecl 0x2ab428c5610 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x2ab428c54a0 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x2ab428c5828 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x2ab428c5a10 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x2ab428c5c80 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x2ab428c5b08 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x2ab428c5ed0 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x2ab428c5d58 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x2ab428c9150 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x2ab428c9390 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x2ab428c9220 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x2ab428c95e0 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x2ab428c9468 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x2ab428c98c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x2ab428c9960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab428c9c20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x2ab428c9cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x2ab428c9e08 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x2ab428c9ea0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x2ab428c9f90 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x2ab428ca028 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x2ab428c3070 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x2ab428c3200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x2ab428c3268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x2ab428c34a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x2ab428c3510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab428c37d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x2ab428c3658 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x2ab428c3a20 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x2ab428c38a8 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x2ab428c3bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x2ab428c3c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab428c3e78 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x2ab428c3da0 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x2ab428c2030 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x2ab428c3f50 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x2ab428c2280 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x2ab428c2320 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2ab428c2390 prev 0x2ab428c2280 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x2ab428c2108 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x2ab428c2540 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x2ab428c25e0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2ab428c2650 prev 0x2ab428c2540 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x2ab428c2468 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x2ab428c27d8 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x2ab428c2878 prev 0x2ab428c27d8 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2ab428c2b30 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x2ab428c2948 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x2ab428c29c8 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x2ab428c2d28 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x2ab428c2dc8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2ab428c2e38 <col:19> Implicit
| `-ConstAttr 0x2ab428c2e90 <col:19> Implicit
|-FunctionDecl 0x2ab428c2eb8 prev 0x2ab428c2d28 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x2ab428c2c10 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x2ab428c2fa8 <col:19> Inherited Implicit
| `-ConstAttr 0x2ab428c2fd0 <col:19> Inherited Implicit
|-FunctionDecl 0x2ab428c4198 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x2ab428c4238 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x2ab428c42a8 <col:19> Implicit
| `-ConstAttr 0x2ab428c4300 <col:19> Implicit
|-FunctionDecl 0x2ab428c4328 prev 0x2ab428c4198 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x2ab428c4050 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x2ab428c4418 <col:19> Inherited Implicit
| `-ConstAttr 0x2ab428c4440 <col:19> Inherited Implicit
|-FunctionDecl 0x2ab428c45c8 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x2ab428c4668 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x2ab428c46d8 <col:19> Implicit
| `-ConstAttr 0x2ab428c4730 <col:19> Implicit
|-FunctionDecl 0x2ab428c4758 prev 0x2ab428c45c8 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x2ab428c4480 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x2ab428c4848 <col:19> Inherited Implicit
| `-ConstAttr 0x2ab428c4870 <col:19> Inherited Implicit
|-FunctionDecl 0x2ab428c4978 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x2ab428c48b0 <col:35> col:42 'long long'
|-FunctionDecl 0x2ab428c4c78 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x2ab428c4b10 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x2ab428c4e98 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x2ab428c4d50 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x2ab428c61b0 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x2ab428c4f70 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x2ab428c4fe8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab428c63d8 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2ab428c6290 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x2ab428c66d0 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x2ab428c64b0 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2ab428c6528 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab428c68f8 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x2ab428c67b0 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x2ab428c6bf0 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x2ab428c69d0 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2ab428c6a48 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab428c6e18 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x2ab428c6cd0 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x2ab428fc840 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x2ab428c6ef0 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x2ab428c6f68 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab428fd130 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x2ab428fc950 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x2ab428fc9d0 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x2ab428fca70 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2ab428fcae8 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2ab428fce40 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x2ab428fcec0 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x2ab428ff8f8 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x2ab428fd230 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x2ab428fd2b0 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x2ab428fd328 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab428fd3a0 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab428fd678 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x2ab42900000 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x2ab428ff9f0 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x2ab428ffa68 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2ab428ffae0 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2ab428ffd48 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x2ab428ffdc8 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x2ab429005c8 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x2ab429000f8 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x2ab42900170 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab429001e8 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab429003c8 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x2ab428fd7e8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x2ab428fd888 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x2ab428fd8f8 <col:47> Implicit
| `-ConstAttr 0x2ab428fd950 <col:47> Implicit
|-FunctionDecl 0x2ab428fd978 prev 0x2ab428fd7e8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x2ab429006b8 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x2ab428fda68 <col:47> Inherited Implicit
| `-ConstAttr 0x2ab428fda90 <col:47> Inherited Implicit
|-FunctionDecl 0x2ab428fdc18 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x2ab428fdcb8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x2ab428fdd28 <col:47> Implicit
| `-ConstAttr 0x2ab428fdd80 <col:47> Implicit
|-FunctionDecl 0x2ab428fdda8 prev 0x2ab428fdc18 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x2ab428fdad0 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x2ab428fde98 <col:47> Inherited Implicit
| `-ConstAttr 0x2ab428fdec0 <col:47> Inherited Implicit
|-FunctionDecl 0x2ab428fe048 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x2ab428fe0e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x2ab428fe158 <col:49> Implicit
| `-ConstAttr 0x2ab428fe1b0 <col:49> Implicit
|-FunctionDecl 0x2ab428fe1d8 prev 0x2ab428fe048 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x2ab428fdf00 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x2ab428fe2c8 <col:49> Inherited Implicit
| `-ConstAttr 0x2ab428fe2f0 <col:49> Inherited Implicit
|-FunctionDecl 0x2ab428fe578 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x2ab428fe358 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x2ab428fe3d8 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x2ab429008f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2ab429007b0 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x2ab429009a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42900eb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2ab42900b38 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x2ab42900bb8 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab42900c30 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2ab42900cb0 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x2ab42901270 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x2ab42900fa8 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x2ab42901020 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x2ab429010a0 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x2ab429016d8 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x2ab42901358 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x2ab429013d8 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab42901450 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab429014d0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x2ab428feb38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x2ab428fe8a0 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x2ab428fe920 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2ab428fe9a0 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x2ab428febf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab428ff0b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x2ab428fed38 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x2ab428fedb8 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab428fee30 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab428feeb0 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x2ab428ff508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x2ab428ff268 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x2ab428ff2e8 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab428ff368 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x2ab428ff5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab428f9a38 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x2ab428ff708 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x2ab428f9740 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab428f97b8 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab428f9838 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x2ab428f9e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x2ab428f9be8 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x2ab428f9c68 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab428f9ce8 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x2ab428f9f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab428fa168 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x2ab428fa088 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x2ab428fa3b8 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x2ab428fa240 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x2ab428fa2b8 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab429017c0 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x2ab428fa498 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x2ab428fa518 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x2ab428fa598 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x2ab42901c30 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2ab429018a8 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x2ab42901928 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x2ab429019a8 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x2ab42901a20 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42901fb8 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x2ab42901d20 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x2ab42901da0 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x2ab42901e20 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x2ab42902420 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2ab429020a0 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x2ab42902120 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x2ab429021a0 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x2ab42902218 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab429027d0 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x2ab42902538 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x2ab429025b8 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x2ab42902af8 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x2ab429028d8 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x2ab42902958 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x2ab42902f58 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x2ab42902bd8 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x2ab42902c58 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab42902cd0 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab42902d50 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x2ab429033a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x2ab42903108 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x2ab42903188 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x2ab42903208 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x2ab42903460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab428fb760 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x2ab429035a8 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x2ab42903620 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab428fbb08 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2ab428fb840 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x2ab428fb8b8 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab428fb930 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab428fbd60 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x2ab428fbbf0 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x2ab428fc058 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x2ab428fbe38 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x2ab428fbeb0 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab428fc358 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2ab428fc138 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2ab428fc1b0 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab42907820 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2ab428fc438 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x2ab428fc4b0 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab428fc528 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42907bd8 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x2ab42907900 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x2ab42907980 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x2ab429079f8 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab42908030 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2ab42907cb8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x2ab42907d38 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x2ab42907db0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab42907e28 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42908530 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x2ab42908118 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x2ab42908190 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2ab42908208 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab42908288 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x2ab42908300 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab42909a10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x2ab429086e0 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2ab42908760 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x2ab42909840 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2ab42909ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab4290a0c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2ab42909c08 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x2ab42909c80 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2ab42909cf8 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab42909d78 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x2ab42909df0 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab42909e68 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab4290a628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2ab4290a2b8 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2ab4290a338 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x2ab4290a3b0 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290a428 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2ab4290a6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab429088f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2ab42908aa0 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2ab429089c0 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x2ab42908cc0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x2ab42908b78 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x2ab42908f80 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x2ab42909020 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2ab42909088 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x2ab42909100 prev 0x2ab42908f80 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x2ab42908d98 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2ab42908e18 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x2ab429094b8 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x2ab429091e0 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x2ab42909260 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x2ab429092d8 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42906858 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x2ab429068f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2ab42906960 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x2ab429069c8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2ab42906a48 prev 0x2ab42906858 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x2ab429095a0 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x2ab42909620 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x2ab429096a0 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x2ab42906eb0 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2ab42906b30 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x2ab42906bb0 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x2ab42906c30 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x2ab42906ca8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab429071c0 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x2ab42907260 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2ab429072c8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x2ab42907330 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2ab429073b0 prev 0x2ab429071c0 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x2ab42906fa0 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x2ab42907020 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x2ab429070a0 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x2ab42907750 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2ab42907498 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x2ab42907518 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x2ab42907598 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x2ab42907610 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab4290ab18 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x2ab4290abb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2ab4290ac20 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x2ab4290ac88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2ab4290ad08 prev 0x2ab4290ab18 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x2ab4290a880 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x2ab4290a900 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x2ab4290a980 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x2ab4290b170 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2ab4290adf0 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x2ab4290ae70 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x2ab4290aef0 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x2ab4290af68 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab4290b480 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x2ab4290b520 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2ab4290b588 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x2ab4290b5f0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2ab4290b670 prev 0x2ab4290b480 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x2ab4290b260 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x2ab4290b2e0 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x2ab4290b360 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x2ab429059d0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2ab4290b758 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x2ab4290b7d8 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x2ab42905818 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x2ab42905890 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42905cb0 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x2ab42905d50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2ab42905db8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x2ab42905e30 prev 0x2ab42905cb0 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x2ab42905ac0 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x2ab42905b40 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x2ab429061e8 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x2ab42905f10 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x2ab42905f90 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x2ab42906008 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab429064c0 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x2ab42906560 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2ab429065c8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x2ab42906640 prev 0x2ab429064c0 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x2ab429062d0 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2ab42906350 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x2ab42904a48 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x2ab42906720 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x2ab429047f0 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x2ab42904868 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42904c10 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2ab42904b30 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x2ab42905068 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x2ab42904ce8 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x2ab42904d68 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab42904de0 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab42904e60 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x2ab429054b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x2ab42905218 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x2ab42905298 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x2ab42905318 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x2ab42905570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42903990 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x2ab42905778 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x2ab429037e0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2ab42903a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42903f18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x2ab42903c48 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x2ab42903cc0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2ab42903d38 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2ab42903fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42904488 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x2ab42904118 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x2ab42904198 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x2ab42904210 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2ab42904288 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x2ab42911a70 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x2ab42904578 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x2ab429045f8 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x2ab42904670 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab429046e8 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2ab42904760 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42911f80 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2ab42911b60 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x2ab42911be0 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x2ab42911c58 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab42911cd0 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2ab42911d48 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab42912400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2ab42912138 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x2ab429121b0 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2ab42912228 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2ab429124b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42912ac8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2ab429125f8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x2ab42912678 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x2ab429126f0 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab42912768 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2ab429127e0 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab42912858 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42912ff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2ab42912c88 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x2ab42912d00 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2ab42912d78 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab42912df0 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2ab429130b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42913420 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x2ab429134c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2ab42913528 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2ab429135a0 prev 0x2ab42913420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x2ab429131f8 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab42913270 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2ab42913650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2ab429136a8 <line:615:33> restrict
|-FunctionDecl 0x2ab4290f8a0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x2ab42913700 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x2ab4290f948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x2ab4290fb48 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x2ab4290fbe8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2ab4290fc58 prev 0x2ab4290fb48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x2ab4290f9c8 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2ab4290fd00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2ab4290fd58 <line:615:33> restrict
|-FunctionDecl 0x2ab4290ffd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x2ab42910070 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x2ab429100d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2ab42910150 prev 0x2ab4290ffd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x2ab4290fdb0 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x2ab4290fe28 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2ab42910200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2ab42910258 <line:615:33> restrict
|-FunctionDecl 0x2ab42910578 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x2ab429102b0 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x2ab42910328 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab429103a0 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2ab42910630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2ab42910688 <line:615:33> restrict
|-FunctionDecl 0x2ab429107b8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x2ab429106e0 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x2ab42910860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x2ab4290ba30 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x2ab4290b8b8 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290b930 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2ab4290bae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2ab4290bb38 <line:615:33> restrict
|-FunctionDecl 0x2ab4290be58 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x2ab4290bb88 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290bc00 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290bc78 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2ab4290bf10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2ab4290bf68 <line:615:33> restrict
|-FunctionDecl 0x2ab4290c1d0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x2ab4290bfc0 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x2ab4290c038 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290c0b0 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2ab4290c288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2ab4290c2e0 <line:615:33> restrict
|-FunctionDecl 0x2ab4290c6b0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x2ab4290c338 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x2ab4290c3b0 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290c428 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290c4a0 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2ab4290c770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2ab4290c7c8 <line:615:33> restrict
|-FunctionDecl 0x2ab4290db28 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x2ab4290d880 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x2ab4290d8f8 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290d970 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290d9e8 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2ab4290dbe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2ab4290dc40 <line:615:33> restrict
|-FunctionDecl 0x2ab4290e0b8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x2ab4290dc98 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x2ab4290dd10 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290dd88 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290de00 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4290de78 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2ab4290e180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2ab4290e1d8 <line:615:33> restrict
|-FunctionDecl 0x2ab4290e4f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x2ab4290e230 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x2ab4290e2a8 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab4290e320 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab429139c8 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2ab4290e5d8 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x2ab4290e650 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2ab4290e6c8 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab4290e748 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x2ab42913e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x2ab42913b78 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x2ab42913bf0 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2ab42913c70 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x2ab42913ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab429143b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2ab42914040 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x2ab429140b8 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2ab42914130 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab429141b0 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x2ab42914830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x2ab42914568 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x2ab429145e0 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2ab42914660 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x2ab4290c888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab4290cd48 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2ab4290c9d0 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x2ab4290ca48 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2ab4290cac0 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab4290cb40 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x2ab4290d1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x2ab4290cef8 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x2ab4290cf70 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2ab4290cff0 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x2ab4290d278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab4290d5e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2ab4290d3b8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2ab4290d438 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x2ab42914a18 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x2ab4290d6b8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab4290d738 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2ab4290d7b0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42914dd8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2ab42914af8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab42914b78 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2ab42914bf8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x2ab42915240 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2ab42914eb8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab42914f38 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2ab42914fb8 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x2ab42915030 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42915608 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2ab42915328 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab429153a8 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2ab42915428 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x2ab42915a90 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2ab429156e8 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab42915768 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2ab429157e8 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x2ab42915860 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42915e58 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2ab42915b78 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab42915bf8 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2ab42915c78 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x2ab429162c0 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2ab42915f38 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab42915fb8 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2ab42916038 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x2ab429160b0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42916688 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2ab429163a8 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab42916428 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2ab429164a8 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x2ab4290eaa0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2ab42916768 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab429167e8 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2ab42916868 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x2ab4290e890 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab4290edb0 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2ab4290eb88 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2ab4290ec08 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x2ab4290f158 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x2ab4290ee88 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab4290ef08 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2ab4290ef80 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab4290f460 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2ab4290f238 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2ab4290f2b8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x2ab42916910 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x2ab4290f538 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab4290f5b8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2ab4290f630 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42916c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2ab42916ab0 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x2ab42916cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42917178 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x2ab42916e08 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x2ab42916e80 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2ab42916ef8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab42916f70 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x2ab42917530 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x2ab42917268 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x2ab429172e0 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x2ab42917358 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x2ab42917788 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2ab42917610 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x2ab42926818 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x2ab42917858 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x2ab42926b10 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2ab429268e8 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2ab42926960 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42926cc8 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2ab42926be8 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x2ab42926fc0 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2ab42926d98 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2ab42926e10 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42927218 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x2ab42927098 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x2ab42927510 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2ab429272e8 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2ab42927360 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab429297b8 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x2ab429275e8 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x2ab42929ab0 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2ab42929888 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2ab42929900 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42929f08 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2ab42929b90 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x2ab42929c08 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2ab42929c80 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab42929d00 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x2ab4292a380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x2ab4292a0b8 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x2ab4292a130 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2ab4292a1b0 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x2ab4292a438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab429278e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2ab4292a580 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x2ab4292a5f8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2ab4292a670 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2ab4292a6f0 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x2ab42927d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x2ab42927a98 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x2ab42927b10 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2ab42927b90 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x2ab42927e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42928038 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x2ab42927f58 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x2ab42928280 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2ab42928108 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2ab42928180 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42928578 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2ab42928358 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab429283d8 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2ab42928458 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x2ab4292c968 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2ab42928658 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab429286d8 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2ab4292c7b0 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x2ab4292c828 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab4292cc70 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2ab4292ca50 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab4292cad0 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2ab4292cb50 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x2ab4292d008 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2ab4292cd50 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2ab4292cdd0 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2ab4292ce50 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x2ab4292cec8 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab4292d3c8 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x2ab4292d0f8 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x2ab4292d178 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x2ab4292d1f0 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab4292a978 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x2ab4292d4b0 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab4292d528 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4292d5a8 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x2ab4292d628 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x2ab4292d6a8 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x2ab4292d728 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x2ab4292ae70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x2ab4292ab38 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x2ab4292abb8 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x2ab4292ac38 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x2ab4292acb8 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x2ab4292af30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab4292b468 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x2ab4292b078 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab4292b0f0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4292b170 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x2ab4292b1f0 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x2ab4292b270 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x2ab4292b2f0 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x2ab4292b8f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x2ab4292b628 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x2ab4292b6a8 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x2ab4292b728 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x2ab4292b7b8 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x2ab4292b9b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab4292be78 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x2ab4292bb00 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab4292bb78 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4292bbf8 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x2ab4292bc78 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x2ab4292c2c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x2ab4292c028 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x2ab4292c0a8 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x2ab4292c128 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x2ab4292c380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42925740 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x2ab4292c538 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x2ab4292c5b8 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x2ab42925ac0 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x2ab42925898 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x2ab42925918 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x2ab42925e40 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x2ab42925c18 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x2ab42925c98 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x2ab429261e8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x2ab42925f18 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x2ab42925f98 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x2ab42926010 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab42926598 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x2ab429262c8 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x2ab42926348 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x2ab429263c0 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab4292fa38 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x2ab42926678 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x2ab4292f7e0 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x2ab4292f858 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2ab4292fd10 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x2ab4292fdb0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x2ab4292fe18 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2ab4292fe90 <col:46> Implicit
|-FunctionDecl 0x2ab4292fee8 prev 0x2ab4292fd10 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x2ab4292fb20 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x2ab4292fba0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x2ab4292ffe0 <col:46> Inherited Implicit
|-FunctionDecl 0x2ab429301a0 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x2ab42930240 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x2ab429302a8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2ab42930320 <col:46> Implicit
|-FunctionDecl 0x2ab42930378 prev 0x2ab429301a0 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x2ab42930020 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x2ab429300a0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x2ab42930470 <col:46> Inherited Implicit
|-FunctionDecl 0x2ab429349e8 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x2ab429304b0 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x2ab42930528 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab429305a8 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x2ab42930628 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x2ab429306a8 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x2ab42930728 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x2ab42934f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x2ab42934ba8 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x2ab42934c28 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x2ab42934ca8 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x2ab42934d28 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x2ab42934da8 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x2ab42935058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42935330 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x2ab429351c0 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x2ab42935550 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2ab42935408 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2ab42935708 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2ab42935628 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x2ab42932a38 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x2ab42932810 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x2ab42932890 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x2ab42932d00 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x2ab42932da0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x2ab42932e08 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2ab42932e80 <col:30> Implicit
|-FunctionDecl 0x2ab42932ed8 prev 0x2ab42932d00 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x2ab42932b18 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x2ab42932b98 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x2ab42932fd0 <col:30> Inherited Implicit
|-FunctionDecl 0x2ab42933200 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x2ab429332a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2ab42933308 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2ab42933380 <col:34> Implicit
|-FunctionDecl 0x2ab429333d8 prev 0x2ab42933200 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x2ab42933010 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x2ab42933090 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x2ab429334d0 <col:34> Inherited Implicit
|-FunctionDecl 0x2ab42933690 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x2ab42933730 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x2ab42933798 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2ab429307f0 <col:30> Implicit
|-FunctionDecl 0x2ab42930848 prev 0x2ab42933690 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x2ab42933510 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x2ab42933590 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x2ab42930940 <col:30> Inherited Implicit
|-FunctionDecl 0x2ab42930b00 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x2ab42930ba0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2ab42930c08 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2ab42930c80 <col:34> Implicit
|-FunctionDecl 0x2ab42930cd8 prev 0x2ab42930b00 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x2ab42930980 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x2ab42930a00 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x2ab42930dd0 <col:34> Inherited Implicit
|-FunctionDecl 0x2ab42931188 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x2ab42930e10 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x2ab42930e90 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x2ab42930f10 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x2ab42930f88 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab429315d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x2ab42931338 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x2ab429313b8 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x2ab42931438 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x2ab42931688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42933ce0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x2ab429338f8 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x2ab42933978 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x2ab429339f8 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x2ab42933a78 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x2ab42933af8 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x2ab42933da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab429345c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x2ab42933ef0 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x2ab42933f70 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x2ab42933fe8 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab42934068 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x2ab429340e0 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab42934160 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x2ab429341d8 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab42934258 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x2ab429342d0 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab42931990 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x2ab429346d8 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x2ab42934758 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x2ab42931800 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x2ab42931d30 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2ab42931a70 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x2ab42931ae8 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x2ab42931b60 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab429322c8 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2ab42931e10 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x2ab42931e88 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab42931f00 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x2ab42931f78 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x2ab42931ff0 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2ab42932068 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x2ab4292d870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2ab42932480 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x2ab429324f8 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x2ab42932570 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x2ab429325e8 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2ab42932660 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x2ab4292d938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab4292dbf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2ab4292da78 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2ab4292dda0 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2ab4292dcc0 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x2ab4292e088 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2ab4292de70 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x2ab4292dee8 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x2ab4292e4c8 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x2ab4292e160 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2ab4292e1d8 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x2ab4292e250 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x2ab4292e2c8 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab4293aa60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x2ab4292e670 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2ab4292e6e8 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x2ab4293a890 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x2ab4293ab18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab4293b130 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x2ab4293ad18 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x2ab4293ad90 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x2ab4293ae08 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x2ab4293ae80 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x2ab4293aef8 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x2ab4293b1f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab4293ba50 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x2ab4293b338 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x2ab4293b3b0 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x2ab4293b428 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4293b4a0 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x2ab4293b518 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4293b590 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x2ab4293b608 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab4293b680 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x2ab4293b6f8 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x2ab4293bd70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x2ab4293bc68 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x2ab4293be18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x2ab4293c208 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x2ab4293c028 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x2ab4293c0a8 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x2ab4293c2b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x2ab4293c600 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x2ab4293c4c0 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x2ab4293c6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x2ab42938ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x2ab429389e8 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x2ab42938a68 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x2ab42938ae8 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x2ab42938b68 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x2ab42938d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x2ab42938e60 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42939398 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x2ab429390d8 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x2ab42939158 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x2ab429391d8 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x2ab42939258 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x2ab42939458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x2ab42939550 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab429369f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x2ab429397c8 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x2ab42936850 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x2ab429368d0 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x2ab42936aa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x2ab42936ba0 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42937038 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x2ab42936e18 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x2ab42936e98 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab42936f18 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x2ab429370f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x2ab429371e8 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42937680 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x2ab42937460 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x2ab429374e0 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x2ab42937560 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x2ab42937738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x2ab42939880 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42939b50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2ab42939a70 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x2ab42939bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x2ab42939fd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x2ab42939dc0 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x2ab42939e40 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x2ab42939ec0 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x2ab4293a090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x2ab4293a570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x2ab4293a350 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x2ab4293a3d0 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x2ab4293a450 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x2ab4293a628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x2ab4293a720 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2ab42937938 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x2ab42937860 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-TypedefDecl 0x2ab42937a10 <.//openssl//file_jk/after\crypto\poly1305\poly1305_ieee754.c:55:1, col:23> col:23 u8 'unsigned char'
| `-BuiltinType 0x2ab40c29e20 'unsigned char'
|-TypedefDecl 0x2ab42937a80 <line:56:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x2ab40c29e60 'unsigned int'
|-TypedefDecl 0x2ab42937af0 <line:57:1, col:28> col:28 referenced u64 'unsigned long long'
| `-BuiltinType 0x2ab40c29ea0 'unsigned long long'
|-RecordDecl 0x2ab42937b48 <line:58:9, col:34> col:9 union definition
| |-FieldDecl 0x2ab42937c18 <col:17, col:24> col:24 referenced d 'double'
| `-FieldDecl 0x2ab42937ca0 <col:27, col:31> col:31 referenced u 'u64':'unsigned long long'
|-TypedefDecl 0x2ab42937d58 <col:1, col:36> col:36 referenced elem64 'union elem64':'elem64'
| `-ElaboratedType 0x2ab42937d00 'union elem64' sugar
|   `-RecordType 0x2ab42937be0 'elem64'
|     `-Record 0x2ab42937b48 ''
|-RecordDecl 0x2ab42937dc8 <line:89:9, line:93:1> line:89:9 struct definition
| |-FieldDecl 0x2ab42937fd8 <line:90:5, col:15> col:12 referenced h 'elem64 [4]'
| |-FieldDecl 0x2ab429380d0 <line:91:5, col:15> col:12 referenced r 'double [8]'
| `-FieldDecl 0x2ab429381d0 <line:92:5, col:15> col:12 referenced s 'double [6]'
|-TypedefDecl 0x2ab42938288 <line:89:1, line:93:3> col:3 referenced poly1305_internal 'struct poly1305_internal':'poly1305_internal'
| `-ElaboratedType 0x2ab42938230 'struct poly1305_internal' sugar
|   `-RecordType 0x2ab42937e60 'poly1305_internal'
|     `-Record 0x2ab42937dc8 ''
|-VarDecl 0x2ab42938330 <line:97:1, col:26> col:18 used mxcsr 'const u32':'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2ab429383d8 <col:26> 'u32':'unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2ab42938398 <col:26> 'int' 32640
|-FunctionDecl 0x2ab429386d0 <line:108:1, line:213:1> line:108:5 poly1305_init 'int (void *, const unsigned char *)'
| |-ParmVarDecl 0x2ab42938408 <col:19, col:25> col:25 used ctx 'void *'
| |-ParmVarDecl 0x2ab42938580 <col:30, col:56> col:50 used key 'const unsigned char *':'const unsigned char *'
| `-CompoundStmt 0x2ab429b95b0 <line:109:1, line:213:1>
|   |-DeclStmt 0x2ab429439f8 <line:110:5, col:54>
|   | `-VarDecl 0x2ab42943920 <col:5, col:51> col:24 used st 'poly1305_internal *' cinit
|   |   `-CStyleCastExpr 0x2ab429439d0 <col:29, col:51> 'poly1305_internal *' <BitCast>
|   |     `-ImplicitCastExpr 0x2ab429439b8 <col:51> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x2ab42943988 <col:51> 'void *' lvalue ParmVar 0x2ab42938408 'ctx' 'void *'
|   |-DeclStmt 0x2ab42943c18 <line:111:5, col:26>
|   | |-VarDecl 0x2ab42943a20 <col:5, col:12> col:12 used r0 'elem64':'elem64'
|   | |-VarDecl 0x2ab42943a98 <col:5, col:16> col:16 used r1 'elem64':'elem64'
|   | |-VarDecl 0x2ab42943b10 <col:5, col:20> col:20 used r2 'elem64':'elem64'
|   | `-VarDecl 0x2ab42943b88 <col:5, col:24> col:24 used r3 'elem64':'elem64'
|   |-BinaryOperator 0x2ab42943f18 <line:120:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x2ab42943d70 <line:120:5, col:14> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   | | `-ArraySubscriptExpr 0x2ab42943d50 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x2ab42943d38 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x2ab42943c80 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   | |   |   `-ImplicitCastExpr 0x2ab42943c68 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2ab42943c30 <col:5> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x2ab42943cb0 <col:11> 'int' 0
|   | `-ParenExpr 0x2ab42943ef8 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x2ab42943ed8 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x2ab42943e90 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x2ab42943e70 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x2ab42943da0 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x2ab42943e58 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x2ab42943e38 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x2ab42943e18 <line:120:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x2ab42943dc8 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x2ab42943df0 <col:25> 'int' 0
|   |     `-IntegerLiteral 0x2ab42943eb0 <line:67:33> 'int' 52
|   |-BinaryOperator 0x2ab429441a8 <line:121:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x2ab42944000 <line:121:5, col:14> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   | | `-ArraySubscriptExpr 0x2ab42943fe0 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x2ab42943fc8 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x2ab42943f70 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   | |   |   `-ImplicitCastExpr 0x2ab42943f58 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2ab42943f38 <col:5> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x2ab42943fa0 <col:11> 'int' 1
|   | `-ParenExpr 0x2ab42944188 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x2ab42944168 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x2ab42944120 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x2ab42944100 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x2ab42944030 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x2ab429440e8 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x2ab429440c8 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x2ab429440a8 <line:121:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x2ab42944058 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x2ab42944080 <col:25> 'int' 32
|   |     `-IntegerLiteral 0x2ab42944140 <line:67:33> 'int' 52
|   |-BinaryOperator 0x2ab42944438 <line:122:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x2ab42944290 <line:122:5, col:14> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   | | `-ArraySubscriptExpr 0x2ab42944270 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x2ab42944258 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x2ab42944200 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   | |   |   `-ImplicitCastExpr 0x2ab429441e8 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2ab429441c8 <col:5> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x2ab42944230 <col:11> 'int' 2
|   | `-ParenExpr 0x2ab42944418 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x2ab429443f8 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x2ab429443b0 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x2ab42944390 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x2ab429442c0 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x2ab42944378 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x2ab42944358 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x2ab42944338 <line:122:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x2ab429442e8 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x2ab42944310 <col:25> 'int' 64
|   |     `-IntegerLiteral 0x2ab429443d0 <line:67:33> 'int' 52
|   |-BinaryOperator 0x2ab429446c8 <line:123:5, line:67:35> 'u64':'unsigned long long' '='
|   | |-MemberExpr 0x2ab42944520 <line:123:5, col:14> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   | | `-ArraySubscriptExpr 0x2ab42944500 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x2ab429444e8 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x2ab42944490 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   | |   |   `-ImplicitCastExpr 0x2ab42944478 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2ab42944458 <col:5> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x2ab429444c0 <col:11> 'int' 3
|   | `-ParenExpr 0x2ab429446a8 <line:67:17, col:35> 'unsigned long long'
|   |   `-BinaryOperator 0x2ab42944688 <col:18, col:33> 'unsigned long long' '<<'
|   |     |-ParenExpr 0x2ab42944640 <col:18, col:30> 'unsigned long long'
|   |     | `-BinaryOperator 0x2ab42944620 <col:19, col:29> 'unsigned long long' '+'
|   |     |   |-IntegerLiteral 0x2ab42944550 <col:19> 'unsigned long long' 1023
|   |     |   `-ImplicitCastExpr 0x2ab42944608 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-ParenExpr 0x2ab429445e8 <col:27, col:29> 'int'
|   |     |       `-BinaryOperator 0x2ab429445c8 <line:123:22, col:25> 'int' '+'
|   |     |         |-IntegerLiteral 0x2ab42944578 <col:22> 'int' 52
|   |     |         `-IntegerLiteral 0x2ab429445a0 <col:25> 'int' 96
|   |     `-IntegerLiteral 0x2ab42944660 <line:67:33> 'int' 52
|   |-IfStmt 0x2ab429b9560 <line:126:5, line:210:5>
|   | |-ImplicitCastExpr 0x2ab42944708 <line:126:9> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x2ab429446e8 <col:9> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x2ab42938580 'key' 'const unsigned char *':'const unsigned char *'
|   | `-CompoundStmt 0x2ab429b9468 <col:14, line:210:5>
|   |   |-DeclStmt 0x2ab42944798 <line:131:9, col:23>
|   |   | `-VarDecl 0x2ab42944730 <col:9, col:13> col:13 used mxcsr_orig 'u32':'unsigned int'
|   |   |-GCCAsmStmt 0x2ab429448a0 <line:133:9, col:52>
|   |   | `-DeclRefExpr 0x2ab42944868 <col:41> 'u32':'unsigned int' lvalue Var 0x2ab42944730 'mxcsr_orig' 'u32':'unsigned int'
|   |   |-GCCAsmStmt 0x2ab4293d968 <line:134:9, col:47>
|   |   | `-DeclRefExpr 0x2ab4293d948 <col:41> 'const u32':'const unsigned int' lvalue Var 0x2ab42938330 'mxcsr' 'const u32':'const unsigned int'
|   |   |-BinaryOperator 0x2ab4293de28 <line:153:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x2ab4293da10 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   |   | | `-DeclRefExpr 0x2ab4293d9d8 <col:9> 'elem64':'elem64' lvalue Var 0x2ab42943a20 'r0' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x2ab4293de08 <line:67:17, line:153:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x2ab4293db98 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x2ab4293db78 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x2ab4293db30 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x2ab4293db10 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x2ab4293da40 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x2ab4293daf8 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x2ab4293dad8 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x2ab4293dab8 <line:153:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x2ab4293da68 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x2ab4293da90 <col:23> 'int' 0
|   |   |   |   `-IntegerLiteral 0x2ab4293db50 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x2ab4293ddf0 <line:153:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x2ab4293ddd0 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x2ab4293ddb0 <line:70:21, line:153:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x2ab4293dd80 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x2ab4293dd38 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x2ab4293dd20 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x2ab4293dcf8 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x2ab4293dcd8 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x2ab4293dc38 <line:153:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x2ab4293dc18 <col:39, col:44> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x2ab4293dc00 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x2ab4293dbb8 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x2ab42938580 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x2ab4293dbd8 <col:43> 'int' 0
|   |   |         `-ImplicitCastExpr 0x2ab4293dd98 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x2ab4293dd58 <col:50> 'int' 268435455
|   |   |-BinaryOperator 0x2ab4293e240 <line:154:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x2ab4293de80 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   |   | | `-DeclRefExpr 0x2ab4293de48 <col:9> 'elem64':'elem64' lvalue Var 0x2ab42943a98 'r1' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x2ab4293e220 <line:67:17, line:154:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x2ab4293e008 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x2ab4293dfe8 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x2ab4293dfa0 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x2ab4293df80 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x2ab4293deb0 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x2ab4293df68 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x2ab4293df48 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x2ab4293df28 <line:154:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x2ab4293ded8 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x2ab4293df00 <col:23> 'int' 32
|   |   |   |   `-IntegerLiteral 0x2ab4293dfc0 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x2ab4293e208 <line:154:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x2ab4293e1e8 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x2ab4293e1c8 <line:70:21, line:154:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x2ab4293e198 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x2ab4293e150 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x2ab4293e138 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x2ab4293e110 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x2ab4293e0f0 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x2ab4293e0a8 <line:154:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x2ab4293e088 <col:39, col:44> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x2ab4293e070 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x2ab4293e028 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x2ab42938580 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x2ab4293e048 <col:43> 'int' 4
|   |   |         `-ImplicitCastExpr 0x2ab4293e1b0 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x2ab4293e170 <col:50> 'int' 268435452
|   |   |-BinaryOperator 0x2ab4293e658 <line:155:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x2ab4293e298 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   |   | | `-DeclRefExpr 0x2ab4293e260 <col:9> 'elem64':'elem64' lvalue Var 0x2ab42943b10 'r2' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x2ab4293e638 <line:67:17, line:155:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x2ab4293e420 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x2ab4293e400 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x2ab4293e3b8 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x2ab4293e398 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x2ab4293e2c8 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x2ab4293e380 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x2ab4293e360 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x2ab4293e340 <line:155:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x2ab4293e2f0 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x2ab4293e318 <col:23> 'int' 64
|   |   |   |   `-IntegerLiteral 0x2ab4293e3d8 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x2ab4293e620 <line:155:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x2ab4293e600 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x2ab4293e5e0 <line:70:21, line:155:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x2ab4293e5b0 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x2ab4293e568 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x2ab4293e550 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x2ab4293e528 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x2ab4293e508 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x2ab4293e4c0 <line:155:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x2ab4293e4a0 <col:39, col:44> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x2ab4293e488 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x2ab4293e440 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x2ab42938580 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x2ab4293e460 <col:43> 'int' 8
|   |   |         `-ImplicitCastExpr 0x2ab4293e5c8 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x2ab4293e588 <col:50> 'int' 268435452
|   |   |-BinaryOperator 0x2ab4293ea88 <line:156:9, col:60> 'u64':'unsigned long long' '='
|   |   | |-MemberExpr 0x2ab4293e6b0 <col:9, col:12> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   |   | | `-DeclRefExpr 0x2ab4293e678 <col:9> 'elem64':'elem64' lvalue Var 0x2ab42943b88 'r3' 'elem64':'elem64'
|   |   | `-BinaryOperator 0x2ab4293ea68 <line:67:17, line:156:60> 'unsigned long long' '|'
|   |   |   |-ParenExpr 0x2ab4293e838 <line:67:17, col:35> 'unsigned long long'
|   |   |   | `-BinaryOperator 0x2ab4293e818 <col:18, col:33> 'unsigned long long' '<<'
|   |   |   |   |-ParenExpr 0x2ab4293e7d0 <col:18, col:30> 'unsigned long long'
|   |   |   |   | `-BinaryOperator 0x2ab4293e7b0 <col:19, col:29> 'unsigned long long' '+'
|   |   |   |   |   |-IntegerLiteral 0x2ab4293e6e0 <col:19> 'unsigned long long' 1023
|   |   |   |   |   `-ImplicitCastExpr 0x2ab4293e798 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   |   |   |   |     `-ParenExpr 0x2ab4293e778 <col:27, col:29> 'int'
|   |   |   |   |       `-BinaryOperator 0x2ab4293e758 <line:156:20, col:23> 'int' '+'
|   |   |   |   |         |-IntegerLiteral 0x2ab4293e708 <col:20> 'int' 52
|   |   |   |   |         `-IntegerLiteral 0x2ab4293e730 <col:23> 'int' 96
|   |   |   |   `-IntegerLiteral 0x2ab4293e7f0 <line:67:33> 'int' 52
|   |   |   `-ImplicitCastExpr 0x2ab4293ea50 <line:156:29, col:60> 'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x2ab4293ea30 <col:29, col:60> 'unsigned int'
|   |   |       `-BinaryOperator 0x2ab4293ea10 <line:70:21, line:156:50> 'unsigned int' '&'
|   |   |         |-ImplicitCastExpr 0x2ab4293e9e0 <line:70:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   |   |         | `-ParenExpr 0x2ab4293e998 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   |   |         |   `-UnaryOperator 0x2ab4293e980 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   |   |         |     `-CStyleCastExpr 0x2ab4293e958 <col:23, col:38> 'const u32 *' <BitCast>
|   |   |         |       `-ParenExpr 0x2ab4293e938 <col:36, col:38> 'const unsigned char *'
|   |   |         |         `-UnaryOperator 0x2ab4293e8f0 <line:156:38, col:45> 'const unsigned char *' prefix '&' cannot overflow
|   |   |         |           `-ArraySubscriptExpr 0x2ab4293e8d0 <col:39, col:45> 'const unsigned char' lvalue
|   |   |         |             |-ImplicitCastExpr 0x2ab4293e8a0 <col:39> 'const unsigned char *':'const unsigned char *' <LValueToRValue>
|   |   |         |             | `-DeclRefExpr 0x2ab4293e858 <col:39> 'const unsigned char *':'const unsigned char *' lvalue ParmVar 0x2ab42938580 'key' 'const unsigned char *':'const unsigned char *'
|   |   |         |             `-IntegerLiteral 0x2ab4293e878 <col:43> 'int' 12
|   |   |         `-ImplicitCastExpr 0x2ab4293e9f8 <col:50> 'unsigned int' <IntegralCast>
|   |   |           `-IntegerLiteral 0x2ab4293e9b8 <col:50> 'int' 268435452
|   |   |-BinaryOperator 0x2ab4293eea8 <line:158:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab4293eb80 <line:158:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab4293eb68 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab4293eae0 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab4293eac8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab4293eaa8 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab4293eb10 <col:15> 'int' 0
|   |   | `-BinaryOperator 0x2ab4293ee88 <col:20, line:60:37> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab4293ee70 <line:158:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2ab4293ebc0 <col:20, col:23> 'double' lvalue .d 0x2ab42937c18
|   |   |   |   `-DeclRefExpr 0x2ab4293eba0 <col:20> 'elem64':'elem64' lvalue Var 0x2ab42943a20 'r0' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x2ab4293ee50 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x2ab4293ed00 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab4293ecd8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab4293ecb8 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab4293ec60 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab4293ebf0 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab4293ec40 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab4293ec18 <line:158:31> 'int' 52
|   |   |     `-ParenExpr 0x2ab4293ee30 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x2ab4293ee08 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x2ab4293ede8 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x2ab4293ed90 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x2ab4293ed20 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x2ab4293ed70 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x2ab4293ed48 <line:61:19> 'int' 0
|   |   |-BinaryOperator 0x2ab4293f298 <line:159:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab4293ef70 <line:159:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab4293ef58 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab4293ef00 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab4293eee8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab4293eec8 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab4293ef30 <col:15> 'int' 2
|   |   | `-BinaryOperator 0x2ab4293f278 <col:20, line:60:37> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab4293f260 <line:159:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2ab4293efb0 <col:20, col:23> 'double' lvalue .d 0x2ab42937c18
|   |   |   |   `-DeclRefExpr 0x2ab4293ef90 <col:20> 'elem64':'elem64' lvalue Var 0x2ab42943a98 'r1' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x2ab4293f240 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x2ab4293f0f0 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab4293f0c8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab4293f0a8 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab4293f050 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab4293efe0 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab4293f030 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab4293f008 <line:159:31> 'int' 52
|   |   |     `-ParenExpr 0x2ab4293f220 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x2ab4293f1f8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x2ab4293f1d8 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x2ab4293f180 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x2ab4293f110 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x2ab4293f160 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x2ab4293f138 <line:62:20> 'int' 32
|   |   |-BinaryOperator 0x2ab4293f7f8 <line:160:9, line:63:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab4293f360 <line:160:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab4293f348 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab4293f2f0 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab4293f2d8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab4293f2b8 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab4293f320 <col:15> 'int' 4
|   |   | `-BinaryOperator 0x2ab4293f7d8 <col:20, line:63:30> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab4293f7c0 <line:160:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2ab4293f3a0 <col:20, col:23> 'double' lvalue .d 0x2ab42937c18
|   |   |   |   `-DeclRefExpr 0x2ab4293f380 <col:20> 'elem64':'elem64' lvalue Var 0x2ab42943b10 'r2' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x2ab4293f7a0 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-ParenExpr 0x2ab4293f4e0 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab4293f4b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab4293f498 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab4293f440 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab4293f3d0 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab4293f420 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab4293f3f8 <line:160:31> 'int' 52
|   |   |     `-ParenExpr 0x2ab4293f780 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab4293f760 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab4293f610 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x2ab4293f5e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x2ab4293f5c8 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x2ab4293f570 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x2ab4293f500 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x2ab4293f550 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x2ab4293f528 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x2ab4293f740 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab4293f718 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab4293f6f8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab4293f6a0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab4293f630 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab4293f680 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab4293f658 <line:63:27> 'int' 32
|   |   |-BinaryOperator 0x2ab4293fee8 <line:161:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab4293f8e0 <line:161:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab4293f8a8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab4293f850 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab4293f838 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab4293f818 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab4293f880 <col:15> 'int' 6
|   |   | `-BinaryOperator 0x2ab4293fec8 <col:20, line:64:30> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab4293feb0 <line:161:20, col:23> 'double' <LValueToRValue>
|   |   |   | `-MemberExpr 0x2ab4293f920 <col:20, col:23> 'double' lvalue .d 0x2ab42937c18
|   |   |   |   `-DeclRefExpr 0x2ab4293f900 <col:20> 'elem64':'elem64' lvalue Var 0x2ab42943b88 'r3' 'elem64':'elem64'
|   |   |   `-BinaryOperator 0x2ab4293fe90 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-ParenExpr 0x2ab4293fa60 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab4293fa38 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab4293fa18 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab4293f9c0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab4293f950 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab4293f9a0 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab4293f978 <line:161:31> 'int' 52
|   |   |     `-ParenExpr 0x2ab4293fe70 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab4293fe50 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab4293fd00 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x2ab4293fce0 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x2ab4293fb90 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x2ab4293fb68 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x2ab4293fb48 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x2ab4293faf0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x2ab4293fa80 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x2ab4293fad0 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x2ab4293faa8 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x2ab4293fcc0 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x2ab4293fc98 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x2ab4293fc78 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x2ab4293fc20 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x2ab4293fbb0 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x2ab4293fc00 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x2ab4293fbd8 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x2ab4293fe30 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab4293fe08 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab4293fde8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab4293fd90 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab4293fd20 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab4293fd70 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab4293fd48 <line:64:27> 'int' 32
|   |   |-BinaryOperator 0x2ab429406b8 <line:163:9, col:42> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab4293ffb0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab4293ff98 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab4293ff40 <col:9, col:13> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   | | |   `-ImplicitCastExpr 0x2ab4293ff28 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab4293ff08 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab4293ff70 <col:15> 'int' 0
|   |   | `-BinaryOperator 0x2ab42940698 <col:20, col:42> 'double' '*'
|   |   |   |-ImplicitCastExpr 0x2ab42940680 <col:20, col:27> 'double' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x2ab42940078 <col:20, col:27> 'double' lvalue
|   |   |   |   |-ImplicitCastExpr 0x2ab42940060 <col:20, col:24> 'double *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x2ab42940008 <col:20, col:24> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |   |   |   `-ImplicitCastExpr 0x2ab4293fff0 <col:20> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x2ab4293ffd0 <col:20> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |   |   `-IntegerLiteral 0x2ab42940038 <col:26> 'int' 2
|   |   |   `-ParenExpr 0x2ab42940660 <col:31, col:42> 'double'
|   |   |     `-BinaryOperator 0x2ab42940640 <col:32, line:65:31> 'double' '/'
|   |   |       |-FloatingLiteral 0x2ab42940098 <line:163:32> 'double' 5.000000e+00
|   |   |       `-ParenExpr 0x2ab42940620 <line:65:17, col:31> 'double'
|   |   |         `-BinaryOperator 0x2ab42940600 <line:64:16, line:60:37> 'double' '*'
|   |   |           |-ParenExpr 0x2ab429404b0 <line:64:16, col:30> 'double'
|   |   |           | `-BinaryOperator 0x2ab42940490 <line:63:16, line:60:37> 'double' '*'
|   |   |           |   |-ParenExpr 0x2ab42940340 <line:63:16, col:30> 'double'
|   |   |           |   | `-BinaryOperator 0x2ab42940320 <line:60:17, col:37> 'double' '*'
|   |   |           |   |   |-ParenExpr 0x2ab429401d0 <col:17, col:37> 'double'
|   |   |           |   |   | `-CStyleCastExpr 0x2ab429401a8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |   |   `-ParenExpr 0x2ab42940188 <col:26, col:36> 'unsigned long long'
|   |   |           |   |   |     `-BinaryOperator 0x2ab42940130 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |   |       |-IntegerLiteral 0x2ab429400c0 <col:27> 'unsigned long long' 1
|   |   |           |   |   |       `-ParenExpr 0x2ab42940110 <col:33, col:35> 'int'
|   |   |           |   |   |         `-IntegerLiteral 0x2ab429400e8 <line:62:20> 'int' 32
|   |   |           |   |   `-ParenExpr 0x2ab42940300 <line:60:17, col:37> 'double'
|   |   |           |   |     `-CStyleCastExpr 0x2ab429402d8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |       `-ParenExpr 0x2ab429402b8 <col:26, col:36> 'unsigned long long'
|   |   |           |   |         `-BinaryOperator 0x2ab42940260 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |           |-IntegerLiteral 0x2ab429401f0 <col:27> 'unsigned long long' 1
|   |   |           |   |           `-ParenExpr 0x2ab42940240 <col:33, col:35> 'int'
|   |   |           |   |             `-IntegerLiteral 0x2ab42940218 <line:63:27> 'int' 32
|   |   |           |   `-ParenExpr 0x2ab42940470 <line:60:17, col:37> 'double'
|   |   |           |     `-CStyleCastExpr 0x2ab42940448 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |       `-ParenExpr 0x2ab42940428 <col:26, col:36> 'unsigned long long'
|   |   |           |         `-BinaryOperator 0x2ab429403d0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |           |-IntegerLiteral 0x2ab42940360 <col:27> 'unsigned long long' 1
|   |   |           |           `-ParenExpr 0x2ab429403b0 <col:33, col:35> 'int'
|   |   |           |             `-IntegerLiteral 0x2ab42940388 <line:64:27> 'int' 32
|   |   |           `-ParenExpr 0x2ab429405e0 <line:60:17, col:37> 'double'
|   |   |             `-CStyleCastExpr 0x2ab429405b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |               `-ParenExpr 0x2ab42940598 <col:26, col:36> 'unsigned long long'
|   |   |                 `-BinaryOperator 0x2ab42940540 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                   |-IntegerLiteral 0x2ab429404d0 <col:27> 'unsigned long long' 1
|   |   |                   `-ParenExpr 0x2ab42940520 <col:33, col:35> 'int'
|   |   |                     `-IntegerLiteral 0x2ab429404f8 <line:65:28> 'int' 34
|   |   |-BinaryOperator 0x2ab42941ea8 <line:164:9, col:42> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab42940780 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab42940768 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab42940710 <col:9, col:13> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429406f8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429406d8 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab42940740 <col:15> 'int' 2
|   |   | `-BinaryOperator 0x2ab42941e88 <col:20, col:42> 'double' '*'
|   |   |   |-ImplicitCastExpr 0x2ab42941e70 <col:20, col:27> 'double' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x2ab42940848 <col:20, col:27> 'double' lvalue
|   |   |   |   |-ImplicitCastExpr 0x2ab42940830 <col:20, col:24> 'double *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x2ab429407d8 <col:20, col:24> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |   |   |   `-ImplicitCastExpr 0x2ab429407c0 <col:20> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x2ab429407a0 <col:20> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |   |   `-IntegerLiteral 0x2ab42940808 <col:26> 'int' 4
|   |   |   `-ParenExpr 0x2ab42941e50 <col:31, col:42> 'double'
|   |   |     `-BinaryOperator 0x2ab42941e30 <col:32, line:65:31> 'double' '/'
|   |   |       |-FloatingLiteral 0x2ab42940868 <line:164:32> 'double' 5.000000e+00
|   |   |       `-ParenExpr 0x2ab42941e10 <line:65:17, col:31> 'double'
|   |   |         `-BinaryOperator 0x2ab42941df0 <line:64:16, line:60:37> 'double' '*'
|   |   |           |-ParenExpr 0x2ab42941ca0 <line:64:16, col:30> 'double'
|   |   |           | `-BinaryOperator 0x2ab42941c80 <line:63:16, line:60:37> 'double' '*'
|   |   |           |   |-ParenExpr 0x2ab42941b30 <line:63:16, col:30> 'double'
|   |   |           |   | `-BinaryOperator 0x2ab42941b10 <line:60:17, col:37> 'double' '*'
|   |   |           |   |   |-ParenExpr 0x2ab429419c0 <col:17, col:37> 'double'
|   |   |           |   |   | `-CStyleCastExpr 0x2ab42941998 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |   |   `-ParenExpr 0x2ab42941978 <col:26, col:36> 'unsigned long long'
|   |   |           |   |   |     `-BinaryOperator 0x2ab42941920 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |   |       |-IntegerLiteral 0x2ab42940890 <col:27> 'unsigned long long' 1
|   |   |           |   |   |       `-ParenExpr 0x2ab42941900 <col:33, col:35> 'int'
|   |   |           |   |   |         `-IntegerLiteral 0x2ab429408b8 <line:62:20> 'int' 32
|   |   |           |   |   `-ParenExpr 0x2ab42941af0 <line:60:17, col:37> 'double'
|   |   |           |   |     `-CStyleCastExpr 0x2ab42941ac8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |       `-ParenExpr 0x2ab42941aa8 <col:26, col:36> 'unsigned long long'
|   |   |           |   |         `-BinaryOperator 0x2ab42941a50 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |           |-IntegerLiteral 0x2ab429419e0 <col:27> 'unsigned long long' 1
|   |   |           |   |           `-ParenExpr 0x2ab42941a30 <col:33, col:35> 'int'
|   |   |           |   |             `-IntegerLiteral 0x2ab42941a08 <line:63:27> 'int' 32
|   |   |           |   `-ParenExpr 0x2ab42941c60 <line:60:17, col:37> 'double'
|   |   |           |     `-CStyleCastExpr 0x2ab42941c38 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |       `-ParenExpr 0x2ab42941c18 <col:26, col:36> 'unsigned long long'
|   |   |           |         `-BinaryOperator 0x2ab42941bc0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |           |-IntegerLiteral 0x2ab42941b50 <col:27> 'unsigned long long' 1
|   |   |           |           `-ParenExpr 0x2ab42941ba0 <col:33, col:35> 'int'
|   |   |           |             `-IntegerLiteral 0x2ab42941b78 <line:64:27> 'int' 32
|   |   |           `-ParenExpr 0x2ab42941dd0 <line:60:17, col:37> 'double'
|   |   |             `-CStyleCastExpr 0x2ab42941da8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |               `-ParenExpr 0x2ab42941d88 <col:26, col:36> 'unsigned long long'
|   |   |                 `-BinaryOperator 0x2ab42941d30 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                   |-IntegerLiteral 0x2ab42941cc0 <col:27> 'unsigned long long' 1
|   |   |                   `-ParenExpr 0x2ab42941d10 <col:33, col:35> 'int'
|   |   |                     `-IntegerLiteral 0x2ab42941ce8 <line:65:28> 'int' 34
|   |   |-BinaryOperator 0x2ab42942678 <line:165:9, col:42> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab42941f70 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab42941f58 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab42941f00 <col:9, col:13> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   | | |   `-ImplicitCastExpr 0x2ab42941ee8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab42941ec8 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab42941f30 <col:15> 'int' 4
|   |   | `-BinaryOperator 0x2ab42942658 <col:20, col:42> 'double' '*'
|   |   |   |-ImplicitCastExpr 0x2ab42942640 <col:20, col:27> 'double' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x2ab42942038 <col:20, col:27> 'double' lvalue
|   |   |   |   |-ImplicitCastExpr 0x2ab42942020 <col:20, col:24> 'double *' <ArrayToPointerDecay>
|   |   |   |   | `-MemberExpr 0x2ab42941fc8 <col:20, col:24> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |   |   |   `-ImplicitCastExpr 0x2ab42941fb0 <col:20> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x2ab42941f90 <col:20> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |   |   `-IntegerLiteral 0x2ab42941ff8 <col:26> 'int' 6
|   |   |   `-ParenExpr 0x2ab42942620 <col:31, col:42> 'double'
|   |   |     `-BinaryOperator 0x2ab42942600 <col:32, line:65:31> 'double' '/'
|   |   |       |-FloatingLiteral 0x2ab42942058 <line:165:32> 'double' 5.000000e+00
|   |   |       `-ParenExpr 0x2ab429425e0 <line:65:17, col:31> 'double'
|   |   |         `-BinaryOperator 0x2ab429425c0 <line:64:16, line:60:37> 'double' '*'
|   |   |           |-ParenExpr 0x2ab42942470 <line:64:16, col:30> 'double'
|   |   |           | `-BinaryOperator 0x2ab42942450 <line:63:16, line:60:37> 'double' '*'
|   |   |           |   |-ParenExpr 0x2ab42942300 <line:63:16, col:30> 'double'
|   |   |           |   | `-BinaryOperator 0x2ab429422e0 <line:60:17, col:37> 'double' '*'
|   |   |           |   |   |-ParenExpr 0x2ab42942190 <col:17, col:37> 'double'
|   |   |           |   |   | `-CStyleCastExpr 0x2ab42942168 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |   |   `-ParenExpr 0x2ab42942148 <col:26, col:36> 'unsigned long long'
|   |   |           |   |   |     `-BinaryOperator 0x2ab429420f0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |   |       |-IntegerLiteral 0x2ab42942080 <col:27> 'unsigned long long' 1
|   |   |           |   |   |       `-ParenExpr 0x2ab429420d0 <col:33, col:35> 'int'
|   |   |           |   |   |         `-IntegerLiteral 0x2ab429420a8 <line:62:20> 'int' 32
|   |   |           |   |   `-ParenExpr 0x2ab429422c0 <line:60:17, col:37> 'double'
|   |   |           |   |     `-CStyleCastExpr 0x2ab42942298 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |   |       `-ParenExpr 0x2ab42942278 <col:26, col:36> 'unsigned long long'
|   |   |           |   |         `-BinaryOperator 0x2ab42942220 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |   |           |-IntegerLiteral 0x2ab429421b0 <col:27> 'unsigned long long' 1
|   |   |           |   |           `-ParenExpr 0x2ab42942200 <col:33, col:35> 'int'
|   |   |           |   |             `-IntegerLiteral 0x2ab429421d8 <line:63:27> 'int' 32
|   |   |           |   `-ParenExpr 0x2ab42942430 <line:60:17, col:37> 'double'
|   |   |           |     `-CStyleCastExpr 0x2ab42942408 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |           |       `-ParenExpr 0x2ab429423e8 <col:26, col:36> 'unsigned long long'
|   |   |           |         `-BinaryOperator 0x2ab42942390 <col:27, col:35> 'unsigned long long' '<<'
|   |   |           |           |-IntegerLiteral 0x2ab42942320 <col:27> 'unsigned long long' 1
|   |   |           |           `-ParenExpr 0x2ab42942370 <col:33, col:35> 'int'
|   |   |           |             `-IntegerLiteral 0x2ab42942348 <line:64:27> 'int' 32
|   |   |           `-ParenExpr 0x2ab429425a0 <line:60:17, col:37> 'double'
|   |   |             `-CStyleCastExpr 0x2ab42942578 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |               `-ParenExpr 0x2ab42942558 <col:26, col:36> 'unsigned long long'
|   |   |                 `-BinaryOperator 0x2ab42942500 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                   |-IntegerLiteral 0x2ab42942490 <col:27> 'unsigned long long' 1
|   |   |                   `-ParenExpr 0x2ab429424e0 <col:33, col:35> 'int'
|   |   |                     `-IntegerLiteral 0x2ab429424b8 <line:65:28> 'int' 34
|   |   |-BinaryOperator 0x2ab42943060 <line:170:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab42942740 <line:170:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab42942728 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429426d0 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429426b8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab42942698 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab42942700 <col:15> 'int' 1
|   |   | `-BinaryOperator 0x2ab42943040 <col:20, line:60:37> 'double' '-'
|   |   |   |-ParenExpr 0x2ab42942c50 <line:170:20, col:52> 'double'
|   |   |   | `-BinaryOperator 0x2ab42942c30 <col:21, line:60:37> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x2ab42942c18 <line:170:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x2ab42942808 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x2ab429427f0 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x2ab42942798 <col:21, col:25> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |   |   |   |   `-ImplicitCastExpr 0x2ab42942780 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x2ab42942760 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x2ab429427c8 <col:27> 'int' 0
|   |   |   |   `-BinaryOperator 0x2ab42942bf8 <line:60:17, col:37> 'double' '*'
|   |   |   |     |-BinaryOperator 0x2ab42942aa8 <col:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x2ab42942958 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x2ab42942930 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x2ab42942910 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x2ab42942898 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x2ab42942828 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x2ab42942878 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x2ab42942850 <line:170:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x2ab42942a88 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x2ab42942a60 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x2ab42942a40 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x2ab429429e8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x2ab42942978 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x2ab429429c8 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x2ab429429a0 <line:170:44> 'int' 16
|   |   |   |     `-ParenExpr 0x2ab42942bd8 <line:60:17, col:37> 'double'
|   |   |   |       `-CStyleCastExpr 0x2ab42942bb0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         `-ParenExpr 0x2ab42942b90 <col:26, col:36> 'unsigned long long'
|   |   |   |           `-BinaryOperator 0x2ab42942b38 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |             |-IntegerLiteral 0x2ab42942ac8 <col:27> 'unsigned long long' 1
|   |   |   |             `-ParenExpr 0x2ab42942b18 <col:33, col:35> 'int'
|   |   |   |               `-IntegerLiteral 0x2ab42942af0 <line:61:19> 'int' 0
|   |   |   `-BinaryOperator 0x2ab42943020 <line:60:17, col:37> 'double' '*'
|   |   |     |-BinaryOperator 0x2ab42942ed0 <col:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x2ab42942d80 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x2ab42942d58 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x2ab42942d38 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x2ab42942ce0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x2ab42942c70 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x2ab42942cc0 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x2ab42942c98 <line:171:36> 'int' 52
|   |   |     | `-ParenExpr 0x2ab42942eb0 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x2ab42942e88 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x2ab42942e68 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x2ab42942e10 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x2ab42942da0 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x2ab42942df0 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x2ab42942dc8 <line:171:44> 'int' 16
|   |   |     `-ParenExpr 0x2ab42943000 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x2ab42942fd8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x2ab42942fb8 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x2ab42942f60 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x2ab42942ef0 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x2ab42942f40 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x2ab42942f18 <line:61:19> 'int' 0
|   |   |-CompoundAssignOperator 0x2ab42943228 <line:172:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x2ab42943128 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab42943110 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429430b8 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429430a0 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab42943080 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429430e8 <col:15> 'int' 0
|   |   | `-ImplicitCastExpr 0x2ab42943210 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x2ab429431f0 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429431d8 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab42943180 <col:21, col:25> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |     |   `-ImplicitCastExpr 0x2ab42943168 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab42943148 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429431b0 <col:27> 'int' 1
|   |   |-BinaryOperator 0x2ab429b5228 <line:174:9, line:60:37> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab42943300 <line:174:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429432e8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab42943290 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab42943278 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab42943258 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429432c0 <col:15> 'int' 3
|   |   | `-BinaryOperator 0x2ab429b5208 <col:20, line:60:37> 'double' '-'
|   |   |   |-ParenExpr 0x2ab429437f0 <line:174:20, col:53> 'double'
|   |   |   | `-BinaryOperator 0x2ab429437d0 <col:21, line:60:37> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x2ab429437b8 <line:174:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x2ab429433c8 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x2ab429433b0 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x2ab42943358 <col:21, col:25> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |   |   |   |   `-ImplicitCastExpr 0x2ab42943340 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x2ab42943320 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x2ab42943388 <col:27> 'int' 2
|   |   |   |   `-BinaryOperator 0x2ab42943798 <line:60:17, col:37> 'double' '*'
|   |   |   |     |-BinaryOperator 0x2ab42943648 <col:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x2ab429434f8 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x2ab429434d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x2ab429434b0 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x2ab42943458 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x2ab429433e8 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x2ab42943438 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x2ab42943410 <line:174:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x2ab42943628 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x2ab42943600 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x2ab429435e0 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x2ab42943588 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x2ab42943518 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x2ab42943568 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x2ab42943540 <line:174:44> 'int' 16
|   |   |   |     `-ParenExpr 0x2ab42943778 <line:60:17, col:37> 'double'
|   |   |   |       `-CStyleCastExpr 0x2ab42943750 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         `-ParenExpr 0x2ab42943730 <col:26, col:36> 'unsigned long long'
|   |   |   |           `-BinaryOperator 0x2ab429436d8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |             |-IntegerLiteral 0x2ab42943668 <col:27> 'unsigned long long' 1
|   |   |   |             `-ParenExpr 0x2ab429436b8 <col:33, col:35> 'int'
|   |   |   |               `-IntegerLiteral 0x2ab42943690 <line:62:20> 'int' 32
|   |   |   `-BinaryOperator 0x2ab429b51e8 <line:60:17, col:37> 'double' '*'
|   |   |     |-BinaryOperator 0x2ab429b5098 <col:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x2ab429b4f48 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x2ab429b4f20 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x2ab429438d8 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x2ab42943880 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x2ab42943810 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x2ab42943860 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x2ab42943838 <line:175:36> 'int' 52
|   |   |     | `-ParenExpr 0x2ab429b5078 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x2ab429b5050 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x2ab429b5030 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x2ab429b4fd8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x2ab429b4f68 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x2ab429b4fb8 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x2ab429b4f90 <line:175:44> 'int' 16
|   |   |     `-ParenExpr 0x2ab429b51c8 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x2ab429b51a0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x2ab429b5180 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x2ab429b5128 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x2ab429b50b8 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x2ab429b5108 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x2ab429b50e0 <line:62:20> 'int' 32
|   |   |-CompoundAssignOperator 0x2ab429b53f0 <line:176:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x2ab429b52f0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b52d8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b5280 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b5268 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b5248 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b52b0 <col:15> 'int' 2
|   |   | `-ImplicitCastExpr 0x2ab429b53d8 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x2ab429b53b8 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429b53a0 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab429b5348 <col:21, col:25> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |     |   `-ImplicitCastExpr 0x2ab429b5330 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab429b5310 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429b5378 <col:27> 'int' 3
|   |   |-BinaryOperator 0x2ab429b4098 <line:178:9, line:63:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab429b54c8 <line:178:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b54b0 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b5458 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b5440 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b5420 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b5488 <col:15> 'int' 5
|   |   | `-BinaryOperator 0x2ab429b4078 <col:20, line:63:30> 'double' '-'
|   |   |   |-ParenExpr 0x2ab429b5b28 <line:178:20, col:53> 'double'
|   |   |   | `-BinaryOperator 0x2ab429b5b08 <col:21, line:63:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x2ab429b5af0 <line:178:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x2ab429b5590 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x2ab429b5578 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x2ab429b5520 <col:21, col:25> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |   |   |   |   `-ImplicitCastExpr 0x2ab429b5508 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x2ab429b54e8 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x2ab429b5550 <col:27> 'int' 4
|   |   |   |   `-BinaryOperator 0x2ab429b5ad0 <line:60:17, line:63:30> 'double' '*'
|   |   |   |     |-BinaryOperator 0x2ab429b5810 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x2ab429b56c0 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x2ab429b5698 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x2ab429b5678 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x2ab429b5620 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x2ab429b55b0 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x2ab429b5600 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x2ab429b55d8 <line:178:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x2ab429b57f0 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x2ab429b57c8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x2ab429b57a8 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x2ab429b5750 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x2ab429b56e0 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x2ab429b5730 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x2ab429b5708 <line:178:44> 'int' 16
|   |   |   |     `-ParenExpr 0x2ab429b5ab0 <line:63:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x2ab429b5a90 <line:60:17, col:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x2ab429b5940 <col:17, col:37> 'double'
|   |   |   |         | `-CStyleCastExpr 0x2ab429b5918 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   `-ParenExpr 0x2ab429b58f8 <col:26, col:36> 'unsigned long long'
|   |   |   |         |     `-BinaryOperator 0x2ab429b58a0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |       |-IntegerLiteral 0x2ab429b5830 <col:27> 'unsigned long long' 1
|   |   |   |         |       `-ParenExpr 0x2ab429b5880 <col:33, col:35> 'int'
|   |   |   |         |         `-IntegerLiteral 0x2ab429b5858 <line:62:20> 'int' 32
|   |   |   |         `-ParenExpr 0x2ab429b5a70 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x2ab429b5a48 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x2ab429b5a28 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x2ab429b59d0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x2ab429b5960 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x2ab429b59b0 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x2ab429b5988 <line:63:27> 'int' 32
|   |   |   `-BinaryOperator 0x2ab429b4058 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-BinaryOperator 0x2ab429b5da8 <line:60:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x2ab429b5c58 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x2ab429b5c30 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x2ab429b5c10 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x2ab429b5bb8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x2ab429b5b48 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x2ab429b5b98 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x2ab429b5b70 <line:179:36> 'int' 52
|   |   |     | `-ParenExpr 0x2ab429b5d88 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x2ab429b5d60 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x2ab429b5d40 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x2ab429b5ce8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x2ab429b5c78 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x2ab429b5cc8 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x2ab429b5ca0 <line:179:44> 'int' 16
|   |   |     `-ParenExpr 0x2ab429b4038 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab429b4018 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429b5ed8 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x2ab429b5eb0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x2ab429b5e90 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x2ab429b5e38 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x2ab429b5dc8 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x2ab429b5e18 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x2ab429b5df0 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x2ab429b3ff8 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429b3fd0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429b3fb0 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429b3f58 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429b5ef8 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429b3f38 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429b3f10 <line:63:27> 'int' 32
|   |   |-CompoundAssignOperator 0x2ab429b4260 <line:180:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x2ab429b4160 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b4148 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b40f0 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b40d8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b40b8 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b4120 <col:15> 'int' 4
|   |   | `-ImplicitCastExpr 0x2ab429b4248 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x2ab429b4228 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429b4210 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab429b41b8 <col:21, col:25> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |     |   `-ImplicitCastExpr 0x2ab429b41a0 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab429b4180 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429b41e8 <col:27> 'int' 5
|   |   |-BinaryOperator 0x2ab429b31f8 <line:182:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab429b4338 <line:182:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b4320 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b42c8 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b42b0 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b4290 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b42f8 <col:15> 'int' 7
|   |   | `-BinaryOperator 0x2ab429b31d8 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x2ab429b4b08 <line:182:20, col:53> 'double'
|   |   |   | `-BinaryOperator 0x2ab429b4ae8 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x2ab429b4ad0 <line:182:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x2ab429b4400 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x2ab429b43e8 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x2ab429b4390 <col:21, col:25> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |   |   |   |   `-ImplicitCastExpr 0x2ab429b4378 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x2ab429b4358 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x2ab429b43c0 <col:27> 'int' 6
|   |   |   |   `-BinaryOperator 0x2ab429b4ab0 <line:60:17, line:64:30> 'double' '*'
|   |   |   |     |-BinaryOperator 0x2ab429b4680 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-ParenExpr 0x2ab429b4530 <col:17, col:37> 'double'
|   |   |   |     | | `-CStyleCastExpr 0x2ab429b4508 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |   `-ParenExpr 0x2ab429b44e8 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |     `-BinaryOperator 0x2ab429b4490 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |       |-IntegerLiteral 0x2ab429b4420 <col:27> 'unsigned long long' 1
|   |   |   |     | |       `-ParenExpr 0x2ab429b4470 <col:33, col:35> 'int'
|   |   |   |     | |         `-IntegerLiteral 0x2ab429b4448 <line:182:36> 'int' 52
|   |   |   |     | `-ParenExpr 0x2ab429b4660 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x2ab429b4638 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x2ab429b4618 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x2ab429b45c0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x2ab429b4550 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x2ab429b45a0 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x2ab429b4578 <line:182:44> 'int' 16
|   |   |   |     `-ParenExpr 0x2ab429b4a90 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x2ab429b4a70 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x2ab429b4920 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x2ab429b4900 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x2ab429b47b0 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x2ab429b4788 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x2ab429b4768 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x2ab429b4710 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x2ab429b46a0 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x2ab429b46f0 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x2ab429b46c8 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x2ab429b48e0 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x2ab429b48b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x2ab429b4898 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x2ab429b4840 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x2ab429b47d0 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x2ab429b4820 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x2ab429b47f8 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x2ab429b4a50 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x2ab429b4a28 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x2ab429b4a08 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x2ab429b49b0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x2ab429b4940 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x2ab429b4990 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x2ab429b4968 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x2ab429b31b8 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-BinaryOperator 0x2ab429b4d88 <line:60:17, col:37> 'double' '*'
|   |   |     | |-ParenExpr 0x2ab429b4c38 <col:17, col:37> 'double'
|   |   |     | | `-CStyleCastExpr 0x2ab429b4c10 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |   `-ParenExpr 0x2ab429b4bf0 <col:26, col:36> 'unsigned long long'
|   |   |     | |     `-BinaryOperator 0x2ab429b4b98 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |       |-IntegerLiteral 0x2ab429b4b28 <col:27> 'unsigned long long' 1
|   |   |     | |       `-ParenExpr 0x2ab429b4b78 <col:33, col:35> 'int'
|   |   |     | |         `-IntegerLiteral 0x2ab429b4b50 <line:183:36> 'int' 52
|   |   |     | `-ParenExpr 0x2ab429b4d68 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x2ab429b4d40 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x2ab429b4d20 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x2ab429b4cc8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x2ab429b4c58 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x2ab429b4ca8 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x2ab429b4c80 <line:183:44> 'int' 16
|   |   |     `-ParenExpr 0x2ab429b3198 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab429b3178 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429b3028 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x2ab429b3008 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x2ab429b4eb8 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x2ab429b4e90 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x2ab429b4e70 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x2ab429b4e18 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x2ab429b4da8 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x2ab429b4df8 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x2ab429b4dd0 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x2ab429b2fe8 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x2ab429b2fc0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x2ab429b2fa0 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x2ab429b2f48 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x2ab429b4ed8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x2ab429b2f28 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x2ab429b2f00 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x2ab429b3158 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429b3130 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429b3110 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429b30b8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429b3048 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429b3098 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429b3070 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x2ab429b33c0 <line:184:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x2ab429b32c0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b32a8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b3250 <col:9, col:13> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b3238 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b3218 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b3280 <col:15> 'int' 6
|   |   | `-ImplicitCastExpr 0x2ab429b33a8 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x2ab429b3388 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429b3370 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab429b3318 <col:21, col:25> 'double [8]' lvalue ->r 0x2ab429380d0
|   |   |     |   `-ImplicitCastExpr 0x2ab429b3300 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab429b32e0 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429b3348 <col:27> 'int' 7
|   |   |-BinaryOperator 0x2ab429b6640 <line:186:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab429b3498 <line:186:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b3480 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b3428 <col:9, col:13> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b3410 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b33f0 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b3458 <col:15> 'int' 1
|   |   | `-BinaryOperator 0x2ab429b6620 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x2ab429b3db8 <line:186:20, col:58> 'double'
|   |   |   | `-BinaryOperator 0x2ab429b3d98 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x2ab429b3d80 <line:186:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x2ab429b3560 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x2ab429b3548 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x2ab429b34f0 <col:21, col:25> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   |   |   |   |   `-ImplicitCastExpr 0x2ab429b34d8 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x2ab429b34b8 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x2ab429b3520 <col:27> 'int' 0
|   |   |   |   `-BinaryOperator 0x2ab429b3d60 <line:60:17, line:64:30> 'double' '/'
|   |   |   |     |-BinaryOperator 0x2ab429b3930 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-BinaryOperator 0x2ab429b37e0 <col:17, col:37> 'double' '*'
|   |   |   |     | | |-ParenExpr 0x2ab429b3690 <col:17, col:37> 'double'
|   |   |   |     | | | `-CStyleCastExpr 0x2ab429b3668 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | | |   `-ParenExpr 0x2ab429b3648 <col:26, col:36> 'unsigned long long'
|   |   |   |     | | |     `-BinaryOperator 0x2ab429b35f0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | | |       |-IntegerLiteral 0x2ab429b3580 <col:27> 'unsigned long long' 1
|   |   |   |     | | |       `-ParenExpr 0x2ab429b35d0 <col:33, col:35> 'int'
|   |   |   |     | | |         `-IntegerLiteral 0x2ab429b35a8 <line:186:36> 'int' 52
|   |   |   |     | | `-ParenExpr 0x2ab429b37c0 <line:60:17, col:37> 'double'
|   |   |   |     | |   `-CStyleCastExpr 0x2ab429b3798 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |     `-ParenExpr 0x2ab429b3778 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |       `-BinaryOperator 0x2ab429b3720 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |         |-IntegerLiteral 0x2ab429b36b0 <col:27> 'unsigned long long' 1
|   |   |   |     | |         `-ParenExpr 0x2ab429b3700 <col:33, col:35> 'int'
|   |   |   |     | |           `-IntegerLiteral 0x2ab429b36d8 <line:186:44> 'int' 16
|   |   |   |     | `-ParenExpr 0x2ab429b3910 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x2ab429b38e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x2ab429b38c8 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x2ab429b3870 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x2ab429b3800 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x2ab429b3850 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x2ab429b3828 <line:61:19> 'int' 0
|   |   |   |     `-ParenExpr 0x2ab429b3d40 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x2ab429b3d20 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x2ab429b3bd0 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x2ab429b3bb0 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x2ab429b3a60 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x2ab429b3a38 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x2ab429b3a18 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x2ab429b39c0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x2ab429b3950 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x2ab429b39a0 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x2ab429b3978 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x2ab429b3b90 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x2ab429b3b68 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x2ab429b3b48 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x2ab429b3af0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x2ab429b3a80 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x2ab429b3ad0 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x2ab429b3aa8 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x2ab429b3d00 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x2ab429b3cd8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x2ab429b3cb8 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x2ab429b3c60 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x2ab429b3bf0 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x2ab429b3c40 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x2ab429b3c18 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x2ab429b6600 <line:60:17, line:64:30> 'double' '/'
|   |   |     |-BinaryOperator 0x2ab429b61d0 <line:60:17, col:37> 'double' '*'
|   |   |     | |-BinaryOperator 0x2ab429b6080 <col:17, col:37> 'double' '*'
|   |   |     | | |-ParenExpr 0x2ab429b5f30 <col:17, col:37> 'double'
|   |   |     | | | `-CStyleCastExpr 0x2ab429b3ec0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | | |   `-ParenExpr 0x2ab429b3ea0 <col:26, col:36> 'unsigned long long'
|   |   |     | | |     `-BinaryOperator 0x2ab429b3e48 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | | |       |-IntegerLiteral 0x2ab429b3dd8 <col:27> 'unsigned long long' 1
|   |   |     | | |       `-ParenExpr 0x2ab429b3e28 <col:33, col:35> 'int'
|   |   |     | | |         `-IntegerLiteral 0x2ab429b3e00 <line:187:36> 'int' 52
|   |   |     | | `-ParenExpr 0x2ab429b6060 <line:60:17, col:37> 'double'
|   |   |     | |   `-CStyleCastExpr 0x2ab429b6038 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |     `-ParenExpr 0x2ab429b6018 <col:26, col:36> 'unsigned long long'
|   |   |     | |       `-BinaryOperator 0x2ab429b5fc0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |         |-IntegerLiteral 0x2ab429b5f50 <col:27> 'unsigned long long' 1
|   |   |     | |         `-ParenExpr 0x2ab429b5fa0 <col:33, col:35> 'int'
|   |   |     | |           `-IntegerLiteral 0x2ab429b5f78 <line:187:44> 'int' 16
|   |   |     | `-ParenExpr 0x2ab429b61b0 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x2ab429b6188 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x2ab429b6168 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x2ab429b6110 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x2ab429b60a0 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x2ab429b60f0 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x2ab429b60c8 <line:61:19> 'int' 0
|   |   |     `-ParenExpr 0x2ab429b65e0 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab429b65c0 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429b6470 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x2ab429b6450 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x2ab429b6300 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x2ab429b62d8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x2ab429b62b8 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x2ab429b6260 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x2ab429b61f0 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x2ab429b6240 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x2ab429b6218 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x2ab429b6430 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x2ab429b6408 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x2ab429b63e8 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x2ab429b6390 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x2ab429b6320 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x2ab429b6370 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x2ab429b6348 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x2ab429b65a0 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429b6578 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429b6558 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429b6500 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429b6490 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429b64e0 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429b64b8 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x2ab429b6808 <line:188:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x2ab429b6708 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b66f0 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b6698 <col:9, col:13> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b6680 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b6660 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b66c8 <col:15> 'int' 0
|   |   | `-ImplicitCastExpr 0x2ab429b67f0 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x2ab429b67d0 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429b67b8 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab429b6760 <col:21, col:25> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   |     |   `-ImplicitCastExpr 0x2ab429b6748 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab429b6728 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429b6790 <col:27> 'int' 1
|   |   |-BinaryOperator 0x2ab429b1a08 <line:190:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab429b68e0 <line:190:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b68c8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b6870 <col:9, col:13> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b6858 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b6838 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b68a0 <col:15> 'int' 3
|   |   | `-BinaryOperator 0x2ab429b19e8 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x2ab429b11c8 <line:190:20, col:59> 'double'
|   |   |   | `-BinaryOperator 0x2ab429b11a8 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x2ab429b1190 <line:190:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x2ab429b69a8 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x2ab429b6990 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x2ab429b6938 <col:21, col:25> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   |   |   |   |   `-ImplicitCastExpr 0x2ab429b6920 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x2ab429b6900 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x2ab429b6968 <col:27> 'int' 2
|   |   |   |   `-BinaryOperator 0x2ab429b1170 <line:60:17, line:64:30> 'double' '/'
|   |   |   |     |-BinaryOperator 0x2ab429b6d78 <line:60:17, col:37> 'double' '*'
|   |   |   |     | |-BinaryOperator 0x2ab429b6c28 <col:17, col:37> 'double' '*'
|   |   |   |     | | |-ParenExpr 0x2ab429b6ad8 <col:17, col:37> 'double'
|   |   |   |     | | | `-CStyleCastExpr 0x2ab429b6ab0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | | |   `-ParenExpr 0x2ab429b6a90 <col:26, col:36> 'unsigned long long'
|   |   |   |     | | |     `-BinaryOperator 0x2ab429b6a38 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | | |       |-IntegerLiteral 0x2ab429b69c8 <col:27> 'unsigned long long' 1
|   |   |   |     | | |       `-ParenExpr 0x2ab429b6a18 <col:33, col:35> 'int'
|   |   |   |     | | |         `-IntegerLiteral 0x2ab429b69f0 <line:190:36> 'int' 52
|   |   |   |     | | `-ParenExpr 0x2ab429b6c08 <line:60:17, col:37> 'double'
|   |   |   |     | |   `-CStyleCastExpr 0x2ab429b6be0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |     `-ParenExpr 0x2ab429b6bc0 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |       `-BinaryOperator 0x2ab429b6b68 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |         |-IntegerLiteral 0x2ab429b6af8 <col:27> 'unsigned long long' 1
|   |   |   |     | |         `-ParenExpr 0x2ab429b6b48 <col:33, col:35> 'int'
|   |   |   |     | |           `-IntegerLiteral 0x2ab429b6b20 <line:190:44> 'int' 16
|   |   |   |     | `-ParenExpr 0x2ab429b6d58 <line:60:17, col:37> 'double'
|   |   |   |     |   `-CStyleCastExpr 0x2ab429b6d30 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     `-ParenExpr 0x2ab429b6d10 <col:26, col:36> 'unsigned long long'
|   |   |   |     |       `-BinaryOperator 0x2ab429b6cb8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |         |-IntegerLiteral 0x2ab429b6c48 <col:27> 'unsigned long long' 1
|   |   |   |     |         `-ParenExpr 0x2ab429b6c98 <col:33, col:35> 'int'
|   |   |   |     |           `-IntegerLiteral 0x2ab429b6c70 <line:62:20> 'int' 32
|   |   |   |     `-ParenExpr 0x2ab429b1150 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x2ab429b1130 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x2ab429b0fe0 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x2ab429b0fc0 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x2ab429b6ea8 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x2ab429b6e80 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x2ab429b6e60 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x2ab429b6e08 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x2ab429b6d98 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x2ab429b6de8 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x2ab429b6dc0 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x2ab429b0fa0 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x2ab429b0f78 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x2ab429b0f58 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x2ab429b0f00 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x2ab429b6ec8 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x2ab429b0ee0 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x2ab429b6ef0 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x2ab429b1110 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x2ab429b10e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x2ab429b10c8 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x2ab429b1070 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x2ab429b1000 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x2ab429b1050 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x2ab429b1028 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x2ab429b19c8 <line:60:17, line:64:30> 'double' '/'
|   |   |     |-BinaryOperator 0x2ab429b1598 <line:60:17, col:37> 'double' '*'
|   |   |     | |-BinaryOperator 0x2ab429b1448 <col:17, col:37> 'double' '*'
|   |   |     | | |-ParenExpr 0x2ab429b12f8 <col:17, col:37> 'double'
|   |   |     | | | `-CStyleCastExpr 0x2ab429b12d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | | |   `-ParenExpr 0x2ab429b12b0 <col:26, col:36> 'unsigned long long'
|   |   |     | | |     `-BinaryOperator 0x2ab429b1258 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | | |       |-IntegerLiteral 0x2ab429b11e8 <col:27> 'unsigned long long' 1
|   |   |     | | |       `-ParenExpr 0x2ab429b1238 <col:33, col:35> 'int'
|   |   |     | | |         `-IntegerLiteral 0x2ab429b1210 <line:191:36> 'int' 52
|   |   |     | | `-ParenExpr 0x2ab429b1428 <line:60:17, col:37> 'double'
|   |   |     | |   `-CStyleCastExpr 0x2ab429b1400 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |     `-ParenExpr 0x2ab429b13e0 <col:26, col:36> 'unsigned long long'
|   |   |     | |       `-BinaryOperator 0x2ab429b1388 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |         |-IntegerLiteral 0x2ab429b1318 <col:27> 'unsigned long long' 1
|   |   |     | |         `-ParenExpr 0x2ab429b1368 <col:33, col:35> 'int'
|   |   |     | |           `-IntegerLiteral 0x2ab429b1340 <line:191:44> 'int' 16
|   |   |     | `-ParenExpr 0x2ab429b1578 <line:60:17, col:37> 'double'
|   |   |     |   `-CStyleCastExpr 0x2ab429b1550 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     `-ParenExpr 0x2ab429b1530 <col:26, col:36> 'unsigned long long'
|   |   |     |       `-BinaryOperator 0x2ab429b14d8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |         |-IntegerLiteral 0x2ab429b1468 <col:27> 'unsigned long long' 1
|   |   |     |         `-ParenExpr 0x2ab429b14b8 <col:33, col:35> 'int'
|   |   |     |           `-IntegerLiteral 0x2ab429b1490 <line:62:20> 'int' 32
|   |   |     `-ParenExpr 0x2ab429b19a8 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab429b1988 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429b1838 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x2ab429b1818 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x2ab429b16c8 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x2ab429b16a0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x2ab429b1680 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x2ab429b1628 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x2ab429b15b8 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x2ab429b1608 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x2ab429b15e0 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x2ab429b17f8 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x2ab429b17d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x2ab429b17b0 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x2ab429b1758 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x2ab429b16e8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x2ab429b1738 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x2ab429b1710 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x2ab429b1968 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429b1940 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429b1920 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429b18c8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429b1858 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429b18a8 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429b1880 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x2ab429b1bd0 <line:192:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x2ab429b1ad0 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b1ab8 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b1a60 <col:9, col:13> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b1a48 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b1a28 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b1a90 <col:15> 'int' 2
|   |   | `-ImplicitCastExpr 0x2ab429b1bb8 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x2ab429b1b98 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429b1b80 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab429b1b28 <col:21, col:25> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   |     |   `-ImplicitCastExpr 0x2ab429b1b10 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab429b1af0 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429b1b58 <col:27> 'int' 3
|   |   |-BinaryOperator 0x2ab429b9198 <line:194:9, line:64:30> 'double' '='
|   |   | |-ArraySubscriptExpr 0x2ab429b1ca8 <line:194:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b1c90 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b1c38 <col:9, col:13> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b1c20 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b1c00 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b1c68 <col:15> 'int' 5
|   |   | `-BinaryOperator 0x2ab429b9178 <col:20, line:64:30> 'double' '-'
|   |   |   |-ParenExpr 0x2ab429b87c8 <line:194:20, col:59> 'double'
|   |   |   | `-BinaryOperator 0x2ab429b87a8 <col:21, line:64:30> 'double' '+'
|   |   |   |   |-ImplicitCastExpr 0x2ab429b8790 <line:194:21, col:28> 'double' <LValueToRValue>
|   |   |   |   | `-ArraySubscriptExpr 0x2ab429b1d70 <col:21, col:28> 'double' lvalue
|   |   |   |   |   |-ImplicitCastExpr 0x2ab429b1d58 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |   |   |   | `-MemberExpr 0x2ab429b1d00 <col:21, col:25> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   |   |   |   |   `-ImplicitCastExpr 0x2ab429b1ce8 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x2ab429b1cc8 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |   |   |   `-IntegerLiteral 0x2ab429b1d30 <col:27> 'int' 4
|   |   |   |   `-BinaryOperator 0x2ab429b8770 <line:60:17, line:64:30> 'double' '/'
|   |   |   |     |-BinaryOperator 0x2ab429b8340 <line:60:17, line:63:30> 'double' '*'
|   |   |   |     | |-BinaryOperator 0x2ab429b8080 <line:60:17, col:37> 'double' '*'
|   |   |   |     | | |-ParenExpr 0x2ab429b1ea0 <col:17, col:37> 'double'
|   |   |   |     | | | `-CStyleCastExpr 0x2ab429b1e78 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | | |   `-ParenExpr 0x2ab429b1e58 <col:26, col:36> 'unsigned long long'
|   |   |   |     | | |     `-BinaryOperator 0x2ab429b1e00 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | | |       |-IntegerLiteral 0x2ab429b1d90 <col:27> 'unsigned long long' 1
|   |   |   |     | | |       `-ParenExpr 0x2ab429b1de0 <col:33, col:35> 'int'
|   |   |   |     | | |         `-IntegerLiteral 0x2ab429b1db8 <line:194:36> 'int' 52
|   |   |   |     | | `-ParenExpr 0x2ab429b8060 <line:60:17, col:37> 'double'
|   |   |   |     | |   `-CStyleCastExpr 0x2ab429b8038 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     | |     `-ParenExpr 0x2ab429b8018 <col:26, col:36> 'unsigned long long'
|   |   |   |     | |       `-BinaryOperator 0x2ab429b7fc0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     | |         |-IntegerLiteral 0x2ab429b7f50 <col:27> 'unsigned long long' 1
|   |   |   |     | |         `-ParenExpr 0x2ab429b7fa0 <col:33, col:35> 'int'
|   |   |   |     | |           `-IntegerLiteral 0x2ab429b7f78 <line:194:44> 'int' 16
|   |   |   |     | `-ParenExpr 0x2ab429b8320 <line:63:16, col:30> 'double'
|   |   |   |     |   `-BinaryOperator 0x2ab429b8300 <line:60:17, col:37> 'double' '*'
|   |   |   |     |     |-ParenExpr 0x2ab429b81b0 <col:17, col:37> 'double'
|   |   |   |     |     | `-CStyleCastExpr 0x2ab429b8188 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |     |   `-ParenExpr 0x2ab429b8168 <col:26, col:36> 'unsigned long long'
|   |   |   |     |     |     `-BinaryOperator 0x2ab429b8110 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |     |       |-IntegerLiteral 0x2ab429b80a0 <col:27> 'unsigned long long' 1
|   |   |   |     |     |       `-ParenExpr 0x2ab429b80f0 <col:33, col:35> 'int'
|   |   |   |     |     |         `-IntegerLiteral 0x2ab429b80c8 <line:62:20> 'int' 32
|   |   |   |     |     `-ParenExpr 0x2ab429b82e0 <line:60:17, col:37> 'double'
|   |   |   |     |       `-CStyleCastExpr 0x2ab429b82b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |     |         `-ParenExpr 0x2ab429b8298 <col:26, col:36> 'unsigned long long'
|   |   |   |     |           `-BinaryOperator 0x2ab429b8240 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |     |             |-IntegerLiteral 0x2ab429b81d0 <col:27> 'unsigned long long' 1
|   |   |   |     |             `-ParenExpr 0x2ab429b8220 <col:33, col:35> 'int'
|   |   |   |     |               `-IntegerLiteral 0x2ab429b81f8 <line:63:27> 'int' 32
|   |   |   |     `-ParenExpr 0x2ab429b8750 <line:64:16, col:30> 'double'
|   |   |   |       `-BinaryOperator 0x2ab429b8730 <line:63:16, line:60:37> 'double' '*'
|   |   |   |         |-ParenExpr 0x2ab429b85e0 <line:63:16, col:30> 'double'
|   |   |   |         | `-BinaryOperator 0x2ab429b85c0 <line:60:17, col:37> 'double' '*'
|   |   |   |         |   |-ParenExpr 0x2ab429b8470 <col:17, col:37> 'double'
|   |   |   |         |   | `-CStyleCastExpr 0x2ab429b8448 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |   |   `-ParenExpr 0x2ab429b8428 <col:26, col:36> 'unsigned long long'
|   |   |   |         |   |     `-BinaryOperator 0x2ab429b83d0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |   |       |-IntegerLiteral 0x2ab429b8360 <col:27> 'unsigned long long' 1
|   |   |   |         |   |       `-ParenExpr 0x2ab429b83b0 <col:33, col:35> 'int'
|   |   |   |         |   |         `-IntegerLiteral 0x2ab429b8388 <line:62:20> 'int' 32
|   |   |   |         |   `-ParenExpr 0x2ab429b85a0 <line:60:17, col:37> 'double'
|   |   |   |         |     `-CStyleCastExpr 0x2ab429b8578 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |         |       `-ParenExpr 0x2ab429b8558 <col:26, col:36> 'unsigned long long'
|   |   |   |         |         `-BinaryOperator 0x2ab429b8500 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |         |           |-IntegerLiteral 0x2ab429b8490 <col:27> 'unsigned long long' 1
|   |   |   |         |           `-ParenExpr 0x2ab429b84e0 <col:33, col:35> 'int'
|   |   |   |         |             `-IntegerLiteral 0x2ab429b84b8 <line:63:27> 'int' 32
|   |   |   |         `-ParenExpr 0x2ab429b8710 <line:60:17, col:37> 'double'
|   |   |   |           `-CStyleCastExpr 0x2ab429b86e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |   |             `-ParenExpr 0x2ab429b86c8 <col:26, col:36> 'unsigned long long'
|   |   |   |               `-BinaryOperator 0x2ab429b8670 <col:27, col:35> 'unsigned long long' '<<'
|   |   |   |                 |-IntegerLiteral 0x2ab429b8600 <col:27> 'unsigned long long' 1
|   |   |   |                 `-ParenExpr 0x2ab429b8650 <col:33, col:35> 'int'
|   |   |   |                   `-IntegerLiteral 0x2ab429b8628 <line:64:27> 'int' 32
|   |   |   `-BinaryOperator 0x2ab429b9158 <line:60:17, line:64:30> 'double' '/'
|   |   |     |-BinaryOperator 0x2ab429b8d08 <line:60:17, line:63:30> 'double' '*'
|   |   |     | |-BinaryOperator 0x2ab429b8a48 <line:60:17, col:37> 'double' '*'
|   |   |     | | |-ParenExpr 0x2ab429b88f8 <col:17, col:37> 'double'
|   |   |     | | | `-CStyleCastExpr 0x2ab429b88d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | | |   `-ParenExpr 0x2ab429b88b0 <col:26, col:36> 'unsigned long long'
|   |   |     | | |     `-BinaryOperator 0x2ab429b8858 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | | |       |-IntegerLiteral 0x2ab429b87e8 <col:27> 'unsigned long long' 1
|   |   |     | | |       `-ParenExpr 0x2ab429b8838 <col:33, col:35> 'int'
|   |   |     | | |         `-IntegerLiteral 0x2ab429b8810 <line:195:36> 'int' 52
|   |   |     | | `-ParenExpr 0x2ab429b8a28 <line:60:17, col:37> 'double'
|   |   |     | |   `-CStyleCastExpr 0x2ab429b8a00 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     | |     `-ParenExpr 0x2ab429b89e0 <col:26, col:36> 'unsigned long long'
|   |   |     | |       `-BinaryOperator 0x2ab429b8988 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     | |         |-IntegerLiteral 0x2ab429b8918 <col:27> 'unsigned long long' 1
|   |   |     | |         `-ParenExpr 0x2ab429b8968 <col:33, col:35> 'int'
|   |   |     | |           `-IntegerLiteral 0x2ab429b8940 <line:195:44> 'int' 16
|   |   |     | `-ParenExpr 0x2ab429b8ce8 <line:63:16, col:30> 'double'
|   |   |     |   `-BinaryOperator 0x2ab429b8cc8 <line:60:17, col:37> 'double' '*'
|   |   |     |     |-ParenExpr 0x2ab429b8b78 <col:17, col:37> 'double'
|   |   |     |     | `-CStyleCastExpr 0x2ab429b8b50 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |     |   `-ParenExpr 0x2ab429b8b30 <col:26, col:36> 'unsigned long long'
|   |   |     |     |     `-BinaryOperator 0x2ab429b8ad8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |     |       |-IntegerLiteral 0x2ab429b8a68 <col:27> 'unsigned long long' 1
|   |   |     |     |       `-ParenExpr 0x2ab429b8ab8 <col:33, col:35> 'int'
|   |   |     |     |         `-IntegerLiteral 0x2ab429b8a90 <line:62:20> 'int' 32
|   |   |     |     `-ParenExpr 0x2ab429b8ca8 <line:60:17, col:37> 'double'
|   |   |     |       `-CStyleCastExpr 0x2ab429b8c80 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |         `-ParenExpr 0x2ab429b8c60 <col:26, col:36> 'unsigned long long'
|   |   |     |           `-BinaryOperator 0x2ab429b8c08 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |             |-IntegerLiteral 0x2ab429b8b98 <col:27> 'unsigned long long' 1
|   |   |     |             `-ParenExpr 0x2ab429b8be8 <col:33, col:35> 'int'
|   |   |     |               `-IntegerLiteral 0x2ab429b8bc0 <line:63:27> 'int' 32
|   |   |     `-ParenExpr 0x2ab429b9138 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab429b9118 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429b8fc8 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x2ab429b8fa8 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x2ab429b8e38 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x2ab429b8e10 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x2ab429b8df0 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x2ab429b8d98 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x2ab429b8d28 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x2ab429b8d78 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x2ab429b8d50 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x2ab429b8f88 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x2ab429b8f60 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x2ab429b8f20 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x2ab429b8ec8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x2ab429b8e58 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x2ab429b8ea8 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x2ab429b8e80 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x2ab429b90f8 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429b90d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429b90b0 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429b9058 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429b8fe8 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429b9038 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429b9010 <line:64:27> 'int' 32
|   |   |-CompoundAssignOperator 0x2ab429b9360 <line:196:9, col:28> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'
|   |   | |-ArraySubscriptExpr 0x2ab429b9260 <col:9, col:16> 'double' lvalue
|   |   | | |-ImplicitCastExpr 0x2ab429b9248 <col:9, col:13> 'double *' <ArrayToPointerDecay>
|   |   | | | `-MemberExpr 0x2ab429b91f0 <col:9, col:13> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   | | |   `-ImplicitCastExpr 0x2ab429b91d8 <col:9> 'poly1305_internal *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x2ab429b91b8 <col:9> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   | | `-IntegerLiteral 0x2ab429b9220 <col:15> 'int' 4
|   |   | `-ImplicitCastExpr 0x2ab429b9348 <col:21, col:28> 'double' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x2ab429b9328 <col:21, col:28> 'double' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429b9310 <col:21, col:25> 'double *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab429b92b8 <col:21, col:25> 'double [6]' lvalue ->s 0x2ab429381d0
|   |   |     |   `-ImplicitCastExpr 0x2ab429b92a0 <col:21> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab429b9280 <col:21> 'poly1305_internal *' lvalue Var 0x2ab42943920 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429b92e8 <col:27> 'int' 5
|   |   `-GCCAsmStmt 0x2ab429b93f8 <line:202:9, col:52>
|   |     `-DeclRefExpr 0x2ab429b93d8 <col:41> 'u32':'unsigned int' lvalue Var 0x2ab42944730 'mxcsr_orig' 'u32':'unsigned int'
|   `-ReturnStmt 0x2ab429b95a0 <line:212:5, col:12>
|     `-IntegerLiteral 0x2ab429b9578 <col:12> 'int' 0
|-FunctionDecl 0x2ab429b9938 <line:215:1, line:412:1> line:215:6 poly1305_blocks 'void (void *, const unsigned char *, size_t, int)'
| |-ParmVarDecl 0x2ab429b9618 <col:22, col:28> col:28 used ctx 'void *'
| |-ParmVarDecl 0x2ab429b9698 <col:33, col:54> col:54 used inp 'const unsigned char *'
| |-ParmVarDecl 0x2ab429b9710 <col:59, col:66> col:66 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2ab429b9790 <line:216:22, col:26> col:26 used padbit 'int'
| `-CompoundStmt 0x2ab429d3d98 <line:217:1, line:412:1>
|   |-DeclStmt 0x2ab429b9af8 <line:218:5, col:53>
|   | `-VarDecl 0x2ab429b9a20 <col:5, col:50> col:24 used st 'poly1305_internal *' cinit
|   |   `-CStyleCastExpr 0x2ab429b9ad0 <col:29, col:50> 'poly1305_internal *' <BitCast>
|   |     `-ImplicitCastExpr 0x2ab429b9ab8 <col:50> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x2ab429b9a88 <col:50> 'void *' lvalue ParmVar 0x2ab429b9618 'ctx' 'void *'
|   |-DeclStmt 0x2ab429b9d18 <line:219:5, col:30>
|   | |-VarDecl 0x2ab429b9b20 <col:5, col:12> col:12 used in0 'elem64':'elem64'
|   | |-VarDecl 0x2ab429b9b98 <col:5, col:17> col:17 used in1 'elem64':'elem64'
|   | |-VarDecl 0x2ab429b9c10 <col:5, col:22> col:22 used in2 'elem64':'elem64'
|   | `-VarDecl 0x2ab429b9c88 <col:5, col:27> col:27 used in3 'elem64':'elem64'
|   |-DeclStmt 0x2ab429b9e60 <line:220:5, col:30>
|   | `-VarDecl 0x2ab429b9d40 <col:5, col:28> col:9 used pad 'u64':'unsigned long long' cinit
|   |   `-BinaryOperator 0x2ab429b9e40 <col:15, col:28> 'u64':'unsigned long long' '<<'
|   |     |-CStyleCastExpr 0x2ab429b9df0 <col:15, col:20> 'u64':'unsigned long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x2ab429b9dd8 <col:20> 'int' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x2ab429b9da8 <col:20> 'int' lvalue ParmVar 0x2ab429b9790 'padbit' 'int'
|   |     `-IntegerLiteral 0x2ab429b9e18 <col:28> 'int' 32
|   |-DeclStmt 0x2ab429b2080 <line:222:5, col:26>
|   | |-VarDecl 0x2ab429b9e90 <col:5, col:12> col:12 used x0 'double'
|   | |-VarDecl 0x2ab429b1ef0 <col:5, col:16> col:16 used x1 'double'
|   | |-VarDecl 0x2ab429b1f70 <col:5, col:20> col:20 used x2 'double'
|   | `-VarDecl 0x2ab429b1ff0 <col:5, col:24> col:24 used x3 'double'
|   |-DeclStmt 0x2ab429b24e0 <line:223:5, col:58>
|   | |-VarDecl 0x2ab429b20b0 <col:5, col:12> col:12 used h0lo 'double'
|   | |-VarDecl 0x2ab429b2130 <col:5, col:18> col:18 used h0hi 'double'
|   | |-VarDecl 0x2ab429b21b0 <col:5, col:24> col:24 used h1lo 'double'
|   | |-VarDecl 0x2ab429b2230 <col:5, col:30> col:30 used h1hi 'double'
|   | |-VarDecl 0x2ab429b22b0 <col:5, col:36> col:36 used h2lo 'double'
|   | |-VarDecl 0x2ab429b2330 <col:5, col:42> col:42 used h2hi 'double'
|   | |-VarDecl 0x2ab429b23b0 <col:5, col:48> col:48 used h3lo 'double'
|   | `-VarDecl 0x2ab429b2430 <col:5, col:54> col:54 used h3hi 'double'
|   |-DeclStmt 0x2ab429b2940 <line:224:5, col:58>
|   | |-VarDecl 0x2ab429b2510 <col:5, col:12> col:12 used c0lo 'double'
|   | |-VarDecl 0x2ab429b2590 <col:5, col:18> col:18 used c0hi 'double'
|   | |-VarDecl 0x2ab429b2610 <col:5, col:24> col:24 used c1lo 'double'
|   | |-VarDecl 0x2ab429b2690 <col:5, col:30> col:30 used c1hi 'double'
|   | |-VarDecl 0x2ab429b2710 <col:5, col:36> col:36 used c2lo 'double'
|   | |-VarDecl 0x2ab429b2790 <col:5, col:42> col:42 used c2hi 'double'
|   | |-VarDecl 0x2ab429b2810 <col:5, col:48> col:48 used c3lo 'double'
|   | `-VarDecl 0x2ab429b2890 <col:5, col:54> col:54 used c3hi 'double'
|   |-DeclStmt 0x2ab429b2ad0 <line:226:5, col:33>
|   | `-VarDecl 0x2ab429b2970 <col:5, col:32> col:18 used r0lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429b2ab8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429b2a98 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429b2a80 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429b2a28 <col:25, col:29> 'double [8]' lvalue ->r 0x2ab429380d0
|   |       |   `-ImplicitCastExpr 0x2ab429b2a10 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429b29d8 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429b2a58 <col:31> 'int' 0
|   |-DeclStmt 0x2ab429b2c48 <line:227:5, col:33>
|   | `-VarDecl 0x2ab429b2b00 <col:5, col:32> col:18 used r0hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429b2c30 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429b2c10 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429b2bf8 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429b2ba0 <col:25, col:29> 'double [8]' lvalue ->r 0x2ab429380d0
|   |       |   `-ImplicitCastExpr 0x2ab429b2b88 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429b2b68 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429b2bd0 <col:31> 'int' 1
|   |-DeclStmt 0x2ab429b2dc0 <line:228:5, col:33>
|   | `-VarDecl 0x2ab429b2c78 <col:5, col:32> col:18 used r1lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429b2da8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429b2d88 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429b2d70 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429b2d18 <col:25, col:29> 'double [8]' lvalue ->r 0x2ab429380d0
|   |       |   `-ImplicitCastExpr 0x2ab429b2d00 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429b2ce0 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429b2d48 <col:31> 'int' 2
|   |-DeclStmt 0x2ab429be000 <line:229:5, col:33>
|   | `-VarDecl 0x2ab429b2df0 <col:5, col:32> col:18 used r1hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429bdfe8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429bdfc8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429bdfb0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429b2e90 <col:25, col:29> 'double [8]' lvalue ->r 0x2ab429380d0
|   |       |   `-ImplicitCastExpr 0x2ab429b2e78 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429b2e58 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429b2ec0 <col:31> 'int' 3
|   |-DeclStmt 0x2ab429be178 <line:230:5, col:33>
|   | `-VarDecl 0x2ab429be030 <col:5, col:32> col:18 used r2lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429be160 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429be140 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429be128 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429be0d0 <col:25, col:29> 'double [8]' lvalue ->r 0x2ab429380d0
|   |       |   `-ImplicitCastExpr 0x2ab429be0b8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429be098 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429be100 <col:31> 'int' 4
|   |-DeclStmt 0x2ab429be2f0 <line:231:5, col:33>
|   | `-VarDecl 0x2ab429be1a8 <col:5, col:32> col:18 used r2hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429be2d8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429be2b8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429be2a0 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429be248 <col:25, col:29> 'double [8]' lvalue ->r 0x2ab429380d0
|   |       |   `-ImplicitCastExpr 0x2ab429be230 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429be210 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429be278 <col:31> 'int' 5
|   |-DeclStmt 0x2ab429be468 <line:232:5, col:33>
|   | `-VarDecl 0x2ab429be320 <col:5, col:32> col:18 used r3lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429be450 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429be430 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429be418 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429be3c0 <col:25, col:29> 'double [8]' lvalue ->r 0x2ab429380d0
|   |       |   `-ImplicitCastExpr 0x2ab429be3a8 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429be388 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429be3f0 <col:31> 'int' 6
|   |-DeclStmt 0x2ab429be5e0 <line:233:5, col:33>
|   | `-VarDecl 0x2ab429be498 <col:5, col:32> col:18 used r3hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429be5c8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429be5a8 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429be590 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429be538 <col:25, col:29> 'double [8]' lvalue ->r 0x2ab429380d0
|   |       |   `-ImplicitCastExpr 0x2ab429be520 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429be500 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429be568 <col:31> 'int' 7
|   |-DeclStmt 0x2ab429be758 <line:235:5, col:33>
|   | `-VarDecl 0x2ab429be610 <col:5, col:32> col:18 used s1lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429be740 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429be720 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429be708 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429be6b0 <col:25, col:29> 'double [6]' lvalue ->s 0x2ab429381d0
|   |       |   `-ImplicitCastExpr 0x2ab429be698 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429be678 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429be6e0 <col:31> 'int' 0
|   |-DeclStmt 0x2ab429be8d0 <line:236:5, col:33>
|   | `-VarDecl 0x2ab429be788 <col:5, col:32> col:18 used s1hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429be8b8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429be898 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429be880 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429be828 <col:25, col:29> 'double [6]' lvalue ->s 0x2ab429381d0
|   |       |   `-ImplicitCastExpr 0x2ab429be810 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429be7f0 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429be858 <col:31> 'int' 1
|   |-DeclStmt 0x2ab429bea48 <line:237:5, col:33>
|   | `-VarDecl 0x2ab429be900 <col:5, col:32> col:18 used s2lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429bea30 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429bea10 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429be9f8 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429be9a0 <col:25, col:29> 'double [6]' lvalue ->s 0x2ab429381d0
|   |       |   `-ImplicitCastExpr 0x2ab429be988 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429be968 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429be9d0 <col:31> 'int' 2
|   |-DeclStmt 0x2ab429bebc0 <line:238:5, col:33>
|   | `-VarDecl 0x2ab429bea78 <col:5, col:32> col:18 used s2hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429beba8 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429beb88 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429beb70 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429beb18 <col:25, col:29> 'double [6]' lvalue ->s 0x2ab429381d0
|   |       |   `-ImplicitCastExpr 0x2ab429beb00 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429beae0 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429beb48 <col:31> 'int' 3
|   |-DeclStmt 0x2ab429bed38 <line:239:5, col:33>
|   | `-VarDecl 0x2ab429bebf0 <col:5, col:32> col:18 used s3lo 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429bed20 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429bed00 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429bece8 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429bec90 <col:25, col:29> 'double [6]' lvalue ->s 0x2ab429381d0
|   |       |   `-ImplicitCastExpr 0x2ab429bec78 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429bec58 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429becc0 <col:31> 'int' 4
|   |-DeclStmt 0x2ab429beeb0 <line:240:5, col:33>
|   | `-VarDecl 0x2ab429bed68 <col:5, col:32> col:18 used s3hi 'const double' cinit
|   |   `-ImplicitCastExpr 0x2ab429bee98 <col:25, col:32> 'double' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x2ab429bee78 <col:25, col:32> 'double' lvalue
|   |       |-ImplicitCastExpr 0x2ab429bee60 <col:25, col:29> 'double *' <ArrayToPointerDecay>
|   |       | `-MemberExpr 0x2ab429bee08 <col:25, col:29> 'double [6]' lvalue ->s 0x2ab429381d0
|   |       |   `-ImplicitCastExpr 0x2ab429bedf0 <col:25> 'poly1305_internal *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2ab429bedd0 <col:25> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |       `-IntegerLiteral 0x2ab429bee38 <col:31> 'int' 5
|   |-DeclStmt 0x2ab429bef40 <line:246:5, col:19>
|   | `-VarDecl 0x2ab429beed8 <col:5, col:9> col:9 used mxcsr_orig 'u32':'unsigned int'
|   |-GCCAsmStmt 0x2ab429bbfc8 <line:248:5, col:48>
|   | `-DeclRefExpr 0x2ab429bbf90 <col:37> 'u32':'unsigned int' lvalue Var 0x2ab429beed8 'mxcsr_orig' 'u32':'unsigned int'
|   |-GCCAsmStmt 0x2ab429bc0a0 <line:249:5, col:43>
|   | `-DeclRefExpr 0x2ab429bc080 <col:37> 'const u32':'const unsigned int' lvalue Var 0x2ab42938330 'mxcsr' 'const u32':'const unsigned int'
|   |-BinaryOperator 0x2ab429bc4f8 <line:270:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x2ab429bc110 <line:270:5> 'double' lvalue Var 0x2ab429b20b0 'h0lo' 'double'
|   | `-BinaryOperator 0x2ab429bc4d8 <col:12, line:60:37> 'double' '-'
|   |   |-ImplicitCastExpr 0x2ab429bc4c0 <line:270:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x2ab429bc210 <col:12, col:21> 'double' lvalue .d 0x2ab42937c18
|   |   |   `-ArraySubscriptExpr 0x2ab429bc1f0 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429bc1d8 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab429bc180 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   |   |     |   `-ImplicitCastExpr 0x2ab429bc168 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab429bc148 <col:12> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429bc1b0 <col:18> 'int' 0
|   |   `-BinaryOperator 0x2ab429bc4a0 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x2ab429bc350 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429bc328 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429bc308 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429bc2b0 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429bc240 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429bc290 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429bc268 <line:270:29> 'int' 52
|   |     `-ParenExpr 0x2ab429bc480 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x2ab429bc458 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x2ab429bc438 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x2ab429bc3e0 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x2ab429bc370 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x2ab429bc3c0 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x2ab429bc398 <line:61:19> 'int' 0
|   |-BinaryOperator 0x2ab429bc900 <line:271:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x2ab429bc518 <line:271:5> 'double' lvalue Var 0x2ab429b21b0 'h1lo' 'double'
|   | `-BinaryOperator 0x2ab429bc8e0 <col:12, line:60:37> 'double' '-'
|   |   |-ImplicitCastExpr 0x2ab429bc8c8 <line:271:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x2ab429bc618 <col:12, col:21> 'double' lvalue .d 0x2ab42937c18
|   |   |   `-ArraySubscriptExpr 0x2ab429bc5f8 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429bc5e0 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab429bc588 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   |   |     |   `-ImplicitCastExpr 0x2ab429bc570 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab429bc550 <col:12> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429bc5b8 <col:18> 'int' 1
|   |   `-BinaryOperator 0x2ab429bc8a8 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x2ab429bc758 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429bc730 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429bc710 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429bc6b8 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429bc648 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429bc698 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429bc670 <line:271:29> 'int' 52
|   |     `-ParenExpr 0x2ab429bc888 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x2ab429bc860 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x2ab429bc840 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x2ab429bc7e8 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x2ab429bc778 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x2ab429bc7c8 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x2ab429bc7a0 <line:62:20> 'int' 32
|   |-BinaryOperator 0x2ab429bce78 <line:272:5, line:63:30> 'double' '='
|   | |-DeclRefExpr 0x2ab429bc920 <line:272:5> 'double' lvalue Var 0x2ab429b22b0 'h2lo' 'double'
|   | `-BinaryOperator 0x2ab429bce58 <col:12, line:63:30> 'double' '-'
|   |   |-ImplicitCastExpr 0x2ab429bce40 <line:272:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x2ab429bca20 <col:12, col:21> 'double' lvalue .d 0x2ab42937c18
|   |   |   `-ArraySubscriptExpr 0x2ab429bca00 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429bc9e8 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab429bc990 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   |   |     |   `-ImplicitCastExpr 0x2ab429bc978 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab429bc958 <col:12> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429bc9c0 <col:18> 'int' 2
|   |   `-BinaryOperator 0x2ab429bce20 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x2ab429bcb60 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429bcb38 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429bcb18 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429bcac0 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429bca50 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429bcaa0 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429bca78 <line:272:29> 'int' 52
|   |     `-ParenExpr 0x2ab429bce00 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x2ab429bcde0 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x2ab429bcc90 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x2ab429bcc68 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x2ab429bcc48 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x2ab429bcbf0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x2ab429bcb80 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x2ab429bcbd0 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x2ab429bcba8 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x2ab429bcdc0 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x2ab429bcd98 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x2ab429bcd78 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x2ab429bcd20 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x2ab429bccb0 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x2ab429bcd00 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x2ab429bccd8 <line:63:27> 'int' 32
|   |-BinaryOperator 0x2ab429ba558 <line:273:5, line:64:30> 'double' '='
|   | |-DeclRefExpr 0x2ab429bce98 <line:273:5> 'double' lvalue Var 0x2ab429b23b0 'h3lo' 'double'
|   | `-BinaryOperator 0x2ab429ba538 <col:12, line:64:30> 'double' '-'
|   |   |-ImplicitCastExpr 0x2ab429ba520 <line:273:12, col:21> 'double' <LValueToRValue>
|   |   | `-MemberExpr 0x2ab429b9f90 <col:12, col:21> 'double' lvalue .d 0x2ab42937c18
|   |   |   `-ArraySubscriptExpr 0x2ab429b9f70 <col:12, col:19> 'elem64':'elem64' lvalue
|   |   |     |-ImplicitCastExpr 0x2ab429bcf60 <col:12, col:16> 'elem64 *' <ArrayToPointerDecay>
|   |   |     | `-MemberExpr 0x2ab429bcf08 <col:12, col:16> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   |   |     |   `-ImplicitCastExpr 0x2ab429bcef0 <col:12> 'poly1305_internal *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x2ab429bced0 <col:12> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   |   |     `-IntegerLiteral 0x2ab429bcf38 <col:18> 'int' 3
|   |   `-BinaryOperator 0x2ab429ba500 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x2ab429ba0d0 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429ba0a8 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429ba088 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429ba030 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429b9fc0 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429ba010 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429b9fe8 <line:273:29> 'int' 52
|   |     `-ParenExpr 0x2ab429ba4e0 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x2ab429ba4c0 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x2ab429ba370 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x2ab429ba350 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x2ab429ba200 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x2ab429ba1d8 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x2ab429ba1b8 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x2ab429ba160 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x2ab429ba0f0 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x2ab429ba140 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x2ab429ba118 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x2ab429ba330 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x2ab429ba308 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x2ab429ba2e8 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x2ab429ba290 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x2ab429ba220 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x2ab429ba270 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x2ab429ba248 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x2ab429ba4a0 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x2ab429ba478 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x2ab429ba458 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x2ab429ba400 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x2ab429ba390 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x2ab429ba3e0 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x2ab429ba3b8 <line:64:27> 'int' 32
|   |-BinaryOperator 0x2ab429ba5f0 <line:276:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x2ab429ba578 <col:5> 'double' lvalue Var 0x2ab429b2130 'h0hi' 'double'
|   | `-ImplicitCastExpr 0x2ab429ba5d8 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x2ab429ba5b0 <col:12> 'int' 0
|   |-BinaryOperator 0x2ab429ba688 <line:277:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x2ab429ba610 <col:5> 'double' lvalue Var 0x2ab429b2230 'h1hi' 'double'
|   | `-ImplicitCastExpr 0x2ab429ba670 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x2ab429ba648 <col:12> 'int' 0
|   |-BinaryOperator 0x2ab429ba720 <line:278:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x2ab429ba6a8 <col:5> 'double' lvalue Var 0x2ab429b2330 'h2hi' 'double'
|   | `-ImplicitCastExpr 0x2ab429ba708 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x2ab429ba6e0 <col:12> 'int' 0
|   |-BinaryOperator 0x2ab429ba7b8 <line:279:5, col:12> 'double' '='
|   | |-DeclRefExpr 0x2ab429ba740 <col:5> 'double' lvalue Var 0x2ab429b2430 'h3hi' 'double'
|   | `-ImplicitCastExpr 0x2ab429ba7a0 <col:12> 'double' <IntegralToFloating>
|   |   `-IntegerLiteral 0x2ab429ba778 <col:12> 'int' 0
|   |-DoStmt 0x2ab429c6f58 <line:299:5, line:364:23>
|   | |-CompoundStmt 0x2ab429c6d80 <line:299:8, line:364:5>
|   | | |-BinaryOperator 0x2ab429bab50 <line:300:9, line:70:39> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x2ab429ba810 <line:300:9, col:13> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   | | | | `-DeclRefExpr 0x2ab429ba7d8 <col:9> 'elem64':'elem64' lvalue Var 0x2ab429b9b20 'in0' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x2ab429bab30 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   |-ParenExpr 0x2ab429ba998 <line:67:17, col:35> 'unsigned long long'
|   | | |   | `-BinaryOperator 0x2ab429ba978 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   |   |-ParenExpr 0x2ab429ba930 <col:18, col:30> 'unsigned long long'
|   | | |   |   | `-BinaryOperator 0x2ab429ba910 <col:19, col:29> 'unsigned long long' '+'
|   | | |   |   |   |-IntegerLiteral 0x2ab429ba840 <col:19> 'unsigned long long' 1023
|   | | |   |   |   `-ImplicitCastExpr 0x2ab429ba8f8 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   |     `-ParenExpr 0x2ab429ba8d8 <col:27, col:29> 'int'
|   | | |   |   |       `-BinaryOperator 0x2ab429ba8b8 <line:300:21, col:24> 'int' '+'
|   | | |   |   |         |-IntegerLiteral 0x2ab429ba868 <col:21> 'int' 52
|   | | |   |   |         `-IntegerLiteral 0x2ab429ba890 <col:24> 'int' 0
|   | | |   |   `-IntegerLiteral 0x2ab429ba950 <line:67:33> 'int' 52
|   | | |   `-ImplicitCastExpr 0x2ab429bab18 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x2ab429bab00 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |       `-ParenExpr 0x2ab429baae0 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |         `-UnaryOperator 0x2ab429baac8 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |           `-CStyleCastExpr 0x2ab429baaa0 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |             `-ParenExpr 0x2ab429baa80 <col:36, col:38> 'const unsigned char *'
|   | | |               `-UnaryOperator 0x2ab429baa38 <line:300:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   | | |                 `-ArraySubscriptExpr 0x2ab429baa18 <col:39, col:44> 'const unsigned char' lvalue
|   | | |                   |-ImplicitCastExpr 0x2ab429baa00 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |                   | `-DeclRefExpr 0x2ab429ba9b8 <col:39> 'const unsigned char *' lvalue ParmVar 0x2ab429b9698 'inp' 'const unsigned char *'
|   | | |                   `-IntegerLiteral 0x2ab429ba9d8 <col:43> 'int' 0
|   | | |-BinaryOperator 0x2ab429baee8 <line:301:9, line:70:39> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x2ab429baba8 <line:301:9, col:13> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   | | | | `-DeclRefExpr 0x2ab429bab70 <col:9> 'elem64':'elem64' lvalue Var 0x2ab429b9b98 'in1' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x2ab429baec8 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   |-ParenExpr 0x2ab429bad30 <line:67:17, col:35> 'unsigned long long'
|   | | |   | `-BinaryOperator 0x2ab429bad10 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   |   |-ParenExpr 0x2ab429bacc8 <col:18, col:30> 'unsigned long long'
|   | | |   |   | `-BinaryOperator 0x2ab429baca8 <col:19, col:29> 'unsigned long long' '+'
|   | | |   |   |   |-IntegerLiteral 0x2ab429babd8 <col:19> 'unsigned long long' 1023
|   | | |   |   |   `-ImplicitCastExpr 0x2ab429bac90 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   |     `-ParenExpr 0x2ab429bac70 <col:27, col:29> 'int'
|   | | |   |   |       `-BinaryOperator 0x2ab429bac50 <line:301:21, col:24> 'int' '+'
|   | | |   |   |         |-IntegerLiteral 0x2ab429bac00 <col:21> 'int' 52
|   | | |   |   |         `-IntegerLiteral 0x2ab429bac28 <col:24> 'int' 32
|   | | |   |   `-IntegerLiteral 0x2ab429bace8 <line:67:33> 'int' 52
|   | | |   `-ImplicitCastExpr 0x2ab429baeb0 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x2ab429bae98 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |       `-ParenExpr 0x2ab429bae78 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |         `-UnaryOperator 0x2ab429bae60 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |           `-CStyleCastExpr 0x2ab429bae38 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |             `-ParenExpr 0x2ab429bae18 <col:36, col:38> 'const unsigned char *'
|   | | |               `-UnaryOperator 0x2ab429badd0 <line:301:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   | | |                 `-ArraySubscriptExpr 0x2ab429badb0 <col:39, col:44> 'const unsigned char' lvalue
|   | | |                   |-ImplicitCastExpr 0x2ab429bad98 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |                   | `-DeclRefExpr 0x2ab429bad50 <col:39> 'const unsigned char *' lvalue ParmVar 0x2ab429b9698 'inp' 'const unsigned char *'
|   | | |                   `-IntegerLiteral 0x2ab429bad70 <col:43> 'int' 4
|   | | |-BinaryOperator 0x2ab429bd2b0 <line:302:9, line:70:39> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x2ab429baf40 <line:302:9, col:13> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   | | | | `-DeclRefExpr 0x2ab429baf08 <col:9> 'elem64':'elem64' lvalue Var 0x2ab429b9c10 'in2' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x2ab429bd290 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   |-ParenExpr 0x2ab429bd0f8 <line:67:17, col:35> 'unsigned long long'
|   | | |   | `-BinaryOperator 0x2ab429bd0d8 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   |   |-ParenExpr 0x2ab429bd090 <col:18, col:30> 'unsigned long long'
|   | | |   |   | `-BinaryOperator 0x2ab429bd070 <col:19, col:29> 'unsigned long long' '+'
|   | | |   |   |   |-IntegerLiteral 0x2ab429bcfa0 <col:19> 'unsigned long long' 1023
|   | | |   |   |   `-ImplicitCastExpr 0x2ab429bd058 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   |   |     `-ParenExpr 0x2ab429bd038 <col:27, col:29> 'int'
|   | | |   |   |       `-BinaryOperator 0x2ab429bd018 <line:302:21, col:24> 'int' '+'
|   | | |   |   |         |-IntegerLiteral 0x2ab429bcfc8 <col:21> 'int' 52
|   | | |   |   |         `-IntegerLiteral 0x2ab429bcff0 <col:24> 'int' 64
|   | | |   |   `-IntegerLiteral 0x2ab429bd0b0 <line:67:33> 'int' 52
|   | | |   `-ImplicitCastExpr 0x2ab429bd278 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |     `-ImplicitCastExpr 0x2ab429bd260 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |       `-ParenExpr 0x2ab429bd240 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |         `-UnaryOperator 0x2ab429bd228 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |           `-CStyleCastExpr 0x2ab429bd200 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |             `-ParenExpr 0x2ab429bd1e0 <col:36, col:38> 'const unsigned char *'
|   | | |               `-UnaryOperator 0x2ab429bd198 <line:302:38, col:44> 'const unsigned char *' prefix '&' cannot overflow
|   | | |                 `-ArraySubscriptExpr 0x2ab429bd178 <col:39, col:44> 'const unsigned char' lvalue
|   | | |                   |-ImplicitCastExpr 0x2ab429bd160 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |                   | `-DeclRefExpr 0x2ab429bd118 <col:39> 'const unsigned char *' lvalue ParmVar 0x2ab429b9698 'inp' 'const unsigned char *'
|   | | |                   `-IntegerLiteral 0x2ab429bd138 <col:43> 'int' 8
|   | | |-BinaryOperator 0x2ab429bd6b8 <line:303:9, col:50> 'u64':'unsigned long long' '='
|   | | | |-MemberExpr 0x2ab429bd308 <col:9, col:13> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
|   | | | | `-DeclRefExpr 0x2ab429bd2d0 <col:9> 'elem64':'elem64' lvalue Var 0x2ab429b9c88 'in3' 'elem64':'elem64'
|   | | | `-BinaryOperator 0x2ab429bd698 <line:67:17, line:303:50> 'unsigned long long' '|'
|   | | |   |-BinaryOperator 0x2ab429bd628 <line:67:17, line:70:39> 'unsigned long long' '|'
|   | | |   | |-ParenExpr 0x2ab429bd490 <line:67:17, col:35> 'unsigned long long'
|   | | |   | | `-BinaryOperator 0x2ab429bd470 <col:18, col:33> 'unsigned long long' '<<'
|   | | |   | |   |-ParenExpr 0x2ab429bd428 <col:18, col:30> 'unsigned long long'
|   | | |   | |   | `-BinaryOperator 0x2ab429bd408 <col:19, col:29> 'unsigned long long' '+'
|   | | |   | |   |   |-IntegerLiteral 0x2ab429bd338 <col:19> 'unsigned long long' 1023
|   | | |   | |   |   `-ImplicitCastExpr 0x2ab429bd3f0 <col:27, col:29> 'unsigned long long' <IntegralCast>
|   | | |   | |   |     `-ParenExpr 0x2ab429bd3d0 <col:27, col:29> 'int'
|   | | |   | |   |       `-BinaryOperator 0x2ab429bd3b0 <line:303:21, col:24> 'int' '+'
|   | | |   | |   |         |-IntegerLiteral 0x2ab429bd360 <col:21> 'int' 52
|   | | |   | |   |         `-IntegerLiteral 0x2ab429bd388 <col:24> 'int' 96
|   | | |   | |   `-IntegerLiteral 0x2ab429bd448 <line:67:33> 'int' 52
|   | | |   | `-ImplicitCastExpr 0x2ab429bd610 <line:70:21, col:39> 'unsigned long long' <IntegralCast>
|   | | |   |   `-ImplicitCastExpr 0x2ab429bd5f8 <col:21, col:39> 'u32':'unsigned int' <LValueToRValue>
|   | | |   |     `-ParenExpr 0x2ab429bd5d8 <col:21, col:39> 'const u32':'const unsigned int' lvalue
|   | | |   |       `-UnaryOperator 0x2ab429bd5c0 <col:22, col:38> 'const u32':'const unsigned int' lvalue prefix '*' cannot overflow
|   | | |   |         `-CStyleCastExpr 0x2ab429bd598 <col:23, col:38> 'const u32 *' <BitCast>
|   | | |   |           `-ParenExpr 0x2ab429bd578 <col:36, col:38> 'const unsigned char *'
|   | | |   |             `-UnaryOperator 0x2ab429bd530 <line:303:38, col:45> 'const unsigned char *' prefix '&' cannot overflow
|   | | |   |               `-ArraySubscriptExpr 0x2ab429bd510 <col:39, col:45> 'const unsigned char' lvalue
|   | | |   |                 |-ImplicitCastExpr 0x2ab429bd4f8 <col:39> 'const unsigned char *' <LValueToRValue>
|   | | |   |                 | `-DeclRefExpr 0x2ab429bd4b0 <col:39> 'const unsigned char *' lvalue ParmVar 0x2ab429b9698 'inp' 'const unsigned char *'
|   | | |   |                 `-IntegerLiteral 0x2ab429bd4d0 <col:43> 'int' 12
|   | | |   `-ImplicitCastExpr 0x2ab429bd680 <col:50> 'u64':'unsigned long long' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2ab429bd648 <col:50> 'u64':'unsigned long long' lvalue Var 0x2ab429b9d40 'pad' 'u64':'unsigned long long'
|   | | |-BinaryOperator 0x2ab429bda18 <line:305:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429bd6d8 <line:305:9> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | | `-BinaryOperator 0x2ab429bd9f8 <col:14, line:60:37> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x2ab429bd9e0 <line:305:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x2ab429bd730 <col:14, col:18> 'double' lvalue .d 0x2ab42937c18
|   | | |   |   `-DeclRefExpr 0x2ab429bd710 <col:14> 'elem64':'elem64' lvalue Var 0x2ab429b9b20 'in0' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x2ab429bd9c0 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429bd870 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429bd848 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429bd828 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429bd7d0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429bd760 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429bd7b0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429bd788 <line:305:26> 'int' 52
|   | | |     `-ParenExpr 0x2ab429bd9a0 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x2ab429bd978 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x2ab429bd958 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x2ab429bd900 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x2ab429bd890 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x2ab429bd8e0 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x2ab429bd8b8 <line:61:19> 'int' 0
|   | | |-BinaryOperator 0x2ab429bdd78 <line:306:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429bda38 <line:306:9> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | | `-BinaryOperator 0x2ab429bdd58 <col:14, line:60:37> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x2ab429bdd40 <line:306:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x2ab429bda90 <col:14, col:18> 'double' lvalue .d 0x2ab42937c18
|   | | |   |   `-DeclRefExpr 0x2ab429bda70 <col:14> 'elem64':'elem64' lvalue Var 0x2ab429b9b98 'in1' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x2ab429bdd20 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429bdbd0 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429bdba8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429bdb88 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429bdb30 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429bdac0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429bdb10 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429bdae8 <line:306:26> 'int' 52
|   | | |     `-ParenExpr 0x2ab429bdd00 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x2ab429bdcd8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x2ab429bdcb8 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x2ab429bdc60 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x2ab429bdbf0 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x2ab429bdc40 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x2ab429bdc18 <line:62:20> 'int' 32
|   | | |-BinaryOperator 0x2ab429bb228 <line:307:9, line:63:30> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429bdd98 <line:307:9> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | | `-BinaryOperator 0x2ab429bb208 <col:14, line:63:30> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x2ab429bb1f0 <line:307:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x2ab429bddf0 <col:14, col:18> 'double' lvalue .d 0x2ab42937c18
|   | | |   |   `-DeclRefExpr 0x2ab429bddd0 <col:14> 'elem64':'elem64' lvalue Var 0x2ab429b9c10 'in2' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x2ab429bb1d0 <line:60:17, line:63:30> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429bdf30 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429bdf08 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429bdee8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429bde90 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429bde20 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429bde70 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429bde48 <line:307:26> 'int' 52
|   | | |     `-ParenExpr 0x2ab429bb1b0 <line:63:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x2ab429bb190 <line:60:17, col:37> 'double' '*'
|   | | |         |-ParenExpr 0x2ab429bb040 <col:17, col:37> 'double'
|   | | |         | `-CStyleCastExpr 0x2ab429bb018 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   `-ParenExpr 0x2ab429baff8 <col:26, col:36> 'unsigned long long'
|   | | |         |     `-BinaryOperator 0x2ab429bafa0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |       |-IntegerLiteral 0x2ab429bdf50 <col:27> 'unsigned long long' 1
|   | | |         |       `-ParenExpr 0x2ab429baf80 <col:33, col:35> 'int'
|   | | |         |         `-IntegerLiteral 0x2ab429bdf78 <line:62:20> 'int' 32
|   | | |         `-ParenExpr 0x2ab429bb170 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x2ab429bb148 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x2ab429bb128 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x2ab429bb0d0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x2ab429bb060 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x2ab429bb0b0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x2ab429bb088 <line:63:27> 'int' 32
|   | | |-BinaryOperator 0x2ab429bb868 <line:308:9, line:64:30> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429bb248 <line:308:9> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | | `-BinaryOperator 0x2ab429bb848 <col:14, line:64:30> 'double' '-'
|   | | |   |-ImplicitCastExpr 0x2ab429bb830 <line:308:14, col:18> 'double' <LValueToRValue>
|   | | |   | `-MemberExpr 0x2ab429bb2a0 <col:14, col:18> 'double' lvalue .d 0x2ab42937c18
|   | | |   |   `-DeclRefExpr 0x2ab429bb280 <col:14> 'elem64':'elem64' lvalue Var 0x2ab429b9c88 'in3' 'elem64':'elem64'
|   | | |   `-BinaryOperator 0x2ab429bb810 <line:60:17, line:64:30> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429bb3e0 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429bb3b8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429bb398 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429bb340 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429bb2d0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429bb320 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429bb2f8 <line:308:26> 'int' 52
|   | | |     `-ParenExpr 0x2ab429bb7f0 <line:64:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x2ab429bb7d0 <line:63:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x2ab429bb680 <line:63:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x2ab429bb660 <line:60:17, col:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x2ab429bb510 <col:17, col:37> 'double'
|   | | |         |   | `-CStyleCastExpr 0x2ab429bb4e8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   `-ParenExpr 0x2ab429bb4c8 <col:26, col:36> 'unsigned long long'
|   | | |         |   |     `-BinaryOperator 0x2ab429bb470 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |       |-IntegerLiteral 0x2ab429bb400 <col:27> 'unsigned long long' 1
|   | | |         |   |       `-ParenExpr 0x2ab429bb450 <col:33, col:35> 'int'
|   | | |         |   |         `-IntegerLiteral 0x2ab429bb428 <line:62:20> 'int' 32
|   | | |         |   `-ParenExpr 0x2ab429bb640 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x2ab429bb618 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x2ab429bb5f8 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x2ab429bb5a0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x2ab429bb530 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x2ab429bb580 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x2ab429bb558 <line:63:27> 'int' 32
|   | | |         `-ParenExpr 0x2ab429bb7b0 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x2ab429bb788 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x2ab429bb768 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x2ab429bb710 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x2ab429bb6a0 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x2ab429bb6f0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x2ab429bb6c8 <line:64:27> 'int' 32
|   | | |-CompoundAssignOperator 0x2ab429bb8e0 <line:314:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x2ab429bb888 <col:9> 'double' lvalue Var 0x2ab429b20b0 'h0lo' 'double'
|   | | | `-ImplicitCastExpr 0x2ab429bb8c8 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2ab429bb8a8 <col:17> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | |-CompoundAssignOperator 0x2ab429bb968 <line:315:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x2ab429bb910 <col:9> 'double' lvalue Var 0x2ab429b2130 'h0hi' 'double'
|   | | | `-ImplicitCastExpr 0x2ab429bb950 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2ab429bb930 <col:17> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | |-CompoundAssignOperator 0x2ab429bb9f0 <line:316:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x2ab429bb998 <col:9> 'double' lvalue Var 0x2ab429b22b0 'h2lo' 'double'
|   | | | `-ImplicitCastExpr 0x2ab429bb9d8 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2ab429bb9b8 <col:17> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | |-CompoundAssignOperator 0x2ab429bba78 <line:317:9, col:17> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x2ab429bba20 <col:9> 'double' lvalue Var 0x2ab429b2330 'h2hi' 'double'
|   | | | `-ImplicitCastExpr 0x2ab429bba60 <col:17> 'double' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2ab429bba40 <col:17> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | |-BinaryOperator 0x2ab429b7040 <line:322:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429bbaa8 <line:322:9> 'double' lvalue Var 0x2ab429b2510 'c0lo' 'double'
|   | | | `-BinaryOperator 0x2ab429b7020 <col:16, line:60:37> 'double' '-'
|   | | |   |-ParenExpr 0x2ab429bbdb8 <line:322:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x2ab429bbd98 <col:17, line:60:37> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x2ab429bbd80 <line:322:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429bbae0 <col:17> 'double' lvalue Var 0x2ab429b20b0 'h0lo' 'double'
|   | | |   |   `-BinaryOperator 0x2ab429bbd60 <line:60:17, col:37> 'double' '*'
|   | | |   |     |-ParenExpr 0x2ab429bbc10 <col:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x2ab429bbbe8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x2ab429bbbc8 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x2ab429bbb70 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x2ab429bbb00 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x2ab429bbb50 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x2ab429bbb28 <line:322:28> 'int' 52
|   | | |   |     `-ParenExpr 0x2ab429bbd40 <line:60:17, col:37> 'double'
|   | | |   |       `-CStyleCastExpr 0x2ab429bbd18 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         `-ParenExpr 0x2ab429bbcf8 <col:26, col:36> 'unsigned long long'
|   | | |   |           `-BinaryOperator 0x2ab429bbca0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |             |-IntegerLiteral 0x2ab429bbc30 <col:27> 'unsigned long long' 1
|   | | |   |             `-ParenExpr 0x2ab429bbc80 <col:33, col:35> 'int'
|   | | |   |               `-IntegerLiteral 0x2ab429bbc58 <line:62:20> 'int' 32
|   | | |   `-BinaryOperator 0x2ab429b7000 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429bbee8 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429bbec0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429bbea0 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429bbe48 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429bbdd8 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429bbe28 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429bbe00 <line:322:46> 'int' 52
|   | | |     `-ParenExpr 0x2ab429b6fe0 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x2ab429b6fb8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x2ab429b6f98 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x2ab429b6f40 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x2ab429bbf08 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x2ab429bbf58 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x2ab429bbf30 <line:62:20> 'int' 32
|   | | |-BinaryOperator 0x2ab429b7910 <line:323:9, line:63:30> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429b7060 <line:323:9> 'double' lvalue Var 0x2ab429b2610 'c1lo' 'double'
|   | | | `-BinaryOperator 0x2ab429b78f0 <col:16, line:63:30> 'double' '-'
|   | | |   |-ParenExpr 0x2ab429b74e0 <line:323:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x2ab429b74c0 <col:17, line:63:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x2ab429b74a8 <line:323:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429b7098 <col:17> 'double' lvalue Var 0x2ab429b21b0 'h1lo' 'double'
|   | | |   |   `-BinaryOperator 0x2ab429b7488 <line:60:17, line:63:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x2ab429b71c8 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x2ab429b71a0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x2ab429b7180 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x2ab429b7128 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x2ab429b70b8 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x2ab429b7108 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x2ab429b70e0 <line:323:28> 'int' 52
|   | | |   |     `-ParenExpr 0x2ab429b7468 <line:63:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x2ab429b7448 <line:60:17, col:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x2ab429b72f8 <col:17, col:37> 'double'
|   | | |   |         | `-CStyleCastExpr 0x2ab429b72d0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   `-ParenExpr 0x2ab429b72b0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |     `-BinaryOperator 0x2ab429b7258 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |       |-IntegerLiteral 0x2ab429b71e8 <col:27> 'unsigned long long' 1
|   | | |   |         |       `-ParenExpr 0x2ab429b7238 <col:33, col:35> 'int'
|   | | |   |         |         `-IntegerLiteral 0x2ab429b7210 <line:62:20> 'int' 32
|   | | |   |         `-ParenExpr 0x2ab429b7428 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x2ab429b7400 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x2ab429b73e0 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x2ab429b7388 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x2ab429b7318 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x2ab429b7368 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x2ab429b7340 <line:63:27> 'int' 32
|   | | |   `-BinaryOperator 0x2ab429b78d0 <line:60:17, line:63:30> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429b7610 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429b75e8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429b75c8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429b7570 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429b7500 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429b7550 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429b7528 <line:323:46> 'int' 52
|   | | |     `-ParenExpr 0x2ab429b78b0 <line:63:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x2ab429b7890 <line:60:17, col:37> 'double' '*'
|   | | |         |-ParenExpr 0x2ab429b7740 <col:17, col:37> 'double'
|   | | |         | `-CStyleCastExpr 0x2ab429b7718 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   `-ParenExpr 0x2ab429b76f8 <col:26, col:36> 'unsigned long long'
|   | | |         |     `-BinaryOperator 0x2ab429b76a0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |       |-IntegerLiteral 0x2ab429b7630 <col:27> 'unsigned long long' 1
|   | | |         |       `-ParenExpr 0x2ab429b7680 <col:33, col:35> 'int'
|   | | |         |         `-IntegerLiteral 0x2ab429b7658 <line:62:20> 'int' 32
|   | | |         `-ParenExpr 0x2ab429b7870 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x2ab429b7848 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x2ab429b7828 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x2ab429b77d0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x2ab429b7760 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x2ab429b77b0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x2ab429b7788 <line:63:27> 'int' 32
|   | | |-BinaryOperator 0x2ab429c4590 <line:324:9, line:64:30> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429b7930 <line:324:9> 'double' lvalue Var 0x2ab429b2710 'c2lo' 'double'
|   | | | `-BinaryOperator 0x2ab429c4570 <col:16, line:64:30> 'double' '-'
|   | | |   |-ParenExpr 0x2ab429b7f20 <line:324:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x2ab429b7f00 <col:17, line:64:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x2ab429b7ee8 <line:324:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429b7968 <col:17> 'double' lvalue Var 0x2ab429b22b0 'h2lo' 'double'
|   | | |   |   `-BinaryOperator 0x2ab429b7ec8 <line:60:17, line:64:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x2ab429b7a98 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x2ab429b7a70 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x2ab429b7a50 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x2ab429b79f8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x2ab429b7988 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x2ab429b79d8 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x2ab429b79b0 <line:324:28> 'int' 52
|   | | |   |     `-ParenExpr 0x2ab429b7ea8 <line:64:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x2ab429b7e88 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x2ab429b7d38 <line:63:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x2ab429b7d18 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x2ab429b7bc8 <col:17, col:37> 'double'
|   | | |   |         |   | `-CStyleCastExpr 0x2ab429b7ba0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   `-ParenExpr 0x2ab429b7b80 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |     `-BinaryOperator 0x2ab429b7b28 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |       |-IntegerLiteral 0x2ab429b7ab8 <col:27> 'unsigned long long' 1
|   | | |   |         |   |       `-ParenExpr 0x2ab429b7b08 <col:33, col:35> 'int'
|   | | |   |         |   |         `-IntegerLiteral 0x2ab429b7ae0 <line:62:20> 'int' 32
|   | | |   |         |   `-ParenExpr 0x2ab429b7cf8 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x2ab429b7cd0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x2ab429b7cb0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x2ab429b7c58 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x2ab429b7be8 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x2ab429b7c38 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x2ab429b7c10 <line:63:27> 'int' 32
|   | | |   |         `-ParenExpr 0x2ab429b7e68 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x2ab429b7e40 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x2ab429b7e20 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x2ab429b7dc8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x2ab429b7d58 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x2ab429b7da8 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x2ab429b7d80 <line:64:27> 'int' 32
|   | | |   `-BinaryOperator 0x2ab429c4550 <line:60:17, line:64:30> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429c4120 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429c40f8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429c40d8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429c4080 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429c4010 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429c4060 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429c4038 <line:324:46> 'int' 52
|   | | |     `-ParenExpr 0x2ab429c4530 <line:64:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x2ab429c4510 <line:63:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x2ab429c43c0 <line:63:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x2ab429c43a0 <line:60:17, col:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x2ab429c4250 <col:17, col:37> 'double'
|   | | |         |   | `-CStyleCastExpr 0x2ab429c4228 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   `-ParenExpr 0x2ab429c4208 <col:26, col:36> 'unsigned long long'
|   | | |         |   |     `-BinaryOperator 0x2ab429c41b0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |       |-IntegerLiteral 0x2ab429c4140 <col:27> 'unsigned long long' 1
|   | | |         |   |       `-ParenExpr 0x2ab429c4190 <col:33, col:35> 'int'
|   | | |         |   |         `-IntegerLiteral 0x2ab429c4168 <line:62:20> 'int' 32
|   | | |         |   `-ParenExpr 0x2ab429c4380 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x2ab429c4358 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x2ab429c4338 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x2ab429c42e0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x2ab429c4270 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x2ab429c42c0 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x2ab429c4298 <line:63:27> 'int' 32
|   | | |         `-ParenExpr 0x2ab429c44f0 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x2ab429c44c8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x2ab429c44a8 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x2ab429c4450 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x2ab429c43e0 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x2ab429c4430 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x2ab429c4408 <line:64:27> 'int' 32
|   | | |-BinaryOperator 0x2ab429c2410 <line:325:9, line:65:31> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c45b0 <line:325:9> 'double' lvalue Var 0x2ab429b2810 'c3lo' 'double'
|   | | | `-BinaryOperator 0x2ab429c23f0 <col:16, line:65:31> 'double' '-'
|   | | |   |-ParenExpr 0x2ab429c4d10 <line:325:16, col:38> 'double'
|   | | |   | `-BinaryOperator 0x2ab429c4cf0 <col:17, line:65:31> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c4cd8 <line:325:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c45e8 <col:17> 'double' lvalue Var 0x2ab429b23b0 'h3lo' 'double'
|   | | |   |   `-BinaryOperator 0x2ab429c4cb8 <line:60:17, line:65:31> 'double' '*'
|   | | |   |     |-ParenExpr 0x2ab429c4718 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x2ab429c46f0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x2ab429c46d0 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x2ab429c4678 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x2ab429c4608 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x2ab429c4658 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x2ab429c4630 <line:325:28> 'int' 52
|   | | |   |     `-ParenExpr 0x2ab429c4c98 <line:65:17, col:31> 'double'
|   | | |   |       `-BinaryOperator 0x2ab429c4c78 <line:64:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x2ab429c4b28 <line:64:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x2ab429c4b08 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x2ab429c49b8 <line:63:16, col:30> 'double'
|   | | |   |         |   | `-BinaryOperator 0x2ab429c4998 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |   |-ParenExpr 0x2ab429c4848 <col:17, col:37> 'double'
|   | | |   |         |   |   | `-CStyleCastExpr 0x2ab429c4820 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   |   `-ParenExpr 0x2ab429c4800 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |   |     `-BinaryOperator 0x2ab429c47a8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |   |       |-IntegerLiteral 0x2ab429c4738 <col:27> 'unsigned long long' 1
|   | | |   |         |   |   |       `-ParenExpr 0x2ab429c4788 <col:33, col:35> 'int'
|   | | |   |         |   |   |         `-IntegerLiteral 0x2ab429c4760 <line:62:20> 'int' 32
|   | | |   |         |   |   `-ParenExpr 0x2ab429c4978 <line:60:17, col:37> 'double'
|   | | |   |         |   |     `-CStyleCastExpr 0x2ab429c4950 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |       `-ParenExpr 0x2ab429c4930 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |         `-BinaryOperator 0x2ab429c48d8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |           |-IntegerLiteral 0x2ab429c4868 <col:27> 'unsigned long long' 1
|   | | |   |         |   |           `-ParenExpr 0x2ab429c48b8 <col:33, col:35> 'int'
|   | | |   |         |   |             `-IntegerLiteral 0x2ab429c4890 <line:63:27> 'int' 32
|   | | |   |         |   `-ParenExpr 0x2ab429c4ae8 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x2ab429c4ac0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x2ab429c4aa0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x2ab429c4a48 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x2ab429c49d8 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x2ab429c4a28 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x2ab429c4a00 <line:64:27> 'int' 32
|   | | |   |         `-ParenExpr 0x2ab429c4c58 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x2ab429c4c30 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x2ab429c4c10 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x2ab429c4bb8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x2ab429c4b48 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x2ab429c4b98 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x2ab429c4b70 <line:65:28> 'int' 34
|   | | |   `-BinaryOperator 0x2ab429c23d0 <line:60:17, line:65:31> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429c4e40 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429c4e18 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429c4df8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429c4da0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429c4d30 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429c4d80 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429c4d58 <line:325:46> 'int' 52
|   | | |     `-ParenExpr 0x2ab429c23b0 <line:65:17, col:31> 'double'
|   | | |       `-BinaryOperator 0x2ab429c2390 <line:64:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x2ab429c2240 <line:64:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x2ab429c2220 <line:63:16, line:60:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x2ab429c20d0 <line:63:16, col:30> 'double'
|   | | |         |   | `-BinaryOperator 0x2ab429c20b0 <line:60:17, col:37> 'double' '*'
|   | | |         |   |   |-ParenExpr 0x2ab429c4f70 <col:17, col:37> 'double'
|   | | |         |   |   | `-CStyleCastExpr 0x2ab429c4f48 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   |   `-ParenExpr 0x2ab429c4f28 <col:26, col:36> 'unsigned long long'
|   | | |         |   |   |     `-BinaryOperator 0x2ab429c4ed0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |   |       |-IntegerLiteral 0x2ab429c4e60 <col:27> 'unsigned long long' 1
|   | | |         |   |   |       `-ParenExpr 0x2ab429c4eb0 <col:33, col:35> 'int'
|   | | |         |   |   |         `-IntegerLiteral 0x2ab429c4e88 <line:62:20> 'int' 32
|   | | |         |   |   `-ParenExpr 0x2ab429c2090 <line:60:17, col:37> 'double'
|   | | |         |   |     `-CStyleCastExpr 0x2ab429c2068 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |       `-ParenExpr 0x2ab429c2048 <col:26, col:36> 'unsigned long long'
|   | | |         |   |         `-BinaryOperator 0x2ab429c1ff0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |           |-IntegerLiteral 0x2ab429c4f90 <col:27> 'unsigned long long' 1
|   | | |         |   |           `-ParenExpr 0x2ab429c4fe0 <col:33, col:35> 'int'
|   | | |         |   |             `-IntegerLiteral 0x2ab429c4fb8 <line:63:27> 'int' 32
|   | | |         |   `-ParenExpr 0x2ab429c2200 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x2ab429c21d8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x2ab429c21b8 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x2ab429c2160 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x2ab429c20f0 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x2ab429c2140 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x2ab429c2118 <line:64:27> 'int' 32
|   | | |         `-ParenExpr 0x2ab429c2370 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x2ab429c2348 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x2ab429c2328 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x2ab429c22d0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x2ab429c2260 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x2ab429c22b0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x2ab429c2288 <line:65:28> 'int' 34
|   | | |-BinaryOperator 0x2ab429c2a00 <line:327:9, line:60:37> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c2430 <line:327:9> 'double' lvalue Var 0x2ab429b2590 'c0hi' 'double'
|   | | | `-BinaryOperator 0x2ab429c29e0 <col:16, line:60:37> 'double' '-'
|   | | |   |-ParenExpr 0x2ab429c2740 <line:327:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x2ab429c2720 <col:17, line:60:37> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c2708 <line:327:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c2468 <col:17> 'double' lvalue Var 0x2ab429b2130 'h0hi' 'double'
|   | | |   |   `-BinaryOperator 0x2ab429c26e8 <line:60:17, col:37> 'double' '*'
|   | | |   |     |-ParenExpr 0x2ab429c2598 <col:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x2ab429c2570 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x2ab429c2550 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x2ab429c24f8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x2ab429c2488 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x2ab429c24d8 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x2ab429c24b0 <line:327:28> 'int' 52
|   | | |   |     `-ParenExpr 0x2ab429c26c8 <line:60:17, col:37> 'double'
|   | | |   |       `-CStyleCastExpr 0x2ab429c26a0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         `-ParenExpr 0x2ab429c2680 <col:26, col:36> 'unsigned long long'
|   | | |   |           `-BinaryOperator 0x2ab429c2628 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |             |-IntegerLiteral 0x2ab429c25b8 <col:27> 'unsigned long long' 1
|   | | |   |             `-ParenExpr 0x2ab429c2608 <col:33, col:35> 'int'
|   | | |   |               `-IntegerLiteral 0x2ab429c25e0 <line:62:20> 'int' 32
|   | | |   `-BinaryOperator 0x2ab429c29c0 <line:60:17, col:37> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429c2870 <col:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429c2848 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429c2828 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429c27d0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429c2760 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429c27b0 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429c2788 <line:327:46> 'int' 52
|   | | |     `-ParenExpr 0x2ab429c29a0 <line:60:17, col:37> 'double'
|   | | |       `-CStyleCastExpr 0x2ab429c2978 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         `-ParenExpr 0x2ab429c2958 <col:26, col:36> 'unsigned long long'
|   | | |           `-BinaryOperator 0x2ab429c2900 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |-IntegerLiteral 0x2ab429c2890 <col:27> 'unsigned long long' 1
|   | | |             `-ParenExpr 0x2ab429c28e0 <col:33, col:35> 'int'
|   | | |               `-IntegerLiteral 0x2ab429c28b8 <line:62:20> 'int' 32
|   | | |-BinaryOperator 0x2ab429c12c0 <line:328:9, line:63:30> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c2a20 <line:328:9> 'double' lvalue Var 0x2ab429b2690 'c1hi' 'double'
|   | | | `-BinaryOperator 0x2ab429c12a0 <col:16, line:63:30> 'double' '-'
|   | | |   |-ParenExpr 0x2ab429c2ea0 <line:328:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x2ab429c2e80 <col:17, line:63:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c2e68 <line:328:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c2a58 <col:17> 'double' lvalue Var 0x2ab429b2230 'h1hi' 'double'
|   | | |   |   `-BinaryOperator 0x2ab429c2e48 <line:60:17, line:63:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x2ab429c2b88 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x2ab429c2b60 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x2ab429c2b40 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x2ab429c2ae8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x2ab429c2a78 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x2ab429c2ac8 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x2ab429c2aa0 <line:328:28> 'int' 52
|   | | |   |     `-ParenExpr 0x2ab429c2e28 <line:63:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x2ab429c2e08 <line:60:17, col:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x2ab429c2cb8 <col:17, col:37> 'double'
|   | | |   |         | `-CStyleCastExpr 0x2ab429c2c90 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   `-ParenExpr 0x2ab429c2c70 <col:26, col:36> 'unsigned long long'
|   | | |   |         |     `-BinaryOperator 0x2ab429c2c18 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |       |-IntegerLiteral 0x2ab429c2ba8 <col:27> 'unsigned long long' 1
|   | | |   |         |       `-ParenExpr 0x2ab429c2bf8 <col:33, col:35> 'int'
|   | | |   |         |         `-IntegerLiteral 0x2ab429c2bd0 <line:62:20> 'int' 32
|   | | |   |         `-ParenExpr 0x2ab429c2de8 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x2ab429c2dc0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x2ab429c2da0 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x2ab429c2d48 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x2ab429c2cd8 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x2ab429c2d28 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x2ab429c2d00 <line:63:27> 'int' 32
|   | | |   `-BinaryOperator 0x2ab429c1280 <line:60:17, line:63:30> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429c2fd0 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429c2fa8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429c2f88 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429c2f30 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429c2ec0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429c2f10 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429c2ee8 <line:328:46> 'int' 52
|   | | |     `-ParenExpr 0x2ab429c1260 <line:63:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x2ab429c1240 <line:60:17, col:37> 'double' '*'
|   | | |         |-ParenExpr 0x2ab429c10f0 <col:17, col:37> 'double'
|   | | |         | `-CStyleCastExpr 0x2ab429c10c8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   `-ParenExpr 0x2ab429c10a8 <col:26, col:36> 'unsigned long long'
|   | | |         |     `-BinaryOperator 0x2ab429c1050 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |       |-IntegerLiteral 0x2ab429c0fe0 <col:27> 'unsigned long long' 1
|   | | |         |       `-ParenExpr 0x2ab429c1030 <col:33, col:35> 'int'
|   | | |         |         `-IntegerLiteral 0x2ab429c1008 <line:62:20> 'int' 32
|   | | |         `-ParenExpr 0x2ab429c1220 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x2ab429c11f8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x2ab429c11d8 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x2ab429c1180 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x2ab429c1110 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x2ab429c1160 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x2ab429c1138 <line:63:27> 'int' 32
|   | | |-BinaryOperator 0x2ab429c1e70 <line:329:9, line:64:30> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c12e0 <line:329:9> 'double' lvalue Var 0x2ab429b2790 'c2hi' 'double'
|   | | | `-BinaryOperator 0x2ab429c1e50 <col:16, line:64:30> 'double' '-'
|   | | |   |-ParenExpr 0x2ab429c18d0 <line:329:16, col:37> 'double'
|   | | |   | `-BinaryOperator 0x2ab429c18b0 <col:17, line:64:30> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c1898 <line:329:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c1318 <col:17> 'double' lvalue Var 0x2ab429b2330 'h2hi' 'double'
|   | | |   |   `-BinaryOperator 0x2ab429c1878 <line:60:17, line:64:30> 'double' '*'
|   | | |   |     |-ParenExpr 0x2ab429c1448 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x2ab429c1420 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x2ab429c1400 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x2ab429c13a8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x2ab429c1338 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x2ab429c1388 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x2ab429c1360 <line:329:28> 'int' 52
|   | | |   |     `-ParenExpr 0x2ab429c1858 <line:64:16, col:30> 'double'
|   | | |   |       `-BinaryOperator 0x2ab429c1838 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x2ab429c16e8 <line:63:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x2ab429c16c8 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x2ab429c1578 <col:17, col:37> 'double'
|   | | |   |         |   | `-CStyleCastExpr 0x2ab429c1550 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   `-ParenExpr 0x2ab429c1530 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |     `-BinaryOperator 0x2ab429c14d8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |       |-IntegerLiteral 0x2ab429c1468 <col:27> 'unsigned long long' 1
|   | | |   |         |   |       `-ParenExpr 0x2ab429c14b8 <col:33, col:35> 'int'
|   | | |   |         |   |         `-IntegerLiteral 0x2ab429c1490 <line:62:20> 'int' 32
|   | | |   |         |   `-ParenExpr 0x2ab429c16a8 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x2ab429c1680 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x2ab429c1660 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x2ab429c1608 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x2ab429c1598 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x2ab429c15e8 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x2ab429c15c0 <line:63:27> 'int' 32
|   | | |   |         `-ParenExpr 0x2ab429c1818 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x2ab429c17f0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x2ab429c17d0 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x2ab429c1778 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x2ab429c1708 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x2ab429c1758 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x2ab429c1730 <line:64:27> 'int' 32
|   | | |   `-BinaryOperator 0x2ab429c1e30 <line:60:17, line:64:30> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429c1a00 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429c19d8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429c19b8 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429c1960 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429c18f0 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429c1940 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429c1918 <line:329:46> 'int' 52
|   | | |     `-ParenExpr 0x2ab429c1e10 <line:64:16, col:30> 'double'
|   | | |       `-BinaryOperator 0x2ab429c1df0 <line:63:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x2ab429c1ca0 <line:63:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x2ab429c1c80 <line:60:17, col:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x2ab429c1b30 <col:17, col:37> 'double'
|   | | |         |   | `-CStyleCastExpr 0x2ab429c1b08 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   `-ParenExpr 0x2ab429c1ae8 <col:26, col:36> 'unsigned long long'
|   | | |         |   |     `-BinaryOperator 0x2ab429c1a90 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |       |-IntegerLiteral 0x2ab429c1a20 <col:27> 'unsigned long long' 1
|   | | |         |   |       `-ParenExpr 0x2ab429c1a70 <col:33, col:35> 'int'
|   | | |         |   |         `-IntegerLiteral 0x2ab429c1a48 <line:62:20> 'int' 32
|   | | |         |   `-ParenExpr 0x2ab429c1c60 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x2ab429c1c38 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x2ab429c1c18 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x2ab429c1bc0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x2ab429c1b50 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x2ab429c1ba0 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x2ab429c1b78 <line:63:27> 'int' 32
|   | | |         `-ParenExpr 0x2ab429c1dd0 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x2ab429c1da8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x2ab429c1d88 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x2ab429c1d30 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x2ab429c1cc0 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x2ab429c1d10 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x2ab429c1ce8 <line:64:27> 'int' 32
|   | | |-BinaryOperator 0x2ab429c3d30 <line:330:9, line:65:31> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c1e90 <line:330:9> 'double' lvalue Var 0x2ab429b2890 'c3hi' 'double'
|   | | | `-BinaryOperator 0x2ab429c3d10 <col:16, line:65:31> 'double' '-'
|   | | |   |-ParenExpr 0x2ab429c3620 <line:330:16, col:38> 'double'
|   | | |   | `-BinaryOperator 0x2ab429c3600 <col:17, line:65:31> 'double' '+'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c35e8 <line:330:17> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c1ec8 <col:17> 'double' lvalue Var 0x2ab429b2430 'h3hi' 'double'
|   | | |   |   `-BinaryOperator 0x2ab429c35c8 <line:60:17, line:65:31> 'double' '*'
|   | | |   |     |-ParenExpr 0x2ab429c3028 <line:60:17, col:37> 'double'
|   | | |   |     | `-CStyleCastExpr 0x2ab429c3000 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |     |   `-ParenExpr 0x2ab429c1fb0 <col:26, col:36> 'unsigned long long'
|   | | |   |     |     `-BinaryOperator 0x2ab429c1f58 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |     |       |-IntegerLiteral 0x2ab429c1ee8 <col:27> 'unsigned long long' 1
|   | | |   |     |       `-ParenExpr 0x2ab429c1f38 <col:33, col:35> 'int'
|   | | |   |     |         `-IntegerLiteral 0x2ab429c1f10 <line:330:28> 'int' 52
|   | | |   |     `-ParenExpr 0x2ab429c35a8 <line:65:17, col:31> 'double'
|   | | |   |       `-BinaryOperator 0x2ab429c3588 <line:64:16, line:60:37> 'double' '*'
|   | | |   |         |-ParenExpr 0x2ab429c3438 <line:64:16, col:30> 'double'
|   | | |   |         | `-BinaryOperator 0x2ab429c3418 <line:63:16, line:60:37> 'double' '*'
|   | | |   |         |   |-ParenExpr 0x2ab429c32c8 <line:63:16, col:30> 'double'
|   | | |   |         |   | `-BinaryOperator 0x2ab429c32a8 <line:60:17, col:37> 'double' '*'
|   | | |   |         |   |   |-ParenExpr 0x2ab429c3158 <col:17, col:37> 'double'
|   | | |   |         |   |   | `-CStyleCastExpr 0x2ab429c3130 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |   |   `-ParenExpr 0x2ab429c3110 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |   |     `-BinaryOperator 0x2ab429c30b8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |   |       |-IntegerLiteral 0x2ab429c3048 <col:27> 'unsigned long long' 1
|   | | |   |         |   |   |       `-ParenExpr 0x2ab429c3098 <col:33, col:35> 'int'
|   | | |   |         |   |   |         `-IntegerLiteral 0x2ab429c3070 <line:62:20> 'int' 32
|   | | |   |         |   |   `-ParenExpr 0x2ab429c3288 <line:60:17, col:37> 'double'
|   | | |   |         |   |     `-CStyleCastExpr 0x2ab429c3260 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |   |       `-ParenExpr 0x2ab429c3240 <col:26, col:36> 'unsigned long long'
|   | | |   |         |   |         `-BinaryOperator 0x2ab429c31e8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |   |           |-IntegerLiteral 0x2ab429c3178 <col:27> 'unsigned long long' 1
|   | | |   |         |   |           `-ParenExpr 0x2ab429c31c8 <col:33, col:35> 'int'
|   | | |   |         |   |             `-IntegerLiteral 0x2ab429c31a0 <line:63:27> 'int' 32
|   | | |   |         |   `-ParenExpr 0x2ab429c33f8 <line:60:17, col:37> 'double'
|   | | |   |         |     `-CStyleCastExpr 0x2ab429c33d0 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |         |       `-ParenExpr 0x2ab429c33b0 <col:26, col:36> 'unsigned long long'
|   | | |   |         |         `-BinaryOperator 0x2ab429c3358 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |         |           |-IntegerLiteral 0x2ab429c32e8 <col:27> 'unsigned long long' 1
|   | | |   |         |           `-ParenExpr 0x2ab429c3338 <col:33, col:35> 'int'
|   | | |   |         |             `-IntegerLiteral 0x2ab429c3310 <line:64:27> 'int' 32
|   | | |   |         `-ParenExpr 0x2ab429c3568 <line:60:17, col:37> 'double'
|   | | |   |           `-CStyleCastExpr 0x2ab429c3540 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |   |             `-ParenExpr 0x2ab429c3520 <col:26, col:36> 'unsigned long long'
|   | | |   |               `-BinaryOperator 0x2ab429c34c8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |   |                 |-IntegerLiteral 0x2ab429c3458 <col:27> 'unsigned long long' 1
|   | | |   |                 `-ParenExpr 0x2ab429c34a8 <col:33, col:35> 'int'
|   | | |   |                   `-IntegerLiteral 0x2ab429c3480 <line:65:28> 'int' 34
|   | | |   `-BinaryOperator 0x2ab429c3cf0 <line:60:17, line:65:31> 'double' '*'
|   | | |     |-ParenExpr 0x2ab429c3750 <line:60:17, col:37> 'double'
|   | | |     | `-CStyleCastExpr 0x2ab429c3728 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |     |   `-ParenExpr 0x2ab429c3708 <col:26, col:36> 'unsigned long long'
|   | | |     |     `-BinaryOperator 0x2ab429c36b0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |     |       |-IntegerLiteral 0x2ab429c3640 <col:27> 'unsigned long long' 1
|   | | |     |       `-ParenExpr 0x2ab429c3690 <col:33, col:35> 'int'
|   | | |     |         `-IntegerLiteral 0x2ab429c3668 <line:330:46> 'int' 52
|   | | |     `-ParenExpr 0x2ab429c3cd0 <line:65:17, col:31> 'double'
|   | | |       `-BinaryOperator 0x2ab429c3cb0 <line:64:16, line:60:37> 'double' '*'
|   | | |         |-ParenExpr 0x2ab429c3b60 <line:64:16, col:30> 'double'
|   | | |         | `-BinaryOperator 0x2ab429c3b40 <line:63:16, line:60:37> 'double' '*'
|   | | |         |   |-ParenExpr 0x2ab429c39f0 <line:63:16, col:30> 'double'
|   | | |         |   | `-BinaryOperator 0x2ab429c39d0 <line:60:17, col:37> 'double' '*'
|   | | |         |   |   |-ParenExpr 0x2ab429c3880 <col:17, col:37> 'double'
|   | | |         |   |   | `-CStyleCastExpr 0x2ab429c3858 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |   |   `-ParenExpr 0x2ab429c3838 <col:26, col:36> 'unsigned long long'
|   | | |         |   |   |     `-BinaryOperator 0x2ab429c37e0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |   |       |-IntegerLiteral 0x2ab429c3770 <col:27> 'unsigned long long' 1
|   | | |         |   |   |       `-ParenExpr 0x2ab429c37c0 <col:33, col:35> 'int'
|   | | |         |   |   |         `-IntegerLiteral 0x2ab429c3798 <line:62:20> 'int' 32
|   | | |         |   |   `-ParenExpr 0x2ab429c39b0 <line:60:17, col:37> 'double'
|   | | |         |   |     `-CStyleCastExpr 0x2ab429c3988 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |   |       `-ParenExpr 0x2ab429c3968 <col:26, col:36> 'unsigned long long'
|   | | |         |   |         `-BinaryOperator 0x2ab429c3910 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |   |           |-IntegerLiteral 0x2ab429c38a0 <col:27> 'unsigned long long' 1
|   | | |         |   |           `-ParenExpr 0x2ab429c38f0 <col:33, col:35> 'int'
|   | | |         |   |             `-IntegerLiteral 0x2ab429c38c8 <line:63:27> 'int' 32
|   | | |         |   `-ParenExpr 0x2ab429c3b20 <line:60:17, col:37> 'double'
|   | | |         |     `-CStyleCastExpr 0x2ab429c3af8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |         |       `-ParenExpr 0x2ab429c3ad8 <col:26, col:36> 'unsigned long long'
|   | | |         |         `-BinaryOperator 0x2ab429c3a80 <col:27, col:35> 'unsigned long long' '<<'
|   | | |         |           |-IntegerLiteral 0x2ab429c3a10 <col:27> 'unsigned long long' 1
|   | | |         |           `-ParenExpr 0x2ab429c3a60 <col:33, col:35> 'int'
|   | | |         |             `-IntegerLiteral 0x2ab429c3a38 <line:64:27> 'int' 32
|   | | |         `-ParenExpr 0x2ab429c3c90 <line:60:17, col:37> 'double'
|   | | |           `-CStyleCastExpr 0x2ab429c3c68 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             `-ParenExpr 0x2ab429c3c48 <col:26, col:36> 'unsigned long long'
|   | | |               `-BinaryOperator 0x2ab429c3bf0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                 |-IntegerLiteral 0x2ab429c3b80 <col:27> 'unsigned long long' 1
|   | | |                 `-ParenExpr 0x2ab429c3bd0 <col:33, col:35> 'int'
|   | | |                   `-IntegerLiteral 0x2ab429c3ba8 <line:65:28> 'int' 34
|   | | |-BinaryOperator 0x2ab429c3e78 <line:335:9, col:31> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c3d50 <col:9> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | | `-BinaryOperator 0x2ab429c3e58 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x2ab429c3e00 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x2ab429c3de0 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c3db0 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c3d70 <col:16> 'double' lvalue Var 0x2ab429b21b0 'h1lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429c3dc8 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429c3d90 <col:23> 'double' lvalue Var 0x2ab429b2610 'c1lo' 'double'
|   | | |   `-ImplicitCastExpr 0x2ab429c3e40 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2ab429c3e20 <col:31> 'double' lvalue Var 0x2ab429b2510 'c0lo' 'double'
|   | | |-BinaryOperator 0x2ab429c3fc0 <line:336:9, col:31> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c3e98 <col:9> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | | `-BinaryOperator 0x2ab429c3fa0 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x2ab429c3f48 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x2ab429c3f28 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c3ef8 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c3eb8 <col:16> 'double' lvalue Var 0x2ab429b22b0 'h2lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429c3f10 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429c3ed8 <col:23> 'double' lvalue Var 0x2ab429b2710 'c2lo' 'double'
|   | | |   `-ImplicitCastExpr 0x2ab429c3f88 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2ab429c3f68 <col:31> 'double' lvalue Var 0x2ab429b2610 'c1lo' 'double'
|   | | |-BinaryOperator 0x2ab429bf0c8 <line:337:9, col:31> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c3fe0 <col:9> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | | `-BinaryOperator 0x2ab429bf0a8 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x2ab429bf050 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x2ab429bf030 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x2ab429bf000 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429befc0 <col:16> 'double' lvalue Var 0x2ab429b23b0 'h3lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429bf018 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429befe0 <col:23> 'double' lvalue Var 0x2ab429b2810 'c3lo' 'double'
|   | | |   `-ImplicitCastExpr 0x2ab429bf090 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2ab429bf070 <col:31> 'double' lvalue Var 0x2ab429b2710 'c2lo' 'double'
|   | | |-BinaryOperator 0x2ab429bf818 <line:338:9, col:49> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429bf0e8 <col:9> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | | `-BinaryOperator 0x2ab429bf7f8 <col:15, col:49> 'double' '+'
|   | | |   |-ParenExpr 0x2ab429bf198 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x2ab429bf178 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x2ab429bf148 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429bf108 <col:16> 'double' lvalue Var 0x2ab429b20b0 'h0lo' 'double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429bf160 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429bf128 <col:23> 'double' lvalue Var 0x2ab429b2510 'c0lo' 'double'
|   | | |   `-BinaryOperator 0x2ab429bf7d8 <col:31, col:49> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x2ab429bf7c0 <col:31> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2ab429bf1b8 <col:31> 'double' lvalue Var 0x2ab429b2810 'c3lo' 'double'
|   | | |     `-ParenExpr 0x2ab429bf7a0 <col:38, col:49> 'double'
|   | | |       `-BinaryOperator 0x2ab429bf780 <col:39, line:65:31> 'double' '/'
|   | | |         |-FloatingLiteral 0x2ab429bf1d8 <line:338:39> 'double' 5.000000e+00
|   | | |         `-ParenExpr 0x2ab429bf760 <line:65:17, col:31> 'double'
|   | | |           `-BinaryOperator 0x2ab429bf740 <line:64:16, line:60:37> 'double' '*'
|   | | |             |-ParenExpr 0x2ab429bf5f0 <line:64:16, col:30> 'double'
|   | | |             | `-BinaryOperator 0x2ab429bf5d0 <line:63:16, line:60:37> 'double' '*'
|   | | |             |   |-ParenExpr 0x2ab429bf480 <line:63:16, col:30> 'double'
|   | | |             |   | `-BinaryOperator 0x2ab429bf460 <line:60:17, col:37> 'double' '*'
|   | | |             |   |   |-ParenExpr 0x2ab429bf310 <col:17, col:37> 'double'
|   | | |             |   |   | `-CStyleCastExpr 0x2ab429bf2e8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |   |   `-ParenExpr 0x2ab429bf2c8 <col:26, col:36> 'unsigned long long'
|   | | |             |   |   |     `-BinaryOperator 0x2ab429bf270 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |   |       |-IntegerLiteral 0x2ab429bf200 <col:27> 'unsigned long long' 1
|   | | |             |   |   |       `-ParenExpr 0x2ab429bf250 <col:33, col:35> 'int'
|   | | |             |   |   |         `-IntegerLiteral 0x2ab429bf228 <line:62:20> 'int' 32
|   | | |             |   |   `-ParenExpr 0x2ab429bf440 <line:60:17, col:37> 'double'
|   | | |             |   |     `-CStyleCastExpr 0x2ab429bf418 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |       `-ParenExpr 0x2ab429bf3f8 <col:26, col:36> 'unsigned long long'
|   | | |             |   |         `-BinaryOperator 0x2ab429bf3a0 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |           |-IntegerLiteral 0x2ab429bf330 <col:27> 'unsigned long long' 1
|   | | |             |   |           `-ParenExpr 0x2ab429bf380 <col:33, col:35> 'int'
|   | | |             |   |             `-IntegerLiteral 0x2ab429bf358 <line:63:27> 'int' 32
|   | | |             |   `-ParenExpr 0x2ab429bf5b0 <line:60:17, col:37> 'double'
|   | | |             |     `-CStyleCastExpr 0x2ab429bf588 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |       `-ParenExpr 0x2ab429bf568 <col:26, col:36> 'unsigned long long'
|   | | |             |         `-BinaryOperator 0x2ab429bf510 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |           |-IntegerLiteral 0x2ab429bf4a0 <col:27> 'unsigned long long' 1
|   | | |             |           `-ParenExpr 0x2ab429bf4f0 <col:33, col:35> 'int'
|   | | |             |             `-IntegerLiteral 0x2ab429bf4c8 <line:64:27> 'int' 32
|   | | |             `-ParenExpr 0x2ab429bf720 <line:60:17, col:37> 'double'
|   | | |               `-CStyleCastExpr 0x2ab429bf6f8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |                 `-ParenExpr 0x2ab429bf6d8 <col:26, col:36> 'unsigned long long'
|   | | |                   `-BinaryOperator 0x2ab429bf680 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                     |-IntegerLiteral 0x2ab429bf610 <col:27> 'unsigned long long' 1
|   | | |                     `-ParenExpr 0x2ab429bf660 <col:33, col:35> 'int'
|   | | |                       `-IntegerLiteral 0x2ab429bf638 <line:65:28> 'int' 34
|   | | |-CompoundAssignOperator 0x2ab429bf960 <line:340:9, col:31> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x2ab429bf838 <col:9> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | | `-BinaryOperator 0x2ab429bf940 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x2ab429bf8e8 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x2ab429bf8c8 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x2ab429bf898 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429bf858 <col:16> 'double' lvalue Var 0x2ab429b2230 'h1hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429bf8b0 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429bf878 <col:23> 'double' lvalue Var 0x2ab429b2690 'c1hi' 'double'
|   | | |   `-ImplicitCastExpr 0x2ab429bf928 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2ab429bf908 <col:31> 'double' lvalue Var 0x2ab429b2590 'c0hi' 'double'
|   | | |-CompoundAssignOperator 0x2ab429bfab8 <line:341:9, col:31> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x2ab429bf990 <col:9> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | | `-BinaryOperator 0x2ab429bfa98 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x2ab429bfa40 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x2ab429bfa20 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x2ab429bf9f0 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429bf9b0 <col:16> 'double' lvalue Var 0x2ab429b2330 'h2hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429bfa08 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429bf9d0 <col:23> 'double' lvalue Var 0x2ab429b2790 'c2hi' 'double'
|   | | |   `-ImplicitCastExpr 0x2ab429bfa80 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2ab429bfa60 <col:31> 'double' lvalue Var 0x2ab429b2690 'c1hi' 'double'
|   | | |-CompoundAssignOperator 0x2ab429bfc10 <line:342:9, col:31> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x2ab429bfae8 <col:9> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | | `-BinaryOperator 0x2ab429bfbf0 <col:15, col:31> 'double' '+'
|   | | |   |-ParenExpr 0x2ab429bfb98 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x2ab429bfb78 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x2ab429bfb48 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429bfb08 <col:16> 'double' lvalue Var 0x2ab429b2430 'h3hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429bfb60 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429bfb28 <col:23> 'double' lvalue Var 0x2ab429b2890 'c3hi' 'double'
|   | | |   `-ImplicitCastExpr 0x2ab429bfbd8 <col:31> 'double' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2ab429bfbb8 <col:31> 'double' lvalue Var 0x2ab429b2790 'c2hi' 'double'
|   | | |-CompoundAssignOperator 0x2ab429c8408 <line:343:9, col:49> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | | | |-DeclRefExpr 0x2ab429bfc40 <col:9> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | | `-BinaryOperator 0x2ab429c83e8 <col:15, col:49> 'double' '+'
|   | | |   |-ParenExpr 0x2ab429bfcf0 <col:15, col:27> 'double'
|   | | |   | `-BinaryOperator 0x2ab429bfcd0 <col:16, col:23> 'double' '-'
|   | | |   |   |-ImplicitCastExpr 0x2ab429bfca0 <col:16> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429bfc60 <col:16> 'double' lvalue Var 0x2ab429b2130 'h0hi' 'double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429bfcb8 <col:23> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429bfc80 <col:23> 'double' lvalue Var 0x2ab429b2590 'c0hi' 'double'
|   | | |   `-BinaryOperator 0x2ab429c83c8 <col:31, col:49> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x2ab429c83b0 <col:31> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2ab429bfd10 <col:31> 'double' lvalue Var 0x2ab429b2890 'c3hi' 'double'
|   | | |     `-ParenExpr 0x2ab429c8390 <col:38, col:49> 'double'
|   | | |       `-BinaryOperator 0x2ab429c8370 <col:39, line:65:31> 'double' '/'
|   | | |         |-FloatingLiteral 0x2ab429bfd30 <line:343:39> 'double' 5.000000e+00
|   | | |         `-ParenExpr 0x2ab429c8350 <line:65:17, col:31> 'double'
|   | | |           `-BinaryOperator 0x2ab429c8330 <line:64:16, line:60:37> 'double' '*'
|   | | |             |-ParenExpr 0x2ab429c81e0 <line:64:16, col:30> 'double'
|   | | |             | `-BinaryOperator 0x2ab429c81c0 <line:63:16, line:60:37> 'double' '*'
|   | | |             |   |-ParenExpr 0x2ab429c8070 <line:63:16, col:30> 'double'
|   | | |             |   | `-BinaryOperator 0x2ab429c8050 <line:60:17, col:37> 'double' '*'
|   | | |             |   |   |-ParenExpr 0x2ab429bfe68 <col:17, col:37> 'double'
|   | | |             |   |   | `-CStyleCastExpr 0x2ab429bfe40 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |   |   `-ParenExpr 0x2ab429bfe20 <col:26, col:36> 'unsigned long long'
|   | | |             |   |   |     `-BinaryOperator 0x2ab429bfdc8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |   |       |-IntegerLiteral 0x2ab429bfd58 <col:27> 'unsigned long long' 1
|   | | |             |   |   |       `-ParenExpr 0x2ab429bfda8 <col:33, col:35> 'int'
|   | | |             |   |   |         `-IntegerLiteral 0x2ab429bfd80 <line:62:20> 'int' 32
|   | | |             |   |   `-ParenExpr 0x2ab429bff98 <line:60:17, col:37> 'double'
|   | | |             |   |     `-CStyleCastExpr 0x2ab429bff70 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |   |       `-ParenExpr 0x2ab429bff50 <col:26, col:36> 'unsigned long long'
|   | | |             |   |         `-BinaryOperator 0x2ab429bfef8 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |   |           |-IntegerLiteral 0x2ab429bfe88 <col:27> 'unsigned long long' 1
|   | | |             |   |           `-ParenExpr 0x2ab429bfed8 <col:33, col:35> 'int'
|   | | |             |   |             `-IntegerLiteral 0x2ab429bfeb0 <line:63:27> 'int' 32
|   | | |             |   `-ParenExpr 0x2ab429c81a0 <line:60:17, col:37> 'double'
|   | | |             |     `-CStyleCastExpr 0x2ab429c8178 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |             |       `-ParenExpr 0x2ab429c8158 <col:26, col:36> 'unsigned long long'
|   | | |             |         `-BinaryOperator 0x2ab429c8100 <col:27, col:35> 'unsigned long long' '<<'
|   | | |             |           |-IntegerLiteral 0x2ab429c8090 <col:27> 'unsigned long long' 1
|   | | |             |           `-ParenExpr 0x2ab429c80e0 <col:33, col:35> 'int'
|   | | |             |             `-IntegerLiteral 0x2ab429c80b8 <line:64:27> 'int' 32
|   | | |             `-ParenExpr 0x2ab429c8310 <line:60:17, col:37> 'double'
|   | | |               `-CStyleCastExpr 0x2ab429c82e8 <col:18, col:36> 'double' <IntegralToFloating>
|   | | |                 `-ParenExpr 0x2ab429c82c8 <col:26, col:36> 'unsigned long long'
|   | | |                   `-BinaryOperator 0x2ab429c8270 <col:27, col:35> 'unsigned long long' '<<'
|   | | |                     |-IntegerLiteral 0x2ab429c8200 <col:27> 'unsigned long long' 1
|   | | |                     `-ParenExpr 0x2ab429c8250 <col:33, col:35> 'int'
|   | | |                       `-IntegerLiteral 0x2ab429c8228 <line:65:28> 'int' 34
|   | | |-BinaryOperator 0x2ab429c8758 <line:351:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c8438 <col:9> 'double' lvalue Var 0x2ab429b20b0 'h0lo' 'double'
|   | | | `-BinaryOperator 0x2ab429c8738 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x2ab429c8670 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x2ab429c85a8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x2ab429c84e0 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x2ab429c84b0 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x2ab429c8458 <col:16> 'const double' lvalue Var 0x2ab429bebf0 's3lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x2ab429c84c8 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x2ab429c8490 <col:23> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x2ab429c8588 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x2ab429c8558 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x2ab429c8500 <col:28> 'const double' lvalue Var 0x2ab429be900 's2lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x2ab429c8570 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x2ab429c8538 <col:35> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | |   | `-BinaryOperator 0x2ab429c8650 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c8620 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c85c8 <col:40> 'const double' lvalue Var 0x2ab429be610 's1lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429c8638 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429c8600 <col:47> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | |   `-BinaryOperator 0x2ab429c8718 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x2ab429c86e8 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2ab429c8690 <col:52> 'const double' lvalue Var 0x2ab429b2970 'r0lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x2ab429c8700 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2ab429c86c8 <col:59> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | |-BinaryOperator 0x2ab429c8a50 <line:352:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c8778 <col:9> 'double' lvalue Var 0x2ab429b21b0 'h1lo' 'double'
|   | | | `-BinaryOperator 0x2ab429c8a30 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x2ab429c8968 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x2ab429c88b8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x2ab429c8808 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x2ab429c87d8 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x2ab429c8798 <col:16> 'const double' lvalue Var 0x2ab429b2970 'r0lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x2ab429c87f0 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x2ab429c87b8 <col:23> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x2ab429c8898 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x2ab429c8868 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x2ab429c8828 <col:28> 'const double' lvalue Var 0x2ab429bebf0 's3lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x2ab429c8880 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x2ab429c8848 <col:35> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | |   | `-BinaryOperator 0x2ab429c8948 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c8918 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c88d8 <col:40> 'const double' lvalue Var 0x2ab429be900 's2lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429c8930 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429c88f8 <col:47> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | |   `-BinaryOperator 0x2ab429c8a10 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x2ab429c89e0 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2ab429c8988 <col:52> 'const double' lvalue Var 0x2ab429b2c78 'r1lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x2ab429c89f8 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2ab429c89c0 <col:59> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | |-BinaryOperator 0x2ab429c8d48 <line:353:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c8a70 <col:9> 'double' lvalue Var 0x2ab429b22b0 'h2lo' 'double'
|   | | | `-BinaryOperator 0x2ab429c8d28 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x2ab429c8c60 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x2ab429c8bb0 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x2ab429c8b00 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x2ab429c8ad0 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x2ab429c8a90 <col:16> 'const double' lvalue Var 0x2ab429b2c78 'r1lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x2ab429c8ae8 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x2ab429c8ab0 <col:23> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x2ab429c8b90 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x2ab429c8b60 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x2ab429c8b20 <col:28> 'const double' lvalue Var 0x2ab429b2970 'r0lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x2ab429c8b78 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x2ab429c8b40 <col:35> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | |   | `-BinaryOperator 0x2ab429c8c40 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c8c10 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c8bd0 <col:40> 'const double' lvalue Var 0x2ab429bebf0 's3lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429c8c28 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429c8bf0 <col:47> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | |   `-BinaryOperator 0x2ab429c8d08 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x2ab429c8cd8 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2ab429c8c80 <col:52> 'const double' lvalue Var 0x2ab429be030 'r2lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x2ab429c8cf0 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2ab429c8cb8 <col:59> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | |-BinaryOperator 0x2ab429c6030 <line:354:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c8d68 <col:9> 'double' lvalue Var 0x2ab429b23b0 'h3lo' 'double'
|   | | | `-BinaryOperator 0x2ab429c9020 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x2ab429c8f58 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x2ab429c8ea8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x2ab429c8df8 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x2ab429c8dc8 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x2ab429c8d88 <col:16> 'const double' lvalue Var 0x2ab429be030 'r2lo' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x2ab429c8de0 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x2ab429c8da8 <col:23> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x2ab429c8e88 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x2ab429c8e58 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x2ab429c8e18 <col:28> 'const double' lvalue Var 0x2ab429b2c78 'r1lo' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x2ab429c8e70 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x2ab429c8e38 <col:35> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | |   | `-BinaryOperator 0x2ab429c8f38 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c8f08 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c8ec8 <col:40> 'const double' lvalue Var 0x2ab429b2970 'r0lo' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429c8f20 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429c8ee8 <col:47> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | |   `-BinaryOperator 0x2ab429c9000 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x2ab429c8fd0 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2ab429c8f78 <col:52> 'const double' lvalue Var 0x2ab429be320 'r3lo' 'const double'
|   | | |     `-ImplicitCastExpr 0x2ab429c8fe8 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2ab429c8fb0 <col:59> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | |-BinaryOperator 0x2ab429c6370 <line:356:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c6050 <col:9> 'double' lvalue Var 0x2ab429b2130 'h0hi' 'double'
|   | | | `-BinaryOperator 0x2ab429c6350 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x2ab429c6288 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x2ab429c61c0 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x2ab429c60f8 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x2ab429c60c8 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x2ab429c6070 <col:16> 'const double' lvalue Var 0x2ab429bed68 's3hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x2ab429c60e0 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x2ab429c60a8 <col:23> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x2ab429c61a0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x2ab429c6170 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x2ab429c6118 <col:28> 'const double' lvalue Var 0x2ab429bea78 's2hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x2ab429c6188 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x2ab429c6150 <col:35> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | |   | `-BinaryOperator 0x2ab429c6268 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c6238 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c61e0 <col:40> 'const double' lvalue Var 0x2ab429be788 's1hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429c6250 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429c6218 <col:47> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | |   `-BinaryOperator 0x2ab429c6330 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x2ab429c6300 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2ab429c62a8 <col:52> 'const double' lvalue Var 0x2ab429b2b00 'r0hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x2ab429c6318 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2ab429c62e0 <col:59> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | |-BinaryOperator 0x2ab429c6668 <line:357:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c6390 <col:9> 'double' lvalue Var 0x2ab429b2230 'h1hi' 'double'
|   | | | `-BinaryOperator 0x2ab429c6648 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x2ab429c6580 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x2ab429c64d0 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x2ab429c6420 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x2ab429c63f0 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x2ab429c63b0 <col:16> 'const double' lvalue Var 0x2ab429b2b00 'r0hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x2ab429c6408 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x2ab429c63d0 <col:23> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x2ab429c64b0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x2ab429c6480 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x2ab429c6440 <col:28> 'const double' lvalue Var 0x2ab429bed68 's3hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x2ab429c6498 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x2ab429c6460 <col:35> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | |   | `-BinaryOperator 0x2ab429c6560 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c6530 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c64f0 <col:40> 'const double' lvalue Var 0x2ab429bea78 's2hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429c6548 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429c6510 <col:47> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | |   `-BinaryOperator 0x2ab429c6628 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x2ab429c65f8 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2ab429c65a0 <col:52> 'const double' lvalue Var 0x2ab429b2df0 'r1hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x2ab429c6610 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2ab429c65d8 <col:59> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | |-BinaryOperator 0x2ab429c6960 <line:358:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c6688 <col:9> 'double' lvalue Var 0x2ab429b2330 'h2hi' 'double'
|   | | | `-BinaryOperator 0x2ab429c6940 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x2ab429c6878 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x2ab429c67c8 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x2ab429c6718 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x2ab429c66e8 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x2ab429c66a8 <col:16> 'const double' lvalue Var 0x2ab429b2df0 'r1hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x2ab429c6700 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x2ab429c66c8 <col:23> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x2ab429c67a8 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x2ab429c6778 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x2ab429c6738 <col:28> 'const double' lvalue Var 0x2ab429b2b00 'r0hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x2ab429c6790 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x2ab429c6758 <col:35> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | |   | `-BinaryOperator 0x2ab429c6858 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c6828 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c67e8 <col:40> 'const double' lvalue Var 0x2ab429bed68 's3hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429c6840 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429c6808 <col:47> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | |   `-BinaryOperator 0x2ab429c6920 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x2ab429c68f0 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2ab429c6898 <col:52> 'const double' lvalue Var 0x2ab429be1a8 'r2hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x2ab429c6908 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2ab429c68d0 <col:59> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | |-BinaryOperator 0x2ab429c6c58 <line:359:9, col:59> 'double' '='
|   | | | |-DeclRefExpr 0x2ab429c6980 <col:9> 'double' lvalue Var 0x2ab429b2430 'h3hi' 'double'
|   | | | `-BinaryOperator 0x2ab429c6c38 <col:16, col:59> 'double' '+'
|   | | |   |-BinaryOperator 0x2ab429c6b70 <col:16, col:47> 'double' '+'
|   | | |   | |-BinaryOperator 0x2ab429c6ac0 <col:16, col:35> 'double' '+'
|   | | |   | | |-BinaryOperator 0x2ab429c6a10 <col:16, col:23> 'double' '*'
|   | | |   | | | |-ImplicitCastExpr 0x2ab429c69e0 <col:16> 'double' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x2ab429c69a0 <col:16> 'const double' lvalue Var 0x2ab429be1a8 'r2hi' 'const double'
|   | | |   | | | `-ImplicitCastExpr 0x2ab429c69f8 <col:23> 'double' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x2ab429c69c0 <col:23> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | | |   | | `-BinaryOperator 0x2ab429c6aa0 <col:28, col:35> 'double' '*'
|   | | |   | |   |-ImplicitCastExpr 0x2ab429c6a70 <col:28> 'double' <LValueToRValue>
|   | | |   | |   | `-DeclRefExpr 0x2ab429c6a30 <col:28> 'const double' lvalue Var 0x2ab429b2df0 'r1hi' 'const double'
|   | | |   | |   `-ImplicitCastExpr 0x2ab429c6a88 <col:35> 'double' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x2ab429c6a50 <col:35> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | | |   | `-BinaryOperator 0x2ab429c6b50 <col:40, col:47> 'double' '*'
|   | | |   |   |-ImplicitCastExpr 0x2ab429c6b20 <col:40> 'double' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2ab429c6ae0 <col:40> 'const double' lvalue Var 0x2ab429b2b00 'r0hi' 'const double'
|   | | |   |   `-ImplicitCastExpr 0x2ab429c6b38 <col:47> 'double' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2ab429c6b00 <col:47> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | | |   `-BinaryOperator 0x2ab429c6c18 <col:52, col:59> 'double' '*'
|   | | |     |-ImplicitCastExpr 0x2ab429c6be8 <col:52> 'double' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2ab429c6b90 <col:52> 'const double' lvalue Var 0x2ab429be498 'r3hi' 'const double'
|   | | |     `-ImplicitCastExpr 0x2ab429c6c00 <col:59> 'double' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2ab429c6bc8 <col:59> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | | |-CompoundAssignOperator 0x2ab429c6cc0 <line:361:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | | | |-DeclRefExpr 0x2ab429c6c78 <col:9> 'const unsigned char *' lvalue ParmVar 0x2ab429b9698 'inp' 'const unsigned char *'
|   | | | `-IntegerLiteral 0x2ab429c6c98 <col:16> 'int' 16
|   | | `-CompoundAssignOperator 0x2ab429c6d50 <line:362:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |   |-DeclRefExpr 0x2ab429c6cf0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2ab429b9710 'len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x2ab429c6d38 <col:16> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x2ab429c6d10 <col:16> 'int' 16
|   | `-BinaryOperator 0x2ab429c6f38 <line:364:14, col:21> 'int' '>='
|   |   |-ImplicitCastExpr 0x2ab429c6f08 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2ab429c6ec0 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x2ab429b9710 'len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x2ab429c6f20 <col:21> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x2ab429c6ee0 <col:21> 'int' 16
|   |-BinaryOperator 0x2ab429ca578 <line:369:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x2ab429c6f78 <line:369:5> 'double' lvalue Var 0x2ab429b2510 'c0lo' 'double'
|   | `-BinaryOperator 0x2ab429ca558 <col:12, line:60:37> 'double' '-'
|   |   |-ParenExpr 0x2ab429ca2b8 <line:369:12, col:33> 'double'
|   |   | `-BinaryOperator 0x2ab429ca298 <col:13, line:60:37> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x2ab429ca280 <line:369:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429c6f98 <col:13> 'double' lvalue Var 0x2ab429b20b0 'h0lo' 'double'
|   |   |   `-BinaryOperator 0x2ab429ca260 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x2ab429ca110 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab429ca0e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab429ca0c8 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab429ca070 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab429c6fb8 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab429c7008 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab429c6fe0 <line:369:24> 'int' 52
|   |   |     `-ParenExpr 0x2ab429ca240 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x2ab429ca218 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x2ab429ca1f8 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x2ab429ca1a0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x2ab429ca130 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x2ab429ca180 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x2ab429ca158 <line:62:20> 'int' 32
|   |   `-BinaryOperator 0x2ab429ca538 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x2ab429ca3e8 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429ca3c0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429ca3a0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429ca348 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429ca2d8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429ca328 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429ca300 <line:369:42> 'int' 52
|   |     `-ParenExpr 0x2ab429ca518 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x2ab429ca4f0 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x2ab429ca4d0 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x2ab429ca478 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x2ab429ca408 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x2ab429ca458 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x2ab429ca430 <line:62:20> 'int' 32
|   |-BinaryOperator 0x2ab429cae30 <line:370:5, line:63:30> 'double' '='
|   | |-DeclRefExpr 0x2ab429ca598 <line:370:5> 'double' lvalue Var 0x2ab429b2610 'c1lo' 'double'
|   | `-BinaryOperator 0x2ab429cae10 <col:12, line:63:30> 'double' '-'
|   |   |-ParenExpr 0x2ab429caa00 <line:370:12, col:33> 'double'
|   |   | `-BinaryOperator 0x2ab429ca9e0 <col:13, line:63:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x2ab429ca9c8 <line:370:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429ca5b8 <col:13> 'double' lvalue Var 0x2ab429b21b0 'h1lo' 'double'
|   |   |   `-BinaryOperator 0x2ab429ca9a8 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-ParenExpr 0x2ab429ca6e8 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab429ca6c0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab429ca6a0 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab429ca648 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab429ca5d8 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab429ca628 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab429ca600 <line:370:24> 'int' 52
|   |   |     `-ParenExpr 0x2ab429ca988 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab429ca968 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429ca818 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x2ab429ca7f0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x2ab429ca7d0 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x2ab429ca778 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x2ab429ca708 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x2ab429ca758 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x2ab429ca730 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x2ab429ca948 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429ca920 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429ca900 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429ca8a8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429ca838 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429ca888 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429ca860 <line:63:27> 'int' 32
|   |   `-BinaryOperator 0x2ab429cadf0 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x2ab429cab30 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429cab08 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429caae8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429caa90 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429caa20 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429caa70 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429caa48 <line:370:42> 'int' 52
|   |     `-ParenExpr 0x2ab429cadd0 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x2ab429cadb0 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x2ab429cac60 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x2ab429cac38 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x2ab429cac18 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x2ab429cabc0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x2ab429cab50 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x2ab429caba0 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x2ab429cab78 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x2ab429cad90 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x2ab429cad68 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x2ab429cad48 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x2ab429cacf0 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x2ab429cac80 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x2ab429cacd0 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x2ab429caca8 <line:63:27> 'int' 32
|   |-BinaryOperator 0x2ab429cb9d8 <line:371:5, line:64:30> 'double' '='
|   | |-DeclRefExpr 0x2ab429cae50 <line:371:5> 'double' lvalue Var 0x2ab429b2710 'c2lo' 'double'
|   | `-BinaryOperator 0x2ab429cb9b8 <col:12, line:64:30> 'double' '-'
|   |   |-ParenExpr 0x2ab429cb438 <line:371:12, col:33> 'double'
|   |   | `-BinaryOperator 0x2ab429cb418 <col:13, line:64:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x2ab429cb400 <line:371:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429cae70 <col:13> 'double' lvalue Var 0x2ab429b22b0 'h2lo' 'double'
|   |   |   `-BinaryOperator 0x2ab429cb3e0 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-ParenExpr 0x2ab429cafa0 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab429caf78 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab429caf58 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab429caf00 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab429cae90 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab429caee0 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab429caeb8 <line:371:24> 'int' 52
|   |   |     `-ParenExpr 0x2ab429cb3c0 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab429cb3a0 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429cb250 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x2ab429cb230 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x2ab429cb0e0 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x2ab429cb0b8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x2ab429cb098 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x2ab429cb030 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x2ab429cafc0 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x2ab429cb010 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x2ab429cafe8 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x2ab429cb210 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x2ab429cb1e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x2ab429cb1c8 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x2ab429cb170 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x2ab429cb100 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x2ab429cb150 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x2ab429cb128 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x2ab429cb380 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429cb358 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429cb338 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429cb2e0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429cb270 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429cb2c0 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429cb298 <line:64:27> 'int' 32
|   |   `-BinaryOperator 0x2ab429cb998 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x2ab429cb568 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429cb540 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429cb520 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429cb4c8 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429cb458 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429cb4a8 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429cb480 <line:371:42> 'int' 52
|   |     `-ParenExpr 0x2ab429cb978 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x2ab429cb958 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x2ab429cb808 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x2ab429cb7e8 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x2ab429cb698 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x2ab429cb670 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x2ab429cb650 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x2ab429cb5f8 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x2ab429cb588 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x2ab429cb5d8 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x2ab429cb5b0 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x2ab429cb7c8 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x2ab429cb7a0 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x2ab429cb780 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x2ab429cb728 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x2ab429cb6b8 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x2ab429cb708 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x2ab429cb6e0 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x2ab429cb938 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x2ab429cb910 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x2ab429cb8f0 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x2ab429cb898 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x2ab429cb828 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x2ab429cb878 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x2ab429cb850 <line:64:27> 'int' 32
|   |-BinaryOperator 0x2ab429c5810 <line:372:5, line:65:31> 'double' '='
|   | |-DeclRefExpr 0x2ab429cb9f8 <line:372:5> 'double' lvalue Var 0x2ab429b2810 'c3lo' 'double'
|   | `-BinaryOperator 0x2ab429c57f0 <col:12, line:65:31> 'double' '-'
|   |   |-ParenExpr 0x2ab429c5100 <line:372:12, col:34> 'double'
|   |   | `-BinaryOperator 0x2ab429c50e0 <col:13, line:65:31> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x2ab429c50c8 <line:372:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429cba18 <col:13> 'double' lvalue Var 0x2ab429b23b0 'h3lo' 'double'
|   |   |   `-BinaryOperator 0x2ab429c50a8 <line:60:17, line:65:31> 'double' '*'
|   |   |     |-ParenExpr 0x2ab429cbb48 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab429cbb20 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab429cbb00 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab429cbaa8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab429cba38 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab429cba88 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab429cba60 <line:372:24> 'int' 52
|   |   |     `-ParenExpr 0x2ab429c5088 <line:65:17, col:31> 'double'
|   |   |       `-BinaryOperator 0x2ab429c5068 <line:64:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429cbf58 <line:64:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x2ab429cbf38 <line:63:16, line:60:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x2ab429cbde8 <line:63:16, col:30> 'double'
|   |   |         |   | `-BinaryOperator 0x2ab429cbdc8 <line:60:17, col:37> 'double' '*'
|   |   |         |   |   |-ParenExpr 0x2ab429cbc78 <col:17, col:37> 'double'
|   |   |         |   |   | `-CStyleCastExpr 0x2ab429cbc50 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   |   `-ParenExpr 0x2ab429cbc30 <col:26, col:36> 'unsigned long long'
|   |   |         |   |   |     `-BinaryOperator 0x2ab429cbbd8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |   |       |-IntegerLiteral 0x2ab429cbb68 <col:27> 'unsigned long long' 1
|   |   |         |   |   |       `-ParenExpr 0x2ab429cbbb8 <col:33, col:35> 'int'
|   |   |         |   |   |         `-IntegerLiteral 0x2ab429cbb90 <line:62:20> 'int' 32
|   |   |         |   |   `-ParenExpr 0x2ab429cbda8 <line:60:17, col:37> 'double'
|   |   |         |   |     `-CStyleCastExpr 0x2ab429cbd80 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |       `-ParenExpr 0x2ab429cbd60 <col:26, col:36> 'unsigned long long'
|   |   |         |   |         `-BinaryOperator 0x2ab429cbd08 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |           |-IntegerLiteral 0x2ab429cbc98 <col:27> 'unsigned long long' 1
|   |   |         |   |           `-ParenExpr 0x2ab429cbce8 <col:33, col:35> 'int'
|   |   |         |   |             `-IntegerLiteral 0x2ab429cbcc0 <line:63:27> 'int' 32
|   |   |         |   `-ParenExpr 0x2ab429cbf18 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x2ab429cbef0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x2ab429cbed0 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x2ab429cbe78 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x2ab429cbe08 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x2ab429cbe58 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x2ab429cbe30 <line:64:27> 'int' 32
|   |   |         `-ParenExpr 0x2ab429c5048 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429c5020 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429cc040 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429cbfe8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429cbf78 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429cbfc8 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429cbfa0 <line:65:28> 'int' 34
|   |   `-BinaryOperator 0x2ab429c57d0 <line:60:17, line:65:31> 'double' '*'
|   |     |-ParenExpr 0x2ab429c5230 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429c5208 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429c51e8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429c5190 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429c5120 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429c5170 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429c5148 <line:372:42> 'int' 52
|   |     `-ParenExpr 0x2ab429c57b0 <line:65:17, col:31> 'double'
|   |       `-BinaryOperator 0x2ab429c5790 <line:64:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x2ab429c5640 <line:64:16, col:30> 'double'
|   |         | `-BinaryOperator 0x2ab429c5620 <line:63:16, line:60:37> 'double' '*'
|   |         |   |-ParenExpr 0x2ab429c54d0 <line:63:16, col:30> 'double'
|   |         |   | `-BinaryOperator 0x2ab429c54b0 <line:60:17, col:37> 'double' '*'
|   |         |   |   |-ParenExpr 0x2ab429c5360 <col:17, col:37> 'double'
|   |         |   |   | `-CStyleCastExpr 0x2ab429c5338 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   |   `-ParenExpr 0x2ab429c5318 <col:26, col:36> 'unsigned long long'
|   |         |   |   |     `-BinaryOperator 0x2ab429c52c0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |   |       |-IntegerLiteral 0x2ab429c5250 <col:27> 'unsigned long long' 1
|   |         |   |   |       `-ParenExpr 0x2ab429c52a0 <col:33, col:35> 'int'
|   |         |   |   |         `-IntegerLiteral 0x2ab429c5278 <line:62:20> 'int' 32
|   |         |   |   `-ParenExpr 0x2ab429c5490 <line:60:17, col:37> 'double'
|   |         |   |     `-CStyleCastExpr 0x2ab429c5468 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |       `-ParenExpr 0x2ab429c5448 <col:26, col:36> 'unsigned long long'
|   |         |   |         `-BinaryOperator 0x2ab429c53f0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |           |-IntegerLiteral 0x2ab429c5380 <col:27> 'unsigned long long' 1
|   |         |   |           `-ParenExpr 0x2ab429c53d0 <col:33, col:35> 'int'
|   |         |   |             `-IntegerLiteral 0x2ab429c53a8 <line:63:27> 'int' 32
|   |         |   `-ParenExpr 0x2ab429c5600 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x2ab429c55d8 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x2ab429c55b8 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x2ab429c5560 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x2ab429c54f0 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x2ab429c5540 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x2ab429c5518 <line:64:27> 'int' 32
|   |         `-ParenExpr 0x2ab429c5770 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x2ab429c5748 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x2ab429c5728 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x2ab429c56d0 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x2ab429c5660 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x2ab429c56b0 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x2ab429c5688 <line:65:28> 'int' 34
|   |-BinaryOperator 0x2ab429c5de8 <line:374:5, line:60:37> 'double' '='
|   | |-DeclRefExpr 0x2ab429c5830 <line:374:5> 'double' lvalue Var 0x2ab429b2590 'c0hi' 'double'
|   | `-BinaryOperator 0x2ab429c5dc8 <col:12, line:60:37> 'double' '-'
|   |   |-ParenExpr 0x2ab429c5b28 <line:374:12, col:33> 'double'
|   |   | `-BinaryOperator 0x2ab429c5b08 <col:13, line:60:37> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x2ab429c5af0 <line:374:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429c5850 <col:13> 'double' lvalue Var 0x2ab429b2130 'h0hi' 'double'
|   |   |   `-BinaryOperator 0x2ab429c5ad0 <line:60:17, col:37> 'double' '*'
|   |   |     |-ParenExpr 0x2ab429c5980 <col:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab429c5958 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab429c5938 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab429c58e0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab429c5870 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab429c58c0 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab429c5898 <line:374:24> 'int' 52
|   |   |     `-ParenExpr 0x2ab429c5ab0 <line:60:17, col:37> 'double'
|   |   |       `-CStyleCastExpr 0x2ab429c5a88 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         `-ParenExpr 0x2ab429c5a68 <col:26, col:36> 'unsigned long long'
|   |   |           `-BinaryOperator 0x2ab429c5a10 <col:27, col:35> 'unsigned long long' '<<'
|   |   |             |-IntegerLiteral 0x2ab429c59a0 <col:27> 'unsigned long long' 1
|   |   |             `-ParenExpr 0x2ab429c59f0 <col:33, col:35> 'int'
|   |   |               `-IntegerLiteral 0x2ab429c59c8 <line:62:20> 'int' 32
|   |   `-BinaryOperator 0x2ab429c5da8 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x2ab429c5c58 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429c5c30 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429c5c10 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429c5bb8 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429c5b48 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429c5b98 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429c5b70 <line:374:42> 'int' 52
|   |     `-ParenExpr 0x2ab429c5d88 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x2ab429c5d60 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x2ab429c5d40 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x2ab429c5ce8 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x2ab429c5c78 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x2ab429c5cc8 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x2ab429c5ca0 <line:62:20> 'int' 32
|   |-BinaryOperator 0x2ab429cc728 <line:375:5, line:63:30> 'double' '='
|   | |-DeclRefExpr 0x2ab429c5e08 <line:375:5> 'double' lvalue Var 0x2ab429b2690 'c1hi' 'double'
|   | `-BinaryOperator 0x2ab429cc708 <col:12, line:63:30> 'double' '-'
|   |   |-ParenExpr 0x2ab429cc2f8 <line:375:12, col:33> 'double'
|   |   | `-BinaryOperator 0x2ab429cc2d8 <col:13, line:63:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x2ab429cc2c0 <line:375:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429c5e28 <col:13> 'double' lvalue Var 0x2ab429b2230 'h1hi' 'double'
|   |   |   `-BinaryOperator 0x2ab429cc2a0 <line:60:17, line:63:30> 'double' '*'
|   |   |     |-ParenExpr 0x2ab429c5f58 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab429c5f30 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab429c5f10 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab429c5eb8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab429c5e48 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab429c5e98 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab429c5e70 <line:375:24> 'int' 52
|   |   |     `-ParenExpr 0x2ab429cc280 <line:63:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab429cc260 <line:60:17, col:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429cc110 <col:17, col:37> 'double'
|   |   |         | `-CStyleCastExpr 0x2ab429cc0e8 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   `-ParenExpr 0x2ab429cc0c8 <col:26, col:36> 'unsigned long long'
|   |   |         |     `-BinaryOperator 0x2ab429c5fe8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |       |-IntegerLiteral 0x2ab429c5f78 <col:27> 'unsigned long long' 1
|   |   |         |       `-ParenExpr 0x2ab429c5fc8 <col:33, col:35> 'int'
|   |   |         |         `-IntegerLiteral 0x2ab429c5fa0 <line:62:20> 'int' 32
|   |   |         `-ParenExpr 0x2ab429cc240 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429cc218 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429cc1f8 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429cc1a0 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429cc130 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429cc180 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429cc158 <line:63:27> 'int' 32
|   |   `-BinaryOperator 0x2ab429cc6e8 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x2ab429cc428 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429cc400 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429cc3e0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429cc388 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429cc318 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429cc368 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429cc340 <line:375:42> 'int' 52
|   |     `-ParenExpr 0x2ab429cc6c8 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x2ab429cc6a8 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x2ab429cc558 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x2ab429cc530 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x2ab429cc510 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x2ab429cc4b8 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x2ab429cc448 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x2ab429cc498 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x2ab429cc470 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x2ab429cc688 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x2ab429cc660 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x2ab429cc640 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x2ab429cc5e8 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x2ab429cc578 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x2ab429cc5c8 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x2ab429cc5a0 <line:63:27> 'int' 32
|   |-BinaryOperator 0x2ab429c9298 <line:376:5, line:64:30> 'double' '='
|   | |-DeclRefExpr 0x2ab429cc748 <line:376:5> 'double' lvalue Var 0x2ab429b2790 'c2hi' 'double'
|   | `-BinaryOperator 0x2ab429c9278 <col:12, line:64:30> 'double' '-'
|   |   |-ParenExpr 0x2ab429ccd20 <line:376:12, col:33> 'double'
|   |   | `-BinaryOperator 0x2ab429ccd00 <col:13, line:64:30> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x2ab429ccce8 <line:376:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429cc768 <col:13> 'double' lvalue Var 0x2ab429b2330 'h2hi' 'double'
|   |   |   `-BinaryOperator 0x2ab429cccc8 <line:60:17, line:64:30> 'double' '*'
|   |   |     |-ParenExpr 0x2ab429cc898 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab429cc870 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab429cc850 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab429cc7f8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab429cc788 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab429cc7d8 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab429cc7b0 <line:376:24> 'int' 52
|   |   |     `-ParenExpr 0x2ab429ccca8 <line:64:16, col:30> 'double'
|   |   |       `-BinaryOperator 0x2ab429ccc88 <line:63:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429ccb38 <line:63:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x2ab429ccb18 <line:60:17, col:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x2ab429cc9c8 <col:17, col:37> 'double'
|   |   |         |   | `-CStyleCastExpr 0x2ab429cc9a0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   `-ParenExpr 0x2ab429cc980 <col:26, col:36> 'unsigned long long'
|   |   |         |   |     `-BinaryOperator 0x2ab429cc928 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |       |-IntegerLiteral 0x2ab429cc8b8 <col:27> 'unsigned long long' 1
|   |   |         |   |       `-ParenExpr 0x2ab429cc908 <col:33, col:35> 'int'
|   |   |         |   |         `-IntegerLiteral 0x2ab429cc8e0 <line:62:20> 'int' 32
|   |   |         |   `-ParenExpr 0x2ab429ccaf8 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x2ab429ccad0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x2ab429ccab0 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x2ab429cca58 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x2ab429cc9e8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x2ab429cca38 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x2ab429cca10 <line:63:27> 'int' 32
|   |   |         `-ParenExpr 0x2ab429ccc68 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429ccc40 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429ccc20 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429ccbc8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429ccb58 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429ccba8 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429ccb80 <line:64:27> 'int' 32
|   |   `-BinaryOperator 0x2ab429c9258 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x2ab429cce50 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429cce28 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429cce08 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429ccdb0 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429ccd40 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429ccd90 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429ccd68 <line:376:42> 'int' 52
|   |     `-ParenExpr 0x2ab429c9238 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x2ab429c9218 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x2ab429c90c8 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x2ab429c90a8 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x2ab429ccf80 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x2ab429ccf58 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x2ab429ccf38 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x2ab429ccee0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x2ab429cce70 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x2ab429ccec0 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x2ab429cce98 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x2ab429c9088 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x2ab429c9060 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x2ab429cd068 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x2ab429cd010 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x2ab429ccfa0 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x2ab429ccff0 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x2ab429ccfc8 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x2ab429c91f8 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x2ab429c91d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x2ab429c91b0 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x2ab429c9158 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x2ab429c90e8 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x2ab429c9138 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x2ab429c9110 <line:64:27> 'int' 32
|   |-BinaryOperator 0x2ab429cd168 <line:377:5, line:65:31> 'double' '='
|   | |-DeclRefExpr 0x2ab429c92b8 <line:377:5> 'double' lvalue Var 0x2ab429b2890 'c3hi' 'double'
|   | `-BinaryOperator 0x2ab429cd148 <col:12, line:65:31> 'double' '-'
|   |   |-ParenExpr 0x2ab429c9a00 <line:377:12, col:34> 'double'
|   |   | `-BinaryOperator 0x2ab429c99e0 <col:13, line:65:31> 'double' '+'
|   |   |   |-ImplicitCastExpr 0x2ab429c99c8 <line:377:13> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429c92d8 <col:13> 'double' lvalue Var 0x2ab429b2430 'h3hi' 'double'
|   |   |   `-BinaryOperator 0x2ab429c99a8 <line:60:17, line:65:31> 'double' '*'
|   |   |     |-ParenExpr 0x2ab429c9408 <line:60:17, col:37> 'double'
|   |   |     | `-CStyleCastExpr 0x2ab429c93e0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |     |   `-ParenExpr 0x2ab429c93c0 <col:26, col:36> 'unsigned long long'
|   |   |     |     `-BinaryOperator 0x2ab429c9368 <col:27, col:35> 'unsigned long long' '<<'
|   |   |     |       |-IntegerLiteral 0x2ab429c92f8 <col:27> 'unsigned long long' 1
|   |   |     |       `-ParenExpr 0x2ab429c9348 <col:33, col:35> 'int'
|   |   |     |         `-IntegerLiteral 0x2ab429c9320 <line:377:24> 'int' 52
|   |   |     `-ParenExpr 0x2ab429c9988 <line:65:17, col:31> 'double'
|   |   |       `-BinaryOperator 0x2ab429c9968 <line:64:16, line:60:37> 'double' '*'
|   |   |         |-ParenExpr 0x2ab429c9818 <line:64:16, col:30> 'double'
|   |   |         | `-BinaryOperator 0x2ab429c97f8 <line:63:16, line:60:37> 'double' '*'
|   |   |         |   |-ParenExpr 0x2ab429c96a8 <line:63:16, col:30> 'double'
|   |   |         |   | `-BinaryOperator 0x2ab429c9688 <line:60:17, col:37> 'double' '*'
|   |   |         |   |   |-ParenExpr 0x2ab429c9538 <col:17, col:37> 'double'
|   |   |         |   |   | `-CStyleCastExpr 0x2ab429c9510 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |   |   `-ParenExpr 0x2ab429c94f0 <col:26, col:36> 'unsigned long long'
|   |   |         |   |   |     `-BinaryOperator 0x2ab429c9498 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |   |       |-IntegerLiteral 0x2ab429c9428 <col:27> 'unsigned long long' 1
|   |   |         |   |   |       `-ParenExpr 0x2ab429c9478 <col:33, col:35> 'int'
|   |   |         |   |   |         `-IntegerLiteral 0x2ab429c9450 <line:62:20> 'int' 32
|   |   |         |   |   `-ParenExpr 0x2ab429c9668 <line:60:17, col:37> 'double'
|   |   |         |   |     `-CStyleCastExpr 0x2ab429c9640 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |   |       `-ParenExpr 0x2ab429c9620 <col:26, col:36> 'unsigned long long'
|   |   |         |   |         `-BinaryOperator 0x2ab429c95c8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |   |           |-IntegerLiteral 0x2ab429c9558 <col:27> 'unsigned long long' 1
|   |   |         |   |           `-ParenExpr 0x2ab429c95a8 <col:33, col:35> 'int'
|   |   |         |   |             `-IntegerLiteral 0x2ab429c9580 <line:63:27> 'int' 32
|   |   |         |   `-ParenExpr 0x2ab429c97d8 <line:60:17, col:37> 'double'
|   |   |         |     `-CStyleCastExpr 0x2ab429c97b0 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |         |       `-ParenExpr 0x2ab429c9790 <col:26, col:36> 'unsigned long long'
|   |   |         |         `-BinaryOperator 0x2ab429c9738 <col:27, col:35> 'unsigned long long' '<<'
|   |   |         |           |-IntegerLiteral 0x2ab429c96c8 <col:27> 'unsigned long long' 1
|   |   |         |           `-ParenExpr 0x2ab429c9718 <col:33, col:35> 'int'
|   |   |         |             `-IntegerLiteral 0x2ab429c96f0 <line:64:27> 'int' 32
|   |   |         `-ParenExpr 0x2ab429c9948 <line:60:17, col:37> 'double'
|   |   |           `-CStyleCastExpr 0x2ab429c9920 <col:18, col:36> 'double' <IntegralToFloating>
|   |   |             `-ParenExpr 0x2ab429c9900 <col:26, col:36> 'unsigned long long'
|   |   |               `-BinaryOperator 0x2ab429c98a8 <col:27, col:35> 'unsigned long long' '<<'
|   |   |                 |-IntegerLiteral 0x2ab429c9838 <col:27> 'unsigned long long' 1
|   |   |                 `-ParenExpr 0x2ab429c9888 <col:33, col:35> 'int'
|   |   |                   `-IntegerLiteral 0x2ab429c9860 <line:65:28> 'int' 34
|   |   `-BinaryOperator 0x2ab429cd128 <line:60:17, line:65:31> 'double' '*'
|   |     |-ParenExpr 0x2ab429c9b30 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429c9b08 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429c9ae8 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429c9a90 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429c9a20 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429c9a70 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429c9a48 <line:377:42> 'int' 52
|   |     `-ParenExpr 0x2ab429cd108 <line:65:17, col:31> 'double'
|   |       `-BinaryOperator 0x2ab429cd0e8 <line:64:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x2ab429c9f40 <line:64:16, col:30> 'double'
|   |         | `-BinaryOperator 0x2ab429c9f20 <line:63:16, line:60:37> 'double' '*'
|   |         |   |-ParenExpr 0x2ab429c9dd0 <line:63:16, col:30> 'double'
|   |         |   | `-BinaryOperator 0x2ab429c9db0 <line:60:17, col:37> 'double' '*'
|   |         |   |   |-ParenExpr 0x2ab429c9c60 <col:17, col:37> 'double'
|   |         |   |   | `-CStyleCastExpr 0x2ab429c9c38 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   |   `-ParenExpr 0x2ab429c9c18 <col:26, col:36> 'unsigned long long'
|   |         |   |   |     `-BinaryOperator 0x2ab429c9bc0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |   |       |-IntegerLiteral 0x2ab429c9b50 <col:27> 'unsigned long long' 1
|   |         |   |   |       `-ParenExpr 0x2ab429c9ba0 <col:33, col:35> 'int'
|   |         |   |   |         `-IntegerLiteral 0x2ab429c9b78 <line:62:20> 'int' 32
|   |         |   |   `-ParenExpr 0x2ab429c9d90 <line:60:17, col:37> 'double'
|   |         |   |     `-CStyleCastExpr 0x2ab429c9d68 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |       `-ParenExpr 0x2ab429c9d48 <col:26, col:36> 'unsigned long long'
|   |         |   |         `-BinaryOperator 0x2ab429c9cf0 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |           |-IntegerLiteral 0x2ab429c9c80 <col:27> 'unsigned long long' 1
|   |         |   |           `-ParenExpr 0x2ab429c9cd0 <col:33, col:35> 'int'
|   |         |   |             `-IntegerLiteral 0x2ab429c9ca8 <line:63:27> 'int' 32
|   |         |   `-ParenExpr 0x2ab429c9f00 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x2ab429c9ed8 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x2ab429c9eb8 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x2ab429c9e60 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x2ab429c9df0 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x2ab429c9e40 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x2ab429c9e18 <line:64:27> 'int' 32
|   |         `-ParenExpr 0x2ab429cd0c8 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x2ab429cd0a0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x2ab429ca028 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x2ab429c9fd0 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x2ab429c9f60 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x2ab429c9fb0 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x2ab429c9f88 <line:65:28> 'int' 34
|   |-BinaryOperator 0x2ab429cd2b0 <line:382:5, col:27> 'double' '='
|   | |-DeclRefExpr 0x2ab429cd188 <col:5> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | `-BinaryOperator 0x2ab429cd290 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x2ab429cd238 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x2ab429cd218 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab429cd1e8 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429cd1a8 <col:12> 'double' lvalue Var 0x2ab429b21b0 'h1lo' 'double'
|   |   |   `-ImplicitCastExpr 0x2ab429cd200 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2ab429cd1c8 <col:19> 'double' lvalue Var 0x2ab429b2610 'c1lo' 'double'
|   |   `-ImplicitCastExpr 0x2ab429cd278 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x2ab429cd258 <col:27> 'double' lvalue Var 0x2ab429b2510 'c0lo' 'double'
|   |-BinaryOperator 0x2ab429cd3f8 <line:383:5, col:27> 'double' '='
|   | |-DeclRefExpr 0x2ab429cd2d0 <col:5> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | `-BinaryOperator 0x2ab429cd3d8 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x2ab429cd380 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x2ab429cd360 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab429cd330 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429cd2f0 <col:12> 'double' lvalue Var 0x2ab429b22b0 'h2lo' 'double'
|   |   |   `-ImplicitCastExpr 0x2ab429cd348 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2ab429cd310 <col:19> 'double' lvalue Var 0x2ab429b2710 'c2lo' 'double'
|   |   `-ImplicitCastExpr 0x2ab429cd3c0 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x2ab429cd3a0 <col:27> 'double' lvalue Var 0x2ab429b2610 'c1lo' 'double'
|   |-BinaryOperator 0x2ab429cd540 <line:384:5, col:27> 'double' '='
|   | |-DeclRefExpr 0x2ab429cd418 <col:5> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | `-BinaryOperator 0x2ab429cd520 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x2ab429cd4c8 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x2ab429cd4a8 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab429cd478 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429cd438 <col:12> 'double' lvalue Var 0x2ab429b23b0 'h3lo' 'double'
|   |   |   `-ImplicitCastExpr 0x2ab429cd490 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2ab429cd458 <col:19> 'double' lvalue Var 0x2ab429b2810 'c3lo' 'double'
|   |   `-ImplicitCastExpr 0x2ab429cd508 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x2ab429cd4e8 <col:27> 'double' lvalue Var 0x2ab429b2710 'c2lo' 'double'
|   |-BinaryOperator 0x2ab429cdc90 <line:385:5, col:45> 'double' '='
|   | |-DeclRefExpr 0x2ab429cd560 <col:5> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | `-BinaryOperator 0x2ab429cdc70 <col:11, col:45> 'double' '+'
|   |   |-ParenExpr 0x2ab429cd610 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x2ab429cd5f0 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab429cd5c0 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429cd580 <col:12> 'double' lvalue Var 0x2ab429b20b0 'h0lo' 'double'
|   |   |   `-ImplicitCastExpr 0x2ab429cd5d8 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2ab429cd5a0 <col:19> 'double' lvalue Var 0x2ab429b2510 'c0lo' 'double'
|   |   `-BinaryOperator 0x2ab429cdc50 <col:27, col:45> 'double' '*'
|   |     |-ImplicitCastExpr 0x2ab429cdc38 <col:27> 'double' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2ab429cd630 <col:27> 'double' lvalue Var 0x2ab429b2810 'c3lo' 'double'
|   |     `-ParenExpr 0x2ab429cdc18 <col:34, col:45> 'double'
|   |       `-BinaryOperator 0x2ab429cdbf8 <col:35, line:65:31> 'double' '/'
|   |         |-FloatingLiteral 0x2ab429cd650 <line:385:35> 'double' 5.000000e+00
|   |         `-ParenExpr 0x2ab429cdbd8 <line:65:17, col:31> 'double'
|   |           `-BinaryOperator 0x2ab429cdbb8 <line:64:16, line:60:37> 'double' '*'
|   |             |-ParenExpr 0x2ab429cda68 <line:64:16, col:30> 'double'
|   |             | `-BinaryOperator 0x2ab429cda48 <line:63:16, line:60:37> 'double' '*'
|   |             |   |-ParenExpr 0x2ab429cd8f8 <line:63:16, col:30> 'double'
|   |             |   | `-BinaryOperator 0x2ab429cd8d8 <line:60:17, col:37> 'double' '*'
|   |             |   |   |-ParenExpr 0x2ab429cd788 <col:17, col:37> 'double'
|   |             |   |   | `-CStyleCastExpr 0x2ab429cd760 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |   |   `-ParenExpr 0x2ab429cd740 <col:26, col:36> 'unsigned long long'
|   |             |   |   |     `-BinaryOperator 0x2ab429cd6e8 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |   |       |-IntegerLiteral 0x2ab429cd678 <col:27> 'unsigned long long' 1
|   |             |   |   |       `-ParenExpr 0x2ab429cd6c8 <col:33, col:35> 'int'
|   |             |   |   |         `-IntegerLiteral 0x2ab429cd6a0 <line:62:20> 'int' 32
|   |             |   |   `-ParenExpr 0x2ab429cd8b8 <line:60:17, col:37> 'double'
|   |             |   |     `-CStyleCastExpr 0x2ab429cd890 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |       `-ParenExpr 0x2ab429cd870 <col:26, col:36> 'unsigned long long'
|   |             |   |         `-BinaryOperator 0x2ab429cd818 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |           |-IntegerLiteral 0x2ab429cd7a8 <col:27> 'unsigned long long' 1
|   |             |   |           `-ParenExpr 0x2ab429cd7f8 <col:33, col:35> 'int'
|   |             |   |             `-IntegerLiteral 0x2ab429cd7d0 <line:63:27> 'int' 32
|   |             |   `-ParenExpr 0x2ab429cda28 <line:60:17, col:37> 'double'
|   |             |     `-CStyleCastExpr 0x2ab429cda00 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |       `-ParenExpr 0x2ab429cd9e0 <col:26, col:36> 'unsigned long long'
|   |             |         `-BinaryOperator 0x2ab429cd988 <col:27, col:35> 'unsigned long long' '<<'
|   |             |           |-IntegerLiteral 0x2ab429cd918 <col:27> 'unsigned long long' 1
|   |             |           `-ParenExpr 0x2ab429cd968 <col:33, col:35> 'int'
|   |             |             `-IntegerLiteral 0x2ab429cd940 <line:64:27> 'int' 32
|   |             `-ParenExpr 0x2ab429cdb98 <line:60:17, col:37> 'double'
|   |               `-CStyleCastExpr 0x2ab429cdb70 <col:18, col:36> 'double' <IntegralToFloating>
|   |                 `-ParenExpr 0x2ab429cdb50 <col:26, col:36> 'unsigned long long'
|   |                   `-BinaryOperator 0x2ab429cdaf8 <col:27, col:35> 'unsigned long long' '<<'
|   |                     |-IntegerLiteral 0x2ab429cda88 <col:27> 'unsigned long long' 1
|   |                     `-ParenExpr 0x2ab429cdad8 <col:33, col:35> 'int'
|   |                       `-IntegerLiteral 0x2ab429cdab0 <line:65:28> 'int' 34
|   |-CompoundAssignOperator 0x2ab429cddd8 <line:387:5, col:27> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x2ab429cdcb0 <col:5> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   | `-BinaryOperator 0x2ab429cddb8 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x2ab429cdd60 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x2ab429cdd40 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab429cdd10 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429cdcd0 <col:12> 'double' lvalue Var 0x2ab429b2230 'h1hi' 'double'
|   |   |   `-ImplicitCastExpr 0x2ab429cdd28 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2ab429cdcf0 <col:19> 'double' lvalue Var 0x2ab429b2690 'c1hi' 'double'
|   |   `-ImplicitCastExpr 0x2ab429cdda0 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x2ab429cdd80 <col:27> 'double' lvalue Var 0x2ab429b2590 'c0hi' 'double'
|   |-CompoundAssignOperator 0x2ab429cdf30 <line:388:5, col:27> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x2ab429cde08 <col:5> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   | `-BinaryOperator 0x2ab429cdf10 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x2ab429cdeb8 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x2ab429cde98 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab429cde68 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429cde28 <col:12> 'double' lvalue Var 0x2ab429b2330 'h2hi' 'double'
|   |   |   `-ImplicitCastExpr 0x2ab429cde80 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2ab429cde48 <col:19> 'double' lvalue Var 0x2ab429b2790 'c2hi' 'double'
|   |   `-ImplicitCastExpr 0x2ab429cdef8 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x2ab429cded8 <col:27> 'double' lvalue Var 0x2ab429b2690 'c1hi' 'double'
|   |-CompoundAssignOperator 0x2ab429ce0b0 <line:389:5, col:27> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x2ab429cdf60 <col:5> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   | `-BinaryOperator 0x2ab429ce068 <col:11, col:27> 'double' '+'
|   |   |-ParenExpr 0x2ab429ce010 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x2ab429cdff0 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab429cdfc0 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429cdf80 <col:12> 'double' lvalue Var 0x2ab429b2430 'h3hi' 'double'
|   |   |   `-ImplicitCastExpr 0x2ab429cdfd8 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2ab429cdfa0 <col:19> 'double' lvalue Var 0x2ab429b2890 'c3hi' 'double'
|   |   `-ImplicitCastExpr 0x2ab429ce050 <col:27> 'double' <LValueToRValue>
|   |     `-DeclRefExpr 0x2ab429ce030 <col:27> 'double' lvalue Var 0x2ab429b2790 'c2hi' 'double'
|   |-CompoundAssignOperator 0x2ab429ce810 <line:390:5, col:45> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'
|   | |-DeclRefExpr 0x2ab429ce0e0 <col:5> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   | `-BinaryOperator 0x2ab429ce7f0 <col:11, col:45> 'double' '+'
|   |   |-ParenExpr 0x2ab429ce190 <col:11, col:23> 'double'
|   |   | `-BinaryOperator 0x2ab429ce170 <col:12, col:19> 'double' '-'
|   |   |   |-ImplicitCastExpr 0x2ab429ce140 <col:12> 'double' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2ab429ce100 <col:12> 'double' lvalue Var 0x2ab429b2130 'h0hi' 'double'
|   |   |   `-ImplicitCastExpr 0x2ab429ce158 <col:19> 'double' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2ab429ce120 <col:19> 'double' lvalue Var 0x2ab429b2590 'c0hi' 'double'
|   |   `-BinaryOperator 0x2ab429ce7d0 <col:27, col:45> 'double' '*'
|   |     |-ImplicitCastExpr 0x2ab429ce7b8 <col:27> 'double' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2ab429ce1b0 <col:27> 'double' lvalue Var 0x2ab429b2890 'c3hi' 'double'
|   |     `-ParenExpr 0x2ab429ce798 <col:34, col:45> 'double'
|   |       `-BinaryOperator 0x2ab429ce778 <col:35, line:65:31> 'double' '/'
|   |         |-FloatingLiteral 0x2ab429ce1d0 <line:390:35> 'double' 5.000000e+00
|   |         `-ParenExpr 0x2ab429ce758 <line:65:17, col:31> 'double'
|   |           `-BinaryOperator 0x2ab429ce738 <line:64:16, line:60:37> 'double' '*'
|   |             |-ParenExpr 0x2ab429ce5e8 <line:64:16, col:30> 'double'
|   |             | `-BinaryOperator 0x2ab429ce5c8 <line:63:16, line:60:37> 'double' '*'
|   |             |   |-ParenExpr 0x2ab429ce478 <line:63:16, col:30> 'double'
|   |             |   | `-BinaryOperator 0x2ab429ce458 <line:60:17, col:37> 'double' '*'
|   |             |   |   |-ParenExpr 0x2ab429ce308 <col:17, col:37> 'double'
|   |             |   |   | `-CStyleCastExpr 0x2ab429ce2e0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |   |   `-ParenExpr 0x2ab429ce2c0 <col:26, col:36> 'unsigned long long'
|   |             |   |   |     `-BinaryOperator 0x2ab429ce268 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |   |       |-IntegerLiteral 0x2ab429ce1f8 <col:27> 'unsigned long long' 1
|   |             |   |   |       `-ParenExpr 0x2ab429ce248 <col:33, col:35> 'int'
|   |             |   |   |         `-IntegerLiteral 0x2ab429ce220 <line:62:20> 'int' 32
|   |             |   |   `-ParenExpr 0x2ab429ce438 <line:60:17, col:37> 'double'
|   |             |   |     `-CStyleCastExpr 0x2ab429ce410 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |   |       `-ParenExpr 0x2ab429ce3f0 <col:26, col:36> 'unsigned long long'
|   |             |   |         `-BinaryOperator 0x2ab429ce398 <col:27, col:35> 'unsigned long long' '<<'
|   |             |   |           |-IntegerLiteral 0x2ab429ce328 <col:27> 'unsigned long long' 1
|   |             |   |           `-ParenExpr 0x2ab429ce378 <col:33, col:35> 'int'
|   |             |   |             `-IntegerLiteral 0x2ab429ce350 <line:63:27> 'int' 32
|   |             |   `-ParenExpr 0x2ab429ce5a8 <line:60:17, col:37> 'double'
|   |             |     `-CStyleCastExpr 0x2ab429ce580 <col:18, col:36> 'double' <IntegralToFloating>
|   |             |       `-ParenExpr 0x2ab429ce560 <col:26, col:36> 'unsigned long long'
|   |             |         `-BinaryOperator 0x2ab429ce508 <col:27, col:35> 'unsigned long long' '<<'
|   |             |           |-IntegerLiteral 0x2ab429ce498 <col:27> 'unsigned long long' 1
|   |             |           `-ParenExpr 0x2ab429ce4e8 <col:33, col:35> 'int'
|   |             |             `-IntegerLiteral 0x2ab429ce4c0 <line:64:27> 'int' 32
|   |             `-ParenExpr 0x2ab429ce718 <line:60:17, col:37> 'double'
|   |               `-CStyleCastExpr 0x2ab429ce6f0 <col:18, col:36> 'double' <IntegralToFloating>
|   |                 `-ParenExpr 0x2ab429ce6d0 <col:26, col:36> 'unsigned long long'
|   |                   `-BinaryOperator 0x2ab429ce678 <col:27, col:35> 'unsigned long long' '<<'
|   |                     |-IntegerLiteral 0x2ab429ce608 <col:27> 'unsigned long long' 1
|   |                     `-ParenExpr 0x2ab429ce658 <col:33, col:35> 'int'
|   |                       `-IntegerLiteral 0x2ab429ce630 <line:65:28> 'int' 34
|   |-BinaryOperator 0x2ab429cec10 <line:395:5, line:60:37> 'double' '='
|   | |-MemberExpr 0x2ab429ce908 <line:395:5, col:14> 'double' lvalue .d 0x2ab42937c18
|   | | `-ArraySubscriptExpr 0x2ab429ce8e8 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x2ab429ce8d0 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x2ab429ce878 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   | |   |   `-ImplicitCastExpr 0x2ab429ce860 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2ab429ce840 <col:5> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x2ab429ce8a8 <col:11> 'int' 1
|   | `-BinaryOperator 0x2ab429cebf0 <col:18, line:60:37> 'double' '+'
|   |   |-ImplicitCastExpr 0x2ab429cebd8 <line:395:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2ab429ce938 <col:18> 'double' lvalue Var 0x2ab429b1ef0 'x1' 'double'
|   |   `-BinaryOperator 0x2ab429cebb8 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x2ab429cea68 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429cea40 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429cea20 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429ce9c8 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429ce958 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429ce9a8 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429ce980 <line:395:27> 'int' 52
|   |     `-ParenExpr 0x2ab429ceb98 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x2ab429ceb70 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x2ab429ceb50 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x2ab429ceaf8 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x2ab429cea88 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x2ab429cead8 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x2ab429ceab0 <line:62:20> 'int' 32
|   |-BinaryOperator 0x2ab429d31e0 <line:396:5, line:63:30> 'double' '='
|   | |-MemberExpr 0x2ab429cecf8 <line:396:5, col:14> 'double' lvalue .d 0x2ab42937c18
|   | | `-ArraySubscriptExpr 0x2ab429cecd8 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x2ab429cecc0 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x2ab429cec68 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   | |   |   `-ImplicitCastExpr 0x2ab429cec50 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2ab429cec30 <col:5> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x2ab429cec98 <col:11> 'int' 2
|   | `-BinaryOperator 0x2ab429d31c0 <col:18, line:63:30> 'double' '+'
|   |   |-ImplicitCastExpr 0x2ab429d31a8 <line:396:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2ab429ced28 <col:18> 'double' lvalue Var 0x2ab429b1f70 'x2' 'double'
|   |   `-BinaryOperator 0x2ab429d3188 <line:60:17, line:63:30> 'double' '*'
|   |     |-ParenExpr 0x2ab429cee58 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429cee30 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429cee10 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429cedb8 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429ced48 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429ced98 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429ced70 <line:396:27> 'int' 52
|   |     `-ParenExpr 0x2ab429d3168 <line:63:16, col:30> 'double'
|   |       `-BinaryOperator 0x2ab429d3148 <line:60:17, col:37> 'double' '*'
|   |         |-ParenExpr 0x2ab429cef88 <col:17, col:37> 'double'
|   |         | `-CStyleCastExpr 0x2ab429cef60 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   `-ParenExpr 0x2ab429cef40 <col:26, col:36> 'unsigned long long'
|   |         |     `-BinaryOperator 0x2ab429ceee8 <col:27, col:35> 'unsigned long long' '<<'
|   |         |       |-IntegerLiteral 0x2ab429cee78 <col:27> 'unsigned long long' 1
|   |         |       `-ParenExpr 0x2ab429ceec8 <col:33, col:35> 'int'
|   |         |         `-IntegerLiteral 0x2ab429ceea0 <line:62:20> 'int' 32
|   |         `-ParenExpr 0x2ab429d3128 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x2ab429d3100 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x2ab429cf070 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x2ab429cf018 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x2ab429cefa8 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x2ab429ceff8 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x2ab429cefd0 <line:63:27> 'int' 32
|   |-BinaryOperator 0x2ab429d38b0 <line:397:5, line:64:30> 'double' '='
|   | |-MemberExpr 0x2ab429d32c8 <line:397:5, col:14> 'double' lvalue .d 0x2ab42937c18
|   | | `-ArraySubscriptExpr 0x2ab429d32a8 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x2ab429d3290 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x2ab429d3238 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   | |   |   `-ImplicitCastExpr 0x2ab429d3220 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2ab429d3200 <col:5> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x2ab429d3268 <col:11> 'int' 3
|   | `-BinaryOperator 0x2ab429d3890 <col:18, line:64:30> 'double' '+'
|   |   |-ImplicitCastExpr 0x2ab429d3878 <line:397:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2ab429d32f8 <col:18> 'double' lvalue Var 0x2ab429b1ff0 'x3' 'double'
|   |   `-BinaryOperator 0x2ab429d3858 <line:60:17, line:64:30> 'double' '*'
|   |     |-ParenExpr 0x2ab429d3428 <line:60:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429d3400 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429d33e0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429d3388 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429d3318 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429d3368 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429d3340 <line:397:27> 'int' 52
|   |     `-ParenExpr 0x2ab429d3838 <line:64:16, col:30> 'double'
|   |       `-BinaryOperator 0x2ab429d3818 <line:63:16, line:60:37> 'double' '*'
|   |         |-ParenExpr 0x2ab429d36c8 <line:63:16, col:30> 'double'
|   |         | `-BinaryOperator 0x2ab429d36a8 <line:60:17, col:37> 'double' '*'
|   |         |   |-ParenExpr 0x2ab429d3558 <col:17, col:37> 'double'
|   |         |   | `-CStyleCastExpr 0x2ab429d3530 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |   |   `-ParenExpr 0x2ab429d3510 <col:26, col:36> 'unsigned long long'
|   |         |   |     `-BinaryOperator 0x2ab429d34b8 <col:27, col:35> 'unsigned long long' '<<'
|   |         |   |       |-IntegerLiteral 0x2ab429d3448 <col:27> 'unsigned long long' 1
|   |         |   |       `-ParenExpr 0x2ab429d3498 <col:33, col:35> 'int'
|   |         |   |         `-IntegerLiteral 0x2ab429d3470 <line:62:20> 'int' 32
|   |         |   `-ParenExpr 0x2ab429d3688 <line:60:17, col:37> 'double'
|   |         |     `-CStyleCastExpr 0x2ab429d3660 <col:18, col:36> 'double' <IntegralToFloating>
|   |         |       `-ParenExpr 0x2ab429d3640 <col:26, col:36> 'unsigned long long'
|   |         |         `-BinaryOperator 0x2ab429d35e8 <col:27, col:35> 'unsigned long long' '<<'
|   |         |           |-IntegerLiteral 0x2ab429d3578 <col:27> 'unsigned long long' 1
|   |         |           `-ParenExpr 0x2ab429d35c8 <col:33, col:35> 'int'
|   |         |             `-IntegerLiteral 0x2ab429d35a0 <line:63:27> 'int' 32
|   |         `-ParenExpr 0x2ab429d37f8 <line:60:17, col:37> 'double'
|   |           `-CStyleCastExpr 0x2ab429d37d0 <col:18, col:36> 'double' <IntegralToFloating>
|   |             `-ParenExpr 0x2ab429d37b0 <col:26, col:36> 'unsigned long long'
|   |               `-BinaryOperator 0x2ab429d3758 <col:27, col:35> 'unsigned long long' '<<'
|   |                 |-IntegerLiteral 0x2ab429d36e8 <col:27> 'unsigned long long' 1
|   |                 `-ParenExpr 0x2ab429d3738 <col:33, col:35> 'int'
|   |                   `-IntegerLiteral 0x2ab429d3710 <line:64:27> 'int' 32
|   |-BinaryOperator 0x2ab429d3ca0 <line:398:5, line:60:37> 'double' '='
|   | |-MemberExpr 0x2ab429d3998 <line:398:5, col:14> 'double' lvalue .d 0x2ab42937c18
|   | | `-ArraySubscriptExpr 0x2ab429d3978 <col:5, col:12> 'elem64':'elem64' lvalue
|   | |   |-ImplicitCastExpr 0x2ab429d3960 <col:5, col:9> 'elem64 *' <ArrayToPointerDecay>
|   | |   | `-MemberExpr 0x2ab429d3908 <col:5, col:9> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
|   | |   |   `-ImplicitCastExpr 0x2ab429d38f0 <col:5> 'poly1305_internal *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2ab429d38d0 <col:5> 'poly1305_internal *' lvalue Var 0x2ab429b9a20 'st' 'poly1305_internal *'
|   | |   `-IntegerLiteral 0x2ab429d3938 <col:11> 'int' 0
|   | `-BinaryOperator 0x2ab429d3c80 <col:18, line:60:37> 'double' '+'
|   |   |-ImplicitCastExpr 0x2ab429d3c68 <line:398:18> 'double' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2ab429d39c8 <col:18> 'double' lvalue Var 0x2ab429b9e90 'x0' 'double'
|   |   `-BinaryOperator 0x2ab429d3c48 <line:60:17, col:37> 'double' '*'
|   |     |-ParenExpr 0x2ab429d3af8 <col:17, col:37> 'double'
|   |     | `-CStyleCastExpr 0x2ab429d3ad0 <col:18, col:36> 'double' <IntegralToFloating>
|   |     |   `-ParenExpr 0x2ab429d3ab0 <col:26, col:36> 'unsigned long long'
|   |     |     `-BinaryOperator 0x2ab429d3a58 <col:27, col:35> 'unsigned long long' '<<'
|   |     |       |-IntegerLiteral 0x2ab429d39e8 <col:27> 'unsigned long long' 1
|   |     |       `-ParenExpr 0x2ab429d3a38 <col:33, col:35> 'int'
|   |     |         `-IntegerLiteral 0x2ab429d3a10 <line:398:27> 'int' 52
|   |     `-ParenExpr 0x2ab429d3c28 <line:60:17, col:37> 'double'
|   |       `-CStyleCastExpr 0x2ab429d3c00 <col:18, col:36> 'double' <IntegralToFloating>
|   |         `-ParenExpr 0x2ab429d3be0 <col:26, col:36> 'unsigned long long'
|   |           `-BinaryOperator 0x2ab429d3b88 <col:27, col:35> 'unsigned long long' '<<'
|   |             |-IntegerLiteral 0x2ab429d3b18 <col:27> 'unsigned long long' 1
|   |             `-ParenExpr 0x2ab429d3b68 <col:33, col:35> 'int'
|   |               `-IntegerLiteral 0x2ab429d3b40 <line:61:19> 'int' 0
|   `-GCCAsmStmt 0x2ab429d3d28 <line:404:5, col:48>
|     `-DeclRefExpr 0x2ab429d3d08 <col:37> 'u32':'unsigned int' lvalue Var 0x2ab429beed8 'mxcsr_orig' 'u32':'unsigned int'
`-FunctionDecl 0x2ab429d03b8 <line:414:1, line:472:1> line:414:6 poly1305_emit 'void (void *, unsigned char *, const u32 *)'
  |-ParmVarDecl 0x2ab429d3f68 <col:20, col:26> col:26 used ctx 'void *'
  |-ParmVarDecl 0x2ab429d00d0 <col:31, col:51> col:45 used mac 'unsigned char *':'unsigned char *'
  |-ParmVarDecl 0x2ab429d0250 <col:54, col:71> col:64 used nonce 'const u32 *':'const u32 *'
  `-CompoundStmt 0x2ab429d6130 <line:415:1, line:472:1>
    |-DeclStmt 0x2ab429d0570 <line:416:5, col:54>
    | `-VarDecl 0x2ab429d0498 <col:5, col:51> col:24 used st 'poly1305_internal *' cinit
    |   `-CStyleCastExpr 0x2ab429d0548 <col:29, col:51> 'poly1305_internal *' <BitCast>
    |     `-ImplicitCastExpr 0x2ab429d0530 <col:51> 'void *' <LValueToRValue> part_of_explicit_cast
    |       `-DeclRefExpr 0x2ab429d0500 <col:51> 'void *' lvalue ParmVar 0x2ab429d3f68 'ctx' 'void *'
    |-DeclStmt 0x2ab429d0810 <line:417:5, col:27>
    | |-VarDecl 0x2ab429d0598 <col:5, col:9> col:9 used h0 'u64':'unsigned long long'
    | |-VarDecl 0x2ab429d0610 <col:5, col:13> col:13 used h1 'u64':'unsigned long long'
    | |-VarDecl 0x2ab429d0688 <col:5, col:17> col:17 used h2 'u64':'unsigned long long'
    | |-VarDecl 0x2ab429d0700 <col:5, col:21> col:21 used h3 'u64':'unsigned long long'
    | `-VarDecl 0x2ab429d0778 <col:5, col:25> col:25 used h4 'u64':'unsigned long long'
    |-DeclStmt 0x2ab429d0ab0 <line:418:5, col:27>
    | |-VarDecl 0x2ab429d0838 <col:5, col:9> col:9 used g0 'u32':'unsigned int'
    | |-VarDecl 0x2ab429d08b0 <col:5, col:13> col:13 used g1 'u32':'unsigned int'
    | |-VarDecl 0x2ab429d0928 <col:5, col:17> col:17 used g2 'u32':'unsigned int'
    | |-VarDecl 0x2ab429d09a0 <col:5, col:21> col:21 used g3 'u32':'unsigned int'
    | `-VarDecl 0x2ab429d0a18 <col:5, col:25> col:25 used g4 'u32':'unsigned int'
    |-DeclStmt 0x2ab429d0b40 <line:419:5, col:10>
    | `-VarDecl 0x2ab429d0ad8 <col:5, col:9> col:9 used t 'u64':'unsigned long long'
    |-DeclStmt 0x2ab429d0bd0 <line:420:5, col:13>
    | `-VarDecl 0x2ab429d0b68 <col:5, col:9> col:9 used mask 'u32':'unsigned int'
    |-BinaryOperator 0x2ab429d0d90 <line:425:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x2ab429d0be8 <col:5> 'u64':'unsigned long long' lvalue Var 0x2ab429d0598 'h0' 'u64':'unsigned long long'
    | `-BinaryOperator 0x2ab429d0d70 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x2ab429d0d58 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x2ab429d0d00 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
    |   |   `-ArraySubscriptExpr 0x2ab429d0ce0 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x2ab429d0cc8 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x2ab429d0c70 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
    |   |     |   `-ImplicitCastExpr 0x2ab429d0c58 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x2ab429d0c20 <col:10> 'poly1305_internal *' lvalue Var 0x2ab429d0498 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x2ab429d0ca0 <col:16> 'int' 0
    |   `-IntegerLiteral 0x2ab429d0d30 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x2ab429d0f40 <line:426:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x2ab429d0db0 <col:5> 'u64':'unsigned long long' lvalue Var 0x2ab429d0610 'h1' 'u64':'unsigned long long'
    | `-BinaryOperator 0x2ab429d0f20 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x2ab429d0f08 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x2ab429d0eb0 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
    |   |   `-ArraySubscriptExpr 0x2ab429d0e90 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x2ab429d0e78 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x2ab429d0e20 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
    |   |     |   `-ImplicitCastExpr 0x2ab429d0e08 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x2ab429d0de8 <col:10> 'poly1305_internal *' lvalue Var 0x2ab429d0498 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x2ab429d0e50 <col:16> 'int' 1
    |   `-IntegerLiteral 0x2ab429d0ee0 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x2ab429d1100 <line:427:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x2ab429d0f60 <col:5> 'u64':'unsigned long long' lvalue Var 0x2ab429d0688 'h2' 'u64':'unsigned long long'
    | `-BinaryOperator 0x2ab429d10e0 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x2ab429d10b8 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x2ab429d1060 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
    |   |   `-ArraySubscriptExpr 0x2ab429d1040 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x2ab429d1028 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x2ab429d0fd0 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
    |   |     |   `-ImplicitCastExpr 0x2ab429d0fb8 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x2ab429d0f98 <col:10> 'poly1305_internal *' lvalue Var 0x2ab429d0498 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x2ab429d1000 <col:16> 'int' 2
    |   `-IntegerLiteral 0x2ab429d1090 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x2ab429d12b0 <line:428:5, col:23> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x2ab429d1120 <col:5> 'u64':'unsigned long long' lvalue Var 0x2ab429d0700 'h3' 'u64':'unsigned long long'
    | `-BinaryOperator 0x2ab429d1290 <col:10, col:23> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x2ab429d1278 <col:10, col:19> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-MemberExpr 0x2ab429d1220 <col:10, col:19> 'u64':'unsigned long long' lvalue .u 0x2ab42937ca0
    |   |   `-ArraySubscriptExpr 0x2ab429d1200 <col:10, col:17> 'elem64':'elem64' lvalue
    |   |     |-ImplicitCastExpr 0x2ab429d11e8 <col:10, col:14> 'elem64 *' <ArrayToPointerDecay>
    |   |     | `-MemberExpr 0x2ab429d1190 <col:10, col:14> 'elem64 [4]' lvalue ->h 0x2ab42937fd8
    |   |     |   `-ImplicitCastExpr 0x2ab429d1178 <col:10> 'poly1305_internal *' <LValueToRValue>
    |   |     |     `-DeclRefExpr 0x2ab429d1158 <col:10> 'poly1305_internal *' lvalue Var 0x2ab429d0498 'st' 'poly1305_internal *'
    |   |     `-IntegerLiteral 0x2ab429d11c0 <col:16> 'int' 3
    |   `-IntegerLiteral 0x2ab429d1250 <col:23> 'unsigned long long' 4503599627370495
    |-BinaryOperator 0x2ab429d1388 <line:433:5, col:14> 'u64':'unsigned long long' '='
    | |-DeclRefExpr 0x2ab429d12d0 <col:5> 'u64':'unsigned long long' lvalue Var 0x2ab429d0778 'h4' 'u64':'unsigned long long'
    | `-BinaryOperator 0x2ab429d1368 <col:10, col:14> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x2ab429d1350 <col:10> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x2ab429d1308 <col:10> 'u64':'unsigned long long' lvalue Var 0x2ab429d0700 'h3' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x2ab429d1328 <col:14> 'int' 32
    |-CompoundAssignOperator 0x2ab429d1408 <col:18, col:24> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d13a8 <col:18> 'u64':'unsigned long long' lvalue Var 0x2ab429d0700 'h3' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x2ab429d13f0 <col:24> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x2ab429d13c8 <col:24> 'unsigned int' 4294967295
    |-BinaryOperator 0x2ab429d1538 <line:434:5, col:14> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d1438 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0a18 'g4' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x2ab429d1520 <col:10, col:14> 'u32':'unsigned int' <IntegralCast>
    |   `-BinaryOperator 0x2ab429d1500 <col:10, col:14> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x2ab429d14d0 <col:10> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x2ab429d1470 <col:10> 'u64':'unsigned long long' lvalue Var 0x2ab429d0778 'h4' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x2ab429d14e8 <col:13, col:14> 'unsigned long long' <IntegralCast>
    |       `-UnaryOperator 0x2ab429d14b8 <col:13, col:14> 'int' prefix '-'
    |         `-IntegerLiteral 0x2ab429d1490 <col:14> 'int' 4
    |-CompoundAssignOperator 0x2ab429d15b8 <line:435:5, col:11> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d1558 <col:5> 'u64':'unsigned long long' lvalue Var 0x2ab429d0778 'h4' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x2ab429d15a0 <col:11> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x2ab429d1578 <col:11> 'int' 3
    |-CompoundAssignOperator 0x2ab429d1688 <line:436:5, col:15> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x2ab429d15e8 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0a18 'g4' 'u32':'unsigned int'
    | `-BinaryOperator 0x2ab429d1668 <col:11, col:15> 'u32':'unsigned int' '>>'
    |   |-ImplicitCastExpr 0x2ab429d1650 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   | `-DeclRefExpr 0x2ab429d1608 <col:11> 'u32':'unsigned int' lvalue Var 0x2ab429d0a18 'g4' 'u32':'unsigned int'
    |   `-IntegerLiteral 0x2ab429d1628 <col:15> 'int' 2
    |-CompoundAssignOperator 0x2ab429d1728 <line:438:5, col:11> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d16b8 <col:5> 'u64':'unsigned long long' lvalue Var 0x2ab429d0598 'h0' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x2ab429d1710 <col:11> 'unsigned long long' <IntegralCast>
    |   `-ImplicitCastExpr 0x2ab429d16f8 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x2ab429d16d8 <col:11> 'u32':'unsigned int' lvalue Var 0x2ab429d0a18 'g4' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x2ab429d17f8 <line:439:5, col:15> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d1758 <col:5> 'u64':'unsigned long long' lvalue Var 0x2ab429d0610 'h1' 'u64':'unsigned long long'
    | `-BinaryOperator 0x2ab429d17d8 <col:11, col:15> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x2ab429d17c0 <col:11> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x2ab429d1778 <col:11> 'u64':'unsigned long long' lvalue Var 0x2ab429d0598 'h0' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x2ab429d1798 <col:15> 'int' 32
    |-CompoundAssignOperator 0x2ab429d1888 <col:19, col:25> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d1828 <col:19> 'u64':'unsigned long long' lvalue Var 0x2ab429d0598 'h0' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x2ab429d1870 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x2ab429d1848 <col:25> 'unsigned int' 4294967295
    |-CompoundAssignOperator 0x2ab429d1958 <line:440:5, col:15> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d18b8 <col:5> 'u64':'unsigned long long' lvalue Var 0x2ab429d0688 'h2' 'u64':'unsigned long long'
    | `-BinaryOperator 0x2ab429d1938 <col:11, col:15> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x2ab429d1920 <col:11> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x2ab429d18d8 <col:11> 'u64':'unsigned long long' lvalue Var 0x2ab429d0610 'h1' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x2ab429d18f8 <col:15> 'int' 32
    |-CompoundAssignOperator 0x2ab429d19e8 <col:19, col:25> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d1988 <col:19> 'u64':'unsigned long long' lvalue Var 0x2ab429d0610 'h1' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x2ab429d19d0 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x2ab429d19a8 <col:25> 'unsigned int' 4294967295
    |-CompoundAssignOperator 0x2ab429d1ab8 <line:441:5, col:15> 'u64':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d1a18 <col:5> 'u64':'unsigned long long' lvalue Var 0x2ab429d0700 'h3' 'u64':'unsigned long long'
    | `-BinaryOperator 0x2ab429d1a98 <col:11, col:15> 'u64':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x2ab429d1a80 <col:11> 'u64':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x2ab429d1a38 <col:11> 'u64':'unsigned long long' lvalue Var 0x2ab429d0688 'h2' 'u64':'unsigned long long'
    |   `-IntegerLiteral 0x2ab429d1a58 <col:15> 'int' 32
    |-CompoundAssignOperator 0x2ab429d1b48 <col:19, col:25> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d1ae8 <col:19> 'u64':'unsigned long long' lvalue Var 0x2ab429d0688 'h2' 'u64':'unsigned long long'
    | `-ImplicitCastExpr 0x2ab429d1b30 <col:25> 'unsigned long long' <IntegralCast>
    |   `-IntegerLiteral 0x2ab429d1b08 <col:25> 'unsigned int' 4294967295
    |-BinaryOperator 0x2ab429d1d18 <line:444:5, col:26> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d1b78 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0838 'g0' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x2ab429d1cf0 <col:10, col:26> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x2ab429d1cd0 <col:15, col:26> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x2ab429d1c80 <col:16, col:25> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x2ab429d1bb0 <col:16> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x2ab429d1c60 <col:20, col:25> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x2ab429d1c30 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x2ab429d1be8 <col:20> 'u64':'unsigned long long' lvalue Var 0x2ab429d0598 'h0' 'u64':'unsigned long long'
    |         `-ImplicitCastExpr 0x2ab429d1c48 <col:25> 'unsigned long long' <IntegralCast>
    |           `-IntegerLiteral 0x2ab429d1c08 <col:25> 'int' 5
    |-BinaryOperator 0x2ab429d1f20 <line:445:5, col:34> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d1d38 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d08b0 'g1' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x2ab429d1ef8 <col:10, col:34> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x2ab429d1ed8 <col:15, col:34> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x2ab429d1e88 <col:16, col:33> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x2ab429d1d70 <col:16> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x2ab429d1e68 <col:20, col:33> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x2ab429d1e50 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x2ab429d1d90 <col:20> 'u64':'unsigned long long' lvalue Var 0x2ab429d0610 'h1' 'u64':'unsigned long long'
    |         `-ParenExpr 0x2ab429d1e30 <col:25, col:33> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x2ab429d1e10 <col:26, col:31> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x2ab429d1df8 <col:26> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x2ab429d1db0 <col:26> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x2ab429d1dd0 <col:31> 'int' 32
    |-BinaryOperator 0x2ab429d2138 <line:446:5, col:34> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d1f40 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0928 'g2' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x2ab429d2110 <col:10, col:34> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x2ab429d20f0 <col:15, col:34> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x2ab429d2090 <col:16, col:33> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x2ab429d1f78 <col:16> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x2ab429d2070 <col:20, col:33> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x2ab429d2058 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x2ab429d1f98 <col:20> 'u64':'unsigned long long' lvalue Var 0x2ab429d0688 'h2' 'u64':'unsigned long long'
    |         `-ParenExpr 0x2ab429d2038 <col:25, col:33> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x2ab429d2018 <col:26, col:31> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x2ab429d2000 <col:26> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x2ab429d1fb8 <col:26> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x2ab429d1fd8 <col:31> 'int' 32
    |-BinaryOperator 0x2ab429d2340 <line:447:5, col:34> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d2158 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d09a0 'g3' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x2ab429d2318 <col:10, col:34> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x2ab429d22f8 <col:15, col:34> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x2ab429d22a8 <col:16, col:33> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x2ab429d2190 <col:16> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x2ab429d2288 <col:20, col:33> 'unsigned long long' '+'
    |         |-ImplicitCastExpr 0x2ab429d2270 <col:20> 'u64':'unsigned long long' <LValueToRValue>
    |         | `-DeclRefExpr 0x2ab429d21b0 <col:20> 'u64':'unsigned long long' lvalue Var 0x2ab429d0700 'h3' 'u64':'unsigned long long'
    |         `-ParenExpr 0x2ab429d2250 <col:25, col:33> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x2ab429d2230 <col:26, col:31> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x2ab429d2218 <col:26> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x2ab429d21d0 <col:26> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x2ab429d21f0 <col:31> 'int' 32
    |-BinaryOperator 0x2ab429d2500 <line:448:5, col:28> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d2360 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0a18 'g4' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x2ab429d24e8 <col:10, col:28> 'u32':'unsigned int' <IntegralCast>
    |   `-BinaryOperator 0x2ab429d24c8 <col:10, col:28> 'unsigned long long' '+'
    |     |-ImplicitCastExpr 0x2ab429d2498 <col:10> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x2ab429d2380 <col:10> 'u64':'unsigned long long' lvalue Var 0x2ab429d0778 'h4' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x2ab429d24b0 <col:15, col:28> 'unsigned long long' <IntegralCast>
    |       `-CStyleCastExpr 0x2ab429d2470 <col:15, col:28> 'u32':'unsigned int' <IntegralCast>
    |         `-ParenExpr 0x2ab429d2450 <col:20, col:28> 'u64':'unsigned long long'
    |           `-BinaryOperator 0x2ab429d2400 <col:21, col:26> 'u64':'unsigned long long' '>>'
    |             |-ImplicitCastExpr 0x2ab429d23e8 <col:21> 'u64':'unsigned long long' <LValueToRValue>
    |             | `-DeclRefExpr 0x2ab429d23a0 <col:21> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |             `-IntegerLiteral 0x2ab429d23c0 <col:26> 'int' 32
    |-BinaryOperator 0x2ab429d2658 <line:451:5, col:24> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d2520 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    | `-BinaryOperator 0x2ab429d2638 <col:12, col:24> 'unsigned int' '-'
    |   |-ImplicitCastExpr 0x2ab429d2620 <col:12> 'unsigned int' <IntegralCast>
    |   | `-IntegerLiteral 0x2ab429d2558 <col:12> 'int' 0
    |   `-ParenExpr 0x2ab429d2600 <col:16, col:24> 'u32':'unsigned int'
    |     `-BinaryOperator 0x2ab429d25e0 <col:17, col:23> 'u32':'unsigned int' '>>'
    |       |-ImplicitCastExpr 0x2ab429d25c8 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |       | `-DeclRefExpr 0x2ab429d2580 <col:17> 'u32':'unsigned int' lvalue Var 0x2ab429d0a18 'g4' 'u32':'unsigned int'
    |       `-IntegerLiteral 0x2ab429d25a0 <col:23> 'int' 2
    |-CompoundAssignOperator 0x2ab429d26d0 <line:452:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x2ab429d2678 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0838 'g0' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x2ab429d26b8 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x2ab429d2698 <col:11> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x2ab429d2758 <line:453:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x2ab429d2700 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d08b0 'g1' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x2ab429d2740 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x2ab429d2720 <col:11> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x2ab429d27e0 <line:454:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x2ab429d2788 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0928 'g2' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x2ab429d27c8 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x2ab429d27a8 <col:11> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x2ab429d2868 <line:455:5, col:11> 'u32':'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x2ab429d2810 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d09a0 'g3' 'u32':'unsigned int'
    | `-ImplicitCastExpr 0x2ab429d2850 <col:11> 'u32':'unsigned int' <LValueToRValue>
    |   `-DeclRefExpr 0x2ab429d2830 <col:11> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    |-BinaryOperator 0x2ab429d2908 <line:456:5, col:13> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d2898 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    | `-UnaryOperator 0x2ab429d28f0 <col:12, col:13> 'u32':'unsigned int' prefix '~' cannot overflow
    |   `-ImplicitCastExpr 0x2ab429d28d8 <col:13> 'u32':'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x2ab429d28b8 <col:13> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x2ab429d2a10 <line:457:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d2928 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0838 'g0' 'u32':'unsigned int'
    | `-ParenExpr 0x2ab429d29f0 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x2ab429d29d0 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x2ab429d2988 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x2ab429d2948 <col:12> 'u64':'unsigned long long' lvalue Var 0x2ab429d0598 'h0' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x2ab429d29b8 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x2ab429d29a0 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x2ab429d2968 <col:17> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x2ab429d2b28 <line:458:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d2a40 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d08b0 'g1' 'u32':'unsigned int'
    | `-ParenExpr 0x2ab429d2b08 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x2ab429d2ae8 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x2ab429d2aa0 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x2ab429d2a60 <col:12> 'u64':'unsigned long long' lvalue Var 0x2ab429d0610 'h1' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x2ab429d2ad0 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x2ab429d2ab8 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x2ab429d2a80 <col:17> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x2ab429d2c40 <line:459:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d2b58 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0928 'g2' 'u32':'unsigned int'
    | `-ParenExpr 0x2ab429d2c20 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x2ab429d2c00 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x2ab429d2bb8 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x2ab429d2b78 <col:12> 'u64':'unsigned long long' lvalue Var 0x2ab429d0688 'h2' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x2ab429d2be8 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x2ab429d2bd0 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x2ab429d2b98 <col:17> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    |-CompoundAssignOperator 0x2ab429d2d58 <line:460:5, col:21> 'u32':'unsigned int' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
    | |-DeclRefExpr 0x2ab429d2c70 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d09a0 'g3' 'u32':'unsigned int'
    | `-ParenExpr 0x2ab429d2d38 <col:11, col:21> 'unsigned long long'
    |   `-BinaryOperator 0x2ab429d2d18 <col:12, col:17> 'unsigned long long' '&'
    |     |-ImplicitCastExpr 0x2ab429d2cd0 <col:12> 'u64':'unsigned long long' <LValueToRValue>
    |     | `-DeclRefExpr 0x2ab429d2c90 <col:12> 'u64':'unsigned long long' lvalue Var 0x2ab429d0700 'h3' 'u64':'unsigned long long'
    |     `-ImplicitCastExpr 0x2ab429d2d00 <col:17> 'unsigned long long' <IntegralCast>
    |       `-ImplicitCastExpr 0x2ab429d2ce8 <col:17> 'u32':'unsigned int' <LValueToRValue>
    |         `-DeclRefExpr 0x2ab429d2cb0 <col:17> 'u32':'unsigned int' lvalue Var 0x2ab429d0b68 'mask' 'u32':'unsigned int'
    |-BinaryOperator 0x2ab429d2fa0 <line:463:5, col:38> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d2d88 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0838 'g0' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x2ab429d2f78 <col:10, col:38> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x2ab429d2f58 <col:15, col:38> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x2ab429d2f08 <col:16, col:37> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x2ab429d2da8 <col:16> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x2ab429d2ee8 <col:20, col:37> 'unsigned long long' '+'
    |         |-CStyleCastExpr 0x2ab429d2e10 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | `-ImplicitCastExpr 0x2ab429d2df8 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         |   `-DeclRefExpr 0x2ab429d2dc8 <col:25> 'u32':'unsigned int' lvalue Var 0x2ab429d0838 'g0' 'u32':'unsigned int'
    |         `-ImplicitCastExpr 0x2ab429d2ed0 <col:30, col:37> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x2ab429d2eb8 <col:30, col:37> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x2ab429d2e98 <col:30, col:37> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x2ab429d2e80 <col:30> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x2ab429d2e38 <col:30> 'const u32 *':'const u32 *' lvalue ParmVar 0x2ab429d0250 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x2ab429d2e58 <col:36> 'int' 0
    |-BinaryOperator 0x2ab429d52c8 <line:464:5, col:50> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d2fc0 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d08b0 'g1' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x2ab429d52a0 <col:10, col:50> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x2ab429d5280 <col:15, col:50> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x2ab429d5230 <col:16, col:49> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x2ab429d2fe0 <col:16> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x2ab429d5210 <col:20, col:49> 'unsigned long long' '+'
    |         |-BinaryOperator 0x2ab429d5140 <col:20, col:38> 'unsigned long long' '+'
    |         | |-CStyleCastExpr 0x2ab429d3048 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | | `-ImplicitCastExpr 0x2ab429d3030 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         | |   `-DeclRefExpr 0x2ab429d3000 <col:25> 'u32':'unsigned int' lvalue Var 0x2ab429d08b0 'g1' 'u32':'unsigned int'
    |         | `-ParenExpr 0x2ab429d5120 <col:30, col:38> 'u64':'unsigned long long'
    |         |   `-BinaryOperator 0x2ab429d30d0 <col:31, col:36> 'u64':'unsigned long long' '>>'
    |         |     |-ImplicitCastExpr 0x2ab429d30b8 <col:31> 'u64':'unsigned long long' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x2ab429d3070 <col:31> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |         |     `-IntegerLiteral 0x2ab429d3090 <col:36> 'int' 32
    |         `-ImplicitCastExpr 0x2ab429d51f8 <col:42, col:49> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x2ab429d51e0 <col:42, col:49> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x2ab429d51c0 <col:42, col:49> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x2ab429d51a8 <col:42> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x2ab429d5160 <col:42> 'const u32 *':'const u32 *' lvalue ParmVar 0x2ab429d0250 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x2ab429d5180 <col:48> 'int' 1
    |-BinaryOperator 0x2ab429d55c0 <line:465:5, col:50> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d52e8 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d0928 'g2' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x2ab429d5598 <col:10, col:50> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x2ab429d5578 <col:15, col:50> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x2ab429d5528 <col:16, col:49> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x2ab429d5308 <col:16> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x2ab429d5508 <col:20, col:49> 'unsigned long long' '+'
    |         |-BinaryOperator 0x2ab429d5438 <col:20, col:38> 'unsigned long long' '+'
    |         | |-CStyleCastExpr 0x2ab429d5370 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | | `-ImplicitCastExpr 0x2ab429d5358 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         | |   `-DeclRefExpr 0x2ab429d5328 <col:25> 'u32':'unsigned int' lvalue Var 0x2ab429d0928 'g2' 'u32':'unsigned int'
    |         | `-ParenExpr 0x2ab429d5418 <col:30, col:38> 'u64':'unsigned long long'
    |         |   `-BinaryOperator 0x2ab429d53f8 <col:31, col:36> 'u64':'unsigned long long' '>>'
    |         |     |-ImplicitCastExpr 0x2ab429d53e0 <col:31> 'u64':'unsigned long long' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x2ab429d5398 <col:31> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |         |     `-IntegerLiteral 0x2ab429d53b8 <col:36> 'int' 32
    |         `-ImplicitCastExpr 0x2ab429d54f0 <col:42, col:49> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x2ab429d54d8 <col:42, col:49> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x2ab429d54b8 <col:42, col:49> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x2ab429d54a0 <col:42> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x2ab429d5458 <col:42> 'const u32 *':'const u32 *' lvalue ParmVar 0x2ab429d0250 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x2ab429d5478 <col:48> 'int' 2
    |-BinaryOperator 0x2ab429d58b8 <line:466:5, col:50> 'u32':'unsigned int' '='
    | |-DeclRefExpr 0x2ab429d55e0 <col:5> 'u32':'unsigned int' lvalue Var 0x2ab429d09a0 'g3' 'u32':'unsigned int'
    | `-CStyleCastExpr 0x2ab429d5890 <col:10, col:50> 'u32':'unsigned int' <IntegralCast>
    |   `-ParenExpr 0x2ab429d5870 <col:15, col:50> 'u64':'unsigned long long'
    |     `-BinaryOperator 0x2ab429d5820 <col:16, col:49> 'u64':'unsigned long long' '='
    |       |-DeclRefExpr 0x2ab429d5600 <col:16> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |       `-BinaryOperator 0x2ab429d5800 <col:20, col:49> 'unsigned long long' '+'
    |         |-BinaryOperator 0x2ab429d5730 <col:20, col:38> 'unsigned long long' '+'
    |         | |-CStyleCastExpr 0x2ab429d5668 <col:20, col:25> 'u64':'unsigned long long' <IntegralCast>
    |         | | `-ImplicitCastExpr 0x2ab429d5650 <col:25> 'u32':'unsigned int' <LValueToRValue> part_of_explicit_cast
    |         | |   `-DeclRefExpr 0x2ab429d5620 <col:25> 'u32':'unsigned int' lvalue Var 0x2ab429d09a0 'g3' 'u32':'unsigned int'
    |         | `-ParenExpr 0x2ab429d5710 <col:30, col:38> 'u64':'unsigned long long'
    |         |   `-BinaryOperator 0x2ab429d56f0 <col:31, col:36> 'u64':'unsigned long long' '>>'
    |         |     |-ImplicitCastExpr 0x2ab429d56d8 <col:31> 'u64':'unsigned long long' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x2ab429d5690 <col:31> 'u64':'unsigned long long' lvalue Var 0x2ab429d0ad8 't' 'u64':'unsigned long long'
    |         |     `-IntegerLiteral 0x2ab429d56b0 <col:36> 'int' 32
    |         `-ImplicitCastExpr 0x2ab429d57e8 <col:42, col:49> 'unsigned long long' <IntegralCast>
    |           `-ImplicitCastExpr 0x2ab429d57d0 <col:42, col:49> 'u32':'unsigned int' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x2ab429d57b0 <col:42, col:49> 'const u32':'const unsigned int' lvalue
    |               |-ImplicitCastExpr 0x2ab429d5798 <col:42> 'const u32 *':'const u32 *' <LValueToRValue>
    |               | `-DeclRefExpr 0x2ab429d5750 <col:42> 'const u32 *':'const u32 *' lvalue ParmVar 0x2ab429d0250 'nonce' 'const u32 *':'const u32 *'
    |               `-IntegerLiteral 0x2ab429d5770 <col:48> 'int' 3
    |-ParenExpr 0x2ab429d5ac0 <line:71:22, col:40> 'u32':'unsigned int'
    | `-BinaryOperator 0x2ab429d5aa0 <col:23, col:39> 'u32':'unsigned int' '='
    |   |-UnaryOperator 0x2ab429d5a30 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
    |   | `-CStyleCastExpr 0x2ab429d5a08 <col:24, col:33> 'u32 *' <BitCast>
    |   |   `-ParenExpr 0x2ab429d59e8 <col:31, col:33> 'unsigned char *':'unsigned char *'
    |   |     `-BinaryOperator 0x2ab429d5938 <line:468:12, col:18> 'unsigned char *':'unsigned char *' '+'
    |   |       |-ImplicitCastExpr 0x2ab429d5920 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x2ab429d58d8 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2ab429d00d0 'mac' 'unsigned char *':'unsigned char *'
    |   |       `-IntegerLiteral 0x2ab429d58f8 <col:18> 'int' 0
    |   `-ImplicitCastExpr 0x2ab429d5a88 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
    |     `-ParenExpr 0x2ab429d5a68 <col:37, col:39> 'u32':'unsigned int' lvalue
    |       `-DeclRefExpr 0x2ab429d5a48 <line:468:21> 'u32':'unsigned int' lvalue Var 0x2ab429d0838 'g0' 'u32':'unsigned int'
    |-ParenExpr 0x2ab429d5c68 <line:71:22, col:40> 'u32':'unsigned int'
    | `-BinaryOperator 0x2ab429d5c48 <col:23, col:39> 'u32':'unsigned int' '='
    |   |-UnaryOperator 0x2ab429d5bd8 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
    |   | `-CStyleCastExpr 0x2ab429d5bb0 <col:24, col:33> 'u32 *' <BitCast>
    |   |   `-ParenExpr 0x2ab429d5b90 <col:31, col:33> 'unsigned char *':'unsigned char *'
    |   |     `-BinaryOperator 0x2ab429d5b40 <line:469:12, col:18> 'unsigned char *':'unsigned char *' '+'
    |   |       |-ImplicitCastExpr 0x2ab429d5b28 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x2ab429d5ae0 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2ab429d00d0 'mac' 'unsigned char *':'unsigned char *'
    |   |       `-IntegerLiteral 0x2ab429d5b00 <col:18> 'int' 4
    |   `-ImplicitCastExpr 0x2ab429d5c30 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
    |     `-ParenExpr 0x2ab429d5c10 <col:37, col:39> 'u32':'unsigned int' lvalue
    |       `-DeclRefExpr 0x2ab429d5bf0 <line:469:21> 'u32':'unsigned int' lvalue Var 0x2ab429d08b0 'g1' 'u32':'unsigned int'
    |-ParenExpr 0x2ab429d5e10 <line:71:22, col:40> 'u32':'unsigned int'
    | `-BinaryOperator 0x2ab429d5df0 <col:23, col:39> 'u32':'unsigned int' '='
    |   |-UnaryOperator 0x2ab429d5d80 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
    |   | `-CStyleCastExpr 0x2ab429d5d58 <col:24, col:33> 'u32 *' <BitCast>
    |   |   `-ParenExpr 0x2ab429d5d38 <col:31, col:33> 'unsigned char *':'unsigned char *'
    |   |     `-BinaryOperator 0x2ab429d5ce8 <line:470:12, col:18> 'unsigned char *':'unsigned char *' '+'
    |   |       |-ImplicitCastExpr 0x2ab429d5cd0 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x2ab429d5c88 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2ab429d00d0 'mac' 'unsigned char *':'unsigned char *'
    |   |       `-IntegerLiteral 0x2ab429d5ca8 <col:18> 'int' 8
    |   `-ImplicitCastExpr 0x2ab429d5dd8 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
    |     `-ParenExpr 0x2ab429d5db8 <col:37, col:39> 'u32':'unsigned int' lvalue
    |       `-DeclRefExpr 0x2ab429d5d98 <line:470:21> 'u32':'unsigned int' lvalue Var 0x2ab429d0928 'g2' 'u32':'unsigned int'
    `-ParenExpr 0x2ab429d5fb8 <line:71:22, col:40> 'u32':'unsigned int'
      `-BinaryOperator 0x2ab429d5f98 <col:23, col:39> 'u32':'unsigned int' '='
        |-UnaryOperator 0x2ab429d5f28 <col:23, col:33> 'u32':'unsigned int' lvalue prefix '*' cannot overflow
        | `-CStyleCastExpr 0x2ab429d5f00 <col:24, col:33> 'u32 *' <BitCast>
        |   `-ParenExpr 0x2ab429d5ee0 <col:31, col:33> 'unsigned char *':'unsigned char *'
        |     `-BinaryOperator 0x2ab429d5e90 <line:471:12, col:18> 'unsigned char *':'unsigned char *' '+'
        |       |-ImplicitCastExpr 0x2ab429d5e78 <col:12> 'unsigned char *':'unsigned char *' <LValueToRValue>
        |       | `-DeclRefExpr 0x2ab429d5e30 <col:12> 'unsigned char *':'unsigned char *' lvalue ParmVar 0x2ab429d00d0 'mac' 'unsigned char *':'unsigned char *'
        |       `-IntegerLiteral 0x2ab429d5e50 <col:18> 'int' 12
        `-ImplicitCastExpr 0x2ab429d5f80 <line:71:37, col:39> 'u32':'unsigned int' <LValueToRValue>
          `-ParenExpr 0x2ab429d5f60 <col:37, col:39> 'u32':'unsigned int' lvalue
            `-DeclRefExpr 0x2ab429d5f40 <line:471:22> 'u32':'unsigned int' lvalue Var 0x2ab429d09a0 'g3' 'u32':'unsigned int'
