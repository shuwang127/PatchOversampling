TranslationUnitDecl 0x1fa199b3078 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1fa199b3910 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1fa199b3610 '__int128'
|-TypedefDecl 0x1fa199b3980 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1fa199b3630 'unsigned __int128'
|-TypedefDecl 0x1fa199b3cb8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1fa199b3a70 'struct __NSConstantString_tag'
|   `-Record 0x1fa199b39d8 '__NSConstantString_tag'
|-TypedefDecl 0x1fa199b3d28 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x1fa199b3250 'unsigned long long'
|-TypedefDecl 0x1fa199b3dc0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1fa199b3d80 'char *'
|   `-BuiltinType 0x1fa199b3110 'char'
|-TypedefDecl 0x1fa199b3e30 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1fa199b3d80 'char *'
|   `-BuiltinType 0x1fa199b3110 'char'
`-FunctionDecl 0x1fa1b308588 <.//openssl//file_jk/after\crypto\rc4\rc4_enc.c:22:1, line:86:1> line:22:6 invalid RC4 'void (int *, size_t, const unsigned char *, unsigned char *)'
  |-ParmVarDecl 0x1fa199b3ed0 <col:10, col:19> col:19 invalid key 'int *'
  |-ParmVarDecl 0x1fa199b3f70 <col:24, col:31> col:31 used len 'size_t':'unsigned long long'
  |-ParmVarDecl 0x1fa1b308390 <col:36, col:57> col:57 used indata 'const unsigned char *'
  |-ParmVarDecl 0x1fa1b308440 <line:23:10, col:25> col:25 used outdata 'unsigned char *'
  `-CompoundStmt 0x1fa1b309fc0 <line:24:1, line:86:1>
    |-DeclStmt 0x1fa1b3086e0 <line:25:5, col:24>
    | `-VarDecl 0x1fa1b308678 <col:5, col:23> col:23 invalid d 'int *' register
    |-DeclStmt 0x1fa1b308778 <line:26:5, col:34>
    | `-VarDecl 0x1fa1b308710 <col:5, col:22> col:22 invalid x 'int' register
    |-DeclStmt 0x1fa1b308808 <line:27:5, col:13>
    | `-VarDecl 0x1fa1b3087a0 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
    |-BinaryOperator 0x1fa1b3088f0 <line:41:5, col:16> 'size_t':'unsigned long long' '='
    | |-DeclRefExpr 0x1fa1b308820 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
    | `-BinaryOperator 0x1fa1b3088d0 <col:9, col:16> 'size_t':'unsigned long long' '>>'
    |   |-ImplicitCastExpr 0x1fa1b3088b8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x1fa1b308858 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa199b3f70 'len' 'size_t':'unsigned long long'
    |   `-IntegerLiteral 0x1fa1b308890 <col:16> 'int' 3
    |-IfStmt 0x1fa1b30cb70 <line:42:5, line:57:5>
    | |-ImplicitCastExpr 0x1fa1b308930 <line:42:9> 'size_t':'unsigned long long' <LValueToRValue>
    | | `-DeclRefExpr 0x1fa1b308910 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
    | `-CompoundStmt 0x1fa1b30cb58 <col:12, line:57:5>
    |   `-ForStmt 0x1fa1b30cb20 <line:43:9, line:56:9>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     |-<<<NULL>>>
    |     `-CompoundStmt 0x1fa1b30cab8 <line:43:18, line:56:9>
    |       |-NullStmt 0x1fa1b308b58 <line:44:40>
    |       |-NullStmt 0x1fa1b308d40 <line:45:40>
    |       |-NullStmt 0x1fa1b308f28 <line:46:40>
    |       |-NullStmt 0x1fa1b309110 <line:47:40>
    |       |-NullStmt 0x1fa1b3092f8 <line:48:40>
    |       |-NullStmt 0x1fa1b30c538 <line:49:40>
    |       |-NullStmt 0x1fa1b30c720 <line:50:40>
    |       |-NullStmt 0x1fa1b30c908 <line:51:40>
    |       |-CompoundAssignOperator 0x1fa1b30c958 <line:52:13, col:23> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |       | |-DeclRefExpr 0x1fa1b30c910 <col:13> 'const unsigned char *' lvalue ParmVar 0x1fa1b308390 'indata' 'const unsigned char *'
    |       | `-IntegerLiteral 0x1fa1b30c930 <col:23> 'int' 8
    |       |-CompoundAssignOperator 0x1fa1b30c9d0 <line:53:13, col:24> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    |       | |-DeclRefExpr 0x1fa1b30c988 <col:13> 'unsigned char *' lvalue ParmVar 0x1fa1b308440 'outdata' 'unsigned char *'
    |       | `-IntegerLiteral 0x1fa1b30c9a8 <col:24> 'int' 8
    |       `-IfStmt 0x1fa1b30caa0 <line:54:13, line:55:17>
    |         |-BinaryOperator 0x1fa1b30ca78 <line:54:17, col:24> 'int' '=='
    |         | |-UnaryOperator 0x1fa1b30ca20 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
    |         | | `-DeclRefExpr 0x1fa1b30ca00 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
    |         | `-ImplicitCastExpr 0x1fa1b30ca60 <col:24> 'unsigned long long' <IntegralCast>
    |         |   `-IntegerLiteral 0x1fa1b30ca38 <col:24> 'int' 0
    |         `-BreakStmt 0x1fa1b30ca98 <line:55:17>
    |-BinaryOperator 0x1fa1b30cc40 <line:58:5, col:15> 'size_t':'unsigned long long' '='
    | |-DeclRefExpr 0x1fa1b30cb88 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
    | `-BinaryOperator 0x1fa1b30cc20 <col:9, col:15> 'unsigned long long' '&'
    |   |-ImplicitCastExpr 0x1fa1b30cbf0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
    |   | `-DeclRefExpr 0x1fa1b30cba8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1fa199b3f70 'len' 'size_t':'unsigned long long'
    |   `-ImplicitCastExpr 0x1fa1b30cc08 <col:15> 'unsigned long long' <IntegralCast>
    |     `-IntegerLiteral 0x1fa1b30cbc8 <col:15> 'int' 7
    `-IfStmt 0x1fa1b309fa8 <line:59:5, line:83:5>
      |-ImplicitCastExpr 0x1fa1b30cc80 <line:59:9> 'size_t':'unsigned long long' <LValueToRValue>
      | `-DeclRefExpr 0x1fa1b30cc60 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
      `-CompoundStmt 0x1fa1b309f90 <col:12, line:83:5>
        `-ForStmt 0x1fa1b309f58 <line:60:9, line:82:9>
          |-<<<NULL>>>
          |-<<<NULL>>>
          |-<<<NULL>>>
          |-<<<NULL>>>
          `-CompoundStmt 0x1fa1b309ed8 <line:60:18, line:82:9>
            |-NullStmt 0x1fa1b30ce78 <line:61:40>
            |-IfStmt 0x1fa1b30cf20 <line:62:13, line:63:17>
            | |-BinaryOperator 0x1fa1b30cef8 <line:62:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x1fa1b30cea0 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x1fa1b30ce80 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x1fa1b30cee0 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x1fa1b30ceb8 <col:24> 'int' 0
            | `-BreakStmt 0x1fa1b30cf18 <line:63:17>
            |-NullStmt 0x1fa1b30d118 <line:64:40>
            |-IfStmt 0x1fa1b30d1c0 <line:65:13, line:66:17>
            | |-BinaryOperator 0x1fa1b30d198 <line:65:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x1fa1b30d140 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x1fa1b30d120 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x1fa1b30d180 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x1fa1b30d158 <col:24> 'int' 0
            | `-BreakStmt 0x1fa1b30d1b8 <line:66:17>
            |-NullStmt 0x1fa1b30d3b8 <line:67:40>
            |-IfStmt 0x1fa1b309440 <line:68:13, line:69:17>
            | |-BinaryOperator 0x1fa1b309418 <line:68:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x1fa1b3093c0 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x1fa1b3093a0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x1fa1b309400 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x1fa1b3093d8 <col:24> 'int' 0
            | `-BreakStmt 0x1fa1b309438 <line:69:17>
            |-NullStmt 0x1fa1b309638 <line:70:40>
            |-IfStmt 0x1fa1b3096e0 <line:71:13, line:72:17>
            | |-BinaryOperator 0x1fa1b3096b8 <line:71:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x1fa1b309660 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x1fa1b309640 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x1fa1b3096a0 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x1fa1b309678 <col:24> 'int' 0
            | `-BreakStmt 0x1fa1b3096d8 <line:72:17>
            |-NullStmt 0x1fa1b3098d8 <line:73:40>
            |-IfStmt 0x1fa1b309980 <line:74:13, line:75:17>
            | |-BinaryOperator 0x1fa1b309958 <line:74:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x1fa1b309900 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x1fa1b3098e0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x1fa1b309940 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x1fa1b309918 <col:24> 'int' 0
            | `-BreakStmt 0x1fa1b309978 <line:75:17>
            |-NullStmt 0x1fa1b309b78 <line:76:40>
            |-IfStmt 0x1fa1b309c20 <line:77:13, line:78:17>
            | |-BinaryOperator 0x1fa1b309bf8 <line:77:17, col:24> 'int' '=='
            | | |-UnaryOperator 0x1fa1b309ba0 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
            | | | `-DeclRefExpr 0x1fa1b309b80 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
            | | `-ImplicitCastExpr 0x1fa1b309be0 <col:24> 'unsigned long long' <IntegralCast>
            | |   `-IntegerLiteral 0x1fa1b309bb8 <col:24> 'int' 0
            | `-BreakStmt 0x1fa1b309c18 <line:78:17>
            |-NullStmt 0x1fa1b309e18 <line:79:40>
            `-IfStmt 0x1fa1b309ec0 <line:80:13, line:81:17>
              |-BinaryOperator 0x1fa1b309e98 <line:80:17, col:24> 'int' '=='
              | |-UnaryOperator 0x1fa1b309e40 <col:17, col:19> 'size_t':'unsigned long long' prefix '--'
              | | `-DeclRefExpr 0x1fa1b309e20 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1fa1b3087a0 'i' 'size_t':'unsigned long long'
              | `-ImplicitCastExpr 0x1fa1b309e80 <col:24> 'unsigned long long' <IntegralCast>
              |   `-IntegerLiteral 0x1fa1b309e58 <col:24> 'int' 0
              `-BreakStmt 0x1fa1b309eb8 <line:81:17>
