TranslationUnitDecl 0x192350c4c88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x192350c5520 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x192350c5220 '__int128'
|-TypedefDecl 0x192350c5590 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x192350c5240 'unsigned __int128'
|-TypedefDecl 0x192350c58c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x192350c5680 'struct __NSConstantString_tag'
|   `-Record 0x192350c55e8 '__NSConstantString_tag'
|-TypedefDecl 0x192350c5938 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x192350c4e60 'unsigned long long'
|-TypedefDecl 0x192350c59d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x192350c5990 'char *'
|   `-BuiltinType 0x192350c4d20 'char'
|-TypedefDecl 0x192350c5a40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x192350c5990 'char *'
|   `-BuiltinType 0x192350c4d20 'char'
|-RecordDecl 0x192350c5a98 <.//openssl//file_jk/after\crypto\rsa/rsa_locl.h:12:1, line:46:1> line:12:8 invalid struct rsa_st definition
| |-FieldDecl 0x192350c5b68 <line:17:5, col:9> col:9 pad 'int'
| |-FieldDecl 0x192350c5bd8 <line:18:5, col:10> col:10 version 'long'
| |-FieldDecl 0x19236b0d650 <line:19:5, col:23> col:23 invalid meth 'const int *'
| |-FieldDecl 0x19236b0d6f0 <line:21:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x19236b0d760 <line:22:5, col:13> col:13 invalid n 'int *'
| |-FieldDecl 0x19236b0d7d0 <line:23:5, col:13> col:13 invalid e 'int *'
| |-FieldDecl 0x19236b0d840 <line:24:5, col:13> col:13 invalid d 'int *'
| |-FieldDecl 0x19236b0d8b0 <line:25:5, col:13> col:13 invalid p 'int *'
| |-FieldDecl 0x19236b0d920 <line:26:5, col:13> col:13 invalid q 'int *'
| |-FieldDecl 0x19236b0d990 <line:27:5, col:13> col:13 invalid dmp1 'int *'
| |-FieldDecl 0x19236b0da00 <line:28:5, col:13> col:13 invalid dmq1 'int *'
| |-FieldDecl 0x19236b0da70 <line:29:5, col:13> col:13 invalid iqmp 'int *'
| |-FieldDecl 0x19236b0dae0 <line:31:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x19236b0db50 <line:32:5, col:9> col:9 references 'int'
| |-FieldDecl 0x19236b0dbc0 <line:33:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x19236b0dc30 <line:35:5, col:18> col:18 invalid _method_mod_n 'int *'
| |-FieldDecl 0x19236b0dca0 <line:36:5, col:18> col:18 invalid _method_mod_p 'int *'
| |-FieldDecl 0x19236b0dd10 <line:37:5, col:18> col:18 invalid _method_mod_q 'int *'
| |-FieldDecl 0x19236b0dd80 <line:42:5, col:11> col:11 bignum_data 'char *'
| |-FieldDecl 0x19236b0ddf0 <line:43:5, col:18> col:18 invalid blinding 'int *'
| |-FieldDecl 0x19236b0de60 <line:44:5, col:18> col:18 invalid mt_blinding 'int *'
| `-FieldDecl 0x19236b0ded0 <line:45:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x19236b0df28 <line:48:1, line:91:1> line:48:8 struct rsa_meth_st definition
| |-FieldDecl 0x19236b0dff8 <line:49:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x19236b0e468 <line:50:5, line:51:65> line:50:11 rsa_pub_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x19236b06740 <line:52:5, line:53:65> line:52:11 rsa_pub_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x19236b06a78 <line:54:5, line:55:66> line:54:11 rsa_priv_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x19236b06db0 <line:56:5, line:57:66> line:56:11 rsa_priv_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x19236b07140 <line:59:5, col:75> col:11 rsa_mod_exp 'int (*)(int *, const int *, int *, int *)'
| |-FieldDecl 0x19236b0f6d8 <line:61:5, line:62:72> line:61:11 bn_mod_exp 'int (*)(int *, const int *, const int *, const int *, int *, int *)'
| |-FieldDecl 0x19236b0f8a8 <line:64:5, col:26> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x19236b0f9c0 <line:66:5, col:28> col:11 finish 'int (*)(int *)'
| |-FieldDecl 0x19236b0fa30 <line:68:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x19236b0faa0 <line:70:5, col:11> col:11 app_data 'char *'
| |-FieldDecl 0x19236b0ff80 <line:77:5, line:80:36> line:77:11 rsa_sign 'int (*)(int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, const int *)'
| |-FieldDecl 0x19236b10430 <line:81:5, line:83:59> line:81:11 rsa_verify 'int (*)(int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, const int *)'
| `-FieldDecl 0x19236b11830 <line:90:5, col:67> col:11 rsa_keygen 'int (*)(int *, int, int *, int *)'
|-FunctionDecl 0x19236b11e40 <line:93:1, line:96:50> line:93:12 invalid int_rsa_verify 'int (int, const unsigned char *, unsigned int, unsigned char *, size_t *, const unsigned char *, size_t, int *)' extern
| |-ParmVarDecl 0x19236b118a0 <col:27, col:31> col:31 dtype 'int'
| |-ParmVarDecl 0x19236b11920 <col:38, col:59> col:59 m 'const unsigned char *'
| |-ParmVarDecl 0x19236b119a0 <line:94:27, col:40> col:40 m_len 'unsigned int'
| |-ParmVarDecl 0x19236b11a20 <col:47, col:62> col:62 rm 'unsigned char *'
| |-ParmVarDecl 0x19236b11b18 <line:95:27, col:35> col:35 prm_len 'size_t *'
| |-ParmVarDecl 0x19236b11b98 <col:44, col:65> col:65 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x19236b11c10 <line:96:27, col:34> col:34 siglen 'size_t':'unsigned long long'
| `-ParmVarDecl 0x19236b11c90 <col:42, col:47> col:47 invalid rsa 'int *'
|-FunctionDecl 0x19236b12000 <.//openssl//file_jk/after\crypto\rsa\rsa_chk.c:14:1, line:17:1> line:14:5 invalid RSA_check_key 'int (const int *)'
| |-ParmVarDecl 0x19236b11f38 <col:19, col:30> col:30 invalid key 'const int *'
| `-CompoundStmt 0x19236b12248 <line:15:1, line:17:1>
`-FunctionDecl 0x19236b123d0 <line:19:1, line:156:1> line:19:5 invalid RSA_check_key_ex 'int (const int *, int *)'
  |-ParmVarDecl 0x19236b12270 <col:22, col:33> col:33 invalid key 'const int *'
  |-ParmVarDecl 0x19236b122f0 <col:38, col:48> col:48 invalid cb 'int *'
  `-CompoundStmt 0x19236b1c008 <line:20:1, line:156:1>
    |-DeclStmt 0x19236b12540 <line:23:5, col:16>
    | `-VarDecl 0x19236b124b0 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x19236b12518 <col:15> 'int' 1
    |-IfStmt 0x19236b126e0 <line:25:5, line:29:5>
    | |-OpaqueValueExpr 0x19236b126c8 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b126b0 <line:26:50, line:29:5>
    |   `-ReturnStmt 0x19236b126a0 <line:28:9, col:16>
    |     `-IntegerLiteral 0x19236b12668 <col:16> 'int' 0
    |-IfStmt 0x19236b12c70 <line:37:5, line:42:5>
    | |-OpaqueValueExpr 0x19236b12c58 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b12c38 <line:38:42, line:42:5>
    |   |-BinaryOperator 0x19236b12b90 <line:39:9, col:16> 'int' '='
    |   | |-DeclRefExpr 0x19236b12b18 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   | `-UnaryOperator 0x19236b12b78 <col:15, col:16> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x19236b12b50 <col:16> 'int' 1
    |   `-GotoStmt 0x19236b12c20 <line:41:9, col:14> 'err' 0x19236b12bd0
    |-IfStmt 0x19236b12e50 <line:44:5, line:47:5>
    | |-OpaqueValueExpr 0x19236b12e38 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b12e20 <line:44:28, line:47:5>
    |   `-BinaryOperator 0x19236b12de0 <line:45:9, col:15> 'int' '='
    |     |-DeclRefExpr 0x19236b12d98 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |     `-IntegerLiteral 0x19236b12db8 <col:15> 'int' 0
    |-IfStmt 0x19236b13030 <line:48:5, line:51:5>
    | |-OpaqueValueExpr 0x19236b13018 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b13000 <line:48:29, line:51:5>
    |   `-BinaryOperator 0x19236b12fc0 <line:49:9, col:15> 'int' '='
    |     |-DeclRefExpr 0x19236b12f78 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |     `-IntegerLiteral 0x19236b12f98 <col:15> 'int' 0
    |-IfStmt 0x19236b13238 <line:54:5, line:57:5>
    | |-OpaqueValueExpr 0x19236b13220 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b13208 <line:54:65, line:57:5>
    |   `-BinaryOperator 0x19236b131c8 <line:55:9, col:15> 'int' '='
    |     |-DeclRefExpr 0x19236b13180 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |     `-IntegerLiteral 0x19236b131a0 <col:15> 'int' 0
    |-IfStmt 0x19236b13350 <line:60:5, line:63:5>
    | |-OpaqueValueExpr 0x19236b13338 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b13320 <line:60:65, line:63:5>
    |   `-BinaryOperator 0x19236b132e0 <line:61:9, col:15> 'int' '='
    |     |-DeclRefExpr 0x19236b13298 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |     `-IntegerLiteral 0x19236b132b8 <col:15> 'int' 0
    |-IfStmt 0x19236b13548 <line:66:5, line:69:5>
    | |-OpaqueValueExpr 0x19236b13530 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b13510 <line:66:42, line:69:5>
    |   |-BinaryOperator 0x19236b134d8 <line:67:9, col:16> 'int' '='
    |   | |-DeclRefExpr 0x19236b13478 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   | `-UnaryOperator 0x19236b134c0 <col:15, col:16> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x19236b13498 <col:16> 'int' 1
    |   `-GotoStmt 0x19236b134f8 <line:68:9, col:14> 'err' 0x19236b12bd0
    |-IfStmt 0x19236b0e718 <line:70:5, line:73:5>
    | |-OpaqueValueExpr 0x19236b0e700 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b0e6e8 <line:70:33, line:73:5>
    |   `-BinaryOperator 0x19236b0e6a8 <line:71:9, col:15> 'int' '='
    |     |-DeclRefExpr 0x19236b0e660 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |     `-IntegerLiteral 0x19236b0e680 <col:15> 'int' 0
    |-IfStmt 0x19236b0ea58 <line:76:5, line:79:5>
    | |-OpaqueValueExpr 0x19236b0ea40 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b0ea20 <line:76:45, line:79:5>
    |   |-BinaryOperator 0x19236b0e9e8 <line:77:9, col:16> 'int' '='
    |   | |-DeclRefExpr 0x19236b0e988 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   | `-UnaryOperator 0x19236b0e9d0 <col:15, col:16> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x19236b0e9a8 <col:16> 'int' 1
    |   `-GotoStmt 0x19236b0ea08 <line:78:9, col:14> 'err' 0x19236b12bd0
    |-IfStmt 0x19236b0ebb8 <line:80:5, line:83:5>
    | |-OpaqueValueExpr 0x19236b0eba0 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b0eb80 <line:80:45, line:83:5>
    |   |-BinaryOperator 0x19236b0eb48 <line:81:9, col:16> 'int' '='
    |   | |-DeclRefExpr 0x19236b0eae8 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   | `-UnaryOperator 0x19236b0eb30 <col:15, col:16> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x19236b0eb08 <col:16> 'int' 1
    |   `-GotoStmt 0x19236b0eb68 <line:82:9, col:14> 'err' 0x19236b12bd0
    |-IfStmt 0x19236b0ecc0 <line:86:5, line:89:5>
    | |-OpaqueValueExpr 0x19236b0eca8 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b0ec88 <line:86:32, line:89:5>
    |   |-BinaryOperator 0x19236b0ec50 <line:87:9, col:16> 'int' '='
    |   | |-DeclRefExpr 0x19236b0ebf0 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   | `-UnaryOperator 0x19236b0ec38 <col:15, col:16> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x19236b0ec10 <col:16> 'int' 1
    |   `-GotoStmt 0x19236b0ec70 <line:88:9, col:14> 'err' 0x19236b12bd0
    |-IfStmt 0x19236b0eeb8 <line:90:5, line:93:5>
    | |-OpaqueValueExpr 0x19236b0eea0 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b0ee80 <line:90:32, line:93:5>
    |   |-BinaryOperator 0x19236b0ee48 <line:91:9, col:16> 'int' '='
    |   | |-DeclRefExpr 0x19236b0ede8 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   | `-UnaryOperator 0x19236b0ee30 <col:15, col:16> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x19236b0ee08 <col:16> 'int' 1
    |   `-GotoStmt 0x19236b0ee68 <line:92:9, col:14> 'err' 0x19236b12bd0
    |-IfStmt 0x19236b0f0b0 <line:94:5, line:97:5>
    | |-OpaqueValueExpr 0x19236b0f098 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b0f078 <line:94:38, line:97:5>
    |   |-BinaryOperator 0x19236b0f040 <line:95:9, col:16> 'int' '='
    |   | |-DeclRefExpr 0x19236b0efe0 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   | `-UnaryOperator 0x19236b0f028 <col:15, col:16> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x19236b0f000 <col:16> 'int' 1
    |   `-GotoStmt 0x19236b0f060 <line:96:9, col:14> 'err' 0x19236b12bd0
    |-IfStmt 0x19236b0f2a8 <line:98:5, line:101:5>
    | |-OpaqueValueExpr 0x19236b0f290 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b0f270 <line:98:49, line:101:5>
    |   |-BinaryOperator 0x19236b0f238 <line:99:9, col:16> 'int' '='
    |   | |-DeclRefExpr 0x19236b0f1d8 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   | `-UnaryOperator 0x19236b0f220 <col:15, col:16> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x19236b0f1f8 <col:16> 'int' 1
    |   `-GotoStmt 0x19236b0f258 <line:100:9, col:14> 'err' 0x19236b12bd0
    |-IfStmt 0x19236b0f398 <line:103:5, line:106:5>
    | |-OpaqueValueExpr 0x19236b0f380 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b0f368 <line:103:24, line:106:5>
    |   `-BinaryOperator 0x19236b0f328 <line:104:9, col:15> 'int' '='
    |     |-DeclRefExpr 0x19236b0f2e0 <col:9> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |     `-IntegerLiteral 0x19236b0f300 <col:15> 'int' 0
    |-IfStmt 0x19236b1bce8 <line:108:5, line:146:5>
    | |-OpaqueValueExpr 0x19236b1bcd0 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x19236b1bc80 <line:108:70, line:146:5>
    |   |-IfStmt 0x19236b0f4f8 <line:110:9, line:113:9>
    |   | |-OpaqueValueExpr 0x19236b0f4e0 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x19236b0f4c0 <line:110:49, line:113:9>
    |   |   |-BinaryOperator 0x19236b0f488 <line:111:13, col:20> 'int' '='
    |   |   | |-DeclRefExpr 0x19236b0f428 <col:13> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   |   | `-UnaryOperator 0x19236b0f470 <col:19, col:20> 'int' prefix '-'
    |   |   |   `-IntegerLiteral 0x19236b0f448 <col:20> 'int' 1
    |   |   `-GotoStmt 0x19236b0f4a8 <line:112:13, col:18> 'err' 0x19236b12bd0
    |   |-IfStmt 0x19236b1b4c0 <line:114:9, line:117:9>
    |   | |-OpaqueValueExpr 0x19236b1b4a8 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x19236b1b488 <line:114:41, line:117:9>
    |   |   |-BinaryOperator 0x19236b1b450 <line:115:13, col:20> 'int' '='
    |   |   | |-DeclRefExpr 0x19236b0f620 <col:13> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   |   | `-UnaryOperator 0x19236b1b438 <col:19, col:20> 'int' prefix '-'
    |   |   |   `-IntegerLiteral 0x19236b1b410 <col:20> 'int' 1
    |   |   `-GotoStmt 0x19236b1b470 <line:116:13, col:18> 'err' 0x19236b12bd0
    |   |-IfStmt 0x19236b1b5d8 <line:118:9, line:121:9>
    |   | |-OpaqueValueExpr 0x19236b1b5c0 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x19236b1b5a8 <line:118:40, line:121:9>
    |   |   `-BinaryOperator 0x19236b1b568 <line:119:13, col:19> 'int' '='
    |   |     |-DeclRefExpr 0x19236b1b520 <col:13> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   |     `-IntegerLiteral 0x19236b1b540 <col:19> 'int' 0
    |   |-IfStmt 0x19236b1b738 <line:124:9, line:127:9>
    |   | |-OpaqueValueExpr 0x19236b1b720 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x19236b1b700 <line:124:49, line:127:9>
    |   |   |-BinaryOperator 0x19236b1b6c8 <line:125:13, col:20> 'int' '='
    |   |   | |-DeclRefExpr 0x19236b1b668 <col:13> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   |   | `-UnaryOperator 0x19236b1b6b0 <col:19, col:20> 'int' prefix '-'
    |   |   |   `-IntegerLiteral 0x19236b1b688 <col:20> 'int' 1
    |   |   `-GotoStmt 0x19236b1b6e8 <line:126:13, col:18> 'err' 0x19236b12bd0
    |   |-IfStmt 0x19236b1b840 <line:128:9, line:131:9>
    |   | |-OpaqueValueExpr 0x19236b1b828 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x19236b1b808 <line:128:41, line:131:9>
    |   |   |-BinaryOperator 0x19236b1b7d0 <line:129:13, col:20> 'int' '='
    |   |   | |-DeclRefExpr 0x19236b1b770 <col:13> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   |   | `-UnaryOperator 0x19236b1b7b8 <col:19, col:20> 'int' prefix '-'
    |   |   |   `-IntegerLiteral 0x19236b1b790 <col:20> 'int' 1
    |   |   `-GotoStmt 0x19236b1b7f0 <line:130:13, col:18> 'err' 0x19236b12bd0
    |   |-IfStmt 0x19236b1b958 <line:132:9, line:135:9>
    |   | |-OpaqueValueExpr 0x19236b1b940 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x19236b1b928 <line:132:40, line:135:9>
    |   |   `-BinaryOperator 0x19236b1b8e8 <line:133:13, col:19> 'int' '='
    |   |     |-DeclRefExpr 0x19236b1b8a0 <col:13> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   |     `-IntegerLiteral 0x19236b1b8c0 <col:19> 'int' 0
    |   |-IfStmt 0x19236b1bb50 <line:138:9, line:141:9>
    |   | |-OpaqueValueExpr 0x19236b1bb38 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x19236b1bb18 <line:138:54, line:141:9>
    |   |   |-BinaryOperator 0x19236b1bae0 <line:139:13, col:20> 'int' '='
    |   |   | |-DeclRefExpr 0x19236b1ba80 <col:13> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |   |   | `-UnaryOperator 0x19236b1bac8 <col:19, col:20> 'int' prefix '-'
    |   |   |   `-IntegerLiteral 0x19236b1baa0 <col:20> 'int' 1
    |   |   `-GotoStmt 0x19236b1bb00 <line:140:13, col:18> 'err' 0x19236b12bd0
    |   `-IfStmt 0x19236b1bc68 <line:142:9, line:145:9>
    |     |-OpaqueValueExpr 0x19236b1bc50 <<invalid sloc>> '_Bool'
    |     `-CompoundStmt 0x19236b1bc38 <line:142:40, line:145:9>
    |       `-BinaryOperator 0x19236b1bbf8 <line:143:13, col:19> 'int' '='
    |         |-DeclRefExpr 0x19236b1bbb0 <col:13> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
    |         `-IntegerLiteral 0x19236b1bbd0 <col:19> 'int' 0
    |-LabelStmt 0x19236b1be18 <line:148:2, col:5> 'err'
    | `-NullStmt 0x19236b1be10 <col:5>
    `-ReturnStmt 0x19236b1bff8 <line:155:5, col:12>
      `-ImplicitCastExpr 0x19236b1bfe0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x19236b1bfc0 <col:12> 'int' lvalue Var 0x19236b124b0 'ret' 'int'
