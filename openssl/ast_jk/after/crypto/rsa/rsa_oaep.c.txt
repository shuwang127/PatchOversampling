TranslationUnitDecl 0x17816664918 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x178166651b0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x17816664eb0 '__int128'
|-TypedefDecl 0x17816665220 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x17816664ed0 'unsigned __int128'
|-TypedefDecl 0x17816665558 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x17816665310 'struct __NSConstantString_tag'
|   `-Record 0x17816665278 '__NSConstantString_tag'
|-TypedefDecl 0x178166655c8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x17816664af0 'unsigned long long'
|-TypedefDecl 0x17816665660 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x17816665620 'char *'
|   `-BuiltinType 0x178166649b0 'char'
|-TypedefDecl 0x178166656d0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x17816665620 'char *'
|   `-BuiltinType 0x178166649b0 'char'
|-TypedefDecl 0x17816665790 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x17816664af0 'unsigned long long'
|-TypedefDecl 0x17816665800 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x17816665620 'char *'
|   `-BuiltinType 0x178166649b0 'char'
|-FunctionDecl 0x1781816edf0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1781816ee90 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1781816ef00 <col:21> Implicit
|-FunctionDecl 0x1781816ef58 prev 0x1781816edf0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1781816ec80 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1781816f048 <col:21> Inherited Implicit
|-TypedefDecl 0x1781816f088 prev 0x178166655c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x17816664af0 'unsigned long long'
|-TypedefDecl 0x1781816f130 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1781816f100 'size_t' sugar
|   |-Typedef 0x1781816f088 'size_t'
|   `-BuiltinType 0x17816664af0 'unsigned long long'
|-TypedefDecl 0x1781816f1a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x17816664a50 'long long'
|-TypedefDecl 0x1781816f210 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x17816664a50 'long long'
|-TypedefDecl 0x1781816f280 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x17816664a90 'unsigned short'
|-TypedefDecl 0x1781816f2f0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x17816664a90 'unsigned short'
|-TypedefDecl 0x1781816f360 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x17816664a90 'unsigned short'
|-TypedefDecl 0x1781816f3d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x17816664a10 'int'
|-TypedefDecl 0x1781816f440 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x17816664a30 'long'
|-TypedefDecl 0x1781816f4b0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x17816664a50 'long long'
|-TypedefDecl 0x1781816f540 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1781816f510 '__time64_t' sugar
|   |-Typedef 0x1781816f4b0 '__time64_t'
|   `-BuiltinType 0x17816664a50 'long long'
|-FunctionDecl 0x1781816f6b8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1781816f8d8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x178181ae040 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1781816fa18 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1781816fa90 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1781816fb08 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1781816fb88 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x178181adde0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x178181ae120 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x178181ae1e0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x178181ae350 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x178181ae300 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x178181ae2a0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x178181ae1c0 'struct threadlocaleinfostruct'
|       `-Record 0x178181b3e40 'threadlocaleinfostruct'
|-TypedefDecl 0x178181ae460 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x178181ae410 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x178181ae3b0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x178181ae280 'struct threadmbcinfostruct'
|       `-Record 0x178181ae1e0 'threadmbcinfostruct'
|-RecordDecl 0x178181ae4b8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x178181ae570 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x178181ae630 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x178181ae6c0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x178181ae750 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x178181ae808 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x178181ae7b0 'struct localeinfo_struct' sugar
|   `-RecordType 0x178181ae610 'struct localeinfo_struct'
|     `-Record 0x178181ae570 'localeinfo_struct'
|-TypedefDecl 0x178181ae8e0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x178181ae890 'struct localeinfo_struct *'
|   `-ElaboratedType 0x178181ae7b0 'struct localeinfo_struct' sugar
|     `-RecordType 0x178181ae610 'struct localeinfo_struct'
|       `-Record 0x178181ae570 'localeinfo_struct'
|-RecordDecl 0x178181ae958 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x178181aea10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x178181aea88 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x178181aeb48 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x178181aebe0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x178181aec50 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x178181aed08 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x178181aecb0 'struct localerefcount' sugar
|   `-RecordType 0x178181ae9f0 'struct localerefcount'
|     `-Record 0x178181ae958 'localerefcount'
|-RecordDecl 0x178181b3e40 prev 0x178181ae120 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x178181b3ec0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x178181b3f38 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x178181b3fa8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x178181b4018 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x178181b4088 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x178181b4248 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x178181b42b8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x178181b4328 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x178181b4398 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x178181b4408 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x178181b4478 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x178181b44d0 parent 0x17816664918 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x178181b4660 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x178181b46d0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x178181b4740 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x178181b47b0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x178181b4850 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x178181b48c0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x178181b49d0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x178181b4b08 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x178181b4bb8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x178181b4b60 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x178181ae1c0 'struct threadlocaleinfostruct'
|     `-Record 0x178181b3e40 'threadlocaleinfostruct'
|-RecordDecl 0x178181b4c50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x178181b4d10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x178181b4d88 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x178181b5e60 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x178181b5ed0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x178181b5f40 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x178181b5fb0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x178181b6020 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x178181b6090 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x178181b6100 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x178181b61b0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x178181b6160 'struct _iobuf' sugar
|   `-RecordType 0x178181b4cf0 'struct _iobuf'
|     `-Record 0x178181b4c50 '_iobuf'
|-FunctionDecl 0x178181b63e8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x178181b64b8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x17816664a50 'long long'
|-FunctionDecl 0x178181b6698 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x178181b6520 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x178181b6990 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x178181b6770 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x178181b67e8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x178181b6d40 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x178181b6a70 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x178181b6af0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x178181b6b70 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x178181ba010 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x178181b9ea0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x178181ba240 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x178181ba100 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x178181ba3f0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x178181ba310 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x178181ba5e0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x178181ba8d8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x178181ba6b0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x178181ba730 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x178181baa90 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x178181ba9b0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x178181bac40 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x178181bab60 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x178181badf0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x178181bad10 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x178181bdfe8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x178181bdf08 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x178181be178 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x178181be4e0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x178181be240 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x178181be338 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x178181be898 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x178181be5c0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x178181be640 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x178181be6b8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x178181bea58 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x178181be978 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x178181bed20 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x178181beb30 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x178181bebb0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x178181beef0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x178181bf2e8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x178181bf388 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x178181bf3f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x178181bf468 prev 0x178181bf2e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x178181bf0c0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x178181bf140 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x178181bf518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178181bf990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x178181bf6c0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x178181bf740 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x178181bf7c0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x178181bfcb0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x178181bfd50 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x178181bfdb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x178181bfe30 <col:40> Implicit printf 2 3
|-FunctionDecl 0x178181bff00 prev 0x178181bfcb0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x178181bfa70 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x178181bfaf0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x178181bfff8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x178181c01c0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x178181c0040 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x178181c00c0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x178181c0418 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x178181c02a0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x178181c0318 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x178181c0648 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x178181c04f8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x178181c0940 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x178181c0720 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x178181c0798 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x178181c0dd8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x178181c0e78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x178181c1f20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x178181c1f88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x178181c1ff0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x178181c2078 prev 0x178181c0dd8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x178181c0a20 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x178181c0a98 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178181c0b10 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x178181c0b88 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x178181c2580 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x178181c2168 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x178181c21e0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178181c2258 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178181c22d0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x178181c2348 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x178181c2a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x178181c2770 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x178181c27f0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x178181c2868 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x178181c2af8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178181baf58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x178181c2c40 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x178181c2cc0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x178181c2d40 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x178181c2db8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x178181bb300 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x178181bb3a0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x178181bb408 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x178181bb480 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x178181bb4e8 prev 0x178181bb300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x178181bb138 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x178181bb1b8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x178181bb6c8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x178181bb598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178181bbb08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x178181bb808 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x178181bb888 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x178181bb920 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x178181bbbc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178181bbec0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x178181bbd00 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x178181bbd80 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x178181bc1b0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x178181bbf98 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x178181bc018 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x178181bc090 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x178181bc510 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x178181bc290 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x178181bc368 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x178181bc8c8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x178181bc5e8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x178181bc668 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x178181bc6e8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x178181bcb28 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x178181bc9a8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x178181c2f78 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x178181bcbf8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x178181bcc78 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x178181bccf8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x178181c31d8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x178181c3058 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x178181c3698 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x178181c3738 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x178181c37a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x178181c3808 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x178181c3870 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x178181c38f8 prev 0x178181c3698 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x178181c32e0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x178181c3358 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178181c33d0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x178181c3448 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x178181c3ac0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x178181c39e0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x178181c3c50 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x178181c3dd8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x178181bd090 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x178181c3ea8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x178181bcee0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x178181bd3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x178181bd270 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x178181bd460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178181bd680 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x178181bd5a0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x178181bd8a0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x178181bd758 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x178181bda50 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x178181bd970 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x178181bdca0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x178181bdb28 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x178181bdba8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x178181c4f50 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x178181c4ff0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x178181c5060 <col:40> Implicit printf 1 2
|-FunctionDecl 0x178181c50c8 prev 0x178181c4f50 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x178181bdd80 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x178181c51b8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x178181c52e8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x178181c5208 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x178181c5538 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x178181c53c0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x178181c5438 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x178181c56f8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x178181c5618 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x178181c5918 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x178181c57d0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x178181c5b68 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x178181c59f0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x178181c5a68 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x178181c5d28 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x178181c5c48 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x17818217cf0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x178181c5e00 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x178181c5e80 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x17818217eb0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x17818217dd0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x17818218140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x17818218060 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x178182181e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x178182183e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x17818218308 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x17818218570 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x17818218818 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x178182188b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x17818218928 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x17818218990 prev 0x17818218818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x17818218700 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x17818218b68 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x17818218a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818211ed0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x17818211c98 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x17818211d10 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x17818211f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178182121a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x178182120c8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x178182123f8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x17818212280 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x178182122f8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x178182127b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x17818212590 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x17818212610 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x17818212868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818212a90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x178182129b0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x17818213d28 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x17818213be0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x17818213f10 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x17818214360 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x17818213fd8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x17818214058 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x178182140d8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x17818214150 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x178182147e0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x17818214450 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x178182144c8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818214540 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x178182145c0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x17818214bf0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x178182148d0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x17818214948 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x178182149c8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x17818214db8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x17818214cd8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x17818215190 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x17818215230 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x17818215298 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x17818215310 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x17818215378 prev 0x17818215190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x17818214f50 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x17818214fd0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x17818215558 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x17818215428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818215948 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x17818215668 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x178182156e8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x17818215760 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x17818215a00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818210cb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x17818215b48 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x17818210bb0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x17818210fa8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x17818210d90 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x17818210e10 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x17818210e88 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818211438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x17818211150 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x178182111c8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818211248 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x178182114f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818211ac0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x17818211730 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x178182117a8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818211828 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x178182118a0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x17818218c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818218f90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x17818218d78 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x17818218df0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x17818218e70 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x17818219328 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x17818219078 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x178182190f0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818219170 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x178182191e8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818219588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x17818219628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178182198e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x17818219770 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x17818216c10 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x178182199b8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x17818219a30 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x17818216e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x17818216db0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x17818216f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178182171f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x17818217080 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x178182170f8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x17818217610 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x178182176b0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x17818217718 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x17818217780 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x17818217800 <col:40> Implicit printf 2 0
|-FunctionDecl 0x17818217868 prev 0x17818217610 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x178182172d0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x17818217350 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x178182173c8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x17818217968 <col:40> Inherited printf 2 0
|-FunctionDecl 0x17818219c40 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x17818219ce0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x17818219d48 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x17818219db0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x17818219e30 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x17818219e98 prev 0x17818219c40 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x178182179b0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x17818217a30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x17818217aa8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x17818219f98 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1781821a1f8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x17818219fe0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1781821a060 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1781821a0d8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821a4f0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1781821a2d8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1781821a358 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1781821a3d0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821a838 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1781821a8d8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1781821a940 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1781821a9b8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1781821aa20 prev 0x1781821a838 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1781821a5d8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1781821a650 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1781821ab18 <col:40> Inherited printf 1 0
|-FunctionDecl 0x17818212d08 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x17818212da8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x17818212e10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x17818212e88 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x17818212ef0 prev 0x17818212d08 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1781821ab68 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x17818212bd0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x17818212fe8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x178182131b0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x17818213038 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x178182130b0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818213408 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x17818213290 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x17818213308 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818213968 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x17818213a08 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x17818213a70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x17818213ad8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x17818213b40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1781821bc60 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1781821bcc8 prev 0x17818213968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x178182135a8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x17818213620 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178182136a0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x17818213718 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1781821beb8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1781821bd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781821c328 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1781821bf08 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1781821bf80 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781821bff8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781821c078 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1781821c0f0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821c768 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1781821c420 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1781821c498 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781821c510 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781821c590 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1781821c608 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821cb38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1781821c920 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1781821c998 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781821ca18 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1781821cbf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781821b0c0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1781821ae10 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1781821ae88 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781821af08 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1781821af80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1781821b180 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781821b578 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1781821b2c8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1781821b340 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781821b3c0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1781821b438 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821b938 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1781821b668 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1781821b6e8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1781821b760 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821cd10 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1781821cdb0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1781821ce18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1781821ce90 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1781821cef8 prev 0x1781821cd10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1781821bae0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1781821bb60 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1781821d0d8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1781821cfa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781821d500 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1781821d5a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1781821d608 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1781821d670 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1781821d6f0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1781821d758 prev 0x1781821d500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1781821d1e8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1781821d268 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1781821d2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1781821d940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1781821d810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818215c00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x17818215ca0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x17818215d08 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x17818215d70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x17818215df0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x17818215e58 prev 0x17818215c00 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1781821d990 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1781821da10 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1781821da88 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x17818215f58 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x17818216120 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x17818215fa8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x17818216020 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818216418 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x17818216200 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x17818216278 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x178182162f8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x178182167b0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x17818216500 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x17818216578 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178182165f8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x17818216670 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818216a18 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x17818216898 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x17818216918 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1781821dc80 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x17818216af8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1781821df70 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1781821dd58 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1781821ddd0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1781821de50 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1781821e268 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1781821e050 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1781821e0d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1781821e148 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821e4c8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1781821e350 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1781821e3c8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821e858 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1781821e5a8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1781821e620 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781821e6a0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1781821e718 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821ea28 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1781821e948 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1781821ec90 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1781821eb00 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1781821eb78 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821ee50 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1781821ed70 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1781821efe0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1781821f228 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1781821f0b0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1781821f128 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1781821f480 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1781821f308 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1781821f380 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1781821f6d8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1781821f560 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1781821f5d8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1781821fa88 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1781821f7b8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1781821f830 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1781821f8a8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818222df0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1781821fb70 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1781821fbe8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818222cd0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x178182230e8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818222ed8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x17818222f50 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818222fc8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x178182233e0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x178182231c8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x17818223248 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x178182232c0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x178182236d8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x178182234c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x17818223540 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x178182235b8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x178182239d0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x178182237b8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x17818223838 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x178182238b0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818226e70 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818223ab0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x17818223b30 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x17818223ba8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818223c20 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818227208 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818226f58 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x17818226fd8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x17818227050 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x178182270c8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x178182275a0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x178182272f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x17818227370 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x178182273e8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818227460 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818227a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x17818227750 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x178182277d0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x17818227848 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x17818227af0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818225000 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x17818227c38 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x17818224cf0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818224d70 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x17818224de8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x178182253a0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x178182250f0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x17818225168 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178182251e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x17818225260 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x178182258f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818225590 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x17818225610 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x17818225688 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x17818225700 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x178182259b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818223f18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818225af8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x17818225b70 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818225bf0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x17818225c68 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818223ce0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818224358 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818224010 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x17818224088 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818224108 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x17818224180 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x178182241f8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x178182245c8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x17818224450 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x178182244c8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818224820 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x178182246a8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x17818224720 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818224b10 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818224900 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x17818224978 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x178182249f0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781821fdd0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818224bf8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x17818224c70 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1781821fcb0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818220228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1781821ff78 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1781821fff0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818220070 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x178182200e8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x178182202e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178182206e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x17818220430 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x178182204a8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818220528 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x178182205a0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818227d20 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x178182207d0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x17818220848 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178182208c0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818220940 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x178182209b8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818228260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818227f18 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x17818227f90 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818228010 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x17818228088 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x17818228100 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x17818228328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178182287a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818228478 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x178182284f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818228570 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x178182285e8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818228660 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818220d10 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x178182288a0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x17818228918 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818228990 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818228a10 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x17818228a88 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818228b00 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x178182210d0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x17818220e08 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x17818220e80 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x17818220f00 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x17818221340 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x178182211d0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x17818221558 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x17818221838 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x17818221620 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x17818221698 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x17818221a80 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x17818221910 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x17818228d30 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x17818221b50 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x17818228eb8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x178182290f0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x17818228f80 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x17818228ff8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x178182292a0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x178182291c8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x17818229548 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x17818229370 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x178182293e8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x178182298f0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x17818229620 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x178182296a0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x17818229718 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x17818229bf0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x178182299d0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x17818229a48 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1781822ef48 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x17818229cc8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1781822eda0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1781822f250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1781822f0e0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1781822f2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781822f5b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1781822f438 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1781822f8c0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781822f688 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1781822f700 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1781822fb10 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781822f998 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1781822fa10 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x17818229d40 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1781822fbe8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x17818229ef0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x17818229e10 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1781822a0a0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x17818229fc0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1781822a438 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822a170 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1781822a1e8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822a260 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822a728 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822a518 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1781822a590 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822a608 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822aa18 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822a808 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1781822a880 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822a8f8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822cd70 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822aaf8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1781822ab70 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822abe8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822d070 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822ce50 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822cec8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822d2c0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822d148 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822d1c0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822d510 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822d398 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822d410 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822d760 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822d5e8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822d660 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822db18 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781822d838 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1781822d8b0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1781822d928 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1781822af60 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822dbf8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1781822dc70 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781822dce8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822ad50 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822b318 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822b048 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1781822b0c0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822b138 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822b608 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822b3f8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1781822b470 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822b4e8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822b8f8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781822b6e8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1781822b760 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1781822b7d8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1781822bc80 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822b9d8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1781822ba50 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781822bac8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822bb40 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822c110 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781822bd88 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1781822be00 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781822be78 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1781822bef0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1781822c618 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822c1f8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1781822c270 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781822c2e8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781822c360 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822c3d8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822c9d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781822c7c8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1781822c840 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781822c8b8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1781822ca90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781822dfb0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822cc90 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1781822dd80 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781822ddf8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1781822de70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1781822e070 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781822e328 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781822e1b0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1781822e228 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1781822e4e0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1781822e400 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1781822e7c0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822e5b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1781822e628 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822e6a0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781822ea18 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781822e8a0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781822e918 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818237c40 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781822eaf0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1781822eb68 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1781822ebe0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x17818237fc8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x17818237d20 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x17818237d98 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818237e10 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818237e88 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818238190 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x178182380b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x178182383d8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x17818238260 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x178182382d8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x178182386e0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x178182384b0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818238528 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818238930 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x178182387b8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818238830 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818238b80 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x17818238a08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818238a80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818236f28 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818236c58 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818236cd0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818236d48 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818237218 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818237008 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818237080 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x178182370f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818237508 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x178182372f8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818237370 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x178182373e8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x178182378c8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x178182375e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x17818237660 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x178182376d8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818234c10 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x178182379a8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x17818237a20 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818237a98 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818234f00 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x17818234cf0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x17818234d68 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818234de0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818235350 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818234fe0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x17818235058 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x178182350d0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818235148 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x178182356e0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818235438 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x178182354b0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818235528 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x178182355a0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818235a70 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x178182357c8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x17818235840 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x178182358b8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818235930 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818231ef0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x17818235b58 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x17818231be0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818231c58 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818231cd0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818232280 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x17818231fd8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x17818232050 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178182320c8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818232140 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818232610 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x17818232368 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x178182323e0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818232458 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x178182324d0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818232b18 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x178182326f8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x17818232770 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178182327e8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818232860 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x178182328d8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818239fc8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818239c88 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x17818239d00 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818239d78 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818239df0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818239e68 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781823a3f8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1781823a0b8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1781823a130 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781823a1a8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1781823a220 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1781823a298 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781823a660 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1781823a4e8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781823a560 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1781823a8b0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1781823a738 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781823a7b0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1781823ab98 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1781823a988 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1781823aa00 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1781823aa78 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818233f98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x17818233cf0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x17818233d68 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818233de0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818233e58 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x17818234058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178182345c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x178182341a0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x17818234218 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818234290 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818234308 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818234380 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818234b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x178182347c0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x17818234838 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178182348b0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818234928 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x178182349a0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x17818235c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818236230 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818235d68 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x17818235de0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818235e58 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818235ed0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818235f48 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x17818235fc0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x17818236730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x178182364f8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x17818236570 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x178182367e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x178182368f8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x17818232e58 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x17818236bb0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x17818232c00 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818232c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x17818232f10 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x17818233028 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x178182335c8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x178182332e8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x17818233360 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x178182333d8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x17818233680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x178182337a0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1781823cea0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x17818233a60 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x17818233ad8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818233b50 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1781823cc90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1781823cf60 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1781823d080 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1781823d388 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1781823d1a8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1781823d220 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781823d298 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x17818241f80 <line:37:1, line:44:1>
|   |-DeclStmt 0x1781823d4d0 <line:38:5, col:21>
|   | `-VarDecl 0x1781823d468 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1781823d568 <line:39:5, col:13>
|   | `-VarDecl 0x1781823d500 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1781823d8c0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1781823d8a8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1781823d7c0 <col:34> '<builtin fn type>' Function 0x1781823d658 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1781823d7f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1781823d468 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1781823d830 <col:29> 'const wchar_t *' lvalue ParmVar 0x1781823d298 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1781823db80 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1781823d8f0 <col:5> 'int' lvalue Var 0x1781823d500 '_Ret' 'int'
|   | `-CallExpr 0x1781823dac0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1781823daa8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1781823d928 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x17818232b18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1781823db08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1781823d948 <col:27> 'wchar_t *' lvalue ParmVar 0x1781823d1a8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1781823db20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1781823d968 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1781823d220 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1781823db38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1781823d988 <col:44> 'const wchar_t *' lvalue ParmVar 0x1781823d298 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1781823db50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1781823da10 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1781823d9e8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1781823d9a8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1781823db68 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1781823da30 <col:59> 'va_list':'char *' lvalue Var 0x1781823d468 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x17818241f10 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x17818241ef8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x17818241e48 <col:34> '<builtin fn type>' Function 0x17818241ce0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x17818241e80 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1781823d468 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x17818241f70 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x17818241f58 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x17818241f38 <col:12> 'int' lvalue Var 0x1781823d500 '_Ret' 'int'
|-FunctionDecl 0x1781823d658 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1781823d6f8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1781823d768 <col:34> Implicit
|-FunctionDecl 0x17818241ce0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x17818241d80 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x17818241df0 <col:34> Implicit
|-FunctionDecl 0x17818242278 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x17818241fd0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x17818242048 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178182420c0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x17818242138 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x17818242560 <line:50:1, line:52:1>
|   `-ReturnStmt 0x17818242550 <line:51:5, col:62>
|     `-CallExpr 0x17818242490 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x17818242478 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x17818242350 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x17818232b18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x178182424d8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x17818242370 <col:27> 'wchar_t *' lvalue ParmVar 0x17818241fd0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x178182424f0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x17818242390 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x17818242048 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x17818242508 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x178182423b0 <col:44> 'const wchar_t *' lvalue ParmVar 0x178182420c0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x17818242520 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x17818242438 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x17818242410 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x178182423d0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x17818242538 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x17818242458 <col:59> 'va_list':'char *' lvalue ParmVar 0x17818242138 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x17818242800 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x17818242588 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x17818242600 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818242678 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x178182426f0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1781823ad18 <line:61:1, line:68:1>
|   |-DeclStmt 0x17818242950 <line:62:5, col:21>
|   | `-VarDecl 0x178182428e8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x178182429e8 <line:63:5, col:13>
|   | `-VarDecl 0x17818242980 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x17818242a90 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x17818242a78 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x17818242a00 <col:34> '<builtin fn type>' Function 0x1781823d658 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x17818242a20 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x178182428e8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x17818242a58 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x178182426f0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x17818242c90 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x17818242ac0 <col:5> 'int' lvalue Var 0x17818242980 '_Ret' 'int'
|   | `-CallExpr 0x17818242bd0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x17818242bb8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x17818242af8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x17818232b18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x17818242c18 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x17818242b18 <col:27> 'wchar_t *' lvalue ParmVar 0x17818242588 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x17818242c30 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x17818242b38 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x17818242600 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x17818242c48 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x17818242b58 <col:44> 'const wchar_t *' lvalue ParmVar 0x17818242678 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x17818242c60 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x17818242b78 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x178182426f0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x17818242c78 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x17818242b98 <col:64> 'va_list':'char *' lvalue Var 0x178182428e8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1781823aca8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1781823ac90 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x17818242cb0 <col:34> '<builtin fn type>' Function 0x17818241ce0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1781823ac70 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x178182428e8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1781823ad08 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1781823acf0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1781823acd0 <col:12> 'int' lvalue Var 0x17818242980 '_Ret' 'int'
|-FunctionDecl 0x1781823b0a8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1781823ad68 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1781823ade0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781823ae58 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1781823aed0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1781823af48 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1781823b330 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1781823b320 <line:75:5, col:67>
|     `-CallExpr 0x1781823b260 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1781823b248 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1781823b188 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x17818232b18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1781823b2a8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1781823b1a8 <col:27> 'wchar_t *' lvalue ParmVar 0x1781823ad68 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1781823b2c0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1781823b1c8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1781823ade0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1781823b2d8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1781823b1e8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1781823ae58 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1781823b2f0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1781823b208 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1781823aed0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1781823b308 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1781823b228 <col:64> 'va_list':'char *' lvalue ParmVar 0x1781823af48 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1781823b578 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1781823b358 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1781823b3d0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1781823b7c8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1781823b650 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781823b6c8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781823bab0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1781823b8a0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1781823b918 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1781823b990 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1781823ee28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781823ecb0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1781823ed28 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1781823eed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781823f2e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1781823f0d8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1781823f150 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1781823f1c8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1781823f3a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781823f658 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781823f4e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1781823f558 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1781823f940 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1781823f730 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1781823f7a8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781823f820 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818240d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1781823fae0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1781823fb58 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x17818240df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x178182412c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x17818240ff0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x17818241068 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x178182410e0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x17818241380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818241638 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x178182414c0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x17818241538 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x17818241920 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x17818241710 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x17818241788 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818241800 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x17818242dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x17818241ac0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x17818241b38 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818241bb0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x17818242e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818243410 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x17818243090 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x17818243108 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818243180 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x178182431f8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x178182434d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818243820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x17818243610 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x17818243688 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x17818243700 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x17818243ba8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x17818243900 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x17818243978 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178182439f0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x17818243a68 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1781823de50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1781823dd70 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1781823def8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781823e270 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1781823e0f8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1781823e170 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1781823e320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1781823e540 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1781823e460 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1781823e788 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1781823e610 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1781823e688 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1781823ea88 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1781823e868 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1781823e8e0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x17818243ea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1781823ec20 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x17818243d00 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x17818243f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818244360 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x178182440a0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x17818244118 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x17818244190 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x178182447c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x17818244500 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x17818244578 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x178182445f0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x17818244878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818245d68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x178182449c0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x17818244a38 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x17818244ab0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x17818244b28 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x17818245fc0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x17818245e50 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x17818246200 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x17818246090 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x17818246108 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x178182463b8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x178182462d8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x178182466a8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x17818246488 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x17818246500 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x17818246918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x17818246840 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x178182469c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x17818246bd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x17818246b00 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x17818246e28 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x17818246ca8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x17818246d30 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x17818247070 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x17818246f00 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x17818246f78 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x17818247220 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x17818247148 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x178182473c8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x178182472f0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x17818247578 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x17818247498 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x17818247728 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x17818247648 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x17818247aa0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x17818247800 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x17818247878 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x178182478f0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x17818247968 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1781824bf50 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x17818247b90 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x17818247c08 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x17818247c80 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781824bd80 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1781824bdf8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1781824c260 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1781824c040 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1781824c0c0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1781824c140 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1781824c420 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1781824c340 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1781824c710 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1781824c4f0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1781824c570 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1781824c5f0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1781824c8d0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1781824c7f0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1781824cc48 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1781824c9a8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1781824ca20 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1781824ca98 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1781824cb10 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1781824ef28 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1781824edb0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1781824ee28 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1781824f260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1781824f0e0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1781824f160 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1781824f310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1781824f5c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1781824f668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1781824f9a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1781824f830 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1781824f8b0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1781824fa58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x17818247d40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x17818247de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x17818248080 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x17818247fa0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x17818248128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x178182483a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x17818248448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x178182486f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x17818248610 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x17818248798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x17818248a78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x17818248998 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x17818248b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x17818248ec8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x17818248d50 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x17818248dc8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x17818248f78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x17818249238 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x178182492d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-RecordDecl 0x178182493e8 <.//openssl//file_jk/after\crypto\rsa/rsa_locl.h:12:1, line:46:1> line:12:8 invalid struct rsa_st definition
| |-FieldDecl 0x178182494b8 <line:17:5, col:9> col:9 pad 'int'
| |-FieldDecl 0x17818249528 <line:18:5, col:10> col:10 version 'long'
| |-FieldDecl 0x17818249598 <line:19:5, col:23> col:23 invalid meth 'const int *'
| |-FieldDecl 0x17818249608 <line:21:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x17818249678 <line:22:5, col:13> col:13 invalid n 'int *'
| |-FieldDecl 0x178182496e8 <line:23:5, col:13> col:13 invalid e 'int *'
| |-FieldDecl 0x17818249758 <line:24:5, col:13> col:13 invalid d 'int *'
| |-FieldDecl 0x178182497c8 <line:25:5, col:13> col:13 invalid p 'int *'
| |-FieldDecl 0x17818249838 <line:26:5, col:13> col:13 invalid q 'int *'
| |-FieldDecl 0x178182498a8 <line:27:5, col:13> col:13 invalid dmp1 'int *'
| |-FieldDecl 0x17818249918 <line:28:5, col:13> col:13 invalid dmq1 'int *'
| |-FieldDecl 0x17818249988 <line:29:5, col:13> col:13 invalid iqmp 'int *'
| |-FieldDecl 0x178182499f8 <line:31:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x17818249a68 <line:32:5, col:9> col:9 references 'int'
| |-FieldDecl 0x17818249ad8 <line:33:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x17818249b48 <line:35:5, col:18> col:18 invalid _method_mod_n 'int *'
| |-FieldDecl 0x17818249bb8 <line:36:5, col:18> col:18 invalid _method_mod_p 'int *'
| |-FieldDecl 0x17818249c28 <line:37:5, col:18> col:18 invalid _method_mod_q 'int *'
| |-FieldDecl 0x17818249c98 <line:42:5, col:11> col:11 bignum_data 'char *'
| |-FieldDecl 0x1781824cd90 <line:43:5, col:18> col:18 invalid blinding 'int *'
| |-FieldDecl 0x1781824ce00 <line:44:5, col:18> col:18 invalid mt_blinding 'int *'
| `-FieldDecl 0x1781824ce70 <line:45:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x1781824cec8 <line:48:1, line:91:1> line:48:8 struct rsa_meth_st definition
| |-FieldDecl 0x1781824cf98 <line:49:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x1781824d3d8 <line:50:5, line:51:65> line:50:11 rsa_pub_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x1781824d710 <line:52:5, line:53:65> line:52:11 rsa_pub_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x1781824da48 <line:54:5, line:55:66> line:54:11 rsa_priv_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x1781824ad70 <line:56:5, line:57:66> line:56:11 rsa_priv_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x1781824b100 <line:59:5, col:75> col:11 rsa_mod_exp 'int (*)(int *, const int *, int *, int *)'
| |-FieldDecl 0x1781824b5b0 <line:61:5, line:62:72> line:61:11 bn_mod_exp 'int (*)(int *, const int *, const int *, const int *, int *, int *)'
| |-FieldDecl 0x1781824b788 <line:64:5, col:26> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x1781824b8a0 <line:66:5, col:28> col:11 finish 'int (*)(int *)'
| |-FieldDecl 0x1781824b910 <line:68:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1781824b980 <line:70:5, col:11> col:11 app_data 'char *'
| |-FieldDecl 0x17818249e50 <line:77:5, line:80:36> line:77:11 rsa_sign 'int (*)(int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, const int *)'
| |-FieldDecl 0x1781824a300 <line:81:5, line:83:59> line:81:11 rsa_verify 'int (*)(int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, const int *)'
| `-FieldDecl 0x1781824a690 <line:90:5, col:67> col:11 rsa_keygen 'int (*)(int *, int, int *, int *)'
|-FunctionDecl 0x1781824ac80 <line:93:1, line:96:50> line:93:12 invalid int_rsa_verify 'int (int, const unsigned char *, unsigned int, unsigned char *, size_t *, const unsigned char *, size_t, int *)' extern
| |-ParmVarDecl 0x1781824a700 <col:27, col:31> col:31 dtype 'int'
| |-ParmVarDecl 0x1781824a780 <col:38, col:59> col:59 m 'const unsigned char *'
| |-ParmVarDecl 0x1781824a800 <line:94:27, col:40> col:40 m_len 'unsigned int'
| |-ParmVarDecl 0x1781824a880 <col:47, col:62> col:62 rm 'unsigned char *'
| |-ParmVarDecl 0x1781824a958 <line:95:27, col:35> col:35 prm_len 'size_t *'
| |-ParmVarDecl 0x1781824a9d8 <col:44, col:65> col:65 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x1781824aa50 <line:96:27, col:34> col:34 siglen 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1781824aad0 <col:42, col:47> col:47 invalid rsa 'int *'
|-FunctionDecl 0x17818261320 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:33:1, line:39:1> line:33:5 RSA_padding_add_PKCS1_OAEP 'int (unsigned char *, int, const unsigned char *, int, const unsigned char *, int)'
| |-ParmVarDecl 0x17818260ef8 <col:32, col:47> col:47 used to 'unsigned char *'
| |-ParmVarDecl 0x17818260f78 <col:51, col:55> col:55 used tlen 'int'
| |-ParmVarDecl 0x17818260ff8 <line:34:32, col:53> col:53 used from 'const unsigned char *'
| |-ParmVarDecl 0x17818261078 <col:59, col:63> col:63 used flen 'int'
| |-ParmVarDecl 0x178182610f8 <line:35:32, col:53> col:53 used param 'const unsigned char *'
| |-ParmVarDecl 0x17818261178 <col:60, col:64> col:64 used plen 'int'
| `-CompoundStmt 0x17818261860 <line:36:1, line:39:1>
|   `-ReturnStmt 0x17818261850 <line:37:5, line:38:67>
|     `-CallExpr 0x17818261760 <line:37:12, line:38:67> 'int'
|       |-ImplicitCastExpr 0x17818261748 <line:37:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x17818261528 <col:12> 'int ()' Function 0x17818261460 'RSA_padding_add_PKCS1_OAEP_mgf1' 'int ()'
|       |-ImplicitCastExpr 0x178182617c0 <col:44> 'unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x17818261548 <col:44> 'unsigned char *' lvalue ParmVar 0x17818260ef8 'to' 'unsigned char *'
|       |-ImplicitCastExpr 0x178182617d8 <col:48> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x17818261568 <col:48> 'int' lvalue ParmVar 0x17818260f78 'tlen' 'int'
|       |-ImplicitCastExpr 0x178182617f0 <col:54> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x17818261588 <col:54> 'const unsigned char *' lvalue ParmVar 0x17818260ff8 'from' 'const unsigned char *'
|       |-ImplicitCastExpr 0x17818261808 <col:60> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x178182615a8 <col:60> 'int' lvalue ParmVar 0x17818261078 'flen' 'int'
|       |-ImplicitCastExpr 0x17818261820 <line:38:44> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x178182615c8 <col:44> 'const unsigned char *' lvalue ParmVar 0x178182610f8 'param' 'const unsigned char *'
|       |-ImplicitCastExpr 0x17818261838 <col:51> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x178182615e8 <col:51> 'int' lvalue ParmVar 0x17818261178 'plen' 'int'
|       |-ParenExpr 0x17818261670 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|       | `-CStyleCastExpr 0x17818261648 <col:18, col:26> 'void *' <NullToPointer>
|       |   `-IntegerLiteral 0x17818261608 <col:26> 'int' 0
|       `-ParenExpr 0x178182616f8 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x178182616d0 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x17818261690 <col:26> 'int' 0
|-FunctionDecl 0x17818261d50 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:41:1, line:112:1> line:41:5 invalid RSA_padding_add_PKCS1_OAEP_mgf1 'int (unsigned char *, int, const unsigned char *, int, const unsigned char *, int, const int *, const int *)'
| |-ParmVarDecl 0x17818261890 <col:37, col:52> col:52 used to 'unsigned char *'
| |-ParmVarDecl 0x17818261910 <col:56, col:60> col:60 used tlen 'int'
| |-ParmVarDecl 0x17818261990 <line:42:37, col:58> col:58 used from 'const unsigned char *'
| |-ParmVarDecl 0x17818261a10 <col:64, col:68> col:68 used flen 'int'
| |-ParmVarDecl 0x17818261a90 <line:43:37, col:58> col:58 used param 'const unsigned char *'
| |-ParmVarDecl 0x17818261b10 <col:65, col:69> col:69 used plen 'int'
| |-ParmVarDecl 0x17818261b90 <line:44:37, col:51> col:51 invalid md 'const int *'
| |-ParmVarDecl 0x17818261c10 <col:55, col:69> col:69 invalid mgf1md 'const int *'
| `-CompoundStmt 0x1781825b298 <line:45:1, line:112:1>
|   |-DeclStmt 0x1781825eee8 <line:46:5, col:15>
|   | `-VarDecl 0x17818261e60 <col:5, col:14> col:9 used rv 'int' cinit
|   |   `-IntegerLiteral 0x1781825eec0 <col:14> 'int' 0
|   |-DeclStmt 0x1781825f0b0 <line:47:5, col:28>
|   | |-VarDecl 0x1781825ef18 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1781825ef98 <col:5, col:27> col:12 used emlen 'int' cinit
|   |   `-BinaryOperator 0x1781825f078 <col:20, col:27> 'int' '-'
|   |     |-ImplicitCastExpr 0x1781825f060 <col:20> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1781825f000 <col:20> 'int' lvalue ParmVar 0x17818261910 'tlen' 'int'
|   |     `-IntegerLiteral 0x1781825f038 <col:27> 'int' 1
|   |-DeclStmt 0x1781825f1e0 <line:48:5, col:29>
|   | |-VarDecl 0x1781825f0e0 <col:5, col:20> col:20 used db 'unsigned char *'
|   | `-VarDecl 0x1781825f160 <col:5, col:25> col:25 used seed 'unsigned char *'
|   |-DeclStmt 0x1781825f318 <line:49:5, col:33>
|   | `-VarDecl 0x1781825f210 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:49:20 used dbmask 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1781825f300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1781825f2e0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1781825f2b8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1781825f278 <col:26> 'int' 0
|   |-DeclStmt 0x1781825f3b0 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:50:5, col:44>
|   | `-VarDecl 0x1781825f348 <col:5, col:19> col:19 invalid seedmask 'unsigned char'
|   |-DeclStmt 0x1781825f508 <line:51:5, col:30>
|   | |-VarDecl 0x1781825f3e0 <col:5, col:9> col:9 used mdlen 'int'
|   | `-VarDecl 0x1781825f460 <col:5, col:29> col:16 used dbmask_len 'int' cinit
|   |   `-IntegerLiteral 0x1781825f4c8 <col:29> 'int' 0
|   |-IfStmt 0x1781825fbc8 <line:60:5, line:64:5>
|   | |-BinaryOperator 0x1781825fa48 <line:60:9, col:36> 'int' '>'
|   | | |-ImplicitCastExpr 0x1781825fa30 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1781825f8c0 <col:9> 'int' lvalue ParmVar 0x17818261a10 'flen' 'int'
|   | | `-BinaryOperator 0x1781825fa10 <col:16, col:36> 'int' '-'
|   | |   |-BinaryOperator 0x1781825f9c8 <col:16, col:28> 'int' '-'
|   | |   | |-ImplicitCastExpr 0x1781825f9b0 <col:16> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1781825f8f8 <col:16> 'int' lvalue Var 0x1781825ef98 'emlen' 'int'
|   | |   | `-BinaryOperator 0x1781825f990 <col:24, col:28> 'int' '*'
|   | |   |   |-IntegerLiteral 0x1781825f930 <col:24> 'int' 2
|   | |   |   `-ImplicitCastExpr 0x1781825f978 <col:28> 'int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x1781825f958 <col:28> 'int' lvalue Var 0x1781825f3e0 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x1781825f9e8 <col:36> 'int' 1
|   | `-CompoundStmt 0x1781825fbb0 <col:39, line:64:5>
|   |   `-ReturnStmt 0x1781825fba0 <line:63:9, col:16>
|   |     `-IntegerLiteral 0x1781825fb78 <col:16> 'int' 0
|   |-IfStmt 0x1781825fd70 <line:66:5, line:70:5>
|   | |-BinaryOperator 0x1781825fce0 <line:66:9, col:29> 'int' '<'
|   | | |-ImplicitCastExpr 0x1781825fcc8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1781825fbe0 <col:9> 'int' lvalue Var 0x1781825ef98 'emlen' 'int'
|   | | `-BinaryOperator 0x1781825fca8 <col:17, col:29> 'int' '+'
|   | |   |-BinaryOperator 0x1781825fc60 <col:17, col:21> 'int' '*'
|   | |   | |-IntegerLiteral 0x1781825fc00 <col:17> 'int' 2
|   | |   | `-ImplicitCastExpr 0x1781825fc48 <col:21> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1781825fc28 <col:21> 'int' lvalue Var 0x1781825f3e0 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x1781825fc80 <col:29> 'int' 1
|   | `-CompoundStmt 0x1781825fd58 <col:32, line:70:5>
|   |   `-ReturnStmt 0x1781825fd48 <line:69:9, col:16>
|   |     `-IntegerLiteral 0x1781825fd20 <col:16> 'int' 0
|   |-BinaryOperator 0x1781825fe60 <line:72:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1781825fe00 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1781825fde8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1781825fd88 <col:5> 'unsigned char *' lvalue ParmVar 0x17818261890 'to' 'unsigned char *'
|   | | `-IntegerLiteral 0x1781825fdc0 <col:8> 'int' 0
|   | `-ImplicitCastExpr 0x1781825fe48 <col:13> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1781825fe20 <col:13> 'int' 0
|   |-BinaryOperator 0x1781825ff50 <line:73:5, col:17> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1781825fe80 <col:5> 'unsigned char *' lvalue Var 0x1781825f160 'seed' 'unsigned char *'
|   | `-BinaryOperator 0x1781825ff30 <col:12, col:17> 'unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x1781825ff18 <col:12> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1781825fed0 <col:12> 'unsigned char *' lvalue ParmVar 0x17818261890 'to' 'unsigned char *'
|   |   `-IntegerLiteral 0x1781825fef0 <col:17> 'int' 1
|   |-BinaryOperator 0x17818260080 <line:74:5, col:23> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1781825ff70 <col:5> 'unsigned char *' lvalue Var 0x1781825f0e0 'db' 'unsigned char *'
|   | `-BinaryOperator 0x17818260060 <col:10, col:23> 'unsigned char *' '+'
|   |   |-BinaryOperator 0x17818260018 <col:10, col:15> 'unsigned char *' '+'
|   |   | |-ImplicitCastExpr 0x1781825ffe8 <col:10> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1781825ffa8 <col:10> 'unsigned char *' lvalue ParmVar 0x17818261890 'to' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x17818260000 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1781825ffc8 <col:15> 'int' lvalue Var 0x1781825f3e0 'mdlen' 'int'
|   |   `-IntegerLiteral 0x17818260038 <col:23> 'int' 1
|   |-IfStmt 0x17818260428 <line:76:5, line:77:14>
|   | |-OpaqueValueExpr 0x17818260410 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x178182603f8 <col:9, col:14> 'err' 0x178182603a8
|   |-CallExpr 0x17818260920 <line:78:5, col:55> 'void *'
|   | |-ImplicitCastExpr 0x17818260908 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x17818260670 <col:5> 'void *(void *, int, unsigned long long)' Function 0x17818260480 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x17818260958 <col:12, col:17> 'void *' <BitCast>
|   | | `-BinaryOperator 0x17818260718 <col:12, col:17> 'unsigned char *' '+'
|   | |   |-ImplicitCastExpr 0x178182606e8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x178182606a8 <col:12> 'unsigned char *' lvalue Var 0x1781825f0e0 'db' 'unsigned char *'
|   | |   `-ImplicitCastExpr 0x17818260700 <col:17> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x178182606c8 <col:17> 'int' lvalue Var 0x1781825f3e0 'mdlen' 'int'
|   | |-IntegerLiteral 0x17818260738 <col:24> 'int' 0
|   | `-ImplicitCastExpr 0x17818260970 <col:27, col:54> 'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x178182608b8 <col:27, col:54> 'int' '-'
|   |     |-BinaryOperator 0x17818260870 <col:27, col:46> 'int' '-'
|   |     | |-BinaryOperator 0x178182607d0 <col:27, col:35> 'int' '-'
|   |     | | |-ImplicitCastExpr 0x178182607a0 <col:27> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x17818260760 <col:27> 'int' lvalue Var 0x1781825ef98 'emlen' 'int'
|   |     | | `-ImplicitCastExpr 0x178182607b8 <col:35> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x17818260780 <col:35> 'int' lvalue ParmVar 0x17818261a10 'flen' 'int'
|   |     | `-BinaryOperator 0x17818260850 <col:42, col:46> 'int' '*'
|   |     |   |-IntegerLiteral 0x178182607f0 <col:42> 'int' 2
|   |     |   `-ImplicitCastExpr 0x17818260838 <col:46> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x17818260818 <col:46> 'int' lvalue Var 0x1781825f3e0 'mdlen' 'int'
|   |     `-IntegerLiteral 0x17818260890 <col:54> 'int' 1
|   |-BinaryOperator 0x17818260b50 <line:79:5, col:36> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x17818260af0 <col:5, col:32> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x17818260ad8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x17818260988 <col:5> 'unsigned char *' lvalue Var 0x1781825f0e0 'db' 'unsigned char *'
|   | | `-BinaryOperator 0x17818260ab8 <col:8, col:31> 'int' '-'
|   | |   |-BinaryOperator 0x17818260a70 <col:8, col:23> 'int' '-'
|   | |   | |-BinaryOperator 0x17818260a18 <col:8, col:16> 'int' '-'
|   | |   | | |-ImplicitCastExpr 0x178182609e8 <col:8> 'int' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x178182609a8 <col:8> 'int' lvalue Var 0x1781825ef98 'emlen' 'int'
|   | |   | | `-ImplicitCastExpr 0x17818260a00 <col:16> 'int' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x178182609c8 <col:16> 'int' lvalue ParmVar 0x17818261a10 'flen' 'int'
|   | |   | `-ImplicitCastExpr 0x17818260a58 <col:23> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x17818260a38 <col:23> 'int' lvalue Var 0x1781825f3e0 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x17818260a90 <col:31> 'int' 1
|   | `-ImplicitCastExpr 0x17818260b38 <col:36> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x17818260b10 <col:36> 'int' 1
|   |-CallExpr 0x1781825e010 <line:80:5, col:63> 'void *'
|   | |-ImplicitCastExpr 0x1781825dff8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x17818260da0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x17818260bb0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x1781825e048 <col:12, col:32> 'void *' <BitCast>
|   | | `-BinaryOperator 0x1781825dee8 <col:12, col:32> 'unsigned char *' '-'
|   | |   |-BinaryOperator 0x17818260ea0 <col:12, col:25> 'unsigned char *' '-'
|   | |   | |-BinaryOperator 0x17818260e48 <col:12, col:17> 'unsigned char *' '+'
|   | |   | | |-ImplicitCastExpr 0x17818260e18 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x17818260dd8 <col:12> 'unsigned char *' lvalue Var 0x1781825f0e0 'db' 'unsigned char *'
|   | |   | | `-ImplicitCastExpr 0x17818260e30 <col:17> 'int' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x17818260df8 <col:17> 'int' lvalue Var 0x1781825ef98 'emlen' 'int'
|   | |   | `-ImplicitCastExpr 0x17818260e88 <col:25> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x17818260e68 <col:25> 'int' lvalue ParmVar 0x17818261a10 'flen' 'int'
|   | |   `-ImplicitCastExpr 0x1781825ded0 <col:32> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1781825deb0 <col:32> 'int' lvalue Var 0x1781825f3e0 'mdlen' 'int'
|   | |-ImplicitCastExpr 0x1781825e078 <col:39> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1781825e060 <col:39> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1781825df08 <col:39> 'const unsigned char *' lvalue ParmVar 0x17818261990 'from' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x1781825e090 <col:45, col:59> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x1781825df90 <col:45, col:59> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1781825df78 <col:59> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1781825df40 <col:59> 'int' lvalue ParmVar 0x17818261a10 'flen' 'int'
|   |-IfStmt 0x1781825e2d0 <line:81:5, line:82:14>
|   | |-BinaryOperator 0x1781825e298 <line:81:9, col:36> 'int' '<='
|   | | |-CallExpr 0x1781825e210 <col:9, col:31> 'int'
|   | | | |-ImplicitCastExpr 0x1781825e1f8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1781825e198 <col:9> 'int ()' Function 0x1781825e0d0 'RAND_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x1781825e240 <col:20> 'unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1781825e1b8 <col:20> 'unsigned char *' lvalue Var 0x1781825f160 'seed' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x1781825e258 <col:26> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1781825e1d8 <col:26> 'int' lvalue Var 0x1781825f3e0 'mdlen' 'int'
|   | | `-IntegerLiteral 0x1781825e270 <col:36> 'int' 0
|   | `-GotoStmt 0x1781825e2b8 <line:82:9, col:14> 'err' 0x178182603a8
|   |-BinaryOperator 0x1781825e3b0 <line:90:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x1781825e2e8 <col:5> 'int' lvalue Var 0x1781825f460 'dbmask_len' 'int'
|   | `-BinaryOperator 0x1781825e390 <col:18, col:26> 'int' '-'
|   |   |-ImplicitCastExpr 0x1781825e360 <col:18> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1781825e320 <col:18> 'int' lvalue Var 0x1781825ef98 'emlen' 'int'
|   |   `-ImplicitCastExpr 0x1781825e378 <col:26> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1781825e340 <col:26> 'int' lvalue Var 0x1781825f3e0 'mdlen' 'int'
|   |-BinaryOperator 0x1781825e5a8 <line:91:5, col:39> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1781825e3d0 <col:5> 'unsigned char *' lvalue Var 0x1781825f210 'dbmask' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1781825e590 <col:14, col:39> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1781825e550 <col:14, col:39> 'int'
|   |     |-ImplicitCastExpr 0x1781825e538 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1781825e4f8 <col:14> 'int ()' Function 0x1781825e430 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1781825e578 <col:29> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1781825e518 <col:29> 'int' lvalue Var 0x1781825f460 'dbmask_len' 'int'
|   |-IfStmt 0x1781825e710 <line:92:5, line:95:5>
|   | |-BinaryOperator 0x1781825e6a0 <line:92:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1781825e670 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:92:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1781825e5c8 <col:9> 'unsigned char *' lvalue Var 0x1781825f210 'dbmask' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1781825e688 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1781825e650 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1781825e628 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1781825e5e8 <col:26> 'int' 0
|   | `-CompoundStmt 0x1781825e6f8 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:92:25, line:95:5>
|   |   `-GotoStmt 0x1781825e6e0 <line:94:9, col:14> 'err' 0x178182603a8
|   |-IfStmt 0x1781825e910 <line:97:5, line:98:14>
|   | |-OpaqueValueExpr 0x1781825e8f8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1781825e8e0 <col:9, col:14> 'err' 0x178182603a8
|   |-ForStmt 0x1781825ebf0 <line:99:5, line:100:26>
|   | |-BinaryOperator 0x1781825e988 <line:99:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1781825e928 <col:10> 'int' lvalue Var 0x1781825ef18 'i' 'int'
|   | | `-IntegerLiteral 0x1781825e960 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1781825ea18 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1781825e9e8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1781825e9a8 <col:17> 'int' lvalue Var 0x1781825ef18 'i' 'int'
|   | | `-ImplicitCastExpr 0x1781825ea00 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1781825e9c8 <col:21> 'int' lvalue Var 0x1781825f460 'dbmask_len' 'int'
|   | |-UnaryOperator 0x1781825ea58 <col:33, col:34> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1781825ea38 <col:33> 'int' lvalue Var 0x1781825ef18 'i' 'int'
|   | `-CompoundAssignOperator 0x1781825ebc0 <line:100:9, col:26> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-ArraySubscriptExpr 0x1781825eae0 <col:9, col:13> 'unsigned char' lvalue
|   |   | |-ImplicitCastExpr 0x1781825eab0 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1781825ea70 <col:9> 'unsigned char *' lvalue Var 0x1781825f0e0 'db' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x1781825eac8 <col:12> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1781825ea90 <col:12> 'int' lvalue Var 0x1781825ef18 'i' 'int'
|   |   `-ImplicitCastExpr 0x1781825eba8 <col:18, col:26> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1781825eb90 <col:18, col:26> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x1781825eb70 <col:18, col:26> 'unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x1781825eb40 <col:18> 'unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1781825eb00 <col:18> 'unsigned char *' lvalue Var 0x1781825f210 'dbmask' 'unsigned char *'
|   |         `-ImplicitCastExpr 0x1781825eb58 <col:25> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1781825eb20 <col:25> 'int' lvalue Var 0x1781825ef18 'i' 'int'
|   |-IfStmt 0x1781825ed00 <line:102:5, line:103:14>
|   | |-OpaqueValueExpr 0x1781825ece8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1781825ecd0 <col:9, col:14> 'err' 0x178182603a8
|   |-BinaryOperator 0x1781825af38 <line:106:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x1781825aed8 <col:5> 'int' lvalue Var 0x17818261e60 'rv' 'int'
|   | `-IntegerLiteral 0x1781825af10 <col:10> 'int' 1
|   |-LabelStmt 0x1781825b070 <line:108:2, col:5> 'err'
|   | `-NullStmt 0x1781825b068 <col:5>
|   |-CallExpr 0x1781825b1f0 <line:110:5, col:42> 'int'
|   | |-ImplicitCastExpr 0x1781825b1d8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1781825b178 <col:5> 'int ()' Function 0x1781825b0b0 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x1781825b220 <col:24> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1781825b198 <col:24> 'unsigned char *' lvalue Var 0x1781825f210 'dbmask' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1781825b238 <col:32> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1781825b1b8 <col:32> 'int' lvalue Var 0x1781825f460 'dbmask_len' 'int'
|   `-ReturnStmt 0x1781825b288 <line:111:5, col:12>
|     `-ImplicitCastExpr 0x1781825b270 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1781825b250 <col:12> 'int' lvalue Var 0x17818261e60 'rv' 'int'
|-FunctionDecl 0x17818260480 <line:78:5> col:5 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x17818260520 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x17818260588 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x178182605f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x17818260bb0 <line:80:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x17818260c50 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x17818260cb8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x17818260d20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1781825b860 <line:114:1, line:120:1> line:114:5 RSA_padding_check_PKCS1_OAEP 'int (unsigned char *, int, const unsigned char *, int, int, const unsigned char *, int)'
| |-ParmVarDecl 0x1781825b390 <col:34, col:49> col:49 used to 'unsigned char *'
| |-ParmVarDecl 0x1781825b410 <col:53, col:57> col:57 used tlen 'int'
| |-ParmVarDecl 0x1781825b490 <line:115:34, col:55> col:55 used from 'const unsigned char *'
| |-ParmVarDecl 0x1781825b510 <col:61, col:65> col:65 used flen 'int'
| |-ParmVarDecl 0x1781825b590 <col:71, col:75> col:75 used num 'int'
| |-ParmVarDecl 0x1781825b610 <line:116:34, col:55> col:55 used param 'const unsigned char *'
| |-ParmVarDecl 0x1781825b690 <col:62, col:66> col:66 used plen 'int'
| `-CompoundStmt 0x1781825bd88 <line:117:1, line:120:1>
|   `-ReturnStmt 0x1781825bd78 <line:118:5, line:119:69>
|     `-CallExpr 0x1781825bc68 <line:118:12, line:119:69> 'int'
|       |-ImplicitCastExpr 0x1781825bc50 <line:118:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1781825ba40 <col:12> 'int ()' Function 0x1781825b978 'RSA_padding_check_PKCS1_OAEP_mgf1' 'int ()'
|       |-ImplicitCastExpr 0x1781825bcd0 <col:46> 'unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1781825ba60 <col:46> 'unsigned char *' lvalue ParmVar 0x1781825b390 'to' 'unsigned char *'
|       |-ImplicitCastExpr 0x1781825bce8 <col:50> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x1781825ba80 <col:50> 'int' lvalue ParmVar 0x1781825b410 'tlen' 'int'
|       |-ImplicitCastExpr 0x1781825bd00 <col:56> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1781825baa0 <col:56> 'const unsigned char *' lvalue ParmVar 0x1781825b490 'from' 'const unsigned char *'
|       |-ImplicitCastExpr 0x1781825bd18 <col:62> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x1781825bac0 <col:62> 'int' lvalue ParmVar 0x1781825b510 'flen' 'int'
|       |-ImplicitCastExpr 0x1781825bd30 <col:68> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x1781825bae0 <col:68> 'int' lvalue ParmVar 0x1781825b590 'num' 'int'
|       |-ImplicitCastExpr 0x1781825bd48 <line:119:46> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1781825bb00 <col:46> 'const unsigned char *' lvalue ParmVar 0x1781825b610 'param' 'const unsigned char *'
|       |-ImplicitCastExpr 0x1781825bd60 <col:53> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x1781825bb20 <col:53> 'int' lvalue ParmVar 0x1781825b690 'plen' 'int'
|       |-ParenExpr 0x1781825bba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|       | `-CStyleCastExpr 0x1781825bb80 <col:18, col:26> 'void *' <NullToPointer>
|       |   `-IntegerLiteral 0x1781825bb40 <col:26> 'int' 0
|       `-ParenExpr 0x1781825bc30 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x1781825bc08 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x1781825bbc8 <col:26> 'int' 0
|-FunctionDecl 0x1781825c360 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:122:1, line:277:1> line:122:5 invalid RSA_padding_check_PKCS1_OAEP_mgf1 'int (unsigned char *, int, const unsigned char *, int, int, const unsigned char *, int, const int *, const int *)'
| |-ParmVarDecl 0x1781825bdb8 <col:39, col:54> col:54 used to 'unsigned char *'
| |-ParmVarDecl 0x1781825be90 <col:58, col:62> col:62 used tlen 'int'
| |-ParmVarDecl 0x1781825bf10 <line:123:39, col:60> col:60 used from 'const unsigned char *'
| |-ParmVarDecl 0x1781825bf90 <col:66, col:70> col:70 used flen 'int'
| |-ParmVarDecl 0x1781825c010 <line:124:39, col:43> col:43 used num 'int'
| |-ParmVarDecl 0x1781825c090 <col:48, col:69> col:69 used param 'const unsigned char *'
| |-ParmVarDecl 0x1781825c110 <line:125:39, col:43> col:43 used plen 'int'
| |-ParmVarDecl 0x1781825c190 <col:49, col:63> col:63 invalid md 'const int *'
| |-ParmVarDecl 0x1781825c210 <line:126:39, col:53> col:53 invalid mgf1md 'const int *'
| `-CompoundStmt 0x17818266cc0 <line:127:1, line:277:1>
|   |-DeclStmt 0x1781825c7a0 <line:128:5, col:58>
|   | |-VarDecl 0x1781825c478 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1781825c4f8 <col:5, col:20> col:12 used dblen 'int' cinit
|   | | `-IntegerLiteral 0x1781825c560 <col:20> 'int' 0
|   | |-VarDecl 0x1781825c5a0 <col:5, col:31> col:23 used mlen 'int' cinit
|   | | `-UnaryOperator 0x1781825c630 <col:30, col:31> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1781825c608 <col:31> 'int' 1
|   | |-VarDecl 0x1781825c660 <col:5, col:46> col:34 used one_index 'int' cinit
|   | | `-IntegerLiteral 0x1781825c6c8 <col:46> 'int' 0
|   | `-VarDecl 0x1781825c708 <col:5, col:49> col:49 used msg_index 'int'
|   |-DeclStmt 0x1781825c998 <line:129:5, col:48>
|   | |-VarDecl 0x1781825c7d0 <col:5, col:25> col:18 used good 'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x1781825c860 <col:25> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1781825c838 <col:25> 'int' 0
|   | |-VarDecl 0x1781825c890 <col:5, col:28> col:28 used found_one_byte 'unsigned int'
|   | `-VarDecl 0x1781825c910 <col:5, col:44> col:44 used mask 'unsigned int'
|   |-DeclStmt 0x1781825cac8 <line:130:5, col:47>
|   | |-VarDecl 0x1781825c9c8 <col:5, col:26> col:26 used maskedseed 'const unsigned char *'
|   | `-VarDecl 0x1781825ca48 <col:5, col:39> col:39 used maskeddb 'const unsigned char *'
|   |-DeclStmt 0x1781825cd38 <line:135:5, line:136:31>
|   | |-VarDecl 0x1781825caf8 <line:135:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:135:20 used db 'unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x1781825cbe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   | |   `-ParenExpr 0x1781825cbc8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1781825cba0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1781825cb60 <col:26> 'int' 0
|   | `-VarDecl 0x1781825cc18 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:135:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:135:32 used em 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1781825cd08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1781825cce8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1781825ccc0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1781825cc80 <col:26> 'int' 0
|   |-DeclStmt 0x1781825cdd0 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:137:5, col:14>
|   | `-VarDecl 0x1781825cd68 <col:5, col:9> col:9 used mdlen 'int'
|   |-IfStmt 0x1781825a128 <line:146:5, line:147:17>
|   | |-BinaryOperator 0x1781825a0b8 <line:146:9, col:30> 'int' '||'
|   | | |-BinaryOperator 0x1781825a000 <col:9, col:17> 'int' '<='
|   | | | |-ImplicitCastExpr 0x17818259fe8 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x17818259f88 <col:9> 'int' lvalue ParmVar 0x1781825be90 'tlen' 'int'
|   | | | `-IntegerLiteral 0x17818259fc0 <col:17> 'int' 0
|   | | `-BinaryOperator 0x1781825a098 <col:22, col:30> 'int' '<='
|   | |   |-ImplicitCastExpr 0x1781825a080 <col:22> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1781825a020 <col:22> 'int' lvalue ParmVar 0x1781825bf90 'flen' 'int'
|   | |   `-IntegerLiteral 0x1781825a058 <col:30> 'int' 0
|   | `-ReturnStmt 0x1781825a118 <line:147:9, col:17>
|   |   `-UnaryOperator 0x1781825a100 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1781825a0d8 <col:17> 'int' 1
|   |-IfStmt 0x1781825a3b0 <line:156:5, line:160:5>
|   | |-BinaryOperator 0x1781825a308 <line:156:9, col:41> 'int' '||'
|   | | |-BinaryOperator 0x1781825a1c8 <col:9, col:15> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1781825a198 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1781825a140 <col:9> 'int' lvalue ParmVar 0x1781825c010 'num' 'int'
|   | | | `-ImplicitCastExpr 0x1781825a1b0 <col:15> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1781825a178 <col:15> 'int' lvalue ParmVar 0x1781825bf90 'flen' 'int'
|   | | `-BinaryOperator 0x1781825a2e8 <col:23, col:41> 'int' '<'
|   | |   |-ImplicitCastExpr 0x1781825a2d0 <col:23> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1781825a1e8 <col:23> 'int' lvalue ParmVar 0x1781825c010 'num' 'int'
|   | |   `-BinaryOperator 0x1781825a2b0 <col:29, col:41> 'int' '+'
|   | |     |-BinaryOperator 0x1781825a268 <col:29, col:33> 'int' '*'
|   | |     | |-IntegerLiteral 0x1781825a208 <col:29> 'int' 2
|   | |     | `-ImplicitCastExpr 0x1781825a250 <col:33> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1781825a230 <col:33> 'int' lvalue Var 0x1781825cd68 'mdlen' 'int'
|   | |     `-IntegerLiteral 0x1781825a288 <col:41> 'int' 2
|   | `-CompoundStmt 0x1781825a398 <col:44, line:160:5>
|   |   `-ReturnStmt 0x1781825a388 <line:159:9, col:17>
|   |     `-UnaryOperator 0x1781825a370 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1781825a348 <col:17> 'int' 1
|   |-BinaryOperator 0x1781825a4d8 <line:162:5, col:27> 'int' '='
|   | |-DeclRefExpr 0x1781825a3c8 <col:5> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   | `-BinaryOperator 0x1781825a4b8 <col:13, col:27> 'int' '-'
|   |   |-BinaryOperator 0x1781825a470 <col:13, col:19> 'int' '-'
|   |   | |-ImplicitCastExpr 0x1781825a440 <col:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1781825a400 <col:13> 'int' lvalue ParmVar 0x1781825c010 'num' 'int'
|   |   | `-ImplicitCastExpr 0x1781825a458 <col:19> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1781825a420 <col:19> 'int' lvalue Var 0x1781825cd68 'mdlen' 'int'
|   |   `-IntegerLiteral 0x1781825a490 <col:27> 'int' 1
|   |-BinaryOperator 0x1781825a5e0 <line:163:5, col:30> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1781825a4f8 <col:5> 'unsigned char *' lvalue Var 0x1781825caf8 'db' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1781825a5c8 <col:10, col:30> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1781825a588 <col:10, col:30> 'int'
|   |     |-ImplicitCastExpr 0x1781825a570 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1781825a530 <col:10> 'int ()' Function 0x1781825e430 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1781825a5b0 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1781825a550 <col:25> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   |-IfStmt 0x1781825a798 <line:164:5, line:167:5>
|   | |-BinaryOperator 0x1781825a6d8 <line:164:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1781825a6a8 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:164:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1781825a600 <col:9> 'unsigned char *' lvalue Var 0x1781825caf8 'db' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1781825a6c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1781825a688 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1781825a660 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1781825a620 <col:26> 'int' 0
|   | `-CompoundStmt 0x1781825a780 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:164:21, line:167:5>
|   |   `-GotoStmt 0x1781825a768 <line:166:9, col:14> 'cleanup' 0x1781825a718
|   |-BinaryOperator 0x1781825a898 <line:169:5, col:28> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1781825a7b0 <col:5> 'unsigned char *' lvalue Var 0x1781825cc18 'em' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1781825a880 <col:10, col:28> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1781825a840 <col:10, col:28> 'int'
|   |     |-ImplicitCastExpr 0x1781825a828 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1781825a7e8 <col:10> 'int ()' Function 0x1781825e430 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1781825a868 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1781825a808 <col:25> 'int' lvalue ParmVar 0x1781825c010 'num' 'int'
|   |-IfStmt 0x1781825aa00 <line:170:5, line:174:5>
|   | |-BinaryOperator 0x1781825a990 <line:170:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1781825a960 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:170:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1781825a8b8 <col:9> 'unsigned char *' lvalue Var 0x1781825cc18 'em' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1781825a978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1781825a940 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1781825a918 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1781825a8d8 <col:26> 'int' 0
|   | `-CompoundStmt 0x1781825a9e8 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:170:21, line:174:5>
|   |   `-GotoStmt 0x1781825a9d0 <line:173:9, col:14> 'cleanup' 0x1781825a718
|   |-ForStmt 0x178182632c8 <line:182:5, line:187:5>
|   | |-BinaryOperator 0x1781825abe0 <line:182:10, col:39> 'int' ','
|   | | |-BinaryOperator 0x1781825ab40 <col:10, col:30> 'unsigned char *' ','
|   | | | |-CompoundAssignOperator 0x1781825aa88 <col:10, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | | | | |-DeclRefExpr 0x1781825aa18 <col:10> 'const unsigned char *' lvalue ParmVar 0x1781825bf10 'from' 'const unsigned char *'
|   | | | | `-ImplicitCastExpr 0x1781825aa70 <col:18> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1781825aa50 <col:18> 'int' lvalue ParmVar 0x1781825bf90 'flen' 'int'
|   | | | `-CompoundAssignOperator 0x1781825ab10 <col:24, col:30> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | | |   |-DeclRefExpr 0x1781825aab8 <col:24> 'unsigned char *' lvalue Var 0x1781825cc18 'em' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x1781825aaf8 <col:30> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1781825aad8 <col:30> 'int' lvalue ParmVar 0x1781825c010 'num' 'int'
|   | | `-BinaryOperator 0x1781825abc0 <col:35, col:39> 'int' '='
|   | |   |-DeclRefExpr 0x1781825ab60 <col:35> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | |   `-IntegerLiteral 0x1781825ab98 <col:39> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1781825ac70 <col:42, col:46> 'int' '<'
|   | | |-ImplicitCastExpr 0x1781825ac40 <col:42> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1781825ac00 <col:42> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | | `-ImplicitCastExpr 0x1781825ac58 <col:46> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1781825ac20 <col:46> 'int' lvalue ParmVar 0x1781825c010 'num' 'int'
|   | |-UnaryOperator 0x1781825acb0 <col:51, col:52> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1781825ac90 <col:51> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | `-CompoundStmt 0x17818263298 <col:56, line:187:5>
|   |   |-BinaryOperator 0x17818262f48 <line:183:9, col:43> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x1781825acc8 <col:9> 'unsigned int' lvalue Var 0x1781825c910 'mask' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x17818262f30 <col:16, col:43> 'unsigned int' <IntegralCast>
|   |   |   `-UnaryOperator 0x17818262f18 <col:16, col:43> 'int' prefix '~' cannot overflow
|   |   |     `-CallExpr 0x1781825ae48 <col:17, col:43> 'int'
|   |   |       |-ImplicitCastExpr 0x1781825ae30 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1781825adf0 <col:17> 'int ()' Function 0x1781825ad28 'constant_time_is_zero' 'int ()'
|   |   |       `-ImplicitCastExpr 0x17818262f00 <col:39> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1781825ae10 <col:39> 'int' lvalue ParmVar 0x1781825bf90 'flen' 'int'
|   |   |-CompoundAssignOperator 0x17818263020 <line:184:9, col:21> 'int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x17818262f68 <col:9> 'int' lvalue ParmVar 0x1781825bf90 'flen' 'int'
|   |   | `-BinaryOperator 0x17818263000 <col:17, col:21> 'unsigned int' '&'
|   |   |   |-ImplicitCastExpr 0x17818262fe8 <col:17> 'unsigned int' <IntegralCast>
|   |   |   | `-IntegerLiteral 0x17818262f88 <col:17> 'int' 1
|   |   |   `-ImplicitCastExpr 0x17818262fd0 <col:21> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x17818262fb0 <col:21> 'unsigned int' lvalue Var 0x1781825c910 'mask' 'unsigned int'
|   |   |-CompoundAssignOperator 0x17818263108 <line:185:9, col:21> 'const unsigned char *' '-=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x17818263050 <col:9> 'const unsigned char *' lvalue ParmVar 0x1781825bf10 'from' 'const unsigned char *'
|   |   | `-BinaryOperator 0x178182630e8 <col:17, col:21> 'unsigned int' '&'
|   |   |   |-ImplicitCastExpr 0x178182630d0 <col:17> 'unsigned int' <IntegralCast>
|   |   |   | `-IntegerLiteral 0x17818263070 <col:17> 'int' 1
|   |   |   `-ImplicitCastExpr 0x178182630b8 <col:21> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x17818263098 <col:21> 'unsigned int' lvalue Var 0x1781825c910 'mask' 'unsigned int'
|   |   `-BinaryOperator 0x17818263278 <line:186:9, col:25> 'unsigned char' '='
|   |     |-UnaryOperator 0x17818263170 <col:9, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x17818263158 <col:10, col:12> 'unsigned char *' prefix '--'
|   |     |   `-DeclRefExpr 0x17818263138 <col:12> 'unsigned char *' lvalue Var 0x1781825cc18 'em' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x17818263260 <col:17, col:25> 'unsigned char' <IntegralCast>
|   |       `-BinaryOperator 0x17818263240 <col:17, col:25> 'unsigned int' '&'
|   |         |-ImplicitCastExpr 0x17818263210 <col:17, col:18> 'unsigned int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x178182631f8 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |         |   `-UnaryOperator 0x178182631c0 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         |     `-ImplicitCastExpr 0x178182631a8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x17818263188 <col:18> 'const unsigned char *' lvalue ParmVar 0x1781825bf10 'from' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x17818263228 <col:25> 'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x178182631d8 <col:25> 'unsigned int' lvalue Var 0x1781825c910 'mask' 'unsigned int'
|   |-BinaryOperator 0x17818263460 <line:194:5, col:39> 'unsigned int' '='
|   | |-DeclRefExpr 0x17818263300 <col:5> 'unsigned int' lvalue Var 0x1781825c7d0 'good' 'unsigned int'
|   | `-ImplicitCastExpr 0x17818263448 <col:12, col:39> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x178182633f0 <col:12, col:39> 'int'
|   |     |-ImplicitCastExpr 0x178182633d8 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x17818263338 <col:12> 'int ()' Function 0x1781825ad28 'constant_time_is_zero' 'int ()'
|   |     `-ImplicitCastExpr 0x17818263430 <col:34, col:38> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x17818263418 <col:34, col:38> 'unsigned char' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x178182633b8 <col:34, col:38> 'unsigned char' lvalue
|   |           |-ImplicitCastExpr 0x178182633a0 <col:34> 'unsigned char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x17818263358 <col:34> 'unsigned char *' lvalue Var 0x1781825cc18 'em' 'unsigned char *'
|   |           `-IntegerLiteral 0x17818263378 <col:37> 'int' 0
|   |-BinaryOperator 0x17818263550 <line:196:5, col:23> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x17818263480 <col:5> 'const unsigned char *' lvalue Var 0x1781825c9c8 'maskedseed' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x17818263538 <col:18, col:23> 'const unsigned char *' <NoOp>
|   |   `-BinaryOperator 0x17818263518 <col:18, col:23> 'unsigned char *' '+'
|   |     |-ImplicitCastExpr 0x17818263500 <col:18> 'unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x178182634b8 <col:18> 'unsigned char *' lvalue Var 0x1781825cc18 'em' 'unsigned char *'
|   |     `-IntegerLiteral 0x178182634d8 <col:23> 'int' 1
|   |-BinaryOperator 0x17818263698 <line:197:5, col:25> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x17818263570 <col:5> 'const unsigned char *' lvalue Var 0x1781825ca48 'maskeddb' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x17818263680 <col:16, col:25> 'const unsigned char *' <NoOp>
|   |   `-BinaryOperator 0x17818263660 <col:16, col:25> 'unsigned char *' '+'
|   |     |-BinaryOperator 0x17818263608 <col:16, col:21> 'unsigned char *' '+'
|   |     | |-ImplicitCastExpr 0x178182635f0 <col:16> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x178182635a8 <col:16> 'unsigned char *' lvalue Var 0x1781825cc18 'em' 'unsigned char *'
|   |     | `-IntegerLiteral 0x178182635c8 <col:21> 'int' 1
|   |     `-ImplicitCastExpr 0x17818263648 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x17818263628 <col:25> 'int' lvalue Var 0x1781825cd68 'mdlen' 'int'
|   |-IfStmt 0x17818263768 <line:199:5, line:200:14>
|   | |-OpaqueValueExpr 0x17818263750 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x17818263738 <col:9, col:14> 'cleanup' 0x1781825a718
|   |-IfStmt 0x17818263a10 <line:204:5, line:205:14>
|   | |-OpaqueValueExpr 0x178182639f8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x178182639e0 <col:9, col:14> 'cleanup' 0x1781825a718
|   |-ForStmt 0x17818263cd8 <line:206:5, line:207:28>
|   | |-BinaryOperator 0x17818263a70 <line:206:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x17818263a28 <col:10> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | | `-IntegerLiteral 0x17818263a48 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x17818263b00 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x17818263ad0 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x17818263a90 <col:17> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | | `-ImplicitCastExpr 0x17818263ae8 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x17818263ab0 <col:21> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   | |-UnaryOperator 0x17818263b40 <col:28, col:29> 'int' postfix '++'
|   | | `-DeclRefExpr 0x17818263b20 <col:28> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | `-CompoundAssignOperator 0x17818263ca8 <line:207:9, col:28> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-ArraySubscriptExpr 0x17818263bc8 <col:9, col:13> 'unsigned char' lvalue
|   |   | |-ImplicitCastExpr 0x17818263b98 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x17818263b58 <col:9> 'unsigned char *' lvalue Var 0x1781825caf8 'db' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x17818263bb0 <col:12> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x17818263b78 <col:12> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |   `-ImplicitCastExpr 0x17818263c90 <col:18, col:28> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x17818263c78 <col:18, col:28> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x17818263c58 <col:18, col:28> 'const unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x17818263c28 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x17818263be8 <col:18> 'const unsigned char *' lvalue Var 0x1781825ca48 'maskeddb' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x17818263c40 <col:27> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x17818263c08 <col:27> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |-IfStmt 0x17818263f60 <line:209:5, line:210:14>
|   | |-OpaqueValueExpr 0x17818263f48 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x17818263f30 <col:9, col:14> 'cleanup' 0x1781825a718
|   |-BinaryOperator 0x17818264180 <line:214:5, col:22> 'unsigned int' '='
|   | |-DeclRefExpr 0x17818264108 <col:5> 'unsigned int' lvalue Var 0x1781825c890 'found_one_byte' 'unsigned int'
|   | `-ImplicitCastExpr 0x17818264168 <col:22> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x17818264140 <col:22> 'int' 0
|   |-ForStmt 0x17818264c60 <line:215:5, line:225:5>
|   | |-BinaryOperator 0x178182641f8 <line:215:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x178182641a0 <col:10> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | | `-ImplicitCastExpr 0x178182641e0 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x178182641c0 <col:14> 'int' lvalue Var 0x1781825cd68 'mdlen' 'int'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x17818264288 <col:21, col:25> 'int' '<'
|   | | |-ImplicitCastExpr 0x17818264258 <col:21> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x17818264218 <col:21> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | | `-ImplicitCastExpr 0x17818264270 <col:25> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x17818264238 <col:25> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   | |-UnaryOperator 0x178182642c8 <col:32, col:33> 'int' postfix '++'
|   | | `-DeclRefExpr 0x178182642a8 <col:32> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | `-CompoundStmt 0x17818264c28 <col:37, line:225:5>
|   |   |-DeclStmt 0x178182645b8 <line:219:9, col:58>
|   |   | `-VarDecl 0x178182642f8 <col:9, col:57> col:22 used equals1 'unsigned int' cinit
|   |   |   `-ImplicitCastExpr 0x178182645a0 <col:32, col:57> 'unsigned int' <IntegralCast>
|   |   |     `-CallExpr 0x17818264540 <col:32, col:57> 'int'
|   |   |       |-ImplicitCastExpr 0x17818264528 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x17818264450 <col:32> 'int ()' Function 0x17818264388 'constant_time_eq' 'int ()'
|   |   |       |-ImplicitCastExpr 0x17818264588 <col:49, col:53> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x17818264570 <col:49, col:53> 'unsigned char' <LValueToRValue>
|   |   |       |   `-ArraySubscriptExpr 0x178182644e0 <col:49, col:53> 'unsigned char' lvalue
|   |   |       |     |-ImplicitCastExpr 0x178182644b0 <col:49> 'unsigned char *' <LValueToRValue>
|   |   |       |     | `-DeclRefExpr 0x17818264470 <col:49> 'unsigned char *' lvalue Var 0x1781825caf8 'db' 'unsigned char *'
|   |   |       |     `-ImplicitCastExpr 0x178182644c8 <col:52> 'int' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x17818264490 <col:52> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |   |       `-IntegerLiteral 0x17818264500 <col:56> 'int' 1
|   |   |-DeclStmt 0x17818264788 <line:220:9, col:60>
|   |   | `-VarDecl 0x178182645e8 <col:9, col:59> col:22 used equals0 'unsigned int' cinit
|   |   |   `-ImplicitCastExpr 0x17818264770 <col:32, col:59> 'unsigned int' <IntegralCast>
|   |   |     `-CallExpr 0x17818264718 <col:32, col:59> 'int'
|   |   |       |-ImplicitCastExpr 0x17818264700 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x17818264650 <col:32> 'int ()' Function 0x1781825ad28 'constant_time_is_zero' 'int ()'
|   |   |       `-ImplicitCastExpr 0x17818264758 <col:54, col:58> 'int' <IntegralCast>
|   |   |         `-ImplicitCastExpr 0x17818264740 <col:54, col:58> 'unsigned char' <LValueToRValue>
|   |   |           `-ArraySubscriptExpr 0x178182646e0 <col:54, col:58> 'unsigned char' lvalue
|   |   |             |-ImplicitCastExpr 0x178182646b0 <col:54> 'unsigned char *' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x17818264670 <col:54> 'unsigned char *' lvalue Var 0x1781825caf8 'db' 'unsigned char *'
|   |   |             `-ImplicitCastExpr 0x178182646c8 <col:57> 'int' <LValueToRValue>
|   |   |               `-DeclRefExpr 0x17818264690 <col:57> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |   |-BinaryOperator 0x17818264a68 <line:221:9, line:222:58> 'int' '='
|   |   | |-DeclRefExpr 0x178182647a0 <line:221:9> 'int' lvalue Var 0x1781825c660 'one_index' 'int'
|   |   | `-CallExpr 0x17818264a00 <col:21, line:222:58> 'int'
|   |   |   |-ImplicitCastExpr 0x178182649e8 <line:221:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x178182648c8 <col:21> 'int ()' Function 0x17818264800 'constant_time_select_int' 'int ()'
|   |   |   |-BinaryOperator 0x17818264988 <col:46, col:64> 'unsigned int' '&'
|   |   |   | |-UnaryOperator 0x17818264920 <col:46, col:47> 'unsigned int' prefix '~' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x17818264908 <col:47> 'unsigned int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x178182648e8 <col:47> 'unsigned int' lvalue Var 0x1781825c890 'found_one_byte' 'unsigned int'
|   |   |   | `-ImplicitCastExpr 0x17818264970 <col:64> 'unsigned int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x17818264938 <col:64> 'unsigned int' lvalue Var 0x178182642f8 'equals1' 'unsigned int'
|   |   |   |-ImplicitCastExpr 0x17818264a38 <line:222:46> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x178182649a8 <col:46> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x17818264a50 <col:49> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x178182649c8 <col:49> 'int' lvalue Var 0x1781825c660 'one_index' 'int'
|   |   |-CompoundAssignOperator 0x17818264ae0 <line:223:9, col:27> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x17818264a88 <col:9> 'unsigned int' lvalue Var 0x1781825c890 'found_one_byte' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x17818264ac8 <col:27> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x17818264aa8 <col:27> 'unsigned int' lvalue Var 0x178182642f8 'equals1' 'unsigned int'
|   |   `-CompoundAssignOperator 0x17818264bf8 <line:224:9, col:42> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x17818264b10 <col:9> 'unsigned int' lvalue Var 0x1781825c7d0 'good' 'unsigned int'
|   |     `-ParenExpr 0x17818264bd8 <col:17, col:42> 'unsigned int'
|   |       `-BinaryOperator 0x17818264bb8 <col:18, col:35> 'unsigned int' '|'
|   |         |-ImplicitCastExpr 0x17818264b88 <col:18> 'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x17818264b30 <col:18> 'unsigned int' lvalue Var 0x1781825c890 'found_one_byte' 'unsigned int'
|   |         `-ImplicitCastExpr 0x17818264ba0 <col:35> 'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x17818264b50 <col:35> 'unsigned int' lvalue Var 0x178182645e8 'equals0' 'unsigned int'
|   |-CompoundAssignOperator 0x17818264cf0 <line:227:5, col:13> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x17818264c98 <col:5> 'unsigned int' lvalue Var 0x1781825c7d0 'good' 'unsigned int'
|   | `-ImplicitCastExpr 0x17818264cd8 <col:13> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x17818264cb8 <col:13> 'unsigned int' lvalue Var 0x1781825c890 'found_one_byte' 'unsigned int'
|   |-BinaryOperator 0x17818264dd8 <line:234:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x17818264d20 <col:5> 'int' lvalue Var 0x1781825c708 'msg_index' 'int'
|   | `-BinaryOperator 0x17818264db8 <col:17, col:29> 'int' '+'
|   |   |-ImplicitCastExpr 0x17818264da0 <col:17> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x17818264d58 <col:17> 'int' lvalue Var 0x1781825c660 'one_index' 'int'
|   |   `-IntegerLiteral 0x17818264d78 <col:29> 'int' 1
|   |-BinaryOperator 0x17818264ec0 <line:235:5, col:20> 'int' '='
|   | |-DeclRefExpr 0x17818264df8 <col:5> 'int' lvalue Var 0x1781825c5a0 'mlen' 'int'
|   | `-BinaryOperator 0x17818264ea0 <col:12, col:20> 'int' '-'
|   |   |-ImplicitCastExpr 0x17818264e70 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x17818264e30 <col:12> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   |   `-ImplicitCastExpr 0x17818264e88 <col:20> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x17818264e50 <col:20> 'int' lvalue Var 0x1781825c708 'msg_index' 'int'
|   |-CompoundAssignOperator 0x17818268130 <line:240:5, col:40> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x17818264ee0 <col:5> 'unsigned int' lvalue Var 0x1781825c7d0 'good' 'unsigned int'
|   | `-ImplicitCastExpr 0x17818268118 <col:13, col:40> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x178182680b8 <col:13, col:40> 'int'
|   |     |-ImplicitCastExpr 0x178182680a0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x17818268040 <col:13> 'int ()' Function 0x17818267f78 'constant_time_ge' 'int ()'
|   |     |-ImplicitCastExpr 0x178182680e8 <col:30> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x17818268060 <col:30> 'int' lvalue ParmVar 0x1781825be90 'tlen' 'int'
|   |     `-ImplicitCastExpr 0x17818268100 <col:36> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x17818268080 <col:36> 'int' lvalue Var 0x1781825c5a0 'mlen' 'int'
|   |-BinaryOperator 0x17818268568 <line:252:5, line:253:60> 'int' '='
|   | |-DeclRefExpr 0x17818268160 <line:252:5> 'int' lvalue ParmVar 0x1781825be90 'tlen' 'int'
|   | `-CallExpr 0x17818268518 <col:12, line:253:60> 'int'
|   |   |-ImplicitCastExpr 0x17818268500 <line:252:12> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x17818268180 <col:12> 'int ()' Function 0x17818264800 'constant_time_select_int' 'int ()'
|   |   |-CallExpr 0x178182683c0 <col:37, col:77> 'int'
|   |   | |-ImplicitCastExpr 0x178182683a8 <col:37> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x17818268290 <col:37> 'int ()' Function 0x178182681c8 'constant_time_lt' 'int ()'
|   |   | |-BinaryOperator 0x17818268368 <col:54, col:70> 'int' '-'
|   |   | | |-BinaryOperator 0x17818268320 <col:54, col:62> 'int' '-'
|   |   | | | |-ImplicitCastExpr 0x178182682f0 <col:54> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x178182682b0 <col:54> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   |   | | | `-ImplicitCastExpr 0x17818268308 <col:62> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x178182682d0 <col:62> 'int' lvalue Var 0x1781825cd68 'mdlen' 'int'
|   |   | | `-IntegerLiteral 0x17818268340 <col:70> 'int' 1
|   |   | `-ImplicitCastExpr 0x178182683f0 <col:73> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x17818268388 <col:73> 'int' lvalue ParmVar 0x1781825be90 'tlen' 'int'
|   |   |-BinaryOperator 0x178182684c0 <line:253:37, col:53> 'int' '-'
|   |   | |-BinaryOperator 0x17818268478 <col:37, col:45> 'int' '-'
|   |   | | |-ImplicitCastExpr 0x17818268448 <col:37> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x17818268408 <col:37> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   |   | | `-ImplicitCastExpr 0x17818268460 <col:45> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x17818268428 <col:45> 'int' lvalue Var 0x1781825cd68 'mdlen' 'int'
|   |   | `-IntegerLiteral 0x17818268498 <col:53> 'int' 1
|   |   `-ImplicitCastExpr 0x17818268550 <col:56> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x178182684e0 <col:56> 'int' lvalue ParmVar 0x1781825be90 'tlen' 'int'
|   |-ForStmt 0x178182660a8 <line:254:5, line:258:5>
|   | |-BinaryOperator 0x178182685d0 <line:254:10, col:22> 'int' '='
|   | | |-DeclRefExpr 0x17818268588 <col:10> 'int' lvalue Var 0x1781825c708 'msg_index' 'int'
|   | | `-IntegerLiteral 0x178182685a8 <col:22> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x17818268700 <col:25, col:53> 'int' '<'
|   | | |-ImplicitCastExpr 0x178182686e8 <col:25> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x178182685f0 <col:25> 'int' lvalue Var 0x1781825c708 'msg_index' 'int'
|   | | `-BinaryOperator 0x178182686c8 <col:37, col:53> 'int' '-'
|   | |   |-BinaryOperator 0x17818268680 <col:37, col:45> 'int' '-'
|   | |   | |-ImplicitCastExpr 0x17818268650 <col:37> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x17818268610 <col:37> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   | |   | `-ImplicitCastExpr 0x17818268668 <col:45> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x17818268630 <col:45> 'int' lvalue Var 0x1781825cd68 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x178182686a0 <col:53> 'int' 1
|   | |-CompoundAssignOperator 0x17818268780 <col:56, col:70> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x17818268720 <col:56> 'int' lvalue Var 0x1781825c708 'msg_index' 'int'
|   | | `-IntegerLiteral 0x17818268740 <col:70> 'int' 1
|   | `-CompoundStmt 0x17818266088 <col:73, line:258:5>
|   |   |-BinaryOperator 0x17818268a38 <line:255:9, col:75> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x178182687b0 <col:9> 'unsigned int' lvalue Var 0x1781825c910 'mask' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x17818268a20 <col:16, col:75> 'unsigned int' <IntegralCast>
|   |   |   `-UnaryOperator 0x17818268a08 <col:16, col:75> 'int' prefix '~' cannot overflow
|   |   |     `-CallExpr 0x178182689d8 <col:17, col:75> 'int'
|   |   |       |-ImplicitCastExpr 0x178182689c0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x178182687d0 <col:17> 'int ()' Function 0x17818264388 'constant_time_eq' 'int ()'
|   |   |       |-BinaryOperator 0x17818268978 <col:34, col:71> 'int' '&'
|   |   |       | |-ImplicitCastExpr 0x17818268960 <col:34> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x178182687f0 <col:34> 'int' lvalue Var 0x1781825c708 'msg_index' 'int'
|   |   |       | `-ParenExpr 0x17818268940 <col:46, col:71> 'int'
|   |   |       |   `-BinaryOperator 0x17818268920 <col:47, col:67> 'int' '-'
|   |   |       |     |-BinaryOperator 0x178182688c8 <col:47, col:63> 'int' '-'
|   |   |       |     | |-BinaryOperator 0x17818268880 <col:47, col:55> 'int' '-'
|   |   |       |     | | |-ImplicitCastExpr 0x17818268850 <col:47> 'int' <LValueToRValue>
|   |   |       |     | | | `-DeclRefExpr 0x17818268810 <col:47> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   |   |       |     | | `-ImplicitCastExpr 0x17818268868 <col:55> 'int' <LValueToRValue>
|   |   |       |     | |   `-DeclRefExpr 0x17818268830 <col:55> 'int' lvalue Var 0x1781825cd68 'mdlen' 'int'
|   |   |       |     | `-IntegerLiteral 0x178182688a0 <col:63> 'int' 1
|   |   |       |     `-ImplicitCastExpr 0x17818268908 <col:67> 'int' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x178182688e8 <col:67> 'int' lvalue Var 0x1781825c5a0 'mlen' 'int'
|   |   |       `-IntegerLiteral 0x17818268998 <col:74> 'int' 0
|   |   `-ForStmt 0x17818266050 <line:256:9, line:257:74>
|   |     |-BinaryOperator 0x17818268af8 <line:256:14, col:26> 'int' '='
|   |     | |-DeclRefExpr 0x17818268a58 <col:14> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |     | `-BinaryOperator 0x17818268ad8 <col:18, col:26> 'int' '+'
|   |     |   |-ImplicitCastExpr 0x17818268ac0 <col:18> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x17818268a78 <col:18> 'int' lvalue Var 0x1781825cd68 'mdlen' 'int'
|   |     |   `-IntegerLiteral 0x17818268a98 <col:26> 'int' 1
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x17818268be0 <col:29, col:41> 'int' '<'
|   |     | |-ImplicitCastExpr 0x17818268bc8 <col:29> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x17818268b18 <col:29> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |     | `-BinaryOperator 0x17818268ba8 <col:33, col:41> 'int' '-'
|   |     |   |-ImplicitCastExpr 0x17818268b78 <col:33> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x17818268b38 <col:33> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   |     |   `-ImplicitCastExpr 0x17818268b90 <col:41> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x17818268b58 <col:41> 'int' lvalue Var 0x1781825c708 'msg_index' 'int'
|   |     |-UnaryOperator 0x17818268c20 <col:52, col:53> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x17818268c00 <col:52> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |     `-BinaryOperator 0x17818266030 <line:257:13, col:74> 'unsigned char' '='
|   |       |-ArraySubscriptExpr 0x17818268ca8 <col:13, col:17> 'unsigned char' lvalue
|   |       | |-ImplicitCastExpr 0x17818268c78 <col:13> 'unsigned char *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x17818268c38 <col:13> 'unsigned char *' lvalue Var 0x1781825caf8 'db' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x17818268c90 <col:16> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x17818268c58 <col:16> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |       `-ImplicitCastExpr 0x17818266018 <col:21, col:74> 'unsigned char' <IntegralCast>
|   |         `-CallExpr 0x17818265f68 <col:21, col:74> 'int'
|   |           |-ImplicitCastExpr 0x17818265f50 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x17818268db8 <col:21> 'int ()' Function 0x17818268cf0 'constant_time_select_8' 'int ()'
|   |           |-ImplicitCastExpr 0x17818265fa0 <col:44> 'unsigned int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x17818268dd8 <col:44> 'unsigned int' lvalue Var 0x1781825c910 'mask' 'unsigned int'
|   |           |-ImplicitCastExpr 0x17818265fd0 <col:50, col:66> 'int' <IntegralCast>
|   |           | `-ImplicitCastExpr 0x17818265fb8 <col:50, col:66> 'unsigned char' <LValueToRValue>
|   |           |   `-ArraySubscriptExpr 0x17818268ec0 <col:50, col:66> 'unsigned char' lvalue
|   |           |     |-ImplicitCastExpr 0x17818268ea8 <col:50> 'unsigned char *' <LValueToRValue>
|   |           |     | `-DeclRefExpr 0x17818268df8 <col:50> 'unsigned char *' lvalue Var 0x1781825caf8 'db' 'unsigned char *'
|   |           |     `-BinaryOperator 0x17818268e88 <col:53, col:57> 'int' '+'
|   |           |       |-ImplicitCastExpr 0x17818268e58 <col:53> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x17818268e18 <col:53> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |           |       `-ImplicitCastExpr 0x17818268e70 <col:57> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x17818268e38 <col:57> 'int' lvalue Var 0x1781825c708 'msg_index' 'int'
|   |           `-ImplicitCastExpr 0x17818266000 <col:69, col:73> 'int' <IntegralCast>
|   |             `-ImplicitCastExpr 0x17818265fe8 <col:69, col:73> 'unsigned char' <LValueToRValue>
|   |               `-ArraySubscriptExpr 0x17818265f30 <col:69, col:73> 'unsigned char' lvalue
|   |                 |-ImplicitCastExpr 0x17818268f20 <col:69> 'unsigned char *' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x17818268ee0 <col:69> 'unsigned char *' lvalue Var 0x1781825caf8 'db' 'unsigned char *'
|   |                 `-ImplicitCastExpr 0x17818268f38 <col:72> 'int' <LValueToRValue>
|   |                   `-DeclRefExpr 0x17818268f00 <col:72> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |-ForStmt 0x17818266760 <line:259:5, line:262:5>
|   | |-BinaryOperator 0x17818266128 <line:259:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x178182660e0 <col:10> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | | `-IntegerLiteral 0x17818266100 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x178182661b8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x17818266188 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x17818266148 <col:17> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | | `-ImplicitCastExpr 0x178182661a0 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x17818266168 <col:21> 'int' lvalue ParmVar 0x1781825be90 'tlen' 'int'
|   | |-UnaryOperator 0x178182661f8 <col:27, col:28> 'int' postfix '++'
|   | | `-DeclRefExpr 0x178182661d8 <col:27> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   | `-CompoundStmt 0x17818266740 <col:32, line:262:5>
|   |   |-BinaryOperator 0x17818266378 <line:260:9, col:47> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x17818266210 <col:9> 'unsigned int' lvalue Var 0x1781825c910 'mask' 'unsigned int'
|   |   | `-BinaryOperator 0x17818266358 <col:16, col:47> 'unsigned int' '&'
|   |   |   |-ImplicitCastExpr 0x17818266328 <col:16> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x17818266230 <col:16> 'unsigned int' lvalue Var 0x1781825c7d0 'good' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x17818266340 <col:23, col:47> 'unsigned int' <IntegralCast>
|   |   |     `-CallExpr 0x178182662c8 <col:23, col:47> 'int'
|   |   |       |-ImplicitCastExpr 0x178182662b0 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x17818266250 <col:23> 'int ()' Function 0x178182681c8 'constant_time_lt' 'int ()'
|   |   |       |-ImplicitCastExpr 0x178182662f8 <col:40> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x17818266270 <col:40> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |   |       `-ImplicitCastExpr 0x17818266310 <col:43> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x17818266290 <col:43> 'int' lvalue Var 0x1781825c5a0 'mlen' 'int'
|   |   `-BinaryOperator 0x17818266720 <line:261:9, col:70> 'unsigned char' '='
|   |     |-ArraySubscriptExpr 0x17818266420 <col:9, col:13> 'unsigned char' lvalue
|   |     | |-ImplicitCastExpr 0x178182663f0 <col:9> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x17818266398 <col:9> 'unsigned char *' lvalue ParmVar 0x1781825bdb8 'to' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x17818266408 <col:12> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x178182663d0 <col:12> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |     `-ImplicitCastExpr 0x17818266708 <col:17, col:70> 'unsigned char' <IntegralCast>
|   |       `-CallExpr 0x17818266658 <col:17, col:70> 'int'
|   |         |-ImplicitCastExpr 0x17818266640 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x17818266440 <col:17> 'int ()' Function 0x17818268cf0 'constant_time_select_8' 'int ()'
|   |         |-ImplicitCastExpr 0x17818266690 <col:40> 'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x17818266460 <col:40> 'unsigned int' lvalue Var 0x1781825c910 'mask' 'unsigned int'
|   |         |-ImplicitCastExpr 0x178182666c0 <col:46, col:62> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x178182666a8 <col:46, col:62> 'unsigned char' <LValueToRValue>
|   |         |   `-ArraySubscriptExpr 0x17818266590 <col:46, col:62> 'unsigned char' lvalue
|   |         |     |-ImplicitCastExpr 0x17818266578 <col:46> 'unsigned char *' <LValueToRValue>
|   |         |     | `-DeclRefExpr 0x17818266480 <col:46> 'unsigned char *' lvalue Var 0x1781825caf8 'db' 'unsigned char *'
|   |         |     `-BinaryOperator 0x17818266558 <col:49, col:61> 'int' '+'
|   |         |       |-BinaryOperator 0x17818266510 <col:49, col:53> 'int' '+'
|   |         |       | |-ImplicitCastExpr 0x178182664e0 <col:49> 'int' <LValueToRValue>
|   |         |       | | `-DeclRefExpr 0x178182664a0 <col:49> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |         |       | `-ImplicitCastExpr 0x178182664f8 <col:53> 'int' <LValueToRValue>
|   |         |       |   `-DeclRefExpr 0x178182664c0 <col:53> 'int' lvalue Var 0x1781825cd68 'mdlen' 'int'
|   |         |       `-IntegerLiteral 0x17818266530 <col:61> 'int' 1
|   |         `-ImplicitCastExpr 0x178182666f0 <col:65, col:69> 'int' <IntegralCast>
|   |           `-ImplicitCastExpr 0x178182666d8 <col:65, col:69> 'unsigned char' <LValueToRValue>
|   |             `-ArraySubscriptExpr 0x17818266620 <col:65, col:69> 'unsigned char' lvalue
|   |               |-ImplicitCastExpr 0x178182665f0 <col:65> 'unsigned char *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x178182665b0 <col:65> 'unsigned char *' lvalue ParmVar 0x1781825bdb8 'to' 'unsigned char *'
|   |               `-ImplicitCastExpr 0x17818266608 <col:68> 'int' <LValueToRValue>
|   |                 `-DeclRefExpr 0x178182665d0 <col:68> 'int' lvalue Var 0x1781825c478 'i' 'int'
|   |-CallExpr 0x17818266978 <line:270:5, col:42> 'int'
|   | |-ImplicitCastExpr 0x17818266960 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x178182668a8 <col:5> 'int ()' Function 0x178182667e0 'err_clear_last_constant_time' 'int ()'
|   | `-BinaryOperator 0x17818266940 <col:34, col:38> 'unsigned int' '&'
|   |   |-ImplicitCastExpr 0x17818266928 <col:34> 'unsigned int' <IntegralCast>
|   |   | `-IntegerLiteral 0x178182668c8 <col:34> 'int' 1
|   |   `-ImplicitCastExpr 0x17818266910 <col:38> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x178182668f0 <col:38> 'unsigned int' lvalue Var 0x1781825c7d0 'good' 'unsigned int'
|   |-LabelStmt 0x178182669c8 <line:271:2, col:9> 'cleanup'
|   | `-NullStmt 0x178182669c0 <col:9>
|   |-CallExpr 0x17818266a58 <line:273:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x17818266a40 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x178182669e0 <col:5> 'int ()' Function 0x1781825b0b0 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x17818266a88 <col:24> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x17818266a00 <col:24> 'unsigned char *' lvalue Var 0x1781825caf8 'db' 'unsigned char *'
|   | `-ImplicitCastExpr 0x17818266aa0 <col:28> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x17818266a20 <col:28> 'int' lvalue Var 0x1781825c4f8 'dblen' 'int'
|   |-CallExpr 0x17818266b30 <line:274:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x17818266b18 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x17818266ab8 <col:5> 'int ()' Function 0x1781825b0b0 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x17818266b60 <col:24> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x17818266ad8 <col:24> 'unsigned char *' lvalue Var 0x1781825cc18 'em' 'unsigned char *'
|   | `-ImplicitCastExpr 0x17818266b78 <col:28> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x17818266af8 <col:28> 'int' lvalue ParmVar 0x1781825c010 'num' 'int'
|   `-ReturnStmt 0x17818266cb0 <line:276:5, col:51>
|     `-CallExpr 0x17818266c48 <col:12, col:51> 'int'
|       |-ImplicitCastExpr 0x17818266c30 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x17818266b90 <col:12> 'int ()' Function 0x17818264800 'constant_time_select_int' 'int ()'
|       |-ImplicitCastExpr 0x17818266c80 <col:37> 'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x17818266bb0 <col:37> 'unsigned int' lvalue Var 0x1781825c7d0 'good' 'unsigned int'
|       |-ImplicitCastExpr 0x17818266c98 <col:43> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x17818266bd0 <col:43> 'int' lvalue Var 0x1781825c5a0 'mlen' 'int'
|       `-UnaryOperator 0x17818266c18 <col:49, col:50> 'int' prefix '-'
|         `-IntegerLiteral 0x17818266bf0 <col:50> 'int' 1
`-FunctionDecl 0x17818269170 <line:279:1, line:319:1> line:279:5 invalid PKCS1_MGF1 'int (unsigned char *, long, const unsigned char *, long, const int *)'
  |-ParmVarDecl 0x17818266df8 <col:16, col:31> col:31 used mask 'unsigned char *'
  |-ParmVarDecl 0x17818266e78 <col:37, col:42> col:42 used len 'long'
  |-ParmVarDecl 0x17818268f60 <line:280:16, col:37> col:37 used seed 'const unsigned char *'
  |-ParmVarDecl 0x17818268fe0 <col:43, col:48> col:48 used seedlen 'long'
  |-ParmVarDecl 0x17818269060 <col:57, col:71> col:71 invalid dgst 'const int *'
  `-CompoundStmt 0x178182651b0 <line:281:1, line:319:1>
    |-DeclStmt 0x178182693a8 <line:282:5, col:23>
    | |-VarDecl 0x17818269268 <col:5, col:10> col:10 used i 'long'
    | `-VarDecl 0x178182692e8 <col:5, col:22> col:13 used outlen 'long' cinit
    |   `-ImplicitCastExpr 0x17818269378 <col:22> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x17818269350 <col:22> 'int' 0
    |-DeclStmt 0x178182694c8 <line:283:5, col:25>
    | `-VarDecl 0x17818269460 <col:5, col:24> col:19 used cnt 'unsigned char [4]'
    |-DeclStmt 0x178182696a8 <line:285:5, col:38>
    | `-VarDecl 0x17818269640 <col:5, col:19> col:19 invalid md 'unsigned char'
    |-DeclStmt 0x17818269740 <line:286:5, col:14>
    | `-VarDecl 0x178182696d8 <col:5, col:9> col:9 used mdlen 'int'
    |-DeclStmt 0x17818269818 <line:287:5, col:16>
    | `-VarDecl 0x17818269770 <col:5, col:15> col:9 used rv 'int' cinit
    |   `-UnaryOperator 0x17818269800 <col:14, col:15> 'int' prefix '-'
    |     `-IntegerLiteral 0x178182697d8 <col:15> 'int' 1
    |-IfStmt 0x17818269938 <line:289:5, line:290:14>
    | |-OpaqueValueExpr 0x17818269920 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x17818269908 <col:9, col:14> 'err' 0x178182698b8
    |-IfStmt 0x17818269a40 <line:292:5, line:293:14>
    | |-BinaryOperator 0x17818269a08 <line:292:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x178182699f0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x178182699a8 <col:9> 'int' lvalue Var 0x178182696d8 'mdlen' 'int'
    | | `-IntegerLiteral 0x178182699c8 <col:17> 'int' 0
    | `-GotoStmt 0x17818269a28 <line:293:9, col:14> 'err' 0x178182698b8
    |-ForStmt 0x17818264f60 <line:294:5, line:313:5>
    | |-BinaryOperator 0x17818269ad0 <line:294:10, col:14> 'long' '='
    | | |-DeclRefExpr 0x17818269a58 <col:10> 'long' lvalue Var 0x17818269268 'i' 'long'
    | | `-ImplicitCastExpr 0x17818269ab8 <col:14> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x17818269a90 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x17818269b90 <col:17, col:26> 'int' '<'
    | | |-ImplicitCastExpr 0x17818269b60 <col:17> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x17818269af0 <col:17> 'long' lvalue Var 0x178182692e8 'outlen' 'long'
    | | `-ImplicitCastExpr 0x17818269b78 <col:26> 'long' <LValueToRValue>
    | |   `-DeclRefExpr 0x17818269b28 <col:26> 'long' lvalue ParmVar 0x17818266e78 'len' 'long'
    | |-UnaryOperator 0x17818269bd0 <col:31, col:32> 'long' postfix '++'
    | | `-DeclRefExpr 0x17818269bb0 <col:31> 'long' lvalue Var 0x17818269268 'i' 'long'
    | `-CompoundStmt 0x17818264f20 <col:36, line:313:5>
    |   |-BinaryOperator 0x17818269e00 <line:295:9, col:49> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x17818269c60 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x17818269c48 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x17818269be8 <col:9> 'unsigned char [4]' lvalue Var 0x17818269460 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x17818269c20 <col:13> 'int' 0
    |   | `-CStyleCastExpr 0x17818269dd8 <col:18, col:49> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x17818269db8 <col:33, col:49> 'long'
    |   |     `-BinaryOperator 0x17818269d60 <col:34, col:46> 'long' '&'
    |   |       |-ParenExpr 0x17818269d00 <col:34, col:42> 'long'
    |   |       | `-BinaryOperator 0x17818269ce0 <col:35, col:40> 'long' '>>'
    |   |       |   |-ImplicitCastExpr 0x17818269cc8 <col:35> 'long' <LValueToRValue>
    |   |       |   | `-DeclRefExpr 0x17818269c80 <col:35> 'long' lvalue Var 0x17818269268 'i' 'long'
    |   |       |   `-IntegerLiteral 0x17818269ca0 <col:40> 'int' 24
    |   |       `-ImplicitCastExpr 0x17818269d48 <col:46> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x17818269d20 <col:46> 'int' 255
    |   |-BinaryOperator 0x17818267020 <line:296:9, col:49> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x17818269e80 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x17818269e68 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x17818269e20 <col:9> 'unsigned char [4]' lvalue Var 0x17818269460 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x17818269e40 <col:13> 'int' 1
    |   | `-CStyleCastExpr 0x17818266ff8 <col:18, col:49> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x17818266fd8 <col:33, col:49> 'long'
    |   |     `-BinaryOperator 0x17818266f80 <col:34, col:46> 'long' '&'
    |   |       |-ParenExpr 0x17818269f20 <col:34, col:42> 'long'
    |   |       | `-BinaryOperator 0x17818269f00 <col:35, col:40> 'long' '>>'
    |   |       |   |-ImplicitCastExpr 0x17818269ee8 <col:35> 'long' <LValueToRValue>
    |   |       |   | `-DeclRefExpr 0x17818269ea0 <col:35> 'long' lvalue Var 0x17818269268 'i' 'long'
    |   |       |   `-IntegerLiteral 0x17818269ec0 <col:40> 'int' 16
    |   |       `-ImplicitCastExpr 0x17818266f68 <col:46> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x17818266f40 <col:46> 'int' 255
    |   |-BinaryOperator 0x17818267258 <line:297:9, col:46> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x178182670a0 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x17818267088 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x17818267040 <col:9> 'unsigned char [4]' lvalue Var 0x17818269460 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x17818267060 <col:13> 'int' 2
    |   | `-ImplicitCastExpr 0x17818267240 <col:18, col:46> 'unsigned char' <IntegralCast>
    |   |   `-BinaryOperator 0x17818267220 <col:18, col:46> 'int' '&'
    |   |     |-ImplicitCastExpr 0x17818267208 <col:18, col:42> 'int' <IntegralCast>
    |   |     | `-CStyleCastExpr 0x178182671b8 <col:18, col:42> 'unsigned char' <IntegralCast>
    |   |     |   `-ParenExpr 0x17818267198 <col:33, col:42> 'long'
    |   |     |     `-ParenExpr 0x17818267140 <col:34, col:41> 'long'
    |   |     |       `-BinaryOperator 0x17818267120 <col:35, col:40> 'long' '>>'
    |   |     |         |-ImplicitCastExpr 0x17818267108 <col:35> 'long' <LValueToRValue>
    |   |     |         | `-DeclRefExpr 0x178182670c0 <col:35> 'long' lvalue Var 0x17818269268 'i' 'long'
    |   |     |         `-IntegerLiteral 0x178182670e0 <col:40> 'int' 8
    |   |     `-IntegerLiteral 0x178182671e0 <col:46> 'int' 255
    |   |-BinaryOperator 0x17818267410 <line:298:9, col:41> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x178182672d8 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x178182672c0 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x17818267278 <col:9> 'unsigned char [4]' lvalue Var 0x17818269460 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x17818267298 <col:13> 'int' 3
    |   | `-CStyleCastExpr 0x178182673e8 <col:18, col:41> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x178182673c8 <col:33, col:41> 'long'
    |   |     `-BinaryOperator 0x17818267370 <col:34, col:38> 'long' '&'
    |   |       |-ImplicitCastExpr 0x17818267340 <col:34> 'long' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x178182672f8 <col:34> 'long' lvalue Var 0x17818269268 'i' 'long'
    |   |       `-ImplicitCastExpr 0x17818267358 <col:38> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x17818267318 <col:38> 'int' 255
    |   |-IfStmt 0x178182677e0 <line:299:9, line:302:18>
    |   | |-OpaqueValueExpr 0x178182677c8 <<invalid sloc>> '_Bool'
    |   | `-GotoStmt 0x178182677b0 <col:13, col:18> 'err' 0x178182698b8
    |   `-IfStmt 0x17818267f08 <line:303:9, line:312:9> has_else
    |     |-BinaryOperator 0x178182678d8 <line:303:13, col:31> 'int' '<='
    |     | |-BinaryOperator 0x17818267880 <col:13, col:22> 'long' '+'
    |     | | |-ImplicitCastExpr 0x17818267838 <col:13> 'long' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x178182677f8 <col:13> 'long' lvalue Var 0x178182692e8 'outlen' 'long'
    |     | | `-ImplicitCastExpr 0x17818267868 <col:22> 'long' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x17818267850 <col:22> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x17818267818 <col:22> 'int' lvalue Var 0x178182696d8 'mdlen' 'int'
    |     | `-ImplicitCastExpr 0x178182678c0 <col:31> 'long' <LValueToRValue>
    |     |   `-DeclRefExpr 0x178182678a0 <col:31> 'long' lvalue ParmVar 0x17818266e78 'len' 'long'
    |     |-CompoundStmt 0x17818267c20 <col:36, line:307:9>
    |     | |-IfStmt 0x17818267b68 <line:304:13, line:305:22>
    |     | | |-OpaqueValueExpr 0x17818267b50 <<invalid sloc>> '_Bool'
    |     | | `-GotoStmt 0x17818267b38 <col:17, col:22> 'err' 0x178182698b8
    |     | `-CompoundAssignOperator 0x17818267bf0 <line:306:13, col:23> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
    |     |   |-DeclRefExpr 0x17818267b80 <col:13> 'long' lvalue Var 0x178182692e8 'outlen' 'long'
    |     |   `-ImplicitCastExpr 0x17818267bd8 <col:23> 'long' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x17818267bc0 <col:23> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x17818267ba0 <col:23> 'int' lvalue Var 0x178182696d8 'mdlen' 'int'
    |     `-CompoundStmt 0x17818267ee8 <line:307:16, line:312:9>
    |       |-IfStmt 0x17818267d18 <line:308:13, line:309:22>
    |       | |-OpaqueValueExpr 0x17818267d00 <<invalid sloc>> '_Bool'
    |       | `-GotoStmt 0x17818267ce8 <col:17, col:22> 'err' 0x178182698b8
    |       `-BinaryOperator 0x17818267ec8 <line:311:13, col:22> 'long' '='
    |         |-DeclRefExpr 0x17818267e70 <col:13> 'long' lvalue Var 0x178182692e8 'outlen' 'long'
    |         `-ImplicitCastExpr 0x17818267eb0 <col:22> 'long' <LValueToRValue>
    |           `-DeclRefExpr 0x17818267e90 <col:22> 'long' lvalue ParmVar 0x17818266e78 'len' 'long'
    |-BinaryOperator 0x17818264ff8 <line:314:5, col:10> 'int' '='
    | |-DeclRefExpr 0x17818264f98 <col:5> 'int' lvalue Var 0x17818269770 'rv' 'int'
    | `-IntegerLiteral 0x17818264fd0 <col:10> 'int' 0
    |-LabelStmt 0x17818265040 <line:315:2, col:5> 'err'
    | `-NullStmt 0x17818265038 <col:5>
    `-ReturnStmt 0x178182651a0 <line:318:5, col:12>
      `-ImplicitCastExpr 0x17818265188 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x17818265168 <col:12> 'int' lvalue Var 0x17818269770 'rv' 'int'
