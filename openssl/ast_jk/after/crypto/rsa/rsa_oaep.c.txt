TranslationUnitDecl 0x142e07ae068 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x142e07ae900 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x142e07ae600 '__int128'
|-TypedefDecl 0x142e07ae970 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x142e07ae620 'unsigned __int128'
|-TypedefDecl 0x142e07aeca8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x142e07aea60 'struct __NSConstantString_tag'
|   `-Record 0x142e07ae9c8 '__NSConstantString_tag'
|-TypedefDecl 0x142e07aed18 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x142e07ae240 'unsigned long long'
|-TypedefDecl 0x142e07aedb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x142e07aed70 'char *'
|   `-BuiltinType 0x142e07ae100 'char'
|-TypedefDecl 0x142e07aee20 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x142e07aed70 'char *'
|   `-BuiltinType 0x142e07ae100 'char'
|-TypedefDecl 0x142e07aeee0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x142e07ae240 'unsigned long long'
|-TypedefDecl 0x142e07aef50 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x142e07aed70 'char *'
|   `-BuiltinType 0x142e07ae100 'char'
|-FunctionDecl 0x142e21e0430 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x142e21e04d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x142e21e0540 <col:21> Implicit
|-FunctionDecl 0x142e21e0598 prev 0x142e21e0430 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x142e21e02c0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x142e21e0688 <col:21> Inherited Implicit
|-TypedefDecl 0x142e21e06c8 prev 0x142e07aed18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x142e07ae240 'unsigned long long'
|-TypedefDecl 0x142e21e0770 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x142e21e0740 'size_t' sugar
|   |-Typedef 0x142e21e06c8 'size_t'
|   `-BuiltinType 0x142e07ae240 'unsigned long long'
|-TypedefDecl 0x142e21e07e0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x142e07ae1a0 'long long'
|-TypedefDecl 0x142e21e0850 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x142e07ae1a0 'long long'
|-TypedefDecl 0x142e21e08c0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x142e07ae1e0 'unsigned short'
|-TypedefDecl 0x142e21e0930 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x142e07ae1e0 'unsigned short'
|-TypedefDecl 0x142e21e09a0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x142e07ae1e0 'unsigned short'
|-TypedefDecl 0x142e21e0a10 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x142e07ae160 'int'
|-TypedefDecl 0x142e21e0a80 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x142e07ae180 'long'
|-TypedefDecl 0x142e21e0af0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x142e07ae1a0 'long long'
|-TypedefDecl 0x142e21e0b80 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x142e21e0b50 '__time64_t' sugar
|   |-Typedef 0x142e21e0af0 '__time64_t'
|   `-BuiltinType 0x142e07ae1a0 'long long'
|-FunctionDecl 0x142e21e0cf8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x142e21e0f18 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x142e2218270 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x142e21e1058 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x142e21e10d0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x142e21e1148 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x142e21e11c8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x142e2218010 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x142e2218350 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x142e2218410 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x142e2218580 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x142e2218530 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x142e22184d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x142e22183f0 'struct threadlocaleinfostruct'
|       `-Record 0x142e22230c0 'threadlocaleinfostruct'
|-TypedefDecl 0x142e2218690 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x142e2218640 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x142e22185e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x142e22184b0 'struct threadmbcinfostruct'
|       `-Record 0x142e2218410 'threadmbcinfostruct'
|-RecordDecl 0x142e22186e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x142e22187a0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x142e2218860 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x142e22188f0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x142e2218980 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x142e2218a38 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x142e22189e0 'struct localeinfo_struct' sugar
|   `-RecordType 0x142e2218840 'struct localeinfo_struct'
|     `-Record 0x142e22187a0 'localeinfo_struct'
|-TypedefDecl 0x142e2218b10 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x142e2218ac0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x142e22189e0 'struct localeinfo_struct' sugar
|     `-RecordType 0x142e2218840 'struct localeinfo_struct'
|       `-Record 0x142e22187a0 'localeinfo_struct'
|-RecordDecl 0x142e2218b88 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x142e2218c40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x142e2218cb8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x142e2218d78 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x142e2218e10 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x142e2218e80 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x142e2218f38 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x142e2218ee0 'struct localerefcount' sugar
|   `-RecordType 0x142e2218c20 'struct localerefcount'
|     `-Record 0x142e2218b88 'localerefcount'
|-RecordDecl 0x142e22230c0 prev 0x142e2218350 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x142e2223140 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x142e22231b8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x142e2223228 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x142e2223298 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x142e2223308 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x142e22234c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x142e2223538 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x142e22235a8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x142e2223618 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x142e2223688 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x142e22236f8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x142e2223750 parent 0x142e07ae068 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x142e22238e0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x142e2223950 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x142e22239c0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x142e2223a30 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x142e2223ad0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x142e2223b40 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x142e2223c50 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x142e2223d88 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x142e2223e38 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x142e2223de0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x142e22183f0 'struct threadlocaleinfostruct'
|     `-Record 0x142e22230c0 'threadlocaleinfostruct'
|-RecordDecl 0x142e2223ed0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x142e2223f90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x142e2224008 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x142e22240d0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x142e2224140 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x142e22241b0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x142e2224220 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x142e2224290 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x142e2224300 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x142e2224370 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x142e2224420 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x142e22243d0 'struct _iobuf' sugar
|   `-RecordType 0x142e2223f70 'struct _iobuf'
|     `-Record 0x142e2223ed0 '_iobuf'
|-FunctionDecl 0x142e2224658 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x142e2224728 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x142e07ae1a0 'long long'
|-FunctionDecl 0x142e2224908 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e2224790 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x142e2224c00 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x142e22249e0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x142e2224a58 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x142e2224fb0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x142e2224ce0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x142e2224d60 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x142e2224de0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x142e222c2c0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x142e222c150 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x142e222c4f0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x142e222c3b0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x142e222c6a0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e222c5c0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x142e222c890 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x142e222cb88 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x142e222c960 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x142e222c9e0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x142e222cd40 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e222cc60 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x142e222cef0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e222ce10 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x142e222d0a0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e222cfc0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x142e2228218 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e2228138 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x142e22283a8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x142e2228710 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x142e2228470 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x142e2228568 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x142e2228ac8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x142e22287f0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x142e2228870 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x142e22288e8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x142e2228c88 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e2228ba8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x142e2228f50 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x142e2228d60 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x142e2228de0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x142e222a130 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x142e222a528 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x142e222a5c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x142e222a630 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x142e222a6a8 prev 0x142e222a528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x142e222a300 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x142e222a380 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x142e222a758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e222abd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x142e222a900 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x142e222a980 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x142e222aa00 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x142e222aef0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x142e222af90 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x142e222aff8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x142e222b070 <col:40> Implicit printf 2 3
|-FunctionDecl 0x142e2229120 prev 0x142e222aef0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x142e222acb0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x142e222ad30 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x142e2229218 <col:40> Inherited printf 2 3
|-FunctionDecl 0x142e22293e0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x142e2229260 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x142e22292e0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x142e2229638 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x142e22294c0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x142e2229538 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x142e2229868 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x142e2229718 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x142e2229b60 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x142e2229940 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x142e22299b8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x142e2229ff8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x142e222a098 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x142e222b140 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x142e222b1a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x142e222b210 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x142e222b298 prev 0x142e2229ff8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x142e2229c40 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x142e2229cb8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2229d30 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e2229da8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x142e222b7a0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x142e222b388 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x142e222b400 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e222b478 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e222b4f0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e222b568 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x142e222bc60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x142e222b990 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x142e222ba10 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x142e222ba88 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x142e222bd18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e222d208 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x142e222be60 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x142e222bee0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x142e222bf60 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x142e222bfd8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x142e222d5b0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x142e222d650 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x142e222d6b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x142e222d730 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x142e222d798 prev 0x142e222d5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x142e222d3e8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x142e222d468 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x142e222d978 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x142e222d848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e222ddb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e222dab8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x142e222db38 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x142e222dbd0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e222de70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e222e170 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x142e222dfb0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x142e222e030 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x142e222e460 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e222e248 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x142e222e2c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x142e222e340 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e222e7c0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x142e222e540 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x142e222e618 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x142e222eb78 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x142e222e898 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x142e222e918 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x142e222e998 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x142e222edd8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x142e222ec58 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x142e2227148 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x142e222eea8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x142e222ef28 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x142e222efa8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x142e22273a8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x142e2227228 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x142e2227868 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x142e2227908 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x142e2227970 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x142e22279d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x142e2227a40 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x142e2227ac8 prev 0x142e2227868 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x142e22274b0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x142e2227528 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22275a0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e2227618 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x142e2227c90 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e2227bb0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x142e2227e20 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x142e2227fa8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x142e2230350 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x142e2228078 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x142e22301a0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x142e2230678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x142e2230530 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x142e2230720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2230940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e2230860 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x142e2230b60 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x142e2230a18 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x142e2230d10 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e2230c30 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x142e2230f60 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x142e2230de8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x142e2230e68 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x142e22311a0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x142e2231240 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x142e22312b0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x142e2231318 prev 0x142e22311a0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x142e2231040 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x142e2231408 <col:40> Inherited printf 1 2
|-FunctionDecl 0x142e2231538 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x142e2231458 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x142e2231788 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x142e2231610 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x142e2231688 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x142e2231948 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x142e2231868 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x142e2231b68 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x142e2231a20 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x142e2231db8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x142e2231c40 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x142e2231cb8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x142e2231f78 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x142e2231e98 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x142e22830f0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x142e2232050 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x142e22320d0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x142e22832b0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x142e22831d0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x142e2283540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x142e2283460 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x142e22835e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x142e22837e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x142e2283708 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x142e2283970 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x142e2283c18 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x142e2283cb8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x142e2283d28 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x142e2283d90 prev 0x142e2283c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x142e2283b00 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x142e2283f68 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x142e2283e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2281310 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22810d8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x142e2281150 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e22813c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22815e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x142e2281508 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x142e2281838 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22816c0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x142e2281738 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2281bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x142e22819d0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x142e2281a50 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x142e2281ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2281ed0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x142e2281df0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x142e2284178 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x142e2284030 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x142e2284360 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x142e22847b0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x142e2284428 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x142e22844a8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x142e2284528 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x142e22845a0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x142e2284c30 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x142e22848a0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x142e2284918 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2284990 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e2284a10 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x142e227cfc0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x142e2284d20 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x142e2284d98 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e2284e18 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x142e227d188 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x142e227d0a8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x142e227d560 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x142e227d600 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x142e227d668 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x142e227d6e0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x142e227d748 prev 0x142e227d560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x142e227d320 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x142e227d3a0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x142e227d928 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x142e227d7f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e227dd18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e227da38 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x142e227dab8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x142e227db30 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e227ddd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2282110 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x142e227df18 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x142e2282010 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x142e2282408 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22821f0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x142e2282270 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x142e22822e8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2282898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x142e22825b0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x142e2282628 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22826a8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x142e2282950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2282f20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2282b90 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x142e2282c08 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2282c88 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x142e2282d00 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e2285040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22853a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x142e2285188 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x142e2285200 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e2285280 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x142e2285738 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2285488 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x142e2285500 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2285580 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x142e22855f8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2285998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x142e2285a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2285cf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x142e2285b80 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x142e227fff0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x142e2285dc8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x142e2285e40 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x142e2280270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x142e2280190 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x142e2280318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22805d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x142e2280460 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x142e22804d8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x142e22809f0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x142e2280a90 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x142e2280af8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x142e2280b60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x142e2280be0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x142e2280c48 prev 0x142e22809f0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x142e22806b0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x142e2280730 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x142e22807a8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x142e2280d48 <col:40> Inherited printf 2 0
|-FunctionDecl 0x142e227dfd0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x142e227e070 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x142e227e0d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x142e227e140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x142e227e1c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x142e227e228 prev 0x142e227dfd0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x142e2280d90 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x142e2280e10 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x142e2280e88 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x142e227e328 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x142e227e588 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x142e227e370 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x142e227e3f0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x142e227e468 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e227e880 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x142e227e668 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x142e227e6e8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x142e227e760 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e227ebc8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x142e227ec68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x142e227ecd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x142e227ed48 <col:40> Implicit printf 1 0
|-FunctionDecl 0x142e227edb0 prev 0x142e227ebc8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x142e227e968 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x142e227e9e0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x142e227eea8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x142e2286188 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x142e2286228 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x142e2286290 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x142e2286308 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x142e2286370 prev 0x142e2286188 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x142e227eef8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x142e2286050 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x142e2286468 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x142e2286630 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x142e22864b8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x142e2286530 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2286888 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x142e2286710 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x142e2286788 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2286de8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x142e2286e88 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x142e2286ef0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x142e2286f58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x142e2286fc0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x142e227efe0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x142e227f048 prev 0x142e2286de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x142e2286a28 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x142e2286aa0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2286b20 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x142e2286b98 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x142e227f238 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x142e227f108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e227f6a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x142e227f288 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x142e227f300 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e227f378 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e227f3f8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x142e227f470 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e227fae8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x142e227f7a0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x142e227f818 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e227f890 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e227f910 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x142e227f988 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e227feb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x142e227fca0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x142e227fd18 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e227fd98 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x142e227ff70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22884e0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x142e2288230 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x142e22882a8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2288328 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x142e22883a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x142e22885a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2288998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x142e22886e8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x142e2288760 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22887e0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x142e2288858 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2288d58 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x142e2288a88 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x142e2288b08 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x142e2288b80 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e228d160 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x142e228d200 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x142e228d268 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x142e228d2e0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x142e228d348 prev 0x142e228d160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x142e2288f00 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x142e2288f80 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x142e228d528 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x142e228d3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e228d950 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x142e228d9f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x142e228da58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x142e228dac0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x142e228db40 <col:94> Implicit printf 2 0
|-FunctionDecl 0x142e228dba8 prev 0x142e228d950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x142e228d638 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x142e228d6b8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x142e228d730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x142e228dd90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x142e228dc60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2289080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x142e2289120 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x142e2289188 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x142e22891f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x142e2289270 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x142e22892d8 prev 0x142e2289080 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x142e228dde0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x142e228de60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x142e228ded8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x142e22893d8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x142e22895a0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x142e2289428 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x142e22894a0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2289898 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x142e2289680 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x142e22896f8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e2289778 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x142e2289c30 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x142e2289980 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x142e22899f8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2289a78 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x142e2289af0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2289e98 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x142e2289d18 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x142e2289d98 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x142e228b0a0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x142e2289f78 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x142e228b390 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x142e228b178 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x142e228b1f0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e228b270 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x142e228b688 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x142e228b470 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x142e228b4f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x142e228b568 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e228b8e8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x142e228b770 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x142e228b7e8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e228bc78 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x142e228b9c8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x142e228ba40 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e228bac0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x142e228bb38 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e228be48 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x142e228bd68 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x142e2287060 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x142e228bf20 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x142e228bf98 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2287220 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x142e2287140 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x142e22873b0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x142e22875f8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2287480 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x142e22874f8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2287850 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22876d8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x142e2287750 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2287aa8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2287930 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x142e22879a8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2287e58 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2287b88 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x142e2287c00 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e2287c78 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2290210 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2287f40 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x142e2287fb8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22900f0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2290508 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22902f8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x142e2290370 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22903e8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2290800 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22905e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x142e2290668 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x142e22906e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2290af8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22908e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x142e2290960 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x142e22909d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2290df0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2290bd8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x142e2290c58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x142e2290cd0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2293280 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2290ed0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x142e2290f50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x142e2290fc8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e2291040 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2293618 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2293368 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x142e22933e8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x142e2293460 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22934d8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22939b0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2293700 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x142e2293780 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x142e22937f8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e2293870 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2293e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2293b60 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x142e2293be0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x142e2293c58 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e2293f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e228c3c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2294048 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x142e228c0b0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e228c130 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x142e228c1a8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e228c760 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e228c4b0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x142e228c528 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e228c5a8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x142e228c620 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e228ccb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e228c950 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x142e228c9d0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x142e228ca48 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x142e228cac0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x142e228cd70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2291338 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e228ceb8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x142e228cf30 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e228cfb0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x142e228d028 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e2291100 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2291778 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2291430 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x142e22914a8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2291528 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x142e22915a0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e2291618 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22919e8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2291870 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x142e22918e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2291c40 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2291ac8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x142e2291b40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2291f30 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2291d20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x142e2291d98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e2291e10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2294260 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2292018 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x142e2292090 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e2294140 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22946b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2294408 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x142e2294480 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2294500 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x142e2294578 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e2294778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2294b70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22948c0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x142e2294938 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22949b8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x142e2294a30 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2292110 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x142e2294c60 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x142e2294cd8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2294d50 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2294dd0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x142e2294e48 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e2292650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2292308 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x142e2292380 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2292400 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x142e2292478 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x142e22924f0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x142e2292718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2292b98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2292868 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x142e22928e0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2292960 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x142e22929d8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e2292a50 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e228f140 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e2292c90 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x142e2292d08 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2292d80 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2292e00 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x142e2292e78 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e2292ef0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e228f500 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x142e228f238 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x142e228f2b0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x142e228f330 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x142e228f770 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x142e228f600 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x142e228f988 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x142e228fc68 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x142e228fa50 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x142e228fac8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x142e228feb0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x142e228fd40 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x142e2295140 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x142e228ff80 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x142e22952c8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x142e2295500 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x142e2295390 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x142e2295408 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x142e22956b0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x142e22955d8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x142e2295958 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x142e2295780 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x142e22957f8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x142e2295d00 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x142e2295a30 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x142e2295ab0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x142e2295b28 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x142e2296000 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x142e2295de0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x142e2295e58 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x142e229a348 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x142e22960d8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x142e229a1a0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x142e229a650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x142e229a4e0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x142e229a6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e229a9b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x142e229a838 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x142e229acc0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e229aa88 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x142e229ab00 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x142e229af10 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e229ad98 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x142e229ae10 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x142e2296150 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x142e229afe8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x142e2296300 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x142e2296220 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x142e22964b0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x142e22963d0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x142e2296848 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2296580 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x142e22965f8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2296670 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2296b38 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2296928 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x142e22969a0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2296a18 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2296e28 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2296c18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x142e2296c90 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2296d08 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2297160 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2296f08 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x142e2296f80 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2296ff8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2297460 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2297240 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22972b8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22976b0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2297538 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22975b0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2297900 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2297788 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2297800 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2297b50 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e22979d8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2297a50 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2297f08 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e2297c28 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x142e2297ca0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e2297d18 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x142e2299390 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2297fe8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x142e2298060 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22980d8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2299180 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2299748 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2299478 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x142e22994f0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2299568 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2299a38 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2299828 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x142e22998a0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2299918 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2299d28 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e2299b18 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e2299b90 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e2299c08 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x142e229a0b0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2299e08 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e2299e80 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e2299ef8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2299f70 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e229b550 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e229b1c8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e229b240 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e229b2b8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e229b330 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x142e229ba58 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e229b638 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e229b6b0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e229b728 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e229b7a0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e229b818 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e229be18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e229bc08 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x142e229bc80 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e229bcf8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x142e229bed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22983a0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e229c0d0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x142e2298170 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22981e8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e2298260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x142e2298460 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e2298718 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e22985a0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x142e2298618 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x142e22988d0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x142e22987f0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x142e2298bb0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e22989a0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x142e2298a18 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2298a90 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e2298e08 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e2298c90 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e2298d08 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e229f000 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e2298ee0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e2298f58 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e2298fd0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x142e229f388 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e229f0e0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e229f158 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e229f1d0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e229f248 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e229f550 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x142e229f470 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x142e229f798 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e229f620 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e229f698 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e229faa0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e229f870 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e229f8e8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e229fcf0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e229fb78 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e229fbf0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e229ff40 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e229fdc8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e229fe40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22a3338 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22a3068 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a30e0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22a3158 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22a3628 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22a3418 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a3490 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22a3508 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22a3918 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22a3708 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a3780 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22a37f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22a3cd8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a39f8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x142e22a3a70 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22a3ae8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e229dff0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a3db8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x142e22a3e30 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22a3ea8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e229e2e0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e229e0d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x142e229e148 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e229e1c0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e229e730 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e229e3c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x142e229e438 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e229e4b0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e229e528 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e229eac0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e229e818 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x142e229e890 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e229e908 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e229e980 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e229ee50 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e229eba8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x142e229ec20 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e229ec98 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e229ed10 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22a5370 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e229ef38 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e22a5060 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a50d8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22a5150 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22a5700 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a5458 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e22a54d0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a5548 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22a55c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22a5a90 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a57e8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e22a5860 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a58d8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22a5950 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22a5f98 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22a5b78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e22a5bf0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a5c68 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a5ce0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22a5d58 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22a63d8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22a6098 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e22a6110 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a6188 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a6200 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22a6278 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22a6808 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22a64c8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e22a6540 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a65b8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a6630 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22a66a8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22a6a70 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a68f8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22a6970 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22a6cc0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a6b48 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22a6bc0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22a6fa8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22a6d98 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a6e10 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22a6e88 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22a03a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a0100 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e22a0178 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a01f0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a0268 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e22a0468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22a09d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a05b0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e22a0628 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a06a0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a0718 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22a0790 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22a0f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22a0bd0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e22a0c48 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a0cc0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a0d38 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x142e22a0db0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x142e22a1020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22a1630 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22a1168 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x142e22a11e0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a1258 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a12d0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a1348 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22a13c0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22a1b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e22a18f8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x142e22a1970 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x142e22a1be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x142e22a1cf8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x142e22a42b8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e22a1fb0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x142e22a4060 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a40d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x142e22a4370 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x142e22a4488 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x142e22a4a28 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a4748 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x142e22a47c0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a4838 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x142e22a4ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x142e22a4c00 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x142e22a82a0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22a4ec0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x142e22a4f38 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a4fb0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x142e22a8090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x142e22a8360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x142e22a8480 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x142e22a8788 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x142e22a85a8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x142e22a8620 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a8698 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x142e22a9340 <line:37:1, line:44:1>
|   |-DeclStmt 0x142e22a88d0 <line:38:5, col:21>
|   | `-VarDecl 0x142e22a8868 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x142e22a8968 <line:39:5, col:13>
|   | `-VarDecl 0x142e22a8900 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x142e22a8cc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x142e22a8ca8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x142e22a8bc0 <col:34> '<builtin fn type>' Function 0x142e22a8a58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x142e22a8bf8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x142e22a8868 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x142e22a8c30 <col:29> 'const wchar_t *' lvalue ParmVar 0x142e22a8698 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x142e22a8f80 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x142e22a8cf0 <col:5> 'int' lvalue Var 0x142e22a8900 '_Ret' 'int'
|   | `-CallExpr 0x142e22a8ec0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x142e22a8ea8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x142e22a8d28 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x142e22a5f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x142e22a8f08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22a8d48 <col:27> 'wchar_t *' lvalue ParmVar 0x142e22a85a8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x142e22a8f20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22a8d68 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x142e22a8620 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x142e22a8f38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22a8d88 <col:44> 'const wchar_t *' lvalue ParmVar 0x142e22a8698 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x142e22a8f50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x142e22a8e10 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x142e22a8de8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x142e22a8da8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x142e22a8f68 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x142e22a8e30 <col:59> 'va_list':'char *' lvalue Var 0x142e22a8868 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x142e22a92d0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x142e22a92b8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x142e22a9208 <col:34> '<builtin fn type>' Function 0x142e22a90a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x142e22a9240 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x142e22a8868 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x142e22a9330 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x142e22a9318 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x142e22a92f8 <col:12> 'int' lvalue Var 0x142e22a8900 '_Ret' 'int'
|-FunctionDecl 0x142e22a8a58 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x142e22a8af8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x142e22a8b68 <col:34> Implicit
|-FunctionDecl 0x142e22a90a0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x142e22a9140 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x142e22a91b0 <col:34> Implicit
|-FunctionDecl 0x142e22a9638 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x142e22a9390 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x142e22a9408 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a9480 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a94f8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x142e22a9920 <line:50:1, line:52:1>
|   `-ReturnStmt 0x142e22a9910 <line:51:5, col:62>
|     `-CallExpr 0x142e22a9850 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x142e22a9838 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x142e22a9710 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x142e22a5f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x142e22a9898 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22a9730 <col:27> 'wchar_t *' lvalue ParmVar 0x142e22a9390 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x142e22a98b0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22a9750 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x142e22a9408 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x142e22a98c8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22a9770 <col:44> 'const wchar_t *' lvalue ParmVar 0x142e22a9480 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x142e22a98e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x142e22a97f8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x142e22a97d0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x142e22a9790 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x142e22a98f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x142e22a9818 <col:59> 'va_list':'char *' lvalue ParmVar 0x142e22a94f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x142e22a9bc0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x142e22a9948 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x142e22a99c0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22a9a38 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a9ab0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x142e22ae198 <line:61:1, line:68:1>
|   |-DeclStmt 0x142e22a9d10 <line:62:5, col:21>
|   | `-VarDecl 0x142e22a9ca8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x142e22a9da8 <line:63:5, col:13>
|   | `-VarDecl 0x142e22a9d40 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x142e22a9e50 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x142e22a9e38 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x142e22a9dc0 <col:34> '<builtin fn type>' Function 0x142e22a8a58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x142e22a9de0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x142e22a9ca8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x142e22a9e18 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x142e22a9ab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x142e22aa050 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x142e22a9e80 <col:5> 'int' lvalue Var 0x142e22a9d40 '_Ret' 'int'
|   | `-CallExpr 0x142e22a9f90 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x142e22a9f78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x142e22a9eb8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x142e22a5f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x142e22a9fd8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22a9ed8 <col:27> 'wchar_t *' lvalue ParmVar 0x142e22a9948 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x142e22a9ff0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22a9ef8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x142e22a99c0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x142e22aa008 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22a9f18 <col:44> 'const wchar_t *' lvalue ParmVar 0x142e22a9a38 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x142e22aa020 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22a9f38 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x142e22a9ab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x142e22aa038 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x142e22a9f58 <col:64> 'va_list':'char *' lvalue Var 0x142e22a9ca8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x142e22ae128 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x142e22ae110 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x142e22aa070 <col:34> '<builtin fn type>' Function 0x142e22a90a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x142e22ae0f0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x142e22a9ca8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x142e22ae188 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x142e22ae170 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x142e22ae150 <col:12> 'int' lvalue Var 0x142e22a9d40 '_Ret' 'int'
|-FunctionDecl 0x142e22ae528 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x142e22ae1e8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x142e22ae260 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22ae2d8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22ae350 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x142e22ae3c8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x142e22ae7b0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x142e22ae7a0 <line:75:5, col:67>
|     `-CallExpr 0x142e22ae6e0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x142e22ae6c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x142e22ae608 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x142e22a5f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x142e22ae728 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22ae628 <col:27> 'wchar_t *' lvalue ParmVar 0x142e22ae1e8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x142e22ae740 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22ae648 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x142e22ae260 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x142e22ae758 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22ae668 <col:44> 'const wchar_t *' lvalue ParmVar 0x142e22ae2d8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x142e22ae770 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22ae688 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x142e22ae350 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x142e22ae788 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x142e22ae6a8 <col:64> 'va_list':'char *' lvalue ParmVar 0x142e22ae3c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x142e22ae9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x142e22ae7d8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x142e22ae850 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x142e22aec48 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x142e22aead0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22aeb48 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22aef30 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x142e22aed20 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22aed98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x142e22aee10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x142e22ad258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e22ad0e0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x142e22ad158 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x142e22ad308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22ad718 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22ad508 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x142e22ad580 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22ad5f8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e22ad7d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22ada88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e22ad910 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x142e22ad988 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x142e22add70 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22adb60 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x142e22adbd8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22adc50 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22ab130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e22adf10 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x142e22adf88 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x142e22ab1e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22ab6b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22ab3e0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x142e22ab458 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22ab4d0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e22ab770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22aba28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e22ab8b0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x142e22ab928 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x142e22abd10 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22abb00 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x142e22abb78 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22abbf0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22aa198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e22abeb0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x142e22abf28 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22abfa0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x142e22aa250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22aa7d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22aa450 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x142e22aa4c8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22aa540 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22aa5b8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e22aa890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22aabe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x142e22aa9d0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x142e22aaa48 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e22aaac0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x142e22aaf68 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22aacc0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x142e22aad38 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22aadb0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22aae28 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22a7230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x142e22a7150 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x142e22a72d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22a7650 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a74d8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x142e22a7550 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x142e22a7700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22a7920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x142e22a7840 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x142e22a7b68 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x142e22a79f0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x142e22a7a68 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x142e22a7e68 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x142e22a7c48 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x142e22a7cc0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x142e22b02b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x142e22a8000 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x142e22b0110 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x142e22b0368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22b0770 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x142e22b04b0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x142e22b0528 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x142e22b05a0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x142e22b0bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x142e22b0910 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x142e22b0988 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x142e22b0a00 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x142e22b0c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22af148 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x142e22b0dd0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x142e22b0e48 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x142e22b0ec0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x142e22b0f38 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x142e22af3a0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x142e22af230 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x142e22af5e0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x142e22af470 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x142e22af4e8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x142e22af798 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x142e22af6b8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x142e22afa88 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x142e22af868 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x142e22af8e0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x142e22afcf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x142e22afc20 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x142e22afda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x142e22affb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x142e22afee0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x142e22b8288 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x142e22b0088 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x142e22b8190 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x142e22b84d0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x142e22b8360 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x142e22b83d8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x142e22b8680 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x142e22b85a8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x142e22b8828 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x142e22b8750 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x142e22b89d8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e22b88f8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x142e22b8b88 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x142e22b8aa8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x142e22b8f00 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x142e22b8c60 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x142e22b8cd8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22b8d50 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e22b8dc8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x142e22b6340 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x142e22b8ff0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x142e22b9068 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22b90e0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22b6170 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e22b61e8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x142e22b6650 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x142e22b6430 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x142e22b64b0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x142e22b6530 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x142e22b6810 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x142e22b6730 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x142e22b6b00 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x142e22b68e0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x142e22b6960 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x142e22b69e0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x142e22b6cc0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x142e22b6be0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x142e22b7038 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x142e22b6d98 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x142e22b6e10 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x142e22b6e88 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e22b6f00 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x142e22b42c8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x142e22b4150 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x142e22b41c8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x142e22b4600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x142e22b4480 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x142e22b4500 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x142e22b46b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x142e22b4968 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x142e22b4a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x142e22b4d48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x142e22b4bd0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x142e22b4c50 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x142e22b4df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x142e22b1120 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x142e22b11c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x142e22b1460 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x142e22b1380 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x142e22b1508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x142e22b1788 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x142e22b1828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x142e22b1ad0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x142e22b19f0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x142e22b1b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x142e22b1e58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x142e22b1d78 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x142e22b1f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x142e22b72f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x142e22b7180 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x142e22b71f8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x142e22b73a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x142e22b7668 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x142e22b7708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-RecordDecl 0x142e22b7818 <.//openssl//file_jk/after\crypto\rsa/rsa_locl.h:12:1, line:46:1> line:12:8 invalid struct rsa_st definition
| |-FieldDecl 0x142e22b78e8 <line:17:5, col:9> col:9 pad 'int'
| |-FieldDecl 0x142e22b7958 <line:18:5, col:10> col:10 version 'long'
| |-FieldDecl 0x142e22b79c8 <line:19:5, col:23> col:23 invalid meth 'const int *'
| |-FieldDecl 0x142e22b7a38 <line:21:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x142e22b7aa8 <line:22:5, col:13> col:13 invalid n 'int *'
| |-FieldDecl 0x142e22b7b18 <line:23:5, col:13> col:13 invalid e 'int *'
| |-FieldDecl 0x142e22b7b88 <line:24:5, col:13> col:13 invalid d 'int *'
| |-FieldDecl 0x142e22b7bf8 <line:25:5, col:13> col:13 invalid p 'int *'
| |-FieldDecl 0x142e22b7c68 <line:26:5, col:13> col:13 invalid q 'int *'
| |-FieldDecl 0x142e22b7cd8 <line:27:5, col:13> col:13 invalid dmp1 'int *'
| |-FieldDecl 0x142e22b7d48 <line:28:5, col:13> col:13 invalid dmq1 'int *'
| |-FieldDecl 0x142e22b7db8 <line:29:5, col:13> col:13 invalid iqmp 'int *'
| |-FieldDecl 0x142e22b7e28 <line:31:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x142e22b7e98 <line:32:5, col:9> col:9 references 'int'
| |-FieldDecl 0x142e22b7f08 <line:33:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x142e22b7f78 <line:35:5, col:18> col:18 invalid _method_mod_n 'int *'
| |-FieldDecl 0x142e22b7fe8 <line:36:5, col:18> col:18 invalid _method_mod_p 'int *'
| |-FieldDecl 0x142e22b8058 <line:37:5, col:18> col:18 invalid _method_mod_q 'int *'
| |-FieldDecl 0x142e22b80c8 <line:42:5, col:11> col:11 bignum_data 'char *'
| |-FieldDecl 0x142e22bb1c0 <line:43:5, col:18> col:18 invalid blinding 'int *'
| |-FieldDecl 0x142e22bb230 <line:44:5, col:18> col:18 invalid mt_blinding 'int *'
| `-FieldDecl 0x142e22bb2a0 <line:45:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x142e22bb2f8 <line:48:1, line:91:1> line:48:8 struct rsa_meth_st definition
| |-FieldDecl 0x142e22bb3c8 <line:49:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x142e22bb808 <line:50:5, line:51:65> line:50:11 rsa_pub_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x142e22bbb40 <line:52:5, line:53:65> line:52:11 rsa_pub_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x142e22bbe78 <line:54:5, line:55:66> line:54:11 rsa_priv_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x142e22ba1b0 <line:56:5, line:57:66> line:56:11 rsa_priv_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x142e22ba540 <line:59:5, col:75> col:11 rsa_mod_exp 'int (*)(int *, const int *, int *, int *)'
| |-FieldDecl 0x142e22ba9f0 <line:61:5, line:62:72> line:61:11 bn_mod_exp 'int (*)(int *, const int *, const int *, const int *, int *, int *)'
| |-FieldDecl 0x142e22babc8 <line:64:5, col:26> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x142e22bace0 <line:66:5, col:28> col:11 finish 'int (*)(int *)'
| |-FieldDecl 0x142e22bad50 <line:68:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x142e22badc0 <line:70:5, col:11> col:11 app_data 'char *'
| |-FieldDecl 0x142e22bc2c0 <line:77:5, line:80:36> line:77:11 rsa_sign 'int (*)(int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, const int *)'
| |-FieldDecl 0x142e22bc770 <line:81:5, line:83:59> line:81:11 rsa_verify 'int (*)(int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, const int *)'
| `-FieldDecl 0x142e22bcb00 <line:90:5, col:67> col:11 rsa_keygen 'int (*)(int *, int, int *, int *)'
|-FunctionDecl 0x142e22bd0f0 <line:93:1, line:96:50> line:93:12 invalid int_rsa_verify 'int (int, const unsigned char *, unsigned int, unsigned char *, size_t *, const unsigned char *, size_t, int *)' extern
| |-ParmVarDecl 0x142e22bcb70 <col:27, col:31> col:31 dtype 'int'
| |-ParmVarDecl 0x142e22bcbf0 <col:38, col:59> col:59 m 'const unsigned char *'
| |-ParmVarDecl 0x142e22bcc70 <line:94:27, col:40> col:40 m_len 'unsigned int'
| |-ParmVarDecl 0x142e22bccf0 <col:47, col:62> col:62 rm 'unsigned char *'
| |-ParmVarDecl 0x142e22bcdc8 <line:95:27, col:35> col:35 prm_len 'size_t *'
| |-ParmVarDecl 0x142e22bce48 <col:44, col:65> col:65 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x142e22bcec0 <line:96:27, col:34> col:34 siglen 'size_t':'unsigned long long'
| `-ParmVarDecl 0x142e22bcf40 <col:42, col:47> col:47 invalid rsa 'int *'
|-FunctionDecl 0x142e22c25e0 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:33:1, line:39:1> line:33:5 RSA_padding_add_PKCS1_OAEP 'int (unsigned char *, int, const unsigned char *, int, const unsigned char *, int)'
| |-ParmVarDecl 0x142e22c21b8 <col:32, col:47> col:47 used to 'unsigned char *'
| |-ParmVarDecl 0x142e22c2238 <col:51, col:55> col:55 used tlen 'int'
| |-ParmVarDecl 0x142e22c22b8 <line:34:32, col:53> col:53 used from 'const unsigned char *'
| |-ParmVarDecl 0x142e22c2338 <col:59, col:63> col:63 used flen 'int'
| |-ParmVarDecl 0x142e22c23b8 <line:35:32, col:53> col:53 used param 'const unsigned char *'
| |-ParmVarDecl 0x142e22c2438 <col:60, col:64> col:64 used plen 'int'
| `-CompoundStmt 0x142e22c2b20 <line:36:1, line:39:1>
|   `-ReturnStmt 0x142e22c2b10 <line:37:5, line:38:67>
|     `-CallExpr 0x142e22c2a20 <line:37:12, line:38:67> 'int'
|       |-ImplicitCastExpr 0x142e22c2a08 <line:37:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x142e22c27e8 <col:12> 'int ()' Function 0x142e22c2720 'RSA_padding_add_PKCS1_OAEP_mgf1' 'int ()'
|       |-ImplicitCastExpr 0x142e22c2a80 <col:44> 'unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c2808 <col:44> 'unsigned char *' lvalue ParmVar 0x142e22c21b8 'to' 'unsigned char *'
|       |-ImplicitCastExpr 0x142e22c2a98 <col:48> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c2828 <col:48> 'int' lvalue ParmVar 0x142e22c2238 'tlen' 'int'
|       |-ImplicitCastExpr 0x142e22c2ab0 <col:54> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c2848 <col:54> 'const unsigned char *' lvalue ParmVar 0x142e22c22b8 'from' 'const unsigned char *'
|       |-ImplicitCastExpr 0x142e22c2ac8 <col:60> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c2868 <col:60> 'int' lvalue ParmVar 0x142e22c2338 'flen' 'int'
|       |-ImplicitCastExpr 0x142e22c2ae0 <line:38:44> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c2888 <col:44> 'const unsigned char *' lvalue ParmVar 0x142e22c23b8 'param' 'const unsigned char *'
|       |-ImplicitCastExpr 0x142e22c2af8 <col:51> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c28a8 <col:51> 'int' lvalue ParmVar 0x142e22c2438 'plen' 'int'
|       |-ParenExpr 0x142e22c2930 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|       | `-CStyleCastExpr 0x142e22c2908 <col:18, col:26> 'void *' <NullToPointer>
|       |   `-IntegerLiteral 0x142e22c28c8 <col:26> 'int' 0
|       `-ParenExpr 0x142e22c29b8 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x142e22c2990 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x142e22c2950 <col:26> 'int' 0
|-FunctionDecl 0x142e22c3010 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:41:1, line:112:1> line:41:5 invalid RSA_padding_add_PKCS1_OAEP_mgf1 'int (unsigned char *, int, const unsigned char *, int, const unsigned char *, int, const int *, const int *)'
| |-ParmVarDecl 0x142e22c2b50 <col:37, col:52> col:52 used to 'unsigned char *'
| |-ParmVarDecl 0x142e22c2bd0 <col:56, col:60> col:60 used tlen 'int'
| |-ParmVarDecl 0x142e22c2c50 <line:42:37, col:58> col:58 used from 'const unsigned char *'
| |-ParmVarDecl 0x142e22c2cd0 <col:64, col:68> col:68 used flen 'int'
| |-ParmVarDecl 0x142e22c2d50 <line:43:37, col:58> col:58 used param 'const unsigned char *'
| |-ParmVarDecl 0x142e22c2dd0 <col:65, col:69> col:69 used plen 'int'
| |-ParmVarDecl 0x142e22c2e50 <line:44:37, col:51> col:51 invalid md 'const int *'
| |-ParmVarDecl 0x142e22c2ed0 <col:55, col:69> col:69 invalid mgf1md 'const int *'
| `-CompoundStmt 0x142e22c15a8 <line:45:1, line:112:1>
|   |-DeclStmt 0x142e22c51f8 <line:46:5, col:15>
|   | `-VarDecl 0x142e22c3120 <col:5, col:14> col:9 used rv 'int' cinit
|   |   `-IntegerLiteral 0x142e22c51d0 <col:14> 'int' 0
|   |-DeclStmt 0x142e22c53c0 <line:47:5, col:28>
|   | |-VarDecl 0x142e22c5228 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x142e22c52a8 <col:5, col:27> col:12 used emlen 'int' cinit
|   |   `-BinaryOperator 0x142e22c5388 <col:20, col:27> 'int' '-'
|   |     |-ImplicitCastExpr 0x142e22c5370 <col:20> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x142e22c5310 <col:20> 'int' lvalue ParmVar 0x142e22c2bd0 'tlen' 'int'
|   |     `-IntegerLiteral 0x142e22c5348 <col:27> 'int' 1
|   |-DeclStmt 0x142e22c54f0 <line:48:5, col:29>
|   | |-VarDecl 0x142e22c53f0 <col:5, col:20> col:20 used db 'unsigned char *'
|   | `-VarDecl 0x142e22c5470 <col:5, col:25> col:25 used seed 'unsigned char *'
|   |-DeclStmt 0x142e22c5628 <line:49:5, col:33>
|   | `-VarDecl 0x142e22c5520 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:49:20 used dbmask 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x142e22c5610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x142e22c55f0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x142e22c55c8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x142e22c5588 <col:26> 'int' 0
|   |-DeclStmt 0x142e22c56c0 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:50:5, col:44>
|   | `-VarDecl 0x142e22c5658 <col:5, col:19> col:19 invalid seedmask 'unsigned char'
|   |-DeclStmt 0x142e22c5818 <line:51:5, col:30>
|   | |-VarDecl 0x142e22c56f0 <col:5, col:9> col:9 used mdlen 'int'
|   | `-VarDecl 0x142e22c5770 <col:5, col:29> col:16 used dbmask_len 'int' cinit
|   |   `-IntegerLiteral 0x142e22c57d8 <col:29> 'int' 0
|   |-IfStmt 0x142e22c5ed8 <line:60:5, line:64:5>
|   | |-BinaryOperator 0x142e22c5d58 <line:60:9, col:36> 'int' '>'
|   | | |-ImplicitCastExpr 0x142e22c5d40 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22c5bd0 <col:9> 'int' lvalue ParmVar 0x142e22c2cd0 'flen' 'int'
|   | | `-BinaryOperator 0x142e22c5d20 <col:16, col:36> 'int' '-'
|   | |   |-BinaryOperator 0x142e22c5cd8 <col:16, col:28> 'int' '-'
|   | |   | |-ImplicitCastExpr 0x142e22c5cc0 <col:16> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x142e22c5c08 <col:16> 'int' lvalue Var 0x142e22c52a8 'emlen' 'int'
|   | |   | `-BinaryOperator 0x142e22c5ca0 <col:24, col:28> 'int' '*'
|   | |   |   |-IntegerLiteral 0x142e22c5c40 <col:24> 'int' 2
|   | |   |   `-ImplicitCastExpr 0x142e22c5c88 <col:28> 'int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x142e22c5c68 <col:28> 'int' lvalue Var 0x142e22c56f0 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x142e22c5cf8 <col:36> 'int' 1
|   | `-CompoundStmt 0x142e22c5ec0 <col:39, line:64:5>
|   |   `-ReturnStmt 0x142e22c5eb0 <line:63:9, col:16>
|   |     `-IntegerLiteral 0x142e22c5e88 <col:16> 'int' 0
|   |-IfStmt 0x142e22c6080 <line:66:5, line:70:5>
|   | |-BinaryOperator 0x142e22c5ff0 <line:66:9, col:29> 'int' '<'
|   | | |-ImplicitCastExpr 0x142e22c5fd8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22c5ef0 <col:9> 'int' lvalue Var 0x142e22c52a8 'emlen' 'int'
|   | | `-BinaryOperator 0x142e22c5fb8 <col:17, col:29> 'int' '+'
|   | |   |-BinaryOperator 0x142e22c5f70 <col:17, col:21> 'int' '*'
|   | |   | |-IntegerLiteral 0x142e22c5f10 <col:17> 'int' 2
|   | |   | `-ImplicitCastExpr 0x142e22c5f58 <col:21> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x142e22c5f38 <col:21> 'int' lvalue Var 0x142e22c56f0 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x142e22c5f90 <col:29> 'int' 1
|   | `-CompoundStmt 0x142e22c6068 <col:32, line:70:5>
|   |   `-ReturnStmt 0x142e22c6058 <line:69:9, col:16>
|   |     `-IntegerLiteral 0x142e22c6030 <col:16> 'int' 0
|   |-BinaryOperator 0x142e22c6170 <line:72:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x142e22c6110 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x142e22c60f8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22c6098 <col:5> 'unsigned char *' lvalue ParmVar 0x142e22c2b50 'to' 'unsigned char *'
|   | | `-IntegerLiteral 0x142e22c60d0 <col:8> 'int' 0
|   | `-ImplicitCastExpr 0x142e22c6158 <col:13> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x142e22c6130 <col:13> 'int' 0
|   |-BinaryOperator 0x142e22c3230 <line:73:5, col:17> 'unsigned char *' '='
|   | |-DeclRefExpr 0x142e22c6190 <col:5> 'unsigned char *' lvalue Var 0x142e22c5470 'seed' 'unsigned char *'
|   | `-BinaryOperator 0x142e22c3210 <col:12, col:17> 'unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x142e22c31f8 <col:12> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22c31b0 <col:12> 'unsigned char *' lvalue ParmVar 0x142e22c2b50 'to' 'unsigned char *'
|   |   `-IntegerLiteral 0x142e22c31d0 <col:17> 'int' 1
|   |-BinaryOperator 0x142e22c3360 <line:74:5, col:23> 'unsigned char *' '='
|   | |-DeclRefExpr 0x142e22c3250 <col:5> 'unsigned char *' lvalue Var 0x142e22c53f0 'db' 'unsigned char *'
|   | `-BinaryOperator 0x142e22c3340 <col:10, col:23> 'unsigned char *' '+'
|   |   |-BinaryOperator 0x142e22c32f8 <col:10, col:15> 'unsigned char *' '+'
|   |   | |-ImplicitCastExpr 0x142e22c32c8 <col:10> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x142e22c3288 <col:10> 'unsigned char *' lvalue ParmVar 0x142e22c2b50 'to' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x142e22c32e0 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x142e22c32a8 <col:15> 'int' lvalue Var 0x142e22c56f0 'mdlen' 'int'
|   |   `-IntegerLiteral 0x142e22c3318 <col:23> 'int' 1
|   |-IfStmt 0x142e22c3708 <line:76:5, line:77:14>
|   | |-OpaqueValueExpr 0x142e22c36f0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x142e22c36d8 <col:9, col:14> 'err' 0x142e22c3688
|   |-CallExpr 0x142e22c3c00 <line:78:5, col:55> 'void *'
|   | |-ImplicitCastExpr 0x142e22c3be8 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x142e22c3950 <col:5> 'void *(void *, int, unsigned long long)' Function 0x142e22c3760 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x142e22c3c38 <col:12, col:17> 'void *' <BitCast>
|   | | `-BinaryOperator 0x142e22c39f8 <col:12, col:17> 'unsigned char *' '+'
|   | |   |-ImplicitCastExpr 0x142e22c39c8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x142e22c3988 <col:12> 'unsigned char *' lvalue Var 0x142e22c53f0 'db' 'unsigned char *'
|   | |   `-ImplicitCastExpr 0x142e22c39e0 <col:17> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x142e22c39a8 <col:17> 'int' lvalue Var 0x142e22c56f0 'mdlen' 'int'
|   | |-IntegerLiteral 0x142e22c3a18 <col:24> 'int' 0
|   | `-ImplicitCastExpr 0x142e22c3c50 <col:27, col:54> 'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x142e22c3b98 <col:27, col:54> 'int' '-'
|   |     |-BinaryOperator 0x142e22c3b50 <col:27, col:46> 'int' '-'
|   |     | |-BinaryOperator 0x142e22c3ab0 <col:27, col:35> 'int' '-'
|   |     | | |-ImplicitCastExpr 0x142e22c3a80 <col:27> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x142e22c3a40 <col:27> 'int' lvalue Var 0x142e22c52a8 'emlen' 'int'
|   |     | | `-ImplicitCastExpr 0x142e22c3a98 <col:35> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x142e22c3a60 <col:35> 'int' lvalue ParmVar 0x142e22c2cd0 'flen' 'int'
|   |     | `-BinaryOperator 0x142e22c3b30 <col:42, col:46> 'int' '*'
|   |     |   |-IntegerLiteral 0x142e22c3ad0 <col:42> 'int' 2
|   |     |   `-ImplicitCastExpr 0x142e22c3b18 <col:46> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x142e22c3af8 <col:46> 'int' lvalue Var 0x142e22c56f0 'mdlen' 'int'
|   |     `-IntegerLiteral 0x142e22c3b70 <col:54> 'int' 1
|   |-BinaryOperator 0x142e22c3e30 <line:79:5, col:36> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x142e22c3dd0 <col:5, col:32> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x142e22c3db8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22c3c68 <col:5> 'unsigned char *' lvalue Var 0x142e22c53f0 'db' 'unsigned char *'
|   | | `-BinaryOperator 0x142e22c3d98 <col:8, col:31> 'int' '-'
|   | |   |-BinaryOperator 0x142e22c3d50 <col:8, col:23> 'int' '-'
|   | |   | |-BinaryOperator 0x142e22c3cf8 <col:8, col:16> 'int' '-'
|   | |   | | |-ImplicitCastExpr 0x142e22c3cc8 <col:8> 'int' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x142e22c3c88 <col:8> 'int' lvalue Var 0x142e22c52a8 'emlen' 'int'
|   | |   | | `-ImplicitCastExpr 0x142e22c3ce0 <col:16> 'int' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x142e22c3ca8 <col:16> 'int' lvalue ParmVar 0x142e22c2cd0 'flen' 'int'
|   | |   | `-ImplicitCastExpr 0x142e22c3d38 <col:23> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x142e22c3d18 <col:23> 'int' lvalue Var 0x142e22c56f0 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x142e22c3d70 <col:31> 'int' 1
|   | `-ImplicitCastExpr 0x142e22c3e18 <col:36> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x142e22c3df0 <col:36> 'int' 1
|   |-CallExpr 0x142e22c4320 <line:80:5, col:63> 'void *'
|   | |-ImplicitCastExpr 0x142e22c4308 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x142e22c4080 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x142e22c3e90 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x142e22c4358 <col:12, col:32> 'void *' <BitCast>
|   | | `-BinaryOperator 0x142e22c41f8 <col:12, col:32> 'unsigned char *' '-'
|   | |   |-BinaryOperator 0x142e22c4180 <col:12, col:25> 'unsigned char *' '-'
|   | |   | |-BinaryOperator 0x142e22c4128 <col:12, col:17> 'unsigned char *' '+'
|   | |   | | |-ImplicitCastExpr 0x142e22c40f8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   | | | `-DeclRefExpr 0x142e22c40b8 <col:12> 'unsigned char *' lvalue Var 0x142e22c53f0 'db' 'unsigned char *'
|   | |   | | `-ImplicitCastExpr 0x142e22c4110 <col:17> 'int' <LValueToRValue>
|   | |   | |   `-DeclRefExpr 0x142e22c40d8 <col:17> 'int' lvalue Var 0x142e22c52a8 'emlen' 'int'
|   | |   | `-ImplicitCastExpr 0x142e22c4168 <col:25> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x142e22c4148 <col:25> 'int' lvalue ParmVar 0x142e22c2cd0 'flen' 'int'
|   | |   `-ImplicitCastExpr 0x142e22c41e0 <col:32> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x142e22c41c0 <col:32> 'int' lvalue Var 0x142e22c56f0 'mdlen' 'int'
|   | |-ImplicitCastExpr 0x142e22c4388 <col:39> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x142e22c4370 <col:39> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x142e22c4218 <col:39> 'const unsigned char *' lvalue ParmVar 0x142e22c2c50 'from' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x142e22c43a0 <col:45, col:59> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x142e22c42a0 <col:45, col:59> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x142e22c4288 <col:59> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x142e22c4250 <col:59> 'int' lvalue ParmVar 0x142e22c2cd0 'flen' 'int'
|   |-IfStmt 0x142e22c45e0 <line:81:5, line:82:14>
|   | |-BinaryOperator 0x142e22c45a8 <line:81:9, col:36> 'int' '<='
|   | | |-CallExpr 0x142e22c4520 <col:9, col:31> 'int'
|   | | | |-ImplicitCastExpr 0x142e22c4508 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x142e22c44a8 <col:9> 'int ()' Function 0x142e22c43e0 'RAND_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x142e22c4550 <col:20> 'unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x142e22c44c8 <col:20> 'unsigned char *' lvalue Var 0x142e22c5470 'seed' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x142e22c4568 <col:26> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x142e22c44e8 <col:26> 'int' lvalue Var 0x142e22c56f0 'mdlen' 'int'
|   | | `-IntegerLiteral 0x142e22c4580 <col:36> 'int' 0
|   | `-GotoStmt 0x142e22c45c8 <line:82:9, col:14> 'err' 0x142e22c3688
|   |-BinaryOperator 0x142e22c46c0 <line:90:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x142e22c45f8 <col:5> 'int' lvalue Var 0x142e22c5770 'dbmask_len' 'int'
|   | `-BinaryOperator 0x142e22c46a0 <col:18, col:26> 'int' '-'
|   |   |-ImplicitCastExpr 0x142e22c4670 <col:18> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22c4630 <col:18> 'int' lvalue Var 0x142e22c52a8 'emlen' 'int'
|   |   `-ImplicitCastExpr 0x142e22c4688 <col:26> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x142e22c4650 <col:26> 'int' lvalue Var 0x142e22c56f0 'mdlen' 'int'
|   |-BinaryOperator 0x142e22c48b8 <line:91:5, col:39> 'unsigned char *' '='
|   | |-DeclRefExpr 0x142e22c46e0 <col:5> 'unsigned char *' lvalue Var 0x142e22c5520 'dbmask' 'unsigned char *'
|   | `-ImplicitCastExpr 0x142e22c48a0 <col:14, col:39> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x142e22c4860 <col:14, col:39> 'int'
|   |     |-ImplicitCastExpr 0x142e22c4848 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x142e22c4808 <col:14> 'int ()' Function 0x142e22c4740 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x142e22c4888 <col:29> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x142e22c4828 <col:29> 'int' lvalue Var 0x142e22c5770 'dbmask_len' 'int'
|   |-IfStmt 0x142e22c4a20 <line:92:5, line:95:5>
|   | |-BinaryOperator 0x142e22c49b0 <line:92:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x142e22c4980 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:92:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22c48d8 <col:9> 'unsigned char *' lvalue Var 0x142e22c5520 'dbmask' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x142e22c4998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x142e22c4960 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x142e22c4938 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x142e22c48f8 <col:26> 'int' 0
|   | `-CompoundStmt 0x142e22c4a08 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:92:25, line:95:5>
|   |   `-GotoStmt 0x142e22c49f0 <line:94:9, col:14> 'err' 0x142e22c3688
|   |-IfStmt 0x142e22c4c20 <line:97:5, line:98:14>
|   | |-OpaqueValueExpr 0x142e22c4c08 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x142e22c4bf0 <col:9, col:14> 'err' 0x142e22c3688
|   |-ForStmt 0x142e22c4f00 <line:99:5, line:100:26>
|   | |-BinaryOperator 0x142e22c4c98 <line:99:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x142e22c4c38 <col:10> 'int' lvalue Var 0x142e22c5228 'i' 'int'
|   | | `-IntegerLiteral 0x142e22c4c70 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x142e22c4d28 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x142e22c4cf8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22c4cb8 <col:17> 'int' lvalue Var 0x142e22c5228 'i' 'int'
|   | | `-ImplicitCastExpr 0x142e22c4d10 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x142e22c4cd8 <col:21> 'int' lvalue Var 0x142e22c5770 'dbmask_len' 'int'
|   | |-UnaryOperator 0x142e22c4d68 <col:33, col:34> 'int' postfix '++'
|   | | `-DeclRefExpr 0x142e22c4d48 <col:33> 'int' lvalue Var 0x142e22c5228 'i' 'int'
|   | `-CompoundAssignOperator 0x142e22c4ed0 <line:100:9, col:26> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-ArraySubscriptExpr 0x142e22c4df0 <col:9, col:13> 'unsigned char' lvalue
|   |   | |-ImplicitCastExpr 0x142e22c4dc0 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x142e22c4d80 <col:9> 'unsigned char *' lvalue Var 0x142e22c53f0 'db' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x142e22c4dd8 <col:12> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x142e22c4da0 <col:12> 'int' lvalue Var 0x142e22c5228 'i' 'int'
|   |   `-ImplicitCastExpr 0x142e22c4eb8 <col:18, col:26> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x142e22c4ea0 <col:18, col:26> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x142e22c4e80 <col:18, col:26> 'unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x142e22c4e50 <col:18> 'unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x142e22c4e10 <col:18> 'unsigned char *' lvalue Var 0x142e22c5520 'dbmask' 'unsigned char *'
|   |         `-ImplicitCastExpr 0x142e22c4e68 <col:25> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x142e22c4e30 <col:25> 'int' lvalue Var 0x142e22c5228 'i' 'int'
|   |-IfStmt 0x142e22c5010 <line:102:5, line:103:14>
|   | |-OpaqueValueExpr 0x142e22c4ff8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x142e22c4fe0 <col:9, col:14> 'err' 0x142e22c3688
|   |-BinaryOperator 0x142e22c1248 <line:106:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x142e22c11e8 <col:5> 'int' lvalue Var 0x142e22c3120 'rv' 'int'
|   | `-IntegerLiteral 0x142e22c1220 <col:10> 'int' 1
|   |-LabelStmt 0x142e22c1380 <line:108:2, col:5> 'err'
|   | `-NullStmt 0x142e22c1378 <col:5>
|   |-CallExpr 0x142e22c1500 <line:110:5, col:42> 'int'
|   | |-ImplicitCastExpr 0x142e22c14e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x142e22c1488 <col:5> 'int ()' Function 0x142e22c13c0 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x142e22c1530 <col:24> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x142e22c14a8 <col:24> 'unsigned char *' lvalue Var 0x142e22c5520 'dbmask' 'unsigned char *'
|   | `-ImplicitCastExpr 0x142e22c1548 <col:32> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x142e22c14c8 <col:32> 'int' lvalue Var 0x142e22c5770 'dbmask_len' 'int'
|   `-ReturnStmt 0x142e22c1598 <line:111:5, col:12>
|     `-ImplicitCastExpr 0x142e22c1580 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x142e22c1560 <col:12> 'int' lvalue Var 0x142e22c3120 'rv' 'int'
|-FunctionDecl 0x142e22c3760 <line:78:5> col:5 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x142e22c3800 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x142e22c3868 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x142e22c38d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x142e22c3e90 <line:80:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x142e22c3f30 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x142e22c3f98 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x142e22c4000 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x142e22c1b70 <line:114:1, line:120:1> line:114:5 RSA_padding_check_PKCS1_OAEP 'int (unsigned char *, int, const unsigned char *, int, int, const unsigned char *, int)'
| |-ParmVarDecl 0x142e22c16a0 <col:34, col:49> col:49 used to 'unsigned char *'
| |-ParmVarDecl 0x142e22c1720 <col:53, col:57> col:57 used tlen 'int'
| |-ParmVarDecl 0x142e22c17a0 <line:115:34, col:55> col:55 used from 'const unsigned char *'
| |-ParmVarDecl 0x142e22c1820 <col:61, col:65> col:65 used flen 'int'
| |-ParmVarDecl 0x142e22c18a0 <col:71, col:75> col:75 used num 'int'
| |-ParmVarDecl 0x142e22c1920 <line:116:34, col:55> col:55 used param 'const unsigned char *'
| |-ParmVarDecl 0x142e22c19a0 <col:62, col:66> col:66 used plen 'int'
| `-CompoundStmt 0x142e22c2098 <line:117:1, line:120:1>
|   `-ReturnStmt 0x142e22c2088 <line:118:5, line:119:69>
|     `-CallExpr 0x142e22c1f78 <line:118:12, line:119:69> 'int'
|       |-ImplicitCastExpr 0x142e22c1f60 <line:118:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x142e22c1d50 <col:12> 'int ()' Function 0x142e22c1c88 'RSA_padding_check_PKCS1_OAEP_mgf1' 'int ()'
|       |-ImplicitCastExpr 0x142e22c1fe0 <col:46> 'unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c1d70 <col:46> 'unsigned char *' lvalue ParmVar 0x142e22c16a0 'to' 'unsigned char *'
|       |-ImplicitCastExpr 0x142e22c1ff8 <col:50> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c1d90 <col:50> 'int' lvalue ParmVar 0x142e22c1720 'tlen' 'int'
|       |-ImplicitCastExpr 0x142e22c2010 <col:56> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c1db0 <col:56> 'const unsigned char *' lvalue ParmVar 0x142e22c17a0 'from' 'const unsigned char *'
|       |-ImplicitCastExpr 0x142e22c2028 <col:62> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c1dd0 <col:62> 'int' lvalue ParmVar 0x142e22c1820 'flen' 'int'
|       |-ImplicitCastExpr 0x142e22c2040 <col:68> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c1df0 <col:68> 'int' lvalue ParmVar 0x142e22c18a0 'num' 'int'
|       |-ImplicitCastExpr 0x142e22c2058 <line:119:46> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c1e10 <col:46> 'const unsigned char *' lvalue ParmVar 0x142e22c1920 'param' 'const unsigned char *'
|       |-ImplicitCastExpr 0x142e22c2070 <col:53> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22c1e30 <col:53> 'int' lvalue ParmVar 0x142e22c19a0 'plen' 'int'
|       |-ParenExpr 0x142e22c1eb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|       | `-CStyleCastExpr 0x142e22c1e90 <col:18, col:26> 'void *' <NullToPointer>
|       |   `-IntegerLiteral 0x142e22c1e50 <col:26> 'int' 0
|       `-ParenExpr 0x142e22c1f40 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x142e22c1f18 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x142e22c1ed8 <col:26> 'int' 0
|-FunctionDecl 0x142e22c66b0 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:122:1, line:277:1> line:122:5 invalid RSA_padding_check_PKCS1_OAEP_mgf1 'int (unsigned char *, int, const unsigned char *, int, int, const unsigned char *, int, const int *, const int *)'
| |-ParmVarDecl 0x142e22c20c8 <col:39, col:54> col:54 used to 'unsigned char *'
| |-ParmVarDecl 0x142e22c61e0 <col:58, col:62> col:62 used tlen 'int'
| |-ParmVarDecl 0x142e22c6260 <line:123:39, col:60> col:60 used from 'const unsigned char *'
| |-ParmVarDecl 0x142e22c62e0 <col:66, col:70> col:70 used flen 'int'
| |-ParmVarDecl 0x142e22c6360 <line:124:39, col:43> col:43 used num 'int'
| |-ParmVarDecl 0x142e22c63e0 <col:48, col:69> col:69 used param 'const unsigned char *'
| |-ParmVarDecl 0x142e22c6460 <line:125:39, col:43> col:43 used plen 'int'
| |-ParmVarDecl 0x142e22c64e0 <col:49, col:63> col:63 invalid md 'const int *'
| |-ParmVarDecl 0x142e22c6560 <line:126:39, col:53> col:53 invalid mgf1md 'const int *'
| `-CompoundStmt 0x142e22ceff0 <line:127:1, line:277:1>
|   |-DeclStmt 0x142e22c6af0 <line:128:5, col:58>
|   | |-VarDecl 0x142e22c67c8 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x142e22c6848 <col:5, col:20> col:12 used dblen 'int' cinit
|   | | `-IntegerLiteral 0x142e22c68b0 <col:20> 'int' 0
|   | |-VarDecl 0x142e22c68f0 <col:5, col:31> col:23 used mlen 'int' cinit
|   | | `-UnaryOperator 0x142e22c6980 <col:30, col:31> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x142e22c6958 <col:31> 'int' 1
|   | |-VarDecl 0x142e22c69b0 <col:5, col:46> col:34 used one_index 'int' cinit
|   | | `-IntegerLiteral 0x142e22c6a18 <col:46> 'int' 0
|   | `-VarDecl 0x142e22c6a58 <col:5, col:49> col:49 used msg_index 'int'
|   |-DeclStmt 0x142e22c6ce8 <line:129:5, col:48>
|   | |-VarDecl 0x142e22c6b20 <col:5, col:25> col:18 used good 'unsigned int' cinit
|   | | `-ImplicitCastExpr 0x142e22c6bb0 <col:25> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x142e22c6b88 <col:25> 'int' 0
|   | |-VarDecl 0x142e22c6be0 <col:5, col:28> col:28 used found_one_byte 'unsigned int'
|   | `-VarDecl 0x142e22c6c60 <col:5, col:44> col:44 used mask 'unsigned int'
|   |-DeclStmt 0x142e22c6e18 <line:130:5, col:47>
|   | |-VarDecl 0x142e22c6d18 <col:5, col:26> col:26 used maskedseed 'const unsigned char *'
|   | `-VarDecl 0x142e22c6d98 <col:5, col:39> col:39 used maskeddb 'const unsigned char *'
|   |-DeclStmt 0x142e22c7088 <line:135:5, line:136:31>
|   | |-VarDecl 0x142e22c6e48 <line:135:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:135:20 used db 'unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x142e22c6f38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   | |   `-ParenExpr 0x142e22c6f18 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x142e22c6ef0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x142e22c6eb0 <col:26> 'int' 0
|   | `-VarDecl 0x142e22c6f68 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:135:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:135:32 used em 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x142e22c7058 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x142e22c7038 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x142e22c7010 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x142e22c6fd0 <col:26> 'int' 0
|   |-DeclStmt 0x142e22c7120 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:137:5, col:14>
|   | `-VarDecl 0x142e22c70b8 <col:5, col:9> col:9 used mdlen 'int'
|   |-IfStmt 0x142e22c0438 <line:146:5, line:147:17>
|   | |-BinaryOperator 0x142e22c03c8 <line:146:9, col:30> 'int' '||'
|   | | |-BinaryOperator 0x142e22c0310 <col:9, col:17> 'int' '<='
|   | | | |-ImplicitCastExpr 0x142e22c02f8 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x142e22c0298 <col:9> 'int' lvalue ParmVar 0x142e22c61e0 'tlen' 'int'
|   | | | `-IntegerLiteral 0x142e22c02d0 <col:17> 'int' 0
|   | | `-BinaryOperator 0x142e22c03a8 <col:22, col:30> 'int' '<='
|   | |   |-ImplicitCastExpr 0x142e22c0390 <col:22> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x142e22c0330 <col:22> 'int' lvalue ParmVar 0x142e22c62e0 'flen' 'int'
|   | |   `-IntegerLiteral 0x142e22c0368 <col:30> 'int' 0
|   | `-ReturnStmt 0x142e22c0428 <line:147:9, col:17>
|   |   `-UnaryOperator 0x142e22c0410 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x142e22c03e8 <col:17> 'int' 1
|   |-IfStmt 0x142e22c06c0 <line:156:5, line:160:5>
|   | |-BinaryOperator 0x142e22c0618 <line:156:9, col:41> 'int' '||'
|   | | |-BinaryOperator 0x142e22c04d8 <col:9, col:15> 'int' '<'
|   | | | |-ImplicitCastExpr 0x142e22c04a8 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x142e22c0450 <col:9> 'int' lvalue ParmVar 0x142e22c6360 'num' 'int'
|   | | | `-ImplicitCastExpr 0x142e22c04c0 <col:15> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x142e22c0488 <col:15> 'int' lvalue ParmVar 0x142e22c62e0 'flen' 'int'
|   | | `-BinaryOperator 0x142e22c05f8 <col:23, col:41> 'int' '<'
|   | |   |-ImplicitCastExpr 0x142e22c05e0 <col:23> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x142e22c04f8 <col:23> 'int' lvalue ParmVar 0x142e22c6360 'num' 'int'
|   | |   `-BinaryOperator 0x142e22c05c0 <col:29, col:41> 'int' '+'
|   | |     |-BinaryOperator 0x142e22c0578 <col:29, col:33> 'int' '*'
|   | |     | |-IntegerLiteral 0x142e22c0518 <col:29> 'int' 2
|   | |     | `-ImplicitCastExpr 0x142e22c0560 <col:33> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x142e22c0540 <col:33> 'int' lvalue Var 0x142e22c70b8 'mdlen' 'int'
|   | |     `-IntegerLiteral 0x142e22c0598 <col:41> 'int' 2
|   | `-CompoundStmt 0x142e22c06a8 <col:44, line:160:5>
|   |   `-ReturnStmt 0x142e22c0698 <line:159:9, col:17>
|   |     `-UnaryOperator 0x142e22c0680 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x142e22c0658 <col:17> 'int' 1
|   |-BinaryOperator 0x142e22c07e8 <line:162:5, col:27> 'int' '='
|   | |-DeclRefExpr 0x142e22c06d8 <col:5> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   | `-BinaryOperator 0x142e22c07c8 <col:13, col:27> 'int' '-'
|   |   |-BinaryOperator 0x142e22c0780 <col:13, col:19> 'int' '-'
|   |   | |-ImplicitCastExpr 0x142e22c0750 <col:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x142e22c0710 <col:13> 'int' lvalue ParmVar 0x142e22c6360 'num' 'int'
|   |   | `-ImplicitCastExpr 0x142e22c0768 <col:19> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x142e22c0730 <col:19> 'int' lvalue Var 0x142e22c70b8 'mdlen' 'int'
|   |   `-IntegerLiteral 0x142e22c07a0 <col:27> 'int' 1
|   |-BinaryOperator 0x142e22c08f0 <line:163:5, col:30> 'unsigned char *' '='
|   | |-DeclRefExpr 0x142e22c0808 <col:5> 'unsigned char *' lvalue Var 0x142e22c6e48 'db' 'unsigned char *'
|   | `-ImplicitCastExpr 0x142e22c08d8 <col:10, col:30> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x142e22c0898 <col:10, col:30> 'int'
|   |     |-ImplicitCastExpr 0x142e22c0880 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x142e22c0840 <col:10> 'int ()' Function 0x142e22c4740 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x142e22c08c0 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x142e22c0860 <col:25> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   |-IfStmt 0x142e22c0aa8 <line:164:5, line:167:5>
|   | |-BinaryOperator 0x142e22c09e8 <line:164:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x142e22c09b8 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:164:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22c0910 <col:9> 'unsigned char *' lvalue Var 0x142e22c6e48 'db' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x142e22c09d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x142e22c0998 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x142e22c0970 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x142e22c0930 <col:26> 'int' 0
|   | `-CompoundStmt 0x142e22c0a90 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:164:21, line:167:5>
|   |   `-GotoStmt 0x142e22c0a78 <line:166:9, col:14> 'cleanup' 0x142e22c0a28
|   |-BinaryOperator 0x142e22c0ba8 <line:169:5, col:28> 'unsigned char *' '='
|   | |-DeclRefExpr 0x142e22c0ac0 <col:5> 'unsigned char *' lvalue Var 0x142e22c6f68 'em' 'unsigned char *'
|   | `-ImplicitCastExpr 0x142e22c0b90 <col:10, col:28> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x142e22c0b50 <col:10, col:28> 'int'
|   |     |-ImplicitCastExpr 0x142e22c0b38 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x142e22c0af8 <col:10> 'int ()' Function 0x142e22c4740 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x142e22c0b78 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x142e22c0b18 <col:25> 'int' lvalue ParmVar 0x142e22c6360 'num' 'int'
|   |-IfStmt 0x142e22c0d10 <line:170:5, line:174:5>
|   | |-BinaryOperator 0x142e22c0ca0 <line:170:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x142e22c0c70 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:170:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22c0bc8 <col:9> 'unsigned char *' lvalue Var 0x142e22c6f68 'em' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x142e22c0c88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x142e22c0c50 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x142e22c0c28 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x142e22c0be8 <col:26> 'int' 0
|   | `-CompoundStmt 0x142e22c0cf8 <.//openssl//file_jk/after\crypto\rsa\rsa_oaep.c:170:21, line:174:5>
|   |   `-GotoStmt 0x142e22c0ce0 <line:173:9, col:14> 'cleanup' 0x142e22c0a28
|   |-ForStmt 0x142e22c85c8 <line:182:5, line:187:5>
|   | |-BinaryOperator 0x142e22c0ef0 <line:182:10, col:39> 'int' ','
|   | | |-BinaryOperator 0x142e22c0e50 <col:10, col:30> 'unsigned char *' ','
|   | | | |-CompoundAssignOperator 0x142e22c0d98 <col:10, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | | | | |-DeclRefExpr 0x142e22c0d28 <col:10> 'const unsigned char *' lvalue ParmVar 0x142e22c6260 'from' 'const unsigned char *'
|   | | | | `-ImplicitCastExpr 0x142e22c0d80 <col:18> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x142e22c0d60 <col:18> 'int' lvalue ParmVar 0x142e22c62e0 'flen' 'int'
|   | | | `-CompoundAssignOperator 0x142e22c0e20 <col:24, col:30> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | | |   |-DeclRefExpr 0x142e22c0dc8 <col:24> 'unsigned char *' lvalue Var 0x142e22c6f68 'em' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x142e22c0e08 <col:30> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x142e22c0de8 <col:30> 'int' lvalue ParmVar 0x142e22c6360 'num' 'int'
|   | | `-BinaryOperator 0x142e22c0ed0 <col:35, col:39> 'int' '='
|   | |   |-DeclRefExpr 0x142e22c0e70 <col:35> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | |   `-IntegerLiteral 0x142e22c0ea8 <col:39> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x142e22c0f80 <col:42, col:46> 'int' '<'
|   | | |-ImplicitCastExpr 0x142e22c0f50 <col:42> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22c0f10 <col:42> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x142e22c0f68 <col:46> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x142e22c0f30 <col:46> 'int' lvalue ParmVar 0x142e22c6360 'num' 'int'
|   | |-UnaryOperator 0x142e22c0fc0 <col:51, col:52> 'int' postfix '++'
|   | | `-DeclRefExpr 0x142e22c0fa0 <col:51> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | `-CompoundStmt 0x142e22c8598 <col:56, line:187:5>
|   |   |-BinaryOperator 0x142e22c8248 <line:183:9, col:43> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x142e22c0fd8 <col:9> 'unsigned int' lvalue Var 0x142e22c6c60 'mask' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x142e22c8230 <col:16, col:43> 'unsigned int' <IntegralCast>
|   |   |   `-UnaryOperator 0x142e22c8218 <col:16, col:43> 'int' prefix '~' cannot overflow
|   |   |     `-CallExpr 0x142e22c1158 <col:17, col:43> 'int'
|   |   |       |-ImplicitCastExpr 0x142e22c1140 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x142e22c1100 <col:17> 'int ()' Function 0x142e22c1038 'constant_time_is_zero' 'int ()'
|   |   |       `-ImplicitCastExpr 0x142e22c8200 <col:39> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x142e22c1120 <col:39> 'int' lvalue ParmVar 0x142e22c62e0 'flen' 'int'
|   |   |-CompoundAssignOperator 0x142e22c8320 <line:184:9, col:21> 'int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x142e22c8268 <col:9> 'int' lvalue ParmVar 0x142e22c62e0 'flen' 'int'
|   |   | `-BinaryOperator 0x142e22c8300 <col:17, col:21> 'unsigned int' '&'
|   |   |   |-ImplicitCastExpr 0x142e22c82e8 <col:17> 'unsigned int' <IntegralCast>
|   |   |   | `-IntegerLiteral 0x142e22c8288 <col:17> 'int' 1
|   |   |   `-ImplicitCastExpr 0x142e22c82d0 <col:21> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x142e22c82b0 <col:21> 'unsigned int' lvalue Var 0x142e22c6c60 'mask' 'unsigned int'
|   |   |-CompoundAssignOperator 0x142e22c8408 <line:185:9, col:21> 'const unsigned char *' '-=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-DeclRefExpr 0x142e22c8350 <col:9> 'const unsigned char *' lvalue ParmVar 0x142e22c6260 'from' 'const unsigned char *'
|   |   | `-BinaryOperator 0x142e22c83e8 <col:17, col:21> 'unsigned int' '&'
|   |   |   |-ImplicitCastExpr 0x142e22c83d0 <col:17> 'unsigned int' <IntegralCast>
|   |   |   | `-IntegerLiteral 0x142e22c8370 <col:17> 'int' 1
|   |   |   `-ImplicitCastExpr 0x142e22c83b8 <col:21> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x142e22c8398 <col:21> 'unsigned int' lvalue Var 0x142e22c6c60 'mask' 'unsigned int'
|   |   `-BinaryOperator 0x142e22c8578 <line:186:9, col:25> 'unsigned char' '='
|   |     |-UnaryOperator 0x142e22c8470 <col:9, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
|   |     | `-UnaryOperator 0x142e22c8458 <col:10, col:12> 'unsigned char *' prefix '--'
|   |     |   `-DeclRefExpr 0x142e22c8438 <col:12> 'unsigned char *' lvalue Var 0x142e22c6f68 'em' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x142e22c8560 <col:17, col:25> 'unsigned char' <IntegralCast>
|   |       `-BinaryOperator 0x142e22c8540 <col:17, col:25> 'unsigned int' '&'
|   |         |-ImplicitCastExpr 0x142e22c8510 <col:17, col:18> 'unsigned int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x142e22c84f8 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |         |   `-UnaryOperator 0x142e22c84c0 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         |     `-ImplicitCastExpr 0x142e22c84a8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x142e22c8488 <col:18> 'const unsigned char *' lvalue ParmVar 0x142e22c6260 'from' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x142e22c8528 <col:25> 'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x142e22c84d8 <col:25> 'unsigned int' lvalue Var 0x142e22c6c60 'mask' 'unsigned int'
|   |-BinaryOperator 0x142e22c8760 <line:194:5, col:39> 'unsigned int' '='
|   | |-DeclRefExpr 0x142e22c8600 <col:5> 'unsigned int' lvalue Var 0x142e22c6b20 'good' 'unsigned int'
|   | `-ImplicitCastExpr 0x142e22c8748 <col:12, col:39> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x142e22c86f0 <col:12, col:39> 'int'
|   |     |-ImplicitCastExpr 0x142e22c86d8 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x142e22c8638 <col:12> 'int ()' Function 0x142e22c1038 'constant_time_is_zero' 'int ()'
|   |     `-ImplicitCastExpr 0x142e22c8730 <col:34, col:38> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x142e22c8718 <col:34, col:38> 'unsigned char' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x142e22c86b8 <col:34, col:38> 'unsigned char' lvalue
|   |           |-ImplicitCastExpr 0x142e22c86a0 <col:34> 'unsigned char *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x142e22c8658 <col:34> 'unsigned char *' lvalue Var 0x142e22c6f68 'em' 'unsigned char *'
|   |           `-IntegerLiteral 0x142e22c8678 <col:37> 'int' 0
|   |-BinaryOperator 0x142e22c8850 <line:196:5, col:23> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x142e22c8780 <col:5> 'const unsigned char *' lvalue Var 0x142e22c6d18 'maskedseed' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x142e22c8838 <col:18, col:23> 'const unsigned char *' <NoOp>
|   |   `-BinaryOperator 0x142e22c8818 <col:18, col:23> 'unsigned char *' '+'
|   |     |-ImplicitCastExpr 0x142e22c8800 <col:18> 'unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x142e22c87b8 <col:18> 'unsigned char *' lvalue Var 0x142e22c6f68 'em' 'unsigned char *'
|   |     `-IntegerLiteral 0x142e22c87d8 <col:23> 'int' 1
|   |-BinaryOperator 0x142e22c8998 <line:197:5, col:25> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x142e22c8870 <col:5> 'const unsigned char *' lvalue Var 0x142e22c6d98 'maskeddb' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x142e22c8980 <col:16, col:25> 'const unsigned char *' <NoOp>
|   |   `-BinaryOperator 0x142e22c8960 <col:16, col:25> 'unsigned char *' '+'
|   |     |-BinaryOperator 0x142e22c8908 <col:16, col:21> 'unsigned char *' '+'
|   |     | |-ImplicitCastExpr 0x142e22c88f0 <col:16> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x142e22c88a8 <col:16> 'unsigned char *' lvalue Var 0x142e22c6f68 'em' 'unsigned char *'
|   |     | `-IntegerLiteral 0x142e22c88c8 <col:21> 'int' 1
|   |     `-ImplicitCastExpr 0x142e22c8948 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x142e22c8928 <col:25> 'int' lvalue Var 0x142e22c70b8 'mdlen' 'int'
|   |-IfStmt 0x142e22c8a68 <line:199:5, line:200:14>
|   | |-OpaqueValueExpr 0x142e22c8a50 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x142e22c8a38 <col:9, col:14> 'cleanup' 0x142e22c0a28
|   |-IfStmt 0x142e22c8d10 <line:204:5, line:205:14>
|   | |-OpaqueValueExpr 0x142e22c8cf8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x142e22c8ce0 <col:9, col:14> 'cleanup' 0x142e22c0a28
|   |-ForStmt 0x142e22c8fd8 <line:206:5, line:207:28>
|   | |-BinaryOperator 0x142e22c8d70 <line:206:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x142e22c8d28 <col:10> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | | `-IntegerLiteral 0x142e22c8d48 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x142e22c8e00 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x142e22c8dd0 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22c8d90 <col:17> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x142e22c8de8 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x142e22c8db0 <col:21> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   | |-UnaryOperator 0x142e22c8e40 <col:28, col:29> 'int' postfix '++'
|   | | `-DeclRefExpr 0x142e22c8e20 <col:28> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | `-CompoundAssignOperator 0x142e22c8fa8 <line:207:9, col:28> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-ArraySubscriptExpr 0x142e22c8ec8 <col:9, col:13> 'unsigned char' lvalue
|   |   | |-ImplicitCastExpr 0x142e22c8e98 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x142e22c8e58 <col:9> 'unsigned char *' lvalue Var 0x142e22c6e48 'db' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x142e22c8eb0 <col:12> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x142e22c8e78 <col:12> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |   `-ImplicitCastExpr 0x142e22c8f90 <col:18, col:28> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x142e22c8f78 <col:18, col:28> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x142e22c8f58 <col:18, col:28> 'const unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x142e22c8f28 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x142e22c8ee8 <col:18> 'const unsigned char *' lvalue Var 0x142e22c6d98 'maskeddb' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x142e22c8f40 <col:27> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x142e22c8f08 <col:27> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |-IfStmt 0x142e22cc290 <line:209:5, line:210:14>
|   | |-OpaqueValueExpr 0x142e22cc278 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x142e22cc260 <col:9, col:14> 'cleanup' 0x142e22c0a28
|   |-BinaryOperator 0x142e22cc4b0 <line:214:5, col:22> 'unsigned int' '='
|   | |-DeclRefExpr 0x142e22cc438 <col:5> 'unsigned int' lvalue Var 0x142e22c6be0 'found_one_byte' 'unsigned int'
|   | `-ImplicitCastExpr 0x142e22cc498 <col:22> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x142e22cc470 <col:22> 'int' 0
|   |-ForStmt 0x142e22ccf90 <line:215:5, line:225:5>
|   | |-BinaryOperator 0x142e22cc528 <line:215:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x142e22cc4d0 <col:10> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x142e22cc510 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x142e22cc4f0 <col:14> 'int' lvalue Var 0x142e22c70b8 'mdlen' 'int'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x142e22cc5b8 <col:21, col:25> 'int' '<'
|   | | |-ImplicitCastExpr 0x142e22cc588 <col:21> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22cc548 <col:21> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x142e22cc5a0 <col:25> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x142e22cc568 <col:25> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   | |-UnaryOperator 0x142e22cc5f8 <col:32, col:33> 'int' postfix '++'
|   | | `-DeclRefExpr 0x142e22cc5d8 <col:32> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | `-CompoundStmt 0x142e22ccf58 <col:37, line:225:5>
|   |   |-DeclStmt 0x142e22cc8e8 <line:219:9, col:58>
|   |   | `-VarDecl 0x142e22cc628 <col:9, col:57> col:22 used equals1 'unsigned int' cinit
|   |   |   `-ImplicitCastExpr 0x142e22cc8d0 <col:32, col:57> 'unsigned int' <IntegralCast>
|   |   |     `-CallExpr 0x142e22cc870 <col:32, col:57> 'int'
|   |   |       |-ImplicitCastExpr 0x142e22cc858 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x142e22cc780 <col:32> 'int ()' Function 0x142e22cc6b8 'constant_time_eq' 'int ()'
|   |   |       |-ImplicitCastExpr 0x142e22cc8b8 <col:49, col:53> 'int' <IntegralCast>
|   |   |       | `-ImplicitCastExpr 0x142e22cc8a0 <col:49, col:53> 'unsigned char' <LValueToRValue>
|   |   |       |   `-ArraySubscriptExpr 0x142e22cc810 <col:49, col:53> 'unsigned char' lvalue
|   |   |       |     |-ImplicitCastExpr 0x142e22cc7e0 <col:49> 'unsigned char *' <LValueToRValue>
|   |   |       |     | `-DeclRefExpr 0x142e22cc7a0 <col:49> 'unsigned char *' lvalue Var 0x142e22c6e48 'db' 'unsigned char *'
|   |   |       |     `-ImplicitCastExpr 0x142e22cc7f8 <col:52> 'int' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x142e22cc7c0 <col:52> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |   |       `-IntegerLiteral 0x142e22cc830 <col:56> 'int' 1
|   |   |-DeclStmt 0x142e22ccab8 <line:220:9, col:60>
|   |   | `-VarDecl 0x142e22cc918 <col:9, col:59> col:22 used equals0 'unsigned int' cinit
|   |   |   `-ImplicitCastExpr 0x142e22ccaa0 <col:32, col:59> 'unsigned int' <IntegralCast>
|   |   |     `-CallExpr 0x142e22cca48 <col:32, col:59> 'int'
|   |   |       |-ImplicitCastExpr 0x142e22cca30 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x142e22cc980 <col:32> 'int ()' Function 0x142e22c1038 'constant_time_is_zero' 'int ()'
|   |   |       `-ImplicitCastExpr 0x142e22cca88 <col:54, col:58> 'int' <IntegralCast>
|   |   |         `-ImplicitCastExpr 0x142e22cca70 <col:54, col:58> 'unsigned char' <LValueToRValue>
|   |   |           `-ArraySubscriptExpr 0x142e22cca10 <col:54, col:58> 'unsigned char' lvalue
|   |   |             |-ImplicitCastExpr 0x142e22cc9e0 <col:54> 'unsigned char *' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x142e22cc9a0 <col:54> 'unsigned char *' lvalue Var 0x142e22c6e48 'db' 'unsigned char *'
|   |   |             `-ImplicitCastExpr 0x142e22cc9f8 <col:57> 'int' <LValueToRValue>
|   |   |               `-DeclRefExpr 0x142e22cc9c0 <col:57> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |   |-BinaryOperator 0x142e22ccd98 <line:221:9, line:222:58> 'int' '='
|   |   | |-DeclRefExpr 0x142e22ccad0 <line:221:9> 'int' lvalue Var 0x142e22c69b0 'one_index' 'int'
|   |   | `-CallExpr 0x142e22ccd30 <col:21, line:222:58> 'int'
|   |   |   |-ImplicitCastExpr 0x142e22ccd18 <line:221:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x142e22ccbf8 <col:21> 'int ()' Function 0x142e22ccb30 'constant_time_select_int' 'int ()'
|   |   |   |-BinaryOperator 0x142e22cccb8 <col:46, col:64> 'unsigned int' '&'
|   |   |   | |-UnaryOperator 0x142e22ccc50 <col:46, col:47> 'unsigned int' prefix '~' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x142e22ccc38 <col:47> 'unsigned int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x142e22ccc18 <col:47> 'unsigned int' lvalue Var 0x142e22c6be0 'found_one_byte' 'unsigned int'
|   |   |   | `-ImplicitCastExpr 0x142e22ccca0 <col:64> 'unsigned int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x142e22ccc68 <col:64> 'unsigned int' lvalue Var 0x142e22cc628 'equals1' 'unsigned int'
|   |   |   |-ImplicitCastExpr 0x142e22ccd68 <line:222:46> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x142e22cccd8 <col:46> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x142e22ccd80 <col:49> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x142e22cccf8 <col:49> 'int' lvalue Var 0x142e22c69b0 'one_index' 'int'
|   |   |-CompoundAssignOperator 0x142e22cce10 <line:223:9, col:27> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x142e22ccdb8 <col:9> 'unsigned int' lvalue Var 0x142e22c6be0 'found_one_byte' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x142e22ccdf8 <col:27> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x142e22ccdd8 <col:27> 'unsigned int' lvalue Var 0x142e22cc628 'equals1' 'unsigned int'
|   |   `-CompoundAssignOperator 0x142e22ccf28 <line:224:9, col:42> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x142e22cce40 <col:9> 'unsigned int' lvalue Var 0x142e22c6b20 'good' 'unsigned int'
|   |     `-ParenExpr 0x142e22ccf08 <col:17, col:42> 'unsigned int'
|   |       `-BinaryOperator 0x142e22ccee8 <col:18, col:35> 'unsigned int' '|'
|   |         |-ImplicitCastExpr 0x142e22cceb8 <col:18> 'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x142e22cce60 <col:18> 'unsigned int' lvalue Var 0x142e22c6be0 'found_one_byte' 'unsigned int'
|   |         `-ImplicitCastExpr 0x142e22cced0 <col:35> 'unsigned int' <LValueToRValue>
|   |           `-DeclRefExpr 0x142e22cce80 <col:35> 'unsigned int' lvalue Var 0x142e22cc918 'equals0' 'unsigned int'
|   |-CompoundAssignOperator 0x142e22cd020 <line:227:5, col:13> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x142e22ccfc8 <col:5> 'unsigned int' lvalue Var 0x142e22c6b20 'good' 'unsigned int'
|   | `-ImplicitCastExpr 0x142e22cd008 <col:13> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x142e22ccfe8 <col:13> 'unsigned int' lvalue Var 0x142e22c6be0 'found_one_byte' 'unsigned int'
|   |-BinaryOperator 0x142e22cd108 <line:234:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x142e22cd050 <col:5> 'int' lvalue Var 0x142e22c6a58 'msg_index' 'int'
|   | `-BinaryOperator 0x142e22cd0e8 <col:17, col:29> 'int' '+'
|   |   |-ImplicitCastExpr 0x142e22cd0d0 <col:17> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22cd088 <col:17> 'int' lvalue Var 0x142e22c69b0 'one_index' 'int'
|   |   `-IntegerLiteral 0x142e22cd0a8 <col:29> 'int' 1
|   |-BinaryOperator 0x142e22cd1f0 <line:235:5, col:20> 'int' '='
|   | |-DeclRefExpr 0x142e22cd128 <col:5> 'int' lvalue Var 0x142e22c68f0 'mlen' 'int'
|   | `-BinaryOperator 0x142e22cd1d0 <col:12, col:20> 'int' '-'
|   |   |-ImplicitCastExpr 0x142e22cd1a0 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x142e22cd160 <col:12> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   |   `-ImplicitCastExpr 0x142e22cd1b8 <col:20> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x142e22cd180 <col:20> 'int' lvalue Var 0x142e22c6a58 'msg_index' 'int'
|   |-CompoundAssignOperator 0x142e22ca400 <line:240:5, col:40> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-DeclRefExpr 0x142e22cd210 <col:5> 'unsigned int' lvalue Var 0x142e22c6b20 'good' 'unsigned int'
|   | `-ImplicitCastExpr 0x142e22ca3e8 <col:13, col:40> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x142e22ca388 <col:13, col:40> 'int'
|   |     |-ImplicitCastExpr 0x142e22ca370 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x142e22ca310 <col:13> 'int ()' Function 0x142e22ca248 'constant_time_ge' 'int ()'
|   |     |-ImplicitCastExpr 0x142e22ca3b8 <col:30> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x142e22ca330 <col:30> 'int' lvalue ParmVar 0x142e22c61e0 'tlen' 'int'
|   |     `-ImplicitCastExpr 0x142e22ca3d0 <col:36> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x142e22ca350 <col:36> 'int' lvalue Var 0x142e22c68f0 'mlen' 'int'
|   |-BinaryOperator 0x142e22ca838 <line:252:5, line:253:60> 'int' '='
|   | |-DeclRefExpr 0x142e22ca430 <line:252:5> 'int' lvalue ParmVar 0x142e22c61e0 'tlen' 'int'
|   | `-CallExpr 0x142e22ca7e8 <col:12, line:253:60> 'int'
|   |   |-ImplicitCastExpr 0x142e22ca7d0 <line:252:12> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x142e22ca450 <col:12> 'int ()' Function 0x142e22ccb30 'constant_time_select_int' 'int ()'
|   |   |-CallExpr 0x142e22ca690 <col:37, col:77> 'int'
|   |   | |-ImplicitCastExpr 0x142e22ca678 <col:37> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x142e22ca560 <col:37> 'int ()' Function 0x142e22ca498 'constant_time_lt' 'int ()'
|   |   | |-BinaryOperator 0x142e22ca638 <col:54, col:70> 'int' '-'
|   |   | | |-BinaryOperator 0x142e22ca5f0 <col:54, col:62> 'int' '-'
|   |   | | | |-ImplicitCastExpr 0x142e22ca5c0 <col:54> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x142e22ca580 <col:54> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   |   | | | `-ImplicitCastExpr 0x142e22ca5d8 <col:62> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x142e22ca5a0 <col:62> 'int' lvalue Var 0x142e22c70b8 'mdlen' 'int'
|   |   | | `-IntegerLiteral 0x142e22ca610 <col:70> 'int' 1
|   |   | `-ImplicitCastExpr 0x142e22ca6c0 <col:73> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x142e22ca658 <col:73> 'int' lvalue ParmVar 0x142e22c61e0 'tlen' 'int'
|   |   |-BinaryOperator 0x142e22ca790 <line:253:37, col:53> 'int' '-'
|   |   | |-BinaryOperator 0x142e22ca748 <col:37, col:45> 'int' '-'
|   |   | | |-ImplicitCastExpr 0x142e22ca718 <col:37> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x142e22ca6d8 <col:37> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   |   | | `-ImplicitCastExpr 0x142e22ca730 <col:45> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x142e22ca6f8 <col:45> 'int' lvalue Var 0x142e22c70b8 'mdlen' 'int'
|   |   | `-IntegerLiteral 0x142e22ca768 <col:53> 'int' 1
|   |   `-ImplicitCastExpr 0x142e22ca820 <col:56> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x142e22ca7b0 <col:56> 'int' lvalue ParmVar 0x142e22c61e0 'tlen' 'int'
|   |-ForStmt 0x142e22ce3d8 <line:254:5, line:258:5>
|   | |-BinaryOperator 0x142e22ca8a0 <line:254:10, col:22> 'int' '='
|   | | |-DeclRefExpr 0x142e22ca858 <col:10> 'int' lvalue Var 0x142e22c6a58 'msg_index' 'int'
|   | | `-IntegerLiteral 0x142e22ca878 <col:22> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x142e22ca9d0 <col:25, col:53> 'int' '<'
|   | | |-ImplicitCastExpr 0x142e22ca9b8 <col:25> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22ca8c0 <col:25> 'int' lvalue Var 0x142e22c6a58 'msg_index' 'int'
|   | | `-BinaryOperator 0x142e22ca998 <col:37, col:53> 'int' '-'
|   | |   |-BinaryOperator 0x142e22ca950 <col:37, col:45> 'int' '-'
|   | |   | |-ImplicitCastExpr 0x142e22ca920 <col:37> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x142e22ca8e0 <col:37> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   | |   | `-ImplicitCastExpr 0x142e22ca938 <col:45> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x142e22ca900 <col:45> 'int' lvalue Var 0x142e22c70b8 'mdlen' 'int'
|   | |   `-IntegerLiteral 0x142e22ca970 <col:53> 'int' 1
|   | |-CompoundAssignOperator 0x142e22caa50 <col:56, col:70> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x142e22ca9f0 <col:56> 'int' lvalue Var 0x142e22c6a58 'msg_index' 'int'
|   | | `-IntegerLiteral 0x142e22caa10 <col:70> 'int' 1
|   | `-CompoundStmt 0x142e22ce3b8 <col:73, line:258:5>
|   |   |-BinaryOperator 0x142e22cad08 <line:255:9, col:75> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x142e22caa80 <col:9> 'unsigned int' lvalue Var 0x142e22c6c60 'mask' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x142e22cacf0 <col:16, col:75> 'unsigned int' <IntegralCast>
|   |   |   `-UnaryOperator 0x142e22cacd8 <col:16, col:75> 'int' prefix '~' cannot overflow
|   |   |     `-CallExpr 0x142e22caca8 <col:17, col:75> 'int'
|   |   |       |-ImplicitCastExpr 0x142e22cac90 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x142e22caaa0 <col:17> 'int ()' Function 0x142e22cc6b8 'constant_time_eq' 'int ()'
|   |   |       |-BinaryOperator 0x142e22cac48 <col:34, col:71> 'int' '&'
|   |   |       | |-ImplicitCastExpr 0x142e22cac30 <col:34> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x142e22caac0 <col:34> 'int' lvalue Var 0x142e22c6a58 'msg_index' 'int'
|   |   |       | `-ParenExpr 0x142e22cac10 <col:46, col:71> 'int'
|   |   |       |   `-BinaryOperator 0x142e22cabf0 <col:47, col:67> 'int' '-'
|   |   |       |     |-BinaryOperator 0x142e22cab98 <col:47, col:63> 'int' '-'
|   |   |       |     | |-BinaryOperator 0x142e22cab50 <col:47, col:55> 'int' '-'
|   |   |       |     | | |-ImplicitCastExpr 0x142e22cab20 <col:47> 'int' <LValueToRValue>
|   |   |       |     | | | `-DeclRefExpr 0x142e22caae0 <col:47> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   |   |       |     | | `-ImplicitCastExpr 0x142e22cab38 <col:55> 'int' <LValueToRValue>
|   |   |       |     | |   `-DeclRefExpr 0x142e22cab00 <col:55> 'int' lvalue Var 0x142e22c70b8 'mdlen' 'int'
|   |   |       |     | `-IntegerLiteral 0x142e22cab70 <col:63> 'int' 1
|   |   |       |     `-ImplicitCastExpr 0x142e22cabd8 <col:67> 'int' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x142e22cabb8 <col:67> 'int' lvalue Var 0x142e22c68f0 'mlen' 'int'
|   |   |       `-IntegerLiteral 0x142e22cac68 <col:74> 'int' 0
|   |   `-ForStmt 0x142e22ce380 <line:256:9, line:257:74>
|   |     |-BinaryOperator 0x142e22cadc8 <line:256:14, col:26> 'int' '='
|   |     | |-DeclRefExpr 0x142e22cad28 <col:14> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |     | `-BinaryOperator 0x142e22cada8 <col:18, col:26> 'int' '+'
|   |     |   |-ImplicitCastExpr 0x142e22cad90 <col:18> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x142e22cad48 <col:18> 'int' lvalue Var 0x142e22c70b8 'mdlen' 'int'
|   |     |   `-IntegerLiteral 0x142e22cad68 <col:26> 'int' 1
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x142e22caeb0 <col:29, col:41> 'int' '<'
|   |     | |-ImplicitCastExpr 0x142e22cae98 <col:29> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x142e22cade8 <col:29> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |     | `-BinaryOperator 0x142e22cae78 <col:33, col:41> 'int' '-'
|   |     |   |-ImplicitCastExpr 0x142e22cae48 <col:33> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x142e22cae08 <col:33> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   |     |   `-ImplicitCastExpr 0x142e22cae60 <col:41> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x142e22cae28 <col:41> 'int' lvalue Var 0x142e22c6a58 'msg_index' 'int'
|   |     |-UnaryOperator 0x142e22caef0 <col:52, col:53> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x142e22caed0 <col:52> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |     `-BinaryOperator 0x142e22ce360 <line:257:13, col:74> 'unsigned char' '='
|   |       |-ArraySubscriptExpr 0x142e22caf78 <col:13, col:17> 'unsigned char' lvalue
|   |       | |-ImplicitCastExpr 0x142e22caf48 <col:13> 'unsigned char *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x142e22caf08 <col:13> 'unsigned char *' lvalue Var 0x142e22c6e48 'db' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x142e22caf60 <col:16> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x142e22caf28 <col:16> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |       `-ImplicitCastExpr 0x142e22ce348 <col:21, col:74> 'unsigned char' <IntegralCast>
|   |         `-CallExpr 0x142e22ce298 <col:21, col:74> 'int'
|   |           |-ImplicitCastExpr 0x142e22ce280 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x142e22cb088 <col:21> 'int ()' Function 0x142e22cafc0 'constant_time_select_8' 'int ()'
|   |           |-ImplicitCastExpr 0x142e22ce2d0 <col:44> 'unsigned int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x142e22cb0a8 <col:44> 'unsigned int' lvalue Var 0x142e22c6c60 'mask' 'unsigned int'
|   |           |-ImplicitCastExpr 0x142e22ce300 <col:50, col:66> 'int' <IntegralCast>
|   |           | `-ImplicitCastExpr 0x142e22ce2e8 <col:50, col:66> 'unsigned char' <LValueToRValue>
|   |           |   `-ArraySubscriptExpr 0x142e22cb190 <col:50, col:66> 'unsigned char' lvalue
|   |           |     |-ImplicitCastExpr 0x142e22cb178 <col:50> 'unsigned char *' <LValueToRValue>
|   |           |     | `-DeclRefExpr 0x142e22cb0c8 <col:50> 'unsigned char *' lvalue Var 0x142e22c6e48 'db' 'unsigned char *'
|   |           |     `-BinaryOperator 0x142e22cb158 <col:53, col:57> 'int' '+'
|   |           |       |-ImplicitCastExpr 0x142e22cb128 <col:53> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x142e22cb0e8 <col:53> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |           |       `-ImplicitCastExpr 0x142e22cb140 <col:57> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x142e22cb108 <col:57> 'int' lvalue Var 0x142e22c6a58 'msg_index' 'int'
|   |           `-ImplicitCastExpr 0x142e22ce330 <col:69, col:73> 'int' <IntegralCast>
|   |             `-ImplicitCastExpr 0x142e22ce318 <col:69, col:73> 'unsigned char' <LValueToRValue>
|   |               `-ArraySubscriptExpr 0x142e22ce260 <col:69, col:73> 'unsigned char' lvalue
|   |                 |-ImplicitCastExpr 0x142e22cb1f0 <col:69> 'unsigned char *' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x142e22cb1b0 <col:69> 'unsigned char *' lvalue Var 0x142e22c6e48 'db' 'unsigned char *'
|   |                 `-ImplicitCastExpr 0x142e22cb208 <col:72> 'int' <LValueToRValue>
|   |                   `-DeclRefExpr 0x142e22cb1d0 <col:72> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |-ForStmt 0x142e22cea90 <line:259:5, line:262:5>
|   | |-BinaryOperator 0x142e22ce458 <line:259:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x142e22ce410 <col:10> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | | `-IntegerLiteral 0x142e22ce430 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x142e22ce4e8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x142e22ce4b8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x142e22ce478 <col:17> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | | `-ImplicitCastExpr 0x142e22ce4d0 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x142e22ce498 <col:21> 'int' lvalue ParmVar 0x142e22c61e0 'tlen' 'int'
|   | |-UnaryOperator 0x142e22ce528 <col:27, col:28> 'int' postfix '++'
|   | | `-DeclRefExpr 0x142e22ce508 <col:27> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   | `-CompoundStmt 0x142e22cea70 <col:32, line:262:5>
|   |   |-BinaryOperator 0x142e22ce6a8 <line:260:9, col:47> 'unsigned int' '='
|   |   | |-DeclRefExpr 0x142e22ce540 <col:9> 'unsigned int' lvalue Var 0x142e22c6c60 'mask' 'unsigned int'
|   |   | `-BinaryOperator 0x142e22ce688 <col:16, col:47> 'unsigned int' '&'
|   |   |   |-ImplicitCastExpr 0x142e22ce658 <col:16> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x142e22ce560 <col:16> 'unsigned int' lvalue Var 0x142e22c6b20 'good' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x142e22ce670 <col:23, col:47> 'unsigned int' <IntegralCast>
|   |   |     `-CallExpr 0x142e22ce5f8 <col:23, col:47> 'int'
|   |   |       |-ImplicitCastExpr 0x142e22ce5e0 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x142e22ce580 <col:23> 'int ()' Function 0x142e22ca498 'constant_time_lt' 'int ()'
|   |   |       |-ImplicitCastExpr 0x142e22ce628 <col:40> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x142e22ce5a0 <col:40> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |   |       `-ImplicitCastExpr 0x142e22ce640 <col:43> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x142e22ce5c0 <col:43> 'int' lvalue Var 0x142e22c68f0 'mlen' 'int'
|   |   `-BinaryOperator 0x142e22cea50 <line:261:9, col:70> 'unsigned char' '='
|   |     |-ArraySubscriptExpr 0x142e22ce750 <col:9, col:13> 'unsigned char' lvalue
|   |     | |-ImplicitCastExpr 0x142e22ce720 <col:9> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x142e22ce6c8 <col:9> 'unsigned char *' lvalue ParmVar 0x142e22c20c8 'to' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x142e22ce738 <col:12> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x142e22ce700 <col:12> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |     `-ImplicitCastExpr 0x142e22cea38 <col:17, col:70> 'unsigned char' <IntegralCast>
|   |       `-CallExpr 0x142e22ce988 <col:17, col:70> 'int'
|   |         |-ImplicitCastExpr 0x142e22ce970 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x142e22ce770 <col:17> 'int ()' Function 0x142e22cafc0 'constant_time_select_8' 'int ()'
|   |         |-ImplicitCastExpr 0x142e22ce9c0 <col:40> 'unsigned int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x142e22ce790 <col:40> 'unsigned int' lvalue Var 0x142e22c6c60 'mask' 'unsigned int'
|   |         |-ImplicitCastExpr 0x142e22ce9f0 <col:46, col:62> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x142e22ce9d8 <col:46, col:62> 'unsigned char' <LValueToRValue>
|   |         |   `-ArraySubscriptExpr 0x142e22ce8c0 <col:46, col:62> 'unsigned char' lvalue
|   |         |     |-ImplicitCastExpr 0x142e22ce8a8 <col:46> 'unsigned char *' <LValueToRValue>
|   |         |     | `-DeclRefExpr 0x142e22ce7b0 <col:46> 'unsigned char *' lvalue Var 0x142e22c6e48 'db' 'unsigned char *'
|   |         |     `-BinaryOperator 0x142e22ce888 <col:49, col:61> 'int' '+'
|   |         |       |-BinaryOperator 0x142e22ce840 <col:49, col:53> 'int' '+'
|   |         |       | |-ImplicitCastExpr 0x142e22ce810 <col:49> 'int' <LValueToRValue>
|   |         |       | | `-DeclRefExpr 0x142e22ce7d0 <col:49> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |         |       | `-ImplicitCastExpr 0x142e22ce828 <col:53> 'int' <LValueToRValue>
|   |         |       |   `-DeclRefExpr 0x142e22ce7f0 <col:53> 'int' lvalue Var 0x142e22c70b8 'mdlen' 'int'
|   |         |       `-IntegerLiteral 0x142e22ce860 <col:61> 'int' 1
|   |         `-ImplicitCastExpr 0x142e22cea20 <col:65, col:69> 'int' <IntegralCast>
|   |           `-ImplicitCastExpr 0x142e22cea08 <col:65, col:69> 'unsigned char' <LValueToRValue>
|   |             `-ArraySubscriptExpr 0x142e22ce950 <col:65, col:69> 'unsigned char' lvalue
|   |               |-ImplicitCastExpr 0x142e22ce920 <col:65> 'unsigned char *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x142e22ce8e0 <col:65> 'unsigned char *' lvalue ParmVar 0x142e22c20c8 'to' 'unsigned char *'
|   |               `-ImplicitCastExpr 0x142e22ce938 <col:68> 'int' <LValueToRValue>
|   |                 `-DeclRefExpr 0x142e22ce900 <col:68> 'int' lvalue Var 0x142e22c67c8 'i' 'int'
|   |-CallExpr 0x142e22ceca8 <line:270:5, col:42> 'int'
|   | |-ImplicitCastExpr 0x142e22cec90 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x142e22cebd8 <col:5> 'int ()' Function 0x142e22ceb10 'err_clear_last_constant_time' 'int ()'
|   | `-BinaryOperator 0x142e22cec70 <col:34, col:38> 'unsigned int' '&'
|   |   |-ImplicitCastExpr 0x142e22cec58 <col:34> 'unsigned int' <IntegralCast>
|   |   | `-IntegerLiteral 0x142e22cebf8 <col:34> 'int' 1
|   |   `-ImplicitCastExpr 0x142e22cec40 <col:38> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x142e22cec20 <col:38> 'unsigned int' lvalue Var 0x142e22c6b20 'good' 'unsigned int'
|   |-LabelStmt 0x142e22cecf8 <line:271:2, col:9> 'cleanup'
|   | `-NullStmt 0x142e22cecf0 <col:9>
|   |-CallExpr 0x142e22ced88 <line:273:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x142e22ced70 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x142e22ced10 <col:5> 'int ()' Function 0x142e22c13c0 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x142e22cedb8 <col:24> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x142e22ced30 <col:24> 'unsigned char *' lvalue Var 0x142e22c6e48 'db' 'unsigned char *'
|   | `-ImplicitCastExpr 0x142e22cedd0 <col:28> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x142e22ced50 <col:28> 'int' lvalue Var 0x142e22c6848 'dblen' 'int'
|   |-CallExpr 0x142e22cee60 <line:274:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x142e22cee48 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x142e22cede8 <col:5> 'int ()' Function 0x142e22c13c0 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x142e22cee90 <col:24> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x142e22cee08 <col:24> 'unsigned char *' lvalue Var 0x142e22c6f68 'em' 'unsigned char *'
|   | `-ImplicitCastExpr 0x142e22ceea8 <col:28> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x142e22cee28 <col:28> 'int' lvalue ParmVar 0x142e22c6360 'num' 'int'
|   `-ReturnStmt 0x142e22cefe0 <line:276:5, col:51>
|     `-CallExpr 0x142e22cef78 <col:12, col:51> 'int'
|       |-ImplicitCastExpr 0x142e22cef60 <col:12> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x142e22ceec0 <col:12> 'int ()' Function 0x142e22ccb30 'constant_time_select_int' 'int ()'
|       |-ImplicitCastExpr 0x142e22cefb0 <col:37> 'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22ceee0 <col:37> 'unsigned int' lvalue Var 0x142e22c6b20 'good' 'unsigned int'
|       |-ImplicitCastExpr 0x142e22cefc8 <col:43> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x142e22cef00 <col:43> 'int' lvalue Var 0x142e22c68f0 'mlen' 'int'
|       `-UnaryOperator 0x142e22cef48 <col:49, col:50> 'int' prefix '-'
|         `-IntegerLiteral 0x142e22cef20 <col:50> 'int' 1
`-FunctionDecl 0x142e22cf480 <line:279:1, line:319:1> line:279:5 invalid PKCS1_MGF1 'int (unsigned char *, long, const unsigned char *, long, const int *)'
  |-ParmVarDecl 0x142e22cf128 <col:16, col:31> col:31 used mask 'unsigned char *'
  |-ParmVarDecl 0x142e22cf1a8 <col:37, col:42> col:42 used len 'long'
  |-ParmVarDecl 0x142e22cf270 <line:280:16, col:37> col:37 used seed 'const unsigned char *'
  |-ParmVarDecl 0x142e22cf2f0 <col:43, col:48> col:48 used seedlen 'long'
  |-ParmVarDecl 0x142e22cf370 <col:57, col:71> col:71 invalid dgst 'const int *'
  `-CompoundStmt 0x142e22d0510 <line:281:1, line:319:1>
    |-DeclStmt 0x142e22cf6b8 <line:282:5, col:23>
    | |-VarDecl 0x142e22cf578 <col:5, col:10> col:10 used i 'long'
    | `-VarDecl 0x142e22cf5f8 <col:5, col:22> col:13 used outlen 'long' cinit
    |   `-ImplicitCastExpr 0x142e22cf688 <col:22> 'long' <IntegralCast>
    |     `-IntegerLiteral 0x142e22cf660 <col:22> 'int' 0
    |-DeclStmt 0x142e22cf7d8 <line:283:5, col:25>
    | `-VarDecl 0x142e22cf770 <col:5, col:24> col:19 used cnt 'unsigned char [4]'
    |-DeclStmt 0x142e22cf9b8 <line:285:5, col:38>
    | `-VarDecl 0x142e22cf950 <col:5, col:19> col:19 invalid md 'unsigned char'
    |-DeclStmt 0x142e22cfa50 <line:286:5, col:14>
    | `-VarDecl 0x142e22cf9e8 <col:5, col:9> col:9 used mdlen 'int'
    |-DeclStmt 0x142e22cfb28 <line:287:5, col:16>
    | `-VarDecl 0x142e22cfa80 <col:5, col:15> col:9 used rv 'int' cinit
    |   `-UnaryOperator 0x142e22cfb10 <col:14, col:15> 'int' prefix '-'
    |     `-IntegerLiteral 0x142e22cfae8 <col:15> 'int' 1
    |-IfStmt 0x142e22cfc48 <line:289:5, line:290:14>
    | |-OpaqueValueExpr 0x142e22cfc30 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x142e22cfc18 <col:9, col:14> 'err' 0x142e22cfbc8
    |-IfStmt 0x142e22cfd50 <line:292:5, line:293:14>
    | |-BinaryOperator 0x142e22cfd18 <line:292:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x142e22cfd00 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x142e22cfcb8 <col:9> 'int' lvalue Var 0x142e22cf9e8 'mdlen' 'int'
    | | `-IntegerLiteral 0x142e22cfcd8 <col:17> 'int' 0
    | `-GotoStmt 0x142e22cfd38 <line:293:9, col:14> 'err' 0x142e22cfbc8
    |-ForStmt 0x142e22d02c0 <line:294:5, line:313:5>
    | |-BinaryOperator 0x142e22cfde0 <line:294:10, col:14> 'long' '='
    | | |-DeclRefExpr 0x142e22cfd68 <col:10> 'long' lvalue Var 0x142e22cf578 'i' 'long'
    | | `-ImplicitCastExpr 0x142e22cfdc8 <col:14> 'long' <IntegralCast>
    | |   `-IntegerLiteral 0x142e22cfda0 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x142e22cfea0 <col:17, col:26> 'int' '<'
    | | |-ImplicitCastExpr 0x142e22cfe70 <col:17> 'long' <LValueToRValue>
    | | | `-DeclRefExpr 0x142e22cfe00 <col:17> 'long' lvalue Var 0x142e22cf5f8 'outlen' 'long'
    | | `-ImplicitCastExpr 0x142e22cfe88 <col:26> 'long' <LValueToRValue>
    | |   `-DeclRefExpr 0x142e22cfe38 <col:26> 'long' lvalue ParmVar 0x142e22cf1a8 'len' 'long'
    | |-UnaryOperator 0x142e22cfee0 <col:31, col:32> 'long' postfix '++'
    | | `-DeclRefExpr 0x142e22cfec0 <col:31> 'long' lvalue Var 0x142e22cf578 'i' 'long'
    | `-CompoundStmt 0x142e22d0280 <col:36, line:313:5>
    |   |-BinaryOperator 0x142e22d0110 <line:295:9, col:49> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x142e22cff70 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x142e22cff58 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x142e22cfef8 <col:9> 'unsigned char [4]' lvalue Var 0x142e22cf770 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x142e22cff30 <col:13> 'int' 0
    |   | `-CStyleCastExpr 0x142e22d00e8 <col:18, col:49> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x142e22d00c8 <col:33, col:49> 'long'
    |   |     `-BinaryOperator 0x142e22d0070 <col:34, col:46> 'long' '&'
    |   |       |-ParenExpr 0x142e22d0010 <col:34, col:42> 'long'
    |   |       | `-BinaryOperator 0x142e22cfff0 <col:35, col:40> 'long' '>>'
    |   |       |   |-ImplicitCastExpr 0x142e22cffd8 <col:35> 'long' <LValueToRValue>
    |   |       |   | `-DeclRefExpr 0x142e22cff90 <col:35> 'long' lvalue Var 0x142e22cf578 'i' 'long'
    |   |       |   `-IntegerLiteral 0x142e22cffb0 <col:40> 'int' 24
    |   |       `-ImplicitCastExpr 0x142e22d0058 <col:46> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x142e22d0030 <col:46> 'int' 255
    |   |-BinaryOperator 0x142e22cd330 <line:296:9, col:49> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x142e22d0190 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x142e22d0178 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x142e22d0130 <col:9> 'unsigned char [4]' lvalue Var 0x142e22cf770 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x142e22d0150 <col:13> 'int' 1
    |   | `-CStyleCastExpr 0x142e22cd308 <col:18, col:49> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x142e22cd2e8 <col:33, col:49> 'long'
    |   |     `-BinaryOperator 0x142e22cd290 <col:34, col:46> 'long' '&'
    |   |       |-ParenExpr 0x142e22d0230 <col:34, col:42> 'long'
    |   |       | `-BinaryOperator 0x142e22d0210 <col:35, col:40> 'long' '>>'
    |   |       |   |-ImplicitCastExpr 0x142e22d01f8 <col:35> 'long' <LValueToRValue>
    |   |       |   | `-DeclRefExpr 0x142e22d01b0 <col:35> 'long' lvalue Var 0x142e22cf578 'i' 'long'
    |   |       |   `-IntegerLiteral 0x142e22d01d0 <col:40> 'int' 16
    |   |       `-ImplicitCastExpr 0x142e22cd278 <col:46> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x142e22cd250 <col:46> 'int' 255
    |   |-BinaryOperator 0x142e22cd568 <line:297:9, col:46> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x142e22cd3b0 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x142e22cd398 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x142e22cd350 <col:9> 'unsigned char [4]' lvalue Var 0x142e22cf770 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x142e22cd370 <col:13> 'int' 2
    |   | `-ImplicitCastExpr 0x142e22cd550 <col:18, col:46> 'unsigned char' <IntegralCast>
    |   |   `-BinaryOperator 0x142e22cd530 <col:18, col:46> 'int' '&'
    |   |     |-ImplicitCastExpr 0x142e22cd518 <col:18, col:42> 'int' <IntegralCast>
    |   |     | `-CStyleCastExpr 0x142e22cd4c8 <col:18, col:42> 'unsigned char' <IntegralCast>
    |   |     |   `-ParenExpr 0x142e22cd4a8 <col:33, col:42> 'long'
    |   |     |     `-ParenExpr 0x142e22cd450 <col:34, col:41> 'long'
    |   |     |       `-BinaryOperator 0x142e22cd430 <col:35, col:40> 'long' '>>'
    |   |     |         |-ImplicitCastExpr 0x142e22cd418 <col:35> 'long' <LValueToRValue>
    |   |     |         | `-DeclRefExpr 0x142e22cd3d0 <col:35> 'long' lvalue Var 0x142e22cf578 'i' 'long'
    |   |     |         `-IntegerLiteral 0x142e22cd3f0 <col:40> 'int' 8
    |   |     `-IntegerLiteral 0x142e22cd4f0 <col:46> 'int' 255
    |   |-BinaryOperator 0x142e22cd720 <line:298:9, col:41> 'unsigned char' '='
    |   | |-ArraySubscriptExpr 0x142e22cd5e8 <col:9, col:14> 'unsigned char' lvalue
    |   | | |-ImplicitCastExpr 0x142e22cd5d0 <col:9> 'unsigned char *' <ArrayToPointerDecay>
    |   | | | `-DeclRefExpr 0x142e22cd588 <col:9> 'unsigned char [4]' lvalue Var 0x142e22cf770 'cnt' 'unsigned char [4]'
    |   | | `-IntegerLiteral 0x142e22cd5a8 <col:13> 'int' 3
    |   | `-CStyleCastExpr 0x142e22cd6f8 <col:18, col:41> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x142e22cd6d8 <col:33, col:41> 'long'
    |   |     `-BinaryOperator 0x142e22cd680 <col:34, col:38> 'long' '&'
    |   |       |-ImplicitCastExpr 0x142e22cd650 <col:34> 'long' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x142e22cd608 <col:34> 'long' lvalue Var 0x142e22cf578 'i' 'long'
    |   |       `-ImplicitCastExpr 0x142e22cd668 <col:38> 'long' <IntegralCast>
    |   |         `-IntegerLiteral 0x142e22cd628 <col:38> 'int' 255
    |   |-IfStmt 0x142e22cdaf0 <line:299:9, line:302:18>
    |   | |-OpaqueValueExpr 0x142e22cdad8 <<invalid sloc>> '_Bool'
    |   | `-GotoStmt 0x142e22cdac0 <col:13, col:18> 'err' 0x142e22cfbc8
    |   `-IfStmt 0x142e22ce218 <line:303:9, line:312:9> has_else
    |     |-BinaryOperator 0x142e22cdbe8 <line:303:13, col:31> 'int' '<='
    |     | |-BinaryOperator 0x142e22cdb90 <col:13, col:22> 'long' '+'
    |     | | |-ImplicitCastExpr 0x142e22cdb48 <col:13> 'long' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x142e22cdb08 <col:13> 'long' lvalue Var 0x142e22cf5f8 'outlen' 'long'
    |     | | `-ImplicitCastExpr 0x142e22cdb78 <col:22> 'long' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x142e22cdb60 <col:22> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x142e22cdb28 <col:22> 'int' lvalue Var 0x142e22cf9e8 'mdlen' 'int'
    |     | `-ImplicitCastExpr 0x142e22cdbd0 <col:31> 'long' <LValueToRValue>
    |     |   `-DeclRefExpr 0x142e22cdbb0 <col:31> 'long' lvalue ParmVar 0x142e22cf1a8 'len' 'long'
    |     |-CompoundStmt 0x142e22cdf30 <col:36, line:307:9>
    |     | |-IfStmt 0x142e22cde78 <line:304:13, line:305:22>
    |     | | |-OpaqueValueExpr 0x142e22cde60 <<invalid sloc>> '_Bool'
    |     | | `-GotoStmt 0x142e22cde48 <col:17, col:22> 'err' 0x142e22cfbc8
    |     | `-CompoundAssignOperator 0x142e22cdf00 <line:306:13, col:23> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
    |     |   |-DeclRefExpr 0x142e22cde90 <col:13> 'long' lvalue Var 0x142e22cf5f8 'outlen' 'long'
    |     |   `-ImplicitCastExpr 0x142e22cdee8 <col:23> 'long' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x142e22cded0 <col:23> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x142e22cdeb0 <col:23> 'int' lvalue Var 0x142e22cf9e8 'mdlen' 'int'
    |     `-CompoundStmt 0x142e22ce1f8 <line:307:16, line:312:9>
    |       |-IfStmt 0x142e22ce028 <line:308:13, line:309:22>
    |       | |-OpaqueValueExpr 0x142e22ce010 <<invalid sloc>> '_Bool'
    |       | `-GotoStmt 0x142e22cdff8 <col:17, col:22> 'err' 0x142e22cfbc8
    |       `-BinaryOperator 0x142e22ce1d8 <line:311:13, col:22> 'long' '='
    |         |-DeclRefExpr 0x142e22ce180 <col:13> 'long' lvalue Var 0x142e22cf5f8 'outlen' 'long'
    |         `-ImplicitCastExpr 0x142e22ce1c0 <col:22> 'long' <LValueToRValue>
    |           `-DeclRefExpr 0x142e22ce1a0 <col:22> 'long' lvalue ParmVar 0x142e22cf1a8 'len' 'long'
    |-BinaryOperator 0x142e22d0358 <line:314:5, col:10> 'int' '='
    | |-DeclRefExpr 0x142e22d02f8 <col:5> 'int' lvalue Var 0x142e22cfa80 'rv' 'int'
    | `-IntegerLiteral 0x142e22d0330 <col:10> 'int' 0
    |-LabelStmt 0x142e22d03a0 <line:315:2, col:5> 'err'
    | `-NullStmt 0x142e22d0398 <col:5>
    `-ReturnStmt 0x142e22d0500 <line:318:5, col:12>
      `-ImplicitCastExpr 0x142e22d04e8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x142e22d04c8 <col:12> 'int' lvalue Var 0x142e22cfa80 'rv' 'int'
