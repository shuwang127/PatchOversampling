TranslationUnitDecl 0x12c462502f8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x12c46250b90 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x12c46250890 '__int128'
|-TypedefDecl 0x12c46250c00 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x12c462508b0 'unsigned __int128'
|-TypedefDecl 0x12c46250f38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x12c46250cf0 'struct __NSConstantString_tag'
|   `-Record 0x12c46250c58 '__NSConstantString_tag'
|-TypedefDecl 0x12c46250fa8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x12c462504d0 'unsigned long long'
|-TypedefDecl 0x12c46251040 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x12c46251000 'char *'
|   `-BuiltinType 0x12c46250390 'char'
|-TypedefDecl 0x12c462510b0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x12c46251000 'char *'
|   `-BuiltinType 0x12c46250390 'char'
|-TypedefDecl 0x12c46251170 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x12c462504d0 'unsigned long long'
|-TypedefDecl 0x12c462511e0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x12c46251000 'char *'
|   `-BuiltinType 0x12c46250390 'char'
|-FunctionDecl 0x12c47d4c420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x12c47d4c4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x12c47d4c530 <col:21> Implicit
|-FunctionDecl 0x12c47d4c588 prev 0x12c47d4c420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x12c47d4c2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x12c47d4c678 <col:21> Inherited Implicit
|-TypedefDecl 0x12c47d4c6b8 prev 0x12c46250fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x12c462504d0 'unsigned long long'
|-TypedefDecl 0x12c47d4c760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x12c47d4c730 'size_t' sugar
|   |-Typedef 0x12c47d4c6b8 'size_t'
|   `-BuiltinType 0x12c462504d0 'unsigned long long'
|-TypedefDecl 0x12c47d4c7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x12c46250430 'long long'
|-TypedefDecl 0x12c47d4c840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x12c46250430 'long long'
|-TypedefDecl 0x12c47d4c8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x12c46250470 'unsigned short'
|-TypedefDecl 0x12c47d4c920 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x12c46250470 'unsigned short'
|-TypedefDecl 0x12c47d4c990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x12c46250470 'unsigned short'
|-TypedefDecl 0x12c47d4ca00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x12c462503f0 'int'
|-TypedefDecl 0x12c47d4ca70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x12c46250410 'long'
|-TypedefDecl 0x12c47d4cae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x12c46250430 'long long'
|-TypedefDecl 0x12c47d4cb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x12c47d4cb40 '__time64_t' sugar
|   |-Typedef 0x12c47d4cae0 '__time64_t'
|   `-BuiltinType 0x12c46250430 'long long'
|-FunctionDecl 0x12c47d4cce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x12c47d4cf08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x12c47d82900 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x12c47d4d048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x12c47d4d0c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x12c47d4d138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x12c47d4d1b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x12c47d826a0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x12c47d829e0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x12c47d82aa0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x12c47d82c10 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x12c47d82bc0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x12c47d82b60 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x12c47d82a80 'struct threadlocaleinfostruct'
|       `-Record 0x12c47d89710 'threadlocaleinfostruct'
|-TypedefDecl 0x12c47d82d20 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x12c47d82cd0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x12c47d82c70 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x12c47d82b40 'struct threadmbcinfostruct'
|       `-Record 0x12c47d82aa0 'threadmbcinfostruct'
|-RecordDecl 0x12c47d82d78 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x12c47d82e30 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x12c47d82ef0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12c47d82f80 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x12c47d83010 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x12c47d830c8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x12c47d83070 'struct localeinfo_struct' sugar
|   `-RecordType 0x12c47d82ed0 'struct localeinfo_struct'
|     `-Record 0x12c47d82e30 'localeinfo_struct'
|-TypedefDecl 0x12c47d831a0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x12c47d83150 'struct localeinfo_struct *'
|   `-ElaboratedType 0x12c47d83070 'struct localeinfo_struct' sugar
|     `-RecordType 0x12c47d82ed0 'struct localeinfo_struct'
|       `-Record 0x12c47d82e30 'localeinfo_struct'
|-RecordDecl 0x12c47d83218 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x12c47d832d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12c47d83348 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x12c47d83408 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x12c47d834a0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x12c47d83510 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x12c47d835c8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x12c47d83570 'struct localerefcount' sugar
|   `-RecordType 0x12c47d832b0 'struct localerefcount'
|     `-Record 0x12c47d83218 'localerefcount'
|-RecordDecl 0x12c47d89710 prev 0x12c47d829e0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x12c47d89790 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12c47d89808 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x12c47d89878 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x12c47d898e8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x12c47d89958 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x12c47d89b18 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x12c47d89b88 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x12c47d89bf8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x12c47d89c68 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x12c47d89cd8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x12c47d89d48 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x12c47d89da0 parent 0x12c462502f8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x12c47d89f30 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x12c47d89fa0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x12c47d8a010 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x12c47d8a080 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x12c47d8a120 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x12c47d8a190 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x12c47d8a2a0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x12c47d8a3d8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x12c47d8a488 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x12c47d8a430 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x12c47d82a80 'struct threadlocaleinfostruct'
|     `-Record 0x12c47d89710 'threadlocaleinfostruct'
|-RecordDecl 0x12c47d8a520 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x12c47d8a5e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x12c47d8a658 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x12c47d8e760 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x12c47d8e7d0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x12c47d8e840 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x12c47d8e8b0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x12c47d8e920 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x12c47d8e990 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x12c47d8ea00 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x12c47d8eab0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x12c47d8ea60 'struct _iobuf' sugar
|   `-RecordType 0x12c47d8a5c0 'struct _iobuf'
|     `-Record 0x12c47d8a520 '_iobuf'
|-FunctionDecl 0x12c47d8ece8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x12c47d8edb8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x12c46250430 'long long'
|-FunctionDecl 0x12c47d8ef98 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47d8ee20 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x12c47d8f290 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12c47d8f070 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x12c47d8f0e8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x12c47d8f640 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x12c47d8f370 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x12c47d8f3f0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x12c47d8f470 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x12c47d99980 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12c47d99810 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x12c47d99bb0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x12c47d99a70 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x12c47d99d60 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47d99c80 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x12c47d99f50 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12c47d9a248 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x12c47d9a020 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x12c47d9a0a0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x12c47d9a400 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47d9a320 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x12c47d9a5b0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47d9a4d0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x12c47d9a760 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47d9a680 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x12c47d958d8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47d957f8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x12c47d95a68 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12c47d95dd0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x12c47d95b30 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x12c47d95c28 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x12c47d96188 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x12c47d95eb0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x12c47d95f30 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x12c47d95fa8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x12c47d96348 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47d96268 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x12c47d96610 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x12c47d96420 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x12c47d964a0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x12c47d9a820 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12c47d9ac18 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x12c47d9acb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x12c47d9ad20 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x12c47d9ad98 prev 0x12c47d9ac18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x12c47d9a9f0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x12c47d9aa70 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x12c47d9ae48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47d9b2c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x12c47d9aff0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x12c47d9b070 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x12c47d9b0f0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x12c47d9b5e0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x12c47d9b680 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x12c47d9b6e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x12c47d9b760 <col:40> Implicit printf 2 3
|-FunctionDecl 0x12c47d937b0 prev 0x12c47d9b5e0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12c47d9b3a0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x12c47d9b420 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x12c47d938a8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x12c47d93a70 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12c47d938f0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x12c47d93970 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x12c47d93cc8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12c47d93b50 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x12c47d93bc8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x12c47d93ef8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12c47d93da8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x12c47d941f0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x12c47d93fd0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x12c47d94048 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x12c47d94688 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x12c47d94728 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12c47d9b830 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x12c47d9b898 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x12c47d9b900 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x12c47d9b988 prev 0x12c47d94688 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x12c47d942d0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x12c47d94348 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47d943c0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47d94438 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x12c47d9be90 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12c47d9ba78 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x12c47d9baf0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47d9bb68 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47d9bbe0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47d9bc58 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x12c47d9c350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x12c47d9c080 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x12c47d9c100 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x12c47d9c178 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x12c47d9c408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47d97898 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x12c47d9c550 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x12c47d9c5d0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x12c47d9c650 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x12c47d9c6c8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x12c47d97c40 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x12c47d97ce0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x12c47d97d48 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x12c47d97dc0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x12c47d97e28 prev 0x12c47d97c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x12c47d97a78 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x12c47d97af8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x12c47d98008 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x12c47d97ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47d98448 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47d98148 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x12c47d981c8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x12c47d98260 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47d98500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47d9c840 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12c47d98640 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x12c47d986c0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x12c47d9cb30 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47d9c918 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12c47d9c998 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x12c47d9ca10 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47d9ce90 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x12c47d9cc10 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x12c47d9cce8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x12c47d9d248 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x12c47d9cf68 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x12c47d9cfe8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x12c47d9d068 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x12c47d9d4a8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x12c47d9d328 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x12c47d9d898 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x12c47d9d578 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x12c47d9d5f8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x12c47d9d678 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x12c47d9daf8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x12c47d9d978 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x12c47d9dfb8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x12c47d9e058 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x12c47d9e0c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x12c47d9e128 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x12c47d9e190 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x12c47d9e218 prev 0x12c47d9dfb8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x12c47d9dc00 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x12c47d9dc78 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47d9dcf0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47d9dd68 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x12c47d9e3e0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47d9e300 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x12c47d9e570 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12c47d9e6f8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12c47d9ea20 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x12c47d9e7c8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x12c47d9e870 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x12c47d9ed48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x12c47d9ec00 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x12c47d9edf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47d9f010 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47d9ef30 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x12c47d9f230 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x12c47d9f0e8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x12c47d9f3e0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47d9f300 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x12c47d9f630 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x12c47d9f4b8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x12c47d9f538 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x12c47d98800 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x12c47d988a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x12c47d98910 <col:40> Implicit printf 1 2
|-FunctionDecl 0x12c47d98978 prev 0x12c47d98800 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x12c47d9f710 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x12c47d98a68 <col:40> Inherited printf 1 2
|-FunctionDecl 0x12c47d98b98 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12c47d98ab8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x12c47d98de8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12c47d98c70 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x12c47d98ce8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x12c47d98fa8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12c47d98ec8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x12c47d991c8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x12c47d99080 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x12c47d99418 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12c47d992a0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x12c47d99318 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x12c47d995d8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x12c47d994f8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x12c47ded0c0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x12c47d996b0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x12c47d99730 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x12c47ded280 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x12c47ded1a0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x12c47ded510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x12c47ded430 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x12c47ded5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x12c47ded7b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12c47ded6d8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x12c47ded940 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12c47dedbe8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x12c47dedc88 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x12c47dedcf8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x12c47dedd60 prev 0x12c47dedbe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x12c47dedad0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x12c47dedf38 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x12c47dede08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47df1340 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47df1108 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x12c47df1180 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47df13f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47df1618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12c47df1538 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x12c47df1868 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47df16f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x12c47df1768 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47df1c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x12c47df1a00 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x12c47df1a80 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x12c47df1cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47df1f00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12c47df1e20 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x12c47dea108 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x12c47de9fc0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x12c47dea2f0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x12c47dea740 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x12c47dea3b8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x12c47dea438 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x12c47dea4b8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x12c47dea530 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x12c47deabc0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x12c47dea830 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47dea8a8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47dea920 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47dea9a0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x12c47df2040 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12c47deacb0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47dead28 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47deada8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x12c47df2208 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12c47df2128 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x12c47df25e0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x12c47df2680 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12c47df26e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x12c47df2760 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x12c47df27c8 prev 0x12c47df25e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x12c47df23a0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x12c47df2420 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x12c47df29a8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x12c47df2878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47df2d98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47df2ab8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x12c47df2b38 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x12c47df2bb0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47df2e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47dee100 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x12c47df2f98 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x12c47dee000 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x12c47dee3f8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47dee1e0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x12c47dee260 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x12c47dee2d8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47dee888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12c47dee5a0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x12c47dee618 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47dee698 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x12c47dee940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47deef10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47deeb80 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x12c47deebf8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47deec78 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x12c47deecf0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47def010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47def370 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12c47def158 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x12c47def1d0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47def250 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x12c47def708 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47def458 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x12c47def4d0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47def550 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x12c47def5c8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47def968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x12c47defa08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47defcc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x12c47defb50 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x12c47deafd0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x12c47defd98 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x12c47defe10 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x12c47deb250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x12c47deb170 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x12c47deb2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47deb5b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12c47deb440 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x12c47deb4b8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x12c47deb9d0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12c47deba70 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x12c47debad8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12c47debb40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12c47debbc0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x12c47debc28 prev 0x12c47deb9d0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12c47deb690 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x12c47deb710 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x12c47deb788 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12c47debd28 <col:40> Inherited printf 2 0
|-FunctionDecl 0x12c47df0020 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x12c47df00c0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x12c47df0128 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12c47df0190 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12c47df0210 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x12c47df0278 prev 0x12c47df0020 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x12c47debd70 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x12c47debdf0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x12c47debe68 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12c47df0378 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x12c47df05d8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x12c47df03c0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x12c47df0440 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x12c47df04b8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df08d0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x12c47df06b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x12c47df0738 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x12c47df07b0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df0c18 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12c47df0cb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12c47df0d20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12c47df0d98 <col:40> Implicit printf 1 0
|-FunctionDecl 0x12c47df0e00 prev 0x12c47df0c18 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12c47df09b8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x12c47df0a30 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12c47df0ef8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x12c47df3188 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x12c47df3228 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12c47df3290 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12c47df3308 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x12c47df3370 prev 0x12c47df3188 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x12c47df0f48 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x12c47df3050 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12c47df3468 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x12c47df3630 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12c47df34b8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x12c47df3530 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df3888 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12c47df3710 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x12c47df3788 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df3de8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12c47df3e88 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12c47df3ef0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x12c47df3f58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12c47df3fc0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12c47debfe0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x12c47dec048 prev 0x12c47df3de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12c47df3a28 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47df3aa0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47df3b20 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x12c47df3b98 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x12c47dec238 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x12c47dec108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47dec6a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12c47dec288 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47dec300 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47dec378 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47dec3f8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x12c47dec470 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47decae8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12c47dec7a0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47dec818 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47dec890 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47dec910 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x12c47dec988 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47deceb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12c47decca0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x12c47decd18 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47decd98 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x12c47decf70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47df9520 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12c47df9270 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x12c47df92e8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47df9368 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x12c47df93e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x12c47df95e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47df99d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12c47df9728 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47df97a0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47df9820 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x12c47df9898 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df9d98 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x12c47df9ac8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x12c47df9b48 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x12c47df9bc0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47dfb170 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x12c47dfb210 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12c47dfb278 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x12c47dfb2f0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x12c47dfb358 prev 0x12c47dfb170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x12c47df9f40 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x12c47df9fc0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x12c47dfb538 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x12c47dfb408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47dfb960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x12c47dfba00 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x12c47dfba68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x12c47dfbad0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12c47dfbb50 <col:94> Implicit printf 2 0
|-FunctionDecl 0x12c47dfbbb8 prev 0x12c47dfb960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x12c47dfb648 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x12c47dfb6c8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x12c47dfb740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x12c47dfbda0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x12c47dfbc70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47df5070 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x12c47df5110 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12c47df5178 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x12c47df51e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x12c47df5260 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x12c47df52c8 prev 0x12c47df5070 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x12c47dfbdf0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x12c47dfbe70 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x12c47dfbee8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x12c47df53c8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x12c47df5590 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12c47df5418 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x12c47df5490 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df5888 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12c47df5670 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47df56e8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47df5768 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x12c47df5c20 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12c47df5970 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47df59e8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47df5a68 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x12c47df5ae0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df5e88 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x12c47df5d08 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x12c47df5d88 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x12c47df6080 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12c47df5f68 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x12c47df6370 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x12c47df6158 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x12c47df61d0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47df6250 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x12c47df6668 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x12c47df6450 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12c47df64d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x12c47df6548 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df68c8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12c47df6750 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x12c47df67c8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df6c58 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x12c47df69a8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x12c47df6a20 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47df6aa0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x12c47df6b18 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df6e28 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x12c47df6d48 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x12c47df7090 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x12c47df6f00 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x12c47df6f78 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df7250 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x12c47df7170 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x12c47df73e0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x12c47df7628 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47df74b0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x12c47df7528 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47df7880 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47df7708 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x12c47df7780 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47df7ad8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47df7960 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x12c47df79d8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47df7e88 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47df7bb8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x12c47df7c30 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47df7ca8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df4180 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47df7f70 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x12c47df7fe8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47df4060 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df4478 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47df4268 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x12c47df42e0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47df4358 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47df4770 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47df4558 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x12c47df45d8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x12c47df4650 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47df4a68 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47df4850 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12c47df48d0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x12c47df4948 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47df4d60 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47df4b48 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12c47df4bc8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x12c47df4c40 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47dfc240 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47df4e40 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12c47df4ec0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x12c47df4f38 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47df4fb0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47dfc5d8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47dfc328 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12c47dfc3a8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x12c47dfc420 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47dfc498 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47dfc970 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47dfc6c0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12c47dfc740 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x12c47dfc7b8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47dfc830 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47dfce08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47dfcb20 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47dfcba0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x12c47dfcc18 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47dfcec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47dfa3d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47dfd008 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47dfa0c0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47dfa140 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x12c47dfa1b8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47dfa770 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47dfa4c0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47dfa538 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47dfa5b8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x12c47dfa630 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47dfacc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47dfa960 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47dfa9e0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x12c47dfaa58 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12c47dfaad0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x12c47dfad80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e00358 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47dfaec8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47dfaf40 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47dfafc0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x12c47dfb038 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e00120 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e00798 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e00450 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47e004c8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e00548 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x12c47e005c0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e00638 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e00a08 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e00890 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x12c47e00908 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e00c60 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e00ae8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x12c47e00b60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e00f50 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e00d40 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x12c47e00db8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e00e30 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e02270 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e01038 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x12c47e010b0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e02150 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e026c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e02418 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47e02490 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e02510 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x12c47e02588 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47e02788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e02b80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e028d0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47e02948 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e029c8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x12c47e02a40 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e01130 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e02c70 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47e02ce8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e02d60 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e02de0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x12c47e02e58 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e01670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e01328 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47e013a0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e01420 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x12c47e01498 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12c47e01510 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x12c47e01738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e01bb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e01888 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47e01900 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e01980 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x12c47e019f8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e01a70 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e031b0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e01cb0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x12c47e01d28 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e01da0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e01e20 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x12c47e01e98 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e01f10 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e03570 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x12c47e032a8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12c47e03320 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x12c47e033a0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x12c47e037e0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x12c47e03670 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x12c47e039f8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x12c47e03cd8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x12c47e03ac0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x12c47e03b38 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x12c47e03f20 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x12c47e03db0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x12c47e04160 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x12c47e03ff0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x12c47e042e8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x12c47e04520 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x12c47e043b0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x12c47e04428 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x12c47e046d0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x12c47e045f8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x12c47e04978 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x12c47e047a0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x12c47e04818 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x12c47e04d20 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x12c47e04a50 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x12c47e04ad0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x12c47e04b48 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x12c47e05020 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x12c47e04e00 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x12c47e04e78 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x12c47e05328 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x12c47e050f8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x12c47e05180 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x12c47e05630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x12c47e054c0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x12c47e056d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e05998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x12c47e05818 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x12c47e05ca0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e05a68 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x12c47e05ae0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e05ef0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e05d78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x12c47e05df0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47dfe100 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12c47e05fc8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47dfe2b0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12c47dfe1d0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47dfe460 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12c47dfe380 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47dfe7f8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47dfe530 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x12c47dfe5a8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47dfe620 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47dfeae8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47dfe8d8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x12c47dfe950 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47dfe9c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47dfedd8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47dfebc8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12c47dfec40 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47dfecb8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e06180 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47dfeeb8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x12c47dfef30 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47dfefa8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e06480 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e06260 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e062d8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e066d0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e06558 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e065d0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e06920 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e067a8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e06820 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e06b70 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e069f8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e06a70 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e06f28 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e06c48 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x12c47e06cc0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47e06d38 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47dff320 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e07008 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x12c47e07080 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e070f8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47dff110 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47dff6d8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47dff408 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12c47dff480 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47dff4f8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47dff9c8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47dff7b8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x12c47dff830 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47dff8a8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47dffcb8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47dffaa8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47dffb20 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47dffb98 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e00040 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47dffd98 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47dffe10 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47dffe88 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47dfff00 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e07540 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e071b8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e07230 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e072a8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47e07320 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e07a48 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e07628 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e076a0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e07718 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e07790 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e07808 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e07e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e07bf8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12c47e07c70 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e07ce8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12c47e07ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e083d0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e080c0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12c47e081a0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e08218 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e08290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x12c47e08490 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e08748 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e085d0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x12c47e08648 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e08900 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12c47e08820 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e08be0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e089d0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12c47e08a48 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e08ac0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e08e38 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e08cc0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e08d38 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e12060 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e08f10 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e08f88 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47e09000 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e123e8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e12140 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e121b8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e12230 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e122a8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e125b0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12c47e124d0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e127f8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e12680 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e126f8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e12b00 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e128d0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e12948 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e12d50 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e12bd8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e12c50 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e12fa0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e12e28 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e12ea0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e10338 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e10068 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e100e0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e10158 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e10628 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e10418 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e10490 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e10508 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e10918 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e10708 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e10780 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e107f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e10cd8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e109f8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x12c47e10a70 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e10ae8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e0aff0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e10db8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12c47e10e30 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e10ea8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e0b2e0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e0b0d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12c47e0b148 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e0b1c0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e0b730 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e0b3c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12c47e0b438 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e0b4b0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e0b528 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e0bac0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e0b818 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x12c47e0b890 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e0b908 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e0b980 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e0be50 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e0bba8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x12c47e0bc20 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e0bc98 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e0bd10 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e0c310 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e0bf38 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e0c000 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e0c078 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e0c0f0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e0c6a0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e0c3f8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e0c470 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e0c4e8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e0c560 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e0ca30 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e0c788 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e0c800 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e0c878 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e0c8f0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e0cf38 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e0cb18 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e0cb90 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e0cc08 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e0cc80 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e0ccf8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e143e8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e140a8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e14120 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e14198 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e14210 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e14288 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e14818 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e144d8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e14550 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e145c8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e14640 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e146b8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e14a80 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e14908 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e14980 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e14cd0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e14b58 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e14bd0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e14fb8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e14da8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e14e20 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e14e98 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e113e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e11140 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e111b8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e11230 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e112a8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47e114a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e11a18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e115f0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e11668 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e116e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e11758 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e117d0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e11f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e11c10 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e11c88 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e11d00 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e11d78 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12c47e11df0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x12c47e15090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e156a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e151d8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x12c47e15250 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e152c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e15340 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e153b8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e15430 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e15ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e15968 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12c47e159e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x12c47e15c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12c47e15d68 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12c47e0e288 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e16020 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12c47e0e030 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e0e0a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x12c47e0e340 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12c47e0e458 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12c47e0e9f8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e0e718 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12c47e0e790 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e0e808 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x12c47e0eab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12c47e0ebd0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12c47e13280 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e0ee90 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x12c47e0ef08 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e0ef80 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12c47e13070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x12c47e13340 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x12c47e13460 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x12c47e13768 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x12c47e13588 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x12c47e13600 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e13678 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x12c47e19370 <line:37:1, line:44:1>
|   |-DeclStmt 0x12c47e138b0 <line:38:5, col:21>
|   | `-VarDecl 0x12c47e13848 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x12c47e13948 <line:39:5, col:13>
|   | `-VarDecl 0x12c47e138e0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x12c47e13ca0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x12c47e13c88 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12c47e13ba0 <col:34> '<builtin fn type>' Function 0x12c47e13a38 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x12c47e13bd8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x12c47e13848 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x12c47e13c10 <col:29> 'const wchar_t *' lvalue ParmVar 0x12c47e13678 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x12c47e13f60 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x12c47e13cd0 <col:5> 'int' lvalue Var 0x12c47e138e0 '_Ret' 'int'
|   | `-CallExpr 0x12c47e13ea0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x12c47e13e88 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12c47e13d08 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12c47e0cf38 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x12c47e13ee8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12c47e13d28 <col:27> 'wchar_t *' lvalue ParmVar 0x12c47e13588 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x12c47e13f00 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12c47e13d48 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12c47e13600 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x12c47e13f18 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12c47e13d68 <col:44> 'const wchar_t *' lvalue ParmVar 0x12c47e13678 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x12c47e13f30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x12c47e13df0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x12c47e13dc8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x12c47e13d88 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x12c47e13f48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12c47e13e10 <col:59> 'va_list':'char *' lvalue Var 0x12c47e13848 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x12c47e19300 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x12c47e192e8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12c47e19238 <col:34> '<builtin fn type>' Function 0x12c47e190d0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x12c47e19270 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x12c47e13848 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x12c47e19360 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x12c47e19348 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12c47e19328 <col:12> 'int' lvalue Var 0x12c47e138e0 '_Ret' 'int'
|-FunctionDecl 0x12c47e13a38 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x12c47e13ad8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x12c47e13b48 <col:34> Implicit
|-FunctionDecl 0x12c47e190d0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x12c47e19170 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x12c47e191e0 <col:34> Implicit
|-FunctionDecl 0x12c47e19668 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x12c47e193c0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x12c47e19438 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e194b0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e19528 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x12c47e19950 <line:50:1, line:52:1>
|   `-ReturnStmt 0x12c47e19940 <line:51:5, col:62>
|     `-CallExpr 0x12c47e19880 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x12c47e19868 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12c47e19740 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12c47e0cf38 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x12c47e198c8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12c47e19760 <col:27> 'wchar_t *' lvalue ParmVar 0x12c47e193c0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x12c47e198e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x12c47e19780 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12c47e19438 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x12c47e198f8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12c47e197a0 <col:44> 'const wchar_t *' lvalue ParmVar 0x12c47e194b0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x12c47e19910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x12c47e19828 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x12c47e19800 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x12c47e197c0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x12c47e19928 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x12c47e19848 <col:59> 'va_list':'char *' lvalue ParmVar 0x12c47e19528 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x12c47e19bf0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x12c47e19978 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x12c47e199f0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e19a68 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e19ae0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x12c47e16148 <line:61:1, line:68:1>
|   |-DeclStmt 0x12c47e19d40 <line:62:5, col:21>
|   | `-VarDecl 0x12c47e19cd8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x12c47e19dd8 <line:63:5, col:13>
|   | `-VarDecl 0x12c47e19d70 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x12c47e19e80 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x12c47e19e68 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12c47e19df0 <col:34> '<builtin fn type>' Function 0x12c47e13a38 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x12c47e19e10 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x12c47e19cd8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x12c47e19e48 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x12c47e19ae0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x12c47e1a080 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x12c47e19eb0 <col:5> 'int' lvalue Var 0x12c47e19d70 '_Ret' 'int'
|   | `-CallExpr 0x12c47e19fc0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x12c47e19fa8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x12c47e19ee8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12c47e0cf38 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x12c47e1a008 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12c47e19f08 <col:27> 'wchar_t *' lvalue ParmVar 0x12c47e19978 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x12c47e1a020 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12c47e19f28 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12c47e199f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x12c47e1a038 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12c47e19f48 <col:44> 'const wchar_t *' lvalue ParmVar 0x12c47e19a68 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x12c47e1a050 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12c47e19f68 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x12c47e19ae0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x12c47e1a068 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x12c47e19f88 <col:64> 'va_list':'char *' lvalue Var 0x12c47e19cd8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x12c47e160d8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x12c47e160c0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x12c47e1a0a0 <col:34> '<builtin fn type>' Function 0x12c47e190d0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x12c47e160a0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x12c47e19cd8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x12c47e16138 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x12c47e16120 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x12c47e16100 <col:12> 'int' lvalue Var 0x12c47e19d70 '_Ret' 'int'
|-FunctionDecl 0x12c47e164d8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x12c47e16198 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x12c47e16210 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e16288 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e16300 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x12c47e16378 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x12c47e16760 <line:74:1, line:76:1>
|   `-ReturnStmt 0x12c47e16750 <line:75:5, col:67>
|     `-CallExpr 0x12c47e16690 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x12c47e16678 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x12c47e165b8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x12c47e0cf38 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x12c47e166d8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12c47e165d8 <col:27> 'wchar_t *' lvalue ParmVar 0x12c47e16198 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x12c47e166f0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x12c47e165f8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x12c47e16210 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x12c47e16708 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x12c47e16618 <col:44> 'const wchar_t *' lvalue ParmVar 0x12c47e16288 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x12c47e16720 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x12c47e16638 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x12c47e16300 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x12c47e16738 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x12c47e16658 <col:64> 'va_list':'char *' lvalue ParmVar 0x12c47e16378 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x12c47e169a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12c47e16788 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x12c47e16800 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x12c47e16bf8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x12c47e16a80 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e16af8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e16ee0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x12c47e16cd0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e16d48 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x12c47e16dc0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x12c47e1d288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e1d110 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x12c47e1d188 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12c47e1d338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e1d748 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e1d538 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x12c47e1d5b0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1d628 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47e1d800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e1dab8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e1d940 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x12c47e1d9b8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e1dda0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e1db90 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x12c47e1dc08 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e1dc80 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e1a150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e1df40 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1dfb8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12c47e1a200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e1a6d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e1a400 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1a478 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1a4f0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47e1a790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e1aa48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e1a8d0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x12c47e1a948 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e1ad30 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e1ab20 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1ab98 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e1ac10 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e1e208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e1aed0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1af48 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e1afc0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12c47e1e2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e1e840 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e1e4c0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1e538 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e1e5b0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1e628 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47e1e900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e1ec50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e1ea40 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1eab8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47e1eb30 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e1efd8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e1ed30 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1eda8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e1ee20 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e1ee98 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e18270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x12c47e18190 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x12c47e18318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e18690 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e18518 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x12c47e18590 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x12c47e18740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e18960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x12c47e18880 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x12c47e18ba8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x12c47e18a30 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x12c47e18aa8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x12c47e18ea8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x12c47e18c88 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x12c47e18d00 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x12c47e1b298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12c47e19040 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1b0f0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x12c47e1b348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e1b750 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12c47e1b490 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x12c47e1b508 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x12c47e1b580 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x12c47e1bbb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x12c47e1b8f0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1b968 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1b9e0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x12c47e1bc68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e170f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x12c47e1bdb0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x12c47e1be28 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x12c47e1bea0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x12c47e1bf18 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x12c47e17350 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x12c47e171e0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x12c47e17590 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x12c47e17420 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x12c47e17498 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x12c47e17748 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x12c47e17668 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x12c47e17a38 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x12c47e17818 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x12c47e17890 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x12c47e17ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x12c47e17bd0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x12c47e17d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x12c47e17f68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x12c47e17e90 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x12c47e24278 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x12c47e18038 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x12c47e24180 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x12c47e244c0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x12c47e24350 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x12c47e243c8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x12c47e24670 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12c47e24598 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x12c47e24818 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x12c47e24740 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x12c47e249c8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47e248e8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x12c47e24b78 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x12c47e24a98 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x12c47e24ef0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12c47e24c50 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x12c47e24cc8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e24d40 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47e24db8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x12c47e1f300 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12c47e24fe0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x12c47e25058 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e250d0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e1f130 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47e1f1a8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x12c47e1f610 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x12c47e1f3f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x12c47e1f470 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x12c47e1f4f0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x12c47e1f7d0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x12c47e1f6f0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x12c47e1fac0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x12c47e1f8a0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x12c47e1f920 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x12c47e1f9a0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x12c47e1fc80 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x12c47e1fba0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x12c47e1fff8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x12c47e1fd58 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x12c47e1fdd0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x12c47e1fe48 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x12c47e1fec0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x12c47e26318 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12c47e261a0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x12c47e26218 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x12c47e26650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x12c47e264d0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x12c47e26550 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x12c47e26700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x12c47e269b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12c47e26a58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x12c47e26d98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x12c47e26c20 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x12c47e26ca0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x12c47e26e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x12c47e23170 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12c47e23210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x12c47e234b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x12c47e233d0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x12c47e23558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x12c47e237d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12c47e23878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x12c47e23b20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x12c47e23a40 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x12c47e23bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x12c47e23ea8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x12c47e23dc8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x12c47e23f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x12c47e27328 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x12c47e271b0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x12c47e27228 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x12c47e273d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x12c47e27698 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x12c47e27738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x12c47e27b70 <.//openssl//file_jk/after\crypto\rsa\rsa_pk1.c:18:1, line:42:1> line:18:5 RSA_padding_add_PKCS1_type_1 'int (unsigned char *, int, const unsigned char *, int)'
| |-ParmVarDecl 0x12c47e27890 <col:34, col:49> col:49 used to 'unsigned char *'
| |-ParmVarDecl 0x12c47e27910 <col:53, col:57> col:57 used tlen 'int'
| |-ParmVarDecl 0x12c47e27990 <line:19:34, col:55> col:55 used from 'const unsigned char *'
| |-ParmVarDecl 0x12c47e27a10 <col:61, col:65> col:65 used flen 'int'
| `-CompoundStmt 0x12c47e28d08 <line:20:1, line:42:1>
|   |-DeclStmt 0x12c47e27cc8 <line:21:5, col:10>
|   | `-VarDecl 0x12c47e27c60 <col:5, col:9> col:9 used j 'int'
|   |-DeclStmt 0x12c47e27d60 <line:22:5, col:21>
|   | `-VarDecl 0x12c47e27cf8 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-IfStmt 0x12c47e27f80 <line:24:5, line:28:5>
|   | |-OpaqueValueExpr 0x12c47e27f68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x12c47e27f50 <line:24:49, line:28:5>
|   |   `-ReturnStmt 0x12c47e27f40 <line:27:9, col:18>
|   |     `-ParenExpr 0x12c47e27f20 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x12c47e27ef8 <col:17> 'int' 0
|   |-BinaryOperator 0x12c47e28048 <line:30:5, col:26> 'unsigned char *' '='
|   | |-DeclRefExpr 0x12c47e27f98 <col:5> 'unsigned char *' lvalue Var 0x12c47e27cf8 'p' 'unsigned char *'
|   | `-CStyleCastExpr 0x12c47e28020 <col:9, col:26> 'unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x12c47e28008 <col:26> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x12c47e27fd0 <col:26> 'unsigned char *' lvalue ParmVar 0x12c47e27890 'to' 'unsigned char *'
|   |-BinaryOperator 0x12c47e28118 <line:32:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x12c47e280c0 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x12c47e280a0 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x12c47e28088 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x12c47e28068 <col:7> 'unsigned char *' lvalue Var 0x12c47e27cf8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e28100 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x12c47e280d8 <col:14> 'int' 0
|   |-BinaryOperator 0x12c47e28200 <line:33:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x12c47e28190 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x12c47e28170 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x12c47e28158 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x12c47e28138 <col:7> 'unsigned char *' lvalue Var 0x12c47e27cf8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e281e8 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x12c47e281c0 <col:14> 'int' 1
|   |-BinaryOperator 0x12c47e28330 <line:36:5, col:20> 'int' '='
|   | |-DeclRefExpr 0x12c47e28220 <col:5> 'int' lvalue Var 0x12c47e27c60 'j' 'int'
|   | `-BinaryOperator 0x12c47e28310 <col:9, col:20> 'int' '-'
|   |   |-BinaryOperator 0x12c47e282b8 <col:9, col:16> 'int' '-'
|   |   | |-ImplicitCastExpr 0x12c47e282a0 <col:9> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12c47e28258 <col:9> 'int' lvalue ParmVar 0x12c47e27910 'tlen' 'int'
|   |   | `-IntegerLiteral 0x12c47e28278 <col:16> 'int' 3
|   |   `-ImplicitCastExpr 0x12c47e282f8 <col:20> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12c47e282d8 <col:20> 'int' lvalue ParmVar 0x12c47e27a10 'flen' 'int'
|   |-CallExpr 0x12c47e28690 <line:37:5, col:22> 'void *'
|   | |-ImplicitCastExpr 0x12c47e28678 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12c47e28580 <col:5> 'void *(void *, int, unsigned long long)' Function 0x12c47e28390 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x12c47e286e0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x12c47e286c8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e285b8 <col:12> 'unsigned char *' lvalue Var 0x12c47e27cf8 'p' 'unsigned char *'
|   | |-IntegerLiteral 0x12c47e285d8 <col:15> 'int' 255
|   | `-ImplicitCastExpr 0x12c47e28710 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x12c47e286f8 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12c47e28600 <col:21> 'int' lvalue Var 0x12c47e27c60 'j' 'int'
|   |-CompoundAssignOperator 0x12c47e28780 <line:38:5, col:10> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-DeclRefExpr 0x12c47e28728 <col:5> 'unsigned char *' lvalue Var 0x12c47e27cf8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e28768 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x12c47e28748 <col:10> 'int' lvalue Var 0x12c47e27c60 'j' 'int'
|   |-BinaryOperator 0x12c47e28850 <line:39:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x12c47e28808 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x12c47e287e8 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x12c47e287d0 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x12c47e287b0 <col:7> 'unsigned char *' lvalue Var 0x12c47e27cf8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e28838 <col:14> 'unsigned char' <IntegralCast>
|   |   `-CharacterLiteral 0x12c47e28820 <col:14> 'int' 0
|   |-CallExpr 0x12c47e28c00 <line:40:5, col:39> 'void *'
|   | |-ImplicitCastExpr 0x12c47e28be8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12c47e28aa0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x12c47e288b0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x12c47e28c50 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x12c47e28c38 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e28ad8 <col:12> 'unsigned char *' lvalue Var 0x12c47e27cf8 'p' 'unsigned char *'
|   | |-ImplicitCastExpr 0x12c47e28c80 <col:15> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x12c47e28c68 <col:15> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e28af8 <col:15> 'const unsigned char *' lvalue ParmVar 0x12c47e27990 'from' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e28c98 <col:21, col:35> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x12c47e28b68 <col:21, col:35> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x12c47e28b50 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x12c47e28b18 <col:35> 'int' lvalue ParmVar 0x12c47e27a10 'flen' 'int'
|   `-ReturnStmt 0x12c47e28cf8 <line:41:5, col:14>
|     `-ParenExpr 0x12c47e28cd8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x12c47e28cb0 <col:13> 'int' 1
|-FunctionDecl 0x12c47e28390 <line:37:5> col:5 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x12c47e28430 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12c47e28498 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x12c47e28500 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x12c47e288b0 <line:40:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x12c47e28950 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x12c47e289b8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x12c47e28a20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x12c47e29110 <line:44:1, line:115:1> line:44:5 RSA_padding_check_PKCS1_type_1 'int (unsigned char *, int, const unsigned char *, int, int)'
| |-ParmVarDecl 0x12c47e28d90 <col:36, col:51> col:51 used to 'unsigned char *'
| |-ParmVarDecl 0x12c47e28e10 <col:55, col:59> col:59 used tlen 'int'
| |-ParmVarDecl 0x12c47e28e90 <line:45:36, col:57> col:57 used from 'const unsigned char *'
| |-ParmVarDecl 0x12c47e28f10 <col:63, col:67> col:67 used flen 'int'
| |-ParmVarDecl 0x12c47e28f90 <line:46:36, col:40> col:40 used num 'int'
| `-CompoundStmt 0x12c47e29788 <line:47:1, line:115:1>
|   |-DeclStmt 0x12c47e212a8 <line:48:5, col:13>
|   | |-VarDecl 0x12c47e211a8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x12c47e21228 <col:5, col:12> col:12 used j 'int'
|   |-DeclStmt 0x12c47e21340 <line:49:5, col:27>
|   | `-VarDecl 0x12c47e212d8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-BinaryOperator 0x12c47e213c8 <line:51:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x12c47e21358 <col:5> 'const unsigned char *' lvalue Var 0x12c47e212d8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e213b0 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x12c47e21390 <col:9> 'const unsigned char *' lvalue ParmVar 0x12c47e28e90 'from' 'const unsigned char *'
|   |-IfStmt 0x12c47e214b8 <line:60:5, line:61:17>
|   | |-BinaryOperator 0x12c47e21448 <line:60:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x12c47e21430 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c47e213e8 <col:9> 'int' lvalue ParmVar 0x12c47e28f90 'num' 'int'
|   | | `-IntegerLiteral 0x12c47e21408 <col:15> 'int' 11
|   | `-ReturnStmt 0x12c47e214a8 <line:61:9, col:17>
|   |   `-UnaryOperator 0x12c47e21490 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x12c47e21468 <col:17> 'int' 1
|   |-IfStmt 0x12c47e21740 <line:64:5, line:71:5>
|   | |-BinaryOperator 0x12c47e21540 <line:64:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x12c47e21510 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c47e214d0 <col:9> 'int' lvalue ParmVar 0x12c47e28f90 'num' 'int'
|   | | `-ImplicitCastExpr 0x12c47e21528 <col:16> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e214f0 <col:16> 'int' lvalue ParmVar 0x12c47e28f10 'flen' 'int'
|   | `-CompoundStmt 0x12c47e21720 <col:22, line:71:5>
|   |   |-IfStmt 0x12c47e216d0 <line:65:9, line:69:9>
|   |   | |-BinaryOperator 0x12c47e21628 <line:65:13, col:23> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x12c47e21610 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x12c47e215f8 <col:13, col:18> 'unsigned char' <LValueToRValue>
|   |   | | |   `-ParenExpr 0x12c47e215b0 <col:13, col:18> 'const unsigned char' lvalue
|   |   | | |     `-UnaryOperator 0x12c47e21598 <col:14, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |       `-UnaryOperator 0x12c47e21580 <col:15, col:16> 'const unsigned char *' postfix '++'
|   |   | | |         `-DeclRefExpr 0x12c47e21560 <col:15> 'const unsigned char *' lvalue Var 0x12c47e212d8 'p' 'const unsigned char *'
|   |   | | `-IntegerLiteral 0x12c47e215d0 <col:23> 'int' 0
|   |   | `-CompoundStmt 0x12c47e216b8 <col:29, line:69:9>
|   |   |   `-ReturnStmt 0x12c47e216a8 <line:68:13, col:21>
|   |   |     `-UnaryOperator 0x12c47e21690 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x12c47e21668 <col:21> 'int' 1
|   |   `-UnaryOperator 0x12c47e21708 <line:70:9, col:13> 'int' postfix '--'
|   |     `-DeclRefExpr 0x12c47e216e8 <col:9> 'int' lvalue ParmVar 0x12c47e28f10 'flen' 'int'
|   |-IfStmt 0x12c47e21a68 <line:73:5, line:77:5>
|   | |-BinaryOperator 0x12c47e219a0 <line:73:9, col:47> 'int' '||'
|   | | |-ParenExpr 0x12c47e21850 <col:9, col:27> 'int'
|   | | | `-BinaryOperator 0x12c47e21830 <col:10, col:26> 'int' '!='
|   | | |   |-ImplicitCastExpr 0x12c47e21818 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x12c47e21758 <col:10> 'int' lvalue ParmVar 0x12c47e28f90 'num' 'int'
|   | | |   `-ParenExpr 0x12c47e217f8 <col:17, col:26> 'int'
|   | | |     `-BinaryOperator 0x12c47e217d8 <col:18, col:25> 'int' '+'
|   | | |       |-ImplicitCastExpr 0x12c47e217c0 <col:18> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x12c47e21778 <col:18> 'int' lvalue ParmVar 0x12c47e28f10 'flen' 'int'
|   | | |       `-IntegerLiteral 0x12c47e21798 <col:25> 'int' 1
|   | | `-ParenExpr 0x12c47e21980 <col:32, col:47> 'int'
|   | |   `-BinaryOperator 0x12c47e21960 <col:33, col:43> 'int' '!='
|   | |     |-ImplicitCastExpr 0x12c47e21948 <col:33, col:38> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x12c47e21930 <col:33, col:38> 'unsigned char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x12c47e218f0 <col:33, col:38> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |     |     `-ParenExpr 0x12c47e218d0 <col:34, col:38> 'const unsigned char *'
|   | |     |       `-UnaryOperator 0x12c47e218b8 <col:35, col:36> 'const unsigned char *' postfix '++'
|   | |     |         `-DeclRefExpr 0x12c47e21898 <col:35> 'const unsigned char *' lvalue Var 0x12c47e212d8 'p' 'const unsigned char *'
|   | |     `-IntegerLiteral 0x12c47e21908 <col:43> 'int' 1
|   | `-CompoundStmt 0x12c47e21a50 <col:50, line:77:5>
|   |   `-ReturnStmt 0x12c47e21a40 <line:76:9, col:19>
|   |     `-ParenExpr 0x12c47e21a20 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x12c47e21a08 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x12c47e219e0 <col:18> 'int' 1
|   |-BinaryOperator 0x12c47e21b38 <line:80:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x12c47e21a80 <col:5> 'int' lvalue Var 0x12c47e21228 'j' 'int'
|   | `-BinaryOperator 0x12c47e21b18 <col:9, col:16> 'int' '-'
|   |   |-ImplicitCastExpr 0x12c47e21b00 <col:9> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x12c47e21ab8 <col:9> 'int' lvalue ParmVar 0x12c47e28f10 'flen' 'int'
|   |   `-IntegerLiteral 0x12c47e21ad8 <col:16> 'int' 1
|   |-ForStmt 0x12c47e21fe8 <line:81:5, line:93:5>
|   | |-BinaryOperator 0x12c47e21bb8 <line:81:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x12c47e21b58 <col:10> 'int' lvalue Var 0x12c47e211a8 'i' 'int'
|   | | `-IntegerLiteral 0x12c47e21b90 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12c47e21c48 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x12c47e21c18 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c47e21bd8 <col:17> 'int' lvalue Var 0x12c47e211a8 'i' 'int'
|   | | `-ImplicitCastExpr 0x12c47e21c30 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e21bf8 <col:21> 'int' lvalue Var 0x12c47e21228 'j' 'int'
|   | |-UnaryOperator 0x12c47e21c88 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x12c47e21c68 <col:24> 'int' lvalue Var 0x12c47e211a8 'i' 'int'
|   | `-CompoundStmt 0x12c47e21fc8 <col:29, line:93:5>
|   |   |-IfStmt 0x12c47e21f78 <line:82:9, line:91:9>
|   |   | |-BinaryOperator 0x12c47e21d48 <line:82:13, col:19> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x12c47e21d30 <col:13, col:14> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x12c47e21d18 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x12c47e21cd8 <col:13, col:14> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x12c47e21cc0 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x12c47e21ca0 <col:14> 'const unsigned char *' lvalue Var 0x12c47e212d8 'p' 'const unsigned char *'
|   |   | | `-IntegerLiteral 0x12c47e21cf0 <col:19> 'int' 255
|   |   | `-CompoundStmt 0x12c47e21f60 <col:25, line:91:9>
|   |   |   `-IfStmt 0x12c47e21f38 <line:83:13, line:90:13> has_else
|   |   |     |-BinaryOperator 0x12c47e21e10 <line:83:17, col:23> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x12c47e21df8 <col:17, col:18> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x12c47e21de0 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |   |     | |   `-UnaryOperator 0x12c47e21da0 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |     `-ImplicitCastExpr 0x12c47e21d88 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   |     | |       `-DeclRefExpr 0x12c47e21d68 <col:18> 'const unsigned char *' lvalue Var 0x12c47e212d8 'p' 'const unsigned char *'
|   |   |     | `-IntegerLiteral 0x12c47e21db8 <col:23> 'int' 0
|   |   |     |-CompoundStmt 0x12c47e21e70 <col:26, line:86:13>
|   |   |     | |-UnaryOperator 0x12c47e21e50 <line:84:17, col:18> 'const unsigned char *' postfix '++'
|   |   |     | | `-DeclRefExpr 0x12c47e21e30 <col:17> 'const unsigned char *' lvalue Var 0x12c47e212d8 'p' 'const unsigned char *'
|   |   |     | `-BreakStmt 0x12c47e21e68 <line:85:17>
|   |   |     `-CompoundStmt 0x12c47e21f20 <line:86:20, line:90:13>
|   |   |       `-ReturnStmt 0x12c47e21f10 <line:89:17, col:27>
|   |   |         `-ParenExpr 0x12c47e21ef0 <col:24, col:27> 'int'
|   |   |           `-UnaryOperator 0x12c47e21ed8 <col:25, col:26> 'int' prefix '-'
|   |   |             `-IntegerLiteral 0x12c47e21eb0 <col:26> 'int' 1
|   |   `-UnaryOperator 0x12c47e21fb0 <line:92:9, col:10> 'const unsigned char *' postfix '++'
|   |     `-DeclRefExpr 0x12c47e21f90 <col:9> 'const unsigned char *' lvalue Var 0x12c47e212d8 'p' 'const unsigned char *'
|   |-IfStmt 0x12c47e291e8 <line:95:5, line:99:5>
|   | |-BinaryOperator 0x12c47e22090 <line:95:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x12c47e22060 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c47e22020 <col:9> 'int' lvalue Var 0x12c47e211a8 'i' 'int'
|   | | `-ImplicitCastExpr 0x12c47e22078 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e22040 <col:14> 'int' lvalue Var 0x12c47e21228 'j' 'int'
|   | `-CompoundStmt 0x12c47e291d0 <col:17, line:99:5>
|   |   `-ReturnStmt 0x12c47e22130 <line:98:9, col:19>
|   |     `-ParenExpr 0x12c47e22110 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x12c47e220f8 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x12c47e220d0 <col:18> 'int' 1
|   |-IfStmt 0x12c47e29328 <line:101:5, line:105:5>
|   | |-BinaryOperator 0x12c47e29260 <line:101:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x12c47e29248 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c47e29200 <col:9> 'int' lvalue Var 0x12c47e211a8 'i' 'int'
|   | | `-IntegerLiteral 0x12c47e29220 <col:13> 'int' 8
|   | `-CompoundStmt 0x12c47e29310 <col:16, line:105:5>
|   |   `-ReturnStmt 0x12c47e29300 <line:104:9, col:19>
|   |     `-ParenExpr 0x12c47e292e0 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x12c47e292c8 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x12c47e292a0 <col:18> 'int' 1
|   |-UnaryOperator 0x12c47e29360 <line:106:5, col:6> 'int' postfix '++'
|   | `-DeclRefExpr 0x12c47e29340 <col:5> 'int' lvalue Var 0x12c47e211a8 'i' 'int'
|   |-CompoundAssignOperator 0x12c47e293d0 <line:107:5, col:10> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x12c47e29378 <col:5> 'int' lvalue Var 0x12c47e21228 'j' 'int'
|   | `-ImplicitCastExpr 0x12c47e293b8 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x12c47e29398 <col:10> 'int' lvalue Var 0x12c47e211a8 'i' 'int'
|   |-IfStmt 0x12c47e29538 <line:108:5, line:111:5>
|   | |-BinaryOperator 0x12c47e29470 <line:108:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x12c47e29440 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c47e29400 <col:9> 'int' lvalue Var 0x12c47e21228 'j' 'int'
|   | | `-ImplicitCastExpr 0x12c47e29458 <col:13> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e29420 <col:13> 'int' lvalue ParmVar 0x12c47e28e10 'tlen' 'int'
|   | `-CompoundStmt 0x12c47e29520 <col:19, line:111:5>
|   |   `-ReturnStmt 0x12c47e29510 <line:110:9, col:19>
|   |     `-ParenExpr 0x12c47e294f0 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x12c47e294d8 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x12c47e294b0 <col:18> 'int' 1
|   |-CallExpr 0x12c47e29670 <line:112:5, col:34> 'void *'
|   | |-ImplicitCastExpr 0x12c47e29658 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12c47e29550 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x12c47e288b0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x12c47e296c0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x12c47e296a8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e29570 <col:12> 'unsigned char *' lvalue ParmVar 0x12c47e28d90 'to' 'unsigned char *'
|   | |-ImplicitCastExpr 0x12c47e296f0 <col:16> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x12c47e296d8 <col:16> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e29590 <col:16> 'const unsigned char *' lvalue Var 0x12c47e212d8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e29708 <col:19, col:33> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x12c47e29600 <col:19, col:33> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x12c47e295e8 <col:33> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x12c47e295b0 <col:33> 'int' lvalue Var 0x12c47e21228 'j' 'int'
|   `-ReturnStmt 0x12c47e29778 <line:114:5, col:14>
|     `-ImplicitCastExpr 0x12c47e29760 <col:12, col:14> 'int' <LValueToRValue>
|       `-ParenExpr 0x12c47e29740 <col:12, col:14> 'int' lvalue
|         `-DeclRefExpr 0x12c47e29720 <col:13> 'int' lvalue Var 0x12c47e21228 'j' 'int'
|-FunctionDecl 0x12c47e29ab8 <line:117:1, line:152:1> line:117:5 RSA_padding_add_PKCS1_type_2 'int (unsigned char *, int, const unsigned char *, int)'
| |-ParmVarDecl 0x12c47e29828 <col:34, col:49> col:49 used to 'unsigned char *'
| |-ParmVarDecl 0x12c47e298a8 <col:53, col:57> col:57 used tlen 'int'
| |-ParmVarDecl 0x12c47e29928 <line:118:34, col:55> col:55 used from 'const unsigned char *'
| |-ParmVarDecl 0x12c47e299a8 <col:61, col:65> col:65 used flen 'int'
| `-CompoundStmt 0x12c47e2f1f8 <line:119:1, line:152:1>
|   |-DeclStmt 0x12c47e29ca8 <line:120:5, col:13>
|   | |-VarDecl 0x12c47e29ba8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x12c47e29c28 <col:5, col:12> col:12 used j 'int'
|   |-DeclStmt 0x12c47e29d40 <line:121:5, col:21>
|   | `-VarDecl 0x12c47e29cd8 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-IfStmt 0x12c47e29ee0 <line:123:5, line:127:5>
|   | |-BinaryOperator 0x12c47e29e30 <line:123:9, col:26> 'int' '>'
|   | | |-ImplicitCastExpr 0x12c47e29e18 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c47e29d58 <col:9> 'int' lvalue ParmVar 0x12c47e299a8 'flen' 'int'
|   | | `-ParenExpr 0x12c47e29df8 <col:16, col:26> 'int'
|   | |   `-BinaryOperator 0x12c47e29dd8 <col:17, col:24> 'int' '-'
|   | |     |-ImplicitCastExpr 0x12c47e29dc0 <col:17> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x12c47e29d78 <col:17> 'int' lvalue ParmVar 0x12c47e298a8 'tlen' 'int'
|   | |     `-IntegerLiteral 0x12c47e29d98 <col:24> 'int' 11
|   | `-CompoundStmt 0x12c47e29ec8 <col:29, line:127:5>
|   |   `-ReturnStmt 0x12c47e29eb8 <line:126:9, col:18>
|   |     `-ParenExpr 0x12c47e29e98 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x12c47e29e70 <col:17> 'int' 0
|   |-BinaryOperator 0x12c47e29fa8 <line:129:5, col:26> 'unsigned char *' '='
|   | |-DeclRefExpr 0x12c47e29ef8 <col:5> 'unsigned char *' lvalue Var 0x12c47e29cd8 'p' 'unsigned char *'
|   | `-CStyleCastExpr 0x12c47e29f80 <col:9, col:26> 'unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x12c47e29f68 <col:26> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x12c47e29f30 <col:26> 'unsigned char *' lvalue ParmVar 0x12c47e29828 'to' 'unsigned char *'
|   |-BinaryOperator 0x12c47e2a078 <line:131:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x12c47e2a020 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x12c47e2a000 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x12c47e29fe8 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x12c47e29fc8 <col:7> 'unsigned char *' lvalue Var 0x12c47e29cd8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e2a060 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x12c47e2a038 <col:14> 'int' 0
|   |-BinaryOperator 0x12c47e2a148 <line:132:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x12c47e2a0f0 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x12c47e2a0d0 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x12c47e2a0b8 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x12c47e2a098 <col:7> 'unsigned char *' lvalue Var 0x12c47e29cd8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e2a130 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x12c47e2a108 <col:14> 'int' 2
|   |-BinaryOperator 0x12c47e2e728 <line:135:5, col:20> 'int' '='
|   | |-DeclRefExpr 0x12c47e2a168 <col:5> 'int' lvalue Var 0x12c47e29c28 'j' 'int'
|   | `-BinaryOperator 0x12c47e2e708 <col:9, col:20> 'int' '-'
|   |   |-BinaryOperator 0x12c47e2e6b0 <col:9, col:16> 'int' '-'
|   |   | |-ImplicitCastExpr 0x12c47e2e698 <col:9> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x12c47e2a1a0 <col:9> 'int' lvalue ParmVar 0x12c47e298a8 'tlen' 'int'
|   |   | `-IntegerLiteral 0x12c47e2e670 <col:16> 'int' 3
|   |   `-ImplicitCastExpr 0x12c47e2e6f0 <col:20> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x12c47e2e6d0 <col:20> 'int' lvalue ParmVar 0x12c47e299a8 'flen' 'int'
|   |-IfStmt 0x12c47e2e9e0 <line:137:5, line:138:18>
|   | |-BinaryOperator 0x12c47e2e968 <line:137:9, col:29> 'int' '<='
|   | | |-CallExpr 0x12c47e2e8e0 <col:9, col:24> 'int'
|   | | | |-ImplicitCastExpr 0x12c47e2e8c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x12c47e2e838 <col:9> 'int ()' Function 0x12c47e2e770 'RAND_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x12c47e2e910 <col:20> 'unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x12c47e2e858 <col:20> 'unsigned char *' lvalue Var 0x12c47e29cd8 'p' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x12c47e2e928 <col:23> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x12c47e2e878 <col:23> 'int' lvalue Var 0x12c47e29c28 'j' 'int'
|   | | `-IntegerLiteral 0x12c47e2e940 <col:29> 'int' 0
|   | `-ReturnStmt 0x12c47e2e9d0 <line:138:9, col:18>
|   |   `-ParenExpr 0x12c47e2e9b0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x12c47e2e988 <col:17> 'int' 0
|   |-ForStmt 0x12c47e2eed8 <line:139:5, line:146:5>
|   | |-BinaryOperator 0x12c47e2ea58 <line:139:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x12c47e2e9f8 <col:10> 'int' lvalue Var 0x12c47e29ba8 'i' 'int'
|   | | `-IntegerLiteral 0x12c47e2ea30 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x12c47e2eae8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x12c47e2eab8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x12c47e2ea78 <col:17> 'int' lvalue Var 0x12c47e29ba8 'i' 'int'
|   | | `-ImplicitCastExpr 0x12c47e2ead0 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e2ea98 <col:21> 'int' lvalue Var 0x12c47e29c28 'j' 'int'
|   | |-UnaryOperator 0x12c47e2eb28 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x12c47e2eb08 <col:24> 'int' lvalue Var 0x12c47e29ba8 'i' 'int'
|   | `-CompoundStmt 0x12c47e2eeb8 <col:29, line:146:5>
|   |   |-IfStmt 0x12c47e2ee68 <line:140:9, line:144:32>
|   |   | |-BinaryOperator 0x12c47e2ebd8 <line:140:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x12c47e2ebc0 <col:13, col:14> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x12c47e2eba8 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x12c47e2eb78 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x12c47e2eb60 <col:14> 'unsigned char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x12c47e2eb40 <col:14> 'unsigned char *' lvalue Var 0x12c47e29cd8 'p' 'unsigned char *'
|   |   | | `-CharacterLiteral 0x12c47e2eb90 <col:19> 'int' 0
|   |   | `-DoStmt 0x12c47e2ee48 <line:141:13, line:144:32>
|   |   |   |-CompoundStmt 0x12c47e2ed78 <line:141:16, line:144:13>
|   |   |   | `-IfStmt 0x12c47e2ed60 <line:142:17, line:143:30>
|   |   |   |   |-BinaryOperator 0x12c47e2ece8 <line:142:21, col:41> 'int' '<='
|   |   |   |   | |-CallExpr 0x12c47e2ec78 <col:21, col:36> 'int'
|   |   |   |   | | |-ImplicitCastExpr 0x12c47e2ec60 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | | | `-DeclRefExpr 0x12c47e2ebf8 <col:21> 'int ()' Function 0x12c47e2e770 'RAND_bytes' 'int ()'
|   |   |   |   | | |-ImplicitCastExpr 0x12c47e2eca8 <col:32> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | | `-DeclRefExpr 0x12c47e2ec18 <col:32> 'unsigned char *' lvalue Var 0x12c47e29cd8 'p' 'unsigned char *'
|   |   |   |   | | `-IntegerLiteral 0x12c47e2ec38 <col:35> 'int' 1
|   |   |   |   | `-IntegerLiteral 0x12c47e2ecc0 <col:41> 'int' 0
|   |   |   |   `-ReturnStmt 0x12c47e2ed50 <line:143:21, col:30>
|   |   |   |     `-ParenExpr 0x12c47e2ed30 <col:28, col:30> 'int'
|   |   |   |       `-IntegerLiteral 0x12c47e2ed08 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x12c47e2ee28 <line:144:22, col:28> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x12c47e2ee10 <col:22, col:23> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x12c47e2edf8 <col:22, col:23> 'unsigned char' <LValueToRValue>
|   |   |     |   `-UnaryOperator 0x12c47e2edc8 <col:22, col:23> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |     `-ImplicitCastExpr 0x12c47e2edb0 <col:23> 'unsigned char *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x12c47e2ed90 <col:23> 'unsigned char *' lvalue Var 0x12c47e29cd8 'p' 'unsigned char *'
|   |   |     `-CharacterLiteral 0x12c47e2ede0 <col:28> 'int' 0
|   |   `-UnaryOperator 0x12c47e2eea0 <line:145:9, col:10> 'unsigned char *' postfix '++'
|   |     `-DeclRefExpr 0x12c47e2ee80 <col:9> 'unsigned char *' lvalue Var 0x12c47e29cd8 'p' 'unsigned char *'
|   |-BinaryOperator 0x12c47e2efb0 <line:148:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x12c47e2ef68 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x12c47e2ef48 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x12c47e2ef30 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x12c47e2ef10 <col:7> 'unsigned char *' lvalue Var 0x12c47e29cd8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e2ef98 <col:14> 'unsigned char' <IntegralCast>
|   |   `-CharacterLiteral 0x12c47e2ef80 <col:14> 'int' 0
|   |-CallExpr 0x12c47e2f0f0 <line:150:5, col:39> 'void *'
|   | |-ImplicitCastExpr 0x12c47e2f0d8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x12c47e2efd0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x12c47e288b0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x12c47e2f140 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x12c47e2f128 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e2eff0 <col:12> 'unsigned char *' lvalue Var 0x12c47e29cd8 'p' 'unsigned char *'
|   | |-ImplicitCastExpr 0x12c47e2f170 <col:15> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x12c47e2f158 <col:15> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x12c47e2f010 <col:15> 'const unsigned char *' lvalue ParmVar 0x12c47e29928 'from' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x12c47e2f188 <col:21, col:35> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x12c47e2f080 <col:21, col:35> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x12c47e2f068 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x12c47e2f030 <col:35> 'int' lvalue ParmVar 0x12c47e299a8 'flen' 'int'
|   `-ReturnStmt 0x12c47e2f1e8 <line:151:5, col:14>
|     `-ParenExpr 0x12c47e2f1c8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x12c47e2f1a0 <col:13> 'int' 1
`-FunctionDecl 0x12c47e2f5b0 <line:154:1, line:255:1> line:154:5 RSA_padding_check_PKCS1_type_2 'int (unsigned char *, int, const unsigned char *, int, int)'
  |-ParmVarDecl 0x12c47e2f280 <col:36, col:51> col:51 used to 'unsigned char *'
  |-ParmVarDecl 0x12c47e2f300 <col:55, col:59> col:59 used tlen 'int'
  |-ParmVarDecl 0x12c47e2f380 <line:155:36, col:57> col:57 used from 'const unsigned char *'
  |-ParmVarDecl 0x12c47e2f400 <col:63, col:67> col:67 used flen 'int'
  |-ParmVarDecl 0x12c47e2f480 <line:156:36, col:40> col:40 used num 'int'
  `-CompoundStmt 0x12c47e346d0 <line:157:1, line:255:1>
    |-DeclStmt 0x12c47e2f740 <line:158:5, col:10>
    | `-VarDecl 0x12c47e2f6d8 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x12c47e2f878 <line:160:5, col:29>
    | `-VarDecl 0x12c47e2f770 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\rsa\rsa_pk1.c:160:20 used em 'unsigned char *' cinit
    |   `-ImplicitCastExpr 0x12c47e2f860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
    |     `-ParenExpr 0x12c47e2f840 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x12c47e2f818 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x12c47e2f7d8 <col:26> 'int' 0
    |-DeclStmt 0x12c47e2fa30 <.//openssl//file_jk/after\crypto\rsa\rsa_pk1.c:161:5, col:45>
    | |-VarDecl 0x12c47e2f8a8 <col:5, col:18> col:18 used good 'unsigned int'
    | |-VarDecl 0x12c47e2f928 <col:5, col:24> col:24 used found_zero_byte 'unsigned int'
    | `-VarDecl 0x12c47e2f9a8 <col:5, col:41> col:41 used mask 'unsigned int'
    |-DeclStmt 0x12c47e2fc50 <line:162:5, col:45>
    | |-VarDecl 0x12c47e2fa60 <col:5, col:22> col:9 used zero_index 'int' cinit
    | | `-IntegerLiteral 0x12c47e2fac8 <col:22> 'int' 0
    | |-VarDecl 0x12c47e2fb08 <col:5, col:25> col:25 used msg_index 'int'
    | `-VarDecl 0x12c47e2fb88 <col:5, col:44> col:36 used mlen 'int' cinit
    |   `-UnaryOperator 0x12c47e2fc18 <col:43, col:44> 'int' prefix '-'
    |     `-IntegerLiteral 0x12c47e2fbf0 <col:44> 'int' 1
    |-IfStmt 0x12c47e2fdd8 <line:164:5, line:165:17>
    | |-BinaryOperator 0x12c47e2fd68 <line:164:9, col:28> 'int' '||'
    | | |-BinaryOperator 0x12c47e2fcc8 <col:9, col:16> 'int' '<'
    | | | |-ImplicitCastExpr 0x12c47e2fcb0 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12c47e2fc68 <col:9> 'int' lvalue ParmVar 0x12c47e2f300 'tlen' 'int'
    | | | `-IntegerLiteral 0x12c47e2fc88 <col:16> 'int' 0
    | | `-BinaryOperator 0x12c47e2fd48 <col:21, col:28> 'int' '<'
    | |   |-ImplicitCastExpr 0x12c47e2fd30 <col:21> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12c47e2fce8 <col:21> 'int' lvalue ParmVar 0x12c47e2f400 'flen' 'int'
    | |   `-IntegerLiteral 0x12c47e2fd08 <col:28> 'int' 0
    | `-ReturnStmt 0x12c47e2fdc8 <line:165:9, col:17>
    |   `-UnaryOperator 0x12c47e2fdb0 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x12c47e2fd88 <col:17> 'int' 1
    |-IfStmt 0x12c47e2ffa8 <line:172:5, line:176:5>
    | |-BinaryOperator 0x12c47e2ff00 <line:172:9, col:29> 'int' '||'
    | | |-BinaryOperator 0x12c47e2fe60 <col:9, col:16> 'int' '>'
    | | | |-ImplicitCastExpr 0x12c47e2fe30 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x12c47e2fdf0 <col:9> 'int' lvalue ParmVar 0x12c47e2f400 'flen' 'int'
    | | | `-ImplicitCastExpr 0x12c47e2fe48 <col:16> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x12c47e2fe10 <col:16> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    | | `-BinaryOperator 0x12c47e2fee0 <col:23, col:29> 'int' '<'
    | |   |-ImplicitCastExpr 0x12c47e2fec8 <col:23> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12c47e2fe80 <col:23> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    | |   `-IntegerLiteral 0x12c47e2fea0 <col:29> 'int' 11
    | `-CompoundStmt 0x12c47e2ff90 <col:33, line:176:5>
    |   `-ReturnStmt 0x12c47e2ff80 <line:175:9, col:17>
    |     `-UnaryOperator 0x12c47e2ff68 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x12c47e2ff40 <col:17> 'int' 1
    |-BinaryOperator 0x12c47e30198 <line:178:5, col:28> 'unsigned char *' '='
    | |-DeclRefExpr 0x12c47e2ffc0 <col:5> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    | `-ImplicitCastExpr 0x12c47e30180 <col:10, col:28> 'unsigned char *' <IntegralToPointer>
    |   `-CallExpr 0x12c47e30140 <col:10, col:28> 'int'
    |     |-ImplicitCastExpr 0x12c47e30128 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12c47e300e8 <col:10> 'int ()' Function 0x12c47e30020 'OPENSSL_malloc' 'int ()'
    |     `-ImplicitCastExpr 0x12c47e30168 <col:25> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12c47e30108 <col:25> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    |-IfStmt 0x12c47e30338 <line:179:5, line:182:5>
    | |-BinaryOperator 0x12c47e30290 <line:179:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
    | | |-ImplicitCastExpr 0x12c47e30260 <.//openssl//file_jk/after\crypto\rsa\rsa_pk1.c:179:9> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x12c47e301b8 <col:9> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    | | `-ImplicitCastExpr 0x12c47e30278 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
    | |   `-ParenExpr 0x12c47e30240 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x12c47e30218 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x12c47e301d8 <col:26> 'int' 0
    | `-CompoundStmt 0x12c47e30320 <.//openssl//file_jk/after\crypto\rsa\rsa_pk1.c:179:21, line:182:5>
    |   `-ReturnStmt 0x12c47e30310 <line:181:9, col:17>
    |     `-UnaryOperator 0x12c47e302f8 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x12c47e302d0 <col:17> 'int' 1
    |-ForStmt 0x12c47e30ba0 <line:189:5, line:194:5>
    | |-BinaryOperator 0x12c47e30500 <line:189:10, col:39> 'int' ','
    | | |-BinaryOperator 0x12c47e30460 <col:10, col:30> 'unsigned char *' ','
    | | | |-CompoundAssignOperator 0x12c47e303a8 <col:10, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    | | | | |-DeclRefExpr 0x12c47e30350 <col:10> 'const unsigned char *' lvalue ParmVar 0x12c47e2f380 'from' 'const unsigned char *'
    | | | | `-ImplicitCastExpr 0x12c47e30390 <col:18> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x12c47e30370 <col:18> 'int' lvalue ParmVar 0x12c47e2f400 'flen' 'int'
    | | | `-CompoundAssignOperator 0x12c47e30430 <col:24, col:30> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    | | |   |-DeclRefExpr 0x12c47e303d8 <col:24> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    | | |   `-ImplicitCastExpr 0x12c47e30418 <col:30> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x12c47e303f8 <col:30> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    | | `-BinaryOperator 0x12c47e304e0 <col:35, col:39> 'int' '='
    | |   |-DeclRefExpr 0x12c47e30480 <col:35> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    | |   `-IntegerLiteral 0x12c47e304b8 <col:39> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12c47e30590 <col:42, col:46> 'int' '<'
    | | |-ImplicitCastExpr 0x12c47e30560 <col:42> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12c47e30520 <col:42> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    | | `-ImplicitCastExpr 0x12c47e30578 <col:46> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c47e30540 <col:46> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    | |-UnaryOperator 0x12c47e305d0 <col:51, col:52> 'int' postfix '++'
    | | `-DeclRefExpr 0x12c47e305b0 <col:51> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    | `-CompoundStmt 0x12c47e30b70 <col:56, line:194:5>
    |   |-BinaryOperator 0x12c47e30820 <line:190:9, col:43> 'unsigned int' '='
    |   | |-DeclRefExpr 0x12c47e305e8 <col:9> 'unsigned int' lvalue Var 0x12c47e2f9a8 'mask' 'unsigned int'
    |   | `-ImplicitCastExpr 0x12c47e30808 <col:16, col:43> 'unsigned int' <IntegralCast>
    |   |   `-UnaryOperator 0x12c47e307f0 <col:16, col:43> 'int' prefix '~' cannot overflow
    |   |     `-CallExpr 0x12c47e307b0 <col:17, col:43> 'int'
    |   |       |-ImplicitCastExpr 0x12c47e30798 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x12c47e30758 <col:17> 'int ()' Function 0x12c47e30690 'constant_time_is_zero' 'int ()'
    |   |       `-ImplicitCastExpr 0x12c47e307d8 <col:39> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x12c47e30778 <col:39> 'int' lvalue ParmVar 0x12c47e2f400 'flen' 'int'
    |   |-CompoundAssignOperator 0x12c47e308f8 <line:191:9, col:21> 'int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   | |-DeclRefExpr 0x12c47e30840 <col:9> 'int' lvalue ParmVar 0x12c47e2f400 'flen' 'int'
    |   | `-BinaryOperator 0x12c47e308d8 <col:17, col:21> 'unsigned int' '&'
    |   |   |-ImplicitCastExpr 0x12c47e308c0 <col:17> 'unsigned int' <IntegralCast>
    |   |   | `-IntegerLiteral 0x12c47e30860 <col:17> 'int' 1
    |   |   `-ImplicitCastExpr 0x12c47e308a8 <col:21> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12c47e30888 <col:21> 'unsigned int' lvalue Var 0x12c47e2f9a8 'mask' 'unsigned int'
    |   |-CompoundAssignOperator 0x12c47e309e0 <line:192:9, col:21> 'const unsigned char *' '-=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |   | |-DeclRefExpr 0x12c47e30928 <col:9> 'const unsigned char *' lvalue ParmVar 0x12c47e2f380 'from' 'const unsigned char *'
    |   | `-BinaryOperator 0x12c47e309c0 <col:17, col:21> 'unsigned int' '&'
    |   |   |-ImplicitCastExpr 0x12c47e309a8 <col:17> 'unsigned int' <IntegralCast>
    |   |   | `-IntegerLiteral 0x12c47e30948 <col:17> 'int' 1
    |   |   `-ImplicitCastExpr 0x12c47e30990 <col:21> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12c47e30970 <col:21> 'unsigned int' lvalue Var 0x12c47e2f9a8 'mask' 'unsigned int'
    |   `-BinaryOperator 0x12c47e30b50 <line:193:9, col:25> 'unsigned char' '='
    |     |-UnaryOperator 0x12c47e30a48 <col:9, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
    |     | `-UnaryOperator 0x12c47e30a30 <col:10, col:12> 'unsigned char *' prefix '--'
    |     |   `-DeclRefExpr 0x12c47e30a10 <col:12> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    |     `-ImplicitCastExpr 0x12c47e30b38 <col:17, col:25> 'unsigned char' <IntegralCast>
    |       `-BinaryOperator 0x12c47e30b18 <col:17, col:25> 'unsigned int' '&'
    |         |-ImplicitCastExpr 0x12c47e30ae8 <col:17, col:18> 'unsigned int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x12c47e30ad0 <col:17, col:18> 'unsigned char' <LValueToRValue>
    |         |   `-UnaryOperator 0x12c47e30a98 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
    |         |     `-ImplicitCastExpr 0x12c47e30a80 <col:18> 'const unsigned char *' <LValueToRValue>
    |         |       `-DeclRefExpr 0x12c47e30a60 <col:18> 'const unsigned char *' lvalue ParmVar 0x12c47e2f380 'from' 'const unsigned char *'
    |         `-ImplicitCastExpr 0x12c47e30b00 <col:25> 'unsigned int' <LValueToRValue>
    |           `-DeclRefExpr 0x12c47e30ab0 <col:25> 'unsigned int' lvalue Var 0x12c47e2f9a8 'mask' 'unsigned int'
    |-BinaryOperator 0x12c47e30d38 <line:196:5, col:39> 'unsigned int' '='
    | |-DeclRefExpr 0x12c47e30bd8 <col:5> 'unsigned int' lvalue Var 0x12c47e2f8a8 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x12c47e30d20 <col:12, col:39> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x12c47e30cc8 <col:12, col:39> 'int'
    |     |-ImplicitCastExpr 0x12c47e30cb0 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12c47e30c10 <col:12> 'int ()' Function 0x12c47e30690 'constant_time_is_zero' 'int ()'
    |     `-ImplicitCastExpr 0x12c47e30d08 <col:34, col:38> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x12c47e30cf0 <col:34, col:38> 'unsigned char' <LValueToRValue>
    |         `-ArraySubscriptExpr 0x12c47e30c90 <col:34, col:38> 'unsigned char' lvalue
    |           |-ImplicitCastExpr 0x12c47e30c78 <col:34> 'unsigned char *' <LValueToRValue>
    |           | `-DeclRefExpr 0x12c47e30c30 <col:34> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    |           `-IntegerLiteral 0x12c47e30c50 <col:37> 'int' 0
    |-CompoundAssignOperator 0x12c47e30fc0 <line:197:5, col:38> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x12c47e30d58 <col:5> 'unsigned int' lvalue Var 0x12c47e2f8a8 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x12c47e30fa8 <col:13, col:38> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x12c47e30f48 <col:13, col:38> 'int'
    |     |-ImplicitCastExpr 0x12c47e30f30 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12c47e30e68 <col:13> 'int ()' Function 0x12c47e30da0 'constant_time_eq' 'int ()'
    |     |-ImplicitCastExpr 0x12c47e30f90 <col:30, col:34> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x12c47e30f78 <col:30, col:34> 'unsigned char' <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0x12c47e30ee8 <col:30, col:34> 'unsigned char' lvalue
    |     |     |-ImplicitCastExpr 0x12c47e30ed0 <col:30> 'unsigned char *' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x12c47e30e88 <col:30> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    |     |     `-IntegerLiteral 0x12c47e30ea8 <col:33> 'int' 1
    |     `-IntegerLiteral 0x12c47e30f08 <col:37> 'int' 2
    |-BinaryOperator 0x12c47e31068 <line:200:5, col:23> 'unsigned int' '='
    | |-DeclRefExpr 0x12c47e30ff0 <col:5> 'unsigned int' lvalue Var 0x12c47e2f928 'found_zero_byte' 'unsigned int'
    | `-ImplicitCastExpr 0x12c47e31050 <col:23> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x12c47e31028 <col:23> 'int' 0
    |-ForStmt 0x12c47e31730 <line:201:5, line:207:5>
    | |-BinaryOperator 0x12c47e310d0 <line:201:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x12c47e31088 <col:10> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    | | `-IntegerLiteral 0x12c47e310a8 <col:14> 'int' 2
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12c47e31160 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x12c47e31130 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12c47e310f0 <col:17> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    | | `-ImplicitCastExpr 0x12c47e31148 <col:21> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c47e31110 <col:21> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    | |-UnaryOperator 0x12c47e311a0 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x12c47e31180 <col:26> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    | `-CompoundStmt 0x12c47e31708 <col:31, line:207:5>
    |   |-DeclStmt 0x12c47e31370 <line:202:9, col:60>
    |   | `-VarDecl 0x12c47e311d0 <col:9, col:59> col:22 used equals0 'unsigned int' cinit
    |   |   `-ImplicitCastExpr 0x12c47e31358 <col:32, col:59> 'unsigned int' <IntegralCast>
    |   |     `-CallExpr 0x12c47e31300 <col:32, col:59> 'int'
    |   |       |-ImplicitCastExpr 0x12c47e312e8 <col:32> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x12c47e31238 <col:32> 'int ()' Function 0x12c47e30690 'constant_time_is_zero' 'int ()'
    |   |       `-ImplicitCastExpr 0x12c47e31340 <col:54, col:58> 'int' <IntegralCast>
    |   |         `-ImplicitCastExpr 0x12c47e31328 <col:54, col:58> 'unsigned char' <LValueToRValue>
    |   |           `-ArraySubscriptExpr 0x12c47e312c8 <col:54, col:58> 'unsigned char' lvalue
    |   |             |-ImplicitCastExpr 0x12c47e31298 <col:54> 'unsigned char *' <LValueToRValue>
    |   |             | `-DeclRefExpr 0x12c47e31258 <col:54> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    |   |             `-ImplicitCastExpr 0x12c47e312b0 <col:57> 'int' <LValueToRValue>
    |   |               `-DeclRefExpr 0x12c47e31278 <col:57> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |   |-BinaryOperator 0x12c47e31650 <line:204:9, line:205:60> 'int' '='
    |   | |-DeclRefExpr 0x12c47e31388 <line:204:9> 'int' lvalue Var 0x12c47e2fa60 'zero_index' 'int'
    |   | `-CallExpr 0x12c47e315e8 <col:22, line:205:60> 'int'
    |   |   |-ImplicitCastExpr 0x12c47e315d0 <line:204:22> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x12c47e314b0 <col:22> 'int ()' Function 0x12c47e313e8 'constant_time_select_int' 'int ()'
    |   |   |-BinaryOperator 0x12c47e31570 <col:47, col:66> 'unsigned int' '&'
    |   |   | |-UnaryOperator 0x12c47e31508 <col:47, col:48> 'unsigned int' prefix '~' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x12c47e314f0 <col:48> 'unsigned int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x12c47e314d0 <col:48> 'unsigned int' lvalue Var 0x12c47e2f928 'found_zero_byte' 'unsigned int'
    |   |   | `-ImplicitCastExpr 0x12c47e31558 <col:66> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x12c47e31520 <col:66> 'unsigned int' lvalue Var 0x12c47e311d0 'equals0' 'unsigned int'
    |   |   |-ImplicitCastExpr 0x12c47e31620 <line:205:47> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x12c47e31590 <col:47> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |   |   `-ImplicitCastExpr 0x12c47e31638 <col:50> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x12c47e315b0 <col:50> 'int' lvalue Var 0x12c47e2fa60 'zero_index' 'int'
    |   `-CompoundAssignOperator 0x12c47e316d8 <line:206:9, col:28> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |     |-DeclRefExpr 0x12c47e31670 <col:9> 'unsigned int' lvalue Var 0x12c47e2f928 'found_zero_byte' 'unsigned int'
    |     `-ImplicitCastExpr 0x12c47e316c0 <col:28> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x12c47e316a0 <col:28> 'unsigned int' lvalue Var 0x12c47e311d0 'equals0' 'unsigned int'
    |-CompoundAssignOperator 0x12c47e319a0 <line:214:5, col:47> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x12c47e31768 <col:5> 'unsigned int' lvalue Var 0x12c47e2f8a8 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x12c47e31988 <col:13, col:47> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x12c47e31940 <col:13, col:47> 'int'
    |     |-ImplicitCastExpr 0x12c47e31928 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12c47e31878 <col:13> 'int ()' Function 0x12c47e317b0 'constant_time_ge' 'int ()'
    |     |-ImplicitCastExpr 0x12c47e31970 <col:30> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x12c47e31898 <col:30> 'int' lvalue Var 0x12c47e2fa60 'zero_index' 'int'
    |     `-BinaryOperator 0x12c47e31908 <col:42, col:46> 'int' '+'
    |       |-IntegerLiteral 0x12c47e318b8 <col:42> 'int' 2
    |       `-IntegerLiteral 0x12c47e318e0 <col:46> 'int' 8
    |-BinaryOperator 0x12c47e31a88 <line:220:5, col:30> 'int' '='
    | |-DeclRefExpr 0x12c47e319d0 <col:5> 'int' lvalue Var 0x12c47e2fb08 'msg_index' 'int'
    | `-BinaryOperator 0x12c47e31a68 <col:17, col:30> 'int' '+'
    |   |-ImplicitCastExpr 0x12c47e31a50 <col:17> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12c47e31a08 <col:17> 'int' lvalue Var 0x12c47e2fa60 'zero_index' 'int'
    |   `-IntegerLiteral 0x12c47e31a28 <col:30> 'int' 1
    |-BinaryOperator 0x12c47e31b70 <line:221:5, col:18> 'int' '='
    | |-DeclRefExpr 0x12c47e31aa8 <col:5> 'int' lvalue Var 0x12c47e2fb88 'mlen' 'int'
    | `-BinaryOperator 0x12c47e31b50 <col:12, col:18> 'int' '-'
    |   |-ImplicitCastExpr 0x12c47e31b20 <col:12> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x12c47e31ae0 <col:12> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    |   `-ImplicitCastExpr 0x12c47e31b38 <col:18> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12c47e31b00 <col:18> 'int' lvalue Var 0x12c47e2fb08 'msg_index' 'int'
    |-CompoundAssignOperator 0x12c47e31ca0 <line:226:5, col:40> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x12c47e31b90 <col:5> 'unsigned int' lvalue Var 0x12c47e2f8a8 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x12c47e31c88 <col:13, col:40> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x12c47e31c28 <col:13, col:40> 'int'
    |     |-ImplicitCastExpr 0x12c47e31c10 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x12c47e31bb0 <col:13> 'int ()' Function 0x12c47e317b0 'constant_time_ge' 'int ()'
    |     |-ImplicitCastExpr 0x12c47e31c58 <col:30> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x12c47e31bd0 <col:30> 'int' lvalue ParmVar 0x12c47e2f300 'tlen' 'int'
    |     `-ImplicitCastExpr 0x12c47e31c70 <col:36> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x12c47e31bf0 <col:36> 'int' lvalue Var 0x12c47e2fb88 'mlen' 'int'
    |-BinaryOperator 0x12c47e32028 <line:238:5, line:239:51> 'int' '='
    | |-DeclRefExpr 0x12c47e31cd0 <line:238:5> 'int' lvalue ParmVar 0x12c47e2f300 'tlen' 'int'
    | `-CallExpr 0x12c47e31fd8 <col:12, line:239:51> 'int'
    |   |-ImplicitCastExpr 0x12c47e31fc0 <line:238:12> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x12c47e31cf0 <col:12> 'int ()' Function 0x12c47e313e8 'constant_time_select_int' 'int ()'
    |   |-CallExpr 0x12c47e31ed8 <col:37, col:68> 'int'
    |   | |-ImplicitCastExpr 0x12c47e31ec0 <col:37> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x12c47e31e00 <col:37> 'int ()' Function 0x12c47e31d38 'constant_time_lt' 'int ()'
    |   | |-BinaryOperator 0x12c47e31e80 <col:54, col:60> 'int' '-'
    |   | | |-ImplicitCastExpr 0x12c47e31e68 <col:54> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x12c47e31e20 <col:54> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    |   | | `-IntegerLiteral 0x12c47e31e40 <col:60> 'int' 11
    |   | `-ImplicitCastExpr 0x12c47e31f08 <col:64> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x12c47e31ea0 <col:64> 'int' lvalue ParmVar 0x12c47e2f300 'tlen' 'int'
    |   |-BinaryOperator 0x12c47e31f80 <line:239:37, col:43> 'int' '-'
    |   | |-ImplicitCastExpr 0x12c47e31f68 <col:37> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x12c47e31f20 <col:37> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    |   | `-IntegerLiteral 0x12c47e31f40 <col:43> 'int' 11
    |   `-ImplicitCastExpr 0x12c47e32010 <col:47> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x12c47e31fa0 <col:47> 'int' lvalue ParmVar 0x12c47e2f300 'tlen' 'int'
    |-ForStmt 0x12c47e35ae0 <line:240:5, line:244:5>
    | |-BinaryOperator 0x12c47e32090 <line:240:10, col:22> 'int' '='
    | | |-DeclRefExpr 0x12c47e32048 <col:10> 'int' lvalue Var 0x12c47e2fb08 'msg_index' 'int'
    | | `-IntegerLiteral 0x12c47e32068 <col:22> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12c47e32168 <col:25, col:43> 'int' '<'
    | | |-ImplicitCastExpr 0x12c47e32150 <col:25> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12c47e320b0 <col:25> 'int' lvalue Var 0x12c47e2fb08 'msg_index' 'int'
    | | `-BinaryOperator 0x12c47e32130 <col:37, col:43> 'int' '-'
    | |   |-ImplicitCastExpr 0x12c47e32118 <col:37> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x12c47e320d0 <col:37> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    | |   `-IntegerLiteral 0x12c47e320f0 <col:43> 'int' 11
    | |-CompoundAssignOperator 0x12c47e321e8 <col:47, col:61> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
    | | |-DeclRefExpr 0x12c47e32188 <col:47> 'int' lvalue Var 0x12c47e2fb08 'msg_index' 'int'
    | | `-IntegerLiteral 0x12c47e321a8 <col:61> 'int' 1
    | `-CompoundStmt 0x12c47e35ac0 <col:64, line:244:5>
    |   |-BinaryOperator 0x12c47e32448 <line:241:9, col:66> 'unsigned int' '='
    |   | |-DeclRefExpr 0x12c47e32218 <col:9> 'unsigned int' lvalue Var 0x12c47e2f9a8 'mask' 'unsigned int'
    |   | `-ImplicitCastExpr 0x12c47e32430 <col:16, col:66> 'unsigned int' <IntegralCast>
    |   |   `-UnaryOperator 0x12c47e32418 <col:16, col:66> 'int' prefix '~' cannot overflow
    |   |     `-CallExpr 0x12c47e323e8 <col:17, col:66> 'int'
    |   |       |-ImplicitCastExpr 0x12c47e323d0 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x12c47e32238 <col:17> 'int ()' Function 0x12c47e30da0 'constant_time_eq' 'int ()'
    |   |       |-BinaryOperator 0x12c47e32388 <col:34, col:62> 'int' '&'
    |   |       | |-ImplicitCastExpr 0x12c47e32370 <col:34> 'int' <LValueToRValue>
    |   |       | | `-DeclRefExpr 0x12c47e32258 <col:34> 'int' lvalue Var 0x12c47e2fb08 'msg_index' 'int'
    |   |       | `-ParenExpr 0x12c47e32350 <col:46, col:62> 'int'
    |   |       |   `-BinaryOperator 0x12c47e32330 <col:47, col:58> 'int' '-'
    |   |       |     |-BinaryOperator 0x12c47e322d8 <col:47, col:53> 'int' '-'
    |   |       |     | |-ImplicitCastExpr 0x12c47e322c0 <col:47> 'int' <LValueToRValue>
    |   |       |     | | `-DeclRefExpr 0x12c47e32278 <col:47> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    |   |       |     | `-IntegerLiteral 0x12c47e32298 <col:53> 'int' 11
    |   |       |     `-ImplicitCastExpr 0x12c47e32318 <col:58> 'int' <LValueToRValue>
    |   |       |       `-DeclRefExpr 0x12c47e322f8 <col:58> 'int' lvalue Var 0x12c47e2fb88 'mlen' 'int'
    |   |       `-IntegerLiteral 0x12c47e323a8 <col:65> 'int' 0
    |   `-ForStmt 0x12c47e35a88 <line:242:9, line:243:74>
    |     |-BinaryOperator 0x12c47e324b0 <line:242:14, col:18> 'int' '='
    |     | |-DeclRefExpr 0x12c47e32468 <col:14> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |     | `-IntegerLiteral 0x12c47e32488 <col:18> 'int' 11
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x12c47e32598 <col:22, col:32> 'int' '<'
    |     | |-ImplicitCastExpr 0x12c47e32580 <col:22> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12c47e324d0 <col:22> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |     | `-BinaryOperator 0x12c47e32560 <col:26, col:32> 'int' '-'
    |     |   |-ImplicitCastExpr 0x12c47e32530 <col:26> 'int' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x12c47e324f0 <col:26> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    |     |   `-ImplicitCastExpr 0x12c47e32548 <col:32> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x12c47e32510 <col:32> 'int' lvalue Var 0x12c47e2fb08 'msg_index' 'int'
    |     |-UnaryOperator 0x12c47e325d8 <col:43, col:44> 'int' postfix '++'
    |     | `-DeclRefExpr 0x12c47e325b8 <col:43> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |     `-BinaryOperator 0x12c47e35a68 <line:243:13, col:74> 'unsigned char' '='
    |       |-ArraySubscriptExpr 0x12c47e32660 <col:13, col:17> 'unsigned char' lvalue
    |       | |-ImplicitCastExpr 0x12c47e32630 <col:13> 'unsigned char *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x12c47e325f0 <col:13> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    |       | `-ImplicitCastExpr 0x12c47e32648 <col:16> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x12c47e32610 <col:16> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |       `-ImplicitCastExpr 0x12c47e35a50 <col:21, col:74> 'unsigned char' <IntegralCast>
    |         `-CallExpr 0x12c47e359a0 <col:21, col:74> 'int'
    |           |-ImplicitCastExpr 0x12c47e35988 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x12c47e357d0 <col:21> 'int ()' Function 0x12c47e35708 'constant_time_select_8' 'int ()'
    |           |-ImplicitCastExpr 0x12c47e359d8 <col:44> 'unsigned int' <LValueToRValue>
    |           | `-DeclRefExpr 0x12c47e357f0 <col:44> 'unsigned int' lvalue Var 0x12c47e2f9a8 'mask' 'unsigned int'
    |           |-ImplicitCastExpr 0x12c47e35a08 <col:50, col:66> 'int' <IntegralCast>
    |           | `-ImplicitCastExpr 0x12c47e359f0 <col:50, col:66> 'unsigned char' <LValueToRValue>
    |           |   `-ArraySubscriptExpr 0x12c47e358d8 <col:50, col:66> 'unsigned char' lvalue
    |           |     |-ImplicitCastExpr 0x12c47e358c0 <col:50> 'unsigned char *' <LValueToRValue>
    |           |     | `-DeclRefExpr 0x12c47e35810 <col:50> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    |           |     `-BinaryOperator 0x12c47e358a0 <col:53, col:57> 'int' '+'
    |           |       |-ImplicitCastExpr 0x12c47e35870 <col:53> 'int' <LValueToRValue>
    |           |       | `-DeclRefExpr 0x12c47e35830 <col:53> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |           |       `-ImplicitCastExpr 0x12c47e35888 <col:57> 'int' <LValueToRValue>
    |           |         `-DeclRefExpr 0x12c47e35850 <col:57> 'int' lvalue Var 0x12c47e2fb08 'msg_index' 'int'
    |           `-ImplicitCastExpr 0x12c47e35a38 <col:69, col:73> 'int' <IntegralCast>
    |             `-ImplicitCastExpr 0x12c47e35a20 <col:69, col:73> 'unsigned char' <LValueToRValue>
    |               `-ArraySubscriptExpr 0x12c47e35968 <col:69, col:73> 'unsigned char' lvalue
    |                 |-ImplicitCastExpr 0x12c47e35938 <col:69> 'unsigned char *' <LValueToRValue>
    |                 | `-DeclRefExpr 0x12c47e358f8 <col:69> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    |                 `-ImplicitCastExpr 0x12c47e35950 <col:72> 'int' <LValueToRValue>
    |                   `-DeclRefExpr 0x12c47e35918 <col:72> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |-ForStmt 0x12c47e36128 <line:245:5, line:248:5>
    | |-BinaryOperator 0x12c47e35b60 <line:245:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x12c47e35b18 <col:10> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    | | `-IntegerLiteral 0x12c47e35b38 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x12c47e35bf0 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x12c47e35bc0 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x12c47e35b80 <col:17> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    | | `-ImplicitCastExpr 0x12c47e35bd8 <col:21> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x12c47e35ba0 <col:21> 'int' lvalue ParmVar 0x12c47e2f300 'tlen' 'int'
    | |-UnaryOperator 0x12c47e35c30 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x12c47e35c10 <col:27> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    | `-CompoundStmt 0x12c47e36108 <col:32, line:248:5>
    |   |-BinaryOperator 0x12c47e35db0 <line:246:9, col:47> 'unsigned int' '='
    |   | |-DeclRefExpr 0x12c47e35c48 <col:9> 'unsigned int' lvalue Var 0x12c47e2f9a8 'mask' 'unsigned int'
    |   | `-BinaryOperator 0x12c47e35d90 <col:16, col:47> 'unsigned int' '&'
    |   |   |-ImplicitCastExpr 0x12c47e35d60 <col:16> 'unsigned int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x12c47e35c68 <col:16> 'unsigned int' lvalue Var 0x12c47e2f8a8 'good' 'unsigned int'
    |   |   `-ImplicitCastExpr 0x12c47e35d78 <col:23, col:47> 'unsigned int' <IntegralCast>
    |   |     `-CallExpr 0x12c47e35d00 <col:23, col:47> 'int'
    |   |       |-ImplicitCastExpr 0x12c47e35ce8 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x12c47e35c88 <col:23> 'int ()' Function 0x12c47e31d38 'constant_time_lt' 'int ()'
    |   |       |-ImplicitCastExpr 0x12c47e35d30 <col:40> 'int' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x12c47e35ca8 <col:40> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |   |       `-ImplicitCastExpr 0x12c47e35d48 <col:43> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x12c47e35cc8 <col:43> 'int' lvalue Var 0x12c47e2fb88 'mlen' 'int'
    |   `-BinaryOperator 0x12c47e360e8 <line:247:9, col:63> 'unsigned char' '='
    |     |-ArraySubscriptExpr 0x12c47e35e40 <col:9, col:13> 'unsigned char' lvalue
    |     | |-ImplicitCastExpr 0x12c47e35e10 <col:9> 'unsigned char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x12c47e35dd0 <col:9> 'unsigned char *' lvalue ParmVar 0x12c47e2f280 'to' 'unsigned char *'
    |     | `-ImplicitCastExpr 0x12c47e35e28 <col:12> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x12c47e35df0 <col:12> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |     `-ImplicitCastExpr 0x12c47e360d0 <col:17, col:63> 'unsigned char' <IntegralCast>
    |       `-CallExpr 0x12c47e36020 <col:17, col:63> 'int'
    |         |-ImplicitCastExpr 0x12c47e36008 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x12c47e35e60 <col:17> 'int ()' Function 0x12c47e35708 'constant_time_select_8' 'int ()'
    |         |-ImplicitCastExpr 0x12c47e36058 <col:40> 'unsigned int' <LValueToRValue>
    |         | `-DeclRefExpr 0x12c47e35e80 <col:40> 'unsigned int' lvalue Var 0x12c47e2f9a8 'mask' 'unsigned int'
    |         |-ImplicitCastExpr 0x12c47e36088 <col:46, col:55> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x12c47e36070 <col:46, col:55> 'unsigned char' <LValueToRValue>
    |         |   `-ArraySubscriptExpr 0x12c47e35f58 <col:46, col:55> 'unsigned char' lvalue
    |         |     |-ImplicitCastExpr 0x12c47e35f40 <col:46> 'unsigned char *' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x12c47e35ea0 <col:46> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    |         |     `-BinaryOperator 0x12c47e35f20 <col:49, col:53> 'int' '+'
    |         |       |-ImplicitCastExpr 0x12c47e35f08 <col:49> 'int' <LValueToRValue>
    |         |       | `-DeclRefExpr 0x12c47e35ec0 <col:49> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |         |       `-IntegerLiteral 0x12c47e35ee0 <col:53> 'int' 11
    |         `-ImplicitCastExpr 0x12c47e360b8 <col:58, col:62> 'int' <IntegralCast>
    |           `-ImplicitCastExpr 0x12c47e360a0 <col:58, col:62> 'unsigned char' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x12c47e35fe8 <col:58, col:62> 'unsigned char' lvalue
    |               |-ImplicitCastExpr 0x12c47e35fb8 <col:58> 'unsigned char *' <LValueToRValue>
    |               | `-DeclRefExpr 0x12c47e35f78 <col:58> 'unsigned char *' lvalue ParmVar 0x12c47e2f280 'to' 'unsigned char *'
    |               `-ImplicitCastExpr 0x12c47e35fd0 <col:61> 'int' <LValueToRValue>
    |                 `-DeclRefExpr 0x12c47e35f98 <col:61> 'int' lvalue Var 0x12c47e2f6d8 'i' 'int'
    |-CallExpr 0x12c47e362c8 <line:250:5, col:31> 'int'
    | |-ImplicitCastExpr 0x12c47e362b0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c47e36250 <col:5> 'int ()' Function 0x12c47e36188 'OPENSSL_clear_free' 'int ()'
    | |-ImplicitCastExpr 0x12c47e362f8 <col:24> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x12c47e36270 <col:24> 'unsigned char *' lvalue Var 0x12c47e2f770 'em' 'unsigned char *'
    | `-ImplicitCastExpr 0x12c47e36310 <col:28> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x12c47e36290 <col:28> 'int' lvalue ParmVar 0x12c47e2f480 'num' 'int'
    |-CallExpr 0x12c47e36508 <line:252:5, col:42> 'int'
    | |-ImplicitCastExpr 0x12c47e364f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x12c47e36438 <col:5> 'int ()' Function 0x12c47e36370 'err_clear_last_constant_time' 'int ()'
    | `-BinaryOperator 0x12c47e364d0 <col:34, col:38> 'unsigned int' '&'
    |   |-ImplicitCastExpr 0x12c47e364b8 <col:34> 'unsigned int' <IntegralCast>
    |   | `-IntegerLiteral 0x12c47e36458 <col:34> 'int' 1
    |   `-ImplicitCastExpr 0x12c47e364a0 <col:38> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x12c47e36480 <col:38> 'unsigned int' lvalue Var 0x12c47e2f8a8 'good' 'unsigned int'
    `-ReturnStmt 0x12c47e36650 <line:254:5, col:51>
      `-CallExpr 0x12c47e365e8 <col:12, col:51> 'int'
        |-ImplicitCastExpr 0x12c47e365d0 <col:12> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x12c47e36530 <col:12> 'int ()' Function 0x12c47e313e8 'constant_time_select_int' 'int ()'
        |-ImplicitCastExpr 0x12c47e36620 <col:37> 'unsigned int' <LValueToRValue>
        | `-DeclRefExpr 0x12c47e36550 <col:37> 'unsigned int' lvalue Var 0x12c47e2f8a8 'good' 'unsigned int'
        |-ImplicitCastExpr 0x12c47e36638 <col:43> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x12c47e36570 <col:43> 'int' lvalue Var 0x12c47e2fb88 'mlen' 'int'
        `-UnaryOperator 0x12c47e365b8 <col:49, col:50> 'int' prefix '-'
          `-IntegerLiteral 0x12c47e36590 <col:50> 'int' 1
