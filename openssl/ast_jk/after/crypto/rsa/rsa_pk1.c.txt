TranslationUnitDecl 0x2648f0a6ce8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2648f0a7580 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2648f0a7280 '__int128'
|-TypedefDecl 0x2648f0a75f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2648f0a72a0 'unsigned __int128'
|-TypedefDecl 0x2648f0a7928 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2648f0a76e0 'struct __NSConstantString_tag'
|   `-Record 0x2648f0a7648 '__NSConstantString_tag'
|-TypedefDecl 0x2648f0a7998 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2648f0a6ec0 'unsigned long long'
|-TypedefDecl 0x2648f0a7a30 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2648f0a79f0 'char *'
|   `-BuiltinType 0x2648f0a6d80 'char'
|-TypedefDecl 0x2648f0a7aa0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2648f0a79f0 'char *'
|   `-BuiltinType 0x2648f0a6d80 'char'
|-TypedefDecl 0x2648f0a7b60 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2648f0a6ec0 'unsigned long long'
|-TypedefDecl 0x2648f0a7bd0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2648f0a79f0 'char *'
|   `-BuiltinType 0x2648f0a6d80 'char'
|-FunctionDecl 0x26490a65850 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x26490a658f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x26490a65960 <col:21> Implicit
|-FunctionDecl 0x26490a659b8 prev 0x26490a65850 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x26490a656e0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x26490a65aa8 <col:21> Inherited Implicit
|-TypedefDecl 0x26490a65ae8 prev 0x2648f0a7998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2648f0a6ec0 'unsigned long long'
|-TypedefDecl 0x26490a65b90 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x26490a65b60 'size_t' sugar
|   |-Typedef 0x26490a65ae8 'size_t'
|   `-BuiltinType 0x2648f0a6ec0 'unsigned long long'
|-TypedefDecl 0x26490a65c00 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2648f0a6e20 'long long'
|-TypedefDecl 0x26490a65c70 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2648f0a6e20 'long long'
|-TypedefDecl 0x26490a65ce0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2648f0a6e60 'unsigned short'
|-TypedefDecl 0x26490a65d50 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2648f0a6e60 'unsigned short'
|-TypedefDecl 0x26490a65dc0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2648f0a6e60 'unsigned short'
|-TypedefDecl 0x26490a65e30 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2648f0a6de0 'int'
|-TypedefDecl 0x26490a65ea0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2648f0a6e00 'long'
|-TypedefDecl 0x26490a65f10 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2648f0a6e20 'long long'
|-TypedefDecl 0x26490a65fa0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x26490a65f70 '__time64_t' sugar
|   |-Typedef 0x26490a65f10 '__time64_t'
|   `-BuiltinType 0x2648f0a6e20 'long long'
|-FunctionDecl 0x26490a66118 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x26490a66338 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x26490a9c540 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x26490a66478 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x26490a664f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x26490a66568 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x26490a665e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x26490a9c2e0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x26490a9c620 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x26490a9c6e0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x26490a9c850 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x26490a9c800 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x26490a9c7a0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x26490a9c6c0 'struct threadlocaleinfostruct'
|       `-Record 0x26490aa3350 'threadlocaleinfostruct'
|-TypedefDecl 0x26490a9c960 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x26490a9c910 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x26490a9c8b0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x26490a9c780 'struct threadmbcinfostruct'
|       `-Record 0x26490a9c6e0 'threadmbcinfostruct'
|-RecordDecl 0x26490a9c9b8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x26490a9ca70 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x26490a9cb30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x26490a9cbc0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x26490a9cc50 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x26490a9cd08 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x26490a9ccb0 'struct localeinfo_struct' sugar
|   `-RecordType 0x26490a9cb10 'struct localeinfo_struct'
|     `-Record 0x26490a9ca70 'localeinfo_struct'
|-TypedefDecl 0x26490a9cde0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x26490a9cd90 'struct localeinfo_struct *'
|   `-ElaboratedType 0x26490a9ccb0 'struct localeinfo_struct' sugar
|     `-RecordType 0x26490a9cb10 'struct localeinfo_struct'
|       `-Record 0x26490a9ca70 'localeinfo_struct'
|-RecordDecl 0x26490a9ce58 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x26490a9cf10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x26490a9cf88 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x26490a9d048 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x26490a9d0e0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x26490a9d150 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x26490a9d208 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x26490a9d1b0 'struct localerefcount' sugar
|   `-RecordType 0x26490a9cef0 'struct localerefcount'
|     `-Record 0x26490a9ce58 'localerefcount'
|-RecordDecl 0x26490aa3350 prev 0x26490a9c620 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x26490aa33d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x26490aa3448 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x26490aa34b8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x26490aa3528 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x26490aa3598 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x26490aa3758 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x26490aa37c8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x26490aa3838 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x26490aa38a8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x26490aa3918 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x26490aa3988 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x26490aa39e0 parent 0x2648f0a6ce8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x26490aa3b70 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x26490aa3be0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x26490aa3c50 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x26490aa3cc0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x26490aa3d60 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x26490aa3dd0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x26490aa3ee0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x26490aa4018 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x26490aa40c8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x26490aa4070 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x26490a9c6c0 'struct threadlocaleinfostruct'
|     `-Record 0x26490aa3350 'threadlocaleinfostruct'
|-RecordDecl 0x26490aa4160 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x26490aa4220 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x26490aa4298 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x26490aa83a0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x26490aa8410 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x26490aa8480 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x26490aa84f0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x26490aa8560 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x26490aa85d0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x26490aa8640 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x26490aa86f0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x26490aa86a0 'struct _iobuf' sugar
|   `-RecordType 0x26490aa4200 'struct _iobuf'
|     `-Record 0x26490aa4160 '_iobuf'
|-FunctionDecl 0x26490aa8928 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x26490aa89f8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2648f0a6e20 'long long'
|-FunctionDecl 0x26490aa8bd8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490aa8a60 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x26490aa8ed0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26490aa8cb0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x26490aa8d28 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x26490aa9280 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x26490aa8fb0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x26490aa9030 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x26490aa90b0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x26490aa9520 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x26490aa93b0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x26490aa9750 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x26490aa9610 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x26490aa9900 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490aa9820 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x26490aa9af0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26490aa9de8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x26490aa9bc0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x26490aa9c40 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x26490aa9fa0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490aa9ec0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x26490aaa150 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490aaa070 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x26490aaa300 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490aaa220 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x26490aac4e8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490aac408 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x26490aac678 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26490aac9e0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x26490aac740 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x26490aac838 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x26490aacd98 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x26490aacac0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x26490aacb40 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x26490aacbb8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x26490aacf58 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490aace78 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x26490aad220 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x26490aad030 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x26490aad0b0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x26490aa5370 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26490aa5768 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x26490aa5808 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x26490aa5870 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x26490aa58e8 prev 0x26490aa5768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x26490aa5540 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x26490aa55c0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x26490aa5998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490aa5e10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x26490aa5b40 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x26490aa5bc0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x26490aa5c40 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x26490aa6130 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x26490aa61d0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x26490aa6238 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x26490aa62b0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x26490ab2440 prev 0x26490aa6130 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x26490aa5ef0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x26490aa5f70 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x26490ab2538 <col:40> Inherited printf 2 3
|-FunctionDecl 0x26490ab2700 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x26490ab2580 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x26490ab2600 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x26490ab2958 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26490ab27e0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x26490ab2858 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x26490ab2b88 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x26490ab2a38 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x26490ab2e80 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x26490ab2c60 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x26490ab2cd8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x26490ab3318 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x26490ab33b8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x26490aad3f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x26490aad458 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x26490aad4c0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x26490aad548 prev 0x26490ab3318 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x26490ab2f60 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x26490ab2fd8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490ab3050 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490ab30c8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x26490aada50 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x26490aad638 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x26490aad6b0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490aad728 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490aad7a0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490aad818 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x26490aadf10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x26490aadc40 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x26490aadcc0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x26490aadd38 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x26490aadfc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490aaf4b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x26490aae110 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x26490aae190 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x26490aae210 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x26490aae288 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x26490aaf860 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x26490aaf900 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x26490aaf968 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x26490aaf9e0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x26490aafa48 prev 0x26490aaf860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x26490aaf698 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x26490aaf718 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x26490aafc28 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x26490aafaf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490ab0068 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490aafd68 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x26490aafde8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x26490aafe80 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490ab0120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490ab4460 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x26490ab0260 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x26490ab02e0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x26490ab4750 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490ab4538 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x26490ab45b8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x26490ab4630 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490ab4ab0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x26490ab4830 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x26490ab4908 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x26490ab4e68 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x26490ab4b88 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x26490ab4c08 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x26490ab4c88 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x26490ab50c8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x26490ab4f48 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x26490ab0468 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x26490ab5198 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x26490ab5218 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x26490ab5298 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x26490ab06c8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x26490ab0548 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x26490ab0b88 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x26490ab0c28 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x26490ab0c90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x26490ab0cf8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x26490ab0d60 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x26490ab0de8 prev 0x26490ab0b88 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x26490ab07d0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x26490ab0848 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490ab08c0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490ab0938 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x26490ab0fb0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490ab0ed0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x26490ab1140 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26490ab12c8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26490aae5c0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x26490ab1398 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x26490aae410 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x26490aae8e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x26490aae7a0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x26490aae990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490aaebb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490aaead0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x26490aaedd0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x26490aaec88 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x26490aaef80 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490aaeea0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x26490aaf1d0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x26490aaf058 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x26490aaf0d8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x26490ab1430 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x26490ab14d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x26490ab1540 <col:40> Implicit printf 1 2
|-FunctionDecl 0x26490ab15a8 prev 0x26490ab1430 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x26490aaf2b0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x26490ab1698 <col:40> Inherited printf 1 2
|-FunctionDecl 0x26490ab17c8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x26490ab16e8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x26490ab1a18 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26490ab18a0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x26490ab1918 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x26490ab1bd8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x26490ab1af8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x26490ab1df8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x26490ab1cb0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x26490ab2048 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26490ab1ed0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x26490ab1f48 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x26490ab2208 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x26490ab2128 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x26490b060b0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x26490ab22e0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x26490ab2360 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x26490b06270 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x26490b06190 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x26490b06500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x26490b06420 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x26490b065a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x26490b067a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x26490b066c8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x26490b06930 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26490b06bd8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x26490b06c78 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x26490b06ce8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x26490b06d50 prev 0x26490b06bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x26490b06ac0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x26490b06f28 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x26490b06df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b022b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b02078 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x26490b020f0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490b02360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b02588 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x26490b024a8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x26490b027d8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b02660 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x26490b026d8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b02b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x26490b02970 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x26490b029f0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x26490b02c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b02e70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x26490b02d90 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x26490b05118 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x26490b04fd0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x26490b05300 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x26490b05750 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x26490b053c8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x26490b05448 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x26490b054c8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x26490b05540 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x26490b05bd0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x26490b05840 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b058b8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b05930 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b059b0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x26490b03fc0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x26490b05cc0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b05d38 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b05db8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x26490b04188 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x26490b040a8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x26490b04560 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x26490b04600 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x26490b04668 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x26490b046e0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x26490b04748 prev 0x26490b04560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x26490b04320 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x26490b043a0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x26490b04928 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x26490b047f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b04d18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b04a38 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x26490b04ab8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x26490b04b30 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490b04dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b070f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x26490b04f18 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x26490b06ff0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x26490b073e8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b071d0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x26490b07250 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x26490b072c8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b07878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x26490b07590 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x26490b07608 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b07688 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x26490b07930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b07f00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b07b70 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x26490b07be8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b07c68 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x26490b07ce0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490b02fb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b03310 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x26490b030f8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x26490b03170 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b031f0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x26490b036a8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b033f8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x26490b03470 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b034f0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x26490b03568 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b03908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x26490b039a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b03c60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x26490b03af0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x26490afff80 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x26490b03d38 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x26490b03db0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x26490b00200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x26490b00120 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x26490b002a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b00568 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26490b003f0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x26490b00468 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x26490b00980 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x26490b00a20 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x26490b00a88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x26490b00af0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26490b00b70 <col:40> Implicit printf 2 0
|-FunctionDecl 0x26490b00bd8 prev 0x26490b00980 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x26490b00640 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x26490b006c0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x26490b00738 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x26490b00cd8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x26490b08000 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x26490b080a0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x26490b08108 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x26490b08170 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26490b081f0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x26490b08258 prev 0x26490b08000 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x26490b00d20 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x26490b00da0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x26490b00e18 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x26490b08358 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x26490b085b8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x26490b083a0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x26490b08420 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x26490b08498 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b088b0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x26490b08698 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x26490b08718 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x26490b08790 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b08bf8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x26490b08c98 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x26490b08d00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26490b08d78 <col:40> Implicit printf 1 0
|-FunctionDecl 0x26490b08de0 prev 0x26490b08bf8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x26490b08998 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x26490b08a10 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x26490b08ed8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x26490b010c8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x26490b01168 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x26490b011d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26490b01248 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x26490b012b0 prev 0x26490b010c8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x26490b08f28 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x26490b00f90 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x26490b013a8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x26490b01570 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x26490b013f8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x26490b01470 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b017c8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x26490b01650 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x26490b016c8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b01d28 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x26490b01dc8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x26490b01e30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x26490b01e98 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x26490b01f00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26490b09010 <col:77> Implicit printf 3 0
|-FunctionDecl 0x26490b09078 prev 0x26490b01d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x26490b01968 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b019e0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b01a60 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x26490b01ad8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x26490b09268 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x26490b09138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b096d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x26490b092b8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b09330 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b093a8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b09428 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x26490b094a0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b09b18 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x26490b097d0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b09848 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b098c0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b09940 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x26490b099b8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b09ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x26490b09cd0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x26490b09d48 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b09dc8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x26490b09fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b0d4c0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x26490b0d210 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x26490b0d288 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b0d308 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x26490b0d380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x26490b0d580 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b0d978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x26490b0d6c8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b0d740 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b0d7c0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x26490b0d838 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b0dd38 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x26490b0da68 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x26490b0dae8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x26490b0db60 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b0e100 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x26490b0e1a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x26490b0e208 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x26490b0e280 <col:85> Implicit printf 2 3
|-FunctionDecl 0x26490b0e2e8 prev 0x26490b0e100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x26490b0dee0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x26490b0df60 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x26490b0e4c8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x26490b0e398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b0e8f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x26490b0e990 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x26490b0e9f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x26490b0ea60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26490b0eae0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x26490b0eb48 prev 0x26490b0e8f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x26490b0e5d8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x26490b0e658 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x26490b0e6d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x26490b0ed30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x26490b0ec00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b0f070 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x26490b0f110 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x26490b0f178 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x26490b0f1e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26490b0f260 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x26490b0f2c8 prev 0x26490b0f070 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x26490b0ed80 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x26490b0ee00 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x26490b0ee78 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x26490b0f3c8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x26490b0f590 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x26490b0f418 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x26490b0f490 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b0f888 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x26490b0f670 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b0f6e8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b0f768 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x26490b0fc20 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x26490b0f970 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b0f9e8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b0fa68 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x26490b0fae0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b0fe88 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x26490b0fd08 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x26490b0fd88 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x26490b10080 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x26490b0ff68 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x26490b10370 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x26490b10158 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x26490b101d0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b10250 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x26490b10668 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x26490b10450 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x26490b104d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x26490b10548 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b108c8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x26490b10750 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x26490b107c8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b10c58 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x26490b109a8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x26490b10a20 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b10aa0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x26490b10b18 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b10e28 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x26490b10d48 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x26490b0a020 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x26490b10f00 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x26490b10f78 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b0a1e0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x26490b0a100 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x26490b0a370 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26490b0a5b8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b0a440 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x26490b0a4b8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b0a810 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b0a698 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x26490b0a710 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b0aa68 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b0a8f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x26490b0a968 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b0ae18 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b0ab48 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x26490b0abc0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b0ac38 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b121c0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b0af00 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x26490b0af78 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b120a0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b124b8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b122a8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x26490b12320 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b12398 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b127b0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b12598 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x26490b12618 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x26490b12690 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b12aa8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b12890 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x26490b12910 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x26490b12988 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b12da0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b12b88 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x26490b12c08 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x26490b12c80 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b0b190 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b12e80 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x26490b12f00 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x26490b12f78 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b12ff0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b0b528 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b0b278 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x26490b0b2f8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x26490b0b370 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b0b3e8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b0b8c0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b0b610 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x26490b0b690 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x26490b0b708 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b0b780 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b0bd58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b0ba70 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b0baf0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x26490b0bb68 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490b0be10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b133c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b0bf58 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b130b0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b13130 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x26490b131a8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b13760 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b134b0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b13528 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b135a8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x26490b13620 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b13cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b13950 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b139d0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x26490b13a48 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x26490b13ac0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x26490b13d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b0c278 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b13eb8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b13f30 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b13fb0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x26490b14028 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b0c040 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b0c6b8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b0c370 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b0c3e8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b0c468 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x26490b0c4e0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b0c558 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b0c928 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b0c7b0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x26490b0c828 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b0cb80 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b0ca08 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x26490b0ca80 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b0ce70 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b0cc60 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x26490b0ccd8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b0cd50 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b17220 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b0cf58 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x26490b0cfd0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b17100 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b17678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b173c8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b17440 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b174c0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x26490b17538 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490b17738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b17b30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b17880 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b178f8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b17978 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x26490b179f0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b1a120 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b17c20 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b17c98 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b17d10 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b17d90 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x26490b17e08 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b1a660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b1a318 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b1a390 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b1a410 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x26490b1a488 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x26490b1a500 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x26490b1a728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b1aba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b1a878 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b1a8f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b1a970 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x26490b1a9e8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b1aa60 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b19170 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b1aca0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x26490b1ad18 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b1ad90 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b1ae10 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x26490b1ae88 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b1af00 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b19530 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x26490b19268 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x26490b192e0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x26490b19360 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x26490b197a0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x26490b19630 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x26490b199b8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x26490b19c98 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x26490b19a80 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x26490b19af8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x26490b19ee0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x26490b19d70 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x26490b1b130 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x26490b19fb0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x26490b1b2b8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x26490b1b4f0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x26490b1b380 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x26490b1b3f8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x26490b1b6a0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x26490b1b5c8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x26490b1b948 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x26490b1b770 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x26490b1b7e8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x26490b1bcf0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x26490b1ba20 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x26490b1baa0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x26490b1bb18 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x26490b1bff0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x26490b1bdd0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x26490b1be48 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x26490b182b8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x26490b1c0c8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x26490b18110 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x26490b185c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x26490b18450 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x26490b18668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b18928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x26490b187a8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x26490b18c30 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b189f8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x26490b18a70 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b18e80 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b18d08 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x26490b18d80 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b160e0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x26490b18f58 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b16290 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x26490b161b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b16440 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x26490b16360 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b167d8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b16510 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x26490b16588 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b16600 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b16ac8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b168b8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x26490b16930 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b169a8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b16db8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b16ba8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x26490b16c20 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b16c98 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b1c140 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b16e98 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x26490b16f10 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b16f88 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b1c440 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b1c220 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b1c298 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b1c690 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b1c518 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b1c590 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b1c8e0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b1c768 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b1c7e0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b1cb30 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b1c9b8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b1ca30 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b1cee8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b1cc08 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x26490b1cc80 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b1ccf8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b152e0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b1cfc8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x26490b1d040 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b1d0b8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b150d0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b15698 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b153c8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x26490b15440 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b154b8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b15988 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b15778 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x26490b157f0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b15868 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b15c78 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b15a68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b15ae0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b15b58 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b16000 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b15d58 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b15dd0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b15e48 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b15ec0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b1d500 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b1d178 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b1d1f0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b1d268 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b1d2e0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b1da08 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b1d5e8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b1d660 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b1d6d8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b1d750 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b1d7c8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b1ddc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b1dbb8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x26490b1dc30 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b1dca8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x26490b1de80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b1e390 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b1e080 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x26490b1e160 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b1e1d8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b1e250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x26490b1e450 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b1e708 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b1e590 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x26490b1e608 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b1e8c0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x26490b1e7e0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b1eba0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b1e990 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x26490b1ea08 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b1ea80 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b1edf8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b1ec80 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b1ecf8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b21fc0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b1eed0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b1ef48 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b1efc0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b22348 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b220a0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b22118 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b22190 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b22208 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b22510 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x26490b22430 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b22758 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b225e0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b22658 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b22a60 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b22830 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b228a8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b22cb0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b22b38 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b22bb0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b22f00 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b22d88 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b22e00 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b212a8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b20fd8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b21050 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b210c8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b21598 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b21388 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b21400 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b21478 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b21888 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b21678 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b216f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b21768 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b21c48 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b21968 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x26490b219e0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b21a58 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b22fd0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b21d28 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x26490b21da0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b21e18 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b232c0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b230b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x26490b23128 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b231a0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b23710 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b233a0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x26490b23418 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b23490 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b23508 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b23aa0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b237f8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x26490b23870 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b238e8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b23960 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b23e30 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b23b88 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x26490b23c00 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b23c78 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b23cf0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b28330 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b23f18 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b28020 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b28098 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b28110 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b286c0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b28418 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b28490 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b28508 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b28580 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b28a50 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b287a8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b28820 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b28898 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b28910 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b28f58 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b28b38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b28bb0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b28c28 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b28ca0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b28d18 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b29398 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b29058 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b290d0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b29148 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b291c0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b29238 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b297c8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b29488 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b29500 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b29578 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b295f0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b29668 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b29a30 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b298b8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b29930 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b29c80 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b29b08 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b29b80 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b29f68 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b29d58 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b29dd0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b29e48 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b2a3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b2a130 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b2a1a8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b2a220 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b2a298 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490b2a498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b2aa08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b2a5e0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b2a658 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b2a6d0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b2a748 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b2a7c0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b2af40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b2ac00 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b2ac78 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b2acf0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b2ad68 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x26490b2ade0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x26490b27010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b27620 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b27158 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26490b271d0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b27248 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b272c0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b27338 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b273b0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b27b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b278e8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x26490b27960 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x26490b27bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x26490b27ce8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x26490b2b2b8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b27fa0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x26490b2b060 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b2b0d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x26490b2b370 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x26490b2b488 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x26490b2ba28 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b2b748 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x26490b2b7c0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b2b838 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x26490b2bae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x26490b2bc00 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x26490b241f0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b2bec0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x26490b2bf38 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b2bfb0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x26490b23fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x26490b242b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x26490b243d0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x26490b246d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x26490b244f8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x26490b24570 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b245e8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x26490b25290 <line:37:1, line:44:1>
|   |-DeclStmt 0x26490b24820 <line:38:5, col:21>
|   | `-VarDecl 0x26490b247b8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x26490b248b8 <line:39:5, col:13>
|   | `-VarDecl 0x26490b24850 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x26490b24c10 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x26490b24bf8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x26490b24b10 <col:34> '<builtin fn type>' Function 0x26490b249a8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x26490b24b48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x26490b247b8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x26490b24b80 <col:29> 'const wchar_t *' lvalue ParmVar 0x26490b245e8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x26490b24ed0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x26490b24c40 <col:5> 'int' lvalue Var 0x26490b24850 '_Ret' 'int'
|   | `-CallExpr 0x26490b24e10 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x26490b24df8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x26490b24c78 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x26490b28f58 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x26490b24e58 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x26490b24c98 <col:27> 'wchar_t *' lvalue ParmVar 0x26490b244f8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x26490b24e70 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x26490b24cb8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x26490b24570 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x26490b24e88 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x26490b24cd8 <col:44> 'const wchar_t *' lvalue ParmVar 0x26490b245e8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x26490b24ea0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x26490b24d60 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x26490b24d38 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x26490b24cf8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x26490b24eb8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x26490b24d80 <col:59> 'va_list':'char *' lvalue Var 0x26490b247b8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x26490b25220 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x26490b25208 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x26490b25158 <col:34> '<builtin fn type>' Function 0x26490b24ff0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x26490b25190 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x26490b247b8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x26490b25280 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x26490b25268 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x26490b25248 <col:12> 'int' lvalue Var 0x26490b24850 '_Ret' 'int'
|-FunctionDecl 0x26490b249a8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x26490b24a48 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x26490b24ab8 <col:34> Implicit
|-FunctionDecl 0x26490b24ff0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x26490b25090 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x26490b25100 <col:34> Implicit
|-FunctionDecl 0x26490b25588 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x26490b252e0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x26490b25358 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b253d0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b25448 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x26490b25870 <line:50:1, line:52:1>
|   `-ReturnStmt 0x26490b25860 <line:51:5, col:62>
|     `-CallExpr 0x26490b257a0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x26490b25788 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x26490b25660 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x26490b28f58 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x26490b257e8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x26490b25680 <col:27> 'wchar_t *' lvalue ParmVar 0x26490b252e0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x26490b25800 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x26490b256a0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x26490b25358 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x26490b25818 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x26490b256c0 <col:44> 'const wchar_t *' lvalue ParmVar 0x26490b253d0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x26490b25830 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x26490b25748 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x26490b25720 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x26490b256e0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x26490b25848 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x26490b25768 <col:59> 'va_list':'char *' lvalue ParmVar 0x26490b25448 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x26490b25b10 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x26490b25898 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x26490b25910 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b25988 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b25a00 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x26490b31158 <line:61:1, line:68:1>
|   |-DeclStmt 0x26490b25c60 <line:62:5, col:21>
|   | `-VarDecl 0x26490b25bf8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x26490b25cf8 <line:63:5, col:13>
|   | `-VarDecl 0x26490b25c90 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x26490b25da0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x26490b25d88 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x26490b25d10 <col:34> '<builtin fn type>' Function 0x26490b249a8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x26490b25d30 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x26490b25bf8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x26490b25d68 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x26490b25a00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x26490b25fa0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x26490b25dd0 <col:5> 'int' lvalue Var 0x26490b25c90 '_Ret' 'int'
|   | `-CallExpr 0x26490b25ee0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x26490b25ec8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x26490b25e08 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x26490b28f58 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x26490b25f28 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x26490b25e28 <col:27> 'wchar_t *' lvalue ParmVar 0x26490b25898 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x26490b25f40 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x26490b25e48 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x26490b25910 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x26490b25f58 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x26490b25e68 <col:44> 'const wchar_t *' lvalue ParmVar 0x26490b25988 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x26490b25f70 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x26490b25e88 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x26490b25a00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x26490b25f88 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x26490b25ea8 <col:64> 'va_list':'char *' lvalue Var 0x26490b25bf8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x26490b310e8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x26490b310d0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x26490b25fc0 <col:34> '<builtin fn type>' Function 0x26490b24ff0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x26490b310b0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x26490b25bf8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x26490b31148 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x26490b31130 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x26490b31110 <col:12> 'int' lvalue Var 0x26490b25c90 '_Ret' 'int'
|-FunctionDecl 0x26490b314e8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x26490b311a8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x26490b31220 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b31298 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b31310 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x26490b31388 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x26490b31770 <line:74:1, line:76:1>
|   `-ReturnStmt 0x26490b31760 <line:75:5, col:67>
|     `-CallExpr 0x26490b316a0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x26490b31688 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x26490b315c8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x26490b28f58 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x26490b316e8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x26490b315e8 <col:27> 'wchar_t *' lvalue ParmVar 0x26490b311a8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x26490b31700 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x26490b31608 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x26490b31220 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x26490b31718 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x26490b31628 <col:44> 'const wchar_t *' lvalue ParmVar 0x26490b31298 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x26490b31730 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x26490b31648 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x26490b31310 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x26490b31748 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x26490b31668 <col:64> 'va_list':'char *' lvalue ParmVar 0x26490b31388 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x26490b319b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x26490b31798 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x26490b31810 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x26490b31c08 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x26490b31a90 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b31b08 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b31ef0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x26490b31ce0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b31d58 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26490b31dd0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26490b2d1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b2d070 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x26490b2d0e8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x26490b2d298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b2d6a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b2d498 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x26490b2d510 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b2d588 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490b2d760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b2da18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b2d8a0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x26490b2d918 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b2dd00 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b2daf0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x26490b2db68 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b2dbe0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b2e0f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b2dea0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x26490b2df18 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x26490b2e1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b2e678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b2e3a0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x26490b2e418 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b2e490 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490b2e730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b2e9e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b2e870 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x26490b2e8e8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b2ecd0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b2eac0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x26490b2eb38 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b2ebb0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b2f178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b2ee70 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x26490b2eee8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b2ef60 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x26490b2f230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b2f7b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b2f430 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x26490b2f4a8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b2f520 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b2f598 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490b2f870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b2fbc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b2f9b0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x26490b2fa28 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b2faa0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b2ff48 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b2fca0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x26490b2fd18 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b2fd90 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b2fe08 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b34290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x26490b341b0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x26490b34338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b346b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b34538 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x26490b345b0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26490b34760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b34980 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x26490b348a0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x26490b34bc8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x26490b34a50 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26490b34ac8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26490b34ec8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x26490b34ca8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x26490b34d20 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x26490b35298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x26490b35060 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x26490b350f0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x26490b35348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b35750 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x26490b35490 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x26490b35508 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x26490b35580 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x26490b35bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x26490b358f0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x26490b35968 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x26490b359e0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x26490b35c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b37158 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x26490b35db0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x26490b35e28 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x26490b35ea0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x26490b35f18 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x26490b373b0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x26490b37240 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x26490b375f0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x26490b37480 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x26490b374f8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x26490b377a8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x26490b376c8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x26490b37a98 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x26490b37878 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x26490b378f0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x26490b37d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x26490b37c30 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x26490b37db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26490b37fc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x26490b37ef0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x26490b361f8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x26490b38098 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x26490b36100 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x26490b36440 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x26490b362d0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x26490b36348 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x26490b365f0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x26490b36518 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x26490b36798 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x26490b366c0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x26490b36948 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490b36868 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x26490b36af8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26490b36a18 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x26490b36e70 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x26490b36bd0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x26490b36c48 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b36cc0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b36d38 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x26490b382f0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x26490b36f60 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x26490b36fd8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b37050 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b38120 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b38198 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x26490b38600 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x26490b383e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x26490b38460 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x26490b384e0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x26490b387c0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x26490b386e0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x26490b38ab0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x26490b38890 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x26490b38910 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x26490b38990 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x26490b38c70 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x26490b38b90 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x26490b38fe8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x26490b38d48 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x26490b38dc0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26490b38e38 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26490b38eb0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x26490b392a8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26490b39130 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x26490b391a8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x26490b395e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x26490b39460 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x26490b394e0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x26490b39690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x26490b39948 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x26490b399e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x26490b39d28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x26490b39bb0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x26490b39c30 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x26490b39dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x26490b320c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x26490b32160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x26490b32400 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x26490b32320 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x26490b324a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x26490b32728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x26490b327c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x26490b32a70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x26490b32990 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x26490b32b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x26490b32df8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x26490b32d18 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x26490b32ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x26490b3e2f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26490b3e180 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x26490b3e1f8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x26490b3e3a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x26490b3e668 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x26490b3e708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x26490b3eb40 <.//openssl//file_jk/after\crypto\rsa\rsa_pk1.c:18:1, line:42:1> line:18:5 RSA_padding_add_PKCS1_type_1 'int (unsigned char *, int, const unsigned char *, int)'
| |-ParmVarDecl 0x26490b3e860 <col:34, col:49> col:49 used to 'unsigned char *'
| |-ParmVarDecl 0x26490b3e8e0 <col:53, col:57> col:57 used tlen 'int'
| |-ParmVarDecl 0x26490b3e960 <line:19:34, col:55> col:55 used from 'const unsigned char *'
| |-ParmVarDecl 0x26490b3e9e0 <col:61, col:65> col:65 used flen 'int'
| `-CompoundStmt 0x26490b3fcd8 <line:20:1, line:42:1>
|   |-DeclStmt 0x26490b3ec98 <line:21:5, col:10>
|   | `-VarDecl 0x26490b3ec30 <col:5, col:9> col:9 used j 'int'
|   |-DeclStmt 0x26490b3ed30 <line:22:5, col:21>
|   | `-VarDecl 0x26490b3ecc8 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-IfStmt 0x26490b3ef50 <line:24:5, line:28:5>
|   | |-OpaqueValueExpr 0x26490b3ef38 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x26490b3ef20 <line:24:49, line:28:5>
|   |   `-ReturnStmt 0x26490b3ef10 <line:27:9, col:18>
|   |     `-ParenExpr 0x26490b3eef0 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x26490b3eec8 <col:17> 'int' 0
|   |-BinaryOperator 0x26490b3f018 <line:30:5, col:26> 'unsigned char *' '='
|   | |-DeclRefExpr 0x26490b3ef68 <col:5> 'unsigned char *' lvalue Var 0x26490b3ecc8 'p' 'unsigned char *'
|   | `-CStyleCastExpr 0x26490b3eff0 <col:9, col:26> 'unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x26490b3efd8 <col:26> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x26490b3efa0 <col:26> 'unsigned char *' lvalue ParmVar 0x26490b3e860 'to' 'unsigned char *'
|   |-BinaryOperator 0x26490b3f0e8 <line:32:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x26490b3f090 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x26490b3f070 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x26490b3f058 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x26490b3f038 <col:7> 'unsigned char *' lvalue Var 0x26490b3ecc8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x26490b3f0d0 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x26490b3f0a8 <col:14> 'int' 0
|   |-BinaryOperator 0x26490b3f1d0 <line:33:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x26490b3f160 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x26490b3f140 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x26490b3f128 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x26490b3f108 <col:7> 'unsigned char *' lvalue Var 0x26490b3ecc8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x26490b3f1b8 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x26490b3f190 <col:14> 'int' 1
|   |-BinaryOperator 0x26490b3f300 <line:36:5, col:20> 'int' '='
|   | |-DeclRefExpr 0x26490b3f1f0 <col:5> 'int' lvalue Var 0x26490b3ec30 'j' 'int'
|   | `-BinaryOperator 0x26490b3f2e0 <col:9, col:20> 'int' '-'
|   |   |-BinaryOperator 0x26490b3f288 <col:9, col:16> 'int' '-'
|   |   | |-ImplicitCastExpr 0x26490b3f270 <col:9> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x26490b3f228 <col:9> 'int' lvalue ParmVar 0x26490b3e8e0 'tlen' 'int'
|   |   | `-IntegerLiteral 0x26490b3f248 <col:16> 'int' 3
|   |   `-ImplicitCastExpr 0x26490b3f2c8 <col:20> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x26490b3f2a8 <col:20> 'int' lvalue ParmVar 0x26490b3e9e0 'flen' 'int'
|   |-CallExpr 0x26490b3f660 <line:37:5, col:22> 'void *'
|   | |-ImplicitCastExpr 0x26490b3f648 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x26490b3f550 <col:5> 'void *(void *, int, unsigned long long)' Function 0x26490b3f360 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x26490b3f6b0 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x26490b3f698 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b3f588 <col:12> 'unsigned char *' lvalue Var 0x26490b3ecc8 'p' 'unsigned char *'
|   | |-IntegerLiteral 0x26490b3f5a8 <col:15> 'int' 255
|   | `-ImplicitCastExpr 0x26490b3f6e0 <col:21> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x26490b3f6c8 <col:21> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x26490b3f5d0 <col:21> 'int' lvalue Var 0x26490b3ec30 'j' 'int'
|   |-CompoundAssignOperator 0x26490b3f750 <line:38:5, col:10> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-DeclRefExpr 0x26490b3f6f8 <col:5> 'unsigned char *' lvalue Var 0x26490b3ecc8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x26490b3f738 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x26490b3f718 <col:10> 'int' lvalue Var 0x26490b3ec30 'j' 'int'
|   |-BinaryOperator 0x26490b3f820 <line:39:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x26490b3f7d8 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x26490b3f7b8 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x26490b3f7a0 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x26490b3f780 <col:7> 'unsigned char *' lvalue Var 0x26490b3ecc8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x26490b3f808 <col:14> 'unsigned char' <IntegralCast>
|   |   `-CharacterLiteral 0x26490b3f7f0 <col:14> 'int' 0
|   |-CallExpr 0x26490b3fbd0 <line:40:5, col:39> 'void *'
|   | |-ImplicitCastExpr 0x26490b3fbb8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x26490b3fa70 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x26490b3f880 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x26490b3fc20 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x26490b3fc08 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b3faa8 <col:12> 'unsigned char *' lvalue Var 0x26490b3ecc8 'p' 'unsigned char *'
|   | |-ImplicitCastExpr 0x26490b3fc50 <col:15> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x26490b3fc38 <col:15> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b3fac8 <col:15> 'const unsigned char *' lvalue ParmVar 0x26490b3e960 'from' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x26490b3fc68 <col:21, col:35> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x26490b3fb38 <col:21, col:35> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x26490b3fb20 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x26490b3fae8 <col:35> 'int' lvalue ParmVar 0x26490b3e9e0 'flen' 'int'
|   `-ReturnStmt 0x26490b3fcc8 <line:41:5, col:14>
|     `-ParenExpr 0x26490b3fca8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x26490b3fc80 <col:13> 'int' 1
|-FunctionDecl 0x26490b3f360 <line:37:5> col:5 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x26490b3f400 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x26490b3f468 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x26490b3f4d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x26490b3f880 <line:40:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x26490b3f920 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x26490b3f988 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x26490b3f9f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x26490b400e0 <line:44:1, line:115:1> line:44:5 RSA_padding_check_PKCS1_type_1 'int (unsigned char *, int, const unsigned char *, int, int)'
| |-ParmVarDecl 0x26490b3fd60 <col:36, col:51> col:51 used to 'unsigned char *'
| |-ParmVarDecl 0x26490b3fde0 <col:55, col:59> col:59 used tlen 'int'
| |-ParmVarDecl 0x26490b3fe60 <line:45:36, col:57> col:57 used from 'const unsigned char *'
| |-ParmVarDecl 0x26490b3fee0 <col:63, col:67> col:67 used flen 'int'
| |-ParmVarDecl 0x26490b3ff60 <line:46:36, col:40> col:40 used num 'int'
| `-CompoundStmt 0x26490b3b708 <line:47:1, line:115:1>
|   |-DeclStmt 0x26490b3c2b8 <line:48:5, col:13>
|   | |-VarDecl 0x26490b3c1b8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x26490b3c238 <col:5, col:12> col:12 used j 'int'
|   |-DeclStmt 0x26490b3c350 <line:49:5, col:27>
|   | `-VarDecl 0x26490b3c2e8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-BinaryOperator 0x26490b3c3d8 <line:51:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x26490b3c368 <col:5> 'const unsigned char *' lvalue Var 0x26490b3c2e8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x26490b3c3c0 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x26490b3c3a0 <col:9> 'const unsigned char *' lvalue ParmVar 0x26490b3fe60 'from' 'const unsigned char *'
|   |-IfStmt 0x26490b3c4c8 <line:60:5, line:61:17>
|   | |-BinaryOperator 0x26490b3c458 <line:60:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x26490b3c440 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x26490b3c3f8 <col:9> 'int' lvalue ParmVar 0x26490b3ff60 'num' 'int'
|   | | `-IntegerLiteral 0x26490b3c418 <col:15> 'int' 11
|   | `-ReturnStmt 0x26490b3c4b8 <line:61:9, col:17>
|   |   `-UnaryOperator 0x26490b3c4a0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x26490b3c478 <col:17> 'int' 1
|   |-IfStmt 0x26490b3c750 <line:64:5, line:71:5>
|   | |-BinaryOperator 0x26490b3c550 <line:64:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x26490b3c520 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x26490b3c4e0 <col:9> 'int' lvalue ParmVar 0x26490b3ff60 'num' 'int'
|   | | `-ImplicitCastExpr 0x26490b3c538 <col:16> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b3c500 <col:16> 'int' lvalue ParmVar 0x26490b3fee0 'flen' 'int'
|   | `-CompoundStmt 0x26490b3c730 <col:22, line:71:5>
|   |   |-IfStmt 0x26490b3c6e0 <line:65:9, line:69:9>
|   |   | |-BinaryOperator 0x26490b3c638 <line:65:13, col:23> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x26490b3c620 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x26490b3c608 <col:13, col:18> 'unsigned char' <LValueToRValue>
|   |   | | |   `-ParenExpr 0x26490b3c5c0 <col:13, col:18> 'const unsigned char' lvalue
|   |   | | |     `-UnaryOperator 0x26490b3c5a8 <col:14, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |       `-UnaryOperator 0x26490b3c590 <col:15, col:16> 'const unsigned char *' postfix '++'
|   |   | | |         `-DeclRefExpr 0x26490b3c570 <col:15> 'const unsigned char *' lvalue Var 0x26490b3c2e8 'p' 'const unsigned char *'
|   |   | | `-IntegerLiteral 0x26490b3c5e0 <col:23> 'int' 0
|   |   | `-CompoundStmt 0x26490b3c6c8 <col:29, line:69:9>
|   |   |   `-ReturnStmt 0x26490b3c6b8 <line:68:13, col:21>
|   |   |     `-UnaryOperator 0x26490b3c6a0 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x26490b3c678 <col:21> 'int' 1
|   |   `-UnaryOperator 0x26490b3c718 <line:70:9, col:13> 'int' postfix '--'
|   |     `-DeclRefExpr 0x26490b3c6f8 <col:9> 'int' lvalue ParmVar 0x26490b3fee0 'flen' 'int'
|   |-IfStmt 0x26490b3ca78 <line:73:5, line:77:5>
|   | |-BinaryOperator 0x26490b3c9b0 <line:73:9, col:47> 'int' '||'
|   | | |-ParenExpr 0x26490b3c860 <col:9, col:27> 'int'
|   | | | `-BinaryOperator 0x26490b3c840 <col:10, col:26> 'int' '!='
|   | | |   |-ImplicitCastExpr 0x26490b3c828 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x26490b3c768 <col:10> 'int' lvalue ParmVar 0x26490b3ff60 'num' 'int'
|   | | |   `-ParenExpr 0x26490b3c808 <col:17, col:26> 'int'
|   | | |     `-BinaryOperator 0x26490b3c7e8 <col:18, col:25> 'int' '+'
|   | | |       |-ImplicitCastExpr 0x26490b3c7d0 <col:18> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x26490b3c788 <col:18> 'int' lvalue ParmVar 0x26490b3fee0 'flen' 'int'
|   | | |       `-IntegerLiteral 0x26490b3c7a8 <col:25> 'int' 1
|   | | `-ParenExpr 0x26490b3c990 <col:32, col:47> 'int'
|   | |   `-BinaryOperator 0x26490b3c970 <col:33, col:43> 'int' '!='
|   | |     |-ImplicitCastExpr 0x26490b3c958 <col:33, col:38> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x26490b3c940 <col:33, col:38> 'unsigned char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x26490b3c900 <col:33, col:38> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |     |     `-ParenExpr 0x26490b3c8e0 <col:34, col:38> 'const unsigned char *'
|   | |     |       `-UnaryOperator 0x26490b3c8c8 <col:35, col:36> 'const unsigned char *' postfix '++'
|   | |     |         `-DeclRefExpr 0x26490b3c8a8 <col:35> 'const unsigned char *' lvalue Var 0x26490b3c2e8 'p' 'const unsigned char *'
|   | |     `-IntegerLiteral 0x26490b3c918 <col:43> 'int' 1
|   | `-CompoundStmt 0x26490b3ca60 <col:50, line:77:5>
|   |   `-ReturnStmt 0x26490b3ca50 <line:76:9, col:19>
|   |     `-ParenExpr 0x26490b3ca30 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x26490b3ca18 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x26490b3c9f0 <col:18> 'int' 1
|   |-BinaryOperator 0x26490b3cb48 <line:80:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x26490b3ca90 <col:5> 'int' lvalue Var 0x26490b3c238 'j' 'int'
|   | `-BinaryOperator 0x26490b3cb28 <col:9, col:16> 'int' '-'
|   |   |-ImplicitCastExpr 0x26490b3cb10 <col:9> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x26490b3cac8 <col:9> 'int' lvalue ParmVar 0x26490b3fee0 'flen' 'int'
|   |   `-IntegerLiteral 0x26490b3cae8 <col:16> 'int' 1
|   |-ForStmt 0x26490b3cff8 <line:81:5, line:93:5>
|   | |-BinaryOperator 0x26490b3cbc8 <line:81:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x26490b3cb68 <col:10> 'int' lvalue Var 0x26490b3c1b8 'i' 'int'
|   | | `-IntegerLiteral 0x26490b3cba0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x26490b3cc58 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x26490b3cc28 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x26490b3cbe8 <col:17> 'int' lvalue Var 0x26490b3c1b8 'i' 'int'
|   | | `-ImplicitCastExpr 0x26490b3cc40 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b3cc08 <col:21> 'int' lvalue Var 0x26490b3c238 'j' 'int'
|   | |-UnaryOperator 0x26490b3cc98 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x26490b3cc78 <col:24> 'int' lvalue Var 0x26490b3c1b8 'i' 'int'
|   | `-CompoundStmt 0x26490b3cfd8 <col:29, line:93:5>
|   |   |-IfStmt 0x26490b3cf88 <line:82:9, line:91:9>
|   |   | |-BinaryOperator 0x26490b3cd58 <line:82:13, col:19> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x26490b3cd40 <col:13, col:14> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x26490b3cd28 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x26490b3cce8 <col:13, col:14> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x26490b3ccd0 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x26490b3ccb0 <col:14> 'const unsigned char *' lvalue Var 0x26490b3c2e8 'p' 'const unsigned char *'
|   |   | | `-IntegerLiteral 0x26490b3cd00 <col:19> 'int' 255
|   |   | `-CompoundStmt 0x26490b3cf70 <col:25, line:91:9>
|   |   |   `-IfStmt 0x26490b3cf48 <line:83:13, line:90:13> has_else
|   |   |     |-BinaryOperator 0x26490b3ce20 <line:83:17, col:23> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x26490b3ce08 <col:17, col:18> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x26490b3cdf0 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |   |     | |   `-UnaryOperator 0x26490b3cdb0 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |     `-ImplicitCastExpr 0x26490b3cd98 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   |     | |       `-DeclRefExpr 0x26490b3cd78 <col:18> 'const unsigned char *' lvalue Var 0x26490b3c2e8 'p' 'const unsigned char *'
|   |   |     | `-IntegerLiteral 0x26490b3cdc8 <col:23> 'int' 0
|   |   |     |-CompoundStmt 0x26490b3ce80 <col:26, line:86:13>
|   |   |     | |-UnaryOperator 0x26490b3ce60 <line:84:17, col:18> 'const unsigned char *' postfix '++'
|   |   |     | | `-DeclRefExpr 0x26490b3ce40 <col:17> 'const unsigned char *' lvalue Var 0x26490b3c2e8 'p' 'const unsigned char *'
|   |   |     | `-BreakStmt 0x26490b3ce78 <line:85:17>
|   |   |     `-CompoundStmt 0x26490b3cf30 <line:86:20, line:90:13>
|   |   |       `-ReturnStmt 0x26490b3cf20 <line:89:17, col:27>
|   |   |         `-ParenExpr 0x26490b3cf00 <col:24, col:27> 'int'
|   |   |           `-UnaryOperator 0x26490b3cee8 <col:25, col:26> 'int' prefix '-'
|   |   |             `-IntegerLiteral 0x26490b3cec0 <col:26> 'int' 1
|   |   `-UnaryOperator 0x26490b3cfc0 <line:92:9, col:10> 'const unsigned char *' postfix '++'
|   |     `-DeclRefExpr 0x26490b3cfa0 <col:9> 'const unsigned char *' lvalue Var 0x26490b3c2e8 'p' 'const unsigned char *'
|   |-IfStmt 0x26490b3b168 <line:95:5, line:99:5>
|   | |-BinaryOperator 0x26490b3d0a0 <line:95:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x26490b3d070 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x26490b3d030 <col:9> 'int' lvalue Var 0x26490b3c1b8 'i' 'int'
|   | | `-ImplicitCastExpr 0x26490b3d088 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b3d050 <col:14> 'int' lvalue Var 0x26490b3c238 'j' 'int'
|   | `-CompoundStmt 0x26490b3b150 <col:17, line:99:5>
|   |   `-ReturnStmt 0x26490b3d140 <line:98:9, col:19>
|   |     `-ParenExpr 0x26490b3d120 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x26490b3d108 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x26490b3d0e0 <col:18> 'int' 1
|   |-IfStmt 0x26490b3b2a8 <line:101:5, line:105:5>
|   | |-BinaryOperator 0x26490b3b1e0 <line:101:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x26490b3b1c8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x26490b3b180 <col:9> 'int' lvalue Var 0x26490b3c1b8 'i' 'int'
|   | | `-IntegerLiteral 0x26490b3b1a0 <col:13> 'int' 8
|   | `-CompoundStmt 0x26490b3b290 <col:16, line:105:5>
|   |   `-ReturnStmt 0x26490b3b280 <line:104:9, col:19>
|   |     `-ParenExpr 0x26490b3b260 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x26490b3b248 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x26490b3b220 <col:18> 'int' 1
|   |-UnaryOperator 0x26490b3b2e0 <line:106:5, col:6> 'int' postfix '++'
|   | `-DeclRefExpr 0x26490b3b2c0 <col:5> 'int' lvalue Var 0x26490b3c1b8 'i' 'int'
|   |-CompoundAssignOperator 0x26490b3b350 <line:107:5, col:10> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x26490b3b2f8 <col:5> 'int' lvalue Var 0x26490b3c238 'j' 'int'
|   | `-ImplicitCastExpr 0x26490b3b338 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x26490b3b318 <col:10> 'int' lvalue Var 0x26490b3c1b8 'i' 'int'
|   |-IfStmt 0x26490b3b4b8 <line:108:5, line:111:5>
|   | |-BinaryOperator 0x26490b3b3f0 <line:108:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x26490b3b3c0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x26490b3b380 <col:9> 'int' lvalue Var 0x26490b3c238 'j' 'int'
|   | | `-ImplicitCastExpr 0x26490b3b3d8 <col:13> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b3b3a0 <col:13> 'int' lvalue ParmVar 0x26490b3fde0 'tlen' 'int'
|   | `-CompoundStmt 0x26490b3b4a0 <col:19, line:111:5>
|   |   `-ReturnStmt 0x26490b3b490 <line:110:9, col:19>
|   |     `-ParenExpr 0x26490b3b470 <col:16, col:19> 'int'
|   |       `-UnaryOperator 0x26490b3b458 <col:17, col:18> 'int' prefix '-'
|   |         `-IntegerLiteral 0x26490b3b430 <col:18> 'int' 1
|   |-CallExpr 0x26490b3b5f0 <line:112:5, col:34> 'void *'
|   | |-ImplicitCastExpr 0x26490b3b5d8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x26490b3b4d0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x26490b3f880 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x26490b3b640 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x26490b3b628 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b3b4f0 <col:12> 'unsigned char *' lvalue ParmVar 0x26490b3fd60 'to' 'unsigned char *'
|   | |-ImplicitCastExpr 0x26490b3b670 <col:16> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x26490b3b658 <col:16> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b3b510 <col:16> 'const unsigned char *' lvalue Var 0x26490b3c2e8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x26490b3b688 <col:19, col:33> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x26490b3b580 <col:19, col:33> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x26490b3b568 <col:33> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x26490b3b530 <col:33> 'int' lvalue Var 0x26490b3c238 'j' 'int'
|   `-ReturnStmt 0x26490b3b6f8 <line:114:5, col:14>
|     `-ImplicitCastExpr 0x26490b3b6e0 <col:12, col:14> 'int' <LValueToRValue>
|       `-ParenExpr 0x26490b3b6c0 <col:12, col:14> 'int' lvalue
|         `-DeclRefExpr 0x26490b3b6a0 <col:13> 'int' lvalue Var 0x26490b3c238 'j' 'int'
|-FunctionDecl 0x26490b3ba38 <line:117:1, line:152:1> line:117:5 RSA_padding_add_PKCS1_type_2 'int (unsigned char *, int, const unsigned char *, int)'
| |-ParmVarDecl 0x26490b3b7a8 <col:34, col:49> col:49 used to 'unsigned char *'
| |-ParmVarDecl 0x26490b3b828 <col:53, col:57> col:57 used tlen 'int'
| |-ParmVarDecl 0x26490b3b8a8 <line:118:34, col:55> col:55 used from 'const unsigned char *'
| |-ParmVarDecl 0x26490b3b928 <col:61, col:65> col:65 used flen 'int'
| `-CompoundStmt 0x26490b4a1f8 <line:119:1, line:152:1>
|   |-DeclStmt 0x26490b3bc28 <line:120:5, col:13>
|   | |-VarDecl 0x26490b3bb28 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x26490b3bba8 <col:5, col:12> col:12 used j 'int'
|   |-DeclStmt 0x26490b3bcc0 <line:121:5, col:21>
|   | `-VarDecl 0x26490b3bc58 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-IfStmt 0x26490b3be60 <line:123:5, line:127:5>
|   | |-BinaryOperator 0x26490b3bdb0 <line:123:9, col:26> 'int' '>'
|   | | |-ImplicitCastExpr 0x26490b3bd98 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x26490b3bcd8 <col:9> 'int' lvalue ParmVar 0x26490b3b928 'flen' 'int'
|   | | `-ParenExpr 0x26490b3bd78 <col:16, col:26> 'int'
|   | |   `-BinaryOperator 0x26490b3bd58 <col:17, col:24> 'int' '-'
|   | |     |-ImplicitCastExpr 0x26490b3bd40 <col:17> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x26490b3bcf8 <col:17> 'int' lvalue ParmVar 0x26490b3b828 'tlen' 'int'
|   | |     `-IntegerLiteral 0x26490b3bd18 <col:24> 'int' 11
|   | `-CompoundStmt 0x26490b3be48 <col:29, line:127:5>
|   |   `-ReturnStmt 0x26490b3be38 <line:126:9, col:18>
|   |     `-ParenExpr 0x26490b3be18 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x26490b3bdf0 <col:17> 'int' 0
|   |-BinaryOperator 0x26490b3bf28 <line:129:5, col:26> 'unsigned char *' '='
|   | |-DeclRefExpr 0x26490b3be78 <col:5> 'unsigned char *' lvalue Var 0x26490b3bc58 'p' 'unsigned char *'
|   | `-CStyleCastExpr 0x26490b3bf00 <col:9, col:26> 'unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x26490b3bee8 <col:26> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x26490b3beb0 <col:26> 'unsigned char *' lvalue ParmVar 0x26490b3b7a8 'to' 'unsigned char *'
|   |-BinaryOperator 0x26490b3bff8 <line:131:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x26490b3bfa0 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x26490b3bf80 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x26490b3bf68 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x26490b3bf48 <col:7> 'unsigned char *' lvalue Var 0x26490b3bc58 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x26490b3bfe0 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x26490b3bfb8 <col:14> 'int' 0
|   |-BinaryOperator 0x26490b3c0c8 <line:132:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x26490b3c070 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x26490b3c050 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x26490b3c038 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x26490b3c018 <col:7> 'unsigned char *' lvalue Var 0x26490b3bc58 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x26490b3c0b0 <col:14> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x26490b3c088 <col:14> 'int' 2
|   |-BinaryOperator 0x26490b49728 <line:135:5, col:20> 'int' '='
|   | |-DeclRefExpr 0x26490b3c0e8 <col:5> 'int' lvalue Var 0x26490b3bba8 'j' 'int'
|   | `-BinaryOperator 0x26490b49708 <col:9, col:20> 'int' '-'
|   |   |-BinaryOperator 0x26490b496b0 <col:9, col:16> 'int' '-'
|   |   | |-ImplicitCastExpr 0x26490b49698 <col:9> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x26490b3c120 <col:9> 'int' lvalue ParmVar 0x26490b3b828 'tlen' 'int'
|   |   | `-IntegerLiteral 0x26490b49670 <col:16> 'int' 3
|   |   `-ImplicitCastExpr 0x26490b496f0 <col:20> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x26490b496d0 <col:20> 'int' lvalue ParmVar 0x26490b3b928 'flen' 'int'
|   |-IfStmt 0x26490b499e0 <line:137:5, line:138:18>
|   | |-BinaryOperator 0x26490b49968 <line:137:9, col:29> 'int' '<='
|   | | |-CallExpr 0x26490b498e0 <col:9, col:24> 'int'
|   | | | |-ImplicitCastExpr 0x26490b498c8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x26490b49838 <col:9> 'int ()' Function 0x26490b49770 'RAND_bytes' 'int ()'
|   | | | |-ImplicitCastExpr 0x26490b49910 <col:20> 'unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x26490b49858 <col:20> 'unsigned char *' lvalue Var 0x26490b3bc58 'p' 'unsigned char *'
|   | | | `-ImplicitCastExpr 0x26490b49928 <col:23> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x26490b49878 <col:23> 'int' lvalue Var 0x26490b3bba8 'j' 'int'
|   | | `-IntegerLiteral 0x26490b49940 <col:29> 'int' 0
|   | `-ReturnStmt 0x26490b499d0 <line:138:9, col:18>
|   |   `-ParenExpr 0x26490b499b0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x26490b49988 <col:17> 'int' 0
|   |-ForStmt 0x26490b49ed8 <line:139:5, line:146:5>
|   | |-BinaryOperator 0x26490b49a58 <line:139:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x26490b499f8 <col:10> 'int' lvalue Var 0x26490b3bb28 'i' 'int'
|   | | `-IntegerLiteral 0x26490b49a30 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x26490b49ae8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x26490b49ab8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x26490b49a78 <col:17> 'int' lvalue Var 0x26490b3bb28 'i' 'int'
|   | | `-ImplicitCastExpr 0x26490b49ad0 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b49a98 <col:21> 'int' lvalue Var 0x26490b3bba8 'j' 'int'
|   | |-UnaryOperator 0x26490b49b28 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x26490b49b08 <col:24> 'int' lvalue Var 0x26490b3bb28 'i' 'int'
|   | `-CompoundStmt 0x26490b49eb8 <col:29, line:146:5>
|   |   |-IfStmt 0x26490b49e68 <line:140:9, line:144:32>
|   |   | |-BinaryOperator 0x26490b49bd8 <line:140:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x26490b49bc0 <col:13, col:14> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x26490b49ba8 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x26490b49b78 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x26490b49b60 <col:14> 'unsigned char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x26490b49b40 <col:14> 'unsigned char *' lvalue Var 0x26490b3bc58 'p' 'unsigned char *'
|   |   | | `-CharacterLiteral 0x26490b49b90 <col:19> 'int' 0
|   |   | `-DoStmt 0x26490b49e48 <line:141:13, line:144:32>
|   |   |   |-CompoundStmt 0x26490b49d78 <line:141:16, line:144:13>
|   |   |   | `-IfStmt 0x26490b49d60 <line:142:17, line:143:30>
|   |   |   |   |-BinaryOperator 0x26490b49ce8 <line:142:21, col:41> 'int' '<='
|   |   |   |   | |-CallExpr 0x26490b49c78 <col:21, col:36> 'int'
|   |   |   |   | | |-ImplicitCastExpr 0x26490b49c60 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | | | `-DeclRefExpr 0x26490b49bf8 <col:21> 'int ()' Function 0x26490b49770 'RAND_bytes' 'int ()'
|   |   |   |   | | |-ImplicitCastExpr 0x26490b49ca8 <col:32> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | | `-DeclRefExpr 0x26490b49c18 <col:32> 'unsigned char *' lvalue Var 0x26490b3bc58 'p' 'unsigned char *'
|   |   |   |   | | `-IntegerLiteral 0x26490b49c38 <col:35> 'int' 1
|   |   |   |   | `-IntegerLiteral 0x26490b49cc0 <col:41> 'int' 0
|   |   |   |   `-ReturnStmt 0x26490b49d50 <line:143:21, col:30>
|   |   |   |     `-ParenExpr 0x26490b49d30 <col:28, col:30> 'int'
|   |   |   |       `-IntegerLiteral 0x26490b49d08 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x26490b49e28 <line:144:22, col:28> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x26490b49e10 <col:22, col:23> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x26490b49df8 <col:22, col:23> 'unsigned char' <LValueToRValue>
|   |   |     |   `-UnaryOperator 0x26490b49dc8 <col:22, col:23> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |     `-ImplicitCastExpr 0x26490b49db0 <col:23> 'unsigned char *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x26490b49d90 <col:23> 'unsigned char *' lvalue Var 0x26490b3bc58 'p' 'unsigned char *'
|   |   |     `-CharacterLiteral 0x26490b49de0 <col:28> 'int' 0
|   |   `-UnaryOperator 0x26490b49ea0 <line:145:9, col:10> 'unsigned char *' postfix '++'
|   |     `-DeclRefExpr 0x26490b49e80 <col:9> 'unsigned char *' lvalue Var 0x26490b3bc58 'p' 'unsigned char *'
|   |-BinaryOperator 0x26490b49fb0 <line:148:5, col:14> 'unsigned char' '='
|   | |-UnaryOperator 0x26490b49f68 <col:5, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x26490b49f48 <col:6, col:10> 'unsigned char *'
|   | |   `-UnaryOperator 0x26490b49f30 <col:7, col:8> 'unsigned char *' postfix '++'
|   | |     `-DeclRefExpr 0x26490b49f10 <col:7> 'unsigned char *' lvalue Var 0x26490b3bc58 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x26490b49f98 <col:14> 'unsigned char' <IntegralCast>
|   |   `-CharacterLiteral 0x26490b49f80 <col:14> 'int' 0
|   |-CallExpr 0x26490b4a0f0 <line:150:5, col:39> 'void *'
|   | |-ImplicitCastExpr 0x26490b4a0d8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x26490b49fd0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x26490b3f880 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x26490b4a140 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x26490b4a128 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b49ff0 <col:12> 'unsigned char *' lvalue Var 0x26490b3bc58 'p' 'unsigned char *'
|   | |-ImplicitCastExpr 0x26490b4a170 <col:15> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x26490b4a158 <col:15> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x26490b4a010 <col:15> 'const unsigned char *' lvalue ParmVar 0x26490b3b8a8 'from' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x26490b4a188 <col:21, col:35> 'unsigned long long' <IntegralCast>
|   |   `-CStyleCastExpr 0x26490b4a080 <col:21, col:35> 'unsigned int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x26490b4a068 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x26490b4a030 <col:35> 'int' lvalue ParmVar 0x26490b3b928 'flen' 'int'
|   `-ReturnStmt 0x26490b4a1e8 <line:151:5, col:14>
|     `-ParenExpr 0x26490b4a1c8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x26490b4a1a0 <col:13> 'int' 1
`-FunctionDecl 0x26490b4a5b0 <line:154:1, line:255:1> line:154:5 RSA_padding_check_PKCS1_type_2 'int (unsigned char *, int, const unsigned char *, int, int)'
  |-ParmVarDecl 0x26490b4a280 <col:36, col:51> col:51 used to 'unsigned char *'
  |-ParmVarDecl 0x26490b4a300 <col:55, col:59> col:59 used tlen 'int'
  |-ParmVarDecl 0x26490b4a380 <line:155:36, col:57> col:57 used from 'const unsigned char *'
  |-ParmVarDecl 0x26490b4a400 <col:63, col:67> col:67 used flen 'int'
  |-ParmVarDecl 0x26490b4a480 <line:156:36, col:40> col:40 used num 'int'
  `-CompoundStmt 0x26490b48660 <line:157:1, line:255:1>
    |-DeclStmt 0x26490b436d0 <line:158:5, col:10>
    | `-VarDecl 0x26490b43668 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x26490b43808 <line:160:5, col:29>
    | `-VarDecl 0x26490b43700 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\rsa\rsa_pk1.c:160:20 used em 'unsigned char *' cinit
    |   `-ImplicitCastExpr 0x26490b437f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
    |     `-ParenExpr 0x26490b437d0 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x26490b437a8 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x26490b43768 <col:26> 'int' 0
    |-DeclStmt 0x26490b439c0 <.//openssl//file_jk/after\crypto\rsa\rsa_pk1.c:161:5, col:45>
    | |-VarDecl 0x26490b43838 <col:5, col:18> col:18 used good 'unsigned int'
    | |-VarDecl 0x26490b438b8 <col:5, col:24> col:24 used found_zero_byte 'unsigned int'
    | `-VarDecl 0x26490b43938 <col:5, col:41> col:41 used mask 'unsigned int'
    |-DeclStmt 0x26490b43be0 <line:162:5, col:45>
    | |-VarDecl 0x26490b439f0 <col:5, col:22> col:9 used zero_index 'int' cinit
    | | `-IntegerLiteral 0x26490b43a58 <col:22> 'int' 0
    | |-VarDecl 0x26490b43a98 <col:5, col:25> col:25 used msg_index 'int'
    | `-VarDecl 0x26490b43b18 <col:5, col:44> col:36 used mlen 'int' cinit
    |   `-UnaryOperator 0x26490b43ba8 <col:43, col:44> 'int' prefix '-'
    |     `-IntegerLiteral 0x26490b43b80 <col:44> 'int' 1
    |-IfStmt 0x26490b43d68 <line:164:5, line:165:17>
    | |-BinaryOperator 0x26490b43cf8 <line:164:9, col:28> 'int' '||'
    | | |-BinaryOperator 0x26490b43c58 <col:9, col:16> 'int' '<'
    | | | |-ImplicitCastExpr 0x26490b43c40 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x26490b43bf8 <col:9> 'int' lvalue ParmVar 0x26490b4a300 'tlen' 'int'
    | | | `-IntegerLiteral 0x26490b43c18 <col:16> 'int' 0
    | | `-BinaryOperator 0x26490b43cd8 <col:21, col:28> 'int' '<'
    | |   |-ImplicitCastExpr 0x26490b43cc0 <col:21> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x26490b43c78 <col:21> 'int' lvalue ParmVar 0x26490b4a400 'flen' 'int'
    | |   `-IntegerLiteral 0x26490b43c98 <col:28> 'int' 0
    | `-ReturnStmt 0x26490b43d58 <line:165:9, col:17>
    |   `-UnaryOperator 0x26490b43d40 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x26490b43d18 <col:17> 'int' 1
    |-IfStmt 0x26490b43f38 <line:172:5, line:176:5>
    | |-BinaryOperator 0x26490b43e90 <line:172:9, col:29> 'int' '||'
    | | |-BinaryOperator 0x26490b43df0 <col:9, col:16> 'int' '>'
    | | | |-ImplicitCastExpr 0x26490b43dc0 <col:9> 'int' <LValueToRValue>
    | | | | `-DeclRefExpr 0x26490b43d80 <col:9> 'int' lvalue ParmVar 0x26490b4a400 'flen' 'int'
    | | | `-ImplicitCastExpr 0x26490b43dd8 <col:16> 'int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x26490b43da0 <col:16> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    | | `-BinaryOperator 0x26490b43e70 <col:23, col:29> 'int' '<'
    | |   |-ImplicitCastExpr 0x26490b43e58 <col:23> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x26490b43e10 <col:23> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    | |   `-IntegerLiteral 0x26490b43e30 <col:29> 'int' 11
    | `-CompoundStmt 0x26490b43f20 <col:33, line:176:5>
    |   `-ReturnStmt 0x26490b43f10 <line:175:9, col:17>
    |     `-UnaryOperator 0x26490b43ef8 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x26490b43ed0 <col:17> 'int' 1
    |-BinaryOperator 0x26490b44128 <line:178:5, col:28> 'unsigned char *' '='
    | |-DeclRefExpr 0x26490b43f50 <col:5> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    | `-ImplicitCastExpr 0x26490b44110 <col:10, col:28> 'unsigned char *' <IntegralToPointer>
    |   `-CallExpr 0x26490b440d0 <col:10, col:28> 'int'
    |     |-ImplicitCastExpr 0x26490b440b8 <col:10> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x26490b44078 <col:10> 'int ()' Function 0x26490b43fb0 'OPENSSL_malloc' 'int ()'
    |     `-ImplicitCastExpr 0x26490b440f8 <col:25> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x26490b44098 <col:25> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    |-IfStmt 0x26490b442c8 <line:179:5, line:182:5>
    | |-BinaryOperator 0x26490b44220 <line:179:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
    | | |-ImplicitCastExpr 0x26490b441f0 <.//openssl//file_jk/after\crypto\rsa\rsa_pk1.c:179:9> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x26490b44148 <col:9> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    | | `-ImplicitCastExpr 0x26490b44208 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
    | |   `-ParenExpr 0x26490b441d0 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x26490b441a8 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x26490b44168 <col:26> 'int' 0
    | `-CompoundStmt 0x26490b442b0 <.//openssl//file_jk/after\crypto\rsa\rsa_pk1.c:179:21, line:182:5>
    |   `-ReturnStmt 0x26490b442a0 <line:181:9, col:17>
    |     `-UnaryOperator 0x26490b44288 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x26490b44260 <col:17> 'int' 1
    |-ForStmt 0x26490b45b40 <line:189:5, line:194:5>
    | |-BinaryOperator 0x26490b44490 <line:189:10, col:39> 'int' ','
    | | |-BinaryOperator 0x26490b443f0 <col:10, col:30> 'unsigned char *' ','
    | | | |-CompoundAssignOperator 0x26490b44338 <col:10, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    | | | | |-DeclRefExpr 0x26490b442e0 <col:10> 'const unsigned char *' lvalue ParmVar 0x26490b4a380 'from' 'const unsigned char *'
    | | | | `-ImplicitCastExpr 0x26490b44320 <col:18> 'int' <LValueToRValue>
    | | | |   `-DeclRefExpr 0x26490b44300 <col:18> 'int' lvalue ParmVar 0x26490b4a400 'flen' 'int'
    | | | `-CompoundAssignOperator 0x26490b443c0 <col:24, col:30> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    | | |   |-DeclRefExpr 0x26490b44368 <col:24> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    | | |   `-ImplicitCastExpr 0x26490b443a8 <col:30> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x26490b44388 <col:30> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    | | `-BinaryOperator 0x26490b44470 <col:35, col:39> 'int' '='
    | |   |-DeclRefExpr 0x26490b44410 <col:35> 'int' lvalue Var 0x26490b43668 'i' 'int'
    | |   `-IntegerLiteral 0x26490b44448 <col:39> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x26490b44520 <col:42, col:46> 'int' '<'
    | | |-ImplicitCastExpr 0x26490b444f0 <col:42> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x26490b444b0 <col:42> 'int' lvalue Var 0x26490b43668 'i' 'int'
    | | `-ImplicitCastExpr 0x26490b44508 <col:46> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x26490b444d0 <col:46> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    | |-UnaryOperator 0x26490b44560 <col:51, col:52> 'int' postfix '++'
    | | `-DeclRefExpr 0x26490b44540 <col:51> 'int' lvalue Var 0x26490b43668 'i' 'int'
    | `-CompoundStmt 0x26490b45b10 <col:56, line:194:5>
    |   |-BinaryOperator 0x26490b457c0 <line:190:9, col:43> 'unsigned int' '='
    |   | |-DeclRefExpr 0x26490b44578 <col:9> 'unsigned int' lvalue Var 0x26490b43938 'mask' 'unsigned int'
    |   | `-ImplicitCastExpr 0x26490b457a8 <col:16, col:43> 'unsigned int' <IntegralCast>
    |   |   `-UnaryOperator 0x26490b45790 <col:16, col:43> 'int' prefix '~' cannot overflow
    |   |     `-CallExpr 0x26490b45750 <col:17, col:43> 'int'
    |   |       |-ImplicitCastExpr 0x26490b45738 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x26490b456f8 <col:17> 'int ()' Function 0x26490b45630 'constant_time_is_zero' 'int ()'
    |   |       `-ImplicitCastExpr 0x26490b45778 <col:39> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x26490b45718 <col:39> 'int' lvalue ParmVar 0x26490b4a400 'flen' 'int'
    |   |-CompoundAssignOperator 0x26490b45898 <line:191:9, col:21> 'int' '-=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |   | |-DeclRefExpr 0x26490b457e0 <col:9> 'int' lvalue ParmVar 0x26490b4a400 'flen' 'int'
    |   | `-BinaryOperator 0x26490b45878 <col:17, col:21> 'unsigned int' '&'
    |   |   |-ImplicitCastExpr 0x26490b45860 <col:17> 'unsigned int' <IntegralCast>
    |   |   | `-IntegerLiteral 0x26490b45800 <col:17> 'int' 1
    |   |   `-ImplicitCastExpr 0x26490b45848 <col:21> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x26490b45828 <col:21> 'unsigned int' lvalue Var 0x26490b43938 'mask' 'unsigned int'
    |   |-CompoundAssignOperator 0x26490b45980 <line:192:9, col:21> 'const unsigned char *' '-=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
    |   | |-DeclRefExpr 0x26490b458c8 <col:9> 'const unsigned char *' lvalue ParmVar 0x26490b4a380 'from' 'const unsigned char *'
    |   | `-BinaryOperator 0x26490b45960 <col:17, col:21> 'unsigned int' '&'
    |   |   |-ImplicitCastExpr 0x26490b45948 <col:17> 'unsigned int' <IntegralCast>
    |   |   | `-IntegerLiteral 0x26490b458e8 <col:17> 'int' 1
    |   |   `-ImplicitCastExpr 0x26490b45930 <col:21> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x26490b45910 <col:21> 'unsigned int' lvalue Var 0x26490b43938 'mask' 'unsigned int'
    |   `-BinaryOperator 0x26490b45af0 <line:193:9, col:25> 'unsigned char' '='
    |     |-UnaryOperator 0x26490b459e8 <col:9, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
    |     | `-UnaryOperator 0x26490b459d0 <col:10, col:12> 'unsigned char *' prefix '--'
    |     |   `-DeclRefExpr 0x26490b459b0 <col:12> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    |     `-ImplicitCastExpr 0x26490b45ad8 <col:17, col:25> 'unsigned char' <IntegralCast>
    |       `-BinaryOperator 0x26490b45ab8 <col:17, col:25> 'unsigned int' '&'
    |         |-ImplicitCastExpr 0x26490b45a88 <col:17, col:18> 'unsigned int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x26490b45a70 <col:17, col:18> 'unsigned char' <LValueToRValue>
    |         |   `-UnaryOperator 0x26490b45a38 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
    |         |     `-ImplicitCastExpr 0x26490b45a20 <col:18> 'const unsigned char *' <LValueToRValue>
    |         |       `-DeclRefExpr 0x26490b45a00 <col:18> 'const unsigned char *' lvalue ParmVar 0x26490b4a380 'from' 'const unsigned char *'
    |         `-ImplicitCastExpr 0x26490b45aa0 <col:25> 'unsigned int' <LValueToRValue>
    |           `-DeclRefExpr 0x26490b45a50 <col:25> 'unsigned int' lvalue Var 0x26490b43938 'mask' 'unsigned int'
    |-BinaryOperator 0x26490b45cd8 <line:196:5, col:39> 'unsigned int' '='
    | |-DeclRefExpr 0x26490b45b78 <col:5> 'unsigned int' lvalue Var 0x26490b43838 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x26490b45cc0 <col:12, col:39> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x26490b45c68 <col:12, col:39> 'int'
    |     |-ImplicitCastExpr 0x26490b45c50 <col:12> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x26490b45bb0 <col:12> 'int ()' Function 0x26490b45630 'constant_time_is_zero' 'int ()'
    |     `-ImplicitCastExpr 0x26490b45ca8 <col:34, col:38> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x26490b45c90 <col:34, col:38> 'unsigned char' <LValueToRValue>
    |         `-ArraySubscriptExpr 0x26490b45c30 <col:34, col:38> 'unsigned char' lvalue
    |           |-ImplicitCastExpr 0x26490b45c18 <col:34> 'unsigned char *' <LValueToRValue>
    |           | `-DeclRefExpr 0x26490b45bd0 <col:34> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    |           `-IntegerLiteral 0x26490b45bf0 <col:37> 'int' 0
    |-CompoundAssignOperator 0x26490b45f60 <line:197:5, col:38> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x26490b45cf8 <col:5> 'unsigned int' lvalue Var 0x26490b43838 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x26490b45f48 <col:13, col:38> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x26490b45ee8 <col:13, col:38> 'int'
    |     |-ImplicitCastExpr 0x26490b45ed0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x26490b45e08 <col:13> 'int ()' Function 0x26490b45d40 'constant_time_eq' 'int ()'
    |     |-ImplicitCastExpr 0x26490b45f30 <col:30, col:34> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x26490b45f18 <col:30, col:34> 'unsigned char' <LValueToRValue>
    |     |   `-ArraySubscriptExpr 0x26490b45e88 <col:30, col:34> 'unsigned char' lvalue
    |     |     |-ImplicitCastExpr 0x26490b45e70 <col:30> 'unsigned char *' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x26490b45e28 <col:30> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    |     |     `-IntegerLiteral 0x26490b45e48 <col:33> 'int' 1
    |     `-IntegerLiteral 0x26490b45ea8 <col:37> 'int' 2
    |-BinaryOperator 0x26490b46008 <line:200:5, col:23> 'unsigned int' '='
    | |-DeclRefExpr 0x26490b45f90 <col:5> 'unsigned int' lvalue Var 0x26490b438b8 'found_zero_byte' 'unsigned int'
    | `-ImplicitCastExpr 0x26490b45ff0 <col:23> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x26490b45fc8 <col:23> 'int' 0
    |-ForStmt 0x26490b466d0 <line:201:5, line:207:5>
    | |-BinaryOperator 0x26490b46070 <line:201:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x26490b46028 <col:10> 'int' lvalue Var 0x26490b43668 'i' 'int'
    | | `-IntegerLiteral 0x26490b46048 <col:14> 'int' 2
    | |-<<<NULL>>>
    | |-BinaryOperator 0x26490b46100 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x26490b460d0 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x26490b46090 <col:17> 'int' lvalue Var 0x26490b43668 'i' 'int'
    | | `-ImplicitCastExpr 0x26490b460e8 <col:21> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x26490b460b0 <col:21> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    | |-UnaryOperator 0x26490b46140 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x26490b46120 <col:26> 'int' lvalue Var 0x26490b43668 'i' 'int'
    | `-CompoundStmt 0x26490b466a8 <col:31, line:207:5>
    |   |-DeclStmt 0x26490b46310 <line:202:9, col:60>
    |   | `-VarDecl 0x26490b46170 <col:9, col:59> col:22 used equals0 'unsigned int' cinit
    |   |   `-ImplicitCastExpr 0x26490b462f8 <col:32, col:59> 'unsigned int' <IntegralCast>
    |   |     `-CallExpr 0x26490b462a0 <col:32, col:59> 'int'
    |   |       |-ImplicitCastExpr 0x26490b46288 <col:32> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x26490b461d8 <col:32> 'int ()' Function 0x26490b45630 'constant_time_is_zero' 'int ()'
    |   |       `-ImplicitCastExpr 0x26490b462e0 <col:54, col:58> 'int' <IntegralCast>
    |   |         `-ImplicitCastExpr 0x26490b462c8 <col:54, col:58> 'unsigned char' <LValueToRValue>
    |   |           `-ArraySubscriptExpr 0x26490b46268 <col:54, col:58> 'unsigned char' lvalue
    |   |             |-ImplicitCastExpr 0x26490b46238 <col:54> 'unsigned char *' <LValueToRValue>
    |   |             | `-DeclRefExpr 0x26490b461f8 <col:54> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    |   |             `-ImplicitCastExpr 0x26490b46250 <col:57> 'int' <LValueToRValue>
    |   |               `-DeclRefExpr 0x26490b46218 <col:57> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |   |-BinaryOperator 0x26490b465f0 <line:204:9, line:205:60> 'int' '='
    |   | |-DeclRefExpr 0x26490b46328 <line:204:9> 'int' lvalue Var 0x26490b439f0 'zero_index' 'int'
    |   | `-CallExpr 0x26490b46588 <col:22, line:205:60> 'int'
    |   |   |-ImplicitCastExpr 0x26490b46570 <line:204:22> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x26490b46450 <col:22> 'int ()' Function 0x26490b46388 'constant_time_select_int' 'int ()'
    |   |   |-BinaryOperator 0x26490b46510 <col:47, col:66> 'unsigned int' '&'
    |   |   | |-UnaryOperator 0x26490b464a8 <col:47, col:48> 'unsigned int' prefix '~' cannot overflow
    |   |   | | `-ImplicitCastExpr 0x26490b46490 <col:48> 'unsigned int' <LValueToRValue>
    |   |   | |   `-DeclRefExpr 0x26490b46470 <col:48> 'unsigned int' lvalue Var 0x26490b438b8 'found_zero_byte' 'unsigned int'
    |   |   | `-ImplicitCastExpr 0x26490b464f8 <col:66> 'unsigned int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x26490b464c0 <col:66> 'unsigned int' lvalue Var 0x26490b46170 'equals0' 'unsigned int'
    |   |   |-ImplicitCastExpr 0x26490b465c0 <line:205:47> 'int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x26490b46530 <col:47> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |   |   `-ImplicitCastExpr 0x26490b465d8 <col:50> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x26490b46550 <col:50> 'int' lvalue Var 0x26490b439f0 'zero_index' 'int'
    |   `-CompoundAssignOperator 0x26490b46678 <line:206:9, col:28> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    |     |-DeclRefExpr 0x26490b46610 <col:9> 'unsigned int' lvalue Var 0x26490b438b8 'found_zero_byte' 'unsigned int'
    |     `-ImplicitCastExpr 0x26490b46660 <col:28> 'unsigned int' <LValueToRValue>
    |       `-DeclRefExpr 0x26490b46640 <col:28> 'unsigned int' lvalue Var 0x26490b46170 'equals0' 'unsigned int'
    |-CompoundAssignOperator 0x26490b46940 <line:214:5, col:47> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x26490b46708 <col:5> 'unsigned int' lvalue Var 0x26490b43838 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x26490b46928 <col:13, col:47> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x26490b468e0 <col:13, col:47> 'int'
    |     |-ImplicitCastExpr 0x26490b468c8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x26490b46818 <col:13> 'int ()' Function 0x26490b46750 'constant_time_ge' 'int ()'
    |     |-ImplicitCastExpr 0x26490b46910 <col:30> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x26490b46838 <col:30> 'int' lvalue Var 0x26490b439f0 'zero_index' 'int'
    |     `-BinaryOperator 0x26490b468a8 <col:42, col:46> 'int' '+'
    |       |-IntegerLiteral 0x26490b46858 <col:42> 'int' 2
    |       `-IntegerLiteral 0x26490b46880 <col:46> 'int' 8
    |-BinaryOperator 0x26490b46a28 <line:220:5, col:30> 'int' '='
    | |-DeclRefExpr 0x26490b46970 <col:5> 'int' lvalue Var 0x26490b43a98 'msg_index' 'int'
    | `-BinaryOperator 0x26490b46a08 <col:17, col:30> 'int' '+'
    |   |-ImplicitCastExpr 0x26490b469f0 <col:17> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x26490b469a8 <col:17> 'int' lvalue Var 0x26490b439f0 'zero_index' 'int'
    |   `-IntegerLiteral 0x26490b469c8 <col:30> 'int' 1
    |-BinaryOperator 0x26490b46b10 <line:221:5, col:18> 'int' '='
    | |-DeclRefExpr 0x26490b46a48 <col:5> 'int' lvalue Var 0x26490b43b18 'mlen' 'int'
    | `-BinaryOperator 0x26490b46af0 <col:12, col:18> 'int' '-'
    |   |-ImplicitCastExpr 0x26490b46ac0 <col:12> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x26490b46a80 <col:12> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    |   `-ImplicitCastExpr 0x26490b46ad8 <col:18> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x26490b46aa0 <col:18> 'int' lvalue Var 0x26490b43a98 'msg_index' 'int'
    |-CompoundAssignOperator 0x26490b46c40 <line:226:5, col:40> 'unsigned int' '&=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
    | |-DeclRefExpr 0x26490b46b30 <col:5> 'unsigned int' lvalue Var 0x26490b43838 'good' 'unsigned int'
    | `-ImplicitCastExpr 0x26490b46c28 <col:13, col:40> 'unsigned int' <IntegralCast>
    |   `-CallExpr 0x26490b46bc8 <col:13, col:40> 'int'
    |     |-ImplicitCastExpr 0x26490b46bb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x26490b46b50 <col:13> 'int ()' Function 0x26490b46750 'constant_time_ge' 'int ()'
    |     |-ImplicitCastExpr 0x26490b46bf8 <col:30> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x26490b46b70 <col:30> 'int' lvalue ParmVar 0x26490b4a300 'tlen' 'int'
    |     `-ImplicitCastExpr 0x26490b46c10 <col:36> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x26490b46b90 <col:36> 'int' lvalue Var 0x26490b43b18 'mlen' 'int'
    |-BinaryOperator 0x26490b46fc8 <line:238:5, line:239:51> 'int' '='
    | |-DeclRefExpr 0x26490b46c70 <line:238:5> 'int' lvalue ParmVar 0x26490b4a300 'tlen' 'int'
    | `-CallExpr 0x26490b46f78 <col:12, line:239:51> 'int'
    |   |-ImplicitCastExpr 0x26490b46f60 <line:238:12> 'int (*)()' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x26490b46c90 <col:12> 'int ()' Function 0x26490b46388 'constant_time_select_int' 'int ()'
    |   |-CallExpr 0x26490b46e78 <col:37, col:68> 'int'
    |   | |-ImplicitCastExpr 0x26490b46e60 <col:37> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x26490b46da0 <col:37> 'int ()' Function 0x26490b46cd8 'constant_time_lt' 'int ()'
    |   | |-BinaryOperator 0x26490b46e20 <col:54, col:60> 'int' '-'
    |   | | |-ImplicitCastExpr 0x26490b46e08 <col:54> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x26490b46dc0 <col:54> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    |   | | `-IntegerLiteral 0x26490b46de0 <col:60> 'int' 11
    |   | `-ImplicitCastExpr 0x26490b46ea8 <col:64> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x26490b46e40 <col:64> 'int' lvalue ParmVar 0x26490b4a300 'tlen' 'int'
    |   |-BinaryOperator 0x26490b46f20 <line:239:37, col:43> 'int' '-'
    |   | |-ImplicitCastExpr 0x26490b46f08 <col:37> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x26490b46ec0 <col:37> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    |   | `-IntegerLiteral 0x26490b46ee0 <col:43> 'int' 11
    |   `-ImplicitCastExpr 0x26490b46fb0 <col:47> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x26490b46f40 <col:47> 'int' lvalue ParmVar 0x26490b4a300 'tlen' 'int'
    |-ForStmt 0x26490b47a50 <line:240:5, line:244:5>
    | |-BinaryOperator 0x26490b47030 <line:240:10, col:22> 'int' '='
    | | |-DeclRefExpr 0x26490b46fe8 <col:10> 'int' lvalue Var 0x26490b43a98 'msg_index' 'int'
    | | `-IntegerLiteral 0x26490b47008 <col:22> 'int' 1
    | |-<<<NULL>>>
    | |-BinaryOperator 0x26490b47108 <col:25, col:43> 'int' '<'
    | | |-ImplicitCastExpr 0x26490b470f0 <col:25> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x26490b47050 <col:25> 'int' lvalue Var 0x26490b43a98 'msg_index' 'int'
    | | `-BinaryOperator 0x26490b470d0 <col:37, col:43> 'int' '-'
    | |   |-ImplicitCastExpr 0x26490b470b8 <col:37> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x26490b47070 <col:37> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    | |   `-IntegerLiteral 0x26490b47090 <col:43> 'int' 11
    | |-CompoundAssignOperator 0x26490b47188 <col:47, col:61> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
    | | |-DeclRefExpr 0x26490b47128 <col:47> 'int' lvalue Var 0x26490b43a98 'msg_index' 'int'
    | | `-IntegerLiteral 0x26490b47148 <col:61> 'int' 1
    | `-CompoundStmt 0x26490b47a30 <col:64, line:244:5>
    |   |-BinaryOperator 0x26490b473e8 <line:241:9, col:66> 'unsigned int' '='
    |   | |-DeclRefExpr 0x26490b471b8 <col:9> 'unsigned int' lvalue Var 0x26490b43938 'mask' 'unsigned int'
    |   | `-ImplicitCastExpr 0x26490b473d0 <col:16, col:66> 'unsigned int' <IntegralCast>
    |   |   `-UnaryOperator 0x26490b473b8 <col:16, col:66> 'int' prefix '~' cannot overflow
    |   |     `-CallExpr 0x26490b47388 <col:17, col:66> 'int'
    |   |       |-ImplicitCastExpr 0x26490b47370 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x26490b471d8 <col:17> 'int ()' Function 0x26490b45d40 'constant_time_eq' 'int ()'
    |   |       |-BinaryOperator 0x26490b47328 <col:34, col:62> 'int' '&'
    |   |       | |-ImplicitCastExpr 0x26490b47310 <col:34> 'int' <LValueToRValue>
    |   |       | | `-DeclRefExpr 0x26490b471f8 <col:34> 'int' lvalue Var 0x26490b43a98 'msg_index' 'int'
    |   |       | `-ParenExpr 0x26490b472f0 <col:46, col:62> 'int'
    |   |       |   `-BinaryOperator 0x26490b472d0 <col:47, col:58> 'int' '-'
    |   |       |     |-BinaryOperator 0x26490b47278 <col:47, col:53> 'int' '-'
    |   |       |     | |-ImplicitCastExpr 0x26490b47260 <col:47> 'int' <LValueToRValue>
    |   |       |     | | `-DeclRefExpr 0x26490b47218 <col:47> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    |   |       |     | `-IntegerLiteral 0x26490b47238 <col:53> 'int' 11
    |   |       |     `-ImplicitCastExpr 0x26490b472b8 <col:58> 'int' <LValueToRValue>
    |   |       |       `-DeclRefExpr 0x26490b47298 <col:58> 'int' lvalue Var 0x26490b43b18 'mlen' 'int'
    |   |       `-IntegerLiteral 0x26490b47348 <col:65> 'int' 0
    |   `-ForStmt 0x26490b479f8 <line:242:9, line:243:74>
    |     |-BinaryOperator 0x26490b47450 <line:242:14, col:18> 'int' '='
    |     | |-DeclRefExpr 0x26490b47408 <col:14> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |     | `-IntegerLiteral 0x26490b47428 <col:18> 'int' 11
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x26490b47538 <col:22, col:32> 'int' '<'
    |     | |-ImplicitCastExpr 0x26490b47520 <col:22> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x26490b47470 <col:22> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |     | `-BinaryOperator 0x26490b47500 <col:26, col:32> 'int' '-'
    |     |   |-ImplicitCastExpr 0x26490b474d0 <col:26> 'int' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x26490b47490 <col:26> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    |     |   `-ImplicitCastExpr 0x26490b474e8 <col:32> 'int' <LValueToRValue>
    |     |     `-DeclRefExpr 0x26490b474b0 <col:32> 'int' lvalue Var 0x26490b43a98 'msg_index' 'int'
    |     |-UnaryOperator 0x26490b47578 <col:43, col:44> 'int' postfix '++'
    |     | `-DeclRefExpr 0x26490b47558 <col:43> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |     `-BinaryOperator 0x26490b479d8 <line:243:13, col:74> 'unsigned char' '='
    |       |-ArraySubscriptExpr 0x26490b47600 <col:13, col:17> 'unsigned char' lvalue
    |       | |-ImplicitCastExpr 0x26490b475d0 <col:13> 'unsigned char *' <LValueToRValue>
    |       | | `-DeclRefExpr 0x26490b47590 <col:13> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    |       | `-ImplicitCastExpr 0x26490b475e8 <col:16> 'int' <LValueToRValue>
    |       |   `-DeclRefExpr 0x26490b475b0 <col:16> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |       `-ImplicitCastExpr 0x26490b479c0 <col:21, col:74> 'unsigned char' <IntegralCast>
    |         `-CallExpr 0x26490b47910 <col:21, col:74> 'int'
    |           |-ImplicitCastExpr 0x26490b478f8 <col:21> 'int (*)()' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x26490b47740 <col:21> 'int ()' Function 0x26490b47678 'constant_time_select_8' 'int ()'
    |           |-ImplicitCastExpr 0x26490b47948 <col:44> 'unsigned int' <LValueToRValue>
    |           | `-DeclRefExpr 0x26490b47760 <col:44> 'unsigned int' lvalue Var 0x26490b43938 'mask' 'unsigned int'
    |           |-ImplicitCastExpr 0x26490b47978 <col:50, col:66> 'int' <IntegralCast>
    |           | `-ImplicitCastExpr 0x26490b47960 <col:50, col:66> 'unsigned char' <LValueToRValue>
    |           |   `-ArraySubscriptExpr 0x26490b47848 <col:50, col:66> 'unsigned char' lvalue
    |           |     |-ImplicitCastExpr 0x26490b47830 <col:50> 'unsigned char *' <LValueToRValue>
    |           |     | `-DeclRefExpr 0x26490b47780 <col:50> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    |           |     `-BinaryOperator 0x26490b47810 <col:53, col:57> 'int' '+'
    |           |       |-ImplicitCastExpr 0x26490b477e0 <col:53> 'int' <LValueToRValue>
    |           |       | `-DeclRefExpr 0x26490b477a0 <col:53> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |           |       `-ImplicitCastExpr 0x26490b477f8 <col:57> 'int' <LValueToRValue>
    |           |         `-DeclRefExpr 0x26490b477c0 <col:57> 'int' lvalue Var 0x26490b43a98 'msg_index' 'int'
    |           `-ImplicitCastExpr 0x26490b479a8 <col:69, col:73> 'int' <IntegralCast>
    |             `-ImplicitCastExpr 0x26490b47990 <col:69, col:73> 'unsigned char' <LValueToRValue>
    |               `-ArraySubscriptExpr 0x26490b478d8 <col:69, col:73> 'unsigned char' lvalue
    |                 |-ImplicitCastExpr 0x26490b478a8 <col:69> 'unsigned char *' <LValueToRValue>
    |                 | `-DeclRefExpr 0x26490b47868 <col:69> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    |                 `-ImplicitCastExpr 0x26490b478c0 <col:72> 'int' <LValueToRValue>
    |                   `-DeclRefExpr 0x26490b47888 <col:72> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |-ForStmt 0x26490b48098 <line:245:5, line:248:5>
    | |-BinaryOperator 0x26490b47ad0 <line:245:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x26490b47a88 <col:10> 'int' lvalue Var 0x26490b43668 'i' 'int'
    | | `-IntegerLiteral 0x26490b47aa8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x26490b47b60 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x26490b47b30 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x26490b47af0 <col:17> 'int' lvalue Var 0x26490b43668 'i' 'int'
    | | `-ImplicitCastExpr 0x26490b47b48 <col:21> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x26490b47b10 <col:21> 'int' lvalue ParmVar 0x26490b4a300 'tlen' 'int'
    | |-UnaryOperator 0x26490b47ba0 <col:27, col:28> 'int' postfix '++'
    | | `-DeclRefExpr 0x26490b47b80 <col:27> 'int' lvalue Var 0x26490b43668 'i' 'int'
    | `-CompoundStmt 0x26490b48078 <col:32, line:248:5>
    |   |-BinaryOperator 0x26490b47d20 <line:246:9, col:47> 'unsigned int' '='
    |   | |-DeclRefExpr 0x26490b47bb8 <col:9> 'unsigned int' lvalue Var 0x26490b43938 'mask' 'unsigned int'
    |   | `-BinaryOperator 0x26490b47d00 <col:16, col:47> 'unsigned int' '&'
    |   |   |-ImplicitCastExpr 0x26490b47cd0 <col:16> 'unsigned int' <LValueToRValue>
    |   |   | `-DeclRefExpr 0x26490b47bd8 <col:16> 'unsigned int' lvalue Var 0x26490b43838 'good' 'unsigned int'
    |   |   `-ImplicitCastExpr 0x26490b47ce8 <col:23, col:47> 'unsigned int' <IntegralCast>
    |   |     `-CallExpr 0x26490b47c70 <col:23, col:47> 'int'
    |   |       |-ImplicitCastExpr 0x26490b47c58 <col:23> 'int (*)()' <FunctionToPointerDecay>
    |   |       | `-DeclRefExpr 0x26490b47bf8 <col:23> 'int ()' Function 0x26490b46cd8 'constant_time_lt' 'int ()'
    |   |       |-ImplicitCastExpr 0x26490b47ca0 <col:40> 'int' <LValueToRValue>
    |   |       | `-DeclRefExpr 0x26490b47c18 <col:40> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |   |       `-ImplicitCastExpr 0x26490b47cb8 <col:43> 'int' <LValueToRValue>
    |   |         `-DeclRefExpr 0x26490b47c38 <col:43> 'int' lvalue Var 0x26490b43b18 'mlen' 'int'
    |   `-BinaryOperator 0x26490b48058 <line:247:9, col:63> 'unsigned char' '='
    |     |-ArraySubscriptExpr 0x26490b47db0 <col:9, col:13> 'unsigned char' lvalue
    |     | |-ImplicitCastExpr 0x26490b47d80 <col:9> 'unsigned char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x26490b47d40 <col:9> 'unsigned char *' lvalue ParmVar 0x26490b4a280 'to' 'unsigned char *'
    |     | `-ImplicitCastExpr 0x26490b47d98 <col:12> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x26490b47d60 <col:12> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |     `-ImplicitCastExpr 0x26490b48040 <col:17, col:63> 'unsigned char' <IntegralCast>
    |       `-CallExpr 0x26490b47f90 <col:17, col:63> 'int'
    |         |-ImplicitCastExpr 0x26490b47f78 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |         | `-DeclRefExpr 0x26490b47dd0 <col:17> 'int ()' Function 0x26490b47678 'constant_time_select_8' 'int ()'
    |         |-ImplicitCastExpr 0x26490b47fc8 <col:40> 'unsigned int' <LValueToRValue>
    |         | `-DeclRefExpr 0x26490b47df0 <col:40> 'unsigned int' lvalue Var 0x26490b43938 'mask' 'unsigned int'
    |         |-ImplicitCastExpr 0x26490b47ff8 <col:46, col:55> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x26490b47fe0 <col:46, col:55> 'unsigned char' <LValueToRValue>
    |         |   `-ArraySubscriptExpr 0x26490b47ec8 <col:46, col:55> 'unsigned char' lvalue
    |         |     |-ImplicitCastExpr 0x26490b47eb0 <col:46> 'unsigned char *' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x26490b47e10 <col:46> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    |         |     `-BinaryOperator 0x26490b47e90 <col:49, col:53> 'int' '+'
    |         |       |-ImplicitCastExpr 0x26490b47e78 <col:49> 'int' <LValueToRValue>
    |         |       | `-DeclRefExpr 0x26490b47e30 <col:49> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |         |       `-IntegerLiteral 0x26490b47e50 <col:53> 'int' 11
    |         `-ImplicitCastExpr 0x26490b48028 <col:58, col:62> 'int' <IntegralCast>
    |           `-ImplicitCastExpr 0x26490b48010 <col:58, col:62> 'unsigned char' <LValueToRValue>
    |             `-ArraySubscriptExpr 0x26490b47f58 <col:58, col:62> 'unsigned char' lvalue
    |               |-ImplicitCastExpr 0x26490b47f28 <col:58> 'unsigned char *' <LValueToRValue>
    |               | `-DeclRefExpr 0x26490b47ee8 <col:58> 'unsigned char *' lvalue ParmVar 0x26490b4a280 'to' 'unsigned char *'
    |               `-ImplicitCastExpr 0x26490b47f40 <col:61> 'int' <LValueToRValue>
    |                 `-DeclRefExpr 0x26490b47f08 <col:61> 'int' lvalue Var 0x26490b43668 'i' 'int'
    |-CallExpr 0x26490b48238 <line:250:5, col:31> 'int'
    | |-ImplicitCastExpr 0x26490b48220 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x26490b481c0 <col:5> 'int ()' Function 0x26490b480f8 'OPENSSL_clear_free' 'int ()'
    | |-ImplicitCastExpr 0x26490b48268 <col:24> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x26490b481e0 <col:24> 'unsigned char *' lvalue Var 0x26490b43700 'em' 'unsigned char *'
    | `-ImplicitCastExpr 0x26490b48280 <col:28> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x26490b48200 <col:28> 'int' lvalue ParmVar 0x26490b4a480 'num' 'int'
    |-CallExpr 0x26490b48478 <line:252:5, col:42> 'int'
    | |-ImplicitCastExpr 0x26490b48460 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x26490b483a8 <col:5> 'int ()' Function 0x26490b482e0 'err_clear_last_constant_time' 'int ()'
    | `-BinaryOperator 0x26490b48440 <col:34, col:38> 'unsigned int' '&'
    |   |-ImplicitCastExpr 0x26490b48428 <col:34> 'unsigned int' <IntegralCast>
    |   | `-IntegerLiteral 0x26490b483c8 <col:34> 'int' 1
    |   `-ImplicitCastExpr 0x26490b48410 <col:38> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x26490b483f0 <col:38> 'unsigned int' lvalue Var 0x26490b43838 'good' 'unsigned int'
    `-ReturnStmt 0x26490b485c0 <line:254:5, col:51>
      `-CallExpr 0x26490b48558 <col:12, col:51> 'int'
        |-ImplicitCastExpr 0x26490b48540 <col:12> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x26490b484a0 <col:12> 'int ()' Function 0x26490b46388 'constant_time_select_int' 'int ()'
        |-ImplicitCastExpr 0x26490b48590 <col:37> 'unsigned int' <LValueToRValue>
        | `-DeclRefExpr 0x26490b484c0 <col:37> 'unsigned int' lvalue Var 0x26490b43838 'good' 'unsigned int'
        |-ImplicitCastExpr 0x26490b485a8 <col:43> 'int' <LValueToRValue>
        | `-DeclRefExpr 0x26490b484e0 <col:43> 'int' lvalue Var 0x26490b43b18 'mlen' 'int'
        `-UnaryOperator 0x26490b48528 <col:49, col:50> 'int' prefix '-'
          `-IntegerLiteral 0x26490b48500 <col:50> 'int' 1
