TranslationUnitDecl 0x1c327732ff8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1c327733890 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1c327733590 '__int128'
|-TypedefDecl 0x1c327733900 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1c3277335b0 'unsigned __int128'
|-TypedefDecl 0x1c327733c38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1c3277339f0 'struct __NSConstantString_tag'
|   `-Record 0x1c327733958 '__NSConstantString_tag'
|-TypedefDecl 0x1c327733ca8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1c3277331d0 'unsigned long long'
|-TypedefDecl 0x1c327733d40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1c327733d00 'char *'
|   `-BuiltinType 0x1c327733090 'char'
|-TypedefDecl 0x1c327733db0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1c327733d00 'char *'
|   `-BuiltinType 0x1c327733090 'char'
|-TypedefDecl 0x1c327733e70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1c3277331d0 'unsigned long long'
|-TypedefDecl 0x1c327733ee0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1c327733d00 'char *'
|   `-BuiltinType 0x1c327733090 'char'
|-FunctionDecl 0x1c32912c420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c32912c4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1c32912c530 <col:21> Implicit
|-FunctionDecl 0x1c32912c588 prev 0x1c32912c420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c32912c2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1c32912c678 <col:21> Inherited Implicit
|-TypedefDecl 0x1c32912c6b8 prev 0x1c327733ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1c3277331d0 'unsigned long long'
|-TypedefDecl 0x1c32912c760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1c32912c730 'size_t' sugar
|   |-Typedef 0x1c32912c6b8 'size_t'
|   `-BuiltinType 0x1c3277331d0 'unsigned long long'
|-TypedefDecl 0x1c32912c7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1c327733130 'long long'
|-TypedefDecl 0x1c32912c840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1c327733130 'long long'
|-TypedefDecl 0x1c32912c8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1c327733170 'unsigned short'
|-TypedefDecl 0x1c32912c920 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1c327733170 'unsigned short'
|-TypedefDecl 0x1c32912c990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1c327733170 'unsigned short'
|-TypedefDecl 0x1c32912ca00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1c3277330f0 'int'
|-TypedefDecl 0x1c32912ca70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1c327733110 'long'
|-TypedefDecl 0x1c32912cae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1c327733130 'long long'
|-TypedefDecl 0x1c32912cb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1c32912cb40 '__time64_t' sugar
|   |-Typedef 0x1c32912cae0 '__time64_t'
|   `-BuiltinType 0x1c327733130 'long long'
|-FunctionDecl 0x1c32912cce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1c32912cf08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1c3291636a0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1c32912d048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1c32912d0c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1c32912d138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1c32912d1b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1c329163440 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1c329163780 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1c329163840 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1c3291639b0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1c329163960 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1c329163900 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1c329163820 'struct threadlocaleinfostruct'
|       `-Record 0x1c32916e4f0 'threadlocaleinfostruct'
|-TypedefDecl 0x1c329163ac0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1c329163a70 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1c329163a10 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1c3291638e0 'struct threadmbcinfostruct'
|       `-Record 0x1c329163840 'threadmbcinfostruct'
|-RecordDecl 0x1c329163b18 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1c329163bd0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1c329163c90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c329163d20 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1c329163db0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1c329163e68 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1c329163e10 'struct localeinfo_struct' sugar
|   `-RecordType 0x1c329163c70 'struct localeinfo_struct'
|     `-Record 0x1c329163bd0 'localeinfo_struct'
|-TypedefDecl 0x1c329163f40 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1c329163ef0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1c329163e10 'struct localeinfo_struct' sugar
|     `-RecordType 0x1c329163c70 'struct localeinfo_struct'
|       `-Record 0x1c329163bd0 'localeinfo_struct'
|-RecordDecl 0x1c329163fb8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1c329164070 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c3291640e8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1c3291641a8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1c329164240 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1c3291642b0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1c329164368 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1c329164310 'struct localerefcount' sugar
|   `-RecordType 0x1c329164050 'struct localerefcount'
|     `-Record 0x1c329163fb8 'localerefcount'
|-RecordDecl 0x1c32916e4f0 prev 0x1c329163780 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1c32916e570 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c32916e5e8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1c32916e658 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1c32916e6c8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1c32916e738 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1c32916e8f8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1c32916e968 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1c32916e9d8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1c32916ea48 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1c32916eab8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1c32916eb28 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1c32916eb80 parent 0x1c327732ff8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1c32916ed10 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1c32916ed80 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1c32916edf0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1c32916ee60 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1c32916ef00 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1c32916ef70 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1c32916f080 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1c32916f1b8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1c32916f268 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1c32916f210 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1c329163820 'struct threadlocaleinfostruct'
|     `-Record 0x1c32916e4f0 'threadlocaleinfostruct'
|-RecordDecl 0x1c32916f300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1c32916f3c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c32916f438 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1c32916d4e0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1c32916d550 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1c32916d5c0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1c32916d630 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1c32916d6a0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1c32916d710 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1c32916d780 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1c32916d830 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1c32916d7e0 'struct _iobuf' sugar
|   `-RecordType 0x1c32916f3a0 'struct _iobuf'
|     `-Record 0x1c32916f300 '_iobuf'
|-FunctionDecl 0x1c32916da68 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1c32916db38 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1c327733130 'long long'
|-FunctionDecl 0x1c32916dd18 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c32916dba0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1c32916e010 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c32916ddf0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1c32916de68 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1c32916e3c0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1c32916e0f0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1c32916e170 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1c32916e1f0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1c32916f670 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c32916f500 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1c32916f8a0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1c32916f760 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1c32916fa50 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c32916f970 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1c32916fc40 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c32916ff38 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1c32916fd10 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1c32916fd90 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1c3291700f0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c329170010 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1c3291702a0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c3291701c0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1c329170450 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c329170370 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1c329177688 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c3291775a8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1c329177818 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c329177b80 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1c3291778e0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1c3291779d8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1c329177f38 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1c329177c60 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1c329177ce0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1c329177d58 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1c3291780f8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c329178018 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1c3291783c0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1c3291781d0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1c329178250 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1c32917e5f0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c32917e9e8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1c32917ea88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c32917eaf0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1c32917eb68 prev 0x1c32917e9e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1c32917e7c0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1c32917e840 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1c32917ec18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c32917f090 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1c32917edc0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1c32917ee40 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1c32917eec0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1c32917f3b0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1c32917f450 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1c32917f4b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c32917f530 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1c32917f600 prev 0x1c32917f3b0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c32917f170 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c32917f1f0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1c32917f6f8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1c32917f8c0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c32917f740 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1c32917f7c0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1c32917fb18 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c32917f9a0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1c32917fa18 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1c32917fd48 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c32917fbf8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1c329180040 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1c32917fe20 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1c32917fe98 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1c3291804d8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1c329180578 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1c329178590 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c3291785f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c329178660 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1c3291786e8 prev 0x1c3291804d8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1c329180120 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1c329180198 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c329180210 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c329180288 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1c329178bf0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c3291787d8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1c329178850 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291788c8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c329178940 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291789b8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1c3291790b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1c329178de0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1c329178e60 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1c329178ed8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1c329179168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c32917a658 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1c3291792b0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1c329179330 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1c3291793b0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1c329179428 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1c32917aa00 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c32917aaa0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1c32917ab08 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c32917ab80 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1c32917abe8 prev 0x1c32917aa00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1c32917a838 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1c32917a8b8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1c32917adc8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1c32917ac98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c32917b208 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c32917af08 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1c32917af88 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1c32917b020 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c32917b2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c329180610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c32917b400 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1c32917b480 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1c329180900 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291806e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c329180768 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c3291807e0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c329180c60 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1c3291809e0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1c329180ab8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1c329181018 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1c329180d38 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1c329180db8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1c329180e38 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1c329181278 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1c3291810f8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1c3291795e8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1c329181348 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c3291813c8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1c329181448 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1c329179848 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1c3291796c8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1c329179d08 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1c329179da8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1c329179e10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c329179e78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c329179ee0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1c329179f68 prev 0x1c329179d08 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1c329179950 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1c3291799c8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c329179a40 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c329179ab8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1c32917a130 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c32917a050 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1c32917a2c0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c32917a448 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c32917b780 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1c32917a518 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1c32917b5d0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1c32917baa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c32917b960 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1c32917bb50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c32917bd70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c32917bc90 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1c32917bf90 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1c32917be48 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1c32917c140 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c32917c060 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1c32917c390 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1c32917c218 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1c32917c298 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1c32917c5d0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1c32917c670 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c32917c6e0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1c32917c748 prev 0x1c32917c5d0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1c32917c470 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1c32917c838 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1c32917c968 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c32917c888 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1c32917cbb8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c32917ca40 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1c32917cab8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1c32917cd78 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c32917cc98 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1c32917cf98 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c32917ce50 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1c32917d1e8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c32917d070 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1c32917d0e8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1c32917d3a8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c32917d2c8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1c3291d10e0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1c32917d480 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1c32917d500 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1c3291d12a0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c3291d11c0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1c3291d1530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1c3291d1450 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1c3291d15d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1c3291d17d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c3291d16f8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1c3291d1960 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c3291d1c08 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c3291d1ca8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c3291d1d18 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1c3291d1d80 prev 0x1c3291d1c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1c3291d1af0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1c3291d1f58 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1c3291d1e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291d3340 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291d3108 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d3180 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c3291d33f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291d3618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c3291d3538 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1c3291d3868 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291d36f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1c3291d3768 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291d3c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1c3291d3a00 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1c3291d3a80 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1c3291d3cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291d3f00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c3291d3e20 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1c3291d0148 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1c3291d0000 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1c3291d0330 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1c3291d0780 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1c3291d03f8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c3291d0478 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1c3291d04f8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1c3291d0570 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1c3291d0c00 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c3291d0870 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291d08e8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d0960 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291d09e0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1c3291cdfe0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c3291d0cf0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291d0d68 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291d0de8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1c3291ce1a8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c3291ce0c8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1c3291ce580 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c3291ce620 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c3291ce688 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c3291ce700 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1c3291ce768 prev 0x1c3291ce580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1c3291ce340 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1c3291ce3c0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1c3291ce948 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1c3291ce818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291ced38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291cea58 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1c3291cead8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1c3291ceb50 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c3291cedf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291d2120 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1c3291cef38 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1c3291d2020 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1c3291d2418 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291d2200 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1c3291d2280 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1c3291d22f8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291d28a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c3291d25c0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1c3291d2638 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d26b8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1c3291d2960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291d2f30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291d2ba0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1c3291d2c18 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d2c98 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d2d10 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c3291cbfc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291cc320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c3291cc108 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1c3291cc180 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291cc200 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1c3291cc6b8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291cc408 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1c3291cc480 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291cc500 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1c3291cc578 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291cc918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1c3291cc9b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291ccc70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1c3291ccb00 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1c3291d4040 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1c3291ccd48 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1c3291ccdc0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1c3291d42c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c3291d41e0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1c3291d4368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291d4628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c3291d44b0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1c3291d4528 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1c3291d4a40 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c3291d4ae0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1c3291d4b48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c3291d4bb0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c3291d4c30 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1c3291d4c98 prev 0x1c3291d4a40 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c3291d4700 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1c3291d4780 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d47f8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c3291d4d98 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1c3291ccfd0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c3291cd070 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1c3291cd0d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c3291cd140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c3291cd1c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1c3291cd228 prev 0x1c3291ccfd0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c3291d4de0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c3291d4e60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d4ed8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c3291cd328 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1c3291cd588 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c3291cd370 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c3291cd3f0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1c3291cd468 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291cd880 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c3291cd668 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c3291cd6e8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1c3291cd760 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291cdbc8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c3291cdc68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c3291cdcd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c3291cdd48 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1c3291cddb0 prev 0x1c3291cdbc8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c3291cd968 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1c3291cd9e0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c3291cdea8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1c3291d5188 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c3291d5228 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c3291d5290 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c3291d5308 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1c3291d5370 prev 0x1c3291d5188 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c3291cdef8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d5050 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c3291d5468 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1c3291d5630 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c3291d54b8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1c3291d5530 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d5888 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c3291d5710 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1c3291d5788 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d5de8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c3291d5e88 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c3291d5ef0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c3291d5f58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c3291d5fc0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c3291d6060 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1c3291d60c8 prev 0x1c3291d5de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c3291d5a28 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291d5aa0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d5b20 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d5b98 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1c3291d62b8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1c3291d6188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291d6728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c3291d6308 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291d6380 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d63f8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d6478 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1c3291d64f0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d6b68 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c3291d6820 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291d6898 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d6910 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d6990 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1c3291d6a08 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d6f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c3291d6d20 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1c3291d6d98 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d6e18 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1c3291d6ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291cf460 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c3291cf1b0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1c3291cf228 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291cf2a8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1c3291cf320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1c3291cf520 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291cf918 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c3291cf668 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291cf6e0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291cf760 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1c3291cf7d8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291cfcd8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1c3291cfa08 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1c3291cfa88 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1c3291cfb00 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291da140 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1c3291da1e0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c3291da248 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c3291da2c0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1c3291da328 prev 0x1c3291da140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1c3291cfe80 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c3291cff00 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1c3291da508 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1c3291da3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291da930 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c3291da9d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c3291daa38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c3291daaa0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c3291dab20 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1c3291dab88 prev 0x1c3291da930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c3291da618 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c3291da698 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1c3291da710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1c3291dad70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1c3291dac40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291d9090 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c3291d9130 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c3291d9198 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c3291d9200 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c3291d9280 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1c3291d92e8 prev 0x1c3291d9090 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c3291dadc0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1c3291dae40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1c3291daeb8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c3291d93e8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1c3291d95b0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c3291d9438 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1c3291d94b0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d98a8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c3291d9690 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291d9708 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291d9788 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1c3291d9c40 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c3291d9990 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291d9a08 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d9a88 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1c3291d9b00 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d9ea8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c3291d9d28 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1c3291d9da8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1c3291db0b0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c3291d9f88 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1c3291db3a0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c3291db188 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1c3291db200 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291db280 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1c3291db698 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c3291db480 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c3291db500 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1c3291db578 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291db8f8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c3291db780 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1c3291db7f8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291dbc88 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c3291db9d8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1c3291dba50 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291dbad0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1c3291dbb48 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291dbe58 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c3291dbd78 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1c3291dc0c0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c3291dbf30 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1c3291dbfa8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291dc280 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c3291dc1a0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1c3291dc410 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c3291dc658 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291dc4e0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1c3291dc558 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291dc8b0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291dc738 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c3291dc7b0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291dcb08 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291dc990 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c3291dca08 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291dceb8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291dcbe8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1c3291dcc60 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291dccd8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291dd1f0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291dcfa0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c3291dd018 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291dd0d0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291dd4e8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291dd2d8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c3291dd350 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291dd3c8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291dd7e0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291dd5c8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c3291dd648 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1c3291dd6c0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291ddad8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291dd8c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c3291dd940 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c3291dd9b8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291dddd0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291ddbb8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c3291ddc38 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c3291ddcb0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291d71d0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291ddeb0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c3291ddf30 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1c3291ddfa8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291de020 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d7568 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291d72b8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c3291d7338 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d73b0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291d7428 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d7900 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291d7650 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c3291d76d0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d7748 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291d77c0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d7d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291d7ab0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291d7b30 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d7ba8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c3291d7e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291df400 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291d7f98 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291df0f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291df170 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1c3291df1e8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291df7a0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291df4f0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291df568 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291df5e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1c3291df660 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291dfcf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291df990 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291dfa10 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1c3291dfa88 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c3291dfb00 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c3291dfdb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291d82b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291dfef8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291dff70 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291dfff0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1c3291e0068 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291d8080 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d86f8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291d83b0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291d8428 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291d84a8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d8520 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291d8598 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291d8968 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291d87f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c3291d8868 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291d8bc0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291d8a48 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1c3291d8ac0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291d8eb0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291d8ca0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d8d18 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291d8d90 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e72a0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291d8f98 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1c3291d9010 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291e7180 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e76f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291e7448 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291e74c0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291e7540 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1c3291e75b8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c3291e77b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291e7bb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291e7900 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291e7978 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291e79f8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1c3291e7a70 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291e6160 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291e7ca0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291e7d18 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291e7d90 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291e7e10 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1c3291e7e88 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291e66a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291e6358 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291e63d0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291e6450 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1c3291e64c8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c3291e6540 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c3291e6768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291e6be8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291e68b8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291e6930 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291e69b0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1c3291e6a28 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291e6aa0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e0160 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291e6ce0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1c3291e6d58 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291e6dd0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291e6e50 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1c3291e6ec8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291e6f40 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e0520 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1c3291e0258 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c3291e02d0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e0350 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1c3291e0790 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c3291e0620 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1c3291e09a8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1c3291e0c88 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c3291e0a70 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c3291e0ae8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1c3291e0ed0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1c3291e0d60 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c3291e8180 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c3291e0fa0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1c3291e8308 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1c3291e8540 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c3291e83d0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c3291e8448 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1c3291e86f0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1c3291e8618 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c3291e8998 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1c3291e87c0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c3291e8838 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1c3291e8d40 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1c3291e8a70 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c3291e8af0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1c3291e8b68 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1c3291e9040 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c3291e8e20 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e8e98 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c3291e32e8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1c3291e9118 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1c3291e3140 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c3291e35f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c3291e3480 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1c3291e3698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291e3958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c3291e37d8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1c3291e3c60 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291e3a28 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1c3291e3aa0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291e3eb0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291e3d38 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1c3291e3db0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291e5150 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c3291e3f88 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291e5300 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c3291e5220 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291e54b0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c3291e53d0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291e5848 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e5580 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c3291e55f8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e5670 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e5b38 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e5928 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1c3291e59a0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e5a18 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e5e28 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e5c18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c3291e5c90 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e5d08 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e9190 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e5f08 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c3291e5f80 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e5ff8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e9490 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e9270 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e92e8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e96e0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e9568 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e95e0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e9930 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e97b8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e9830 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e9b80 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e9a08 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e9a80 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e9f38 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291e9c58 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c3291e9cd0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291e9d48 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291e2330 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291ea018 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c3291ea090 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291ea108 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e2120 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e26e8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e2418 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c3291e2490 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e2508 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e29d8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e27c8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1c3291e2840 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e28b8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e2cc8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291e2ab8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291e2b30 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291e2ba8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291e3050 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e2da8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291e2e20 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291e2e98 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e2f10 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291ea550 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291ea1c8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291ea240 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291ea2b8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291ea330 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291eaa58 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291ea638 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291ea6b0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291ea728 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291ea7a0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291ea818 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291eae18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291eac08 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c3291eac80 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291eacf8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c3291eaed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291e4370 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291eb0d0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c3291e4140 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291e41b8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291e4230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1c3291e4430 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291e46e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291e4570 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1c3291e45e8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291e48a0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c3291e47c0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291e4b80 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e4970 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c3291e49e8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e4a60 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291e4dd8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291e4c60 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291e4cd8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291f3050 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291e4eb0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291e4f28 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291e4fa0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291f33d8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291f3130 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291f31a8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f3220 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f3298 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291f35a0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c3291f34c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291f37e8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291f3670 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f36e8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291f3af0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291f38c0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f3938 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291f3d40 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291f3bc8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f3c40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291f3f90 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291f3e18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f3e90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291f0318 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291f0048 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f00c0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291f0138 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291f0608 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291f03f8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f0470 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291f04e8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291f08f8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291f06e8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f0760 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291f07d8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291f0cb8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291f09d8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c3291f0a50 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f0ac8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291ef010 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291f0d98 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c3291f0e10 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f0e88 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291ef300 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291ef0f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c3291ef168 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291ef1e0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291ef750 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291ef3e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c3291ef458 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291ef4d0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291ef548 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291efae0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291ef838 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1c3291ef8b0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291ef928 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291ef9a0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291efe70 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291efbc8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1c3291efc40 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291efcb8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291efd30 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291f1340 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291eff58 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291f1030 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f10a8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f1120 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291f16d0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291f1428 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291f14a0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f1518 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f1590 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291f1a60 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291f17b8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291f1830 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f18a8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f1920 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291f1f68 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291f1b48 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291f1bc0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f1c38 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f1cb0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291f1d28 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291ed358 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291ed018 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291ed090 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291ed108 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291ed180 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291ed1f8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291ed788 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291ed448 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291ed4c0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291ed538 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291ed5b0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291ed628 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291ed9f0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291ed878 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291ed8f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291edc40 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291edac8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291edb40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291edf28 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291edd18 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291edd90 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291ede08 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291f23d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291f2130 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291f21a8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f2220 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f2298 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c3291f2498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291f2a08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291f25e0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291f2658 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f26d0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f2748 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f27c0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291f2f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291f2c00 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291f2c78 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f2cf0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f2d68 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c3291f2de0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c3291f5070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291f5680 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291f51b8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c3291f5230 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f52a8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f5320 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f5398 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291f5410 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291f5b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291f5948 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c3291f59c0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1c3291f5c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c3291f5d48 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c3291ee268 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291f6000 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c3291ee010 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291ee088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1c3291ee320 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c3291ee438 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c3291ee9d8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291ee6f8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c3291ee770 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291ee7e8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1c3291eea90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c3291eebb0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c3291fa2d0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291eee70 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c3291eeee8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291eef60 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c3291fa0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1c3291fa390 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c3291fa4b0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c3291fa7b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1c3291fa5d8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c3291fa650 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291fa6c8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1c3291f9350 <line:37:1, line:44:1>
|   |-DeclStmt 0x1c3291fa900 <line:38:5, col:21>
|   | `-VarDecl 0x1c3291fa898 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1c3291fa998 <line:39:5, col:13>
|   | `-VarDecl 0x1c3291fa930 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1c3291facf0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1c3291facd8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c3291fabf0 <col:34> '<builtin fn type>' Function 0x1c3291faa88 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1c3291fac28 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1c3291fa898 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1c3291fac60 <col:29> 'const wchar_t *' lvalue ParmVar 0x1c3291fa6c8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1c3291fafb0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1c3291fad20 <col:5> 'int' lvalue Var 0x1c3291fa930 '_Ret' 'int'
|   | `-CallExpr 0x1c3291faef0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1c3291faed8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c3291fad58 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c3291f1f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1c3291faf38 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c3291fad78 <col:27> 'wchar_t *' lvalue ParmVar 0x1c3291fa5d8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1c3291faf50 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c3291fad98 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c3291fa650 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1c3291faf68 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c3291fadb8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c3291fa6c8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1c3291faf80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1c3291fae40 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1c3291fae18 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1c3291fadd8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1c3291faf98 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c3291fae60 <col:59> 'va_list':'char *' lvalue Var 0x1c3291fa898 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1c3291f92e0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c3291f92c8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c3291f9218 <col:34> '<builtin fn type>' Function 0x1c3291f90b0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1c3291f9250 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1c3291fa898 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1c3291f9340 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1c3291f9328 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c3291f9308 <col:12> 'int' lvalue Var 0x1c3291fa930 '_Ret' 'int'
|-FunctionDecl 0x1c3291faa88 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1c3291fab28 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1c3291fab98 <col:34> Implicit
|-FunctionDecl 0x1c3291f90b0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1c3291f9150 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1c3291f91c0 <col:34> Implicit
|-FunctionDecl 0x1c3291f9648 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1c3291f93a0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c3291f9418 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f9490 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f9508 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1c3291f9930 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1c3291f9920 <line:51:5, col:62>
|     `-CallExpr 0x1c3291f9860 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1c3291f9848 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c3291f9720 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c3291f1f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1c3291f98a8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c3291f9740 <col:27> 'wchar_t *' lvalue ParmVar 0x1c3291f93a0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c3291f98c0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c3291f9760 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c3291f9418 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c3291f98d8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c3291f9780 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c3291f9490 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1c3291f98f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1c3291f9808 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1c3291f97e0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1c3291f97a0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1c3291f9908 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1c3291f9828 <col:59> 'va_list':'char *' lvalue ParmVar 0x1c3291f9508 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1c3291f9bd0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1c3291f9958 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c3291f99d0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f9a48 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f9ac0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1c3291f8148 <line:61:1, line:68:1>
|   |-DeclStmt 0x1c3291f9d20 <line:62:5, col:21>
|   | `-VarDecl 0x1c3291f9cb8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1c3291f9db8 <line:63:5, col:13>
|   | `-VarDecl 0x1c3291f9d50 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1c3291f9e60 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1c3291f9e48 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c3291f9dd0 <col:34> '<builtin fn type>' Function 0x1c3291faa88 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1c3291f9df0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1c3291f9cb8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1c3291f9e28 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c3291f9ac0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1c3291fa060 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1c3291f9e90 <col:5> 'int' lvalue Var 0x1c3291f9d50 '_Ret' 'int'
|   | `-CallExpr 0x1c3291f9fa0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1c3291f9f88 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c3291f9ec8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c3291f1f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1c3291f9fe8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c3291f9ee8 <col:27> 'wchar_t *' lvalue ParmVar 0x1c3291f9958 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1c3291fa000 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c3291f9f08 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c3291f99d0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1c3291fa018 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c3291f9f28 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c3291f9a48 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1c3291fa030 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c3291f9f48 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c3291f9ac0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1c3291fa048 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c3291f9f68 <col:64> 'va_list':'char *' lvalue Var 0x1c3291f9cb8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1c3291f80d8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c3291f80c0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c3291fa080 <col:34> '<builtin fn type>' Function 0x1c3291f90b0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1c3291f80a0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1c3291f9cb8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1c3291f8138 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1c3291f8120 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c3291f8100 <col:12> 'int' lvalue Var 0x1c3291f9d50 '_Ret' 'int'
|-FunctionDecl 0x1c3291f84d8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1c3291f8198 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c3291f8210 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291f8288 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f8300 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c3291f8378 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1c3291f8760 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1c3291f8750 <line:75:5, col:67>
|     `-CallExpr 0x1c3291f8690 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1c3291f8678 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c3291f85b8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c3291f1f68 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1c3291f86d8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c3291f85d8 <col:27> 'wchar_t *' lvalue ParmVar 0x1c3291f8198 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c3291f86f0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c3291f85f8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c3291f8210 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c3291f8708 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c3291f8618 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c3291f8288 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1c3291f8720 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c3291f8638 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c3291f8300 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1c3291f8738 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1c3291f8658 <col:64> 'va_list':'char *' lvalue ParmVar 0x1c3291f8378 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1c3291f89a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c3291f8788 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f8800 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1c3291f8bf8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c3291f8a80 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f8af8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291f8ee0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c3291f8cd0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f8d48 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c3291f8dc0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c3291fe278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291fe100 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1c3291fe178 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c3291fe328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291fe738 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291fe528 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1c3291fe5a0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fe618 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c3291fe7f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291feaa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291fe930 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1c3291fe9a8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291fed90 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291feb80 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c3291febf8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291fec70 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291fb140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291fef30 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fefa8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c3291fb1f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291fb6c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291fb3f0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fb468 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fb4e0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c3291fb780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291fba38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291fb8c0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1c3291fb938 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291fbd20 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291fbb10 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fbb88 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291fbc00 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291fc1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291fbec0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fbf38 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291fbfb0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c3291fc280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291fc800 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291fc480 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fc4f8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291fc570 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fc5e8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c3291fc8c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291fcc10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291fca00 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fca78 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c3291fcaf0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291fcf98 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291fccf0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fcd68 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3291fcde0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291fce58 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291fd2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1c3291fd1c0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c3291fd348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291fd6c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291fd548 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c3291fd5c0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c3291fd770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291fd990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c3291fd8b0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1c3291fdbd8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c3291fda60 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c3291fdad8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c3291fded8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1c3291fdcb8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1c3291fdd30 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c3291f7238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c3291fe070 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f7090 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1c3291f72e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291f76f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c3291f7430 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1c3291f74a8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f7520 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c3291f7b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c3291f7890 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f7908 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f7980 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1c3291f7c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291ff158 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c3291f7d50 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1c3291f7dc8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c3291f7e40 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1c3291f7eb8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1c3291ff3b0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1c3291ff240 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1c3291ff5f0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c3291ff480 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1c3291ff4f8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c3291ff7a8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c3291ff6c8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1c3291ffa98 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1c3291ff878 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1c3291ff8f0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c3291ffd08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c3291ffc30 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1c3291ffdb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c3291fffc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c3291ffef0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1c329206278 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c329200098 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c329206180 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c3292064c0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1c329206350 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c3292063c8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c329206670 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c329206598 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1c329206818 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c329206740 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1c3292069c8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c3292068e8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1c329206b78 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c329206a98 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1c329206ef0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c329206c50 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1c329206cc8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c329206d40 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c329206db8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1c3292002f0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c329206fe0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1c329207058 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c3292070d0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c329200120 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c329200198 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1c329200600 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1c3292003e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c329200460 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1c3292004e0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1c3292007c0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1c3292006e0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1c329200ab0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1c329200890 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1c329200910 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1c329200990 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1c329200c70 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1c329200b90 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1c329200fe8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c329200d48 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1c329200dc0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c329200e38 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c329200eb0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1c3292022b8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c329202140 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1c3292021b8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1c3292025f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1c329202470 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1c3292024f0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1c3292026a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1c329202958 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c3292029f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1c329202d38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1c329202bc0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1c329202c40 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1c329202de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1c32920a1c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c32920a260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1c32920a500 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1c32920a420 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1c32920a5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1c32920a828 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c32920a8c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1c32920ab70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1c32920aa90 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1c32920ac18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1c32920aef8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1c32920ae18 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1c32920afa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1c329207308 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c329207190 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1c329207208 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1c3292073b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1c329207678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c329207718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-RecordDecl 0x1c329207828 <.//openssl//file_jk/after\crypto\rsa/rsa_locl.h:12:1, line:46:1> line:12:8 invalid struct rsa_st definition
| |-FieldDecl 0x1c3292078f8 <line:17:5, col:9> col:9 pad 'int'
| |-FieldDecl 0x1c329207968 <line:18:5, col:10> col:10 version 'long'
| |-FieldDecl 0x1c3292079d8 <line:19:5, col:23> col:23 invalid meth 'const int *'
| |-FieldDecl 0x1c329207a48 <line:21:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x1c329207ab8 <line:22:5, col:13> col:13 invalid n 'int *'
| |-FieldDecl 0x1c329207b28 <line:23:5, col:13> col:13 invalid e 'int *'
| |-FieldDecl 0x1c329207b98 <line:24:5, col:13> col:13 invalid d 'int *'
| |-FieldDecl 0x1c329207c08 <line:25:5, col:13> col:13 invalid p 'int *'
| |-FieldDecl 0x1c329207c78 <line:26:5, col:13> col:13 invalid q 'int *'
| |-FieldDecl 0x1c329207ce8 <line:27:5, col:13> col:13 invalid dmp1 'int *'
| |-FieldDecl 0x1c329207d58 <line:28:5, col:13> col:13 invalid dmq1 'int *'
| |-FieldDecl 0x1c329207dc8 <line:29:5, col:13> col:13 invalid iqmp 'int *'
| |-FieldDecl 0x1c329207e38 <line:31:5, col:20> col:20 invalid ex_data 'int'
| |-FieldDecl 0x1c329207ea8 <line:32:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1c329207f18 <line:33:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1c329207f88 <line:35:5, col:18> col:18 invalid _method_mod_n 'int *'
| |-FieldDecl 0x1c329207ff8 <line:36:5, col:18> col:18 invalid _method_mod_p 'int *'
| |-FieldDecl 0x1c329208068 <line:37:5, col:18> col:18 invalid _method_mod_q 'int *'
| |-FieldDecl 0x1c3292080d8 <line:42:5, col:11> col:11 bignum_data 'char *'
| |-FieldDecl 0x1c32920b1d0 <line:43:5, col:18> col:18 invalid blinding 'int *'
| |-FieldDecl 0x1c32920b240 <line:44:5, col:18> col:18 invalid mt_blinding 'int *'
| `-FieldDecl 0x1c32920b2b0 <line:45:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x1c32920b308 <line:48:1, line:91:1> line:48:8 struct rsa_meth_st definition
| |-FieldDecl 0x1c32920b3d8 <line:49:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x1c32920b818 <line:50:5, line:51:65> line:50:11 rsa_pub_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x1c32920bb50 <line:52:5, line:53:65> line:52:11 rsa_pub_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x1c32920be88 <line:54:5, line:55:66> line:54:11 rsa_priv_enc 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x1c329205170 <line:56:5, line:57:66> line:56:11 rsa_priv_dec 'int (*)(int, const unsigned char *, unsigned char *, int *, int)'
| |-FieldDecl 0x1c329205500 <line:59:5, col:75> col:11 rsa_mod_exp 'int (*)(int *, const int *, int *, int *)'
| |-FieldDecl 0x1c3292059b0 <line:61:5, line:62:72> line:61:11 bn_mod_exp 'int (*)(int *, const int *, const int *, const int *, int *, int *)'
| |-FieldDecl 0x1c329205b88 <line:64:5, col:26> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x1c329205ca0 <line:66:5, col:28> col:11 finish 'int (*)(int *)'
| |-FieldDecl 0x1c329205d10 <line:68:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1c329205d80 <line:70:5, col:11> col:11 app_data 'char *'
| |-FieldDecl 0x1c3292092a0 <line:77:5, line:80:36> line:77:11 rsa_sign 'int (*)(int, const unsigned char *, unsigned int, unsigned char *, unsigned int *, const int *)'
| |-FieldDecl 0x1c329209750 <line:81:5, line:83:59> line:81:11 rsa_verify 'int (*)(int, const unsigned char *, unsigned int, const unsigned char *, unsigned int, const int *)'
| `-FieldDecl 0x1c329209ae0 <line:90:5, col:67> col:11 rsa_keygen 'int (*)(int *, int, int *, int *)'
|-FunctionDecl 0x1c32920a0d0 <line:93:1, line:96:50> line:93:12 invalid int_rsa_verify 'int (int, const unsigned char *, unsigned int, unsigned char *, size_t *, const unsigned char *, size_t, int *)' extern
| |-ParmVarDecl 0x1c329209b50 <col:27, col:31> col:31 dtype 'int'
| |-ParmVarDecl 0x1c329209bd0 <col:38, col:59> col:59 m 'const unsigned char *'
| |-ParmVarDecl 0x1c329209c50 <line:94:27, col:40> col:40 m_len 'unsigned int'
| |-ParmVarDecl 0x1c329209cd0 <col:47, col:62> col:62 rm 'unsigned char *'
| |-ParmVarDecl 0x1c329209da8 <line:95:27, col:35> col:35 prm_len 'size_t *'
| |-ParmVarDecl 0x1c329209e28 <col:44, col:65> col:65 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x1c329209ea0 <line:96:27, col:34> col:34 siglen 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c329209f20 <col:42, col:47> col:47 invalid rsa 'int *'
|-VarDecl 0x1c329211220 <.//openssl//file_jk/after\crypto\rsa\rsa_pss.c:19:1, col:64> col:28 used zeroes 'const unsigned char [8]' static cinit
| `-InitListExpr 0x1c329211470 <col:39, col:64> 'const unsigned char [8]'
|   |-ImplicitCastExpr 0x1c3292114b0 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1c329211288 <col:41> 'int' 0
|   |-ImplicitCastExpr 0x1c3292114d0 <col:44> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1c3292112b0 <col:44> 'int' 0
|   |-ImplicitCastExpr 0x1c3292114f8 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1c3292112d8 <col:47> 'int' 0
|   |-ImplicitCastExpr 0x1c329211530 <col:50> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1c329211300 <col:50> 'int' 0
|   |-ImplicitCastExpr 0x1c329211548 <col:53> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1c329211328 <col:53> 'int' 0
|   |-ImplicitCastExpr 0x1c3292115a0 <col:56> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1c329211350 <col:56> 'int' 0
|   |-ImplicitCastExpr 0x1c3292115b8 <col:59> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1c329211378 <col:59> 'int' 0
|   `-ImplicitCastExpr 0x1c3292115d0 <col:62> 'unsigned char' <IntegralCast>
|     `-IntegerLiteral 0x1c3292113a0 <col:62> 'int' 0
|-FunctionDecl 0x1c329211990 <line:25:1, line:30:1> line:25:5 invalid RSA_verify_PKCS1_PSS 'int (int *, const unsigned char *, const int *, const unsigned char *, int)'
| |-ParmVarDecl 0x1c329211680 <col:26, col:31> col:31 invalid rsa 'int *'
| |-ParmVarDecl 0x1c329211700 <col:36, col:57> col:57 used mHash 'const unsigned char *'
| |-ParmVarDecl 0x1c329211780 <line:26:26, col:40> col:40 invalid Hash 'const int *'
| |-ParmVarDecl 0x1c329211800 <col:46, col:67> col:67 used EM 'const unsigned char *'
| |-ParmVarDecl 0x1c329211880 <line:27:26, col:30> col:30 used sLen 'int'
| `-CompoundStmt 0x1c329211cd8 <line:28:1, line:30:1>
|-FunctionDecl 0x1c3292120a0 <line:32:1, line:135:1> line:32:5 invalid RSA_verify_PKCS1_PSS_mgf1 'int (int *, const unsigned char *, const int *, const int *, const unsigned char *, int)'
| |-ParmVarDecl 0x1c329211d00 <col:31, col:36> col:36 invalid rsa 'int *'
| |-ParmVarDecl 0x1c329211d80 <col:41, col:62> col:62 used mHash 'const unsigned char *'
| |-ParmVarDecl 0x1c329211e00 <line:33:31, col:45> col:45 invalid Hash 'const int *'
| |-ParmVarDecl 0x1c329211e80 <col:51, col:65> col:65 invalid mgf1Hash 'const int *'
| |-ParmVarDecl 0x1c329211f00 <line:34:31, col:52> col:52 used EM 'const unsigned char *'
| |-ParmVarDecl 0x1c329211f80 <col:56, col:60> col:60 used sLen 'int'
| `-CompoundStmt 0x1c329213e30 <line:35:1, line:135:1>
|   |-DeclStmt 0x1c329214238 <line:36:5, col:10>
|   | `-VarDecl 0x1c3292141d0 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x1c3292142f8 <line:37:5, col:16>
|   | `-VarDecl 0x1c329214268 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1c3292142d0 <col:15> 'int' 0
|   |-DeclStmt 0x1c329214538 <line:38:5, col:41>
|   | |-VarDecl 0x1c329214328 <col:5, col:9> col:9 used hLen 'int'
|   | |-VarDecl 0x1c3292143a8 <col:5, col:15> col:15 used maskedDBLen 'int'
|   | |-VarDecl 0x1c329214428 <col:5, col:28> col:28 used MSBits 'int'
|   | `-VarDecl 0x1c3292144a8 <col:5, col:36> col:36 used emLen 'int'
|   |-DeclStmt 0x1c3292145d0 <line:39:5, col:27>
|   | `-VarDecl 0x1c329214568 <col:5, col:26> col:26 used H 'const unsigned char *'
|   |-DeclStmt 0x1c329214708 <line:40:5, col:29>
|   | `-VarDecl 0x1c329214600 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\rsa\rsa_pss.c:40:20 used DB 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1c3292146f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1c3292146d0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1c3292146a8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1c329214668 <col:26> 'int' 0
|   |-DeclStmt 0x1c329214910 <.//openssl//file_jk/after\crypto\rsa\rsa_pss.c:42:5, col:38>
|   | `-VarDecl 0x1c3292148a8 <col:5, col:19> col:19 invalid H_ 'unsigned char'
|   |-IfStmt 0x1c329214a30 <line:45:5, line:46:14>
|   | |-OpaqueValueExpr 0x1c329214a18 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1c329214a00 <col:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c329214cb0 <line:52:5, line:53:14>
|   | |-BinaryOperator 0x1c329214c78 <line:52:9, col:16> 'int' '<'
|   | | |-ImplicitCastExpr 0x1c329214c60 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c329214c18 <col:9> 'int' lvalue Var 0x1c329214328 'hLen' 'int'
|   | | `-IntegerLiteral 0x1c329214c38 <col:16> 'int' 0
|   | `-GotoStmt 0x1c329214c98 <line:53:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c329215120 <line:60:5, line:67:5> has_else
|   | |-BinaryOperator 0x1c329214d58 <line:60:9, col:18> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c329214d40 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c329214cc8 <col:9> 'int' lvalue ParmVar 0x1c329211f80 'sLen' 'int'
|   | | `-UnaryOperator 0x1c329214d28 <col:17, col:18> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1c329214d00 <col:18> 'int' 1
|   | |-BinaryOperator 0x1c329214dd0 <line:61:9, col:16> 'int' '='
|   | | |-DeclRefExpr 0x1c329214d78 <col:9> 'int' lvalue ParmVar 0x1c329211f80 'sLen' 'int'
|   | | `-ImplicitCastExpr 0x1c329214db8 <col:16> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c329214d98 <col:16> 'int' lvalue Var 0x1c329214328 'hLen' 'int'
|   | `-IfStmt 0x1c3292150f8 <line:62:10, line:67:5> has_else
|   |   |-BinaryOperator 0x1c329214e68 <line:62:14, col:23> 'int' '=='
|   |   | |-ImplicitCastExpr 0x1c329214e50 <col:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1c329214df0 <col:14> 'int' lvalue ParmVar 0x1c329211f80 'sLen' 'int'
|   |   | `-UnaryOperator 0x1c329214e38 <col:22, col:23> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x1c329214e10 <col:23> 'int' 2
|   |   |-BinaryOperator 0x1c329214ee8 <line:63:9, col:17> 'int' '='
|   |   | |-DeclRefExpr 0x1c329214e88 <col:9> 'int' lvalue ParmVar 0x1c329211f80 'sLen' 'int'
|   |   | `-UnaryOperator 0x1c329214ed0 <col:16, col:17> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x1c329214ea8 <col:17> 'int' 2
|   |   `-IfStmt 0x1c3292150e0 <line:64:10, line:67:5>
|   |     |-BinaryOperator 0x1c329214f80 <line:64:14, col:22> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1c329214f68 <col:14> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1c329214f08 <col:14> 'int' lvalue ParmVar 0x1c329211f80 'sLen' 'int'
|   |     | `-UnaryOperator 0x1c329214f50 <col:21, col:22> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x1c329214f28 <col:22> 'int' 2
|   |     `-CompoundStmt 0x1c3292150c8 <col:25, line:67:5>
|   |       `-GotoStmt 0x1c3292150b0 <line:66:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c32920f5d8 <line:71:5, line:74:5>
|   | |-BinaryOperator 0x1c32920f568 <line:71:9, col:32> 'int' '&'
|   | | |-ImplicitCastExpr 0x1c32920f550 <col:9, col:13> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1c32920f538 <col:9, col:13> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1c32920f478 <col:9, col:13> 'const unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x1c32920f460 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1c32920f400 <col:9> 'const unsigned char *' lvalue ParmVar 0x1c329211f00 'EM' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x1c32920f438 <col:12> 'int' 0
|   | | `-ParenExpr 0x1c32920f518 <col:17, col:32> 'int'
|   | |   `-BinaryOperator 0x1c32920f4f8 <col:18, col:26> 'int' '<<'
|   | |     |-IntegerLiteral 0x1c32920f498 <col:18> 'int' 255
|   | |     `-ImplicitCastExpr 0x1c32920f4e0 <col:26> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1c32920f4c0 <col:26> 'int' lvalue Var 0x1c329214428 'MSBits' 'int'
|   | `-CompoundStmt 0x1c32920f5c0 <col:35, line:74:5>
|   |   `-GotoStmt 0x1c32920f5a8 <line:73:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c32920f700 <line:75:5, line:78:5>
|   | |-BinaryOperator 0x1c32920f650 <line:75:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c32920f638 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c32920f5f0 <col:9> 'int' lvalue Var 0x1c329214428 'MSBits' 'int'
|   | | `-IntegerLiteral 0x1c32920f610 <col:19> 'int' 0
|   | `-CompoundStmt 0x1c32920f6e0 <col:22, line:78:5>
|   |   |-UnaryOperator 0x1c32920f690 <line:76:9, col:11> 'const unsigned char *' postfix '++'
|   |   | `-DeclRefExpr 0x1c32920f670 <col:9> 'const unsigned char *' lvalue ParmVar 0x1c329211f00 'EM' 'const unsigned char *'
|   |   `-UnaryOperator 0x1c32920f6c8 <line:77:9, col:14> 'int' postfix '--'
|   |     `-DeclRefExpr 0x1c32920f6a8 <col:9> 'int' lvalue Var 0x1c3292144a8 'emLen' 'int'
|   |-IfStmt 0x1c32920f840 <line:79:5, line:82:5>
|   | |-BinaryOperator 0x1c32920f7d0 <line:79:9, col:24> 'int' '<'
|   | | |-ImplicitCastExpr 0x1c32920f7b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c32920f718 <col:9> 'int' lvalue Var 0x1c3292144a8 'emLen' 'int'
|   | | `-BinaryOperator 0x1c32920f798 <col:17, col:24> 'int' '+'
|   | |   |-ImplicitCastExpr 0x1c32920f780 <col:17> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c32920f738 <col:17> 'int' lvalue Var 0x1c329214328 'hLen' 'int'
|   | |   `-IntegerLiteral 0x1c32920f758 <col:24> 'int' 2
|   | `-CompoundStmt 0x1c32920f828 <col:27, line:82:5>
|   |   `-GotoStmt 0x1c32920f810 <line:81:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c32920f9d8 <line:83:5, line:86:5>
|   | |-BinaryOperator 0x1c32920f968 <line:83:9, col:31> 'int' '>'
|   | | |-ImplicitCastExpr 0x1c32920f950 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c32920f858 <col:9> 'int' lvalue ParmVar 0x1c329211f80 'sLen' 'int'
|   | | `-BinaryOperator 0x1c32920f930 <col:16, col:31> 'int' '-'
|   | |   |-BinaryOperator 0x1c32920f8e8 <col:16, col:24> 'int' '-'
|   | |   | |-ImplicitCastExpr 0x1c32920f8b8 <col:16> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1c32920f878 <col:16> 'int' lvalue Var 0x1c3292144a8 'emLen' 'int'
|   | |   | `-ImplicitCastExpr 0x1c32920f8d0 <col:24> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1c32920f898 <col:24> 'int' lvalue Var 0x1c329214328 'hLen' 'int'
|   | |   `-IntegerLiteral 0x1c32920f908 <col:31> 'int' 2
|   | `-CompoundStmt 0x1c32920f9c0 <col:34, line:86:5>
|   |   `-GotoStmt 0x1c32920f9a8 <line:85:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c32920fb90 <line:87:5, line:90:5>
|   | |-BinaryOperator 0x1c32920fb20 <line:87:9, col:26> 'int' '!='
|   | | |-ImplicitCastExpr 0x1c32920fb08 <col:9, col:21> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1c32920faf0 <col:9, col:21> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1c32920faa8 <col:9, col:21> 'const unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x1c32920fa90 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1c32920f9f0 <col:9> 'const unsigned char *' lvalue ParmVar 0x1c329211f00 'EM' 'const unsigned char *'
|   | | |     `-BinaryOperator 0x1c32920fa70 <col:12, col:20> 'int' '-'
|   | | |       |-ImplicitCastExpr 0x1c32920fa58 <col:12> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x1c32920fa10 <col:12> 'int' lvalue Var 0x1c3292144a8 'emLen' 'int'
|   | | |       `-IntegerLiteral 0x1c32920fa30 <col:20> 'int' 1
|   | | `-IntegerLiteral 0x1c32920fac8 <col:26> 'int' 188
|   | `-CompoundStmt 0x1c32920fb78 <col:32, line:90:5>
|   |   `-GotoStmt 0x1c32920fb60 <line:89:9, col:14> 'err' 0x1c3292149b0
|   |-BinaryOperator 0x1c32920fcb8 <line:91:5, col:34> 'int' '='
|   | |-DeclRefExpr 0x1c32920fba8 <col:5> 'int' lvalue Var 0x1c3292143a8 'maskedDBLen' 'int'
|   | `-BinaryOperator 0x1c32920fc98 <col:19, col:34> 'int' '-'
|   |   |-BinaryOperator 0x1c32920fc50 <col:19, col:27> 'int' '-'
|   |   | |-ImplicitCastExpr 0x1c32920fc20 <col:19> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1c32920fbe0 <col:19> 'int' lvalue Var 0x1c3292144a8 'emLen' 'int'
|   |   | `-ImplicitCastExpr 0x1c32920fc38 <col:27> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1c32920fc00 <col:27> 'int' lvalue Var 0x1c329214328 'hLen' 'int'
|   |   `-IntegerLiteral 0x1c32920fc70 <col:34> 'int' 1
|   |-BinaryOperator 0x1c32920fda0 <line:92:5, col:14> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x1c32920fcd8 <col:5> 'const unsigned char *' lvalue Var 0x1c329214568 'H' 'const unsigned char *'
|   | `-BinaryOperator 0x1c32920fd80 <col:9, col:14> 'const unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x1c32920fd50 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c32920fd10 <col:9> 'const unsigned char *' lvalue ParmVar 0x1c329211f00 'EM' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x1c32920fd68 <col:14> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c32920fd30 <col:14> 'int' lvalue Var 0x1c3292143a8 'maskedDBLen' 'int'
|   |-BinaryOperator 0x1c32920ff98 <line:93:5, col:36> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1c32920fdc0 <col:5> 'unsigned char *' lvalue Var 0x1c329214600 'DB' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1c32920ff80 <col:10, col:36> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1c32920ff40 <col:10, col:36> 'int'
|   |     |-ImplicitCastExpr 0x1c32920ff28 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c32920fee8 <col:10> 'int ()' Function 0x1c32920fe20 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x1c32920ff68 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c32920ff08 <col:25> 'int' lvalue Var 0x1c3292143a8 'maskedDBLen' 'int'
|   |-IfStmt 0x1c329210100 <line:94:5, line:97:5>
|   | |-BinaryOperator 0x1c329210090 <line:94:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c329210060 <.//openssl//file_jk/after\crypto\rsa\rsa_pss.c:94:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c32920ffb8 <col:9> 'unsigned char *' lvalue Var 0x1c329214600 'DB' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1c329210078 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1c329210040 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c329210018 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c32920ffd8 <col:26> 'int' 0
|   | `-CompoundStmt 0x1c3292100e8 <.//openssl//file_jk/after\crypto\rsa\rsa_pss.c:94:21, line:97:5>
|   |   `-GotoStmt 0x1c3292100d0 <line:96:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c329210350 <line:98:5, line:99:14>
|   | |-OpaqueValueExpr 0x1c329210338 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1c329210320 <col:9, col:14> 'err' 0x1c3292149b0
|   |-ForStmt 0x1c329210630 <line:100:5, line:101:22>
|   | |-BinaryOperator 0x1c3292103c8 <line:100:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1c329210368 <col:10> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   | | `-IntegerLiteral 0x1c3292103a0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1c329210458 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1c329210428 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c3292103e8 <col:17> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   | | `-ImplicitCastExpr 0x1c329210440 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c329210408 <col:21> 'int' lvalue Var 0x1c3292143a8 'maskedDBLen' 'int'
|   | |-UnaryOperator 0x1c329210498 <col:34, col:35> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1c329210478 <col:34> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   | `-CompoundAssignOperator 0x1c329210600 <line:101:9, col:22> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-ArraySubscriptExpr 0x1c329210520 <col:9, col:13> 'unsigned char' lvalue
|   |   | |-ImplicitCastExpr 0x1c3292104f0 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1c3292104b0 <col:9> 'unsigned char *' lvalue Var 0x1c329214600 'DB' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x1c329210508 <col:12> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1c3292104d0 <col:12> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   |   `-ImplicitCastExpr 0x1c3292105e8 <col:18, col:22> 'int' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1c3292105d0 <col:18, col:22> 'unsigned char' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x1c3292105b0 <col:18, col:22> 'const unsigned char' lvalue
|   |         |-ImplicitCastExpr 0x1c329210580 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1c329210540 <col:18> 'const unsigned char *' lvalue ParmVar 0x1c329211f00 'EM' 'const unsigned char *'
|   |         `-ImplicitCastExpr 0x1c329210598 <col:21> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1c329210560 <col:21> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   |-IfStmt 0x1c329210838 <line:102:5, line:103:37>
|   | |-ImplicitCastExpr 0x1c329210688 <line:102:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1c329210668 <col:9> 'int' lvalue Var 0x1c329214428 'MSBits' 'int'
|   | `-CompoundAssignOperator 0x1c329210808 <line:103:9, col:37> 'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-ArraySubscriptExpr 0x1c329210700 <col:9, col:13> 'unsigned char' lvalue
|   |   | |-ImplicitCastExpr 0x1c3292106e8 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1c3292106a0 <col:9> 'unsigned char *' lvalue Var 0x1c329214600 'DB' 'unsigned char *'
|   |   | `-IntegerLiteral 0x1c3292106c0 <col:12> 'int' 0
|   |   `-BinaryOperator 0x1c3292107e8 <col:18, col:37> 'int' '>>'
|   |     |-IntegerLiteral 0x1c329210720 <col:18> 'int' 255
|   |     `-ParenExpr 0x1c3292107c8 <col:26, col:37> 'int'
|   |       `-BinaryOperator 0x1c3292107a8 <col:27, col:31> 'int' '-'
|   |         |-IntegerLiteral 0x1c329210748 <col:27> 'int' 8
|   |         `-ImplicitCastExpr 0x1c329210790 <col:31> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1c329210770 <col:31> 'int' lvalue Var 0x1c329214428 'MSBits' 'int'
|   |-ForStmt 0x1c329210b18 <line:104:5, col:59>
|   | |-BinaryOperator 0x1c329210898 <col:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1c329210850 <col:10> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   | | `-IntegerLiteral 0x1c329210870 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1c329210ab8 <col:17, col:51> 'int' '&&'
|   | | |-BinaryOperator 0x1c3292109a0 <col:17, col:26> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1c329210988 <col:17, col:21> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1c329210970 <col:17, col:21> 'unsigned char' <LValueToRValue>
|   | | | |   `-ArraySubscriptExpr 0x1c329210928 <col:17, col:21> 'unsigned char' lvalue
|   | | | |     |-ImplicitCastExpr 0x1c3292108f8 <col:17> 'unsigned char *' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x1c3292108b8 <col:17> 'unsigned char *' lvalue Var 0x1c329214600 'DB' 'unsigned char *'
|   | | | |     `-ImplicitCastExpr 0x1c329210910 <col:20> 'int' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x1c3292108d8 <col:20> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   | | | `-IntegerLiteral 0x1c329210948 <col:26> 'int' 0
|   | | `-BinaryOperator 0x1c329210a98 <col:31, col:51> 'int' '<'
|   | |   |-ImplicitCastExpr 0x1c329210a80 <col:31> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c3292109c0 <col:31> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   | |   `-ParenExpr 0x1c329210a60 <col:35, col:51> 'int'
|   | |     `-BinaryOperator 0x1c329210a40 <col:36, col:50> 'int' '-'
|   | |       |-ImplicitCastExpr 0x1c329210a28 <col:36> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x1c3292109e0 <col:36> 'int' lvalue Var 0x1c3292143a8 'maskedDBLen' 'int'
|   | |       `-IntegerLiteral 0x1c329210a00 <col:50> 'int' 1
|   | |-UnaryOperator 0x1c329210af8 <col:54, col:55> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1c329210ad8 <col:54> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   | `-NullStmt 0x1c329210b10 <col:59>
|   |-IfStmt 0x1c329210ca8 <line:105:5, line:108:5>
|   | |-BinaryOperator 0x1c329210c38 <line:105:9, col:20> 'int' '!='
|   | | |-ImplicitCastExpr 0x1c329210c20 <col:9, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1c329210c08 <col:9, col:15> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1c329210bc0 <col:9, col:15> 'unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x1c329210ba8 <col:9> 'unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1c329210b50 <col:9> 'unsigned char *' lvalue Var 0x1c329214600 'DB' 'unsigned char *'
|   | | |     `-UnaryOperator 0x1c329210b90 <col:12, col:13> 'int' postfix '++'
|   | | |       `-DeclRefExpr 0x1c329210b70 <col:12> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   | | `-IntegerLiteral 0x1c329210be0 <col:20> 'int' 1
|   | `-CompoundStmt 0x1c329210c90 <col:25, line:108:5>
|   |   `-GotoStmt 0x1c329210c78 <line:107:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c329210eb8 <line:109:5, line:112:5>
|   | |-BinaryOperator 0x1c329210e48 <line:109:9, col:43> 'int' '&&'
|   | | |-BinaryOperator 0x1c329210d20 <col:9, col:17> 'int' '>='
|   | | | |-ImplicitCastExpr 0x1c329210d08 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1c329210cc0 <col:9> 'int' lvalue ParmVar 0x1c329211f80 'sLen' 'int'
|   | | | `-IntegerLiteral 0x1c329210ce0 <col:17> 'int' 0
|   | | `-BinaryOperator 0x1c329210e28 <col:22, col:43> 'int' '!='
|   | |   |-ParenExpr 0x1c329210dd0 <col:22, col:38> 'int'
|   | |   | `-BinaryOperator 0x1c329210db0 <col:23, col:37> 'int' '-'
|   | |   |   |-ImplicitCastExpr 0x1c329210d80 <col:23> 'int' <LValueToRValue>
|   | |   |   | `-DeclRefExpr 0x1c329210d40 <col:23> 'int' lvalue Var 0x1c3292143a8 'maskedDBLen' 'int'
|   | |   |   `-ImplicitCastExpr 0x1c329210d98 <col:37> 'int' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x1c329210d60 <col:37> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   | |   `-ImplicitCastExpr 0x1c329210e10 <col:43> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1c329210df0 <col:43> 'int' lvalue ParmVar 0x1c329211f80 'sLen' 'int'
|   | `-CompoundStmt 0x1c329210ea0 <col:49, line:112:5>
|   |   `-GotoStmt 0x1c329210e88 <line:111:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c3292132e8 <line:113:5, line:116:14>
|   | |-OpaqueValueExpr 0x1c3292132d0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1c3292132b8 <col:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c329213530 <line:117:5, line:120:5>
|   | |-BinaryOperator 0x1c329213370 <line:117:9, col:23> 'int' '-'
|   | | |-ImplicitCastExpr 0x1c329213340 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c329213300 <col:9> 'int' lvalue Var 0x1c3292143a8 'maskedDBLen' 'int'
|   | | `-ImplicitCastExpr 0x1c329213358 <col:23> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c329213320 <col:23> 'int' lvalue Var 0x1c3292141d0 'i' 'int'
|   | `-CompoundStmt 0x1c329213518 <col:26, line:120:5>
|   |   `-IfStmt 0x1c329213500 <line:118:9, line:119:18>
|   |     |-OpaqueValueExpr 0x1c3292134e8 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1c3292134d0 <col:13, col:18> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c329213710 <line:121:5, line:122:14>
|   | |-OpaqueValueExpr 0x1c3292136f8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1c3292136e0 <col:9, col:14> 'err' 0x1c3292149b0
|   |-IfStmt 0x1c329213b10 <line:123:5, line:127:15> has_else
|   | |-OpaqueValueExpr 0x1c329213af8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1c329213a78 <line:123:30, line:126:5>
|   | | `-BinaryOperator 0x1c329213a58 <line:125:9, col:15> 'int' '='
|   | |   |-DeclRefExpr 0x1c3292139f8 <col:9> 'int' lvalue Var 0x1c329214268 'ret' 'int'
|   | |   `-IntegerLiteral 0x1c329213a30 <col:15> 'int' 0
|   | `-BinaryOperator 0x1c329213ad8 <line:127:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x1c329213a90 <col:9> 'int' lvalue Var 0x1c329214268 'ret' 'int'
|   |   `-IntegerLiteral 0x1c329213ab0 <col:15> 'int' 1
|   |-LabelStmt 0x1c329213cc0 <line:129:2, line:130:20> 'err'
|   | `-CallExpr 0x1c329213c80 <col:5, col:20> 'int'
|   |   |-ImplicitCastExpr 0x1c329213c68 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c329213c28 <col:5> 'int ()' Function 0x1c329213b60 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x1c329213ca8 <col:18> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c329213c48 <col:18> 'unsigned char *' lvalue Var 0x1c329214600 'DB' 'unsigned char *'
|   `-ReturnStmt 0x1c329213e20 <line:133:5, col:12>
|     `-ImplicitCastExpr 0x1c329213e08 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c329213de8 <col:12> 'int' lvalue Var 0x1c329214268 'ret' 'int'
|-FunctionDecl 0x1c329213770 <line:123:9> col:9 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1c329213810 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1c329213878 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1c3292138e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1c329215280 <line:137:1, line:142:1> line:137:5 invalid RSA_padding_add_PKCS1_PSS 'int (int *, unsigned char *, const unsigned char *, const int *, int)'
| |-ParmVarDecl 0x1c329213f48 <col:31, col:36> col:36 invalid rsa 'int *'
| |-ParmVarDecl 0x1c329213fc8 <col:41, col:56> col:56 used EM 'unsigned char *'
| |-ParmVarDecl 0x1c329214048 <line:138:31, col:52> col:52 used mHash 'const unsigned char *'
| |-ParmVarDecl 0x1c3292140c8 <line:139:31, col:45> col:45 invalid Hash 'const int *'
| |-ParmVarDecl 0x1c329214148 <col:51, col:55> col:55 used sLen 'int'
| `-CompoundStmt 0x1c3292155a0 <line:140:1, line:142:1>
`-FunctionDecl 0x1c329215960 <line:144:1, line:249:1> line:144:5 invalid RSA_padding_add_PKCS1_PSS_mgf1 'int (int *, unsigned char *, const unsigned char *, const int *, const int *, int)'
  |-ParmVarDecl 0x1c3292155c8 <col:36, col:41> col:41 invalid rsa 'int *'
  |-ParmVarDecl 0x1c329215648 <col:46, col:61> col:61 used EM 'unsigned char *'
  |-ParmVarDecl 0x1c3292156c8 <line:145:36, col:57> col:57 used mHash 'const unsigned char *'
  |-ParmVarDecl 0x1c329215748 <line:146:36, col:50> col:50 invalid Hash 'const int *'
  |-ParmVarDecl 0x1c3292157c8 <col:56, col:70> col:70 invalid mgf1Hash 'const int *'
  |-ParmVarDecl 0x1c329215848 <line:147:36, col:40> col:40 used sLen 'int'
  `-CompoundStmt 0x1c3292187a8 <line:148:1, line:249:1>
    |-DeclStmt 0x1c329215ac8 <line:149:5, col:10>
    | `-VarDecl 0x1c329215a60 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x1c329215b88 <line:150:5, col:16>
    | `-VarDecl 0x1c329215af8 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1c329215b60 <col:15> 'int' 0
    |-DeclStmt 0x1c329215dc8 <line:151:5, col:41>
    | |-VarDecl 0x1c329215bb8 <col:5, col:9> col:9 used hLen 'int'
    | |-VarDecl 0x1c329215c38 <col:5, col:15> col:15 used maskedDBLen 'int'
    | |-VarDecl 0x1c329215cb8 <col:5, col:28> col:28 used MSBits 'int'
    | `-VarDecl 0x1c329215d38 <col:5, col:36> col:36 used emLen 'int'
    |-DeclStmt 0x1c329216020 <line:152:5, col:39>
    | |-VarDecl 0x1c329215df8 <col:5, col:20> col:20 used H 'unsigned char *'
    | |-VarDecl 0x1c329215e78 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\rsa\rsa_pss.c:152:24 used salt 'unsigned char *' cinit
    | | `-ImplicitCastExpr 0x1c329215f68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
    | |   `-ParenExpr 0x1c329215f48 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x1c329215f20 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x1c329215ee0 <col:26> 'int' 0
    | `-VarDecl 0x1c329215f98 <.//openssl//file_jk/after\crypto\rsa\rsa_pss.c:152:5, col:38> col:38 used p 'unsigned char *'
    |-IfStmt 0x1c3292162b8 <line:159:5, line:160:14>
    | |-BinaryOperator 0x1c329216230 <line:159:9, col:16> 'int' '<'
    | | |-ImplicitCastExpr 0x1c329216218 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c3292161a0 <col:9> 'int' lvalue Var 0x1c329215bb8 'hLen' 'int'
    | | `-IntegerLiteral 0x1c3292161f0 <col:16> 'int' 0
    | `-GotoStmt 0x1c3292162a0 <line:160:9, col:14> 'err' 0x1c329216250
    |-IfStmt 0x1c329216638 <line:167:5, line:174:5> has_else
    | |-BinaryOperator 0x1c329216360 <line:167:9, col:18> 'int' '=='
    | | |-ImplicitCastExpr 0x1c329216348 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c3292162d0 <col:9> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    | | `-UnaryOperator 0x1c329216330 <col:17, col:18> 'int' prefix '-'
    | |   `-IntegerLiteral 0x1c329216308 <col:18> 'int' 1
    | |-BinaryOperator 0x1c3292163d8 <line:168:9, col:16> 'int' '='
    | | |-DeclRefExpr 0x1c329216380 <col:9> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    | | `-ImplicitCastExpr 0x1c3292163c0 <col:16> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1c3292163a0 <col:16> 'int' lvalue Var 0x1c329215bb8 'hLen' 'int'
    | `-IfStmt 0x1c329216610 <line:169:10, line:174:5> has_else
    |   |-BinaryOperator 0x1c329216470 <line:169:14, col:23> 'int' '=='
    |   | |-ImplicitCastExpr 0x1c329216458 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1c3292163f8 <col:14> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    |   | `-UnaryOperator 0x1c329216440 <col:22, col:23> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x1c329216418 <col:23> 'int' 2
    |   |-BinaryOperator 0x1c3292164f0 <line:170:9, col:17> 'int' '='
    |   | |-DeclRefExpr 0x1c329216490 <col:9> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    |   | `-UnaryOperator 0x1c3292164d8 <col:16, col:17> 'int' prefix '-'
    |   |   `-IntegerLiteral 0x1c3292164b0 <col:17> 'int' 2
    |   `-IfStmt 0x1c3292165f8 <line:171:10, line:174:5>
    |     |-BinaryOperator 0x1c329216588 <line:171:14, col:22> 'int' '<'
    |     | |-ImplicitCastExpr 0x1c329216570 <col:14> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1c329216510 <col:14> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    |     | `-UnaryOperator 0x1c329216558 <col:21, col:22> 'int' prefix '-'
    |     |   `-IntegerLiteral 0x1c329216530 <col:22> 'int' 2
    |     `-CompoundStmt 0x1c3292165e0 <col:25, line:174:5>
    |       `-GotoStmt 0x1c3292165c8 <line:173:9, col:14> 'err' 0x1c329216250
    |-IfStmt 0x1c329216900 <line:178:5, line:181:5>
    | |-BinaryOperator 0x1c3292167c0 <line:178:9, col:19> 'int' '=='
    | | |-ImplicitCastExpr 0x1c3292167a8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c329216760 <col:9> 'int' lvalue Var 0x1c329215cb8 'MSBits' 'int'
    | | `-IntegerLiteral 0x1c329216780 <col:19> 'int' 0
    | `-CompoundStmt 0x1c3292168e0 <col:22, line:181:5>
    |   |-BinaryOperator 0x1c329216888 <line:179:9, col:17> 'unsigned char' '='
    |   | |-UnaryOperator 0x1c329216830 <col:9, col:12> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1c329216818 <col:10, col:12> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1c3292167e0 <col:10> 'unsigned char *' lvalue ParmVar 0x1c329215648 'EM' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x1c329216870 <col:17> 'unsigned char' <IntegralCast>
    |   |   `-IntegerLiteral 0x1c329216848 <col:17> 'int' 0
    |   `-UnaryOperator 0x1c3292168c8 <line:180:9, col:14> 'int' postfix '--'
    |     `-DeclRefExpr 0x1c3292168a8 <col:9> 'int' lvalue Var 0x1c329215d38 'emLen' 'int'
    |-IfStmt 0x1c329216a40 <line:182:5, line:186:5>
    | |-BinaryOperator 0x1c3292169d0 <line:182:9, col:24> 'int' '<'
    | | |-ImplicitCastExpr 0x1c3292169b8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c329216918 <col:9> 'int' lvalue Var 0x1c329215d38 'emLen' 'int'
    | | `-BinaryOperator 0x1c329216998 <col:17, col:24> 'int' '+'
    | |   |-ImplicitCastExpr 0x1c329216980 <col:17> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x1c329216938 <col:17> 'int' lvalue Var 0x1c329215bb8 'hLen' 'int'
    | |   `-IntegerLiteral 0x1c329216958 <col:24> 'int' 2
    | `-CompoundStmt 0x1c329216a28 <col:27, line:186:5>
    |   `-GotoStmt 0x1c329216a10 <line:185:9, col:14> 'err' 0x1c329216250
    |-IfStmt 0x1c329216db8 <line:187:5, line:193:5> has_else
    | |-BinaryOperator 0x1c329216ad0 <line:187:9, col:18> 'int' '=='
    | | |-ImplicitCastExpr 0x1c329216ab8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c329216a58 <col:9> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    | | `-UnaryOperator 0x1c329216aa0 <col:17, col:18> 'int' prefix '-'
    | |   `-IntegerLiteral 0x1c329216a78 <col:18> 'int' 2
    | |-CompoundStmt 0x1c329216c08 <col:21, line:189:5>
    | | `-BinaryOperator 0x1c329216be8 <line:188:9, col:31> 'int' '='
    | |   |-DeclRefExpr 0x1c329216af0 <col:9> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    | |   `-BinaryOperator 0x1c329216bc8 <col:16, col:31> 'int' '-'
    | |     |-BinaryOperator 0x1c329216b80 <col:16, col:24> 'int' '-'
    | |     | |-ImplicitCastExpr 0x1c329216b50 <col:16> 'int' <LValueToRValue>
    | |     | | `-DeclRefExpr 0x1c329216b10 <col:16> 'int' lvalue Var 0x1c329215d38 'emLen' 'int'
    | |     | `-ImplicitCastExpr 0x1c329216b68 <col:24> 'int' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x1c329216b30 <col:24> 'int' lvalue Var 0x1c329215bb8 'hLen' 'int'
    | |     `-IntegerLiteral 0x1c329216ba0 <col:31> 'int' 2
    | `-IfStmt 0x1c329216da0 <line:189:12, line:193:5>
    |   |-BinaryOperator 0x1c329216d30 <line:189:16, col:38> 'int' '>'
    |   | |-ImplicitCastExpr 0x1c329216d18 <col:16> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1c329216c20 <col:16> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    |   | `-BinaryOperator 0x1c329216cf8 <col:23, col:38> 'int' '-'
    |   |   |-BinaryOperator 0x1c329216cb0 <col:23, col:31> 'int' '-'
    |   |   | |-ImplicitCastExpr 0x1c329216c80 <col:23> 'int' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x1c329216c40 <col:23> 'int' lvalue Var 0x1c329215d38 'emLen' 'int'
    |   |   | `-ImplicitCastExpr 0x1c329216c98 <col:31> 'int' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1c329216c60 <col:31> 'int' lvalue Var 0x1c329215bb8 'hLen' 'int'
    |   |   `-IntegerLiteral 0x1c329216cd0 <col:38> 'int' 2
    |   `-CompoundStmt 0x1c329216d88 <col:41, line:193:5>
    |     `-GotoStmt 0x1c329216d70 <line:192:9, col:14> 'err' 0x1c329216250
    |-IfStmt 0x1c329217358 <line:194:5, line:203:5>
    | |-BinaryOperator 0x1c329216e40 <line:194:9, col:16> 'int' '>'
    | | |-ImplicitCastExpr 0x1c329216e28 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c329216de0 <col:9> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    | | `-IntegerLiteral 0x1c329216e00 <col:16> 'int' 0
    | `-CompoundStmt 0x1c329217330 <col:19, line:203:5>
    |   |-BinaryOperator 0x1c329216f48 <line:195:9, col:35> 'unsigned char *' '='
    |   | |-DeclRefExpr 0x1c329216e60 <col:9> 'unsigned char *' lvalue Var 0x1c329215e78 'salt' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x1c329216f30 <col:16, col:35> 'unsigned char *' <IntegralToPointer>
    |   |   `-CallExpr 0x1c329216ef0 <col:16, col:35> 'int'
    |   |     |-ImplicitCastExpr 0x1c329216ed8 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x1c329216e98 <col:16> 'int ()' Function 0x1c32920fe20 'OPENSSL_malloc' 'int ()'
    |   |     `-ImplicitCastExpr 0x1c329216f18 <col:31> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1c329216eb8 <col:31> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    |   |-IfStmt 0x1c3292170b0 <line:196:9, line:200:9>
    |   | |-BinaryOperator 0x1c329217040 <line:196:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
    |   | | |-ImplicitCastExpr 0x1c329217010 <.//openssl//file_jk/after\crypto\rsa\rsa_pss.c:196:13> 'unsigned char *' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1c329216f68 <col:13> 'unsigned char *' lvalue Var 0x1c329215e78 'salt' 'unsigned char *'
    |   | | `-ImplicitCastExpr 0x1c329217028 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
    |   | |   `-ParenExpr 0x1c329216ff0 <col:17, col:27> 'void *'
    |   | |     `-CStyleCastExpr 0x1c329216fc8 <col:18, col:26> 'void *' <NullToPointer>
    |   | |       `-IntegerLiteral 0x1c329216f88 <col:26> 'int' 0
    |   | `-CompoundStmt 0x1c329217098 <.//openssl//file_jk/after\crypto\rsa\rsa_pss.c:196:27, line:200:9>
    |   |   `-GotoStmt 0x1c329217080 <line:199:13, col:18> 'err' 0x1c329216250
    |   `-IfStmt 0x1c329217318 <line:201:9, line:202:18>
    |     |-BinaryOperator 0x1c3292172e0 <line:201:13, col:39> 'int' '<='
    |     | |-CallExpr 0x1c329217258 <col:13, col:34> 'int'
    |     | | |-ImplicitCastExpr 0x1c329217240 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |     | | | `-DeclRefExpr 0x1c3292171b8 <col:13> 'int ()' Function 0x1c3292170f0 'RAND_bytes' 'int ()'
    |     | | |-ImplicitCastExpr 0x1c329217288 <col:24> 'unsigned char *' <LValueToRValue>
    |     | | | `-DeclRefExpr 0x1c329217200 <col:24> 'unsigned char *' lvalue Var 0x1c329215e78 'salt' 'unsigned char *'
    |     | | `-ImplicitCastExpr 0x1c3292172a0 <col:30> 'int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x1c329217220 <col:30> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    |     | `-IntegerLiteral 0x1c3292172b8 <col:39> 'int' 0
    |     `-GotoStmt 0x1c329217300 <line:202:13, col:18> 'err' 0x1c329216250
    |-BinaryOperator 0x1c329217480 <line:204:5, col:34> 'int' '='
    | |-DeclRefExpr 0x1c329217370 <col:5> 'int' lvalue Var 0x1c329215c38 'maskedDBLen' 'int'
    | `-BinaryOperator 0x1c329217460 <col:19, col:34> 'int' '-'
    |   |-BinaryOperator 0x1c329217418 <col:19, col:27> 'int' '-'
    |   | |-ImplicitCastExpr 0x1c3292173e8 <col:19> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1c3292173a8 <col:19> 'int' lvalue Var 0x1c329215d38 'emLen' 'int'
    |   | `-ImplicitCastExpr 0x1c329217400 <col:27> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1c3292173c8 <col:27> 'int' lvalue Var 0x1c329215bb8 'hLen' 'int'
    |   `-IntegerLiteral 0x1c329217438 <col:34> 'int' 1
    |-BinaryOperator 0x1c329217568 <line:205:5, col:14> 'unsigned char *' '='
    | |-DeclRefExpr 0x1c3292174a0 <col:5> 'unsigned char *' lvalue Var 0x1c329215df8 'H' 'unsigned char *'
    | `-BinaryOperator 0x1c329217548 <col:9, col:14> 'unsigned char *' '+'
    |   |-ImplicitCastExpr 0x1c329217518 <col:9> 'unsigned char *' <LValueToRValue>
    |   | `-DeclRefExpr 0x1c3292174d8 <col:9> 'unsigned char *' lvalue ParmVar 0x1c329215648 'EM' 'unsigned char *'
    |   `-ImplicitCastExpr 0x1c329217530 <col:14> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1c3292174f8 <col:14> 'int' lvalue Var 0x1c329215c38 'maskedDBLen' 'int'
    |-IfStmt 0x1c329217698 <line:207:5, line:208:14>
    | |-OpaqueValueExpr 0x1c329217680 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1c329217668 <col:9, col:14> 'err' 0x1c329216250
    |-IfStmt 0x1c3292178a0 <line:209:5, line:212:14>
    | |-OpaqueValueExpr 0x1c329217888 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1c329217870 <col:9, col:14> 'err' 0x1c329216250
    |-IfStmt 0x1c329217968 <line:213:5, line:214:14>
    | |-OpaqueValueExpr 0x1c329217950 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1c329217938 <col:9, col:14> 'err' 0x1c329216250
    |-IfStmt 0x1c329217a78 <line:215:5, line:216:14>
    | |-OpaqueValueExpr 0x1c329217a60 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1c329217a48 <col:9, col:14> 'err' 0x1c329216250
    |-IfStmt 0x1c329217b60 <line:219:5, line:220:14>
    | |-OpaqueValueExpr 0x1c329217b48 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1c329217b30 <col:9, col:14> 'err' 0x1c329216250
    |-BinaryOperator 0x1c329217be8 <line:222:5, col:9> 'unsigned char *' '='
    | |-DeclRefExpr 0x1c329217b78 <col:5> 'unsigned char *' lvalue Var 0x1c329215f98 'p' 'unsigned char *'
    | `-ImplicitCastExpr 0x1c329217bd0 <col:9> 'unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1c329217bb0 <col:9> 'unsigned char *' lvalue ParmVar 0x1c329215648 'EM' 'unsigned char *'
    |-CompoundAssignOperator 0x1c329217d58 <line:228:5, col:32> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
    | |-DeclRefExpr 0x1c329217c08 <col:5> 'unsigned char *' lvalue Var 0x1c329215f98 'p' 'unsigned char *'
    | `-BinaryOperator 0x1c329217d38 <col:10, col:32> 'int' '-'
    |   |-BinaryOperator 0x1c329217cf0 <col:10, col:25> 'int' '-'
    |   | |-BinaryOperator 0x1c329217c98 <col:10, col:18> 'int' '-'
    |   | | |-ImplicitCastExpr 0x1c329217c68 <col:10> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1c329217c28 <col:10> 'int' lvalue Var 0x1c329215d38 'emLen' 'int'
    |   | | `-ImplicitCastExpr 0x1c329217c80 <col:18> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x1c329217c48 <col:18> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    |   | `-ImplicitCastExpr 0x1c329217cd8 <col:25> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1c329217cb8 <col:25> 'int' lvalue Var 0x1c329215bb8 'hLen' 'int'
    |   `-IntegerLiteral 0x1c329217d10 <col:32> 'int' 2
    |-CompoundAssignOperator 0x1c329217e00 <line:229:5, col:13> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-UnaryOperator 0x1c329217dc0 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x1c329217da8 <col:6, col:7> 'unsigned char *' postfix '++'
    | |   `-DeclRefExpr 0x1c329217d88 <col:6> 'unsigned char *' lvalue Var 0x1c329215f98 'p' 'unsigned char *'
    | `-IntegerLiteral 0x1c329217dd8 <col:13> 'int' 1
    |-IfStmt 0x1c329218188 <line:230:5, line:233:5>
    | |-BinaryOperator 0x1c329217e90 <line:230:9, col:16> 'int' '>'
    | | |-ImplicitCastExpr 0x1c329217e78 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c329217e30 <col:9> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    | | `-IntegerLiteral 0x1c329217e50 <col:16> 'int' 0
    | `-CompoundStmt 0x1c329218170 <col:19, line:233:5>
    |   `-ForStmt 0x1c329218138 <line:231:9, line:232:27>
    |     |-BinaryOperator 0x1c329217f10 <line:231:14, col:18> 'int' '='
    |     | |-DeclRefExpr 0x1c329217eb0 <col:14> 'int' lvalue Var 0x1c329215a60 'i' 'int'
    |     | `-IntegerLiteral 0x1c329217ee8 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1c329217fa0 <col:21, col:25> 'int' '<'
    |     | |-ImplicitCastExpr 0x1c329217f70 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1c329217f30 <col:21> 'int' lvalue Var 0x1c329215a60 'i' 'int'
    |     | `-ImplicitCastExpr 0x1c329217f88 <col:25> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1c329217f50 <col:25> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    |     |-UnaryOperator 0x1c329217fe0 <col:31, col:32> 'int' postfix '++'
    |     | `-DeclRefExpr 0x1c329217fc0 <col:31> 'int' lvalue Var 0x1c329215a60 'i' 'int'
    |     `-CompoundAssignOperator 0x1c329218108 <line:232:13, col:27> 'unsigned char' '^=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |-UnaryOperator 0x1c329218030 <col:13, col:15> 'unsigned char' lvalue prefix '*' cannot overflow
    |       | `-UnaryOperator 0x1c329218018 <col:14, col:15> 'unsigned char *' postfix '++'
    |       |   `-DeclRefExpr 0x1c329217ff8 <col:14> 'unsigned char *' lvalue Var 0x1c329215f98 'p' 'unsigned char *'
    |       `-ImplicitCastExpr 0x1c3292180f0 <col:21, col:27> 'int' <IntegralCast>
    |         `-ImplicitCastExpr 0x1c3292180d8 <col:21, col:27> 'unsigned char' <LValueToRValue>
    |           `-ArraySubscriptExpr 0x1c3292180b8 <col:21, col:27> 'unsigned char' lvalue
    |             |-ImplicitCastExpr 0x1c329218088 <col:21> 'unsigned char *' <LValueToRValue>
    |             | `-DeclRefExpr 0x1c329218048 <col:21> 'unsigned char *' lvalue Var 0x1c329215e78 'salt' 'unsigned char *'
    |             `-ImplicitCastExpr 0x1c3292180a0 <col:26> 'int' <LValueToRValue>
    |               `-DeclRefExpr 0x1c329218068 <col:26> 'int' lvalue Var 0x1c329215a60 'i' 'int'
    |-IfStmt 0x1c329218388 <line:234:5, line:235:37>
    | |-ImplicitCastExpr 0x1c3292181c0 <line:234:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1c3292181a0 <col:9> 'int' lvalue Var 0x1c329215cb8 'MSBits' 'int'
    | `-CompoundAssignOperator 0x1c329218358 <line:235:9, col:37> 'unsigned char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-ArraySubscriptExpr 0x1c329218250 <col:9, col:13> 'unsigned char' lvalue
    |   | |-ImplicitCastExpr 0x1c329218238 <col:9> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1c3292181d8 <col:9> 'unsigned char *' lvalue ParmVar 0x1c329215648 'EM' 'unsigned char *'
    |   | `-IntegerLiteral 0x1c329218210 <col:12> 'int' 0
    |   `-BinaryOperator 0x1c329218338 <col:18, col:37> 'int' '>>'
    |     |-IntegerLiteral 0x1c329218270 <col:18> 'int' 255
    |     `-ParenExpr 0x1c329218318 <col:26, col:37> 'int'
    |       `-BinaryOperator 0x1c3292182f8 <col:27, col:31> 'int' '-'
    |         |-IntegerLiteral 0x1c329218298 <col:27> 'int' 8
    |         `-ImplicitCastExpr 0x1c3292182e0 <col:31> 'int' <LValueToRValue>
    |           `-DeclRefExpr 0x1c3292182c0 <col:31> 'int' lvalue Var 0x1c329215cb8 'MSBits' 'int'
    |-BinaryOperator 0x1c3292184b8 <line:239:5, col:21> 'unsigned char' '='
    | |-ArraySubscriptExpr 0x1c329218458 <col:5, col:17> 'unsigned char' lvalue
    | | |-ImplicitCastExpr 0x1c329218440 <col:5> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c3292183a0 <col:5> 'unsigned char *' lvalue ParmVar 0x1c329215648 'EM' 'unsigned char *'
    | | `-BinaryOperator 0x1c329218420 <col:8, col:16> 'int' '-'
    | |   |-ImplicitCastExpr 0x1c329218408 <col:8> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x1c3292183c0 <col:8> 'int' lvalue Var 0x1c329215d38 'emLen' 'int'
    | |   `-IntegerLiteral 0x1c3292183e0 <col:16> 'int' 1
    | `-ImplicitCastExpr 0x1c3292184a0 <col:21> 'unsigned char' <IntegralCast>
    |   `-IntegerLiteral 0x1c329218478 <col:21> 'int' 188
    |-BinaryOperator 0x1c329218538 <line:241:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1c3292184d8 <col:5> 'int' lvalue Var 0x1c329215af8 'ret' 'int'
    | `-IntegerLiteral 0x1c329218510 <col:11> 'int' 1
    |-LabelStmt 0x1c329218580 <line:243:2, col:5> 'err'
    | `-NullStmt 0x1c329218578 <col:5>
    |-CallExpr 0x1c329218700 <line:245:5, col:34> 'int'
    | |-ImplicitCastExpr 0x1c3292186e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1c329218688 <col:5> 'int ()' Function 0x1c3292185c0 'OPENSSL_clear_free' 'int ()'
    | |-ImplicitCastExpr 0x1c329218730 <col:24> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x1c3292186a8 <col:24> 'unsigned char *' lvalue Var 0x1c329215e78 'salt' 'unsigned char *'
    | `-ImplicitCastExpr 0x1c329218748 <col:30> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x1c3292186c8 <col:30> 'int' lvalue ParmVar 0x1c329215848 'sLen' 'int'
    `-ReturnStmt 0x1c329218798 <line:247:5, col:12>
      `-ImplicitCastExpr 0x1c329218780 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1c329218760 <col:12> 'int' lvalue Var 0x1c329215af8 'ret' 'int'
