TranslationUnitDecl 0x23b108a5388 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x23b108a5c20 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x23b108a5920 '__int128'
|-TypedefDecl 0x23b108a5c90 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x23b108a5940 'unsigned __int128'
|-TypedefDecl 0x23b108a5fc8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x23b108a5d80 'struct __NSConstantString_tag'
|   `-Record 0x23b108a5ce8 '__NSConstantString_tag'
|-TypedefDecl 0x23b108a6038 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x23b108a5560 'unsigned long long'
|-TypedefDecl 0x23b108a60d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x23b108a6090 'char *'
|   `-BuiltinType 0x23b108a5420 'char'
|-TypedefDecl 0x23b108a6140 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x23b108a6090 'char *'
|   `-BuiltinType 0x23b108a5420 'char'
|-FunctionDecl 0x23b108a62b0 <.//openssl//file_jk/after\crypto\threads_none.c:14:1, line:23:1> line:14:16 invalid CRYPTO_THREAD_lock_new 'int *(void)'
| `-CompoundStmt 0x23b109096b0 <line:15:1, line:23:1>
|-FunctionDecl 0x23b109097a0 <line:25:1, line:29:1> line:25:5 invalid CRYPTO_THREAD_read_lock 'int (int *)'
| |-ParmVarDecl 0x23b109096d8 <col:29, col:44> col:44 invalid lock 'int *'
| `-CompoundStmt 0x23b109099d0 <line:26:1, line:29:1>
|   `-ReturnStmt 0x23b109099c0 <line:28:5, col:12>
|     `-IntegerLiteral 0x23b10909998 <col:12> 'int' 1
|-FunctionDecl 0x23b10909a98 <line:31:1, line:35:1> line:31:5 invalid CRYPTO_THREAD_write_lock 'int (int *)'
| |-ParmVarDecl 0x23b10909a00 <col:30, col:45> col:45 invalid lock 'int *'
| `-CompoundStmt 0x23b10909bd8 <line:32:1, line:35:1>
|   `-ReturnStmt 0x23b10909bc8 <line:34:5, col:12>
|     `-IntegerLiteral 0x23b10909ba0 <col:12> 'int' 1
|-FunctionDecl 0x23b10909ca0 <line:37:1, line:41:1> line:37:5 invalid CRYPTO_THREAD_unlock 'int (int *)'
| |-ParmVarDecl 0x23b10909c08 <col:26, col:41> col:41 invalid lock 'int *'
| `-CompoundStmt 0x23b10909de0 <line:38:1, line:41:1>
|   `-ReturnStmt 0x23b10909dd0 <line:40:5, col:12>
|     `-IntegerLiteral 0x23b10909da8 <col:12> 'int' 1
|-FunctionDecl 0x23b10909ed8 <line:43:1, line:51:1> line:43:6 invalid CRYPTO_THREAD_lock_free 'void (int *)'
| |-ParmVarDecl 0x23b10909e10 <col:30, col:45> col:45 invalid lock 'int *'
| `-CompoundStmt 0x23b1090a120 <col:51, line:51:1>
|   |-IfStmt 0x23b10909fc0 <line:44:5, line:45:9>
|   | |-OpaqueValueExpr 0x23b10909fa8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23b10909f98 <col:9>
|   `-ReturnStmt 0x23b1090a110 <line:50:5>
|-FunctionDecl 0x23b10907440 <line:53:1, line:62:1> line:53:5 invalid CRYPTO_THREAD_run_once 'int (int *, void (*)(void))'
| |-ParmVarDecl 0x23b1090a158 <col:28, col:41> col:41 invalid once 'int *'
| |-ParmVarDecl 0x23b1090a328 <col:47, col:64> col:54 used init 'void (*)(void)'
| `-CompoundStmt 0x23b10907668 <line:54:1, line:62:1>
|   |-IfStmt 0x23b10907580 <line:55:5, line:56:16>
|   | |-OpaqueValueExpr 0x23b10907568 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23b10907558 <col:9, col:16>
|   |   `-IntegerLiteral 0x23b10907530 <col:16> 'int' 1
|   |-CallExpr 0x23b109075e8 <line:58:5, col:10> 'void'
|   | `-ImplicitCastExpr 0x23b109075d0 <col:5> 'void (*)(void)' <LValueToRValue>
|   |   `-DeclRefExpr 0x23b10907598 <col:5> 'void (*)(void)' lvalue ParmVar 0x23b1090a328 'init' 'void (*)(void)'
|   `-ReturnStmt 0x23b10907658 <line:61:5, col:12>
|     `-IntegerLiteral 0x23b10907630 <col:12> 'int' 1
|-VarDecl 0x23b10907730 <line:66:1, col:70> col:14 used thread_local_storage 'void *[256]' static
|-FunctionDecl 0x23b10907ac0 <line:68:1, line:80:1> line:68:5 invalid CRYPTO_THREAD_init_local 'int (int *, void (*)(void *))'
| |-ParmVarDecl 0x23b109077c8 <col:30, col:51> col:51 invalid key 'int *'
| |-ParmVarDecl 0x23b109079a0 <col:56, col:78> col:63 cleanup 'void (*)(void *)'
| `-CompoundStmt 0x23b10907df0 <line:69:1, line:80:1>
|   |-DeclStmt 0x23b10907c48 <line:70:5, col:45>
|   | `-VarDecl 0x23b10907ba0 <col:5, col:44> col:25 used thread_local_key 'unsigned int' static cinit
|   |   `-ImplicitCastExpr 0x23b10907c30 <col:44> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x23b10907c08 <col:44> 'int' 0
|   |-IfStmt 0x23b10907d48 <line:72:5, line:73:16>
|   | |-BinaryOperator 0x23b10907cf0 <line:72:9, line:64:45> 'int' '>='
|   | | |-ImplicitCastExpr 0x23b10907cc0 <line:72:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23b10907c60 <col:9> 'unsigned int' lvalue Var 0x23b10907ba0 'thread_local_key' 'unsigned int'
|   | | `-ImplicitCastExpr 0x23b10907cd8 <line:64:45> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x23b10907c98 <col:45> 'int' 256
|   | `-ReturnStmt 0x23b10907d38 <line:73:9, col:16>
|   |   `-IntegerLiteral 0x23b10907d10 <col:16> 'int' 0
|   `-ReturnStmt 0x23b10907de0 <line:79:5, col:12>
|     `-IntegerLiteral 0x23b10907db8 <col:12> 'int' 1
|-FunctionDecl 0x23b10907f00 <line:82:1, line:88:1> line:82:7 invalid CRYPTO_THREAD_get_local 'void *(int *)'
| |-ParmVarDecl 0x23b10907e30 <col:31, col:52> col:52 invalid key 'int *'
| `-CompoundStmt 0x23b10908008 <line:83:1, line:88:1>
|-FunctionDecl 0x23b10908190 <line:90:1, line:98:1> line:90:5 invalid CRYPTO_THREAD_set_local 'int (int *, void *)'
| |-ParmVarDecl 0x23b10908030 <col:29, col:50> col:50 invalid key 'int *'
| |-ParmVarDecl 0x23b109080b0 <col:55, col:61> col:61 used val 'void *'
| `-CompoundStmt 0x23b10908378 <line:91:1, line:98:1>
|   |-IfStmt 0x23b109082d0 <line:92:5, line:93:16>
|   | |-OpaqueValueExpr 0x23b109082b8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23b109082a8 <col:9, col:16>
|   |   `-IntegerLiteral 0x23b10908280 <col:16> 'int' 0
|   `-ReturnStmt 0x23b10908368 <line:97:5, col:12>
|     `-IntegerLiteral 0x23b10908340 <col:12> 'int' 1
|-FunctionDecl 0x23b1090f4f0 <line:100:1, line:104:1> line:100:5 invalid CRYPTO_THREAD_cleanup_local 'int (int *)'
| |-ParmVarDecl 0x23b109083b0 <col:33, col:54> col:54 invalid key 'int *'
| `-CompoundStmt 0x23b1090f658 <line:101:1, line:104:1>
|   `-ReturnStmt 0x23b1090f648 <line:103:5, col:12>
|     `-IntegerLiteral 0x23b1090f620 <col:12> 'int' 1
|-FunctionDecl 0x23b1090f740 <line:106:1, line:109:1> line:106:18 invalid CRYPTO_THREAD_get_current_id 'int (void)'
| `-CompoundStmt 0x23b1090f830 <line:107:1, line:109:1>
|   `-ReturnStmt 0x23b1090f820 <line:108:5, col:12>
|     `-IntegerLiteral 0x23b1090f7f8 <col:12> 'int' 0
|-FunctionDecl 0x23b1090f9c0 <line:111:1, line:114:1> line:111:5 invalid CRYPTO_THREAD_compare_id 'int (int, int)'
| |-ParmVarDecl 0x23b1090f860 <col:30, col:47> col:47 invalid a 'int'
| |-ParmVarDecl 0x23b1090f8e0 <col:50, col:67> col:67 invalid b 'int'
| `-CompoundStmt 0x23b1090fa88 <line:112:1, line:114:1>
`-FunctionDecl 0x23b1090fd30 <line:116:1, line:122:1> line:116:5 invalid CRYPTO_atomic_add 'int (int *, int, int *, int *)'
  |-ParmVarDecl 0x23b1090fab0 <col:23, col:28> col:28 used val 'int *'
  |-ParmVarDecl 0x23b1090fb30 <col:33, col:37> col:37 used amount 'int'
  |-ParmVarDecl 0x23b1090fbb0 <col:45, col:50> col:50 used ret 'int *'
  |-ParmVarDecl 0x23b1090fc30 <col:55, col:70> col:70 invalid lock 'int *'
  `-CompoundStmt 0x23b10910018 <line:117:1, line:122:1>
    |-CompoundAssignOperator 0x23b1090fec0 <line:118:5, col:13> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | |-UnaryOperator 0x23b1090fe58 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x23b1090fe40 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x23b1090fe08 <col:6> 'int *' lvalue ParmVar 0x23b1090fab0 'val' 'int *'
    | `-ImplicitCastExpr 0x23b1090fea8 <col:13> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x23b1090fe70 <col:13> 'int' lvalue ParmVar 0x23b1090fb30 'amount' 'int'
    |-BinaryOperator 0x23b1090ffc0 <line:119:5, col:14> 'int' '='
    | |-UnaryOperator 0x23b1090ff40 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x23b1090ff28 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x23b1090fef0 <col:6> 'int *' lvalue ParmVar 0x23b1090fbb0 'ret' 'int *'
    | `-ImplicitCastExpr 0x23b1090ffa8 <col:13, col:14> 'int' <LValueToRValue>
    |   `-UnaryOperator 0x23b1090ff90 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x23b1090ff78 <col:14> 'int *' <LValueToRValue>
    |       `-DeclRefExpr 0x23b1090ff58 <col:14> 'int *' lvalue ParmVar 0x23b1090fab0 'val' 'int *'
    `-ReturnStmt 0x23b10910008 <line:121:5, col:12>
      `-IntegerLiteral 0x23b1090ffe0 <col:12> 'int' 1
