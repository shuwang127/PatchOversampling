TranslationUnitDecl 0x297c2346b98 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x297c2347430 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x297c2347130 '__int128'
|-TypedefDecl 0x297c23474a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x297c2347150 'unsigned __int128'
|-TypedefDecl 0x297c23477d8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x297c2347590 'struct __NSConstantString_tag'
|   `-Record 0x297c23474f8 '__NSConstantString_tag'
|-TypedefDecl 0x297c2347848 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x297c2346d70 'unsigned long long'
|-TypedefDecl 0x297c23478e0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x297c23478a0 'char *'
|   `-BuiltinType 0x297c2346c30 'char'
|-TypedefDecl 0x297c2347950 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x297c23478a0 'char *'
|   `-BuiltinType 0x297c2346c30 'char'
|-RecordDecl 0x297c23479a8 <.//openssl//file_jk/after\crypto\ts/ts_lcl.h:15:1, line:18:1> line:15:8 invalid struct TS_msg_imprint_st definition
| |-FieldDecl 0x297c2347aa0 <line:16:5, col:17> col:17 invalid hash_algo 'int *'
| `-FieldDecl 0x297c2347b10 <line:17:5, col:24> col:24 invalid hashed_msg 'int *'
|-RecordDecl 0x297c3cf05f0 <line:25:1, line:29:1> line:25:8 invalid struct TS_resp_st definition
| |-FieldDecl 0x297c3cf06c8 <line:26:5, col:21> col:21 invalid status_info 'int *'
| |-FieldDecl 0x297c3cf0738 <line:27:5, col:12> col:12 invalid token 'int *'
| `-FieldDecl 0x297c3cf07a8 <line:28:5, col:18> col:18 invalid tst_info 'int *'
|-RecordDecl 0x297c3cf0800 <line:42:1, line:49:1> line:42:8 invalid struct TS_req_st definition
| |-FieldDecl 0x297c3cf08d8 <line:43:5, col:19> col:19 invalid version 'int *'
| |-FieldDecl 0x297c3cf0948 <line:44:5, col:21> col:21 invalid msg_imprint 'int *'
| |-FieldDecl 0x297c3cf09b8 <line:45:5, col:18> col:18 invalid policy_id 'int *'
| |-FieldDecl 0x297c3cf0a28 <line:46:5, col:19> col:19 invalid nonce 'int *'
| |-FieldDecl 0x297c3cf0a98 <line:47:5, col:18> col:18 invalid cert_req 'int'
| `-FieldDecl 0x297c3cf0b40 <line:48:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
|-RecordDecl 0x297c3cf0b98 <line:57:1, line:61:1> line:57:8 invalid struct TS_accuracy_st definition
| |-FieldDecl 0x297c3cf0c68 <line:58:5, col:19> col:19 invalid seconds 'int *'
| |-FieldDecl 0x297c3cf0cd8 <line:59:5, col:19> col:19 invalid millis 'int *'
| `-FieldDecl 0x297c3cf0d48 <line:60:5, col:19> col:19 invalid micros 'int *'
|-RecordDecl 0x297c3cf0da0 <line:82:1, line:93:1> line:82:8 invalid struct TS_tst_info_st definition
| |-FieldDecl 0x297c3cf0e78 <line:83:5, col:19> col:19 invalid version 'int *'
| |-FieldDecl 0x297c3cf0ee8 <line:84:5, col:18> col:18 invalid policy_id 'int *'
| |-FieldDecl 0x297c3cf0f58 <line:85:5, col:21> col:21 invalid msg_imprint 'int *'
| |-FieldDecl 0x297c3cf0fc8 <line:86:5, col:19> col:19 invalid serial 'int *'
| |-FieldDecl 0x297c3cf1038 <line:87:5, col:27> col:27 invalid time 'int *'
| |-FieldDecl 0x297c3cf10a8 <line:88:5, col:18> col:18 invalid accuracy 'int *'
| |-FieldDecl 0x297c3cf1118 <line:89:5, col:18> col:18 invalid ordering 'int'
| |-FieldDecl 0x297c3cf1188 <line:90:5, col:19> col:19 invalid nonce 'int *'
| |-FieldDecl 0x297c3cf11f8 <line:91:5, col:19> col:19 invalid tsa 'int *'
| `-FieldDecl 0x297c3cf1278 <line:92:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
|-RecordDecl 0x297c3cf12d0 <line:95:1, line:99:1> line:95:8 invalid struct TS_status_info_st definition
| |-FieldDecl 0x297c3cf13a8 <line:96:5, col:19> col:19 invalid status 'int *'
| |-FieldDecl 0x297c3cf1428 <line:97:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
| `-FieldDecl 0x297c3cf1498 <line:98:5, col:22> col:22 invalid failure_info 'int *'
|-RecordDecl 0x297c3cf14f0 <line:107:1, line:110:1> line:107:8 invalid struct ESS_issuer_serial definition
| |-FieldDecl 0x297c3cf1600 <line:108:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
| `-FieldDecl 0x297c3cf1670 <line:109:5, col:19> col:19 invalid serial 'int *'
|-RecordDecl 0x297c3cf16c8 <line:118:1, line:121:1> line:118:8 invalid struct ESS_cert_id definition
| |-FieldDecl 0x297c3cf1798 <line:119:5, col:24> col:24 invalid hash 'int *'
| `-FieldDecl 0x297c3cf1808 <line:120:5, col:24> col:24 invalid issuer_serial 'int *'
|-RecordDecl 0x297c3cf1860 <line:129:1, line:132:1> line:129:8 invalid struct ESS_signing_cert definition
| `-FieldDecl 0x297c3cf1948 <line:130:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
|-RecordDecl 0x297c3cf1a20 <line:135:1, line:160:1> line:135:8 invalid struct TS_resp_ctx definition
| |-FieldDecl 0x297c3cf1af8 <line:136:5, col:11> col:11 invalid signer_cert 'int *'
| |-FieldDecl 0x297c3cf1b68 <line:137:5, col:15> col:15 invalid signer_key 'int *'
| |-FieldDecl 0x297c3cf1bd8 <line:138:5, col:19> col:19 invalid signer_md 'const int *'
| |-FieldDecl 0x297c3cf1c58 <line:139:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
| |-FieldDecl 0x297c3cf1d48 <line:141:5, col:18> col:18 invalid default_policy 'int *'
| |-FieldDecl 0x297c3cf1e38 <line:143:5, col:19> col:19 invalid seconds 'int *'
| |-FieldDecl 0x297c3cf1ea8 <line:144:5, col:19> col:19 invalid millis 'int *'
| |-FieldDecl 0x297c3cf1f18 <line:145:5, col:19> col:19 invalid micros 'int *'
| |-FieldDecl 0x297c3cf1f88 <line:146:5, col:14> col:14 clock_precision_digits 'unsigned int'
| |-FieldDecl 0x297c3cf1ff8 <line:148:5, col:14> col:14 flags 'unsigned int'
| |-FieldDecl 0x297c3cf2068 <line:150:5, col:18> col:18 invalid serial_cb 'int'
| |-FieldDecl 0x297c3cf20d8 <line:151:5, col:11> col:11 serial_cb_data 'void *'
| |-FieldDecl 0x297c3cf2148 <line:152:5, col:16> col:16 invalid time_cb 'int'
| |-FieldDecl 0x297c3cf21b8 <line:153:5, col:11> col:11 time_cb_data 'void *'
| |-FieldDecl 0x297c3cf2228 <line:154:5, col:21> col:21 invalid extension_cb 'int'
| |-FieldDecl 0x297c3cf2298 <line:155:5, col:11> col:11 extension_cb_data 'void *'
| |-FieldDecl 0x297c3cf2308 <line:157:5, col:13> col:13 invalid request 'int *'
| |-FieldDecl 0x297c3cf2378 <line:158:5, col:14> col:14 invalid response 'int *'
| `-FieldDecl 0x297c3cf23e8 <line:159:5, col:18> col:18 invalid tst_info 'int *'
|-RecordDecl 0x297c3cf2440 <line:162:1, line:183:1> line:162:8 invalid struct TS_verify_ctx definition
| |-FieldDecl 0x297c3cf2518 <line:164:5, col:14> col:14 flags 'unsigned int'
| |-FieldDecl 0x297c3cf2588 <line:166:5, col:17> col:17 invalid store 'int *'
| |-FieldDecl 0x297c3ceb5c8 <line:167:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
| |-FieldDecl 0x297c3ceb638 <line:169:5, col:18> col:18 invalid policy 'int *'
| |-FieldDecl 0x297c3ceb6a8 <line:174:5, col:17> col:17 invalid md_alg 'int *'
| |-FieldDecl 0x297c3ceb740 <line:175:5, col:20> col:20 imprint 'unsigned char *'
| |-FieldDecl 0x297c3ceb7b0 <line:176:5, col:14> col:14 imprint_len 'unsigned int'
| |-FieldDecl 0x297c3ceb820 <line:178:5, col:10> col:10 invalid data 'int *'
| |-FieldDecl 0x297c3ceb890 <line:180:5, col:19> col:19 invalid nonce 'int *'
| `-FieldDecl 0x297c3ceb900 <line:182:5, col:19> col:19 invalid tsa_name 'int *'
|-FunctionDecl 0x297c3cebbb0 <.//openssl//file_jk/after\crypto\ts\ts_rsp_sign.c:22:1, col:64> col:22 invalid def_serial_cb 'int *(struct TS_resp_ctx *, void *)' static
| |-ParmVarDecl 0x297c3ceba10 <col:36, col:55> col:56 'struct TS_resp_ctx *'
| `-ParmVarDecl 0x297c3ceba90 <col:58, col:63> col:64 'void *'
|-FunctionDecl 0x297c3cebfb0 <line:23:1, col:75> col:12 used def_time_cb 'int (struct TS_resp_ctx *, void *, long *, long *)' static
| |-ParmVarDecl 0x297c3cebc88 <col:24, col:43> col:44 'struct TS_resp_ctx *'
| |-ParmVarDecl 0x297c3cebd08 <col:46, col:51> col:52 'void *'
| |-ParmVarDecl 0x297c3cebdb0 <col:54, col:60> col:60 sec 'long *'
| `-ParmVarDecl 0x297c3cebe30 <col:65, col:71> col:71 usec 'long *'
|-FunctionDecl 0x297c3cec320 <line:24:1, col:75> col:12 invalid def_extension_cb 'int (struct TS_resp_ctx *, int *, void *)' static
| |-ParmVarDecl 0x297c3cec0f8 <col:29, col:48> col:49 'struct TS_resp_ctx *'
| |-ParmVarDecl 0x297c3cec178 <col:51, <invalid sloc>> col:67 invalid 'int *'
| `-ParmVarDecl 0x297c3cec1f8 <col:69, col:74> col:75 'void *'
|-FunctionDecl 0x297c3cec4b8 <line:26:1, col:46> col:13 invalid ts_RESP_CTX_init 'void (int *)' static
| `-ParmVarDecl 0x297c3cec3f0 <col:30, col:43> col:43 invalid ctx 'int *'
|-FunctionDecl 0x297c3cf26a0 <line:27:1, col:49> col:13 invalid ts_RESP_CTX_cleanup 'void (int *)' static
| `-ParmVarDecl 0x297c3cf2610 <col:33, col:46> col:46 invalid ctx 'int *'
|-FunctionDecl 0x297c3cf2830 <line:28:1, col:50> col:12 invalid ts_RESP_check_request 'int (int *)' static
| `-ParmVarDecl 0x297c3cf2760 <col:34, col:47> col:47 invalid ctx 'int *'
|-FunctionDecl 0x297c3cf29c0 <line:29:1, col:56> col:21 invalid ts_RESP_get_policy 'int *(int *)' static
| `-ParmVarDecl 0x297c3cf28f0 <col:40, col:53> col:53 invalid ctx 'int *'
|-FunctionDecl 0x297c3cf2be0 <line:30:1, line:31:64> line:30:21 invalid ts_RESP_create_tst_info 'int *(int *, int *)' static
| |-ParmVarDecl 0x297c3cf2a80 <col:45, col:58> col:58 invalid ctx 'int *'
| `-ParmVarDecl 0x297c3cf2b00 <line:31:45, col:58> col:58 invalid policy 'int *'
|-FunctionDecl 0x297c3cf2d40 <line:32:1, col:55> col:12 invalid ts_RESP_process_extensions 'int (int *)' static
| `-ParmVarDecl 0x297c3cf2ca8 <col:39, col:52> col:52 invalid ctx 'int *'
|-FunctionDecl 0x297c3cf2e98 <line:33:1, col:41> col:12 invalid ts_RESP_sign 'int (int *)' static
| `-ParmVarDecl 0x297c3cf2e00 <col:25, col:38> col:38 invalid ctx 'int *'
|-FunctionDecl 0x297c3cf3170 <line:35:1, line:36:73> line:35:26 invalid ess_SIGNING_CERT_new_init 'int *(int *, int (*)())' static
| |-ParmVarDecl 0x297c3cf2f58 <col:52, col:58> col:58 invalid signcert 'int *'
| `-ParmVarDecl 0x297c3cf3050 <line:36:52, <invalid sloc>> col:52 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x297c3cf3390 <line:37:1, col:71> col:21 invalid ess_CERT_ID_new_init 'int *(int *, int)' static
| |-ParmVarDecl 0x297c3cf3238 <col:42, col:48> col:48 invalid cert 'int *'
| `-ParmVarDecl 0x297c3cf32b8 <col:54, col:58> col:58 issuer_needed 'int'
|-FunctionDecl 0x297c3cf34f0 <line:38:1, col:45> col:12 invalid ts_TST_INFO_content_new 'int (int *)' static
| `-ParmVarDecl 0x297c3cf3458 <col:36, col:43> col:43 invalid p7 'int *'
|-FunctionDecl 0x297c3cf3780 <line:39:1, col:76> col:12 invalid ESS_add_signing_cert 'int (int *, int *)' static
| |-ParmVarDecl 0x297c3cf3620 <col:33, col:52> col:52 invalid si 'int *'
| `-ParmVarDecl 0x297c3cf36a0 <col:56, col:74> col:74 invalid sc 'int *'
|-FunctionDecl 0x297c3cf3ac0 <line:41:1, line:43:45> line:42:2 invalid TS_RESP_set_genTime_with_precision 'int *(int *, long, long, unsigned int)' static
| |-ParmVarDecl 0x297c3cf3848 <col:37, <invalid sloc>> col:59 invalid 'int *'
| |-ParmVarDecl 0x297c3cf38c8 <col:61> col:65 'long'
| |-ParmVarDecl 0x297c3cf3948 <col:67> col:71 'long'
| `-ParmVarDecl 0x297c3cf39c8 <line:43:37> col:45 'unsigned int'
|-FunctionDecl 0x297c3cf3cf8 <line:46:1, line:61:1> line:46:22 invalid def_serial_cb 'int *(struct TS_resp_ctx *, void *)' static
| |-ParmVarDecl 0x297c3cf3ba8 <col:36, col:56> col:56 used ctx 'struct TS_resp_ctx *'
| |-ParmVarDecl 0x297c3cf3c28 <col:61, col:67> col:67 data 'void *'
| `-CompoundStmt 0x297c3cf43f8 <line:47:1, line:61:1>
|   |-IfStmt 0x297c3cf3f88 <line:50:5, line:51:14>
|   | |-OpaqueValueExpr 0x297c3cf3f70 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3cf3f58 <col:9, col:14> 'err' 0x297c3cf3f08
|   |-IfStmt 0x297c3cf4108 <line:52:5, line:53:14>
|   | |-OpaqueValueExpr 0x297c3cf40f0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3cf40d8 <col:9, col:14> 'err' 0x297c3cf3f08
|   `-LabelStmt 0x297c3cf4238 <line:56:2, col:5> 'err'
|     `-NullStmt 0x297c3cf4230 <col:5>
|-FunctionDecl 0x297c3d01090 prev 0x297c3cebfb0 <line:84:1, line:99:1> line:84:12 used def_time_cb 'int (struct TS_resp_ctx *, void *, long *, long *)' static
| |-ParmVarDecl 0x297c3cf4448 <col:24, col:44> col:44 used ctx 'struct TS_resp_ctx *'
| |-ParmVarDecl 0x297c3cf44c8 <col:49, col:55> col:55 data 'void *'
| |-ParmVarDecl 0x297c3cf4548 <line:85:24, col:30> col:30 used sec 'long *'
| |-ParmVarDecl 0x297c3d00f80 <col:35, col:41> col:41 used usec 'long *'
| `-CompoundStmt 0x297c3d01640 <line:86:1, line:99:1>
|   |-IfStmt 0x297c3d014f0 <line:88:5, line:94:5>
|   | |-OpaqueValueExpr 0x297c3d014d8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d014c0 <line:88:33, line:94:5>
|   |   `-ReturnStmt 0x297c3d014b0 <line:93:9, col:16>
|   |     `-IntegerLiteral 0x297c3d01488 <col:16> 'int' 0
|   |-BinaryOperator 0x297c3d015e8 <line:96:5, col:13> 'long' '='
|   | |-UnaryOperator 0x297c3d01590 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x297c3d01578 <col:6> 'long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x297c3d01558 <col:6> 'long *' lvalue ParmVar 0x297c3d00f80 'usec' 'long *'
|   | `-ImplicitCastExpr 0x297c3d015d0 <col:13> 'long' <IntegralCast>
|   |   `-IntegerLiteral 0x297c3d015a8 <col:13> 'int' 0
|   `-ReturnStmt 0x297c3d01630 <line:98:5, col:12>
|     `-IntegerLiteral 0x297c3d01608 <col:12> 'int' 1
|-FunctionDecl 0x297c3d01838 <line:103:1, line:110:1> line:103:12 invalid def_extension_cb 'int (struct TS_resp_ctx *, int *, void *)' static
| |-ParmVarDecl 0x297c3d01690 <col:29, col:49> col:49 used ctx 'struct TS_resp_ctx *'
| |-ParmVarDecl 0x297c3d01710 <col:54, col:70> col:70 invalid ext 'int *'
| |-ParmVarDecl 0x297c3d01790 <line:104:29, col:35> col:35 data 'void *'
| `-CompoundStmt 0x297c3d01a08 <line:105:1, line:110:1>
|   `-ReturnStmt 0x297c3d019f8 <line:109:5, col:12>
|     `-IntegerLiteral 0x297c3d019d0 <col:12> 'int' 0
|-FunctionDecl 0x297c3d01a70 <line:114:1, line:130:1> line:114:14 invalid TS_RESP_CTX_new 'int *()'
| `-CompoundStmt 0x297c3d01e00 <line:115:1, line:130:1>
|   `-IfStmt 0x297c3d01c80 <line:118:5, line:121:5>
|     |-OpaqueValueExpr 0x297c3d01c68 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x297c3d01c58 <line:118:55, line:121:5>
|-FunctionDecl 0x297c3d01ec0 <line:132:1, line:147:1> line:132:6 invalid TS_RESP_CTX_free 'void (int *)'
| |-ParmVarDecl 0x297c3d01e30 <col:23, col:36> col:36 invalid ctx 'int *'
| `-CompoundStmt 0x297c3d038c0 <line:133:1, line:147:1>
|   `-IfStmt 0x297c3d02fc8 <line:134:5, line:135:9>
|     |-OpaqueValueExpr 0x297c3d02fb0 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x297c3d02fa0 <col:9>
|-FunctionDecl 0x297c3d03a10 <line:149:1, line:160:1> line:149:5 invalid TS_RESP_CTX_set_signer_cert 'int (int *, int *)'
| |-ParmVarDecl 0x297c3d038f0 <col:33, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d03970 <col:51, col:57> col:57 invalid signer 'int *'
| `-CompoundStmt 0x297c3d03e40 <line:150:1, line:160:1>
|   |-IfStmt 0x297c3d03cc0 <line:151:5, line:155:5>
|   | |-OpaqueValueExpr 0x297c3d03ca8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d03c90 <line:151:74, line:155:5>
|   |   `-ReturnStmt 0x297c3d03c80 <line:154:9, col:16>
|   |     `-IntegerLiteral 0x297c3d03c58 <col:16> 'int' 0
|   `-ReturnStmt 0x297c3d03e30 <line:159:5, col:12>
|     `-IntegerLiteral 0x297c3d03e08 <col:12> 'int' 1
|-FunctionDecl 0x297c3d01f90 <line:162:1, line:169:1> line:162:5 invalid TS_RESP_CTX_set_signer_key 'int (int *, int *)'
| |-ParmVarDecl 0x297c3d03e78 <col:32, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d03ef8 <col:50, col:60> col:60 invalid key 'int *'
| `-CompoundStmt 0x297c3d021c0 <line:163:1, line:169:1>
|   `-ReturnStmt 0x297c3d021b0 <line:168:5, col:12>
|     `-IntegerLiteral 0x297c3d02188 <col:12> 'int' 1
|-FunctionDecl 0x297c3d02350 <line:171:1, line:175:1> line:171:5 invalid TS_RESP_CTX_set_signer_digest 'int (int *, const int *)'
| |-ParmVarDecl 0x297c3d021f0 <col:35, col:48> col:48 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d02270 <col:53, col:67> col:67 invalid md 'const int *'
| `-CompoundStmt 0x297c3d02450 <line:172:1, line:175:1>
|   `-ReturnStmt 0x297c3d02440 <line:174:5, col:12>
|     `-IntegerLiteral 0x297c3d02418 <col:12> 'int' 1
|-FunctionDecl 0x297c3d025a0 <line:177:1, line:186:1> line:177:5 invalid TS_RESP_CTX_set_def_policy 'int (int *, const int *)'
| |-ParmVarDecl 0x297c3d02480 <col:32, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d02500 <col:50, col:69> col:69 invalid def_policy 'const int *'
| `-CompoundStmt 0x297c3d028e0 <line:178:1, line:186:1>
|   |-IfStmt 0x297c3d02818 <line:180:5, line:181:14>
|   | |-OpaqueValueExpr 0x297c3d02800 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d027e8 <col:9, col:14> 'err' 0x297c3d02798
|   |-ReturnStmt 0x297c3d02858 <line:182:5, col:12>
|   | `-IntegerLiteral 0x297c3d02830 <col:12> 'int' 1
|   |-LabelStmt 0x297c3d02890 <line:183:2, col:5> 'err'
|   | `-NullStmt 0x297c3d02888 <col:5>
|   `-ReturnStmt 0x297c3d028d0 <line:185:5, col:12>
|     `-IntegerLiteral 0x297c3d028a8 <col:12> 'int' 0
|-FunctionDecl 0x297c3d02ad0 <line:188:1, line:201:1> line:188:5 invalid TS_RESP_CTX_set_certs 'int (int *, int (*)())'
| |-ParmVarDecl 0x297c3d02928 <col:27, col:40> col:40 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d029b8 <col:45, <invalid sloc>> col:45 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x297c3d02e08 <line:189:1, line:201:1>
|   |-IfStmt 0x297c3d02c08 <line:193:5, line:194:16>
|   | |-OpaqueValueExpr 0x297c3d02bf0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x297c3d02be0 <col:9, col:16>
|   |   `-IntegerLiteral 0x297c3d02bb8 <col:16> 'int' 1
|   |-IfStmt 0x297c3d02db8 <line:195:5, line:198:5>
|   | |-OpaqueValueExpr 0x297c3d02da0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d02d88 <line:195:58, line:198:5>
|   |   `-ReturnStmt 0x297c3d02d78 <line:197:9, col:16>
|   |     `-IntegerLiteral 0x297c3d02d50 <col:16> 'int' 0
|   `-ReturnStmt 0x297c3d02df8 <line:200:5, col:12>
|     `-IntegerLiteral 0x297c3d02dd0 <col:12> 'int' 1
|-FunctionDecl 0x297c3d03fb0 <line:203:1, line:220:1> line:203:5 invalid TS_RESP_CTX_add_policy 'int (int *, const int *)'
| |-ParmVarDecl 0x297c3d02e48 <col:28, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d02ec8 <col:46, col:65> col:65 invalid policy 'const int *'
| `-CompoundStmt 0x297c3d044e8 <line:204:1, line:220:1>
|   |-IfStmt 0x297c3d04240 <line:207:5, line:209:14>
|   | |-OpaqueValueExpr 0x297c3d04228 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d04210 <col:9, col:14> 'err' 0x297c3d041c0
|   |-IfStmt 0x297c3d042a8 <line:210:5, line:211:14>
|   | |-OpaqueValueExpr 0x297c3d04290 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d04278 <col:9, col:14> 'err' 0x297c3d041c0
|   |-IfStmt 0x297c3d04400 <line:212:5, line:213:14>
|   | |-OpaqueValueExpr 0x297c3d043e8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d043d0 <col:9, col:14> 'err' 0x297c3d041c0
|   |-ReturnStmt 0x297c3d04440 <line:215:5, col:12>
|   | `-IntegerLiteral 0x297c3d04418 <col:12> 'int' 1
|   |-LabelStmt 0x297c3d04478 <line:216:2, col:5> 'err'
|   | `-NullStmt 0x297c3d04470 <col:5>
|   `-ReturnStmt 0x297c3d044d8 <line:219:5, col:12>
|     `-IntegerLiteral 0x297c3d044b0 <col:12> 'int' 0
|-FunctionDecl 0x297c3d04660 <line:222:1, line:234:1> line:222:5 invalid TS_RESP_CTX_add_md 'int (int *, const int *)'
| |-ParmVarDecl 0x297c3d04540 <col:24, col:37> col:37 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d045c0 <col:42, col:56> col:56 invalid md 'const int *'
| `-CompoundStmt 0x297c3d04b10 <line:223:1, line:234:1>
|   |-IfStmt 0x297c3d048f0 <line:224:5, line:226:14>
|   | |-OpaqueValueExpr 0x297c3d048d8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d048c0 <col:9, col:14> 'err' 0x297c3d04870
|   |-IfStmt 0x297c3d04a48 <line:227:5, line:228:14>
|   | |-OpaqueValueExpr 0x297c3d04a30 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d04a18 <col:9, col:14> 'err' 0x297c3d04870
|   |-ReturnStmt 0x297c3d04a88 <line:230:5, col:12>
|   | `-IntegerLiteral 0x297c3d04a60 <col:12> 'int' 1
|   |-LabelStmt 0x297c3d04ac0 <line:231:2, col:5> 'err'
|   | `-NullStmt 0x297c3d04ab8 <col:5>
|   `-ReturnStmt 0x297c3d04b00 <line:233:5, col:12>
|     `-IntegerLiteral 0x297c3d04ad8 <col:12> 'int' 0
|-FunctionDecl 0x297c3d04de0 <line:244:1, line:267:1> line:244:5 invalid TS_RESP_CTX_set_accuracy 'int (int *, int, int, int)'
| |-ParmVarDecl 0x297c3d04b60 <col:30, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d04be0 <line:245:30, col:34> col:34 used secs 'int'
| |-ParmVarDecl 0x297c3d04c60 <col:40, col:44> col:44 used millis 'int'
| |-ParmVarDecl 0x297c3d04ce0 <col:52, col:56> col:56 used micros 'int'
| `-CompoundStmt 0x297c3d053e0 <line:246:1, line:267:1>
|   |-NullStmt 0x297c3d04f18 <line:248:35>
|   |-IfStmt 0x297c3d05080 <line:249:5, line:252:14>
|   | |-OpaqueValueExpr 0x297c3d05068 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d05050 <col:9, col:14> 'err' 0x297c3d05000
|   |-IfStmt 0x297c3d05198 <line:253:5, line:256:14>
|   | |-OpaqueValueExpr 0x297c3d05180 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d05168 <col:9, col:14> 'err' 0x297c3d05000
|   |-IfStmt 0x297c3d052b0 <line:257:5, line:260:14>
|   | |-OpaqueValueExpr 0x297c3d05298 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d05280 <col:9, col:14> 'err' 0x297c3d05000
|   |-ReturnStmt 0x297c3d052f0 <line:262:5, col:12>
|   | `-IntegerLiteral 0x297c3d052c8 <col:12> 'int' 1
|   |-LabelStmt 0x297c3d05328 <line:263:2, col:5> 'err'
|   | `-NullStmt 0x297c3d05320 <col:5>
|   |-NullStmt 0x297c3d05380 <line:264:35>
|   `-ReturnStmt 0x297c3d053d0 <line:266:5, col:12>
|     `-IntegerLiteral 0x297c3d053a8 <col:12> 'int' 0
|-FunctionDecl 0x297c3d05598 <line:269:1, line:272:1> line:269:6 invalid TS_RESP_CTX_add_flags 'void (int *, int)'
| |-ParmVarDecl 0x297c3d05448 <col:28, col:41> col:41 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d054c8 <col:46, col:50> col:50 used flags 'int'
| `-CompoundStmt 0x297c3d05698 <line:270:1, line:272:1>
|-FunctionDecl 0x297c3d058a8 <line:274:1, line:278:1> line:274:6 invalid TS_RESP_CTX_set_serial_cb 'void (int *, int, void *)'
| |-ParmVarDecl 0x297c3d056c0 <col:32, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d05740 <col:50, col:63> col:63 invalid cb 'int'
| |-ParmVarDecl 0x297c3d057c0 <col:67, col:73> col:73 used data 'void *'
| `-CompoundStmt 0x297c3d059b0 <line:275:1, line:278:1>
|-FunctionDecl 0x297c3d05b78 <line:280:1, line:284:1> line:280:6 invalid TS_RESP_CTX_set_time_cb 'void (int *, int, void *)'
| |-ParmVarDecl 0x297c3d059d8 <col:30, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d05a58 <col:48, col:59> col:59 invalid cb 'int'
| |-ParmVarDecl 0x297c3d05ad8 <col:63, col:69> col:69 used data 'void *'
| `-CompoundStmt 0x297c3d05c80 <line:281:1, line:284:1>
|-FunctionDecl 0x297c3d05e48 <line:286:1, line:291:1> line:286:6 invalid TS_RESP_CTX_set_extension_cb 'void (int *, int, void *)'
| |-ParmVarDecl 0x297c3d05ca8 <col:35, col:48> col:48 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d05d28 <line:287:35, col:51> col:51 invalid cb 'int'
| |-ParmVarDecl 0x297c3d05da8 <col:55, col:61> col:61 used data 'void *'
| `-CompoundStmt 0x297c3d05f50 <line:288:1, line:291:1>
|-FunctionDecl 0x297c3d00160 <line:293:1, line:324:1> line:293:5 invalid TS_RESP_CTX_set_status_info 'int (int *, int, const char *)'
| |-ParmVarDecl 0x297c3cfff70 <col:33, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3cffff0 <line:294:33, col:37> col:37 used status 'int'
| |-ParmVarDecl 0x297c3d00070 <col:45, col:57> col:57 used text 'const char *'
| `-CompoundStmt 0x297c3d06310 <line:295:1, line:324:1>
|   |-DeclStmt 0x297c3d002d8 <line:298:5, col:16>
|   | `-VarDecl 0x297c3d00248 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x297c3d002b0 <col:15> 'int' 0
|   |-IfStmt 0x297c3d004b8 <line:300:5, line:301:14>
|   | |-OpaqueValueExpr 0x297c3d004a0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d00488 <col:9, col:14> 'err' 0x297c3d00438
|   |-IfStmt 0x297c3d00558 <line:302:5, line:303:14>
|   | |-OpaqueValueExpr 0x297c3d00540 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d00528 <col:9, col:14> 'err' 0x297c3d00438
|   |-IfStmt 0x297c3d00dc8 <line:304:5, line:314:5>
|   | |-ImplicitCastExpr 0x297c3d005a8 <line:304:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x297c3d00570 <col:9> 'const char *' lvalue ParmVar 0x297c3d00070 'text' 'const char *'
|   | `-CompoundStmt 0x297c3d00da0 <col:15, line:314:5>
|   |   |-IfStmt 0x297c3d00aa0 <line:305:9, line:307:18>
|   |   | |-OpaqueValueExpr 0x297c3d00a88 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x297c3d00a70 <col:13, col:18> 'err' 0x297c3d00438
|   |   |-IfStmt 0x297c3d00c30 <line:308:9, line:310:18>
|   |   | |-OpaqueValueExpr 0x297c3d00c18 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x297c3d00c00 <col:13, col:18> 'err' 0x297c3d00438
|   |   `-IfStmt 0x297c3d00d88 <line:311:9, line:312:18>
|   |     |-OpaqueValueExpr 0x297c3d00d70 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x297c3d00d58 <col:13, col:18> 'err' 0x297c3d00438
|   |-IfStmt 0x297c3d00f20 <line:315:5, line:316:14>
|   | |-OpaqueValueExpr 0x297c3d00f08 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d00ef0 <col:9, col:14> 'err' 0x297c3d00438
|   |-BinaryOperator 0x297c3d05ff8 <line:317:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x297c3d00f38 <col:5> 'int' lvalue Var 0x297c3d00248 'ret' 'int'
|   | `-IntegerLiteral 0x297c3d05fd0 <col:11> 'int' 1
|   |-LabelStmt 0x297c3d06090 <line:318:2, col:5> 'err'
|   | `-NullStmt 0x297c3d06088 <col:5>
|   `-ReturnStmt 0x297c3d06300 <line:323:5, col:12>
|     `-ImplicitCastExpr 0x297c3d062e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x297c3d062c8 <col:12> 'int' lvalue Var 0x297c3d00248 'ret' 'int'
|-FunctionDecl 0x297c3d00870 <line:306:50> col:50 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x297c3d00910 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x297c3d06520 <line:326:1, line:336:1> line:326:5 invalid TS_RESP_CTX_set_status_info_cond 'int (int *, int, const char *)'
| |-ParmVarDecl 0x297c3d06378 <col:38, col:51> col:51 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d063f8 <line:327:38, col:42> col:42 used status 'int'
| |-ParmVarDecl 0x297c3d06478 <col:50, col:62> col:62 used text 'const char *'
| `-CompoundStmt 0x297c3d068f0 <line:328:1, line:336:1>
|   |-DeclStmt 0x297c3d06698 <line:329:5, col:16>
|   | `-VarDecl 0x297c3d06608 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x297c3d06670 <col:15> 'int' 1
|   |-IfStmt 0x297c3d06890 <line:332:5, line:334:5>
|   | |-OpaqueValueExpr 0x297c3d06878 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d06868 <line:332:60, line:334:5>
|   `-ReturnStmt 0x297c3d068e0 <line:335:5, col:12>
|     `-ImplicitCastExpr 0x297c3d068c8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x297c3d068a8 <col:12> 'int' lvalue Var 0x297c3d06608 'ret' 'int'
|-FunctionDecl 0x297c3d06a90 <line:338:1, line:350:1> line:338:5 invalid TS_RESP_CTX_add_failure_info 'int (int *, int)'
| |-ParmVarDecl 0x297c3d06930 <col:34, col:47> col:47 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d069b0 <col:52, col:56> col:56 used failure 'int'
| `-CompoundStmt 0x297c3cfef60 <line:339:1, line:350:1>
|   |-IfStmt 0x297c3d06d20 <line:341:5, line:343:14>
|   | |-OpaqueValueExpr 0x297c3d06d08 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d06cf0 <col:9, col:14> 'err' 0x297c3d06ca0
|   |-IfStmt 0x297c3d06ed8 <line:344:5, line:345:14>
|   | |-OpaqueValueExpr 0x297c3d06ec0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d06ea8 <col:9, col:14> 'err' 0x297c3d06ca0
|   |-ReturnStmt 0x297c3d06f18 <line:346:5, col:12>
|   | `-IntegerLiteral 0x297c3d06ef0 <col:12> 'int' 1
|   |-LabelStmt 0x297c3d06f50 <line:347:2, col:5> 'err'
|   | `-NullStmt 0x297c3d06f48 <col:5>
|   `-ReturnStmt 0x297c3d06f90 <line:349:5, col:12>
|     `-IntegerLiteral 0x297c3d06f68 <col:12> 'int' 0
|-FunctionDecl 0x297c3cff048 <line:352:1, line:355:1> line:352:9 invalid TS_RESP_CTX_get_request 'int *(int *)'
| |-ParmVarDecl 0x297c3cfefb0 <col:33, col:46> col:46 invalid ctx 'int *'
| `-CompoundStmt 0x297c3cff108 <line:353:1, line:355:1>
|-FunctionDecl 0x297c3cff1c8 <line:357:1, line:360:1> line:357:14 invalid TS_RESP_CTX_get_tst_info 'int *(int *)'
| |-ParmVarDecl 0x297c3cff130 <col:39, col:52> col:52 invalid ctx 'int *'
| `-CompoundStmt 0x297c3cff288 <line:358:1, line:360:1>
|-FunctionDecl 0x297c3cff410 <line:362:1, line:369:1> line:362:5 invalid TS_RESP_CTX_set_clock_precision_digits 'int (int *, unsigned int)'
| |-ParmVarDecl 0x297c3cff2b0 <col:44, col:57> col:57 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3cff330 <line:363:44, col:53> col:53 used precision 'unsigned int'
| `-CompoundStmt 0x297c3cff5d0 <line:364:1, line:369:1>
|   |-IfStmt 0x297c3cff560 <line:365:5, line:366:16>
|   | |-OpaqueValueExpr 0x297c3cff548 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x297c3cff538 <col:9, col:16>
|   |   `-IntegerLiteral 0x297c3cff510 <col:16> 'int' 0
|   `-ReturnStmt 0x297c3cff5c0 <line:368:5, col:12>
|     `-IntegerLiteral 0x297c3cff598 <col:12> 'int' 1
|-FunctionDecl 0x297c3cff728 <line:372:1, line:421:1> line:372:10 invalid TS_RESP_create_response 'int *(int *, int *)'
| |-ParmVarDecl 0x297c3cff608 <col:34, col:47> col:47 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3cff688 <col:52, col:57> col:57 invalid req_bio 'int *'
| `-CompoundStmt 0x297c3d07260 <line:373:1, line:421:1>
|   |-DeclStmt 0x297c3cff898 <line:376:5, col:19>
|   | `-VarDecl 0x297c3cff808 <col:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x297c3cff870 <col:18> 'int' 0
|   |-IfStmt 0x297c3cffab0 <line:380:5, line:383:5>
|   | |-OpaqueValueExpr 0x297c3cffa98 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3cffa80 <line:380:50, line:383:5>
|   |   `-GotoStmt 0x297c3cffa68 <line:382:9, col:14> 'end' 0x297c3cffa18
|   |-IfStmt 0x297c3cffca0 <line:384:5, line:389:5>
|   | |-OpaqueValueExpr 0x297c3cffc88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3cffc70 <line:384:65, line:389:5>
|   |   `-GotoStmt 0x297c3cffc58 <line:388:9, col:14> 'end' 0x297c3cffa18
|   |-IfStmt 0x297c3cffce8 <line:390:5, line:391:14>
|   | |-OpaqueValueExpr 0x297c3cffcd0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3cffcb8 <col:9, col:14> 'end' 0x297c3cffa18
|   |-IfStmt 0x297c3cffd30 <line:392:5, line:393:14>
|   | |-OpaqueValueExpr 0x297c3cffd18 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3cffd00 <col:9, col:14> 'end' 0x297c3cffa18
|   |-IfStmt 0x297c3cffd78 <line:394:5, line:395:14>
|   | |-OpaqueValueExpr 0x297c3cffd60 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3cffd48 <col:9, col:14> 'end' 0x297c3cffa18
|   |-IfStmt 0x297c3cffdc0 <line:396:5, line:397:14>
|   | |-OpaqueValueExpr 0x297c3cffda8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3cffd90 <col:9, col:14> 'end' 0x297c3cffa18
|   |-IfStmt 0x297c3cffe08 <line:398:5, line:399:14>
|   | |-OpaqueValueExpr 0x297c3cffdf0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3cffdd8 <col:9, col:14> 'end' 0x297c3cffa18
|   |-IfStmt 0x297c3cffe50 <line:400:5, line:401:14>
|   | |-OpaqueValueExpr 0x297c3cffe38 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3cffe20 <col:9, col:14> 'end' 0x297c3cffa18
|   |-BinaryOperator 0x297c3cffec8 <line:402:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x297c3cffe68 <col:5> 'int' lvalue Var 0x297c3cff808 'result' 'int'
|   | `-IntegerLiteral 0x297c3cffea0 <col:14> 'int' 1
|   `-LabelStmt 0x297c3d07248 <line:404:2, line:416:5> 'end'
|     `-IfStmt 0x297c3d07230 <line:405:5, line:416:5>
|       |-UnaryOperator 0x297c3cfff20 <line:405:9, col:10> 'int' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x297c3cfff08 <col:10> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x297c3cffee8 <col:10> 'int' lvalue Var 0x297c3cff808 'result' 'int'
|       `-CompoundStmt 0x297c3d07218 <col:18, line:416:5>
|         `-IfStmt 0x297c3d07200 <line:407:9, line:415:9>
|           |-OpaqueValueExpr 0x297c3d071e8 <<invalid sloc>> '_Bool'
|           `-CompoundStmt 0x297c3d071d0 <line:407:36, line:415:9>
|             `-IfStmt 0x297c3d071b8 <line:408:13, line:414:13>
|               |-OpaqueValueExpr 0x297c3d071a0 <<invalid sloc>> '_Bool'
|               `-CompoundStmt 0x297c3d07190 <line:411:71, line:414:13>
|-FunctionDecl 0x297c3d07370 <line:424:1, line:429:1> line:424:13 invalid ts_RESP_CTX_init 'void (int *)' static
| |-ParmVarDecl 0x297c3d072e0 <col:30, col:43> col:43 invalid ctx 'int *'
| `-CompoundStmt 0x297c3d07430 <line:425:1, line:429:1>
|-FunctionDecl 0x297c3d074e8 <line:432:1, line:440:1> line:432:13 invalid ts_RESP_CTX_cleanup 'void (int *)' static
| |-ParmVarDecl 0x297c3d07458 <col:33, col:46> col:46 invalid ctx 'int *'
| `-CompoundStmt 0x297c3d077e8 <line:433:1, line:440:1>
|-FunctionDecl 0x297c3d078a8 <line:443:1, line:492:1> line:443:12 invalid ts_RESP_check_request 'int (int *)' static
| |-ParmVarDecl 0x297c3d07810 <col:34, col:47> col:47 invalid ctx 'int *'
| `-CompoundStmt 0x297c3d0fa00 <line:444:1, line:492:1>
|   |-DeclStmt 0x297c3d079e8 <line:448:5, col:18>
|   | `-VarDecl 0x297c3d07980 <col:5, col:9> col:9 used md_alg_id 'int'
|   |-DeclStmt 0x297c3d07a80 <line:449:5, col:36>
|   | `-VarDecl 0x297c3d07a18 <col:5, col:30> col:30 invalid digest 'const int *'
|   |-DeclStmt 0x297c3d07b18 <line:450:5, col:28>
|   | `-VarDecl 0x297c3d07ab0 <col:5, col:19> col:19 invalid md 'const int *'
|   |-DeclStmt 0x297c3d07bb0 <line:451:5, col:10>
|   | `-VarDecl 0x297c3d07b48 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x297c3d07dd0 <line:453:5, line:458:5>
|   | |-OpaqueValueExpr 0x297c3d07db8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d07da0 <line:453:43, line:458:5>
|   |   `-ReturnStmt 0x297c3d07d90 <line:457:9, col:16>
|   |     `-IntegerLiteral 0x297c3d07d68 <col:16> 'int' 0
|   |-IfStmt 0x297c3d0f5a8 <line:468:5, line:474:5>
|   | |-OpaqueValueExpr 0x297c3d0f590 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0f578 <line:468:14, line:474:5>
|   |   `-ReturnStmt 0x297c3d0f568 <line:473:9, col:16>
|   |     `-IntegerLiteral 0x297c3d0f540 <col:16> 'int' 0
|   |-IfStmt 0x297c3d0f7b8 <line:476:5, line:482:5>
|   | |-OpaqueValueExpr 0x297c3d0f7a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0f788 <line:476:79, line:482:5>
|   |   `-ReturnStmt 0x297c3d0f778 <line:481:9, col:16>
|   |     `-IntegerLiteral 0x297c3d0f750 <col:16> 'int' 0
|   |-IfStmt 0x297c3d0f9b0 <line:484:5, line:489:5>
|   | |-OpaqueValueExpr 0x297c3d0f998 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0f980 <line:484:44, line:489:5>
|   |   `-ReturnStmt 0x297c3d0f970 <line:488:9, col:16>
|   |     `-IntegerLiteral 0x297c3d0f948 <col:16> 'int' 0
|   `-ReturnStmt 0x297c3d0f9f0 <line:491:5, col:12>
|     `-IntegerLiteral 0x297c3d0f9c8 <col:12> 'int' 1
|-FunctionDecl 0x297c3d0fb08 <line:495:1, line:521:1> line:495:21 invalid ts_RESP_get_policy 'int *(int *)' static
| |-ParmVarDecl 0x297c3d0fa70 <col:40, col:53> col:53 invalid ctx 'int *'
| `-CompoundStmt 0x297c3d0d258 <line:496:1, line:521:1>
|   |-DeclStmt 0x297c3d0fc48 <line:499:5, col:10>
|   | `-VarDecl 0x297c3d0fbe0 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x297c3d0fca8 <line:501:5, line:504:5>
|   | |-OpaqueValueExpr 0x297c3d0fc90 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0fc80 <line:501:38, line:504:5>
|   `-IfStmt 0x297c3d0d240 <line:514:5, line:519:5>
|     |-OpaqueValueExpr 0x297c3d0d228 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x297c3d0d218 <line:514:18, line:519:5>
|-FunctionDecl 0x297c3d0d3b8 <line:524:1, line:602:1> line:524:21 invalid ts_RESP_create_tst_info 'int *(int *, int *)' static
| |-ParmVarDecl 0x297c3d0d298 <col:45, col:58> col:58 invalid ctx 'int *'
| |-ParmVarDecl 0x297c3d0d318 <line:525:45, col:58> col:58 invalid policy 'int *'
| `-CompoundStmt 0x297c3d0c528 <line:526:1, line:602:1>
|   |-DeclStmt 0x297c3d0d528 <line:527:5, col:19>
|   | `-VarDecl 0x297c3d0d498 <col:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x297c3d0d500 <col:18> 'int' 0
|   |-DeclStmt 0x297c3d0d658 <line:531:5, col:19>
|   | |-VarDecl 0x297c3d0d558 <col:5, col:10> col:10 used sec 'long'
|   | `-VarDecl 0x297c3d0d5d8 <col:5, col:15> col:15 used usec 'long'
|   |-DeclStmt 0x297c3d0d6f0 <line:533:5, col:30>
|   | `-VarDecl 0x297c3d0d688 <col:5, col:25> col:25 invalid nonce 'const int *'
|   |-IfStmt 0x297c3d0d8d0 <line:536:5, line:537:14>
|   | |-OpaqueValueExpr 0x297c3d0d8b8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0d8a0 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0da50 <line:538:5, line:539:14>
|   | |-OpaqueValueExpr 0x297c3d0da38 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0da20 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0dba8 <line:540:5, line:541:14>
|   | |-OpaqueValueExpr 0x297c3d0db90 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0db78 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0dd00 <line:542:5, line:543:14>
|   | |-OpaqueValueExpr 0x297c3d0dce8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0dcd0 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0de58 <line:544:5, line:546:14>
|   | |-OpaqueValueExpr 0x297c3d0de40 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0de28 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0b070 <line:547:5, line:552:14>
|   | |-OpaqueValueExpr 0x297c3d0b058 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0b040 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0b200 <line:554:5, line:556:14>
|   | |-OpaqueValueExpr 0x297c3d0b1e8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0b1d0 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0b358 <line:557:5, line:558:14>
|   | |-OpaqueValueExpr 0x297c3d0b340 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0b328 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0b4b0 <line:559:5, line:560:14>
|   | |-OpaqueValueExpr 0x297c3d0b498 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0b480 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0b608 <line:561:5, line:562:14>
|   | |-OpaqueValueExpr 0x297c3d0b5f0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0b5d8 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0b760 <line:563:5, line:564:14>
|   | |-OpaqueValueExpr 0x297c3d0b748 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0b730 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0b8e0 <line:566:5, line:568:14>
|   | |-OpaqueValueExpr 0x297c3d0b8c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0b8b0 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0ba38 <line:570:5, line:572:14>
|   | |-OpaqueValueExpr 0x297c3d0ba20 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0ba08 <col:9, col:14> 'end' 0x297c3d0d850
|   |-IfStmt 0x297c3d0bfe0 <line:574:5, line:584:5>
|   | |-OpaqueValueExpr 0x297c3d0bfc8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0bfa0 <line:574:35, line:584:5>
|   |   |-IfStmt 0x297c3d0bbc8 <line:575:9, line:576:18>
|   |   | |-OpaqueValueExpr 0x297c3d0bbb0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x297c3d0bb98 <col:13, col:18> 'end' 0x297c3d0d850
|   |   |-IfStmt 0x297c3d0be30 <line:580:9, line:581:18>
|   |   | |-OpaqueValueExpr 0x297c3d0be18 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x297c3d0be00 <col:13, col:18> 'end' 0x297c3d0d850
|   |   `-IfStmt 0x297c3d0bf88 <line:582:9, line:583:18>
|   |     |-OpaqueValueExpr 0x297c3d0bf70 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x297c3d0bf58 <col:13, col:18> 'end' 0x297c3d0d850
|   |-BinaryOperator 0x297c3d0c070 <line:586:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x297c3d0bff8 <col:5> 'int' lvalue Var 0x297c3d0d498 'result' 'int'
|   | `-IntegerLiteral 0x297c3d0c048 <col:14> 'int' 1
|   `-LabelStmt 0x297c3d0c1c0 <line:587:2, line:595:5> 'end'
|     `-IfStmt 0x297c3d0c1a8 <line:588:5, line:595:5>
|       |-UnaryOperator 0x297c3d0c0c8 <line:588:9, col:10> 'int' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x297c3d0c0b0 <col:10> 'int' <LValueToRValue>
|       |   `-DeclRefExpr 0x297c3d0c090 <col:10> 'int' lvalue Var 0x297c3d0d498 'result' 'int'
|       `-CompoundStmt 0x297c3d0c198 <col:18, line:595:5>
|-FunctionDecl 0x297c3d0c680 <line:605:1, line:623:1> line:605:12 invalid ts_RESP_process_extensions 'int (int *)' static
| |-ParmVarDecl 0x297c3d0c5e8 <col:39, col:52> col:52 invalid ctx 'int *'
| `-CompoundStmt 0x297c3d0cd70 <line:606:1, line:623:1>
|   |-DeclStmt 0x297c3d0c8d0 <line:608:5, col:10>
|   | `-VarDecl 0x297c3d0c868 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x297c3d0c990 <line:609:5, col:15>
|   | `-VarDecl 0x297c3d0c900 <col:5, col:14> col:9 used ok 'int' cinit
|   |   `-IntegerLiteral 0x297c3d0c968 <col:14> 'int' 1
|   `-ReturnStmt 0x297c3d0cd60 <line:622:5, col:12>
|     `-ImplicitCastExpr 0x297c3d0cd48 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x297c3d0cd28 <col:12> 'int' lvalue Var 0x297c3d0c900 'ok' 'int'
|-FunctionDecl 0x297c3d0ce48 <line:626:1, line:710:1> line:626:12 invalid ts_RESP_sign 'int (int *)' static
| |-ParmVarDecl 0x297c3d0cdb0 <col:25, col:38> col:38 invalid ctx 'int *'
| `-CompoundStmt 0x297c3d10b08 <line:627:1, line:710:1>
|   |-DeclStmt 0x297c3d0cfb0 <line:628:5, col:16>
|   | `-VarDecl 0x297c3d0cf20 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x297c3d0cf88 <col:15> 'int' 0
|   |-DeclStmt 0x297c3d0a078 <line:635:5, col:10>
|   | `-VarDecl 0x297c3d0a010 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x297c3d0a258 <line:637:5, line:640:5>
|   | |-OpaqueValueExpr 0x297c3d0a240 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0a228 <line:637:69, line:640:5>
|   |   `-GotoStmt 0x297c3d0a210 <line:639:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d0a420 <line:642:5, line:645:5>
|   | |-OpaqueValueExpr 0x297c3d0a408 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0a3f0 <line:642:37, line:645:5>
|   |   `-GotoStmt 0x297c3d0a3d8 <line:644:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d0a578 <line:646:5, line:647:14>
|   | |-OpaqueValueExpr 0x297c3d0a560 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0a548 <col:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d0a608 <line:648:5, line:649:14>
|   | |-OpaqueValueExpr 0x297c3d0a5f0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0a5d8 <col:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d0aae8 <line:651:5, line:659:5>
|   | |-OpaqueValueExpr 0x297c3d0aad0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0aab8 <line:651:33, line:659:5>
|   |   `-IfStmt 0x297c3d0aaa0 <line:653:9, line:658:9>
|   |     |-OpaqueValueExpr 0x297c3d0aa88 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x297c3d0aa78 <line:653:25, line:658:9>
|   |-IfStmt 0x297c3d0ac78 <line:661:5, line:665:5>
|   | |-OpaqueValueExpr 0x297c3d0ac60 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0ac48 <line:662:78, line:665:5>
|   |   `-GotoStmt 0x297c3d0ac30 <line:664:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d0af18 <line:668:5, line:672:5>
|   | |-OpaqueValueExpr 0x297c3d0af00 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0aee8 <line:669:58, line:672:5>
|   |   `-GotoStmt 0x297c3d0aed0 <line:671:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d0af60 <line:675:5, line:676:14>
|   | |-OpaqueValueExpr 0x297c3d0af48 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0af30 <col:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d0afe0 <line:677:5, line:680:5>
|   | |-OpaqueValueExpr 0x297c3d0afc8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d0afb0 <line:677:40, line:680:5>
|   |   `-GotoStmt 0x297c3d0af98 <line:679:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d10088 <line:682:5, line:683:14>
|   | |-OpaqueValueExpr 0x297c3d10070 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d0aff8 <col:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d10218 <line:684:5, line:687:5>
|   | |-OpaqueValueExpr 0x297c3d10200 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d101e8 <line:684:53, line:687:5>
|   |   `-GotoStmt 0x297c3d101d0 <line:686:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d103a8 <line:688:5, line:691:5>
|   | |-OpaqueValueExpr 0x297c3d10390 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d10378 <line:688:53, line:691:5>
|   |   `-GotoStmt 0x297c3d10360 <line:690:9, col:14> 'err' 0x297c3d0a1c0
|   |-IfStmt 0x297c3d10538 <line:692:5, line:695:5>
|   | |-OpaqueValueExpr 0x297c3d10520 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d10508 <line:692:38, line:695:5>
|   |   `-GotoStmt 0x297c3d104f0 <line:694:9, col:14> 'err' 0x297c3d0a1c0
|   |-BinaryOperator 0x297c3d106c0 <line:700:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x297c3d10660 <col:5> 'int' lvalue Var 0x297c3d0cf20 'ret' 'int'
|   | `-IntegerLiteral 0x297c3d10698 <col:11> 'int' 1
|   |-LabelStmt 0x297c3d10778 <line:701:2, col:5> 'err'
|   | `-NullStmt 0x297c3d10770 <col:5>
|   `-ReturnStmt 0x297c3d10af8 <line:709:5, col:12>
|     `-ImplicitCastExpr 0x297c3d10ae0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x297c3d10ac0 <col:12> 'int' lvalue Var 0x297c3d0cf20 'ret' 'int'
|-FunctionDecl 0x297c3d10cf0 <line:712:1, line:740:1> line:712:26 invalid ess_SIGNING_CERT_new_init 'int *(int *, int (*)())' static
| |-ParmVarDecl 0x297c3d10bc0 <col:52, col:58> col:58 invalid signcert 'int *'
| |-ParmVarDecl 0x297c3d10c50 <line:713:52, <invalid sloc>> col:52 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x297c3d09528 <line:714:1, line:740:1>
|   |-DeclStmt 0x297c3d10e38 <line:717:5, col:10>
|   | `-VarDecl 0x297c3d10dd0 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x297c3d11018 <line:719:5, line:720:14>
|   | |-OpaqueValueExpr 0x297c3d11000 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d10fe8 <col:9, col:14> 'err' 0x297c3d10f98
|   |-IfStmt 0x297c3d09150 <line:721:5, line:723:14>
|   | |-OpaqueValueExpr 0x297c3d09138 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d09120 <col:9, col:14> 'err' 0x297c3d10f98
|   |-IfStmt 0x297c3d092d0 <line:725:5, line:727:14>
|   | |-OpaqueValueExpr 0x297c3d092b8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d092a0 <col:9, col:14> 'err' 0x297c3d10f98
|   `-LabelStmt 0x297c3d094f0 <line:736:2, col:5> 'err'
|     `-NullStmt 0x297c3d094e8 <col:5>
|-FunctionDecl 0x297c3d09698 <line:742:1, line:781:1> line:742:21 invalid ess_CERT_ID_new_init 'int *(int *, int)' static
| |-ParmVarDecl 0x297c3d09578 <col:42, col:48> col:48 invalid cert 'int *'
| |-ParmVarDecl 0x297c3d095f8 <col:54, col:58> col:58 used issuer_needed 'int'
| `-CompoundStmt 0x297c3d188a8 <line:743:1, line:781:1>
|   |-DeclStmt 0x297c3d097e0 <line:746:5, col:47>
|   | `-VarDecl 0x297c3d09778 <col:5, col:19> col:19 invalid cert_sha1 'unsigned char'
|   |-IfStmt 0x297c3d09a48 <line:750:5, line:751:14>
|   | |-OpaqueValueExpr 0x297c3d09a30 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d09a18 <col:9, col:14> 'err' 0x297c3d099c8
|   |-IfStmt 0x297c3d09df8 <line:753:5, line:754:14>
|   | |-OpaqueValueExpr 0x297c3d09de0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d09dc8 <col:9, col:14> 'err' 0x297c3d099c8
|   |-IfStmt 0x297c3d18720 <line:757:5, line:773:5>
|   | |-ImplicitCastExpr 0x297c3d09e48 <line:757:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x297c3d09e10 <col:9> 'int' lvalue ParmVar 0x297c3d095f8 'issuer_needed' 'int'
|   | `-CompoundStmt 0x297c3d186e8 <col:24, line:773:5>
|   |   |-IfStmt 0x297c3d09fd8 <line:758:9, line:760:18>
|   |   | |-OpaqueValueExpr 0x297c3d09fc0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x297c3d09fa8 <col:13, col:18> 'err' 0x297c3d099c8
|   |   |-IfStmt 0x297c3d18178 <line:761:9, line:762:18>
|   |   | |-OpaqueValueExpr 0x297c3d18160 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x297c3d18148 <col:13, col:18> 'err' 0x297c3d099c8
|   |   |-IfStmt 0x297c3d182f0 <line:764:9, line:765:18>
|   |   | |-OpaqueValueExpr 0x297c3d182d8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x297c3d182c0 <col:13, col:18> 'err' 0x297c3d099c8
|   |   |-IfStmt 0x297c3d18448 <line:766:9, line:767:18>
|   |   | |-OpaqueValueExpr 0x297c3d18430 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x297c3d18418 <col:13, col:18> 'err' 0x297c3d099c8
|   |   `-IfStmt 0x297c3d186d0 <line:770:9, line:772:18>
|   |     |-OpaqueValueExpr 0x297c3d186b8 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x297c3d186a0 <col:13, col:18> 'err' 0x297c3d099c8
|   `-LabelStmt 0x297c3d18760 <line:776:2, col:5> 'err'
|     `-NullStmt 0x297c3d18758 <col:5>
|-FunctionDecl 0x297c3d18990 <line:783:1, line:808:1> line:783:12 invalid ts_TST_INFO_content_new 'int (int *)' static
| |-ParmVarDecl 0x297c3d188f8 <col:36, col:43> col:43 invalid p7 'int *'
| `-CompoundStmt 0x297c3d11240 <line:784:1, line:808:1>
|   |-IfStmt 0x297c3d18b28 <line:789:5, line:790:14>
|   | |-OpaqueValueExpr 0x297c3d18b10 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d18af8 <col:9, col:14> 'err' 0x297c3d18aa8
|   |-IfStmt 0x297c3d18cb8 <line:791:5, line:792:14>
|   | |-OpaqueValueExpr 0x297c3d18ca0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d18c88 <col:9, col:14> 'err' 0x297c3d18aa8
|   |-IfStmt 0x297c3d18e68 <line:794:5, line:795:14>
|   | |-OpaqueValueExpr 0x297c3d18e50 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d18e38 <col:9, col:14> 'err' 0x297c3d18aa8
|   |-IfStmt 0x297c3d190d0 <line:800:5, line:801:14>
|   | |-OpaqueValueExpr 0x297c3d190b8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x297c3d190a0 <col:9, col:14> 'err' 0x297c3d18aa8
|   |-ReturnStmt 0x297c3d110a8 <line:803:5, col:12>
|   | `-IntegerLiteral 0x297c3d11080 <col:12> 'int' 1
|   |-LabelStmt 0x297c3d111d0 <line:804:2, col:5> 'err'
|   | `-NullStmt 0x297c3d111c8 <col:5>
|   `-ReturnStmt 0x297c3d11230 <line:807:5, col:12>
|     `-IntegerLiteral 0x297c3d11208 <col:12> 'int' 0
|-FunctionDecl 0x297c3d113c0 <line:810:1, line:837:1> line:810:12 invalid ESS_add_signing_cert 'int (int *, int *)' static
| |-ParmVarDecl 0x297c3d112a0 <col:33, col:52> col:52 invalid si 'int *'
| |-ParmVarDecl 0x297c3d11320 <col:56, col:74> col:74 invalid sc 'int *'
| `-CompoundStmt 0x297c3d160e0 <line:811:1, line:837:1>
|   |-DeclStmt 0x297c3d115a0 <line:813:5, col:33>
|   | |-VarDecl 0x297c3d114a0 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x297c3d11520 <col:5, col:24> col:24 used pp 'unsigned char *'
|   |-DeclStmt 0x297c3d11638 <line:814:5, col:12>
|   | `-VarDecl 0x297c3d115d0 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x297c3d11a68 <line:817:5, line:820:5>
|   | |-OpaqueValueExpr 0x297c3d11a50 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d11a38 <line:817:45, line:820:5>
|   |   `-GotoStmt 0x297c3d11a20 <line:819:9, col:14> 'err' 0x297c3d119d0
|   |-BinaryOperator 0x297c3d11af0 <line:821:5, col:9> 'unsigned char *' '='
|   | |-DeclRefExpr 0x297c3d11a80 <col:5> 'unsigned char *' lvalue Var 0x297c3d114a0 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x297c3d11ad8 <col:9> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x297c3d11ab8 <col:9> 'unsigned char *' lvalue Var 0x297c3d11520 'pp' 'unsigned char *'
|   |-IfStmt 0x297c3d11da0 <line:823:5, line:826:5>
|   | |-OpaqueValueExpr 0x297c3d11d88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x297c3d11d70 <line:823:78, line:826:5>
|   |   `-GotoStmt 0x297c3d11d58 <line:825:9, col:14> 'err' 0x297c3d119d0
|   |-CallExpr 0x297c3d11e10 <line:827:5, col:20> 'int'
|   | |-ImplicitCastExpr 0x297c3d11df8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x297c3d11db8 <col:5> 'int ()' Function 0x297c3d037d8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x297c3d11e38 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x297c3d11dd8 <col:18> 'unsigned char *' lvalue Var 0x297c3d11520 'pp' 'unsigned char *'
|   |-LabelStmt 0x297c3d11fa8 <line:832:2, col:5> 'err'
|   | `-NullStmt 0x297c3d11fa0 <col:5>
|   |-CallExpr 0x297c3d12018 <line:834:5, col:20> 'int'
|   | |-ImplicitCastExpr 0x297c3d12000 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x297c3d11fc0 <col:5> 'int ()' Function 0x297c3d037d8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x297c3d12040 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x297c3d11fe0 <col:18> 'unsigned char *' lvalue Var 0x297c3d11520 'pp' 'unsigned char *'
|   `-ReturnStmt 0x297c3d160d0 <line:836:5, col:12>
|     `-IntegerLiteral 0x297c3d12058 <col:12> 'int' 0
`-FunctionDecl 0x297c3d16380 <line:839:1, line:905:1> line:840:2 invalid TS_RESP_set_genTime_with_precision 'int *(int *, long, long, unsigned int)' static
  |-ParmVarDecl 0x297c3d16150 <col:37, col:59> col:59 invalid asn1_time 'int *'
  |-ParmVarDecl 0x297c3d161d0 <line:841:37, col:42> col:42 sec 'long'
  |-ParmVarDecl 0x297c3d16250 <col:47, col:52> col:52 used usec 'long'
  |-ParmVarDecl 0x297c3d162d0 <col:58, col:67> col:67 used precision 'unsigned int'
  `-CompoundStmt 0x297c3d139b0 <line:842:1, line:905:1>
    |-DeclStmt 0x297c3d166e0 <line:844:5, col:36>
    | |-RecordDecl 0x297c3d16458 <col:5, col:12> col:12 struct tm
    | |-VarDecl 0x297c3d165d0 <col:5, col:16> col:16 used tm 'struct tm *'
    | `-VarDecl 0x297c3d16658 <col:5, col:27> col:27 invalid tm_result 'struct tm':'struct tm'
    |-DeclStmt 0x297c3d16798 <line:845:5, col:57>
    | `-VarDecl 0x297c3d16730 <col:5, col:10> col:10 invalid genTime_str 'char'
    |-DeclStmt 0x297c3d16830 <line:846:5, col:26>
    | `-VarDecl 0x297c3d167c8 <col:5, col:11> col:11 used p 'char *'
    |-DeclStmt 0x297c3d168c8 <line:847:5, col:52>
    | `-VarDecl 0x297c3d16860 <col:5, col:11> col:11 used p_end 'char *'
    |-IfStmt 0x297c3d16998 <line:849:5, line:850:14>
    | |-OpaqueValueExpr 0x297c3d16980 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x297c3d16968 <col:9, col:14> 'err' 0x297c3d16918
    |-IfStmt 0x297c3d16b28 <line:852:5, line:853:14>
    | |-OpaqueValueExpr 0x297c3d16b10 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x297c3d16af8 <col:9, col:14> 'err' 0x297c3d16918
    |-IfStmt 0x297c3d134f8 <line:866:5, line:889:5>
    | |-BinaryOperator 0x297c3d16fd0 <line:866:9, col:21> 'int' '>'
    | | |-ImplicitCastExpr 0x297c3d16fa0 <col:9> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x297c3d16f58 <col:9> 'unsigned int' lvalue ParmVar 0x297c3d162d0 'precision' 'unsigned int'
    | | `-ImplicitCastExpr 0x297c3d16fb8 <col:21> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x297c3d16f78 <col:21> 'int' 0
    | `-CompoundStmt 0x297c3d134c8 <col:24, line:889:5>
    |   |-CallExpr 0x297c3d13148 <line:867:9, col:54> 'int'
    |   | |-ImplicitCastExpr 0x297c3d13130 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x297c3d16ff0 <col:9> 'int ()' Function 0x297c3d16ba0 'BIO_snprintf' 'int ()'
    |   | |-ImplicitCastExpr 0x297c3d13188 <col:22> 'char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x297c3d17010 <col:22> 'char *' lvalue Var 0x297c3d167c8 'p' 'char *'
    |   | |-BinaryOperator 0x297c3d170a8 <col:25, col:29> 'unsigned int' '+'
    |   | | |-ImplicitCastExpr 0x297c3d17090 <col:25> 'unsigned int' <IntegralCast>
    |   | | | `-IntegerLiteral 0x297c3d17030 <col:25> 'int' 2
    |   | | `-ImplicitCastExpr 0x297c3d17078 <col:29> 'unsigned int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x297c3d17058 <col:29> 'unsigned int' lvalue ParmVar 0x297c3d162d0 'precision' 'unsigned int'
    |   | |-ImplicitCastExpr 0x297c3d131a0 <col:40> 'char *' <ArrayToPointerDecay>
    |   | | `-StringLiteral 0x297c3d130d8 <col:40> 'char [7]' lvalue ".%06ld"
    |   | `-ImplicitCastExpr 0x297c3d131b8 <col:50> 'long' <LValueToRValue>
    |   |   `-DeclRefExpr 0x297c3d130f8 <col:50> 'long' lvalue ParmVar 0x297c3d16250 'usec' 'long'
    |   |-CompoundAssignOperator 0x297c3d132b8 <line:868:9, col:22> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
    |   | |-DeclRefExpr 0x297c3d131d0 <col:9> 'char *' lvalue Var 0x297c3d167c8 'p' 'char *'
    |   | `-CallExpr 0x297c3d13260 <col:14, col:22> 'unsigned long long'
    |   |   |-ImplicitCastExpr 0x297c3d13248 <col:14> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x297c3d131f0 <col:14> 'unsigned long long (const char *)' Function 0x297c3d00870 'strlen' 'unsigned long long (const char *)'
    |   |   `-ImplicitCastExpr 0x297c3d132a0 <col:21> 'const char *' <NoOp>
    |   |     `-ImplicitCastExpr 0x297c3d13288 <col:21> 'char *' <LValueToRValue>
    |   |       `-DeclRefExpr 0x297c3d13210 <col:21> 'char *' lvalue Var 0x297c3d167c8 'p' 'char *'
    |   |-WhileStmt 0x297c3d133a8 <line:885:9, line:886:14>
    |   | |-BinaryOperator 0x297c3d13380 <line:885:16, col:24> 'int' '=='
    |   | | |-ImplicitCastExpr 0x297c3d13368 <col:16, col:19> 'int' <IntegralCast>
    |   | | | `-ImplicitCastExpr 0x297c3d13350 <col:16, col:19> 'char' <LValueToRValue>
    |   | | |   `-UnaryOperator 0x297c3d13320 <col:16, col:19> 'char' lvalue prefix '*' cannot overflow
    |   | | |     `-UnaryOperator 0x297c3d13308 <col:17, col:19> 'char *' prefix '--'
    |   | | |       `-DeclRefExpr 0x297c3d132e8 <col:19> 'char *' lvalue Var 0x297c3d167c8 'p' 'char *'
    |   | | `-CharacterLiteral 0x297c3d13338 <col:24> 'int' 48
    |   | `-ContinueStmt 0x297c3d133a0 <line:886:14>
    |   `-IfStmt 0x297c3d134b0 <line:887:9, line:888:15>
    |     |-BinaryOperator 0x297c3d13458 <line:887:13, col:19> 'int' '!='
    |     | |-ImplicitCastExpr 0x297c3d13440 <col:13, col:14> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x297c3d13428 <col:13, col:14> 'char' <LValueToRValue>
    |     | |   `-UnaryOperator 0x297c3d133f8 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
    |     | |     `-ImplicitCastExpr 0x297c3d133e0 <col:14> 'char *' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x297c3d133c0 <col:14> 'char *' lvalue Var 0x297c3d167c8 'p' 'char *'
    |     | `-CharacterLiteral 0x297c3d13410 <col:19> 'int' 46
    |     `-UnaryOperator 0x297c3d13498 <line:888:13, col:15> 'char *' prefix '++'
    |       `-DeclRefExpr 0x297c3d13478 <col:15> 'char *' lvalue Var 0x297c3d167c8 'p' 'char *'
    |-BinaryOperator 0x297c3d13590 <line:890:5, col:12> 'char' '='
    | |-UnaryOperator 0x297c3d13548 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x297c3d13530 <col:6, col:7> 'char *' postfix '++'
    | |   `-DeclRefExpr 0x297c3d13510 <col:6> 'char *' lvalue Var 0x297c3d167c8 'p' 'char *'
    | `-ImplicitCastExpr 0x297c3d13578 <col:12> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x297c3d13560 <col:12> 'int' 90
    |-BinaryOperator 0x297c3d13630 <line:891:5, col:12> 'char' '='
    | |-UnaryOperator 0x297c3d135e8 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
    | | `-UnaryOperator 0x297c3d135d0 <col:6, col:7> 'char *' postfix '++'
    | |   `-DeclRefExpr 0x297c3d135b0 <col:6> 'char *' lvalue Var 0x297c3d167c8 'p' 'char *'
    | `-ImplicitCastExpr 0x297c3d13618 <col:12> 'char' <IntegralCast>
    |   `-CharacterLiteral 0x297c3d13600 <col:12> 'int' 0
    |-IfStmt 0x297c3d137c8 <line:893:5, line:895:14>
    | |-OpaqueValueExpr 0x297c3d137b0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x297c3d13798 <col:9, col:14> 'err' 0x297c3d16918
    |-IfStmt 0x297c3d13958 <line:896:5, line:899:5>
    | |-OpaqueValueExpr 0x297c3d13940 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x297c3d13928 <line:896:67, line:899:5>
    |   `-GotoStmt 0x297c3d13910 <line:898:9, col:14> 'err' 0x297c3d16918
    `-LabelStmt 0x297c3d13998 <line:902:2, col:5> 'err'
      `-NullStmt 0x297c3d13990 <col:5>
