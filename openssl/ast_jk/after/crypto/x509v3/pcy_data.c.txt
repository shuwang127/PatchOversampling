TranslationUnitDecl 0x2b8d5270c88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2b8d5271520 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2b8d5271220 '__int128'
|-TypedefDecl 0x2b8d5271590 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2b8d5271240 'unsigned __int128'
|-TypedefDecl 0x2b8d52718c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2b8d5271680 'struct __NSConstantString_tag'
|   `-Record 0x2b8d52715e8 '__NSConstantString_tag'
|-TypedefDecl 0x2b8d5271938 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2b8d5270e60 'unsigned long long'
|-TypedefDecl 0x2b8d52719d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2b8d5271990 'char *'
|   `-BuiltinType 0x2b8d5270d20 'char'
|-TypedefDecl 0x2b8d5271a40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2b8d5271990 'char *'
|   `-BuiltinType 0x2b8d5270d20 'char'
|-RecordDecl 0x2b8d5271a98 <.//openssl//file_jk/after\crypto\x509v3/pcy_int.h:10:9, col:16> col:16 struct X509_POLICY_DATA_st
|-TypedefDecl 0x2b8d5271ba8 <col:1, col:36> col:36 referenced X509_POLICY_DATA 'struct X509_POLICY_DATA_st':'struct X509_POLICY_DATA_st'
| `-ElaboratedType 0x2b8d5271b50 'struct X509_POLICY_DATA_st' sugar
|   `-RecordType 0x2b8d5271b30 'struct X509_POLICY_DATA_st'
|     `-Record 0x2b8d6bf7bb8 'X509_POLICY_DATA_st'
|-FunctionDecl 0x2b8d6bf7ab0 <line:12:1, col:33> col:1 DEFINE_STACK_OF 'int (X509_POLICY_DATA)'
| `-ParmVarDecl 0x2b8d6bf79b0 <col:17> col:33 'X509_POLICY_DATA':'struct X509_POLICY_DATA_st'
|-RecordDecl 0x2b8d6bf7bb8 prev 0x2b8d5271a98 <line:23:1, line:29:1> line:23:8 invalid struct X509_POLICY_DATA_st definition
| |-FieldDecl 0x2b8d6bf7c50 <line:24:5, col:18> col:18 referenced flags 'unsigned int'
| |-FieldDecl 0x2b8d6bf7cf0 <line:26:5, col:18> col:18 invalid valid_policy 'int *'
| `-FieldDecl 0x2b8d6bf7da0 <line:27:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
|-RecordDecl 0x2b8d6bf7e78 <line:65:1, line:82:1> line:65:8 invalid struct X509_POLICY_CACHE_st definition
| |-FieldDecl 0x2b8d6bf7f98 <line:67:5, col:23> col:23 anyPolicy 'X509_POLICY_DATA *'
| |-FieldDecl 0x2b8d6bf8098 <line:69:5, <invalid sloc>> col:5 invalid STACK_OF 'int (X509_POLICY_DATA)'
| |-FieldDecl 0x2b8d6bf8108 <line:71:5, col:10> col:10 any_skip 'long'
| |-FieldDecl 0x2b8d6bf8178 <line:76:5, col:10> col:10 explicit_skip 'long'
| `-FieldDecl 0x2b8d6bf81e8 <line:81:5, col:10> col:10 map_skip 'long'
|-RecordDecl 0x2b8d6bf8240 <line:90:1, line:97:1> line:90:8 invalid struct X509_POLICY_NODE_st definition
| |-FieldDecl 0x2b8d6bf8368 <line:92:5, col:29> col:29 data 'const X509_POLICY_DATA *'
| |-FieldDecl 0x2b8d6bf83d8 <line:94:5, col:23> col:23 invalid parent 'int *'
| `-FieldDecl 0x2b8d6bf8448 <line:96:5, col:9> col:9 nchild 'int'
|-RecordDecl 0x2b8d6bf84a0 <line:99:1, line:111:1> line:99:8 invalid struct X509_POLICY_LEVEL_st definition
| |-FieldDecl 0x2b8d6bf8578 <line:101:5, col:11> col:11 invalid cert 'int *'
| |-FieldDecl 0x2b8d6bf85f8 <line:103:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
| |-FieldDecl 0x2b8d6bf8668 <line:105:5, col:23> col:23 invalid anyPolicy 'int *'
| `-FieldDecl 0x2b8d6bf86d8 <line:110:5, col:18> col:18 flags 'unsigned int'
|-RecordDecl 0x2b8d6bf8730 <line:113:1, line:126:1> line:113:8 invalid struct X509_POLICY_TREE_st definition
| |-FieldDecl 0x2b8d6bf8808 <line:115:5, col:24> col:24 invalid levels 'int *'
| |-FieldDecl 0x2b8d6bf8878 <line:116:5, col:9> col:9 nlevel 'int'
| |-FieldDecl 0x2b8d6bf99d0 <line:121:5, <invalid sloc>> col:5 invalid STACK_OF 'int (X509_POLICY_DATA)'
| `-FieldDecl 0x2b8d6bf9b40 <line:125:5, col:18> col:18 flags 'unsigned int'
|-FunctionDecl 0x2b8d6bf9dd8 <line:138:1, line:139:43> line:138:19 invalid policy_data_new 'X509_POLICY_DATA *(int *, const int *, int)'
| |-ParmVarDecl 0x2b8d6bf9bb0 <col:35, col:47> col:47 invalid policy 'int *'
| |-ParmVarDecl 0x2b8d6bf9c30 <col:55, col:74> col:74 invalid id 'const int *'
| `-ParmVarDecl 0x2b8d6bf9cb0 <line:139:35, col:39> col:39 crit 'int'
|-FunctionDecl 0x2b8d6bf9fa8 <line:140:1, col:45> col:6 policy_data_free 'void (X509_POLICY_DATA *)'
| `-ParmVarDecl 0x2b8d6bf9ea0 <col:23, col:41> col:41 data 'X509_POLICY_DATA *'
|-FunctionDecl 0x2b8d6bfa218 <line:142:1, line:143:63> line:142:19 invalid policy_cache_find_data 'X509_POLICY_DATA *(const int *, const int *)'
| |-ParmVarDecl 0x2b8d6bfa080 <col:42, col:67> col:67 invalid cache 'const int *'
| `-ParmVarDecl 0x2b8d6bfa100 <line:143:42, col:61> col:61 invalid id 'const int *'
|-FunctionDecl 0x2b8d6bfa440 <line:144:1, col:60> col:5 invalid policy_cache_set_mapping 'int (int *, int *)'
| |-ParmVarDecl 0x2b8d6bfa2e0 <col:30, col:36> col:36 invalid x 'int *'
| `-ParmVarDecl 0x2b8d6bfa360 <col:39, col:56> col:56 invalid maps 'int *'
|-FunctionDecl 0x2b8d6bfa5b8 <line:148:1, col:28> col:6 policy_cache_init 'void (void)'
|-FunctionDecl 0x2b8d6bfa748 <line:150:1, col:48> col:6 invalid policy_cache_free 'void (int *)'
| `-ParmVarDecl 0x2b8d6bfa688 <col:24, col:43> col:43 invalid cache 'int *'
|-FunctionDecl 0x2b8d6bfaa20 <line:152:1, line:154:56> line:152:19 invalid level_find_node 'int *(const int *, const int *, const int *)'
| |-ParmVarDecl 0x2b8d6bfa808 <col:35, col:60> col:60 invalid level 'const int *'
| |-ParmVarDecl 0x2b8d6bfa888 <line:153:35, col:59> col:59 invalid parent 'const int *'
| `-ParmVarDecl 0x2b8d6bfa908 <line:154:35, col:54> col:54 invalid id 'const int *'
|-FunctionDecl 0x2b8d6bfac60 <line:156:1, line:157:53> line:156:19 invalid tree_find_sk 'int *(int (*)())'
| `-ParmVarDecl 0x2b8d6bfab60 <col:32, <invalid sloc>> col:32 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x2b8d6bfafe0 <line:159:1, line:162:56> line:159:19 invalid level_add_node 'int *(int *, X509_POLICY_DATA *, int *, int *)'
| |-ParmVarDecl 0x2b8d6bfad20 <col:34, col:53> col:53 invalid level 'int *'
| |-ParmVarDecl 0x2b8d6bfad98 <line:160:34, col:52> col:52 data 'X509_POLICY_DATA *'
| |-ParmVarDecl 0x2b8d6bfae18 <line:161:34, col:52> col:52 invalid parent 'int *'
| `-ParmVarDecl 0x2b8d6bfae98 <line:162:34, col:52> col:52 invalid tree 'int *'
|-FunctionDecl 0x2b8d6bfb148 <line:163:1, col:45> col:6 invalid policy_node_free 'void (int *)'
| `-ParmVarDecl 0x2b8d6bfb0b8 <col:23, col:41> col:41 invalid node 'int *'
|-FunctionDecl 0x2b8d6bfb3f0 <line:164:1, line:165:75> line:164:5 invalid policy_node_match 'int (const int *, const int *, const int *)'
| |-ParmVarDecl 0x2b8d6bfb208 <col:23, col:48> col:48 invalid lvl 'const int *'
| |-ParmVarDecl 0x2b8d6bfb288 <line:165:23, col:47> col:47 invalid node 'const int *'
| `-ParmVarDecl 0x2b8d6bfb308 <col:53, col:72> col:72 invalid oid 'const int *'
|-FunctionDecl 0x2b8d6bfb590 <line:167:1, col:50> col:26 invalid policy_cache_set 'const int *(int *)'
| `-ParmVarDecl 0x2b8d6bfb4c0 <col:43, col:49> col:49 invalid x 'int *'
|-FunctionDecl 0x2b8d6bfb6f0 prev 0x2b8d6bf9fa8 <.//openssl//file_jk/after\crypto\x509v3\pcy_data.c:18:1, line:28:1> line:18:6 policy_data_free 'void (X509_POLICY_DATA *)'
| |-ParmVarDecl 0x2b8d6bfb648 <col:23, col:41> col:41 used data 'X509_POLICY_DATA *'
| `-CompoundStmt 0x2b8d6bfcee8 <line:19:1, line:28:1>
|   |-IfStmt 0x2b8d6bfb7f8 <line:20:5, line:21:9>
|   | |-UnaryOperator 0x2b8d6bfb7d0 <line:20:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2b8d6bfb7b8 <col:10> 'X509_POLICY_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2b8d6bfb798 <col:10> 'X509_POLICY_DATA *' lvalue ParmVar 0x2b8d6bfb648 'data' 'X509_POLICY_DATA *'
|   | `-ReturnStmt 0x2b8d6bfb7e8 <line:21:9>
|   `-CallExpr 0x2b8d6bfcea8 <line:27:5, col:22> 'int'
|     |-ImplicitCastExpr 0x2b8d6bfce90 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2b8d6bfce50 <col:5> 'int ()' Function 0x2b8d6bfcd88 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x2b8d6bfced0 <col:18> 'X509_POLICY_DATA *' <LValueToRValue>
|       `-DeclRefExpr 0x2b8d6bfce70 <col:18> 'X509_POLICY_DATA *' lvalue ParmVar 0x2b8d6bfb648 'data' 'X509_POLICY_DATA *'
`-FunctionDecl 0x2b8d6bfd0c0 <line:38:1, line:77:1> line:38:19 invalid policy_data_new 'X509_POLICY_DATA *(int *, const int *, int)'
  |-ParmVarDecl 0x2b8d6bfcf20 <col:35, col:47> col:47 invalid policy 'int *'
  |-ParmVarDecl 0x2b8d6bfcfa0 <line:39:35, col:54> col:54 invalid cid 'const int *'
  |-ParmVarDecl 0x2b8d6bfd020 <col:59, col:63> col:63 used crit 'int'
  `-CompoundStmt 0x2b8d6bfbb58 <line:40:1, line:77:1>
    |-DeclStmt 0x2b8d6bfd208 <line:41:5, col:26>
    | `-VarDecl 0x2b8d6bfd1a0 <col:5, col:23> col:23 used ret 'X509_POLICY_DATA *'
    |-IfStmt 0x2b8d6bfd360 <line:45:5, line:50:9> has_else
    | |-OpaqueValueExpr 0x2b8d6bfd348 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x2b8d6bfd330 <line:45:14, line:49:5>
    | `-NullStmt 0x2b8d6bfd340 <line:50:9>
    |-BinaryOperator 0x2b8d6bfd5b8 <line:51:5, col:38> 'X509_POLICY_DATA *' '='
    | |-DeclRefExpr 0x2b8d6bfd388 <col:5> 'X509_POLICY_DATA *' lvalue Var 0x2b8d6bfd1a0 'ret' 'X509_POLICY_DATA *'
    | `-ImplicitCastExpr 0x2b8d6bfd5a0 <col:11, col:38> 'X509_POLICY_DATA *' <IntegralToPointer>
    |   `-CallExpr 0x2b8d6bfd578 <col:11, col:38> 'int'
    |     |-ImplicitCastExpr 0x2b8d6bfd560 <col:11> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x2b8d6bfd4b0 <col:11> 'int ()' Function 0x2b8d6bfd3e8 'OPENSSL_zalloc' 'int ()'
    |     `-UnaryExprOrTypeTraitExpr 0x2b8d6bfd540 <col:26, col:37> 'unsigned long long' sizeof
    |       `-ParenExpr 0x2b8d6bfd520 <col:32, col:37> 'X509_POLICY_DATA':'struct X509_POLICY_DATA_st' lvalue
    |         `-UnaryOperator 0x2b8d6bfd508 <col:33, col:34> 'X509_POLICY_DATA':'struct X509_POLICY_DATA_st' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x2b8d6bfd4f0 <col:34> 'X509_POLICY_DATA *' <LValueToRValue>
    |             `-DeclRefExpr 0x2b8d6bfd4d0 <col:34> 'X509_POLICY_DATA *' lvalue Var 0x2b8d6bfd1a0 'ret' 'X509_POLICY_DATA *' non_odr_use_unevaluated
    |-IfStmt 0x2b8d6bfd898 <line:55:5, line:59:5>
    | |-OpaqueValueExpr 0x2b8d6bfd880 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x2b8d6bfd868 <line:55:43, line:59:5>
    |   `-CallExpr 0x2b8d6bfd808 <line:56:9, col:25> 'int'
    |     |-ImplicitCastExpr 0x2b8d6bfd7f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x2b8d6bfd7b0 <col:9> 'int ()' Function 0x2b8d6bfcd88 'OPENSSL_free' 'int ()'
    |     `-ImplicitCastExpr 0x2b8d6bfd830 <col:22> 'X509_POLICY_DATA *' <LValueToRValue>
    |       `-DeclRefExpr 0x2b8d6bfd7d0 <col:22> 'X509_POLICY_DATA *' lvalue Var 0x2b8d6bfd1a0 'ret' 'X509_POLICY_DATA *'
    |-IfStmt 0x2b8d6bfd9c8 <line:61:5, .//openssl//file_jk/after\crypto\x509v3/pcy_int.h:61:49>
    | |-ImplicitCastExpr 0x2b8d6bfd8e8 <.//openssl//file_jk/after\crypto\x509v3\pcy_data.c:61:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x2b8d6bfd8b0 <col:9> 'int' lvalue ParmVar 0x2b8d6bfd020 'crit' 'int'
    | `-BinaryOperator 0x2b8d6bfd9a8 <line:62:9, .//openssl//file_jk/after\crypto\x509v3/pcy_int.h:61:49> 'unsigned int' '='
    |   |-MemberExpr 0x2b8d6bfd938 <.//openssl//file_jk/after\crypto\x509v3\pcy_data.c:62:9, col:14> 'unsigned int' lvalue ->flags 0x2b8d6bf7c50
    |   | `-ImplicitCastExpr 0x2b8d6bfd920 <col:9> 'X509_POLICY_DATA *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x2b8d6bfd900 <col:9> 'X509_POLICY_DATA *' lvalue Var 0x2b8d6bfd1a0 'ret' 'X509_POLICY_DATA *'
    |   `-ImplicitCastExpr 0x2b8d6bfd990 <.//openssl//file_jk/after\crypto\x509v3/pcy_int.h:61:49> 'unsigned int' <IntegralCast>
    |     `-IntegerLiteral 0x2b8d6bfd968 <col:49> 'int' 16
    |-IfStmt 0x2b8d6bfba70 <.//openssl//file_jk/after\crypto\x509v3\pcy_data.c:64:5, line:69:5> has_else
    | |-OpaqueValueExpr 0x2b8d6bfba58 <<invalid sloc>> '_Bool'
    | |-NullStmt 0x2b8d6bfba50 <line:65:9>
    | `-CompoundStmt 0x2b8d6bfba40 <line:66:10, line:69:5>
    |-IfStmt 0x2b8d6bfbaf8 <line:71:5, line:74:5>
    | |-OpaqueValueExpr 0x2b8d6bfbae0 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x2b8d6bfbad0 <line:71:17, line:74:5>
    `-ReturnStmt 0x2b8d6bfbb48 <line:76:5, col:12>
      `-ImplicitCastExpr 0x2b8d6bfbb30 <col:12> 'X509_POLICY_DATA *' <LValueToRValue>
        `-DeclRefExpr 0x2b8d6bfbb10 <col:12> 'X509_POLICY_DATA *' lvalue Var 0x2b8d6bfd1a0 'ret' 'X509_POLICY_DATA *'
