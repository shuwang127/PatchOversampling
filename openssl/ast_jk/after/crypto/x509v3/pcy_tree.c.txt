TranslationUnitDecl 0x160b5ea6ff8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x160b5ea7890 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x160b5ea7590 '__int128'
|-TypedefDecl 0x160b5ea7900 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x160b5ea75b0 'unsigned __int128'
|-TypedefDecl 0x160b5ea7c38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x160b5ea79f0 'struct __NSConstantString_tag'
|   `-Record 0x160b5ea7958 '__NSConstantString_tag'
|-TypedefDecl 0x160b5ea7ca8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x160b5ea71d0 'unsigned long long'
|-TypedefDecl 0x160b5ea7d40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x160b5ea7d00 'char *'
|   `-BuiltinType 0x160b5ea7090 'char'
|-TypedefDecl 0x160b5ea7db0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x160b5ea7d00 'char *'
|   `-BuiltinType 0x160b5ea7090 'char'
|-RecordDecl 0x160b5ea7e08 <.//openssl//file_jk/after\crypto\x509v3/pcy_int.h:10:9, col:16> col:16 struct X509_POLICY_DATA_st
|-TypedefDecl 0x160b5ea7f18 <col:1, col:36> col:36 referenced X509_POLICY_DATA 'struct X509_POLICY_DATA_st':'struct X509_POLICY_DATA_st'
| `-ElaboratedType 0x160b5ea7ec0 'struct X509_POLICY_DATA_st' sugar
|   `-RecordType 0x160b5ea7ea0 'struct X509_POLICY_DATA_st'
|     `-Record 0x160b771f098 'X509_POLICY_DATA_st'
|-FunctionDecl 0x160b771ef90 <line:12:1, col:33> col:1 DEFINE_STACK_OF 'int (X509_POLICY_DATA)'
| `-ParmVarDecl 0x160b771ee90 <col:17> col:33 'X509_POLICY_DATA':'struct X509_POLICY_DATA_st'
|-RecordDecl 0x160b771f098 prev 0x160b5ea7e08 <line:23:1, line:29:1> line:23:8 invalid struct X509_POLICY_DATA_st definition
| |-FieldDecl 0x160b771f130 <line:24:5, col:18> col:18 referenced flags 'unsigned int'
| |-FieldDecl 0x160b771f1d0 <line:26:5, col:18> col:18 invalid valid_policy 'int *'
| `-FieldDecl 0x160b771f280 <line:27:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
|-RecordDecl 0x160b771f358 <line:65:1, line:82:1> line:65:8 invalid struct X509_POLICY_CACHE_st definition
| |-FieldDecl 0x160b771f478 <line:67:5, col:23> col:23 anyPolicy 'X509_POLICY_DATA *'
| |-FieldDecl 0x160b771f578 <line:69:5, <invalid sloc>> col:5 invalid STACK_OF 'int (X509_POLICY_DATA)'
| |-FieldDecl 0x160b771f5e8 <line:71:5, col:10> col:10 any_skip 'long'
| |-FieldDecl 0x160b771f658 <line:76:5, col:10> col:10 explicit_skip 'long'
| `-FieldDecl 0x160b771f6c8 <line:81:5, col:10> col:10 map_skip 'long'
|-RecordDecl 0x160b771f720 <line:90:1, line:97:1> line:90:8 invalid struct X509_POLICY_NODE_st definition
| |-FieldDecl 0x160b771f848 <line:92:5, col:29> col:29 data 'const X509_POLICY_DATA *'
| |-FieldDecl 0x160b771f8b8 <line:94:5, col:23> col:23 invalid parent 'int *'
| `-FieldDecl 0x160b771f928 <line:96:5, col:9> col:9 nchild 'int'
|-RecordDecl 0x160b771f980 <line:99:1, line:111:1> line:99:8 invalid struct X509_POLICY_LEVEL_st definition
| |-FieldDecl 0x160b771fa58 <line:101:5, col:11> col:11 invalid cert 'int *'
| |-FieldDecl 0x160b771fad8 <line:103:5, <invalid sloc>> col:5 invalid STACK_OF 'int ()'
| |-FieldDecl 0x160b771fb48 <line:105:5, col:23> col:23 invalid anyPolicy 'int *'
| `-FieldDecl 0x160b771fbb8 <line:110:5, col:18> col:18 flags 'unsigned int'
|-RecordDecl 0x160b771fc10 <line:113:1, line:126:1> line:113:8 invalid struct X509_POLICY_TREE_st definition
| |-FieldDecl 0x160b771fce8 <line:115:5, col:24> col:24 invalid levels 'int *'
| |-FieldDecl 0x160b771fd58 <line:116:5, col:9> col:9 nlevel 'int'
| |-FieldDecl 0x160b7722ed0 <line:121:5, <invalid sloc>> col:5 invalid STACK_OF 'int (X509_POLICY_DATA)'
| `-FieldDecl 0x160b7723040 <line:125:5, col:18> col:18 flags 'unsigned int'
|-FunctionDecl 0x160b77232d8 <line:138:1, line:139:43> line:138:19 invalid policy_data_new 'X509_POLICY_DATA *(int *, const int *, int)'
| |-ParmVarDecl 0x160b77230b0 <col:35, col:47> col:47 invalid policy 'int *'
| |-ParmVarDecl 0x160b7723130 <col:55, col:74> col:74 invalid id 'const int *'
| `-ParmVarDecl 0x160b77231b0 <line:139:35, col:39> col:39 crit 'int'
|-FunctionDecl 0x160b77234a8 <line:140:1, col:45> col:6 used policy_data_free 'void (X509_POLICY_DATA *)'
| `-ParmVarDecl 0x160b77233a0 <col:23, col:41> col:41 data 'X509_POLICY_DATA *'
|-FunctionDecl 0x160b7723718 <line:142:1, line:143:63> line:142:19 invalid policy_cache_find_data 'X509_POLICY_DATA *(const int *, const int *)'
| |-ParmVarDecl 0x160b7723580 <col:42, col:67> col:67 invalid cache 'const int *'
| `-ParmVarDecl 0x160b7723600 <line:143:42, col:61> col:61 invalid id 'const int *'
|-FunctionDecl 0x160b7723940 <line:144:1, col:60> col:5 invalid policy_cache_set_mapping 'int (int *, int *)'
| |-ParmVarDecl 0x160b77237e0 <col:30, col:36> col:36 invalid x 'int *'
| `-ParmVarDecl 0x160b7723860 <col:39, col:56> col:56 invalid maps 'int *'
|-FunctionDecl 0x160b7723ab8 <line:148:1, col:28> col:6 policy_cache_init 'void (void)'
|-FunctionDecl 0x160b7723c48 <line:150:1, col:48> col:6 invalid policy_cache_free 'void (int *)'
| `-ParmVarDecl 0x160b7723b88 <col:24, col:43> col:43 invalid cache 'int *'
|-FunctionDecl 0x160b7721f00 <line:152:1, line:154:56> line:152:19 invalid level_find_node 'int *(const int *, const int *, const int *)'
| |-ParmVarDecl 0x160b7723d08 <col:35, col:60> col:60 invalid level 'const int *'
| |-ParmVarDecl 0x160b7723d88 <line:153:35, col:59> col:59 invalid parent 'const int *'
| `-ParmVarDecl 0x160b7723e08 <line:154:35, col:54> col:54 invalid id 'const int *'
|-FunctionDecl 0x160b7722140 <line:156:1, line:157:53> line:156:19 invalid tree_find_sk 'int *(int (*)())'
| `-ParmVarDecl 0x160b7722040 <col:32, <invalid sloc>> col:32 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x160b77224c0 <line:159:1, line:162:56> line:159:19 invalid level_add_node 'int *(int *, X509_POLICY_DATA *, int *, int *)'
| |-ParmVarDecl 0x160b7722200 <col:34, col:53> col:53 invalid level 'int *'
| |-ParmVarDecl 0x160b7722278 <line:160:34, col:52> col:52 data 'X509_POLICY_DATA *'
| |-ParmVarDecl 0x160b77222f8 <line:161:34, col:52> col:52 invalid parent 'int *'
| `-ParmVarDecl 0x160b7722378 <line:162:34, col:52> col:52 invalid tree 'int *'
|-FunctionDecl 0x160b7722628 <line:163:1, col:45> col:6 invalid policy_node_free 'void (int *)'
| `-ParmVarDecl 0x160b7722598 <col:23, col:41> col:41 invalid node 'int *'
|-FunctionDecl 0x160b77228d0 <line:164:1, line:165:75> line:164:5 invalid policy_node_match 'int (const int *, const int *, const int *)'
| |-ParmVarDecl 0x160b77226e8 <col:23, col:48> col:48 invalid lvl 'const int *'
| |-ParmVarDecl 0x160b7722768 <line:165:23, col:47> col:47 invalid node 'const int *'
| `-ParmVarDecl 0x160b77227e8 <col:53, col:72> col:72 invalid oid 'const int *'
|-FunctionDecl 0x160b7722a70 <line:167:1, col:50> col:26 invalid policy_cache_set 'const int *(int *)'
| `-ParmVarDecl 0x160b77229a0 <col:43, col:49> col:49 invalid x 'int *'
|-FunctionDecl 0x160b7722d10 <.//openssl//file_jk/after\crypto\x509v3\pcy_tree.c:89:1, line:237:1> line:89:12 invalid tree_init 'int (int **, int (*)())' static
| |-ParmVarDecl 0x160b7722b68 <col:22, col:41> col:41 invalid ptree 'int **'
| |-ParmVarDecl 0x160b7722bf8 <col:48, <invalid sloc>> col:48 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x160b7730378 <line:91:1, line:237:1>
|   |-DeclStmt 0x160b7722e58 <line:94:5, col:35>
|   | `-VarDecl 0x160b7722df0 <col:5, col:30> col:30 invalid cache 'const int *'
|   |-DeclStmt 0x160b771dee8 <line:95:5, col:34>
|   | `-VarDecl 0x160b771de80 <col:5, col:23> col:23 used data 'X509_POLICY_DATA *'
|   |-DeclStmt 0x160b771df80 <line:96:5, col:34>
|   | `-VarDecl 0x160b771df18 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x160b771e150 <line:97:5, col:35>
|   | `-VarDecl 0x160b771dfb0 <col:5, col:9> col:9 used n 'int'
|   |-DeclStmt 0x160b771e2a8 <line:98:5, col:74>
|   | `-VarDecl 0x160b771e180 <col:5, col:9> col:9 used explicit_policy 'int'
|   |-DeclStmt 0x160b771e3e8 <line:99:5, col:63>
|   | `-VarDecl 0x160b771e2d8 <col:5, col:9> col:9 used any_skip 'int'
|   |-DeclStmt 0x160b771e528 <line:100:5, col:63>
|   | `-VarDecl 0x160b771e418 <col:5, col:9> col:9 used map_skip 'int'
|   |-DeclStmt 0x160b771e5c0 <line:101:5, col:10>
|   | `-VarDecl 0x160b771e558 <col:5, col:9> col:9 used i 'int'
|   |-ForStmt 0x160b771eaa0 <line:114:5, line:123:5>
|   | |-BinaryOperator 0x160b771e710 <line:114:10, col:18> 'int' '='
|   | | |-DeclRefExpr 0x160b771e658 <col:10> 'int' lvalue Var 0x160b771e558 'i' 'int'
|   | | `-BinaryOperator 0x160b771e6f0 <col:14, col:18> 'int' '-'
|   | |   |-ImplicitCastExpr 0x160b771e6d8 <col:14> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x160b771e690 <col:14> 'int' lvalue Var 0x160b771dfb0 'n' 'int'
|   | |   `-IntegerLiteral 0x160b771e6b0 <col:18> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x160b771e790 <col:21, col:26> 'int' '>='
|   | | |-ImplicitCastExpr 0x160b771e778 <col:21> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x160b771e730 <col:21> 'int' lvalue Var 0x160b771e558 'i' 'int'
|   | | `-IntegerLiteral 0x160b771e750 <col:26> 'int' 0
|   | |-UnaryOperator 0x160b771e7d0 <col:29, col:30> 'int' postfix '--'
|   | | `-DeclRefExpr 0x160b771e7b0 <col:29> 'int' lvalue Var 0x160b771e558 'i' 'int'
|   | `-CompoundStmt 0x160b771ea90 <col:34, line:123:5>
|   |-IfStmt 0x160b7724108 <line:162:5, line:163:16>
|   | |-OpaqueValueExpr 0x160b77240f0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x160b77240e0 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x160b77240c8 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x160b77240a8 <col:16> 'int' lvalue Var 0x160b771df18 'ret' 'int'
|   |-IfStmt 0x160b7724428 <line:176:5, line:179:5>
|   | |-OpaqueValueExpr 0x160b7724410 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x160b7724400 <line:176:79, line:179:5>
|   |-IfStmt 0x160b77246b0 <line:182:5, line:183:14>
|   | |-OpaqueValueExpr 0x160b7724698 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x160b7724680 <col:9, col:14> 'bad_tree' 0x160b7724630
|   |-IfStmt 0x160b7724830 <line:184:5, line:187:5>
|   | |-OpaqueValueExpr 0x160b7724818 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x160b77247f8 <line:184:58, line:187:5>
|   |   |-CallExpr 0x160b77247a0 <line:185:9, col:30> 'void'
|   |   | |-ImplicitCastExpr 0x160b7724788 <col:9> 'void (*)(X509_POLICY_DATA *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x160b77246e8 <col:9> 'void (X509_POLICY_DATA *)' Function 0x160b77234a8 'policy_data_free' 'void (X509_POLICY_DATA *)'
|   |   | `-ImplicitCastExpr 0x160b77247c8 <col:26> 'X509_POLICY_DATA *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x160b7724708 <col:26> 'X509_POLICY_DATA *' lvalue Var 0x160b771de80 'data' 'X509_POLICY_DATA *'
|   |   `-GotoStmt 0x160b77247e0 <line:186:9, col:14> 'bad_tree' 0x160b7724630
|   |-ForStmt 0x160b77301c8 <line:193:5, line:229:5>
|   | |-BinaryOperator 0x160b77248e8 <line:193:10, col:18> 'int' '='
|   | | |-DeclRefExpr 0x160b7724848 <col:10> 'int' lvalue Var 0x160b771e558 'i' 'int'
|   | | `-BinaryOperator 0x160b77248c8 <col:14, col:18> 'int' '-'
|   | |   |-ImplicitCastExpr 0x160b77248b0 <col:14> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x160b7724868 <col:14> 'int' lvalue Var 0x160b771dfb0 'n' 'int'
|   | |   `-IntegerLiteral 0x160b7724888 <col:18> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x160b7724968 <col:21, col:26> 'int' '>='
|   | | |-ImplicitCastExpr 0x160b7724950 <col:21> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x160b7724908 <col:21> 'int' lvalue Var 0x160b771e558 'i' 'int'
|   | | `-IntegerLiteral 0x160b7724928 <col:26> 'int' 0
|   | |-UnaryOperator 0x160b77249a8 <col:29, col:30> 'int' postfix '--'
|   | | `-DeclRefExpr 0x160b7724988 <col:29> 'int' lvalue Var 0x160b771e558 'i' 'int'
|   | `-CompoundStmt 0x160b77301a8 <col:34, line:229:5>
|   |   |-IfStmt 0x160b7724d40 <line:207:9, line:219:9> has_else
|   |   | |-BinaryOperator 0x160b7724b88 <line:207:13, col:25> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x160b7724b70 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x160b7724b10 <col:13> 'int' lvalue Var 0x160b771e2d8 'any_skip' 'int'
|   |   | | `-IntegerLiteral 0x160b7724b48 <col:25> 'int' 0
|   |   | |-CompoundStmt 0x160b7724c48 <col:28, line:214:9>
|   |   | `-CompoundStmt 0x160b7724d28 <col:16, line:219:9>
|   |   |   `-IfStmt 0x160b7724ca8 <line:215:13, line:216:25>
|   |   |     |-OpaqueValueExpr 0x160b7724c90 <<invalid sloc>> '_Bool'
|   |   |     `-UnaryOperator 0x160b7724c78 <col:17, col:25> 'int' postfix '--'
|   |   |       `-DeclRefExpr 0x160b7724c58 <col:17> 'int' lvalue Var 0x160b771e2d8 'any_skip' 'int'
|   |   `-IfStmt 0x160b7730180 <line:221:9, line:228:9> has_else
|   |     |-BinaryOperator 0x160b7724de0 <line:221:13, col:25> 'int' '=='
|   |     | |-ImplicitCastExpr 0x160b7724dc8 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x160b7724d68 <col:13> 'int' lvalue Var 0x160b771e418 'map_skip' 'int'
|   |     | `-IntegerLiteral 0x160b7724da0 <col:25> 'int' 0
|   |     |-NullStmt 0x160b7730178 <line:222:13>
|   |     `-CompoundStmt 0x160b7730160 <line:223:14, line:228:9>
|   |       `-IfStmt 0x160b7724e50 <line:224:13, line:225:25>
|   |         |-OpaqueValueExpr 0x160b7724e38 <<invalid sloc>> '_Bool'
|   |         `-UnaryOperator 0x160b7724e20 <col:17, col:25> 'int' postfix '--'
|   |           `-DeclRefExpr 0x160b7724e00 <col:17> 'int' lvalue Var 0x160b771e418 'map_skip' 'int'
|   |-ReturnStmt 0x160b7730238 <line:232:5, col:12>
|   | `-ImplicitCastExpr 0x160b7730220 <col:12> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x160b7730200 <col:12> 'int' lvalue Var 0x160b771df18 'ret' 'int'
|   `-LabelStmt 0x160b7730360 <line:234:2, col:10> 'bad_tree'
|     `-NullStmt 0x160b7730358 <col:10>
|-FunctionDecl 0x160b77305b0 <line:242:1, line:263:1> line:242:12 invalid tree_link_matching_nodes 'int (int *, X509_POLICY_DATA *)' static
| |-ParmVarDecl 0x160b7730420 <col:37, col:56> col:56 invalid curr 'int *'
| |-ParmVarDecl 0x160b7730498 <line:243:37, col:55> col:55 used data 'X509_POLICY_DATA *'
| `-CompoundStmt 0x160b7730e28 <line:244:1, line:263:1>
|   |-DeclStmt 0x160b77307e0 <line:246:5, col:23>
|   | |-VarDecl 0x160b77306b8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x160b7730738 <col:5, col:22> col:12 used matched 'int' cinit
|   |   `-IntegerLiteral 0x160b77307a0 <col:22> 'int' 0
|   |-IfStmt 0x160b7730dd8 <line:258:5, line:261:5>
|   | |-OpaqueValueExpr 0x160b7730dc0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x160b7730da8 <line:258:38, line:261:5>
|   |   `-IfStmt 0x160b7730d90 <line:259:9, line:260:20>
|   |     |-OpaqueValueExpr 0x160b7730d78 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x160b7730d68 <col:13, col:20>
|   |       `-IntegerLiteral 0x160b7730d40 <col:20> 'int' 0
|   `-ReturnStmt 0x160b7730e18 <line:262:5, col:12>
|     `-IntegerLiteral 0x160b7730df0 <col:12> 'int' 1
|-FunctionDecl 0x160b7730fc0 <line:271:1, line:284:1> line:271:12 invalid tree_link_nodes 'int (int *, const int *)' static
| |-ParmVarDecl 0x160b7730e68 <col:28, col:47> col:47 invalid curr 'int *'
| |-ParmVarDecl 0x160b7730ee8 <line:272:28, col:53> col:53 invalid cache 'const int *'
| `-CompoundStmt 0x160b772e5a8 <line:273:1, line:284:1>
|   |-DeclStmt 0x160b7731108 <line:274:5, col:10>
|   | `-VarDecl 0x160b77310a0 <col:5, col:9> col:9 used i 'int'
|   `-ReturnStmt 0x160b772e598 <line:283:5, col:12>
|     `-IntegerLiteral 0x160b772e570 <col:12> 'int' 1
|-FunctionDecl 0x160b772e8f0 <line:292:1, line:316:1> line:292:12 invalid tree_add_unmatched 'int (int *, const int *, const int *, int *, int *)' static
| |-ParmVarDecl 0x160b772e5e0 <col:31, col:50> col:50 invalid curr 'int *'
| |-ParmVarDecl 0x160b772e660 <line:293:31, col:56> col:56 invalid cache 'const int *'
| |-ParmVarDecl 0x160b772e6e0 <line:294:31, col:50> col:50 invalid id 'const int *'
| |-ParmVarDecl 0x160b772e760 <line:295:31, col:49> col:49 invalid node 'int *'
| |-ParmVarDecl 0x160b772e7e0 <col:55, col:73> col:73 invalid tree 'int *'
| `-CompoundStmt 0x160b772edb0 <line:296:1, line:316:1>
|   |-DeclStmt 0x160b772ea48 <line:297:5, col:27>
|   | `-VarDecl 0x160b772e9e0 <col:5, col:23> col:23 used data 'X509_POLICY_DATA *'
|   |-IfStmt 0x160b772eb10 <line:305:5, line:306:16>
|   | |-OpaqueValueExpr 0x160b772eaf8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x160b772eae8 <col:9, col:16>
|   |   `-IntegerLiteral 0x160b772eac0 <col:16> 'int' 0
|   |-CompoundAssignOperator 0x160b772ec08 <line:310:5, .//openssl//file_jk/after\crypto\x509v3/pcy_int.h:53:49> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | |-MemberExpr 0x160b772eb98 <.//openssl//file_jk/after\crypto\x509v3\pcy_tree.c:310:5, col:11> 'unsigned int' lvalue ->flags 0x160b771f130
|   | | `-ImplicitCastExpr 0x160b772eb80 <col:5> 'X509_POLICY_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x160b772eb60 <col:5> 'X509_POLICY_DATA *' lvalue Var 0x160b772e9e0 'data' 'X509_POLICY_DATA *'
|   | `-ImplicitCastExpr 0x160b772ebf0 <.//openssl//file_jk/after\crypto\x509v3/pcy_int.h:53:49> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x160b772ebc8 <col:49> 'int' 4
|   |-IfStmt 0x160b772ed60 <.//openssl//file_jk/after\crypto\x509v3\pcy_tree.c:311:5, line:314:5>
|   | |-OpaqueValueExpr 0x160b772ed48 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x160b772ed28 <line:311:57, line:314:5>
|   |   |-CallExpr 0x160b772ecb0 <line:312:9, col:30> 'void'
|   |   | |-ImplicitCastExpr 0x160b772ec98 <col:9> 'void (*)(X509_POLICY_DATA *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x160b772ec58 <col:9> 'void (X509_POLICY_DATA *)' Function 0x160b77234a8 'policy_data_free' 'void (X509_POLICY_DATA *)'
|   |   | `-ImplicitCastExpr 0x160b772ecd8 <col:26> 'X509_POLICY_DATA *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x160b772ec78 <col:26> 'X509_POLICY_DATA *' lvalue Var 0x160b772e9e0 'data' 'X509_POLICY_DATA *'
|   |   `-ReturnStmt 0x160b772ed18 <line:313:9, col:16>
|   |     `-IntegerLiteral 0x160b772ecf0 <col:16> 'int' 0
|   `-ReturnStmt 0x160b772eda0 <line:315:5, col:12>
|     `-IntegerLiteral 0x160b772ed78 <col:12> 'int' 1
|-FunctionDecl 0x160b772f080 <line:321:1, line:352:1> line:321:12 invalid tree_link_unmatched 'int (int *, const int *, int *, int *)' static
| |-ParmVarDecl 0x160b772ee00 <col:32, col:51> col:51 invalid curr 'int *'
| |-ParmVarDecl 0x160b772ee80 <line:322:32, col:57> col:57 invalid cache 'const int *'
| |-ParmVarDecl 0x160b772ef00 <line:323:32, col:50> col:50 invalid node 'int *'
| |-ParmVarDecl 0x160b772ef80 <col:56, col:74> col:74 invalid tree 'int *'
| `-CompoundStmt 0x160b772d9b8 <line:324:1, line:352:1>
|   |-DeclStmt 0x160b772d1f0 <line:325:5, col:45>
|   | `-VarDecl 0x160b772d160 <col:5, col:30> col:30 invalid last 'const int *'
|   |-DeclStmt 0x160b772d288 <line:326:5, col:10>
|   | `-VarDecl 0x160b772d220 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x160b772d958 <line:328:5, line:350:5> has_else
|   | |-OpaqueValueExpr 0x160b772d940 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x160b772d398 <line:329:60, line:336:5>
|   | | |-IfStmt 0x160b772d318 <line:331:9, line:332:20>
|   | | | |-OpaqueValueExpr 0x160b772d300 <<invalid sloc>> '_Bool'
|   | | | `-ReturnStmt 0x160b772d2f0 <col:13, col:20>
|   | | |   `-IntegerLiteral 0x160b772d2c8 <col:20> 'int' 1
|   | | `-IfStmt 0x160b772d380 <line:333:9, line:334:20>
|   | |   |-OpaqueValueExpr 0x160b772d368 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x160b772d358 <col:13, col:20>
|   | |     `-IntegerLiteral 0x160b772d330 <col:20> 'int' 0
|   | `-CompoundStmt 0x160b772d928 <line:336:12, line:350:5>
|   |   `-IfStmt 0x160b772d628 <line:339:9, line:340:20>
|   |     |-OpaqueValueExpr 0x160b772d610 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x160b772d600 <col:13, col:20>
|   |       `-IntegerLiteral 0x160b772d5d8 <col:20> 'int' 1
|   `-ReturnStmt 0x160b772d9a8 <line:351:5, col:12>
|     `-IntegerLiteral 0x160b772d980 <col:12> 'int' 1
|-FunctionDecl 0x160b772dbf0 <line:357:1, line:376:1> line:357:12 invalid tree_link_any 'int (int *, const int *, int *)' static
| |-ParmVarDecl 0x160b772da00 <col:26, col:45> col:45 invalid curr 'int *'
| |-ParmVarDecl 0x160b772da80 <line:358:26, col:51> col:51 invalid cache 'const int *'
| |-ParmVarDecl 0x160b772db00 <line:359:26, col:44> col:44 invalid tree 'int *'
| `-CompoundStmt 0x160b772dfd8 <line:360:1, line:376:1>
|   |-DeclStmt 0x160b772dd40 <line:361:5, col:10>
|   | `-VarDecl 0x160b772dcd8 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x160b772df88 <line:372:5, line:374:16>
|   | |-OpaqueValueExpr 0x160b772df70 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x160b772df60 <col:9, col:16>
|   |   `-IntegerLiteral 0x160b772df38 <col:16> 'int' 0
|   `-ReturnStmt 0x160b772dfc8 <line:375:5, col:12>
|     `-IntegerLiteral 0x160b772dfa0 <col:12> 'int' 1
|-FunctionDecl 0x160b772f188 <line:388:1, line:431:1> line:388:12 invalid tree_prune 'int (int *, int *)' static
| |-ParmVarDecl 0x160b772e018 <col:23, col:41> col:41 invalid tree 'int *'
| |-ParmVarDecl 0x160b772e098 <col:47, col:66> col:66 invalid curr 'int *'
| `-CompoundStmt 0x160b772fa58 <line:389:1, line:431:1>
|   |-DeclStmt 0x160b772f2f0 <line:392:5, col:10>
|   | `-VarDecl 0x160b772f288 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x160b772f6b8 <line:394:5, line:404:5>
|   | |-OpaqueValueExpr 0x160b772f6a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x160b772f688 <line:394:48, line:404:5>
|   |   `-ForStmt 0x160b772f650 <line:395:9, line:403:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x160b772f3e8 <line:395:54, col:59> 'int' '>='
|   |     | |-ImplicitCastExpr 0x160b772f3d0 <col:54> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x160b772f388 <col:54> 'int' lvalue Var 0x160b772f288 'i' 'int'
|   |     | `-IntegerLiteral 0x160b772f3a8 <col:59> 'int' 0
|   |     |-UnaryOperator 0x160b772f428 <col:62, col:63> 'int' postfix '--'
|   |     | `-DeclRefExpr 0x160b772f408 <col:62> 'int' lvalue Var 0x160b772f288 'i' 'int'
|   |     `-CompoundStmt 0x160b772f638 <col:67, line:403:9>
|   |       `-IfStmt 0x160b772f620 <line:398:13, line:402:13>
|   |         |-OpaqueValueExpr 0x160b772f608 <<invalid sloc>> '_Bool'
|   |         `-CompoundStmt 0x160b772f5f8 <line:398:64, line:402:13>
|   `-ForStmt 0x160b772fa20 <line:406:5, line:429:5>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     `-CompoundStmt 0x160b772f9f8 <line:406:14, line:429:5>
|       |-ForStmt 0x160b772f910 <line:409:9, line:416:9>
|       | |-<<<NULL>>>
|       | |-<<<NULL>>>
|       | |-BinaryOperator 0x160b772f798 <line:409:54, col:59> 'int' '>='
|       | | |-ImplicitCastExpr 0x160b772f780 <col:54> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x160b772f738 <col:54> 'int' lvalue Var 0x160b772f288 'i' 'int'
|       | | `-IntegerLiteral 0x160b772f758 <col:59> 'int' 0
|       | |-UnaryOperator 0x160b772f7d8 <col:62, col:63> 'int' postfix '--'
|       | | `-DeclRefExpr 0x160b772f7b8 <col:62> 'int' lvalue Var 0x160b772f288 'i' 'int'
|       | `-CompoundStmt 0x160b772f8f8 <col:67, line:416:9>
|       |   `-IfStmt 0x160b772f8e0 <line:411:13, line:415:13>
|       |     |-OpaqueValueExpr 0x160b772f8c8 <<invalid sloc>> '_Bool'
|       |     `-CompoundStmt 0x160b772f8b8 <line:411:36, line:415:13>
|       |-IfStmt 0x160b772f990 <line:417:9, line:422:9>
|       | |-OpaqueValueExpr 0x160b772f978 <<invalid sloc>> '_Bool'
|       | `-CompoundStmt 0x160b772f968 <line:417:58, line:422:9>
|       `-IfStmt 0x160b772f9e0 <line:423:9, line:428:9>
|         |-OpaqueValueExpr 0x160b772f9c8 <<invalid sloc>> '_Bool'
|         `-CompoundStmt 0x160b772f9b0 <line:423:35, line:428:9>
|           `-BreakStmt 0x160b772f9a8 <line:427:13>
|-FunctionDecl 0x160b772fba0 <line:436:1, line:445:1> line:436:12 invalid tree_add_auth_node 'int (int (*)())' static
| |-ParmVarDecl 0x160b772faa8 <col:31, <invalid sloc>> col:31 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x160b7730100 <line:438:1, line:445:1>
|   |-IfStmt 0x160b772fdf8 <line:439:5, line:441:16>
|   | |-OpaqueValueExpr 0x160b772fde0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x160b772fdd0 <col:9, col:16>
|   |   `-IntegerLiteral 0x160b772fda8 <col:16> 'int' 0
|   `-IfStmt 0x160b772ffb0 <line:442:5, line:443:16>
|     |-OpaqueValueExpr 0x160b772ff98 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x160b772ff88 <col:9, col:16>
|       `-IntegerLiteral 0x160b772ff60 <col:16> 'int' 1
|-FunctionDecl 0x160b772c2d0 <line:463:1, line:507:1> line:463:12 invalid tree_calculate_authority_set 'int (int *, int (*)())' static
| |-ParmVarDecl 0x160b772c120 <col:41, col:59> col:59 invalid tree 'int *'
| |-ParmVarDecl 0x160b772c1b0 <line:464:41, <invalid sloc>> col:41 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x160b772caa8 <line:465:1, line:507:1>
|   |-DeclStmt 0x160b772c4b0 <line:469:5, col:13>
|   | |-VarDecl 0x160b772c3b0 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x160b772c430 <col:5, col:12> col:12 used j 'int'
|   |-IfStmt 0x160b772c590 <line:473:5, line:479:9> has_else
|   | |-OpaqueValueExpr 0x160b772c578 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x160b772c558 <line:473:26, line:477:5>
|   | | `-IfStmt 0x160b772c540 <line:474:9, line:447:27>
|   | |   |-OpaqueValueExpr 0x160b772c528 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x160b772c518 <line:475:13, line:447:27>
|   | |     `-IntegerLiteral 0x160b772c4f0 <col:27> 'int' 0
|   | `-NullStmt 0x160b772c570 <line:479:9>
|   |-IfStmt 0x160b772ca58 <line:502:5, line:449:29>
|   | |-OpaqueValueExpr 0x160b772ca40 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x160b772ca30 <line:503:9, line:449:29>
|   |   `-IntegerLiteral 0x160b772ca08 <col:29> 'int' 2
|   `-ReturnStmt 0x160b772ca98 <line:506:5, line:448:29>
|     `-IntegerLiteral 0x160b772ca70 <col:29> 'int' 1
|-FunctionDecl 0x160b772cc20 <line:512:1, line:566:1> line:512:12 invalid tree_calculate_user_set 'int (int *, int (*)())' static
| |-ParmVarDecl 0x160b772caf0 <col:36, col:54> col:54 invalid tree 'int *'
| |-ParmVarDecl 0x160b772cb80 <line:513:36, <invalid sloc>> col:36 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x160b7731930 <line:515:1, line:566:1>
|   |-DeclStmt 0x160b772cd68 <line:516:5, col:10>
|   | `-VarDecl 0x160b772cd00 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x160b772cdf8 <line:520:5, col:28>
|   | `-VarDecl 0x160b772cd90 <col:5, col:23> col:23 used extra 'X509_POLICY_DATA *'
|   |-IfStmt 0x160b772cea8 <line:526:5, line:527:16>
|   | |-OpaqueValueExpr 0x160b772ce90 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x160b772ce80 <col:9, col:16>
|   |   `-IntegerLiteral 0x160b772ce58 <col:16> 'int' 1
|   `-ReturnStmt 0x160b7731920 <line:565:5, col:12>
|     `-IntegerLiteral 0x160b77318f8 <col:12> 'int' 1
|-FunctionDecl 0x160b7731a40 <line:574:1, line:596:1> line:574:12 invalid tree_evaluate 'int (int *)' static
| |-ParmVarDecl 0x160b7731978 <col:26, col:44> col:44 invalid tree 'int *'
| `-CompoundStmt 0x160b7731eb0 <line:575:1, line:596:1>
|   |-DeclStmt 0x160b7731c18 <line:576:5, col:15>
|   | |-VarDecl 0x160b7731b18 <col:5, col:9> col:9 used ret 'int'
|   | `-VarDecl 0x160b7731b98 <col:5, col:14> col:14 used i 'int'
|   `-DeclStmt 0x160b7731cd8 <line:578:5, col:35>
|     `-VarDecl 0x160b7731c70 <col:5, col:30> col:30 invalid cache 'const int *'
|-FunctionDecl 0x160b7731f78 <line:598:1, line:602:1> line:598:13 invalid exnode_free 'void (int *)' static
| |-ParmVarDecl 0x160b7731ee8 <col:25, col:43> col:43 invalid node 'int *'
| `-CompoundStmt 0x160b7732080 <line:599:1, line:602:1>
|-FunctionDecl 0x160b77341a0 <line:604:1, line:625:1> line:604:6 invalid X509_policy_tree_free 'void (int *)'
| |-ParmVarDecl 0x160b77320a8 <col:28, col:46> col:46 invalid tree 'int *'
| `-CompoundStmt 0x160b77347f0 <line:605:1, line:625:1>
|   |-DeclStmt 0x160b77342e0 <line:607:5, col:10>
|   | `-VarDecl 0x160b7734278 <col:5, col:9> col:9 used i 'int'
|   `-IfStmt 0x160b7734320 <line:609:5, line:610:9>
|     |-OpaqueValueExpr 0x160b7734308 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x160b77342f8 <col:9>
`-FunctionDecl 0x160b7734a70 <line:635:1, line:700:1> line:635:5 invalid X509_policy_check 'int (int **, int *, int (*)())'
  |-ParmVarDecl 0x160b7734830 <col:23, col:42> col:42 invalid ptree 'int **'
  |-ParmVarDecl 0x160b77348b0 <col:49, col:54> col:54 used pexplicit_policy 'int *'
  |-ParmVarDecl 0x160b7734940 <line:636:23, <invalid sloc>> col:23 invalid STACK_OF 'int (*)()':'int (*)()'
  `-CompoundStmt 0x160b77396b0 <line:638:1, line:700:1>
    |-DeclStmt 0x160b7734bc0 <line:639:5, col:17>
    | `-VarDecl 0x160b7734b58 <col:5, col:9> col:9 used init_ret 'int'
    |-DeclStmt 0x160b7734c58 <line:640:5, col:12>
    | `-VarDecl 0x160b7734bf0 <col:5, col:9> col:9 used ret 'int'
    |-DeclStmt 0x160b7734cf0 <line:641:5, col:17>
    | `-VarDecl 0x160b7734c88 <col:5, col:9> col:9 used calc_ret 'int'
    |-BinaryOperator 0x160b7734d98 <line:646:5, col:25> 'int' '='
    | |-UnaryOperator 0x160b7734d58 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x160b7734d40 <col:6> 'int *' <LValueToRValue>
    | |   `-DeclRefExpr 0x160b7734d08 <col:6> 'int *' lvalue ParmVar 0x160b77348b0 'pexplicit_policy' 'int *'
    | `-IntegerLiteral 0x160b7734d70 <col:25> 'int' 0
    |-IfStmt 0x160b7734eb8 <line:649:5, line:650:16>
    | |-BinaryOperator 0x160b7734e50 <line:649:9, col:21> 'int' '<='
    | | |-ImplicitCastExpr 0x160b7734e38 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x160b7734df0 <col:9> 'int' lvalue Var 0x160b7734b58 'init_ret' 'int'
    | | `-IntegerLiteral 0x160b7734e10 <col:21> 'int' 0
    | `-ReturnStmt 0x160b7734ea8 <line:650:9, col:16>
    |   `-ImplicitCastExpr 0x160b7734e90 <col:16> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x160b7734e70 <col:16> 'int' lvalue Var 0x160b7734b58 'init_ret' 'int'
    |-IfStmt 0x160b7735078 <line:652:5, line:662:5> has_else
    | |-OpaqueValueExpr 0x160b7735060 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x160b7734f78 <line:652:51, line:657:5>
    | | `-IfStmt 0x160b7734f60 <line:653:9, line:656:9>
    | |   |-OpaqueValueExpr 0x160b7734f48 <<invalid sloc>> '_Bool'
    | |   `-CompoundStmt 0x160b7734f38 <line:653:45, line:656:9>
    | `-CompoundStmt 0x160b7735048 <line:657:12, line:662:5>
    |   `-BinaryOperator 0x160b7735008 <line:658:9, col:29> 'int' '='
    |     |-UnaryOperator 0x160b7734fc8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x160b7734fb0 <col:10> 'int *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x160b7734f90 <col:10> 'int *' lvalue ParmVar 0x160b77348b0 'pexplicit_policy' 'int *'
    |     `-IntegerLiteral 0x160b7734fe0 <col:29> 'int' 1
    |-IfStmt 0x160b7739258 <line:668:5, line:669:14>
    | |-BinaryOperator 0x160b7735138 <line:668:9, col:16> 'int' '<='
    | | |-ImplicitCastExpr 0x160b7735120 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x160b77350d8 <col:9> 'int' lvalue Var 0x160b7734bf0 'ret' 'int'
    | | `-IntegerLiteral 0x160b77350f8 <col:16> 'int' 0
    | `-GotoStmt 0x160b7739240 <line:669:9, col:14> 'error' 0x160b77391f0
    |-IfStmt 0x160b77392d8 <line:671:5, line:676:5>
    | |-OpaqueValueExpr 0x160b77392c0 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x160b77392b0 <line:671:37, line:676:5>
    |-IfStmt 0x160b7739380 <line:680:5, line:681:14>
    | |-OpaqueValueExpr 0x160b7739368 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x160b7739350 <col:9, col:14> 'error' 0x160b77391f0
    |-IfStmt 0x160b77394c0 <line:685:5, line:686:14>
    | |-UnaryOperator 0x160b7739490 <line:685:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x160b7739478 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x160b7739458 <col:10> 'int' lvalue Var 0x160b7734bf0 'ret' 'int'
    | `-GotoStmt 0x160b77394a8 <line:686:9, col:14> 'error' 0x160b77391f0
    |-IfStmt 0x160b7739678 <line:690:5, line:694:5>
    | |-OpaqueValueExpr 0x160b7739660 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x160b7739650 <line:690:44, line:694:5>
    `-LabelStmt 0x160b7739698 <line:697:2, col:7> 'error'
      `-NullStmt 0x160b7739690 <col:7>
