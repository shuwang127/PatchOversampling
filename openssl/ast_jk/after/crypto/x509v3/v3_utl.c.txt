TranslationUnitDecl 0x239c83f88c8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x239c83f9160 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x239c83f8e60 '__int128'
|-TypedefDecl 0x239c83f91d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x239c83f8e80 'unsigned __int128'
|-TypedefDecl 0x239c83f9508 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x239c83f92c0 'struct __NSConstantString_tag'
|   `-Record 0x239c83f9228 '__NSConstantString_tag'
|-TypedefDecl 0x239c83f9578 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x239c83f8aa0 'unsigned long long'
|-TypedefDecl 0x239c83f9610 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x239c83f95d0 'char *'
|   `-BuiltinType 0x239c83f8960 'char'
|-TypedefDecl 0x239c83f9680 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x239c83f95d0 'char *'
|   `-BuiltinType 0x239c83f8960 'char'
|-TypedefDecl 0x239c83f9740 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x239c83f8aa0 'unsigned long long'
|-TypedefDecl 0x239c83f97b0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x239c83f95d0 'char *'
|   `-BuiltinType 0x239c83f8960 'char'
|-FunctionDecl 0x239c9f35450 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x239c9f354f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x239c9f35560 <col:21> Implicit
|-FunctionDecl 0x239c9f355b8 prev 0x239c9f35450 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x239c9f352e0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x239c9f356a8 <col:21> Inherited Implicit
|-TypedefDecl 0x239c9f356e8 prev 0x239c83f9578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x239c83f8aa0 'unsigned long long'
|-TypedefDecl 0x239c9f35790 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x239c9f35760 'size_t' sugar
|   |-Typedef 0x239c9f356e8 'size_t'
|   `-BuiltinType 0x239c83f8aa0 'unsigned long long'
|-TypedefDecl 0x239c9f35800 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x239c83f8a00 'long long'
|-TypedefDecl 0x239c9f35870 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x239c83f8a00 'long long'
|-TypedefDecl 0x239c9f358e0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x239c83f8a40 'unsigned short'
|-TypedefDecl 0x239c9f35950 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x239c83f8a40 'unsigned short'
|-TypedefDecl 0x239c9f359c0 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x239c83f8a40 'unsigned short'
|-TypedefDecl 0x239c9f35a30 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x239c83f89c0 'int'
|-TypedefDecl 0x239c9f35aa0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x239c83f89e0 'long'
|-TypedefDecl 0x239c9f35b10 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x239c83f8a00 'long long'
|-TypedefDecl 0x239c9f35ba0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x239c9f35b70 '__time64_t' sugar
|   |-Typedef 0x239c9f35b10 '__time64_t'
|   `-BuiltinType 0x239c83f8a00 'long long'
|-FunctionDecl 0x239c9f35d18 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x239c9f35f38 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x239c9f6d1a0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x239c9f36078 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x239c9f360f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x239c9f36168 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x239c9f361e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x239c9f6cf40 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x239c9f6d280 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x239c9f6d340 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x239c9f6d4b0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x239c9f6d460 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x239c9f6d400 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x239c9f6d320 'struct threadlocaleinfostruct'
|       `-Record 0x239c9f72fa0 'threadlocaleinfostruct'
|-TypedefDecl 0x239c9f6d5c0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x239c9f6d570 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x239c9f6d510 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x239c9f6d3e0 'struct threadmbcinfostruct'
|       `-Record 0x239c9f6d340 'threadmbcinfostruct'
|-RecordDecl 0x239c9f6d618 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x239c9f6d6d0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x239c9f6d790 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x239c9f6d820 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x239c9f6d8b0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x239c9f6d968 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x239c9f6d910 'struct localeinfo_struct' sugar
|   `-RecordType 0x239c9f6d770 'struct localeinfo_struct'
|     `-Record 0x239c9f6d6d0 'localeinfo_struct'
|-TypedefDecl 0x239c9f6da40 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x239c9f6d9f0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x239c9f6d910 'struct localeinfo_struct' sugar
|     `-RecordType 0x239c9f6d770 'struct localeinfo_struct'
|       `-Record 0x239c9f6d6d0 'localeinfo_struct'
|-RecordDecl 0x239c9f6dab8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x239c9f6db70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x239c9f6dbe8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x239c9f6dca8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x239c9f6dd40 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x239c9f6ddb0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x239c9f6de68 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x239c9f6de10 'struct localerefcount' sugar
|   `-RecordType 0x239c9f6db50 'struct localerefcount'
|     `-Record 0x239c9f6dab8 'localerefcount'
|-RecordDecl 0x239c9f72fa0 prev 0x239c9f6d280 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x239c9f73020 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x239c9f73098 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x239c9f73108 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x239c9f73178 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x239c9f731e8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x239c9f733a8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x239c9f73418 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x239c9f73488 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x239c9f734f8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x239c9f73568 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x239c9f735d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x239c9f73630 parent 0x239c83f88c8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x239c9f737c0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x239c9f73830 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x239c9f738a0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x239c9f73910 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x239c9f739b0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x239c9f73a20 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x239c9f73b30 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x239c9f73c68 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x239c9f73d18 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x239c9f73cc0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x239c9f6d320 'struct threadlocaleinfostruct'
|     `-Record 0x239c9f72fa0 'threadlocaleinfostruct'
|-RecordDecl 0x239c9f73db0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x239c9f73e70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x239c9f73ee8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x239c9f76fe0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x239c9f77050 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x239c9f770c0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x239c9f77130 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x239c9f771a0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x239c9f77210 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x239c9f77280 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x239c9f77330 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x239c9f772e0 'struct _iobuf' sugar
|   `-RecordType 0x239c9f73e50 'struct _iobuf'
|     `-Record 0x239c9f73db0 '_iobuf'
|-FunctionDecl 0x239c9f77568 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x239c9f77638 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x239c83f8a00 'long long'
|-FunctionDecl 0x239c9f77818 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9f776a0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x239c9f77b10 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x239c9f778f0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x239c9f77968 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x239c9f77ec0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x239c9f77bf0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x239c9f77c70 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x239c9f77cf0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x239c9f7a180 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x239c9f7a010 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x239c9f7a3b0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x239c9f7a270 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x239c9f7a560 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9f7a480 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x239c9f7a750 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x239c9f7aa48 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x239c9f7a820 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x239c9f7a8a0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x239c9f7ac00 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9f7ab20 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x239c9f7adb0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9f7acd0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x239c9f7af60 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9f7ae80 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x239c9f7b128 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9f7b048 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x239c9f7b2b8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x239c9f7b620 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x239c9f7b380 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x239c9f7b478 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x239c9f7b9d8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x239c9f7b700 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x239c9f7b780 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x239c9f7b7f8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x239c9f7bb98 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9f7bab8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x239c9f7be60 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x239c9f7bc70 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x239c9f7bcf0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x239c9f7c030 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x239c9f7c428 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x239c9f7c4c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x239c9f7c530 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x239c9f7c5a8 prev 0x239c9f7c428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x239c9f7c200 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x239c9f7c280 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x239c9f7c658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9f7cad0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x239c9f7c800 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x239c9f7c880 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x239c9f7c900 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x239c9f7cdf0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x239c9f7ce90 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x239c9f7cef8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x239c9f7cf70 <col:40> Implicit printf 2 3
|-FunctionDecl 0x239c9f7f060 prev 0x239c9f7cdf0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x239c9f7cbb0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x239c9f7cc30 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x239c9f7f158 <col:40> Inherited printf 2 3
|-FunctionDecl 0x239c9f7f320 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x239c9f7f1a0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x239c9f7f220 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x239c9f7f578 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x239c9f7f400 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x239c9f7f478 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x239c9f7f7a8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239c9f7f658 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x239c9f7faa0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x239c9f7f880 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x239c9f7f8f8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x239c9f7ff38 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x239c9f7ffd8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x239c9f77ff0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x239c9f78058 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x239c9f780c0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x239c9f78148 prev 0x239c9f7ff38 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x239c9f7fb80 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x239c9f7fbf8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9f7fc70 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9f7fce8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x239c9f78650 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x239c9f78238 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x239c9f782b0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9f78328 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9f783a0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9f78418 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x239c9f78b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x239c9f78840 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x239c9f788c0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x239c9f78938 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x239c9f78bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9f85168 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x239c9f78d10 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x239c9f78d90 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x239c9f78e10 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x239c9f78e88 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x239c9f85510 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x239c9f855b0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x239c9f85618 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x239c9f85690 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x239c9f856f8 prev 0x239c9f85510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x239c9f85348 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x239c9f853c8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x239c9f858d8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x239c9f857a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9f85d18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9f85a18 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x239c9f85a98 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x239c9f85b30 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239c9f85dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9f82090 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x239c9f85f10 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x239c9f85f90 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x239c9f82380 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9f82168 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x239c9f821e8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x239c9f82260 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9f826e0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x239c9f82460 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x239c9f82538 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x239c9f82a98 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x239c9f827b8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x239c9f82838 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x239c9f828b8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x239c9f82cf8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x239c9f82b78 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x239c9f840f8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x239c9f82dc8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x239c9f82e48 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x239c9f82ec8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x239c9f84358 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x239c9f841d8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x239c9f84818 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x239c9f848b8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x239c9f84920 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x239c9f84988 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x239c9f849f0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x239c9f84a78 prev 0x239c9f84818 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x239c9f84460 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x239c9f844d8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9f84550 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9f845c8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x239c9f84c40 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9f84b60 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x239c9f84dd0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x239c9f84f58 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x239c9f81240 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x239c9f85028 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x239c9f81090 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x239c9f81568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x239c9f81420 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x239c9f81610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9f81830 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9f81750 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x239c9f81a50 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x239c9f81908 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x239c9f81c00 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9f81b20 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x239c9f81e50 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x239c9f81cd8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x239c9f81d58 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x239c9f830a0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x239c9f83140 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x239c9f831b0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x239c9f83218 prev 0x239c9f830a0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x239c9f81f30 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x239c9f83308 <col:40> Inherited printf 1 2
|-FunctionDecl 0x239c9f83438 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x239c9f83358 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x239c9f83688 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x239c9f83510 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x239c9f83588 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x239c9f83848 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239c9f83768 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x239c9f83a68 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x239c9f83920 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x239c9f83cb8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x239c9f83b40 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x239c9f83bb8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x239c9f83e78 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x239c9f83d98 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x239c9fd3d40 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x239c9f83f50 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x239c9f83fd0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x239c9fd3f00 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x239c9fd3e20 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x239c9fd4190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x239c9fd40b0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x239c9fd4238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x239c9fd4430 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x239c9fd4358 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x239c9fd45c0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x239c9fd4868 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x239c9fd4908 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x239c9fd4978 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x239c9fd49e0 prev 0x239c9fd4868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x239c9fd4750 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x239c9fd4bb8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x239c9fd4a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd5fa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fd5d68 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x239c9fd5de0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239c9fd6050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd6278 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x239c9fd6198 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x239c9fd64c8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fd6350 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x239c9fd63c8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fd6888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x239c9fd6660 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x239c9fd66e0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x239c9fd6938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd6b60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239c9fd6a80 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x239c9fd2da8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x239c9fd2c60 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x239c9fd2f90 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x239c9fd33e0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x239c9fd3058 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x239c9fd30d8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x239c9fd3158 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x239c9fd31d0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x239c9fd3860 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x239c9fd34d0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fd3548 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd35c0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9fd3640 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x239c9fd6ca0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x239c9fd3950 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fd39c8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9fd3a48 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x239c9fd6e68 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x239c9fd6d88 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x239c9fd7240 <line:304:70> col:70 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x239c9fd72e0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x239c9fd7348 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x239c9fd73c0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x239c9fd7428 prev 0x239c9fd7240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 used sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x239c9fd7000 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x239c9fd7080 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x239c9fd7608 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x239c9fd74d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd79f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fd7718 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x239c9fd7798 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x239c9fd7810 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239c9fd7ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd4d80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x239c9fd7bf8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x239c9fd4c80 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x239c9fd5078 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fd4e60 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x239c9fd4ee0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x239c9fd4f58 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fd5508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x239c9fd5220 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x239c9fd5298 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd5318 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x239c9fd55c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd5b90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fd5800 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x239c9fd5878 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd58f8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x239c9fd5970 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239c9fd1c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd1fb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x239c9fd1d98 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x239c9fd1e10 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9fd1e90 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x239c9fd2348 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fd2098 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x239c9fd2110 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd2190 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x239c9fd2208 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fd25a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x239c9fd2648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd2900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x239c9fd2790 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x239c9fd0c40 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x239c9fd29d8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x239c9fd2a50 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x239c9fd0ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x239c9fd0de0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x239c9fd0f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd1228 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x239c9fd10b0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x239c9fd1128 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x239c9fd1640 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x239c9fd16e0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x239c9fd1748 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x239c9fd17b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x239c9fd1830 <col:40> Implicit printf 2 0
|-FunctionDecl 0x239c9fd1898 prev 0x239c9fd1640 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x239c9fd1300 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x239c9fd1380 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x239c9fd13f8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x239c9fd1998 <col:40> Inherited printf 2 0
|-FunctionDecl 0x239c9fcfc30 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x239c9fcfcd0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x239c9fcfd38 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x239c9fcfda0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x239c9fcfe20 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x239c9fcfe88 prev 0x239c9fcfc30 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x239c9fd19e0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x239c9fd1a60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x239c9fd1ad8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x239c9fcff88 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x239c9fd01e8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x239c9fcffd0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x239c9fd0050 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x239c9fd00c8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fd04e0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x239c9fd02c8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x239c9fd0348 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x239c9fd03c0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fd0828 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x239c9fd08c8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x239c9fd0930 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x239c9fd09a8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x239c9fd0a10 prev 0x239c9fd0828 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x239c9fd05c8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x239c9fd0640 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x239c9fd0b08 <col:40> Inherited printf 1 0
|-FunctionDecl 0x239c9fdee58 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x239c9fdeef8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x239c9fdef60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x239c9fdefd8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x239c9fdf040 prev 0x239c9fdee58 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x239c9fd0b58 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x239c9fded20 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x239c9fdf138 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x239c9fdf300 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x239c9fdf188 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x239c9fdf200 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fdf558 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x239c9fdf3e0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x239c9fdf458 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fdfab8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x239c9fdfb58 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x239c9fdfbc0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x239c9fdfc28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x239c9fdfc90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x239c9fd8cc0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x239c9fd8d28 prev 0x239c9fdfab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x239c9fdf6f8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fdf770 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fdf7f0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x239c9fdf868 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x239c9fd8f18 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x239c9fd8de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd9388 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x239c9fd8f68 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fd8fe0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd9058 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd90d8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x239c9fd9150 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fd97c8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x239c9fd9480 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fd94f8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd9570 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd95f0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x239c9fd9668 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fd9b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x239c9fd9980 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x239c9fd99f8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd9a78 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x239c9fd9c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd8120 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x239c9fd7e70 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x239c9fd7ee8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd7f68 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x239c9fd7fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x239c9fd81e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fd85d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x239c9fd8328 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fd83a0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fd8420 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x239c9fd8498 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fd8998 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x239c9fd86c8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x239c9fd8748 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x239c9fd87c0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fdddb0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x239c9fdde50 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x239c9fddeb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x239c9fddf30 <col:85> Implicit printf 2 3
|-FunctionDecl 0x239c9fddf98 prev 0x239c9fdddb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x239c9fd8b40 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x239c9fd8bc0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x239c9fde178 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x239c9fde048 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fde5a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x239c9fde640 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x239c9fde6a8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x239c9fde710 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x239c9fde790 <col:94> Implicit printf 2 0
|-FunctionDecl 0x239c9fde7f8 prev 0x239c9fde5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x239c9fde288 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x239c9fde308 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x239c9fde380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x239c9fde9e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x239c9fde8b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fdbcf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x239c9fdbd90 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x239c9fdbdf8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x239c9fdbe60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x239c9fdbee0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x239c9fdbf48 prev 0x239c9fdbcf0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x239c9fdea30 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x239c9fdeab0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x239c9fdeb28 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x239c9fdc048 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x239c9fdc210 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x239c9fdc098 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x239c9fdc110 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fdc508 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x239c9fdc2f0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fdc368 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9fdc3e8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x239c9fdc8a0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x239c9fdc5f0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fdc668 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fdc6e8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x239c9fdc760 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fdcb08 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x239c9fdc988 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x239c9fdca08 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x239c9fdcd00 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x239c9fdcbe8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x239c9fdcff0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x239c9fdcdd8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x239c9fdce50 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9fdced0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x239c9fdd2e8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x239c9fdd0d0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x239c9fdd150 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x239c9fdd1c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fdd548 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x239c9fdd3d0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x239c9fdd448 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fdd8d8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x239c9fdd628 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x239c9fdd6a0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fdd720 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x239c9fdd798 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fddaa8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x239c9fdd9c8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x239c9fdfd30 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x239c9fddb80 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x239c9fddbf8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fdfef0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239c9fdfe10 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x239c9fe0080 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x239c9fe02c8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe0150 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe01c8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe0520 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe03a8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe0420 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe0778 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe0600 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe0678 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe0b28 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe0858 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe08d0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fe0948 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe0e60 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe0c10 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe0c88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fe0d40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe1158 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe0f48 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe0fc0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fe1038 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe1450 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe1238 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x239c9fe12b8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe1330 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe1748 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe1530 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x239c9fe15b0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe1628 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe1a40 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe1828 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x239c9fe18a8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe1920 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fd9e30 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe1b20 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x239c9fe1ba0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe1c18 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fe1c90 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fda1c8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fd9f18 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x239c9fd9f98 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x239c9fda010 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fda088 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fda560 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fda2b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x239c9fda330 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x239c9fda3a8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fda420 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fda9f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fda710 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fda790 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x239c9fda808 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239c9fdaab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fe60a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fdabf8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe5d90 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe5e10 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe5e88 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe6440 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe6190 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe6208 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe6288 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe6300 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe6990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe6630 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe66b0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe6728 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x239c9fe67a0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x239c9fe6a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fe3fa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe6b98 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe6c10 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe6c90 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe6d08 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fe3d70 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe43e8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe40a0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe4118 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe4198 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe4210 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fe4288 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe4658 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe44e0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe4558 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe48b0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe4738 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe47b0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe4ba0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe4990 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe4a08 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fe4a80 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe7ee0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe4c88 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe4d00 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fe7dc0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe8338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe8088 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe8100 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe8180 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe81f8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239c9fe83f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fe87f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe8540 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe85b8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe8638 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe86b0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe4d80 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9fe88e0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe8958 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe89d0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe8a50 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x239c9fe8ac8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9fe52c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe4f78 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe4ff0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe5070 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe50e8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x239c9fe5160 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x239c9fe5388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fe5808 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe54d8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe5550 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe55d0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x239c9fe5648 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fe56c0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe6e00 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9fe5900 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x239c9fe5978 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe59f0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fe5a70 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x239c9fe5ae8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9fe5b60 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe71c0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x239c9fe6ef8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x239c9fe6f70 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x239c9fe6ff0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x239c9fe7430 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x239c9fe72c0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x239c9fe7648 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x239c9fe7928 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x239c9fe7710 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x239c9fe7788 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x239c9fe7b70 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x239c9fe7a00 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x239c9fe8dc0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x239c9fe7c40 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x239c9fe8f48 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x239c9fe9180 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x239c9fe9010 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x239c9fe9088 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x239c9fe9330 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x239c9fe9258 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x239c9fe95d8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x239c9fe9400 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239c9fe9478 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x239c9fe9980 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x239c9fe96b0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x239c9fe9730 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x239c9fe97a8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x239c9fe9c80 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x239c9fe9a60 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x239c9fe9ad8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x239c9fe9f88 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x239c9fe9d58 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x239c9fe9de0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x239c9fea290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x239c9fea120 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x239c9fea338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fea5f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x239c9fea478 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x239c9fea900 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9fea6c8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x239c9fea740 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9feab50 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9fea9d8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x239c9feaa50 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9fe2d60 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x239c9feac28 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9fe2f10 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x239c9fe2e30 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9fe30c0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x239c9fe2fe0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9fe3458 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9fe3190 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x239c9fe3208 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9fe3280 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe3748 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9fe3538 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x239c9fe35b0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9fe3628 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fe3a38 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9fe3828 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x239c9fe38a0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9fe3918 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9feade0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9fe3b18 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x239c9fe3b90 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9fe3c08 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9feb0e0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9feaec0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9feaf38 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9feb330 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9feb1b8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9feb230 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9feb580 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9feb408 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9feb480 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9feb7d0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9feb658 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9feb6d0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9febb88 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9feb8a8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x239c9feb920 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9feb998 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9fee020 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9febc68 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x239c9febce0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9febd58 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9fede10 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fee3d8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9fee108 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x239c9fee180 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9fee1f8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fee6c8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9fee4b8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x239c9fee530 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9fee5a8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fee9b8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9fee7a8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9fee820 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9fee898 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9feed40 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9feea98 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9feeb10 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9feeb88 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9feec00 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9fec1a0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9febe18 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9febe90 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9febf08 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9febf80 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9fec6a8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9fec288 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9fec300 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fec378 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fec3f0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9fec468 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9feca68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9fec858 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x239c9fec8d0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fec948 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x239c9fecb20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fed030 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9fecd20 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x239c9fece00 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fece78 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9fecef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x239c9fed0f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9fed3a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9fed230 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x239c9fed2a8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9fed560 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x239c9fed480 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9fed840 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9fed630 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x239c9fed6a8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9fed720 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9feda98 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9fed920 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9fed998 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff2eb0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9fedb70 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9fedbe8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9fedc60 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9ff3238 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9ff2f90 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff3008 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff3080 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff30f8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff3400 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x239c9ff3320 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9ff3648 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9ff34d0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff3548 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff3950 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff3720 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff3798 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff3ba0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff3a28 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff3aa0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff3df0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff3c78 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff3cf0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff41b8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff3ee8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff3f60 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff3fd8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff44a8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff4298 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff4310 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff4388 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff4798 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff4588 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff4600 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff4678 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff4b58 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff4878 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x239c9ff48f0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff4968 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff1ea0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff4c38 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x239c9ff4cb0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff4d28 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff2190 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff1f80 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x239c9ff1ff8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff2070 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff25e0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff2270 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x239c9ff22e8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff2360 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff23d8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff2970 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff26c8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x239c9ff2740 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff27b8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff2830 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff2d00 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff2a58 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x239c9ff2ad0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff2b48 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff2bc0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff61f0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff2de8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff5ee0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff5f58 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff5fd0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff6580 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff62d8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff6350 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff63c8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff6440 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff6910 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff6668 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff66e0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff6758 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff67d0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff6e18 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff69f8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff6a70 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff6ae8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff6b60 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff6bd8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff7258 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff6f18 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff6f90 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff7008 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff7080 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff70f8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff7688 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff7348 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff73c0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff7438 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff74b0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff7528 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff78f0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff7778 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff77f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff7b40 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff79c8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff7a40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff7e28 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff7c18 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff7c90 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff7d08 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff8298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff7ff0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff8068 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff80e0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff8158 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239c9ff8358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9ff88c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff84a0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff8518 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff8590 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff8608 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ff8680 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ff8e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff8ac0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff8b38 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff8bb0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff8c28 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x239c9ff8ca0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x239c9ff0e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9ff14a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff0fd8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x239c9ff1050 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff10c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ff1140 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff11b8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ff1230 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ff19a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9ff1768 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x239c9ff17e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x239c9ff1a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x239c9ff1b68 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x239c9ff9178 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9ff1e20 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x239c9ff8f20 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff8f98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x239c9ff9230 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x239c9ff9348 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x239c9ff98e8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ff9608 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x239c9ff9680 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff96f8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x239c9ff99a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x239c9ff9ac0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x239ca000190 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ff9d80 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x239c9ff9df8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ff9e70 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x239c9ffff80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x239ca000250 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x239ca000370 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x239ca000678 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x239ca000498 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x239ca000510 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca000588 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x239c9fff210 <line:37:1, line:44:1>
|   |-DeclStmt 0x239ca0007c0 <line:38:5, col:21>
|   | `-VarDecl 0x239ca000758 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x239ca000858 <line:39:5, col:13>
|   | `-VarDecl 0x239ca0007f0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x239ca000bb0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x239ca000b98 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x239ca000ab0 <col:34> '<builtin fn type>' Function 0x239ca000948 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x239ca000ae8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x239ca000758 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x239ca000b20 <col:29> 'const wchar_t *' lvalue ParmVar 0x239ca000588 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x239ca000e70 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x239ca000be0 <col:5> 'int' lvalue Var 0x239ca0007f0 '_Ret' 'int'
|   | `-CallExpr 0x239ca000db0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x239ca000d98 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x239ca000c18 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x239c9ff6e18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x239ca000df8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239ca000c38 <col:27> 'wchar_t *' lvalue ParmVar 0x239ca000498 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x239ca000e10 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239ca000c58 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca000510 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x239ca000e28 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239ca000c78 <col:44> 'const wchar_t *' lvalue ParmVar 0x239ca000588 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x239ca000e40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x239ca000d00 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x239ca000cd8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x239ca000c98 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x239ca000e58 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca000d20 <col:59> 'va_list':'char *' lvalue Var 0x239ca000758 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x239c9fff1a0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x239c9fff188 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x239c9fff0d8 <col:34> '<builtin fn type>' Function 0x239c9ffef70 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x239c9fff110 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x239ca000758 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x239c9fff200 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x239c9fff1e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x239c9fff1c8 <col:12> 'int' lvalue Var 0x239ca0007f0 '_Ret' 'int'
|-FunctionDecl 0x239ca000948 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x239ca0009e8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x239ca000a58 <col:34> Implicit
|-FunctionDecl 0x239c9ffef70 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x239c9fff010 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x239c9fff080 <col:34> Implicit
|-FunctionDecl 0x239c9fff508 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x239c9fff260 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x239c9fff2d8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fff350 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9fff3c8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x239c9fff7f0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x239c9fff7e0 <line:51:5, col:62>
|     `-CallExpr 0x239c9fff720 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x239c9fff708 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x239c9fff5e0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x239c9ff6e18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x239c9fff768 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x239c9fff600 <col:27> 'wchar_t *' lvalue ParmVar 0x239c9fff260 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x239c9fff780 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x239c9fff620 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x239c9fff2d8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x239c9fff798 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x239c9fff640 <col:44> 'const wchar_t *' lvalue ParmVar 0x239c9fff350 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x239c9fff7b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x239c9fff6c8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x239c9fff6a0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x239c9fff660 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x239c9fff7c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x239c9fff6e8 <col:59> 'va_list':'char *' lvalue ParmVar 0x239c9fff3c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x239c9fffa90 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x239c9fff818 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x239c9fff890 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9fff908 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9fff980 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x239c9ffafd8 <line:61:1, line:68:1>
|   |-DeclStmt 0x239c9fffbe0 <line:62:5, col:21>
|   | `-VarDecl 0x239c9fffb78 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x239c9fffc78 <line:63:5, col:13>
|   | `-VarDecl 0x239c9fffc10 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x239c9fffd20 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x239c9fffd08 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x239c9fffc90 <col:34> '<builtin fn type>' Function 0x239ca000948 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x239c9fffcb0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x239c9fffb78 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x239c9fffce8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x239c9fff980 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x239c9ffff20 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x239c9fffd50 <col:5> 'int' lvalue Var 0x239c9fffc10 '_Ret' 'int'
|   | `-CallExpr 0x239c9fffe60 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x239c9fffe48 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x239c9fffd88 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x239c9ff6e18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x239c9fffea8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239c9fffda8 <col:27> 'wchar_t *' lvalue ParmVar 0x239c9fff818 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x239c9fffec0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239c9fffdc8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x239c9fff890 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x239c9fffed8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239c9fffde8 <col:44> 'const wchar_t *' lvalue ParmVar 0x239c9fff908 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x239c9fffef0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239c9fffe08 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x239c9fff980 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x239c9ffff08 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x239c9fffe28 <col:64> 'va_list':'char *' lvalue Var 0x239c9fffb78 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x239c9ffaf68 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x239c9ffaf50 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x239c9ffff40 <col:34> '<builtin fn type>' Function 0x239c9ffef70 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x239c9ffaf30 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x239c9fffb78 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x239c9ffafc8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x239c9ffafb0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x239c9ffaf90 <col:12> 'int' lvalue Var 0x239c9fffc10 '_Ret' 'int'
|-FunctionDecl 0x239c9ffb368 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x239c9ffb028 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x239c9ffb0a0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ffb118 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ffb190 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x239c9ffb208 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x239c9ffb5f0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x239c9ffb5e0 <line:75:5, col:67>
|     `-CallExpr 0x239c9ffb520 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x239c9ffb508 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x239c9ffb448 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x239c9ff6e18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x239c9ffb568 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x239c9ffb468 <col:27> 'wchar_t *' lvalue ParmVar 0x239c9ffb028 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x239c9ffb580 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x239c9ffb488 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x239c9ffb0a0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x239c9ffb598 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x239c9ffb4a8 <col:44> 'const wchar_t *' lvalue ParmVar 0x239c9ffb118 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x239c9ffb5b0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x239c9ffb4c8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x239c9ffb190 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x239c9ffb5c8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x239c9ffb4e8 <col:64> 'va_list':'char *' lvalue ParmVar 0x239c9ffb208 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x239c9ffb838 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x239c9ffb618 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x239c9ffb690 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x239c9ffba88 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x239c9ffb910 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ffb988 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ffbd70 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x239c9ffbb60 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ffbbd8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x239c9ffbc50 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x239c9ffd0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9ffcf50 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x239c9ffcfc8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x239c9ffd178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9ffd588 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ffd378 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x239c9ffd3f0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ffd468 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239c9ffd640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9ffd8f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9ffd780 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x239c9ffd7f8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9ffdbe0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ffd9d0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x239c9ffda48 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ffdac0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca001000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9ffdd80 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x239c9ffddf8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x239ca0010b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239ca001588 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239ca0012b0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x239ca001328 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239ca0013a0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239ca001640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239ca0018f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x239ca001780 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x239ca0017f8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x239ca001be0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239ca0019d0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x239ca001a48 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239ca001ac0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239c9ffa008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x239ca001d80 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x239ca001df8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca001e70 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x239c9ffa0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9ffa640 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ffa2c0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x239c9ffa338 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ffa3b0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239c9ffa428 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239c9ffa700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239c9ffaa50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x239c9ffa840 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x239c9ffa8b8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9ffa930 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x239c9ffadd8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239c9ffab30 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x239c9ffaba8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ffac20 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239c9ffac98 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca002150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x239ca002070 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x239ca0021f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239ca002570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239ca0023f8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x239ca002470 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x239ca002620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239ca002840 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x239ca002760 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x239ca002a88 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x239ca002910 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x239ca002988 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca002d88 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x239ca002b68 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x239ca002be0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x239ca003158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x239ca002f20 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x239ca002fb0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x239ca003208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239ca003610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x239ca003350 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x239ca0033c8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x239ca003440 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x239ca003a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x239ca0037b0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x239ca003828 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x239ca0038a0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x239ca003b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239ca005018 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x239ca003c70 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x239ca003ce8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x239ca003d60 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x239ca003dd8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x239ca005270 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x239ca005100 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x239ca0054b0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x239ca005340 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x239ca0053b8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x239ca005668 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x239ca005588 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x239ca005958 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x239ca005738 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x239ca0057b0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x239ca005bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x239ca005af0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x239ca005c70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x239ca005e88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x239ca005db0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x239c9ffe058 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x239ca005f58 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x239c9ffdf60 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x239c9ffe2a0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x239c9ffe130 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239c9ffe1a8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x239c9ffe450 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x239c9ffe378 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x239c9ffe5f8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x239c9ffe520 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x239c9ffe7a8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9ffe6c8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x239c9ffe958 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x239c9ffe878 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x239c9ffecd0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x239c9ffea30 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x239c9ffeaa8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ffeb20 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239c9ffeb98 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x239ca00b200 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x239c9ffedc0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x239c9ffee38 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239c9ffeeb0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca00b030 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239ca00b0a8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x239ca00b510 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x239ca00b2f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x239ca00b370 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x239ca00b3f0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x239ca00b6d0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x239ca00b5f0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x239ca00b9c0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x239ca00b7a0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x239ca00b820 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x239ca00b8a0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x239ca00bb80 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x239ca00baa0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x239ca00bef8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x239ca00bc58 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x239ca00bcd0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca00bd48 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x239ca00bdc0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x239ca00a198 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x239ca00a020 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x239ca00a098 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x239ca00a4d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x239ca00a350 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x239ca00a3d0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x239ca00a580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x239ca00a838 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x239ca00a8d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x239ca00ac18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x239ca00aaa0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x239ca00ab20 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x239ca00acc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x239ca00c040 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x239ca00c0e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x239ca00c380 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x239ca00c2a0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x239ca00c428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x239ca00c6a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x239ca00c748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x239ca00c9f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x239ca00c910 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x239ca00ca98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x239ca00cd78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x239ca00cc98 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x239ca00ce20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x239ca006158 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x239ca005fe0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x239ca006058 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x239ca006208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x239ca0064c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x239ca006568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x239ca0067a0 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x239ca006870 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x239ca006970 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x239ca006b68 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x239ca006c30 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x239ca006eb0 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x239ca006cc8 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x239ca006d48 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x239ca0092e8 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x239ca009010 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x239ca009090 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x239ca009108 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca0094b0 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x239ca009550 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca0095c0 <col:55> Implicit
| `-PureAttr 0x239ca009618 <col:55> Implicit
|-FunctionDecl 0x239ca009640 prev 0x239ca0094b0 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x239ca0093d0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x239ca009730 <col:55> Inherited Implicit
| `-PureAttr 0x239ca009758 <col:55> Inherited Implicit
|-FunctionDecl 0x239ca0099c0 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca009798 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca009810 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca009b80 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x239ca009c20 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca009c90 <col:55> Implicit
| `-PureAttr 0x239ca009ce8 <col:55> Implicit
|-FunctionDecl 0x239ca009d10 prev 0x239ca009b80 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x239ca009aa0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x239ca009e00 <col:55> Inherited Implicit
| `-PureAttr 0x239ca009e28 <col:55> Inherited Implicit
|-FunctionDecl 0x239ca00f070 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca009e68 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca009ee0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca00f230 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x239ca00f2d0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca00f340 <col:55> Implicit
| `-PureAttr 0x239ca00f398 <col:55> Implicit
|-FunctionDecl 0x239ca00f3c0 prev 0x239ca00f230 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x239ca00f150 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x239ca00f4b0 <col:55> Inherited Implicit
| `-PureAttr 0x239ca00f4d8 <col:55> Inherited Implicit
|-FunctionDecl 0x239ca00f690 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca00f518 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca00f590 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca00f850 <line:127:55> col:55 implicit isdigit 'int (int)' extern
| |-ParmVarDecl 0x239ca00f8f0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca00f960 <col:55> Implicit
| `-PureAttr 0x239ca00f9b8 <col:55> Implicit
|-FunctionDecl 0x239ca00f9e0 prev 0x239ca00f850 <col:43, col:74> col:55 isdigit 'int (int)'
| |-ParmVarDecl 0x239ca00f770 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x239ca00fad0 <col:55> Inherited Implicit
| `-PureAttr 0x239ca00faf8 <col:55> Inherited Implicit
|-FunctionDecl 0x239ca00fcb0 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca00fb38 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca00fbb0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca00fe70 <line:129:36> col:36 implicit isxdigit 'int (int)' extern
| |-ParmVarDecl 0x239ca00ff10 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca00ff80 <col:36> Implicit
| `-PureAttr 0x239ca00ffd8 <col:36> Implicit
|-FunctionDecl 0x239ca008000 prev 0x239ca00fe70 <col:24, col:56> col:36 isxdigit 'int (int)'
| |-ParmVarDecl 0x239ca00fd90 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x239ca0080f0 <col:36> Inherited Implicit
| `-PureAttr 0x239ca008118 <col:36> Inherited Implicit
|-FunctionDecl 0x239ca0082d0 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca008158 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x239ca0081d0 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca008490 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x239ca008530 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca0085a0 <col:55> Implicit
| `-PureAttr 0x239ca0085f8 <col:55> Implicit
|-FunctionDecl 0x239ca008620 prev 0x239ca008490 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x239ca0083b0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x239ca008710 <col:55> Inherited Implicit
| `-PureAttr 0x239ca008738 <col:55> Inherited Implicit
|-FunctionDecl 0x239ca0088f0 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca008778 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca0087f0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca008ab0 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x239ca008b50 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca008bc0 <col:36> Implicit
| `-PureAttr 0x239ca008c18 <col:36> Implicit
|-FunctionDecl 0x239ca008c40 prev 0x239ca008ab0 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x239ca0089d0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x239ca008d30 <col:36> Inherited Implicit
| `-PureAttr 0x239ca008d58 <col:36> Inherited Implicit
|-FunctionDecl 0x239ca008f10 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca008d98 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca008e10 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01c0c0 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x239ca01c160 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca01c1d0 <col:36> Implicit
| `-PureAttr 0x239ca01c228 <col:36> Implicit
|-FunctionDecl 0x239ca01c250 prev 0x239ca01c0c0 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x239ca01bfe0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x239ca01c340 <col:36> Inherited Implicit
| `-PureAttr 0x239ca01c368 <col:36> Inherited Implicit
|-FunctionDecl 0x239ca01c520 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca01c3a8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca01c420 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01c6e0 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x239ca01c780 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca01c7f0 <col:55> Implicit
| `-PureAttr 0x239ca01c848 <col:55> Implicit
|-FunctionDecl 0x239ca01c870 prev 0x239ca01c6e0 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x239ca01c600 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x239ca01c960 <col:55> Inherited Implicit
| `-PureAttr 0x239ca01c988 <col:55> Inherited Implicit
|-FunctionDecl 0x239ca01cb40 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca01c9c8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca01ca40 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01cd00 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x239ca01cda0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca01ce10 <col:36> Implicit
| `-PureAttr 0x239ca01ce68 <col:36> Implicit
|-FunctionDecl 0x239ca01ce90 prev 0x239ca01cd00 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x239ca01cc20 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x239ca01cf80 <col:36> Inherited Implicit
| `-PureAttr 0x239ca01cfa8 <col:36> Inherited Implicit
|-FunctionDecl 0x239ca01e190 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca01e018 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca01e090 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01e350 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x239ca01e3f0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca01e460 <col:36> Implicit
| `-PureAttr 0x239ca01e4b8 <col:36> Implicit
|-FunctionDecl 0x239ca01e4e0 prev 0x239ca01e350 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x239ca01e270 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x239ca01e5d0 <col:36> Inherited Implicit
| `-PureAttr 0x239ca01e5f8 <col:36> Inherited Implicit
|-FunctionDecl 0x239ca01e7b0 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca01e638 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca01e6b0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01e970 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x239ca01ea10 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca01ea80 <col:36> Implicit
| `-PureAttr 0x239ca01ead8 <col:36> Implicit
|-FunctionDecl 0x239ca01eb00 prev 0x239ca01e970 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x239ca01e890 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x239ca01ebf0 <col:36> Inherited Implicit
| `-PureAttr 0x239ca01ec18 <col:36> Inherited Implicit
|-FunctionDecl 0x239ca01edd0 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca01ec58 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca01ecd0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca018fb0 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x239ca019050 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca0190c0 <col:55> Implicit
| `-PureAttr 0x239ca019118 <col:55> Implicit
|-FunctionDecl 0x239ca019140 prev 0x239ca018fb0 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x239ca01eeb0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x239ca019230 <col:55> Inherited Implicit
| `-PureAttr 0x239ca019258 <col:55> Inherited Implicit
|-FunctionDecl 0x239ca019378 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x239ca019418 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x239ca019488 <col:55> Implicit
| `-PureAttr 0x239ca0194e0 <col:55> Implicit
|-FunctionDecl 0x239ca019508 prev 0x239ca019378 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x239ca019298 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x239ca0195f8 <col:55> Inherited Implicit
| `-PureAttr 0x239ca019620 <col:55> Inherited Implicit
|-FunctionDecl 0x239ca019740 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239ca019660 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x239ca019990 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca019818 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca019890 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca019b50 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239ca019a70 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x239ca019da0 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca019c28 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x239ca019ca0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01f010 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239ca019e80 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x239ca01f1c8 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239ca01f0e8 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x239ca01f380 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239ca01f2a0 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x239ca01f538 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239ca01f458 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x239ca01f788 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01f608 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01fa80 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01f858 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01f8d0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01fc38 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01fb58 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01fe80 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01fd08 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01fd80 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca019ff8 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01ff58 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01a240 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01a0c8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01a140 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01a3f8 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01a318 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01a640 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01a4c8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01a540 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01a7f8 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01a718 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01aa40 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01a8c8 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01a940 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01abf8 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01ab18 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01ae40 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01acc8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01ad40 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01d028 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01af18 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01d270 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01d0f8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01d170 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01d428 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01d348 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01d670 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01d4f8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01d570 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01d828 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01d748 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01da70 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01d8f8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01d970 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01dc28 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01db48 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01de70 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01dcf8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01dd70 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca021068 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01df48 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca0212b0 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca021138 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca0211b0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca021468 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca021388 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca0216b0 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca021538 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca0215b0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca021868 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca021788 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca021a80 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x239ca021938 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca021d68 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca021b50 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca021bc8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca021f18 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x239ca021e40 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01b140 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01afd0 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01b048 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01b440 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x239ca01b218 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01b290 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x239ca01b7e8 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x239ca01b518 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x239ca01b590 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x239ca01b608 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01b9a8 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01b8c8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca01bbf0 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01ba78 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01baf0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca01bda8 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x239ca01bcc8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x239ca0280e0 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x239ca01be78 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x239ca01bef0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca0282a0 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x239ca0281c0 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x239ca0284f0 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x239ca028378 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x239ca0283f0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca028800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x239ca028688 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x239ca028700 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x239ca0288b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x239ca0289f8 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x239ca028b48 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x239ca028d78 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x239ca028c10 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x239ca028fa0 <.//openssl//file_jk/after\crypto\x509v3/ext_dat.h:10:1, col:47> col:5 name_cmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x239ca028e50 <col:14, col:26> col:26 name 'const char *'
| `-ParmVarDecl 0x239ca028ed0 <col:32, col:44> col:44 cmp 'const char *'
|-VarDecl 0x239ca025070 <line:12:1, col:32> col:32 invalid v3_bcons 'const int' extern
|-VarDecl 0x239ca0250f0 <line:13:1, col:32> col:32 invalid v3_pkey_usage_period 'const int' extern
|-VarDecl 0x239ca025240 <line:14:1, <invalid sloc>> col:32 invalid v3_ns_ia5_list 'const int [8]' extern
|-VarDecl 0x239ca0252e8 <line:15:1, col:32> col:32 invalid v3_crl_num 'const int' extern
|-VarDecl 0x239ca025368 <line:16:1, col:32> col:32 invalid v3_delta_crl 'const int' extern
|-VarDecl 0x239ca0253e8 <line:17:1, col:32> col:32 invalid v3_ocsp_nonce 'const int' extern
|-VarDecl 0x239ca025468 <line:18:1, col:32> col:32 invalid v3_ocsp_crlid 'const int' extern
|-VarDecl 0x239ca0254e8 <line:19:1, col:32> col:32 invalid v3_crl_hold 'const int' extern
|-VarDecl 0x239ca025568 <line:20:1, col:32> col:32 invalid v3_policy_mappings 'const int' extern
|-VarDecl 0x239ca0255e8 <line:21:1, col:32> col:32 invalid v3_name_constraints 'const int' extern
|-VarDecl 0x239ca025668 <line:22:1, col:32> col:32 invalid v3_addr 'const int' extern
|-VarDecl 0x239ca0257b0 <line:23:1, <invalid sloc>> col:32 invalid v3_ct_scts 'const int [3]' extern
|-VarDecl 0x239ca025830 <line:24:1, col:32> col:32 invalid v3_tls_feature 'const int' extern
|-FunctionDecl 0x239ca025960 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:22:1, col:37> col:14 strip_spaces 'char *(char *)' static
| `-ParmVarDecl 0x239ca0258b0 <col:27, col:33> col:33 name 'char *'
|-FunctionDecl 0x239ca025bf0 <line:23:1, col:64> col:12 sk_strcmp 'int (const char *const *, const char *const *)' static
| |-ParmVarDecl 0x239ca025a60 <col:22, col:41> col:41 a 'const char *const *'
| `-ParmVarDecl 0x239ca025ae0 <col:44, col:63> col:63 b 'const char *const *'
|-FunctionDecl 0x239ca025d98 <line:26:1, col:40> col:13 invalid str_free 'void (int)' static
| `-ParmVarDecl 0x239ca025cd0 <col:22, col:37> col:37 invalid str 'int'
|-FunctionDecl 0x239ca024060 <line:27:1, col:81> col:12 invalid append_ia5 'int (int (*)())' static
| `-ParmVarDecl 0x239ca025ef0 <col:23, <invalid sloc>> col:23 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x239ca0242e0 <line:29:1, col:59> col:12 used ipv4_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x239ca024150 <col:26, col:41> col:41 v4 'unsigned char *'
| `-ParmVarDecl 0x239ca0241d0 <col:45, col:57> col:57 in 'const char *'
|-FunctionDecl 0x239ca024510 <line:30:1, col:59> col:12 used ipv6_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x239ca0243c0 <col:26, col:41> col:41 v6 'unsigned char *'
| `-ParmVarDecl 0x239ca024440 <col:45, col:57> col:57 in 'const char *'
|-FunctionDecl 0x239ca024820 <line:31:1, col:56> col:12 used ipv6_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x239ca0245f0 <col:20, col:32> col:32 elem 'const char *'
| |-ParmVarDecl 0x239ca024670 <col:38, col:42> col:42 len 'int'
| `-ParmVarDecl 0x239ca0246f0 <col:47, col:53> col:53 usr 'void *'
|-FunctionDecl 0x239ca024b40 <line:32:1, col:66> col:12 used ipv6_hex 'int (unsigned char *, const char *, int)' static
| |-ParmVarDecl 0x239ca024908 <col:21, col:36> col:36 out 'unsigned char *'
| |-ParmVarDecl 0x239ca024988 <col:41, col:53> col:53 in 'const char *'
| `-ParmVarDecl 0x239ca024a08 <col:57, col:61> col:61 inlen 'int'
|-FunctionDecl 0x239ca024e60 <line:36:1, line:67:1> line:36:5 invalid X509V3_add_value 'int (const char *, const char *, int (*)())'
| |-ParmVarDecl 0x239ca024c28 <col:22, col:34> col:34 used name 'const char *'
| |-ParmVarDecl 0x239ca024ca8 <col:40, col:52> col:52 used value 'const char *'
| |-ParmVarDecl 0x239ca024d38 <line:37:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x239ca026620 <line:38:1, line:67:1>
|   |-DeclStmt 0x239ca02c290 <line:40:5, col:39>
|   | |-VarDecl 0x239ca024fd0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\x509v3\v3_utl.c:40:11 used tname 'char *' cinit
|   | | `-ImplicitCastExpr 0x239ca02c140 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x239ca02c120 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x239ca02c0f8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x239ca025038 <col:26> 'int' 0
|   | `-VarDecl 0x239ca02c170 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:40:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\x509v3\v3_utl.c:40:26 used tvalue 'char *' cinit
|   |   `-ImplicitCastExpr 0x239ca02c260 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x239ca02c240 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca02c218 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca02c1d8 <col:26> 'int' 0
|   |-DeclStmt 0x239ca02c3b0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:41:5, col:42>
|   | `-VarDecl 0x239ca02c2c0 <col:5, col:9> col:9 used sk_allocated 'int'
|   |-IfStmt 0x239ca02c778 <line:43:5, line:44:14>
|   | |-BinaryOperator 0x239ca02c6f0 <line:43:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   | | |-ImplicitCastExpr 0x239ca02c6d8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:43:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca02c3c8 <col:9> 'const char *' lvalue ParmVar 0x239ca024c28 'name' 'const char *'
|   | | `-BinaryOperator 0x239ca02c6b8 <col:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   |-ParenExpr 0x239ca02c5f8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:43:17, col:46> 'char *'
|   | |   | `-BinaryOperator 0x239ca02c5d8 <col:18, col:45> 'char *' '='
|   | |   |   |-DeclRefExpr 0x239ca02c400 <col:18> 'char *' lvalue Var 0x239ca024fd0 'tname' 'char *'
|   | |   |   `-ImplicitCastExpr 0x239ca02c5c0 <col:26, col:45> 'char *' <IntegralToPointer>
|   | |   |     `-CallExpr 0x239ca02c580 <col:26, col:45> 'int'
|   | |   |       |-ImplicitCastExpr 0x239ca02c568 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   | |   |       | `-DeclRefExpr 0x239ca02c528 <col:26> 'int ()' Function 0x239ca02c460 'OPENSSL_strdup' 'int ()'
|   | |   |       `-ImplicitCastExpr 0x239ca02c5a8 <col:41> 'const char *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x239ca02c548 <col:41> 'const char *' lvalue ParmVar 0x239ca024c28 'name' 'const char *'
|   | |   `-ImplicitCastExpr 0x239ca02c6a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |     `-ParenExpr 0x239ca02c680 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x239ca02c658 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x239ca02c618 <col:26> 'int' 0
|   | `-GotoStmt 0x239ca02c760 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:44:9, col:14> 'err' 0x239ca02c710
|   |-IfStmt 0x239ca02ca00 <line:45:5, line:46:14>
|   | |-BinaryOperator 0x239ca02c9c8 <line:45:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   | | |-ImplicitCastExpr 0x239ca02c9b0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:45:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca02c790 <col:9> 'const char *' lvalue ParmVar 0x239ca024ca8 'value' 'const char *'
|   | | `-BinaryOperator 0x239ca02c990 <col:18, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   |-ParenExpr 0x239ca02c8d0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:45:18, col:49> 'char *'
|   | |   | `-BinaryOperator 0x239ca02c8b0 <col:19, col:48> 'char *' '='
|   | |   |   |-DeclRefExpr 0x239ca02c7c8 <col:19> 'char *' lvalue Var 0x239ca02c170 'tvalue' 'char *'
|   | |   |   `-ImplicitCastExpr 0x239ca02c898 <col:28, col:48> 'char *' <IntegralToPointer>
|   | |   |     `-CallExpr 0x239ca02c858 <col:28, col:48> 'int'
|   | |   |       |-ImplicitCastExpr 0x239ca02c840 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   | |   |       | `-DeclRefExpr 0x239ca02c800 <col:28> 'int ()' Function 0x239ca02c460 'OPENSSL_strdup' 'int ()'
|   | |   |       `-ImplicitCastExpr 0x239ca02c880 <col:43> 'const char *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x239ca02c820 <col:43> 'const char *' lvalue ParmVar 0x239ca024ca8 'value' 'const char *'
|   | |   `-ImplicitCastExpr 0x239ca02c978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |     `-ParenExpr 0x239ca02c958 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x239ca02c930 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x239ca02c8f0 <col:26> 'int' 0
|   | `-GotoStmt 0x239ca02c9e8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:46:9, col:14> 'err' 0x239ca02c710
|   |-IfStmt 0x239ca02cbe0 <line:47:5, line:48:14>
|   | |-OpaqueValueExpr 0x239ca02cbc8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x239ca02cbb0 <col:9, col:14> 'err' 0x239ca02c710
|   |-IfStmt 0x239ca02ce58 <line:49:5, line:50:14>
|   | |-OpaqueValueExpr 0x239ca02ce40 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x239ca02ce28 <col:9, col:14> 'err' 0x239ca02c710
|   |-IfStmt 0x239ca02d078 <line:54:5, line:55:14>
|   | |-OpaqueValueExpr 0x239ca02d060 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x239ca02d048 <col:9, col:14> 'err' 0x239ca02c710
|   |-ReturnStmt 0x239ca02d0b8 <line:56:5, col:12>
|   | `-IntegerLiteral 0x239ca02d090 <col:12> 'int' 1
|   |-LabelStmt 0x239ca026198 <line:57:2, col:5> 'err'
|   | `-NullStmt 0x239ca026190 <col:5>
|   |-IfStmt 0x239ca026390 <line:59:5, line:62:5>
|   | |-ImplicitCastExpr 0x239ca0261d0 <line:59:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x239ca0261b0 <col:9> 'int' lvalue Var 0x239ca02c2c0 'sk_allocated' 'int'
|   | `-CompoundStmt 0x239ca026380 <col:23, line:62:5>
|   |-CallExpr 0x239ca026510 <line:64:5, col:23> 'int'
|   | |-ImplicitCastExpr 0x239ca0264f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x239ca0264b8 <col:5> 'int ()' Function 0x239ca0263d0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x239ca026538 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x239ca0264d8 <col:18> 'char *' lvalue Var 0x239ca024fd0 'tname' 'char *'
|   |-CallExpr 0x239ca0265a8 <line:65:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x239ca026590 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x239ca026550 <col:5> 'int ()' Function 0x239ca0263d0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x239ca0265d0 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x239ca026570 <col:18> 'char *' lvalue Var 0x239ca02c170 'tvalue' 'char *'
|   `-ReturnStmt 0x239ca026610 <line:66:5, col:12>
|     `-IntegerLiteral 0x239ca0265e8 <col:12> 'int' 0
|-FunctionDecl 0x239ca0268f0 <line:69:1, line:73:1> line:69:5 invalid X509V3_add_value_uchar 'int (const char *, const unsigned char *, int (*)())'
| |-ParmVarDecl 0x239ca0266b0 <col:28, col:40> col:40 used name 'const char *'
| |-ParmVarDecl 0x239ca026730 <col:46, col:67> col:67 used value 'const unsigned char *'
| |-ParmVarDecl 0x239ca0267c0 <line:70:28, <invalid sloc>> col:28 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x239ca026a88 <line:71:1, line:73:1>
|-FunctionDecl 0x239ca026b78 <line:77:1, line:85:1> line:77:6 invalid X509V3_conf_free 'void (int *)'
| |-ParmVarDecl 0x239ca026ab0 <col:23, col:35> col:35 invalid conf 'int *'
| `-CompoundStmt 0x239ca026cf8 <line:78:1, line:85:1>
|   `-IfStmt 0x239ca026c60 <line:79:5, line:80:9>
|     |-OpaqueValueExpr 0x239ca026c48 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x239ca026c38 <col:9>
|-FunctionDecl 0x239ca026f60 <line:87:1, line:93:1> line:87:5 invalid X509V3_add_value_bool 'int (const char *, int, int (*)())'
| |-ParmVarDecl 0x239ca026d28 <col:27, col:39> col:39 used name 'const char *'
| |-ParmVarDecl 0x239ca026da8 <col:45, col:49> col:49 used asn1_bool 'int'
| |-ParmVarDecl 0x239ca026e38 <line:88:27, <invalid sloc>> col:27 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x239ca031248 <line:89:1, line:93:1>
|-FunctionDecl 0x239ca031428 <line:95:1, line:101:1> line:95:5 invalid X509V3_add_value_bool_nf 'int (const char *, int, int (*)())'
| |-ParmVarDecl 0x239ca031270 <col:30, col:42> col:42 used name 'const char *'
| |-ParmVarDecl 0x239ca0312f0 <col:48, col:52> col:52 used asn1_bool 'int'
| |-ParmVarDecl 0x239ca031380 <line:96:30, <invalid sloc>> col:30 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x239ca0315d8 <line:97:1, line:101:1>
|   `-ReturnStmt 0x239ca0315c8 <line:100:5, col:12>
|     `-IntegerLiteral 0x239ca0315a0 <col:12> 'int' 1
|-FunctionDecl 0x239ca0316d0 <line:103:1, line:138:1> line:103:14 invalid bignum_to_string 'char *(const int *)' static
| |-ParmVarDecl 0x239ca031608 <col:31, col:45> col:45 invalid bn 'const int *'
| `-CompoundStmt 0x239ca02ee50 <line:104:1, line:138:1>
|   |-DeclStmt 0x239ca0318a8 <line:105:5, col:20>
|   | |-VarDecl 0x239ca0317a8 <col:5, col:11> col:11 used tmp 'char *'
|   | `-VarDecl 0x239ca031828 <col:5, col:17> col:17 used ret 'char *'
|   |-DeclStmt 0x239ca031938 <line:106:5, col:15>
|   | `-VarDecl 0x239ca0318d0 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   |-IfStmt 0x239ca031e88 <line:117:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x239ca031db8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:117:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca031d88 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:117:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca031ce0 <col:9> 'char *' lvalue Var 0x239ca0317a8 'tmp' 'char *'
|   | | `-ImplicitCastExpr 0x239ca031da0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x239ca031d68 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x239ca031d40 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x239ca031d00 <col:26> 'int' 0
|   | `-ReturnStmt 0x239ca031e78 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:118:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x239ca031e60 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x239ca031e40 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca031e18 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca031dd8 <col:26> 'int' 0
|   |-BinaryOperator 0x239ca02e160 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:120:5, col:25> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x239ca031ea0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x239ca0318d0 'len' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x239ca02e140 <col:11, col:25> 'unsigned long long' '+'
|   |   |-CallExpr 0x239ca0320d0 <col:11, col:21> 'unsigned long long'
|   |   | |-ImplicitCastExpr 0x239ca0320b8 <col:11> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x239ca032020 <col:11> 'unsigned long long (const char *)' Function 0x239ca031f10 'strlen' 'unsigned long long (const char *)'
|   |   | `-ImplicitCastExpr 0x239ca032110 <col:18> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x239ca0320f8 <col:18> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x239ca032058 <col:18> 'char *' lvalue Var 0x239ca0317a8 'tmp' 'char *'
|   |   `-ImplicitCastExpr 0x239ca02e128 <col:25> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x239ca02e100 <col:25> 'int' 3
|   |-BinaryOperator 0x239ca02e268 <line:121:5, col:29> 'char *' '='
|   | |-DeclRefExpr 0x239ca02e180 <col:5> 'char *' lvalue Var 0x239ca031828 'ret' 'char *'
|   | `-ImplicitCastExpr 0x239ca02e250 <col:11, col:29> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x239ca02e210 <col:11, col:29> 'int'
|   |     |-ImplicitCastExpr 0x239ca02e1f8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x239ca02e1b8 <col:11> 'int ()' Function 0x239ca02ca40 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x239ca02e238 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x239ca02e1d8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x239ca0318d0 'len' 'size_t':'unsigned long long'
|   |-IfStmt 0x239ca02e508 <line:122:5, line:126:5>
|   | |-BinaryOperator 0x239ca02e360 <line:122:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca02e330 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:122:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca02e288 <col:9> 'char *' lvalue Var 0x239ca031828 'ret' 'char *'
|   | | `-ImplicitCastExpr 0x239ca02e348 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x239ca02e310 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x239ca02e2e8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x239ca02e2a8 <col:26> 'int' 0
|   | `-CompoundStmt 0x239ca02e4e8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:122:22, line:126:5>
|   |   |-CallExpr 0x239ca02e3f8 <line:124:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x239ca02e3e0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x239ca02e3a0 <col:9> 'int ()' Function 0x239ca0263d0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x239ca02e420 <col:22> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x239ca02e3c0 <col:22> 'char *' lvalue Var 0x239ca0317a8 'tmp' 'char *'
|   |   `-ReturnStmt 0x239ca02e4d8 <line:125:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x239ca02e4c0 <col:17, col:27> 'char *' <NullToPointer>
|   |       `-ParenExpr 0x239ca02e4a0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x239ca02e478 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x239ca02e438 <col:26> 'int' 0
|   |-IfStmt 0x239ca02ed48 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:129:5, line:135:5> has_else
|   | |-BinaryOperator 0x239ca02e5e8 <line:129:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca02e5d0 <col:9, col:14> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x239ca02e5b8 <col:9, col:14> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x239ca02e580 <col:9, col:14> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x239ca02e568 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x239ca02e520 <col:9> 'char *' lvalue Var 0x239ca0317a8 'tmp' 'char *'
|   | | |     `-IntegerLiteral 0x239ca02e540 <col:13> 'int' 0
|   | | `-CharacterLiteral 0x239ca02e5a0 <col:19> 'int' 45
|   | |-CompoundStmt 0x239ca02eaa0 <col:24, line:132:5>
|   | | |-CallExpr 0x239ca02e7d0 <line:130:9, col:40> 'int'
|   | | | |-ImplicitCastExpr 0x239ca02e7b8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x239ca02e6f8 <col:9> 'int ()' Function 0x239ca02e630 'OPENSSL_strlcpy' 'int ()'
|   | | | |-ImplicitCastExpr 0x239ca02e808 <col:25> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x239ca02e718 <col:25> 'char *' lvalue Var 0x239ca031828 'ret' 'char *'
|   | | | |-ImplicitCastExpr 0x239ca02e820 <col:30> 'char *' <ArrayToPointerDecay>
|   | | | | `-StringLiteral 0x239ca02e778 <col:30> 'char [4]' lvalue "-0x"
|   | | | `-ImplicitCastExpr 0x239ca02e838 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x239ca02e798 <col:37> 'size_t':'unsigned long long' lvalue Var 0x239ca0318d0 'len' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x239ca02ea38 <line:131:9, col:42> 'int'
|   | |   |-ImplicitCastExpr 0x239ca02ea20 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x239ca02e940 <col:9> 'int ()' Function 0x239ca02e878 'OPENSSL_strlcat' 'int ()'
|   | |   |-ImplicitCastExpr 0x239ca02ea70 <col:25> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca02e960 <col:25> 'char *' lvalue Var 0x239ca031828 'ret' 'char *'
|   | |   |-BinaryOperator 0x239ca02e9e0 <col:30, col:36> 'char *' '+'
|   | |   | |-ImplicitCastExpr 0x239ca02e9c8 <col:30> 'char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x239ca02e980 <col:30> 'char *' lvalue Var 0x239ca0317a8 'tmp' 'char *'
|   | |   | `-IntegerLiteral 0x239ca02e9a0 <col:36> 'int' 1
|   | |   `-ImplicitCastExpr 0x239ca02ea88 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x239ca02ea00 <col:39> 'size_t':'unsigned long long' lvalue Var 0x239ca0318d0 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x239ca02ed28 <line:132:12, line:135:5>
|   |   |-CallExpr 0x239ca02eb90 <line:133:9, col:39> 'int'
|   |   | |-ImplicitCastExpr 0x239ca02eb78 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x239ca02eac0 <col:9> 'int ()' Function 0x239ca02e630 'OPENSSL_strlcpy' 'int ()'
|   |   | |-ImplicitCastExpr 0x239ca02ebc8 <col:25> 'char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x239ca02eae0 <col:25> 'char *' lvalue Var 0x239ca031828 'ret' 'char *'
|   |   | |-ImplicitCastExpr 0x239ca02ebe0 <col:30> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x239ca02eb38 <col:30> 'char [3]' lvalue "0x"
|   |   | `-ImplicitCastExpr 0x239ca02ebf8 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x239ca02eb58 <col:36> 'size_t':'unsigned long long' lvalue Var 0x239ca0318d0 'len' 'size_t':'unsigned long long'
|   |   `-CallExpr 0x239ca02eca8 <line:134:9, col:38> 'int'
|   |     |-ImplicitCastExpr 0x239ca02ec90 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x239ca02ec10 <col:9> 'int ()' Function 0x239ca02e878 'OPENSSL_strlcat' 'int ()'
|   |     |-ImplicitCastExpr 0x239ca02ece0 <col:25> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x239ca02ec30 <col:25> 'char *' lvalue Var 0x239ca031828 'ret' 'char *'
|   |     |-ImplicitCastExpr 0x239ca02ecf8 <col:30> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x239ca02ec50 <col:30> 'char *' lvalue Var 0x239ca0317a8 'tmp' 'char *'
|   |     `-ImplicitCastExpr 0x239ca02ed10 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x239ca02ec70 <col:35> 'size_t':'unsigned long long' lvalue Var 0x239ca0318d0 'len' 'size_t':'unsigned long long'
|   |-CallExpr 0x239ca02edc8 <line:136:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x239ca02edb0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x239ca02ed70 <col:5> 'int ()' Function 0x239ca0263d0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x239ca02edf0 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x239ca02ed90 <col:18> 'char *' lvalue Var 0x239ca0317a8 'tmp' 'char *'
|   `-ReturnStmt 0x239ca02ee40 <line:137:5, col:12>
|     `-ImplicitCastExpr 0x239ca02ee28 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x239ca02ee08 <col:12> 'char *' lvalue Var 0x239ca031828 'ret' 'char *'
|-FunctionDecl 0x239ca031f10 <line:120:11> col:11 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x239ca031fb0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x239ca02f020 <line:140:1, line:152:1> line:140:7 invalid i2s_ASN1_ENUMERATED 'char *(int *, const int *)'
| |-ParmVarDecl 0x239ca02eec0 <col:27, col:46> col:46 invalid method 'int *'
| |-ParmVarDecl 0x239ca02ef40 <col:54, col:77> col:77 invalid a 'const int *'
| `-CompoundStmt 0x239ca033848 <line:141:1, line:152:1>
|   |-DeclStmt 0x239ca0332f8 <line:143:5, col:24>
|   | `-VarDecl 0x239ca0331f0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\x509v3\v3_utl.c:143:11 used strtmp 'char *' cinit
|   |   `-ImplicitCastExpr 0x239ca0332e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x239ca0332c0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca033298 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca033258 <col:26> 'int' 0
|   |-IfStmt 0x239ca0333d8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:145:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x239ca0333c0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x239ca0333b0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:146:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x239ca033398 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x239ca033378 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca033350 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca033310 <col:26> 'int' 0
|   `-ReturnStmt 0x239ca033838 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:151:5, col:12>
|     `-ImplicitCastExpr 0x239ca033820 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x239ca033800 <col:12> 'char *' lvalue Var 0x239ca0331f0 'strtmp' 'char *'
|-FunctionDecl 0x239ca0339a8 <line:154:1, line:166:1> line:154:7 invalid i2s_ASN1_INTEGER 'char *(int *, const int *)'
| |-ParmVarDecl 0x239ca033888 <col:24, col:43> col:43 invalid method 'int *'
| |-ParmVarDecl 0x239ca033908 <col:51, col:71> col:71 invalid a 'const int *'
| `-CompoundStmt 0x239ca034078 <line:155:1, line:166:1>
|   |-DeclStmt 0x239ca033c18 <line:157:5, col:24>
|   | `-VarDecl 0x239ca033b10 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\x509v3\v3_utl.c:157:11 used strtmp 'char *' cinit
|   |   `-ImplicitCastExpr 0x239ca033c00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x239ca033be0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca033bb8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca033b78 <col:26> 'int' 0
|   |-IfStmt 0x239ca033cf8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:159:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x239ca033ce0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x239ca033cd0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:160:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x239ca033cb8 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x239ca033c98 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca033c70 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca033c30 <col:26> 'int' 0
|   `-ReturnStmt 0x239ca034068 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:165:5, col:12>
|     `-ImplicitCastExpr 0x239ca034050 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x239ca034030 <col:12> 'char *' lvalue Var 0x239ca033b10 'strtmp' 'char *'
|-FunctionDecl 0x239ca036260 <line:168:1, line:219:1> line:168:15 invalid s2i_ASN1_INTEGER 'int *(int *, const char *)'
| |-ParmVarDecl 0x239ca0340b8 <col:32, col:51> col:51 invalid method 'int *'
| |-ParmVarDecl 0x239ca036180 <col:59, col:71> col:71 used value 'const char *'
| `-CompoundStmt 0x239ca034bb8 <line:169:1, line:219:1>
|   |-DeclStmt 0x239ca0364c8 <line:172:5, col:21>
|   | |-VarDecl 0x239ca0363c8 <col:5, col:9> col:9 used isneg 'int'
|   | `-VarDecl 0x239ca036448 <col:5, col:16> col:16 used ishex 'int'
|   |-DeclStmt 0x239ca036560 <line:173:5, col:12>
|   | `-VarDecl 0x239ca0364f8 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x239ca036770 <line:174:5, line:177:5>
|   | |-BinaryOperator 0x239ca036668 <line:174:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca036638 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:174:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca036578 <col:9> 'const char *' lvalue ParmVar 0x239ca036180 'value' 'const char *'
|   | | `-ImplicitCastExpr 0x239ca036650 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x239ca036618 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x239ca0365f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x239ca0365b0 <col:26> 'int' 0
|   | `-CompoundStmt 0x239ca036758 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:174:24, line:177:5>
|   |   `-ReturnStmt 0x239ca036748 <line:176:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x239ca036730 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x239ca036710 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x239ca0366e8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x239ca0366a8 <col:26> 'int' 0
|   |-IfStmt 0x239ca036a58 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:179:5, line:182:5>
|   | |-OpaqueValueExpr 0x239ca036a40 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x239ca036a28 <line:179:21, line:182:5>
|   |   `-ReturnStmt 0x239ca036a18 <line:181:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x239ca036a00 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x239ca0369e0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x239ca0369b8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x239ca036978 <col:26> 'int' 0
|   |-IfStmt 0x239ca036c98 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:183:5, line:187:17> has_else
|   | |-BinaryOperator 0x239ca036b38 <line:183:9, col:21> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca036b20 <col:9, col:16> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x239ca036b08 <col:9, col:16> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x239ca036ad0 <col:9, col:16> 'const char' lvalue
|   | | |     |-ImplicitCastExpr 0x239ca036ab8 <col:9> 'const char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x239ca036a70 <col:9> 'const char *' lvalue ParmVar 0x239ca036180 'value' 'const char *'
|   | | |     `-IntegerLiteral 0x239ca036a90 <col:15> 'int' 0
|   | | `-CharacterLiteral 0x239ca036af0 <col:21> 'int' 45
|   | |-CompoundStmt 0x239ca036c10 <col:26, line:186:5>
|   | | |-UnaryOperator 0x239ca036b78 <line:184:9, col:14> 'const char *' postfix '++'
|   | | | `-DeclRefExpr 0x239ca036b58 <col:9> 'const char *' lvalue ParmVar 0x239ca036180 'value' 'const char *'
|   | | `-BinaryOperator 0x239ca036bf0 <line:185:9, col:17> 'int' '='
|   | |   |-DeclRefExpr 0x239ca036b90 <col:9> 'int' lvalue Var 0x239ca0363c8 'isneg' 'int'
|   | |   `-IntegerLiteral 0x239ca036bc8 <col:17> 'int' 1
|   | `-BinaryOperator 0x239ca036c78 <line:187:9, col:17> 'int' '='
|   |   |-DeclRefExpr 0x239ca036c30 <col:9> 'int' lvalue Var 0x239ca0363c8 'isneg' 'int'
|   |   `-IntegerLiteral 0x239ca036c50 <col:17> 'int' 0
|   |-IfStmt 0x239ca034180 <line:189:5, line:193:17> has_else
|   | |-BinaryOperator 0x239ca036ff8 <line:189:9, col:67> 'int' '&&'
|   | | |-BinaryOperator 0x239ca036d88 <col:9, col:21> 'int' '=='
|   | | | |-ImplicitCastExpr 0x239ca036d70 <col:9, col:16> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x239ca036d58 <col:9, col:16> 'char' <LValueToRValue>
|   | | | |   `-ArraySubscriptExpr 0x239ca036d20 <col:9, col:16> 'const char' lvalue
|   | | | |     |-ImplicitCastExpr 0x239ca036d08 <col:9> 'const char *' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x239ca036cc0 <col:9> 'const char *' lvalue ParmVar 0x239ca036180 'value' 'const char *'
|   | | | |     `-IntegerLiteral 0x239ca036ce0 <col:15> 'int' 0
|   | | | `-CharacterLiteral 0x239ca036d40 <col:21> 'int' 48
|   | | `-ParenExpr 0x239ca036fd8 <col:28, col:67> 'int'
|   | |   `-BinaryOperator 0x239ca036fb8 <col:29, col:66> 'int' '||'
|   | |     |-ParenExpr 0x239ca036e90 <col:29, col:45> 'int'
|   | |     | `-BinaryOperator 0x239ca036e70 <col:30, col:42> 'int' '=='
|   | |     |   |-ImplicitCastExpr 0x239ca036e58 <col:30, col:37> 'int' <IntegralCast>
|   | |     |   | `-ImplicitCastExpr 0x239ca036e40 <col:30, col:37> 'char' <LValueToRValue>
|   | |     |   |   `-ArraySubscriptExpr 0x239ca036e08 <col:30, col:37> 'const char' lvalue
|   | |     |   |     |-ImplicitCastExpr 0x239ca036df0 <col:30> 'const char *' <LValueToRValue>
|   | |     |   |     | `-DeclRefExpr 0x239ca036da8 <col:30> 'const char *' lvalue ParmVar 0x239ca036180 'value' 'const char *'
|   | |     |   |     `-IntegerLiteral 0x239ca036dc8 <col:36> 'int' 1
|   | |     |   `-CharacterLiteral 0x239ca036e28 <col:42> 'int' 120
|   | |     `-ParenExpr 0x239ca036f98 <col:50, col:66> 'int'
|   | |       `-BinaryOperator 0x239ca036f78 <col:51, col:63> 'int' '=='
|   | |         |-ImplicitCastExpr 0x239ca036f60 <col:51, col:58> 'int' <IntegralCast>
|   | |         | `-ImplicitCastExpr 0x239ca036f48 <col:51, col:58> 'char' <LValueToRValue>
|   | |         |   `-ArraySubscriptExpr 0x239ca036f10 <col:51, col:58> 'const char' lvalue
|   | |         |     |-ImplicitCastExpr 0x239ca036ef8 <col:51> 'const char *' <LValueToRValue>
|   | |         |     | `-DeclRefExpr 0x239ca036eb0 <col:51> 'const char *' lvalue ParmVar 0x239ca036180 'value' 'const char *'
|   | |         |     `-IntegerLiteral 0x239ca036ed0 <col:57> 'int' 1
|   | |         `-CharacterLiteral 0x239ca036f30 <col:63> 'int' 88
|   | |-CompoundStmt 0x239ca037110 <col:70, line:192:5>
|   | | |-CompoundAssignOperator 0x239ca037060 <line:190:9, col:18> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | | |-DeclRefExpr 0x239ca037018 <col:9> 'const char *' lvalue ParmVar 0x239ca036180 'value' 'const char *'
|   | | | `-IntegerLiteral 0x239ca037038 <col:18> 'int' 2
|   | | `-BinaryOperator 0x239ca0370f0 <line:191:9, col:17> 'int' '='
|   | |   |-DeclRefExpr 0x239ca037090 <col:9> 'int' lvalue Var 0x239ca036448 'ishex' 'int'
|   | |   `-IntegerLiteral 0x239ca0370c8 <col:17> 'int' 1
|   | `-BinaryOperator 0x239ca034160 <line:193:9, col:17> 'int' '='
|   |   |-DeclRefExpr 0x239ca037130 <col:9> 'int' lvalue Var 0x239ca036448 'ishex' 'int'
|   |   `-IntegerLiteral 0x239ca037150 <col:17> 'int' 0
|   |-IfStmt 0x239ca0346d0 <line:200:5, line:204:5>
|   | |-BinaryOperator 0x239ca0345a8 <line:200:9, col:26> 'int' '||'
|   | | |-UnaryOperator 0x239ca0344d0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x239ca0344b8 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x239ca034498 <col:10> 'int' lvalue Var 0x239ca0364f8 'ret' 'int'
|   | | `-ImplicitCastExpr 0x239ca034590 <col:17, col:26> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x239ca034578 <col:17, col:26> 'char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x239ca034558 <col:17, col:26> 'const char' lvalue
|   | |       |-ImplicitCastExpr 0x239ca034528 <col:17> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x239ca0344e8 <col:17> 'const char *' lvalue ParmVar 0x239ca036180 'value' 'const char *'
|   | |       `-ImplicitCastExpr 0x239ca034540 <col:23> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x239ca034508 <col:23> 'int' lvalue Var 0x239ca0364f8 'ret' 'int'
|   | `-CompoundStmt 0x239ca0346b8 <col:29, line:204:5>
|   |   `-ReturnStmt 0x239ca0346a8 <line:203:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x239ca034690 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x239ca034670 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x239ca034648 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x239ca034608 <col:26> 'int' 0
|   |-IfStmt 0x239ca034898 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:206:5, line:207:17>
|   | |-OpaqueValueExpr 0x239ca034880 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x239ca034860 <col:9, col:17> 'int' '='
|   |   |-DeclRefExpr 0x239ca034818 <col:9> 'int' lvalue Var 0x239ca0363c8 'isneg' 'int'
|   |   `-IntegerLiteral 0x239ca034838 <col:17> 'int' 0
|   `-IfStmt 0x239ca034b68 <line:211:5, line:215:5>
|     |-OpaqueValueExpr 0x239ca034b50 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x239ca034b38 <line:211:16, line:215:5>
|       `-ReturnStmt 0x239ca034b28 <line:214:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x239ca034b10 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x239ca034af0 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x239ca034ac8 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x239ca034a88 <col:26> 'int' 0
|-FunctionDecl 0x239ca034e60 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:221:1, line:234:1> line:221:5 invalid X509V3_add_value_int 'int (const char *, const int *, int (*)())'
| |-ParmVarDecl 0x239ca034c28 <col:26, col:38> col:38 used name 'const char *'
| |-ParmVarDecl 0x239ca034ca8 <col:44, col:64> col:64 invalid aint 'const int *'
| |-ParmVarDecl 0x239ca034d38 <line:222:26, <invalid sloc>> col:26 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x239ca0303c8 <line:223:1, line:234:1>
|   |-DeclStmt 0x239ca034fb0 <line:224:5, col:17>
|   | `-VarDecl 0x239ca034f48 <col:5, col:11> col:11 used strtmp 'char *'
|   |-DeclStmt 0x239ca035048 <line:225:5, col:12>
|   | `-VarDecl 0x239ca034fe0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x239ca0350b0 <line:227:5, line:228:16>
|   | |-OpaqueValueExpr 0x239ca035098 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x239ca035088 <col:9, col:16>
|   |   `-IntegerLiteral 0x239ca035060 <col:16> 'int' 1
|   |-IfStmt 0x239ca030240 <line:229:5, line:230:16>
|   | |-OpaqueValueExpr 0x239ca030228 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x239ca030218 <col:9, col:16>
|   |   `-IntegerLiteral 0x239ca0301f0 <col:16> 'int' 0
|   |-CallExpr 0x239ca030340 <line:232:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x239ca030328 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x239ca0302e8 <col:5> 'int ()' Function 0x239ca0263d0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x239ca030368 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x239ca030308 <col:18> 'char *' lvalue Var 0x239ca034f48 'strtmp' 'char *'
|   `-ReturnStmt 0x239ca0303b8 <line:233:5, col:12>
|     `-ImplicitCastExpr 0x239ca0303a0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x239ca030380 <col:12> 'int' lvalue Var 0x239ca034fe0 'ret' 'int'
|-FunctionDecl 0x239ca030580 <line:236:1, line:265:1> line:236:5 invalid X509V3_get_value_bool 'int (const int *, int *)'
| |-ParmVarDecl 0x239ca030420 <col:27, col:45> col:45 invalid value 'const int *'
| |-ParmVarDecl 0x239ca0304a0 <col:52, col:57> col:57 used asn1_bool 'int *'
| `-CompoundStmt 0x239ca033038 <line:237:1, line:265:1>
|   |-DeclStmt 0x239ca0306c8 <line:238:5, col:21>
|   | `-VarDecl 0x239ca030660 <col:5, col:17> col:17 used btmp 'const char *'
|   |-IfStmt 0x239ca030820 <line:240:5, line:241:14>
|   | |-OpaqueValueExpr 0x239ca030808 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x239ca0307f0 <col:9, col:14> 'err' 0x239ca0307a0
|   |-IfStmt 0x239ca032480 <line:242:5, line:250:5>
|   | |-BinaryOperator 0x239ca032358 <line:242:9, line:247:35> 'int' '||'
|   | | |-BinaryOperator 0x239ca0321d0 <line:242:9, line:246:35> 'int' '||'
|   | | | |-BinaryOperator 0x239ca031018 <line:242:9, line:245:33> 'int' '||'
|   | | | | |-BinaryOperator 0x239ca030e90 <line:242:9, line:244:33> 'int' '||'
|   | | | | | |-BinaryOperator 0x239ca030cc8 <line:242:9, line:243:36> 'int' '||'
|   | | | | | | |-BinaryOperator 0x239ca030b40 <line:242:9, col:33> 'int' '=='
|   | | | | | | | |-CallExpr 0x239ca030aa0 <col:9, col:28> 'int'
|   | | | | | | | | |-ImplicitCastExpr 0x239ca030a88 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | | | | | `-DeclRefExpr 0x239ca0309b8 <col:9> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | | | | | | | | |-ImplicitCastExpr 0x239ca030ad0 <col:16> 'const char *' <LValueToRValue>
|   | | | | | | | | | `-DeclRefExpr 0x239ca0309f0 <col:16> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | | | | | | | | `-ImplicitCastExpr 0x239ca030b00 <col:22> 'const char *' <NoOp>
|   | | | | | | | |   `-ImplicitCastExpr 0x239ca030ae8 <col:22> 'char *' <ArrayToPointerDecay>
|   | | | | | | | |     `-StringLiteral 0x239ca030a10 <col:22> 'char [5]' lvalue "TRUE"
|   | | | | | | | `-IntegerLiteral 0x239ca030b18 <col:33> 'int' 0
|   | | | | | | `-BinaryOperator 0x239ca030ca8 <line:243:12, col:36> 'int' '=='
|   | | | | | |   |-CallExpr 0x239ca030c08 <col:12, col:31> 'int'
|   | | | | | |   | |-ImplicitCastExpr 0x239ca030bf0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | |   | | `-DeclRefExpr 0x239ca030b60 <col:12> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | | | | | |   | |-ImplicitCastExpr 0x239ca030c38 <col:19> 'const char *' <LValueToRValue>
|   | | | | | |   | | `-DeclRefExpr 0x239ca030b80 <col:19> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | | | | | |   | `-ImplicitCastExpr 0x239ca030c68 <col:25> 'const char *' <NoOp>
|   | | | | | |   |   `-ImplicitCastExpr 0x239ca030c50 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | | |   |     `-StringLiteral 0x239ca030ba0 <col:25> 'char [5]' lvalue "true"
|   | | | | | |   `-IntegerLiteral 0x239ca030c80 <col:36> 'int' 0
|   | | | | | `-BinaryOperator 0x239ca030e70 <line:244:12, col:33> 'int' '=='
|   | | | | |   |-CallExpr 0x239ca030dd0 <col:12, col:28> 'int'
|   | | | | |   | |-ImplicitCastExpr 0x239ca030db8 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | |   | | `-DeclRefExpr 0x239ca030ce8 <col:12> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | | | | |   | |-ImplicitCastExpr 0x239ca030e00 <col:19> 'const char *' <LValueToRValue>
|   | | | | |   | | `-DeclRefExpr 0x239ca030d08 <col:19> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | | | | |   | `-ImplicitCastExpr 0x239ca030e30 <col:25> 'const char *' <NoOp>
|   | | | | |   |   `-ImplicitCastExpr 0x239ca030e18 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | |   |     `-StringLiteral 0x239ca030d68 <col:25> 'char [2]' lvalue "Y"
|   | | | | |   `-IntegerLiteral 0x239ca030e48 <col:33> 'int' 0
|   | | | | `-BinaryOperator 0x239ca030ff8 <line:245:12, col:33> 'int' '=='
|   | | | |   |-CallExpr 0x239ca030f58 <col:12, col:28> 'int'
|   | | | |   | |-ImplicitCastExpr 0x239ca030f40 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | |   | | `-DeclRefExpr 0x239ca030eb0 <col:12> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | | | |   | |-ImplicitCastExpr 0x239ca030f88 <col:19> 'const char *' <LValueToRValue>
|   | | | |   | | `-DeclRefExpr 0x239ca030ed0 <col:19> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | | | |   | `-ImplicitCastExpr 0x239ca030fb8 <col:25> 'const char *' <NoOp>
|   | | | |   |   `-ImplicitCastExpr 0x239ca030fa0 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | |   |     `-StringLiteral 0x239ca030ef0 <col:25> 'char [2]' lvalue "y"
|   | | | |   `-IntegerLiteral 0x239ca030fd0 <col:33> 'int' 0
|   | | | `-BinaryOperator 0x239ca0321b0 <line:246:12, col:35> 'int' '=='
|   | | |   |-CallExpr 0x239ca0310e0 <col:12, col:30> 'int'
|   | | |   | |-ImplicitCastExpr 0x239ca0310c8 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x239ca031038 <col:12> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | | |   | |-ImplicitCastExpr 0x239ca032140 <col:19> 'const char *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x239ca031058 <col:19> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | | |   | `-ImplicitCastExpr 0x239ca032170 <col:25> 'const char *' <NoOp>
|   | | |   |   `-ImplicitCastExpr 0x239ca032158 <col:25> 'char *' <ArrayToPointerDecay>
|   | | |   |     `-StringLiteral 0x239ca031078 <col:25> 'char [4]' lvalue "YES"
|   | | |   `-IntegerLiteral 0x239ca032188 <col:35> 'int' 0
|   | | `-BinaryOperator 0x239ca032338 <line:247:12, col:35> 'int' '=='
|   | |   |-CallExpr 0x239ca032298 <col:12, col:30> 'int'
|   | |   | |-ImplicitCastExpr 0x239ca032280 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x239ca0321f0 <col:12> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x239ca0322c8 <col:19> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x239ca032210 <col:19> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | |   | `-ImplicitCastExpr 0x239ca0322f8 <col:25> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x239ca0322e0 <col:25> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x239ca032230 <col:25> 'char [4]' lvalue "yes"
|   | |   `-IntegerLiteral 0x239ca032310 <col:35> 'int' 0
|   | `-CompoundStmt 0x239ca032460 <col:38, line:250:5>
|   |   |-BinaryOperator 0x239ca032408 <line:248:9, col:22> 'int' '='
|   |   | |-UnaryOperator 0x239ca0323c8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x239ca0323b0 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x239ca032378 <col:10> 'int *' lvalue ParmVar 0x239ca0304a0 'asn1_bool' 'int *'
|   |   | `-IntegerLiteral 0x239ca0323e0 <col:22> 'int' 255
|   |   `-ReturnStmt 0x239ca032450 <line:249:9, col:16>
|   |     `-IntegerLiteral 0x239ca032428 <col:16> 'int' 1
|   |-IfStmt 0x239ca032e98 <line:251:5, line:259:5>
|   | |-BinaryOperator 0x239ca032d88 <line:251:9, line:256:34> 'int' '||'
|   | | |-BinaryOperator 0x239ca032c00 <line:251:9, line:255:34> 'int' '||'
|   | | | |-BinaryOperator 0x239ca032a78 <line:251:9, line:254:33> 'int' '||'
|   | | | | |-BinaryOperator 0x239ca0328f0 <line:251:9, line:253:33> 'int' '||'
|   | | | | | |-BinaryOperator 0x239ca032768 <line:251:9, line:252:37> 'int' '||'
|   | | | | | | |-BinaryOperator 0x239ca0325e0 <line:251:9, col:34> 'int' '=='
|   | | | | | | | |-CallExpr 0x239ca032540 <col:9, col:29> 'int'
|   | | | | | | | | |-ImplicitCastExpr 0x239ca032528 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | | | | | `-DeclRefExpr 0x239ca032498 <col:9> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | | | | | | | | |-ImplicitCastExpr 0x239ca032570 <col:16> 'const char *' <LValueToRValue>
|   | | | | | | | | | `-DeclRefExpr 0x239ca0324b8 <col:16> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | | | | | | | | `-ImplicitCastExpr 0x239ca0325a0 <col:22> 'const char *' <NoOp>
|   | | | | | | | |   `-ImplicitCastExpr 0x239ca032588 <col:22> 'char *' <ArrayToPointerDecay>
|   | | | | | | | |     `-StringLiteral 0x239ca0324d8 <col:22> 'char [6]' lvalue "FALSE"
|   | | | | | | | `-IntegerLiteral 0x239ca0325b8 <col:34> 'int' 0
|   | | | | | | `-BinaryOperator 0x239ca032748 <line:252:12, col:37> 'int' '=='
|   | | | | | |   |-CallExpr 0x239ca0326a8 <col:12, col:32> 'int'
|   | | | | | |   | |-ImplicitCastExpr 0x239ca032690 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | | |   | | `-DeclRefExpr 0x239ca032600 <col:12> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | | | | | |   | |-ImplicitCastExpr 0x239ca0326d8 <col:19> 'const char *' <LValueToRValue>
|   | | | | | |   | | `-DeclRefExpr 0x239ca032620 <col:19> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | | | | | |   | `-ImplicitCastExpr 0x239ca032708 <col:25> 'const char *' <NoOp>
|   | | | | | |   |   `-ImplicitCastExpr 0x239ca0326f0 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | | |   |     `-StringLiteral 0x239ca032640 <col:25> 'char [6]' lvalue "false"
|   | | | | | |   `-IntegerLiteral 0x239ca032720 <col:37> 'int' 0
|   | | | | | `-BinaryOperator 0x239ca0328d0 <line:253:12, col:33> 'int' '=='
|   | | | | |   |-CallExpr 0x239ca032830 <col:12, col:28> 'int'
|   | | | | |   | |-ImplicitCastExpr 0x239ca032818 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | |   | | `-DeclRefExpr 0x239ca032788 <col:12> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | | | | |   | |-ImplicitCastExpr 0x239ca032860 <col:19> 'const char *' <LValueToRValue>
|   | | | | |   | | `-DeclRefExpr 0x239ca0327a8 <col:19> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | | | | |   | `-ImplicitCastExpr 0x239ca032890 <col:25> 'const char *' <NoOp>
|   | | | | |   |   `-ImplicitCastExpr 0x239ca032878 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | | |   |     `-StringLiteral 0x239ca0327c8 <col:25> 'char [2]' lvalue "N"
|   | | | | |   `-IntegerLiteral 0x239ca0328a8 <col:33> 'int' 0
|   | | | | `-BinaryOperator 0x239ca032a58 <line:254:12, col:33> 'int' '=='
|   | | | |   |-CallExpr 0x239ca0329b8 <col:12, col:28> 'int'
|   | | | |   | |-ImplicitCastExpr 0x239ca0329a0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | |   | | `-DeclRefExpr 0x239ca032910 <col:12> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | | | |   | |-ImplicitCastExpr 0x239ca0329e8 <col:19> 'const char *' <LValueToRValue>
|   | | | |   | | `-DeclRefExpr 0x239ca032930 <col:19> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | | | |   | `-ImplicitCastExpr 0x239ca032a18 <col:25> 'const char *' <NoOp>
|   | | | |   |   `-ImplicitCastExpr 0x239ca032a00 <col:25> 'char *' <ArrayToPointerDecay>
|   | | | |   |     `-StringLiteral 0x239ca032950 <col:25> 'char [2]' lvalue "n"
|   | | | |   `-IntegerLiteral 0x239ca032a30 <col:33> 'int' 0
|   | | | `-BinaryOperator 0x239ca032be0 <line:255:12, col:34> 'int' '=='
|   | | |   |-CallExpr 0x239ca032b40 <col:12, col:29> 'int'
|   | | |   | |-ImplicitCastExpr 0x239ca032b28 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x239ca032a98 <col:12> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | | |   | |-ImplicitCastExpr 0x239ca032b70 <col:19> 'const char *' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x239ca032ab8 <col:19> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | | |   | `-ImplicitCastExpr 0x239ca032ba0 <col:25> 'const char *' <NoOp>
|   | | |   |   `-ImplicitCastExpr 0x239ca032b88 <col:25> 'char *' <ArrayToPointerDecay>
|   | | |   |     `-StringLiteral 0x239ca032ad8 <col:25> 'char [3]' lvalue "NO"
|   | | |   `-IntegerLiteral 0x239ca032bb8 <col:34> 'int' 0
|   | | `-BinaryOperator 0x239ca032d68 <line:256:12, col:34> 'int' '=='
|   | |   |-CallExpr 0x239ca032cc8 <col:12, col:29> 'int'
|   | |   | |-ImplicitCastExpr 0x239ca032cb0 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x239ca032c20 <col:12> 'int (const char *, const char *)' Function 0x239ca030838 'strcmp' 'int (const char *, const char *)'
|   | |   | |-ImplicitCastExpr 0x239ca032cf8 <col:19> 'const char *' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x239ca032c40 <col:19> 'const char *' lvalue Var 0x239ca030660 'btmp' 'const char *'
|   | |   | `-ImplicitCastExpr 0x239ca032d28 <col:25> 'const char *' <NoOp>
|   | |   |   `-ImplicitCastExpr 0x239ca032d10 <col:25> 'char *' <ArrayToPointerDecay>
|   | |   |     `-StringLiteral 0x239ca032c60 <col:25> 'char [3]' lvalue "no"
|   | |   `-IntegerLiteral 0x239ca032d40 <col:34> 'int' 0
|   | `-CompoundStmt 0x239ca032e78 <col:37, line:259:5>
|   |   |-BinaryOperator 0x239ca032e20 <line:257:9, col:22> 'int' '='
|   |   | |-UnaryOperator 0x239ca032de0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x239ca032dc8 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x239ca032da8 <col:10> 'int *' lvalue ParmVar 0x239ca0304a0 'asn1_bool' 'int *'
|   |   | `-IntegerLiteral 0x239ca032df8 <col:22> 'int' 0
|   |   `-ReturnStmt 0x239ca032e68 <line:258:9, col:16>
|   |     `-IntegerLiteral 0x239ca032e40 <col:16> 'int' 1
|   |-LabelStmt 0x239ca032ed8 <line:260:2, col:5> 'err'
|   | `-NullStmt 0x239ca032ed0 <col:5>
|   `-ReturnStmt 0x239ca033028 <line:264:5, col:12>
|     `-IntegerLiteral 0x239ca033000 <col:12> 'int' 0
|-FunctionDecl 0x239ca030838 <line:242:9> col:9 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x239ca0308d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x239ca030940 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x239ca035270 <line:267:1, line:277:1> line:267:5 invalid X509V3_get_value_int 'int (const int *, int **)'
| |-ParmVarDecl 0x239ca033090 <col:26, col:44> col:44 invalid value 'const int *'
| |-ParmVarDecl 0x239ca035190 <col:51, col:66> col:66 invalid aint 'int **'
| `-CompoundStmt 0x239ca035520 <line:268:1, line:277:1>
|   |-IfStmt 0x239ca0354d0 <line:271:5, line:274:5>
|   | |-OpaqueValueExpr 0x239ca0354b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x239ca0354a0 <line:271:64, line:274:5>
|   |   `-ReturnStmt 0x239ca035490 <line:273:9, col:16>
|   |     `-IntegerLiteral 0x239ca035468 <col:16> 'int' 0
|   `-ReturnStmt 0x239ca035510 <line:276:5, col:12>
|     `-IntegerLiteral 0x239ca0354e8 <col:12> 'int' 1
|-FunctionDecl 0x239ca0358f8 <line:533:1, line:562:1> line:533:13 used skip_prefix 'void (const unsigned char **, size_t *, size_t, unsigned int)' static
| |-ParmVarDecl 0x239ca035588 <col:25, col:47> col:47 used p 'const unsigned char **'
| |-ParmVarDecl 0x239ca035658 <col:50, col:58> col:58 used plen 'size_t *'
| |-ParmVarDecl 0x239ca0356d0 <line:534:25, col:32> col:32 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca035750 <line:535:25, col:38> col:38 used flags 'unsigned int'
| `-CompoundStmt 0x239ca0391c8 <line:536:1, line:562:1>
|   |-DeclStmt 0x239ca035ab8 <line:537:5, col:38>
|   | `-VarDecl 0x239ca0359e8 <col:5, col:37> col:26 used pattern 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x239ca035aa0 <col:36, col:37> 'const unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x239ca035a88 <col:36, col:37> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x239ca035a70 <col:37> 'const unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x239ca035a50 <col:37> 'const unsigned char **' lvalue ParmVar 0x239ca035588 'p' 'const unsigned char **'
|   |-DeclStmt 0x239ca035bb0 <line:538:5, col:31>
|   | `-VarDecl 0x239ca035ae0 <col:5, col:27> col:12 used pattern_len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x239ca035b98 <col:26, col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-UnaryOperator 0x239ca035b80 <col:26, col:27> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x239ca035b68 <col:27> 'size_t *' <LValueToRValue>
|   |         `-DeclRefExpr 0x239ca035b48 <col:27> 'size_t *' lvalue ParmVar 0x239ca035658 'plen' 'size_t *'
|   |-IfStmt 0x239ca035c38 <line:546:5, line:547:9>
|   | |-OpaqueValueExpr 0x239ca035c20 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x239ca035c10 <col:9>
|   |-WhileStmt 0x239ca035f58 <line:549:5, line:555:5>
|   | |-BinaryOperator 0x239ca035d90 <line:549:12, col:42> 'int' '&&'
|   | | |-BinaryOperator 0x239ca035cd8 <col:12, col:26> 'int' '>'
|   | | | |-ImplicitCastExpr 0x239ca035ca8 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x239ca035c50 <col:12> 'size_t':'unsigned long long' lvalue Var 0x239ca035ae0 'pattern_len' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x239ca035cc0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x239ca035c88 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca0356d0 'subject_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca035d78 <col:41, col:42> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x239ca035d60 <col:41, col:42> 'unsigned char' <LValueToRValue>
|   | |     `-UnaryOperator 0x239ca035d48 <col:41, col:42> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |       `-ImplicitCastExpr 0x239ca035d30 <col:42> 'const unsigned char *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x239ca035cf8 <col:42> 'const unsigned char *' lvalue Var 0x239ca0359e8 'pattern' 'const unsigned char *'
|   | `-CompoundStmt 0x239ca035f30 <col:51, line:555:5>
|   |   |-IfStmt 0x239ca035ea8 <line:550:9, line:552:13>
|   |   | |-OpaqueValueExpr 0x239ca035e90 <<invalid sloc>> '_Bool'
|   |   | `-BreakStmt 0x239ca035e88 <col:13>
|   |   |-UnaryOperator 0x239ca035ee0 <line:553:9, col:11> 'const unsigned char *' prefix '++'
|   |   | `-DeclRefExpr 0x239ca035ec0 <col:11> 'const unsigned char *' lvalue Var 0x239ca0359e8 'pattern' 'const unsigned char *'
|   |   `-UnaryOperator 0x239ca035f18 <line:554:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |     `-DeclRefExpr 0x239ca035ef8 <col:11> 'size_t':'unsigned long long' lvalue Var 0x239ca035ae0 'pattern_len' 'size_t':'unsigned long long'
|   `-IfStmt 0x239ca0391b0 <line:558:5, line:561:5>
|     |-BinaryOperator 0x239ca035fe0 <line:558:9, col:24> 'int' '=='
|     | |-ImplicitCastExpr 0x239ca035fb0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | `-DeclRefExpr 0x239ca035f70 <col:9> 'size_t':'unsigned long long' lvalue Var 0x239ca035ae0 'pattern_len' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x239ca035fc8 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x239ca035f90 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca0356d0 'subject_len' 'size_t':'unsigned long long'
|     `-CompoundStmt 0x239ca036150 <col:37, line:561:5>
|       |-BinaryOperator 0x239ca036088 <line:559:9, col:14> 'const unsigned char *' '='
|       | |-UnaryOperator 0x239ca036038 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|       | | `-ImplicitCastExpr 0x239ca036020 <col:10> 'const unsigned char **' <LValueToRValue>
|       | |   `-DeclRefExpr 0x239ca036000 <col:10> 'const unsigned char **' lvalue ParmVar 0x239ca035588 'p' 'const unsigned char **'
|       | `-ImplicitCastExpr 0x239ca036070 <col:14> 'const unsigned char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x239ca036050 <col:14> 'const unsigned char *' lvalue Var 0x239ca0359e8 'pattern' 'const unsigned char *'
|       `-BinaryOperator 0x239ca036130 <line:560:9, col:17> 'size_t':'unsigned long long' '='
|         |-UnaryOperator 0x239ca0360e0 <col:9, col:10> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|         | `-ImplicitCastExpr 0x239ca0360c8 <col:10> 'size_t *' <LValueToRValue>
|         |   `-DeclRefExpr 0x239ca0360a8 <col:10> 'size_t *' lvalue ParmVar 0x239ca035658 'plen' 'size_t *'
|         `-ImplicitCastExpr 0x239ca036118 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x239ca0360f8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x239ca035ae0 'pattern_len' 'size_t':'unsigned long long'
|-FunctionDecl 0x239ca0395e0 <line:565:1, line:591:1> line:565:12 used equal_nocase 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x239ca039218 <col:25, col:46> col:46 used pattern 'const unsigned char *'
| |-ParmVarDecl 0x239ca039290 <col:55, col:62> col:62 used pattern_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca039310 <line:566:25, col:46> col:46 used subject 'const unsigned char *'
| |-ParmVarDecl 0x239ca039388 <col:55, col:62> col:62 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca039408 <line:567:25, col:38> col:38 used flags 'unsigned int'
| `-CompoundStmt 0x239ca03e558 <line:568:1, line:591:1>
|   |-CallExpr 0x239ca039800 <line:569:5, col:59> 'void'
|   | |-ImplicitCastExpr 0x239ca0397e8 <col:5> 'void (*)(const unsigned char **, size_t *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x239ca0396c0 <col:5> 'void (const unsigned char **, size_t *, size_t, unsigned int)' Function 0x239ca0358f8 'skip_prefix' 'void (const unsigned char **, size_t *, size_t, unsigned int)'
|   | |-UnaryOperator 0x239ca039700 <col:17, col:18> 'const unsigned char **' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x239ca0396e0 <col:18> 'const unsigned char *' lvalue ParmVar 0x239ca039218 'pattern' 'const unsigned char *'
|   | |-UnaryOperator 0x239ca039738 <col:27, col:28> 'size_t *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x239ca039718 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca039290 'pattern_len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x239ca039840 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x239ca039750 <col:41> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca039388 'subject_len' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x239ca039858 <col:54> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x239ca039770 <col:54> 'unsigned int' lvalue ParmVar 0x239ca039408 'flags' 'unsigned int'
|   |-IfStmt 0x239ca039938 <line:570:5, line:571:16>
|   | |-BinaryOperator 0x239ca0398e0 <line:570:9, col:24> 'int' '!='
|   | | |-ImplicitCastExpr 0x239ca0398b0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca039870 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca039290 'pattern_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca0398c8 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x239ca039890 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca039388 'subject_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x239ca039928 <line:571:9, col:16>
|   |   `-IntegerLiteral 0x239ca039900 <col:16> 'int' 0
|   |-WhileStmt 0x239ca03e508 <line:572:5, line:589:5>
|   | |-ImplicitCastExpr 0x239ca039970 <line:572:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x239ca039950 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca039290 'pattern_len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x239ca03e4c0 <col:25, line:589:5>
|   |   |-DeclStmt 0x239ca039a70 <line:573:9, col:35>
|   |   | `-VarDecl 0x239ca0399a0 <col:9, col:28> col:23 used l 'unsigned char' cinit
|   |   |   `-ImplicitCastExpr 0x239ca039a58 <col:27, col:28> 'unsigned char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x239ca039a40 <col:27, col:28> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x239ca039a28 <col:28> 'const unsigned char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x239ca039a08 <col:28> 'const unsigned char *' lvalue ParmVar 0x239ca039218 'pattern' 'const unsigned char *'
|   |   |-DeclStmt 0x239ca039b70 <line:574:9, col:35>
|   |   | `-VarDecl 0x239ca039aa0 <col:9, col:28> col:23 used r 'unsigned char' cinit
|   |   |   `-ImplicitCastExpr 0x239ca039b58 <col:27, col:28> 'unsigned char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x239ca039b40 <col:27, col:28> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x239ca039b28 <col:28> 'const unsigned char *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x239ca039b08 <col:28> 'const unsigned char *' lvalue ParmVar 0x239ca039310 'subject' 'const unsigned char *'
|   |   |-IfStmt 0x239ca039c70 <line:576:9, line:577:20>
|   |   | |-BinaryOperator 0x239ca039c18 <line:576:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x239ca039c00 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x239ca039be8 <col:13> 'unsigned char' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x239ca039b88 <col:13> 'unsigned char' lvalue Var 0x239ca0399a0 'l' 'unsigned char'
|   |   | | `-IntegerLiteral 0x239ca039bc0 <col:18> 'int' 0
|   |   | `-ReturnStmt 0x239ca039c60 <line:577:13, col:20>
|   |   |   `-IntegerLiteral 0x239ca039c38 <col:20> 'int' 0
|   |   |-IfStmt 0x239ca03e400 <line:578:9, line:585:9>
|   |   | |-BinaryOperator 0x239ca039d40 <line:578:13, col:18> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x239ca039d10 <col:13> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x239ca039ce0 <col:13> 'unsigned char' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x239ca039c88 <col:13> 'unsigned char' lvalue Var 0x239ca0399a0 'l' 'unsigned char'
|   |   | | `-ImplicitCastExpr 0x239ca039d28 <col:18> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x239ca039cf8 <col:18> 'unsigned char' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x239ca039ca8 <col:18> 'unsigned char' lvalue Var 0x239ca039aa0 'r' 'unsigned char'
|   |   | `-CompoundStmt 0x239ca03e3d8 <col:21, line:585:9>
|   |   |   |-IfStmt 0x239ca039fc8 <line:579:13, line:580:33>
|   |   |   | |-BinaryOperator 0x239ca039e70 <line:579:17, col:34> 'int' '&&'
|   |   |   | | |-BinaryOperator 0x239ca039dc8 <col:17, col:24> 'int' '<='
|   |   |   | | | |-CharacterLiteral 0x239ca039d60 <col:17> 'int' 65
|   |   |   | | | `-ImplicitCastExpr 0x239ca039db0 <col:24> 'int' <IntegralCast>
|   |   |   | | |   `-ImplicitCastExpr 0x239ca039d98 <col:24> 'unsigned char' <LValueToRValue>
|   |   |   | | |     `-DeclRefExpr 0x239ca039d78 <col:24> 'unsigned char' lvalue Var 0x239ca0399a0 'l' 'unsigned char'
|   |   |   | | `-BinaryOperator 0x239ca039e50 <col:29, col:34> 'int' '<='
|   |   |   | |   |-ImplicitCastExpr 0x239ca039e38 <col:29> 'int' <IntegralCast>
|   |   |   | |   | `-ImplicitCastExpr 0x239ca039e20 <col:29> 'unsigned char' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x239ca039de8 <col:29> 'unsigned char' lvalue Var 0x239ca0399a0 'l' 'unsigned char'
|   |   |   | |   `-CharacterLiteral 0x239ca039e08 <col:34> 'int' 90
|   |   |   | `-BinaryOperator 0x239ca039fa8 <line:580:17, col:33> 'unsigned char' '='
|   |   |   |   |-DeclRefExpr 0x239ca039e90 <col:17> 'unsigned char' lvalue Var 0x239ca0399a0 'l' 'unsigned char'
|   |   |   |   `-ImplicitCastExpr 0x239ca039f90 <col:21, col:33> 'unsigned char' <IntegralCast>
|   |   |   |     `-BinaryOperator 0x239ca039f70 <col:21, col:33> 'int' '+'
|   |   |   |       |-ParenExpr 0x239ca039f38 <col:21, col:29> 'int'
|   |   |   |       | `-BinaryOperator 0x239ca039f18 <col:22, col:26> 'int' '-'
|   |   |   |       |   |-ImplicitCastExpr 0x239ca039f00 <col:22> 'int' <IntegralCast>
|   |   |   |       |   | `-ImplicitCastExpr 0x239ca039ee8 <col:22> 'unsigned char' <LValueToRValue>
|   |   |   |       |   |   `-DeclRefExpr 0x239ca039eb0 <col:22> 'unsigned char' lvalue Var 0x239ca0399a0 'l' 'unsigned char'
|   |   |   |       |   `-CharacterLiteral 0x239ca039ed0 <col:26> 'int' 65
|   |   |   |       `-CharacterLiteral 0x239ca039f58 <col:33> 'int' 97
|   |   |   |-IfStmt 0x239ca03e2b0 <line:581:13, line:582:33>
|   |   |   | |-BinaryOperator 0x239ca03a0f0 <line:581:17, col:34> 'int' '&&'
|   |   |   | | |-BinaryOperator 0x239ca03a048 <col:17, col:24> 'int' '<='
|   |   |   | | | |-CharacterLiteral 0x239ca039fe0 <col:17> 'int' 65
|   |   |   | | | `-ImplicitCastExpr 0x239ca03a030 <col:24> 'int' <IntegralCast>
|   |   |   | | |   `-ImplicitCastExpr 0x239ca03a018 <col:24> 'unsigned char' <LValueToRValue>
|   |   |   | | |     `-DeclRefExpr 0x239ca039ff8 <col:24> 'unsigned char' lvalue Var 0x239ca039aa0 'r' 'unsigned char'
|   |   |   | | `-BinaryOperator 0x239ca03a0d0 <col:29, col:34> 'int' '<='
|   |   |   | |   |-ImplicitCastExpr 0x239ca03a0b8 <col:29> 'int' <IntegralCast>
|   |   |   | |   | `-ImplicitCastExpr 0x239ca03a0a0 <col:29> 'unsigned char' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x239ca03a068 <col:29> 'unsigned char' lvalue Var 0x239ca039aa0 'r' 'unsigned char'
|   |   |   | |   `-CharacterLiteral 0x239ca03a088 <col:34> 'int' 90
|   |   |   | `-BinaryOperator 0x239ca03e290 <line:582:17, col:33> 'unsigned char' '='
|   |   |   |   |-DeclRefExpr 0x239ca03a110 <col:17> 'unsigned char' lvalue Var 0x239ca039aa0 'r' 'unsigned char'
|   |   |   |   `-ImplicitCastExpr 0x239ca03e278 <col:21, col:33> 'unsigned char' <IntegralCast>
|   |   |   |     `-BinaryOperator 0x239ca03e258 <col:21, col:33> 'int' '+'
|   |   |   |       |-ParenExpr 0x239ca03e220 <col:21, col:29> 'int'
|   |   |   |       | `-BinaryOperator 0x239ca03e200 <col:22, col:26> 'int' '-'
|   |   |   |       |   |-ImplicitCastExpr 0x239ca03a180 <col:22> 'int' <IntegralCast>
|   |   |   |       |   | `-ImplicitCastExpr 0x239ca03a168 <col:22> 'unsigned char' <LValueToRValue>
|   |   |   |       |   |   `-DeclRefExpr 0x239ca03a130 <col:22> 'unsigned char' lvalue Var 0x239ca039aa0 'r' 'unsigned char'
|   |   |   |       |   `-CharacterLiteral 0x239ca03a150 <col:26> 'int' 65
|   |   |   |       `-CharacterLiteral 0x239ca03e240 <col:33> 'int' 97
|   |   |   `-IfStmt 0x239ca03e3c0 <line:583:13, line:584:24>
|   |   |     |-BinaryOperator 0x239ca03e368 <line:583:17, col:22> 'int' '!='
|   |   |     | |-ImplicitCastExpr 0x239ca03e338 <col:17> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x239ca03e308 <col:17> 'unsigned char' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x239ca03e2c8 <col:17> 'unsigned char' lvalue Var 0x239ca0399a0 'l' 'unsigned char'
|   |   |     | `-ImplicitCastExpr 0x239ca03e350 <col:22> 'int' <IntegralCast>
|   |   |     |   `-ImplicitCastExpr 0x239ca03e320 <col:22> 'unsigned char' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x239ca03e2e8 <col:22> 'unsigned char' lvalue Var 0x239ca039aa0 'r' 'unsigned char'
|   |   |     `-ReturnStmt 0x239ca03e3b0 <line:584:17, col:24>
|   |   |       `-IntegerLiteral 0x239ca03e388 <col:24> 'int' 0
|   |   |-UnaryOperator 0x239ca03e438 <line:586:9, col:11> 'const unsigned char *' prefix '++'
|   |   | `-DeclRefExpr 0x239ca03e418 <col:11> 'const unsigned char *' lvalue ParmVar 0x239ca039218 'pattern' 'const unsigned char *'
|   |   |-UnaryOperator 0x239ca03e470 <line:587:9, col:11> 'const unsigned char *' prefix '++'
|   |   | `-DeclRefExpr 0x239ca03e450 <col:11> 'const unsigned char *' lvalue ParmVar 0x239ca039310 'subject' 'const unsigned char *'
|   |   `-UnaryOperator 0x239ca03e4a8 <line:588:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |     `-DeclRefExpr 0x239ca03e488 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca039290 'pattern_len' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x239ca03e548 <line:590:5, col:12>
|     `-IntegerLiteral 0x239ca03e520 <col:12> 'int' 1
|-FunctionDecl 0x239ca03e8c0 <line:594:1, line:602:1> line:594:12 used equal_case 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x239ca03e5a0 <col:23, col:44> col:44 used pattern 'const unsigned char *'
| |-ParmVarDecl 0x239ca03e618 <col:53, col:60> col:60 used pattern_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca03e698 <line:595:23, col:44> col:44 used subject 'const unsigned char *'
| |-ParmVarDecl 0x239ca03e710 <col:53, col:60> col:60 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca03e790 <line:596:23, col:36> col:36 used flags 'unsigned int'
| `-CompoundStmt 0x239ca03f008 <line:597:1, line:602:1>
|   |-CallExpr 0x239ca03ea88 <line:598:5, col:59> 'void'
|   | |-ImplicitCastExpr 0x239ca03ea70 <col:5> 'void (*)(const unsigned char **, size_t *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x239ca03e9a0 <col:5> 'void (const unsigned char **, size_t *, size_t, unsigned int)' Function 0x239ca0358f8 'skip_prefix' 'void (const unsigned char **, size_t *, size_t, unsigned int)'
|   | |-UnaryOperator 0x239ca03e9e0 <col:17, col:18> 'const unsigned char **' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x239ca03e9c0 <col:18> 'const unsigned char *' lvalue ParmVar 0x239ca03e5a0 'pattern' 'const unsigned char *'
|   | |-UnaryOperator 0x239ca03ea18 <col:27, col:28> 'size_t *' prefix '&' cannot overflow
|   | | `-DeclRefExpr 0x239ca03e9f8 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03e618 'pattern_len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x239ca03eac8 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x239ca03ea30 <col:41> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03e710 'subject_len' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x239ca03eae0 <col:54> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x239ca03ea50 <col:54> 'unsigned int' lvalue ParmVar 0x239ca03e790 'flags' 'unsigned int'
|   |-IfStmt 0x239ca03ebc0 <line:599:5, line:600:16>
|   | |-BinaryOperator 0x239ca03eb68 <line:599:9, col:24> 'int' '!='
|   | | |-ImplicitCastExpr 0x239ca03eb38 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca03eaf8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03e618 'pattern_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca03eb50 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x239ca03eb18 <col:24> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03e710 'subject_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x239ca03ebb0 <line:600:9, col:16>
|   |   `-IntegerLiteral 0x239ca03eb88 <col:16> 'int' 0
|   `-ReturnStmt 0x239ca03eff8 <line:601:5, col:49>
|     `-UnaryOperator 0x239ca03efe0 <col:12, col:49> 'int' prefix '!' cannot overflow
|       `-CallExpr 0x239ca03ef30 <col:13, col:49> 'int'
|         |-ImplicitCastExpr 0x239ca03ef18 <col:13> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x239ca03ee10 <col:13> 'int (const void *, const void *, unsigned long long)' Function 0x239ca03ec20 'memcmp' 'int (const void *, const void *, unsigned long long)'
|         |-ImplicitCastExpr 0x239ca03ef80 <col:20> 'const void *' <BitCast>
|         | `-ImplicitCastExpr 0x239ca03ef68 <col:20> 'const unsigned char *' <LValueToRValue>
|         |   `-DeclRefExpr 0x239ca03ee48 <col:20> 'const unsigned char *' lvalue ParmVar 0x239ca03e5a0 'pattern' 'const unsigned char *'
|         |-ImplicitCastExpr 0x239ca03efb0 <col:29> 'const void *' <BitCast>
|         | `-ImplicitCastExpr 0x239ca03ef98 <col:29> 'const unsigned char *' <LValueToRValue>
|         |   `-DeclRefExpr 0x239ca03ee68 <col:29> 'const unsigned char *' lvalue ParmVar 0x239ca03e698 'subject' 'const unsigned char *'
|         `-ImplicitCastExpr 0x239ca03efc8 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x239ca03ee88 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03e618 'pattern_len' 'size_t':'unsigned long long'
|-FunctionDecl 0x239ca03ec20 <col:13> col:13 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x239ca03ecc0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x239ca03ed28 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x239ca03ed90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x239ca03c390 <line:608:1, line:631:1> line:608:12 used equal_email 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x239ca03f048 <col:24, col:45> col:45 used a 'const unsigned char *'
| |-ParmVarDecl 0x239ca03f0c0 <col:48, col:55> col:55 used a_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca03f140 <line:609:24, col:45> col:45 used b 'const unsigned char *'
| |-ParmVarDecl 0x239ca03c1e0 <col:48, col:55> col:55 used b_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca03c260 <line:610:24, col:37> col:37 unused_flags 'unsigned int'
| `-CompoundStmt 0x239ca03d028 <line:611:1, line:631:1>
|   |-DeclStmt 0x239ca03c520 <line:612:5, col:21>
|   | `-VarDecl 0x239ca03c480 <col:5, col:16> col:12 used i 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x239ca03c508 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca03c4e8 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03f0c0 'a_len' 'size_t':'unsigned long long'
|   |-IfStmt 0x239ca03c600 <line:613:5, line:614:16>
|   | |-BinaryOperator 0x239ca03c5a8 <line:613:9, col:18> 'int' '!='
|   | | |-ImplicitCastExpr 0x239ca03c578 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca03c538 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03f0c0 'a_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca03c590 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x239ca03c558 <col:18> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03c1e0 'b_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x239ca03c5f0 <line:614:9, col:16>
|   |   `-IntegerLiteral 0x239ca03c5c8 <col:16> 'int' 0
|   |-WhileStmt 0x239ca03cd38 <line:620:5, line:627:5>
|   | |-BinaryOperator 0x239ca03c6a8 <line:620:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x239ca03c678 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca03c618 <col:12> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca03c690 <col:16> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x239ca03c650 <col:16> 'int' 0
|   | `-CompoundStmt 0x239ca03cd18 <col:19, line:627:5>
|   |   |-UnaryOperator 0x239ca03c6e8 <line:621:9, col:11> 'size_t':'unsigned long long' prefix '--'
|   |   | `-DeclRefExpr 0x239ca03c6c8 <col:11> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|   |   `-IfStmt 0x239ca03cd00 <line:622:9, line:626:9>
|   |     |-BinaryOperator 0x239ca03c8f0 <line:622:13, col:36> 'int' '||'
|   |     | |-BinaryOperator 0x239ca03c7d8 <col:13, col:21> 'int' '=='
|   |     | | |-ImplicitCastExpr 0x239ca03c7c0 <col:13, col:16> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x239ca03c7a8 <col:13, col:16> 'unsigned char' <LValueToRValue>
|   |     | | |   `-ArraySubscriptExpr 0x239ca03c770 <col:13, col:16> 'const unsigned char' lvalue
|   |     | | |     |-ImplicitCastExpr 0x239ca03c740 <col:13> 'const unsigned char *' <LValueToRValue>
|   |     | | |     | `-DeclRefExpr 0x239ca03c700 <col:13> 'const unsigned char *' lvalue ParmVar 0x239ca03f048 'a' 'const unsigned char *'
|   |     | | |     `-ImplicitCastExpr 0x239ca03c758 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x239ca03c720 <col:15> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|   |     | | `-CharacterLiteral 0x239ca03c790 <col:21> 'int' 64
|   |     | `-BinaryOperator 0x239ca03c8d0 <col:28, col:36> 'int' '=='
|   |     |   |-ImplicitCastExpr 0x239ca03c8b8 <col:28, col:31> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x239ca03c8a0 <col:28, col:31> 'unsigned char' <LValueToRValue>
|   |     |   |   `-ArraySubscriptExpr 0x239ca03c868 <col:28, col:31> 'const unsigned char' lvalue
|   |     |   |     |-ImplicitCastExpr 0x239ca03c838 <col:28> 'const unsigned char *' <LValueToRValue>
|   |     |   |     | `-DeclRefExpr 0x239ca03c7f8 <col:28> 'const unsigned char *' lvalue ParmVar 0x239ca03f140 'b' 'const unsigned char *'
|   |     |   |     `-ImplicitCastExpr 0x239ca03c850 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |       `-DeclRefExpr 0x239ca03c818 <col:30> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|   |     |   `-CharacterLiteral 0x239ca03c888 <col:36> 'int' 64
|   |     `-CompoundStmt 0x239ca03cce0 <col:41, line:626:9>
|   |       |-IfStmt 0x239ca03ccc0 <line:623:13, line:624:24>
|   |       | |-UnaryOperator 0x239ca03cc70 <line:623:17, col:68> 'int' prefix '!' cannot overflow
|   |       | | `-CallExpr 0x239ca03cc10 <col:18, col:68> 'int'
|   |       | |   |-ImplicitCastExpr 0x239ca03cbf8 <col:18> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   |       | |   | `-DeclRefExpr 0x239ca03c910 <col:18> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x239ca0395e0 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   |       | |   |-BinaryOperator 0x239ca03c9a0 <col:31, col:35> 'const unsigned char *' '+'
|   |       | |   | |-ImplicitCastExpr 0x239ca03c970 <col:31> 'const unsigned char *' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x239ca03c930 <col:31> 'const unsigned char *' lvalue ParmVar 0x239ca03f048 'a' 'const unsigned char *'
|   |       | |   | `-ImplicitCastExpr 0x239ca03c988 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x239ca03c950 <col:35> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|   |       | |   |-BinaryOperator 0x239ca03ca30 <col:38, col:46> 'unsigned long long' '-'
|   |       | |   | |-ImplicitCastExpr 0x239ca03ca00 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x239ca03c9c0 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03f0c0 'a_len' 'size_t':'unsigned long long'
|   |       | |   | `-ImplicitCastExpr 0x239ca03ca18 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x239ca03c9e0 <col:46> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|   |       | |   |-BinaryOperator 0x239ca03cac0 <col:49, col:53> 'const unsigned char *' '+'
|   |       | |   | |-ImplicitCastExpr 0x239ca03ca90 <col:49> 'const unsigned char *' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x239ca03ca50 <col:49> 'const unsigned char *' lvalue ParmVar 0x239ca03f140 'b' 'const unsigned char *'
|   |       | |   | `-ImplicitCastExpr 0x239ca03caa8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x239ca03ca70 <col:53> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|   |       | |   |-BinaryOperator 0x239ca03cb50 <col:56, col:64> 'unsigned long long' '-'
|   |       | |   | |-ImplicitCastExpr 0x239ca03cb20 <col:56> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x239ca03cae0 <col:56> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03f0c0 'a_len' 'size_t':'unsigned long long'
|   |       | |   | `-ImplicitCastExpr 0x239ca03cb38 <col:64> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x239ca03cb00 <col:64> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|   |       | |   `-ImplicitCastExpr 0x239ca03cc58 <col:67> 'unsigned int' <IntegralCast>
|   |       | |     `-IntegerLiteral 0x239ca03cb70 <col:67> 'int' 0
|   |       | `-ReturnStmt 0x239ca03ccb0 <line:624:17, col:24>
|   |       |   `-IntegerLiteral 0x239ca03cc88 <col:24> 'int' 0
|   |       `-BreakStmt 0x239ca03ccd8 <line:625:13>
|   |-IfStmt 0x239ca03ce60 <line:628:5, line:629:13>
|   | |-BinaryOperator 0x239ca03cdc8 <line:628:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca03cd98 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca03cd50 <col:9> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca03cdb0 <col:14> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x239ca03cd70 <col:14> 'int' 0
|   | `-BinaryOperator 0x239ca03ce40 <line:629:9, col:13> 'size_t':'unsigned long long' '='
|   |   |-DeclRefExpr 0x239ca03cde8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x239ca03ce28 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca03ce08 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03f0c0 'a_len' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x239ca03d018 <line:630:5, col:36>
|     `-CallExpr 0x239ca03cf58 <col:12, col:36> 'int'
|       |-ImplicitCastExpr 0x239ca03cf40 <col:12> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x239ca03ce78 <col:12> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x239ca03e8c0 'equal_case' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|       |-ImplicitCastExpr 0x239ca03cfa0 <col:23> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x239ca03ce98 <col:23> 'const unsigned char *' lvalue ParmVar 0x239ca03f048 'a' 'const unsigned char *'
|       |-ImplicitCastExpr 0x239ca03cfb8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x239ca03ceb8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x239ca03cfd0 <col:29> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x239ca03ced8 <col:29> 'const unsigned char *' lvalue ParmVar 0x239ca03f140 'b' 'const unsigned char *'
|       |-ImplicitCastExpr 0x239ca03cfe8 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x239ca03cef8 <col:32> 'size_t':'unsigned long long' lvalue Var 0x239ca03c480 'i' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x239ca03d000 <col:35> 'unsigned int' <IntegralCast>
|         `-IntegerLiteral 0x239ca03cf18 <col:35> 'int' 0
|-FunctionDecl 0x239ca03b590 <line:637:1, line:686:1> line:637:12 used wildcard_match 'int (const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x239ca03d078 <col:27, col:48> col:48 used prefix 'const unsigned char *'
| |-ParmVarDecl 0x239ca03d0f0 <col:56, col:63> col:63 used prefix_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca03d170 <line:638:27, col:48> col:48 used suffix 'const unsigned char *'
| |-ParmVarDecl 0x239ca03b1e0 <col:56, col:63> col:63 used suffix_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca03b260 <line:639:27, col:48> col:48 used subject 'const unsigned char *'
| |-ParmVarDecl 0x239ca03b2d8 <col:57, col:64> col:64 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca03b358 <line:640:27, col:40> col:40 used flags 'unsigned int'
| `-CompoundStmt 0x239ca03f720 <line:641:1, line:686:1>
|   |-DeclStmt 0x239ca03b700 <line:642:5, col:40>
|   | `-VarDecl 0x239ca03b698 <col:5, col:26> col:26 used wildcard_start 'const unsigned char *'
|   |-DeclStmt 0x239ca03b798 <line:643:5, col:38>
|   | `-VarDecl 0x239ca03b730 <col:5, col:26> col:26 used wildcard_end 'const unsigned char *'
|   |-DeclStmt 0x239ca03b830 <line:644:5, col:27>
|   | `-VarDecl 0x239ca03b7c8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x239ca03b8f0 <line:645:5, col:24>
|   | `-VarDecl 0x239ca03b860 <col:5, col:23> col:9 used allow_multi 'int' cinit
|   |   `-IntegerLiteral 0x239ca03b8c8 <col:23> 'int' 0
|   |-DeclStmt 0x239ca03b9b0 <line:646:5, col:23>
|   | `-VarDecl 0x239ca03b920 <col:5, col:22> col:9 used allow_idna 'int' cinit
|   |   `-IntegerLiteral 0x239ca03b988 <col:22> 'int' 0
|   |-IfStmt 0x239ca03bae8 <line:648:5, line:649:16>
|   | |-BinaryOperator 0x239ca03ba90 <line:648:9, col:36> 'int' '<'
|   | | |-ImplicitCastExpr 0x239ca03ba78 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca03b9c8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03b2d8 'subject_len' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x239ca03ba58 <col:23, col:36> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x239ca03ba28 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca03b9e8 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03d0f0 'prefix_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x239ca03ba40 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x239ca03ba08 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03b1e0 'suffix_len' 'size_t':'unsigned long long'
|   | `-ReturnStmt 0x239ca03bad8 <line:649:9, col:16>
|   |   `-IntegerLiteral 0x239ca03bab0 <col:16> 'int' 0
|   |-IfStmt 0x239ca03bce8 <line:650:5, line:651:16>
|   | |-UnaryOperator 0x239ca03bc98 <line:650:9, col:69> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x239ca03bbd8 <col:10, col:69> 'int'
|   | |   |-ImplicitCastExpr 0x239ca03bbc0 <col:10> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x239ca03bb00 <col:10> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x239ca0395e0 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   | |   |-ImplicitCastExpr 0x239ca03bc20 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca03bb20 <col:23> 'const unsigned char *' lvalue ParmVar 0x239ca03d078 'prefix' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x239ca03bc38 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca03bb40 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03d0f0 'prefix_len' 'size_t':'unsigned long long'
|   | |   |-ImplicitCastExpr 0x239ca03bc50 <col:43> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca03bb60 <col:43> 'const unsigned char *' lvalue ParmVar 0x239ca03b260 'subject' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x239ca03bc68 <col:52> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca03bb80 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03d0f0 'prefix_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x239ca03bc80 <col:64> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x239ca03bba0 <col:64> 'unsigned int' lvalue ParmVar 0x239ca03b358 'flags' 'unsigned int'
|   | `-ReturnStmt 0x239ca03bcd8 <line:651:9, col:16>
|   |   `-IntegerLiteral 0x239ca03bcb0 <col:16> 'int' 0
|   |-BinaryOperator 0x239ca03bdc8 <line:652:5, col:32> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x239ca03bd00 <col:5> 'const unsigned char *' lvalue Var 0x239ca03b698 'wildcard_start' 'const unsigned char *'
|   | `-BinaryOperator 0x239ca03bda8 <col:22, col:32> 'const unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x239ca03bd78 <col:22> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239ca03bd38 <col:22> 'const unsigned char *' lvalue ParmVar 0x239ca03b260 'subject' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x239ca03bd90 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca03bd58 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03d0f0 'prefix_len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x239ca03bf28 <line:653:5, col:55> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x239ca03bde8 <col:5> 'const unsigned char *' lvalue Var 0x239ca03b730 'wildcard_end' 'const unsigned char *'
|   | `-BinaryOperator 0x239ca03bf08 <col:20, col:55> 'const unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x239ca03bef0 <col:20> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239ca03be20 <col:20> 'const unsigned char *' lvalue ParmVar 0x239ca03b260 'subject' 'const unsigned char *'
|   |   `-ParenExpr 0x239ca03bed0 <col:30, col:55> 'unsigned long long'
|   |     `-BinaryOperator 0x239ca03beb0 <col:31, col:45> 'unsigned long long' '-'
|   |       |-ImplicitCastExpr 0x239ca03be80 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x239ca03be40 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03b2d8 'subject_len' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x239ca03be98 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x239ca03be60 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03b1e0 'suffix_len' 'size_t':'unsigned long long'
|   |-IfStmt 0x239ca03c130 <line:654:5, line:655:16>
|   | |-UnaryOperator 0x239ca03c0e0 <line:654:9, col:74> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x239ca03c020 <col:10, col:74> 'int'
|   | |   |-ImplicitCastExpr 0x239ca03c008 <col:10> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x239ca03bf48 <col:10> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x239ca0395e0 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   | |   |-ImplicitCastExpr 0x239ca03c068 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca03bf68 <col:23> 'const unsigned char *' lvalue Var 0x239ca03b730 'wildcard_end' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x239ca03c080 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca03bf88 <col:37> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03b1e0 'suffix_len' 'size_t':'unsigned long long'
|   | |   |-ImplicitCastExpr 0x239ca03c098 <col:49> 'const unsigned char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca03bfa8 <col:49> 'const unsigned char *' lvalue ParmVar 0x239ca03d170 'suffix' 'const unsigned char *'
|   | |   |-ImplicitCastExpr 0x239ca03c0b0 <col:57> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca03bfc8 <col:57> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03b1e0 'suffix_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x239ca03c0c8 <col:69> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x239ca03bfe8 <col:69> 'unsigned int' lvalue ParmVar 0x239ca03b358 'flags' 'unsigned int'
|   | `-ReturnStmt 0x239ca03c120 <line:655:9, col:16>
|   |   `-IntegerLiteral 0x239ca03c0f8 <col:16> 'int' 0
|   |-IfStmt 0x239ca0374e0 <line:660:5, line:666:5>
|   | |-BinaryOperator 0x239ca037268 <line:660:9, col:39> 'int' '&&'
|   | | |-BinaryOperator 0x239ca037190 <col:9, col:23> 'int' '=='
|   | | | |-ImplicitCastExpr 0x239ca03c190 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x239ca03c148 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03d0f0 'prefix_len' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x239ca03c1a8 <col:23> 'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x239ca03c168 <col:23> 'int' 0
|   | | `-BinaryOperator 0x239ca037248 <col:28, col:39> 'int' '=='
|   | |   |-ImplicitCastExpr 0x239ca037230 <col:28, col:29> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x239ca037218 <col:28, col:29> 'unsigned char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x239ca0371e8 <col:28, col:29> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x239ca0371d0 <col:29> 'const unsigned char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x239ca0371b0 <col:29> 'const unsigned char *' lvalue ParmVar 0x239ca03d170 'suffix' 'const unsigned char *'
|   | |   `-CharacterLiteral 0x239ca037200 <col:39> 'int' 46
|   | `-CompoundStmt 0x239ca0374b8 <col:44, line:666:5>
|   |   |-IfStmt 0x239ca037350 <line:661:9, line:662:20>
|   |   | |-BinaryOperator 0x239ca0372f8 <line:661:13, col:31> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x239ca0372c8 <col:13> 'const unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x239ca037288 <col:13> 'const unsigned char *' lvalue Var 0x239ca03b698 'wildcard_start' 'const unsigned char *'
|   |   | | `-ImplicitCastExpr 0x239ca0372e0 <col:31> 'const unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x239ca0372a8 <col:31> 'const unsigned char *' lvalue Var 0x239ca03b730 'wildcard_end' 'const unsigned char *'
|   |   | `-ReturnStmt 0x239ca037340 <line:662:13, col:20>
|   |   |   `-IntegerLiteral 0x239ca037318 <col:20> 'int' 0
|   |   |-BinaryOperator 0x239ca0373c8 <line:663:9, col:22> 'int' '='
|   |   | |-DeclRefExpr 0x239ca037368 <col:9> 'int' lvalue Var 0x239ca03b920 'allow_idna' 'int'
|   |   | `-IntegerLiteral 0x239ca0373a0 <col:22> 'int' 1
|   |   `-IfStmt 0x239ca0374a0 <line:664:9, line:665:27>
|   |     |-OpaqueValueExpr 0x239ca037488 <<invalid sloc>> '_Bool'
|   |     `-BinaryOperator 0x239ca037468 <col:13, col:27> 'int' '='
|   |       |-DeclRefExpr 0x239ca037408 <col:13> 'int' lvalue Var 0x239ca03b860 'allow_multi' 'int'
|   |       `-IntegerLiteral 0x239ca037440 <col:27> 'int' 1
|   |-IfStmt 0x239ca037ab8 <line:668:5, line:670:16>
|   | |-BinaryOperator 0x239ca037a60 <line:668:9, line:669:72> 'int' '&&'
|   | | |-BinaryOperator 0x239ca0375e0 <line:668:9, line:669:24> 'int' '&&'
|   | | | |-UnaryOperator 0x239ca037530 <line:668:9, col:10> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x239ca037518 <col:10> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x239ca0374f8 <col:10> 'int' lvalue Var 0x239ca03b920 'allow_idna' 'int'
|   | | | `-BinaryOperator 0x239ca0375c0 <line:669:9, col:24> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x239ca037590 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x239ca037548 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03b2d8 'subject_len' 'size_t':'unsigned long long'
|   | | |   `-ImplicitCastExpr 0x239ca0375a8 <col:24> 'unsigned long long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x239ca037568 <col:24> 'int' 4
|   | | `-BinaryOperator 0x239ca037a40 <col:29, col:72> 'int' '=='
|   | |   |-CallExpr 0x239ca037980 <col:29, col:67> 'int'
|   | |   | |-ImplicitCastExpr 0x239ca037968 <col:29> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   | |   | | `-DeclRefExpr 0x239ca037830 <col:29> 'int (const char *, const char *, unsigned long long)' Function 0x239ca037640 'strncasecmp' 'int (const char *, const char *, unsigned long long)'
|   | |   | |-ImplicitCastExpr 0x239ca0379b8 <col:41, col:49> 'const char *' <NoOp>
|   | |   | | `-CStyleCastExpr 0x239ca0378b8 <col:41, col:49> 'char *' <BitCast>
|   | |   | |   `-ImplicitCastExpr 0x239ca0378a0 <col:49> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   | |     `-DeclRefExpr 0x239ca037868 <col:49> 'const unsigned char *' lvalue ParmVar 0x239ca03b260 'subject' 'const unsigned char *'
|   | |   | |-ImplicitCastExpr 0x239ca0379e8 <col:58> 'const char *' <NoOp>
|   | |   | | `-ImplicitCastExpr 0x239ca0379d0 <col:58> 'char *' <ArrayToPointerDecay>
|   | |   | |   `-StringLiteral 0x239ca0378e0 <col:58> 'char [5]' lvalue "xn--"
|   | |   | `-ImplicitCastExpr 0x239ca037a00 <col:66> 'unsigned long long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x239ca037900 <col:66> 'int' 4
|   | |   `-IntegerLiteral 0x239ca037a18 <col:72> 'int' 0
|   | `-ReturnStmt 0x239ca037aa8 <line:670:9, col:16>
|   |   `-IntegerLiteral 0x239ca037a80 <col:16> 'int' 0
|   |-IfStmt 0x239ca037cb8 <line:672:5, line:673:16>
|   | |-BinaryOperator 0x239ca037c60 <line:672:9, col:66> 'int' '&&'
|   | | |-BinaryOperator 0x239ca037b88 <col:9, col:42> 'int' '=='
|   | | | |-ImplicitCastExpr 0x239ca037b70 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x239ca037ad0 <col:9> 'const unsigned char *' lvalue Var 0x239ca03b730 'wildcard_end' 'const unsigned char *'
|   | | | `-BinaryOperator 0x239ca037b50 <col:25, col:42> 'const unsigned char *' '+'
|   | | |   |-ImplicitCastExpr 0x239ca037b38 <col:25> 'const unsigned char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x239ca037af0 <col:25> 'const unsigned char *' lvalue Var 0x239ca03b698 'wildcard_start' 'const unsigned char *'
|   | | |   `-IntegerLiteral 0x239ca037b10 <col:42> 'int' 1
|   | | `-BinaryOperator 0x239ca037c40 <col:47, col:66> 'int' '=='
|   | |   |-ImplicitCastExpr 0x239ca037c28 <col:47, col:48> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x239ca037c10 <col:47, col:48> 'unsigned char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x239ca037be0 <col:47, col:48> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x239ca037bc8 <col:48> 'const unsigned char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x239ca037ba8 <col:48> 'const unsigned char *' lvalue Var 0x239ca03b698 'wildcard_start' 'const unsigned char *'
|   | |   `-CharacterLiteral 0x239ca037bf8 <col:66> 'int' 42
|   | `-ReturnStmt 0x239ca037ca8 <line:673:9, col:16>
|   |   `-IntegerLiteral 0x239ca037c80 <col:16> 'int' 1
|   |-ForStmt 0x239ca03f6b0 <line:679:5, line:684:20>
|   | |-BinaryOperator 0x239ca037d40 <line:679:10, col:14> 'const unsigned char *' '='
|   | | |-DeclRefExpr 0x239ca037cd0 <col:10> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x239ca037d28 <col:14> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x239ca037d08 <col:14> 'const unsigned char *' lvalue Var 0x239ca03b698 'wildcard_start' 'const unsigned char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x239ca037dd0 <col:30, col:35> 'int' '!='
|   | | |-ImplicitCastExpr 0x239ca037da0 <col:30> 'const unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca037d60 <col:30> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x239ca037db8 <col:35> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x239ca037d80 <col:35> 'const unsigned char *' lvalue Var 0x239ca03b730 'wildcard_end' 'const unsigned char *'
|   | |-UnaryOperator 0x239ca037e10 <col:49, col:51> 'const unsigned char *' prefix '++'
|   | | `-DeclRefExpr 0x239ca037df0 <col:51> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   | `-IfStmt 0x239ca03f698 <line:680:9, line:684:20>
|   |   |-UnaryOperator 0x239ca03f648 <line:680:13, line:683:54> 'int' prefix '!' cannot overflow
|   |   | `-ParenExpr 0x239ca03f628 <line:680:14, line:683:54> 'int'
|   |   |   `-BinaryOperator 0x239ca03f608 <line:680:15, line:683:53> 'int' '||'
|   |   |     |-BinaryOperator 0x239ca03f4b8 <line:680:15, line:683:21> 'int' '||'
|   |   |     | |-BinaryOperator 0x239ca03f3e0 <line:680:15, line:682:38> 'int' '||'
|   |   |     | | |-BinaryOperator 0x239ca03f210 <line:680:15, line:681:38> 'int' '||'
|   |   |     | | | |-ParenExpr 0x239ca037fb8 <line:680:15, col:38> 'int'
|   |   |     | | | | `-BinaryOperator 0x239ca037f98 <col:16, col:35> 'int' '&&'
|   |   |     | | | |   |-BinaryOperator 0x239ca037ec0 <col:16, col:24> 'int' '<='
|   |   |     | | | |   | |-CharacterLiteral 0x239ca037e28 <col:16> 'int' 48
|   |   |     | | | |   | `-ImplicitCastExpr 0x239ca037ea8 <col:23, col:24> 'int' <IntegralCast>
|   |   |     | | | |   |   `-ImplicitCastExpr 0x239ca037e90 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | | | |   |     `-UnaryOperator 0x239ca037e78 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | | |   |       `-ImplicitCastExpr 0x239ca037e60 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |     | | | |   |         `-DeclRefExpr 0x239ca037e40 <col:24> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   |   |     | | | |   `-BinaryOperator 0x239ca037f78 <col:29, col:35> 'int' '<='
|   |   |     | | | |     |-ImplicitCastExpr 0x239ca037f60 <col:29, col:30> 'int' <IntegralCast>
|   |   |     | | | |     | `-ImplicitCastExpr 0x239ca037f48 <col:29, col:30> 'unsigned char' <LValueToRValue>
|   |   |     | | | |     |   `-UnaryOperator 0x239ca037f18 <col:29, col:30> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | | |     |     `-ImplicitCastExpr 0x239ca037f00 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |     | | | |     |       `-DeclRefExpr 0x239ca037ee0 <col:30> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   |   |     | | | |     `-CharacterLiteral 0x239ca037f30 <col:35> 'int' 57
|   |   |     | | | `-ParenExpr 0x239ca038168 <line:681:15, col:38> 'int'
|   |   |     | | |   `-BinaryOperator 0x239ca038148 <col:16, col:35> 'int' '&&'
|   |   |     | | |     |-BinaryOperator 0x239ca038070 <col:16, col:24> 'int' '<='
|   |   |     | | |     | |-CharacterLiteral 0x239ca037fd8 <col:16> 'int' 65
|   |   |     | | |     | `-ImplicitCastExpr 0x239ca038058 <col:23, col:24> 'int' <IntegralCast>
|   |   |     | | |     |   `-ImplicitCastExpr 0x239ca038040 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | | |     |     `-UnaryOperator 0x239ca038028 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | |     |       `-ImplicitCastExpr 0x239ca038010 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |     | | |     |         `-DeclRefExpr 0x239ca037ff0 <col:24> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   |   |     | | |     `-BinaryOperator 0x239ca038128 <col:29, col:35> 'int' '<='
|   |   |     | | |       |-ImplicitCastExpr 0x239ca038110 <col:29, col:30> 'int' <IntegralCast>
|   |   |     | | |       | `-ImplicitCastExpr 0x239ca0380f8 <col:29, col:30> 'unsigned char' <LValueToRValue>
|   |   |     | | |       |   `-UnaryOperator 0x239ca0380c8 <col:29, col:30> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | | |       |     `-ImplicitCastExpr 0x239ca0380b0 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |     | | |       |       `-DeclRefExpr 0x239ca038090 <col:30> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   |   |     | | |       `-CharacterLiteral 0x239ca0380e0 <col:35> 'int' 90
|   |   |     | | `-ParenExpr 0x239ca03f3c0 <line:682:15, col:38> 'int'
|   |   |     | |   `-BinaryOperator 0x239ca03f3a0 <col:16, col:35> 'int' '&&'
|   |   |     | |     |-BinaryOperator 0x239ca03f2c8 <col:16, col:24> 'int' '<='
|   |   |     | |     | |-CharacterLiteral 0x239ca03f230 <col:16> 'int' 97
|   |   |     | |     | `-ImplicitCastExpr 0x239ca03f2b0 <col:23, col:24> 'int' <IntegralCast>
|   |   |     | |     |   `-ImplicitCastExpr 0x239ca03f298 <col:23, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | |     |     `-UnaryOperator 0x239ca03f280 <col:23, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |     |       `-ImplicitCastExpr 0x239ca03f268 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |     | |     |         `-DeclRefExpr 0x239ca03f248 <col:24> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   |   |     | |     `-BinaryOperator 0x239ca03f380 <col:29, col:35> 'int' '<='
|   |   |     | |       |-ImplicitCastExpr 0x239ca03f368 <col:29, col:30> 'int' <IntegralCast>
|   |   |     | |       | `-ImplicitCastExpr 0x239ca03f350 <col:29, col:30> 'unsigned char' <LValueToRValue>
|   |   |     | |       |   `-UnaryOperator 0x239ca03f320 <col:29, col:30> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |       |     `-ImplicitCastExpr 0x239ca03f308 <col:30> 'const unsigned char *' <LValueToRValue>
|   |   |     | |       |       `-DeclRefExpr 0x239ca03f2e8 <col:30> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   |   |     | |       `-CharacterLiteral 0x239ca03f338 <col:35> 'int' 122
|   |   |     | `-BinaryOperator 0x239ca03f498 <line:683:15, col:21> 'int' '=='
|   |   |     |   |-ImplicitCastExpr 0x239ca03f480 <col:15, col:16> 'int' <IntegralCast>
|   |   |     |   | `-ImplicitCastExpr 0x239ca03f468 <col:15, col:16> 'unsigned char' <LValueToRValue>
|   |   |     |   |   `-UnaryOperator 0x239ca03f438 <col:15, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |   |     `-ImplicitCastExpr 0x239ca03f420 <col:16> 'const unsigned char *' <LValueToRValue>
|   |   |     |   |       `-DeclRefExpr 0x239ca03f400 <col:16> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   |   |     |   `-CharacterLiteral 0x239ca03f450 <col:21> 'int' 45
|   |   |     `-ParenExpr 0x239ca03f5e8 <col:28, col:53> 'int'
|   |   |       `-BinaryOperator 0x239ca03f5c8 <col:29, col:50> 'int' '&&'
|   |   |         |-ImplicitCastExpr 0x239ca03f5b0 <col:29> 'int' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x239ca03f4d8 <col:29> 'int' lvalue Var 0x239ca03b860 'allow_multi' 'int'
|   |   |         `-BinaryOperator 0x239ca03f590 <col:44, col:50> 'int' '=='
|   |   |           |-ImplicitCastExpr 0x239ca03f578 <col:44, col:45> 'int' <IntegralCast>
|   |   |           | `-ImplicitCastExpr 0x239ca03f560 <col:44, col:45> 'unsigned char' <LValueToRValue>
|   |   |           |   `-UnaryOperator 0x239ca03f530 <col:44, col:45> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |           |     `-ImplicitCastExpr 0x239ca03f518 <col:45> 'const unsigned char *' <LValueToRValue>
|   |   |           |       `-DeclRefExpr 0x239ca03f4f8 <col:45> 'const unsigned char *' lvalue Var 0x239ca03b7c8 'p' 'const unsigned char *'
|   |   |           `-CharacterLiteral 0x239ca03f548 <col:50> 'int' 46
|   |   `-ReturnStmt 0x239ca03f688 <line:684:13, col:20>
|   |     `-IntegerLiteral 0x239ca03f660 <col:20> 'int' 0
|   `-ReturnStmt 0x239ca03f710 <line:685:5, col:12>
|     `-IntegerLiteral 0x239ca03f6e8 <col:12> 'int' 1
|-FunctionDecl 0x239ca037640 <line:669:29> col:29 implicit used strncasecmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x239ca0376e0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x239ca037748 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x239ca0377b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x239ca03fa30 <line:693:1, line:752:1> line:693:29 used valid_star 'const unsigned char *(const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x239ca03f7c0 <col:40, col:61> col:61 used p 'const unsigned char *'
| |-ParmVarDecl 0x239ca03f838 <col:64, col:71> col:71 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca03f8b8 <line:694:40, col:53> col:53 used flags 'unsigned int'
| `-CompoundStmt 0x239ca03abe0 <line:695:1, line:752:1>
|   |-DeclStmt 0x239ca03fbc0 <line:696:5, col:34>
|   | `-VarDecl 0x239ca03fb18 <col:5, col:33> col:26 used star 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x239ca03fba8 <col:33> 'const unsigned char *' <NullToPointer>
|   |     `-IntegerLiteral 0x239ca03fb80 <col:33> 'int' 0
|   |-DeclStmt 0x239ca03fc50 <line:697:5, col:13>
|   | `-VarDecl 0x239ca03fbe8 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x239ca03fd78 <line:698:5, col:28>
|   | `-VarDecl 0x239ca03fc80 <col:5, line:688:32> line:698:9 used state 'int' cinit
|   |   `-ParenExpr 0x239ca03fd58 <line:688:25, col:32> 'int'
|   |     `-BinaryOperator 0x239ca03fd38 <col:26, col:31> 'int' '<<'
|   |       |-IntegerLiteral 0x239ca03fce8 <col:26> 'int' 1
|   |       `-IntegerLiteral 0x239ca03fd10 <col:31> 'int' 0
|   |-DeclStmt 0x239ca03fe38 <line:699:5, col:17>
|   | `-VarDecl 0x239ca03fda8 <col:5, col:16> col:9 used dots 'int' cinit
|   |   `-IntegerLiteral 0x239ca03fe10 <col:16> 'int' 0
|   |-ForStmt 0x239ca03a7d8 <line:700:5, line:743:5>
|   | |-BinaryOperator 0x239ca03fec8 <line:700:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x239ca03fe50 <col:10> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca03feb0 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x239ca03fe88 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x239ca03ff58 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x239ca03ff28 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca03fee8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca03ff40 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x239ca03ff08 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03f838 'len' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x239ca03ff98 <col:26, col:28> 'size_t':'unsigned long long' prefix '++'
|   | | `-DeclRefExpr 0x239ca03ff78 <col:28> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x239ca03a7c0 <col:31, line:743:5>
|   |   `-IfStmt 0x239ca03a798 <line:705:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |     |-BinaryOperator 0x239ca040088 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:705:13, col:21> 'int' '=='
|   |     | |-ImplicitCastExpr 0x239ca040070 <col:13, col:16> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x239ca040058 <col:13, col:16> 'unsigned char' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x239ca040020 <col:13, col:16> 'const unsigned char' lvalue
|   |     | |     |-ImplicitCastExpr 0x239ca03fff0 <col:13> 'const unsigned char *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x239ca03ffb0 <col:13> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |     | |     `-ImplicitCastExpr 0x239ca040008 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x239ca03ffd0 <col:15> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |     | `-CharacterLiteral 0x239ca040040 <col:21> 'int' 42
|   |     |-CompoundStmt 0x239ca040ec8 <col:26, line:724:9>
|   |     | |-DeclStmt 0x239ca040260 <line:706:13, col:48>
|   |     | | `-VarDecl 0x239ca0400c0 <col:13, col:47> col:17 used atstart 'int' cinit
|   |     | |   `-ParenExpr 0x239ca040240 <col:27, col:47> 'int'
|   |     | |     `-BinaryOperator 0x239ca040220 <col:28, line:688:32> 'int' '&'
|   |     | |       |-ImplicitCastExpr 0x239ca0401f0 <line:706:28> 'int' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x239ca040128 <col:28> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   |     | |       `-ParenExpr 0x239ca0401d0 <line:688:25, col:32> 'int'
|   |     | |         `-BinaryOperator 0x239ca0401b0 <col:26, col:31> 'int' '<<'
|   |     | |           |-IntegerLiteral 0x239ca040160 <col:26> 'int' 1
|   |     | |           `-IntegerLiteral 0x239ca040188 <col:31> 'int' 0
|   |     | |-DeclStmt 0x239ca040580 <line:707:13, col:58>
|   |     | | `-VarDecl 0x239ca040290 <col:13, col:57> col:17 used atend 'int' cinit
|   |     | |   `-ParenExpr 0x239ca040560 <col:25, col:57> 'int'
|   |     | |     `-BinaryOperator 0x239ca040540 <col:26, col:54> 'int' '||'
|   |     | |       |-BinaryOperator 0x239ca0403c8 <col:26, col:37> 'int' '=='
|   |     | |       | |-ImplicitCastExpr 0x239ca0403b0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       | | `-DeclRefExpr 0x239ca0402f8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |     | |       | `-BinaryOperator 0x239ca040390 <col:31, col:37> 'unsigned long long' '-'
|   |     | |       |   |-ImplicitCastExpr 0x239ca040360 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       |   | `-DeclRefExpr 0x239ca040318 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03f838 'len' 'size_t':'unsigned long long'
|   |     | |       |   `-ImplicitCastExpr 0x239ca040378 <col:37> 'unsigned long long' <IntegralCast>
|   |     | |       |     `-IntegerLiteral 0x239ca040338 <col:37> 'int' 1
|   |     | |       `-BinaryOperator 0x239ca040520 <col:42, col:54> 'int' '=='
|   |     | |         |-ImplicitCastExpr 0x239ca040508 <col:42, col:49> 'int' <IntegralCast>
|   |     | |         | `-ImplicitCastExpr 0x239ca0404f0 <col:42, col:49> 'unsigned char' <LValueToRValue>
|   |     | |         |   `-ArraySubscriptExpr 0x239ca0404b8 <col:42, col:49> 'const unsigned char' lvalue
|   |     | |         |     |-ImplicitCastExpr 0x239ca0404a0 <col:42> 'const unsigned char *' <LValueToRValue>
|   |     | |         |     | `-DeclRefExpr 0x239ca0403e8 <col:42> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |     | |         |     `-BinaryOperator 0x239ca040480 <col:44, col:48> 'unsigned long long' '+'
|   |     | |         |       |-ImplicitCastExpr 0x239ca040450 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |         |       | `-DeclRefExpr 0x239ca040408 <col:44> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |     | |         |       `-ImplicitCastExpr 0x239ca040468 <col:48> 'unsigned long long' <IntegralCast>
|   |     | |         |         `-IntegerLiteral 0x239ca040428 <col:48> 'int' 1
|   |     | |         `-CharacterLiteral 0x239ca0404d8 <col:54> 'int' 46
|   |     | |-IfStmt 0x239ca040938 <line:713:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | | |-BinaryOperator 0x239ca040868 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:713:17, col:62> 'int' '||'
|   |     | | | |-BinaryOperator 0x239ca0407f8 <col:17, col:57> 'int' '||'
|   |     | | | | |-BinaryOperator 0x239ca040688 <col:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |     | | | | | |-ImplicitCastExpr 0x239ca040658 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:713:17> 'const unsigned char *' <LValueToRValue>
|   |     | | | | | | `-DeclRefExpr 0x239ca040598 <col:17> 'const unsigned char *' lvalue Var 0x239ca03fb18 'star' 'const unsigned char *'
|   |     | | | | | `-ImplicitCastExpr 0x239ca040670 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   |     | | | | |   `-ParenExpr 0x239ca040638 <col:17, col:27> 'void *'
|   |     | | | | |     `-CStyleCastExpr 0x239ca040610 <col:18, col:26> 'void *' <NullToPointer>
|   |     | | | | |       `-IntegerLiteral 0x239ca0405d0 <col:26> 'int' 0
|   |     | | | | `-BinaryOperator 0x239ca0407d8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:713:33, col:57> 'int' '!='
|   |     | | | |   |-ParenExpr 0x239ca040790 <col:33, col:52> 'int'
|   |     | | | |   | `-BinaryOperator 0x239ca040770 <col:34, line:691:32> 'int' '&'
|   |     | | | |   |   |-ImplicitCastExpr 0x239ca040758 <line:713:34> 'int' <LValueToRValue>
|   |     | | | |   |   | `-DeclRefExpr 0x239ca0406a8 <col:34> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   |     | | | |   |   `-ParenExpr 0x239ca040738 <line:691:25, col:32> 'int'
|   |     | | | |   |     `-BinaryOperator 0x239ca040718 <col:26, col:31> 'int' '<<'
|   |     | | | |   |       |-IntegerLiteral 0x239ca0406c8 <col:26> 'int' 1
|   |     | | | |   |       `-IntegerLiteral 0x239ca0406f0 <col:31> 'int' 3
|   |     | | | |   `-IntegerLiteral 0x239ca0407b0 <line:713:57> 'int' 0
|   |     | | | `-ImplicitCastExpr 0x239ca040850 <col:62> 'int' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x239ca040818 <col:62> 'int' lvalue Var 0x239ca03fda8 'dots' 'int'
|   |     | | `-ReturnStmt 0x239ca040928 <line:714:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |   `-ImplicitCastExpr 0x239ca040910 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     | |     `-ParenExpr 0x239ca0408f0 <col:17, col:27> 'void *'
|   |     | |       `-CStyleCastExpr 0x239ca0408c8 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |         `-IntegerLiteral 0x239ca040888 <col:26> 'int' 0
|   |     | |-IfStmt 0x239ca040b48 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:716:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | | |-OpaqueValueExpr 0x239ca040b30 <<invalid sloc>> '_Bool'
|   |     | | `-ReturnStmt 0x239ca040b20 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:718:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |   `-ImplicitCastExpr 0x239ca040b08 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     | |     `-ParenExpr 0x239ca040ae8 <col:17, col:27> 'void *'
|   |     | |       `-CStyleCastExpr 0x239ca040ac0 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |         `-IntegerLiteral 0x239ca040a80 <col:26> 'int' 0
|   |     | |-IfStmt 0x239ca040cd0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:720:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | | |-BinaryOperator 0x239ca040c00 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:720:17, col:30> 'int' '&&'
|   |     | | | |-UnaryOperator 0x239ca040b98 <col:17, col:18> 'int' prefix '!' cannot overflow
|   |     | | | | `-ImplicitCastExpr 0x239ca040b80 <col:18> 'int' <LValueToRValue>
|   |     | | | |   `-DeclRefExpr 0x239ca040b60 <col:18> 'int' lvalue Var 0x239ca0400c0 'atstart' 'int'
|   |     | | | `-UnaryOperator 0x239ca040be8 <col:29, col:30> 'int' prefix '!' cannot overflow
|   |     | | |   `-ImplicitCastExpr 0x239ca040bd0 <col:30> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x239ca040bb0 <col:30> 'int' lvalue Var 0x239ca040290 'atend' 'int'
|   |     | | `-ReturnStmt 0x239ca040cc0 <line:721:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     | |   `-ImplicitCastExpr 0x239ca040ca8 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     | |     `-ParenExpr 0x239ca040c88 <col:17, col:27> 'void *'
|   |     | |       `-CStyleCastExpr 0x239ca040c60 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |         `-IntegerLiteral 0x239ca040c20 <col:26> 'int' 0
|   |     | |-BinaryOperator 0x239ca040db0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:722:13, col:24> 'const unsigned char *' '='
|   |     | | |-DeclRefExpr 0x239ca040ce8 <col:13> 'const unsigned char *' lvalue Var 0x239ca03fb18 'star' 'const unsigned char *'
|   |     | | `-UnaryOperator 0x239ca040d98 <col:20, col:24> 'const unsigned char *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x239ca040d78 <col:21, col:24> 'const unsigned char' lvalue
|   |     | |     |-ImplicitCastExpr 0x239ca040d48 <col:21> 'const unsigned char *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x239ca040d08 <col:21> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |     | |     `-ImplicitCastExpr 0x239ca040d60 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x239ca040d28 <col:23> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |     | `-CompoundAssignOperator 0x239ca040e98 <line:723:13, line:688:32> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-DeclRefExpr 0x239ca040dd0 <line:723:13> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   |     |   `-UnaryOperator 0x239ca040e80 <col:22, line:688:32> 'int' prefix '~' cannot overflow
|   |     |     `-ParenExpr 0x239ca040e60 <col:25, col:32> 'int'
|   |     |       `-BinaryOperator 0x239ca040e40 <col:26, col:31> 'int' '<<'
|   |     |         |-IntegerLiteral 0x239ca040df0 <col:26> 'int' 1
|   |     |         `-IntegerLiteral 0x239ca040e18 <col:31> 'int' 0
|   |     `-IfStmt 0x239ca03a770 <line:724:16, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |       |-BinaryOperator 0x239ca0415d8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:724:20, line:726:50> 'int' '||'
|   |       | |-BinaryOperator 0x239ca041388 <line:724:20, line:725:50> 'int' '||'
|   |       | | |-ParenExpr 0x239ca041120 <line:724:20, col:47> 'int'
|   |       | | | `-BinaryOperator 0x239ca041100 <col:21, col:44> 'int' '&&'
|   |       | | |   |-BinaryOperator 0x239ca040fe8 <col:21, col:31> 'int' '<='
|   |       | | |   | |-CharacterLiteral 0x239ca040f10 <col:21> 'int' 97
|   |       | | |   | `-ImplicitCastExpr 0x239ca040fd0 <col:28, col:31> 'int' <IntegralCast>
|   |       | | |   |   `-ImplicitCastExpr 0x239ca040fb8 <col:28, col:31> 'unsigned char' <LValueToRValue>
|   |       | | |   |     `-ArraySubscriptExpr 0x239ca040f98 <col:28, col:31> 'const unsigned char' lvalue
|   |       | | |   |       |-ImplicitCastExpr 0x239ca040f68 <col:28> 'const unsigned char *' <LValueToRValue>
|   |       | | |   |       | `-DeclRefExpr 0x239ca040f28 <col:28> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |       | | |   |       `-ImplicitCastExpr 0x239ca040f80 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | |   |         `-DeclRefExpr 0x239ca040f48 <col:30> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |       | | |   `-BinaryOperator 0x239ca0410e0 <col:36, col:44> 'int' '<='
|   |       | | |     |-ImplicitCastExpr 0x239ca0410c8 <col:36, col:39> 'int' <IntegralCast>
|   |       | | |     | `-ImplicitCastExpr 0x239ca0410b0 <col:36, col:39> 'unsigned char' <LValueToRValue>
|   |       | | |     |   `-ArraySubscriptExpr 0x239ca041078 <col:36, col:39> 'const unsigned char' lvalue
|   |       | | |     |     |-ImplicitCastExpr 0x239ca041048 <col:36> 'const unsigned char *' <LValueToRValue>
|   |       | | |     |     | `-DeclRefExpr 0x239ca041008 <col:36> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |       | | |     |     `-ImplicitCastExpr 0x239ca041060 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | |     |       `-DeclRefExpr 0x239ca041028 <col:38> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |       | | |     `-CharacterLiteral 0x239ca041098 <col:44> 'int' 122
|   |       | | `-ParenExpr 0x239ca041368 <line:725:23, col:50> 'int'
|   |       | |   `-BinaryOperator 0x239ca041348 <col:24, col:47> 'int' '&&'
|   |       | |     |-BinaryOperator 0x239ca041230 <col:24, col:34> 'int' '<='
|   |       | |     | |-CharacterLiteral 0x239ca041140 <col:24> 'int' 65
|   |       | |     | `-ImplicitCastExpr 0x239ca041200 <col:31, col:34> 'int' <IntegralCast>
|   |       | |     |   `-ImplicitCastExpr 0x239ca0411e8 <col:31, col:34> 'unsigned char' <LValueToRValue>
|   |       | |     |     `-ArraySubscriptExpr 0x239ca0411c8 <col:31, col:34> 'const unsigned char' lvalue
|   |       | |     |       |-ImplicitCastExpr 0x239ca041198 <col:31> 'const unsigned char *' <LValueToRValue>
|   |       | |     |       | `-DeclRefExpr 0x239ca041158 <col:31> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |       | |     |       `-ImplicitCastExpr 0x239ca0411b0 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |     |         `-DeclRefExpr 0x239ca041178 <col:33> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |       | |     `-BinaryOperator 0x239ca041328 <col:39, col:47> 'int' '<='
|   |       | |       |-ImplicitCastExpr 0x239ca041310 <col:39, col:42> 'int' <IntegralCast>
|   |       | |       | `-ImplicitCastExpr 0x239ca0412f8 <col:39, col:42> 'unsigned char' <LValueToRValue>
|   |       | |       |   `-ArraySubscriptExpr 0x239ca0412c0 <col:39, col:42> 'const unsigned char' lvalue
|   |       | |       |     |-ImplicitCastExpr 0x239ca041290 <col:39> 'const unsigned char *' <LValueToRValue>
|   |       | |       |     | `-DeclRefExpr 0x239ca041250 <col:39> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |       | |       |     `-ImplicitCastExpr 0x239ca0412a8 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |       |       `-DeclRefExpr 0x239ca041270 <col:41> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |       | |       `-CharacterLiteral 0x239ca0412e0 <col:47> 'int' 90
|   |       | `-ParenExpr 0x239ca0415b8 <line:726:23, col:50> 'int'
|   |       |   `-BinaryOperator 0x239ca041598 <col:24, col:47> 'int' '&&'
|   |       |     |-BinaryOperator 0x239ca041480 <col:24, col:34> 'int' '<='
|   |       |     | |-CharacterLiteral 0x239ca0413a8 <col:24> 'int' 48
|   |       |     | `-ImplicitCastExpr 0x239ca041468 <col:31, col:34> 'int' <IntegralCast>
|   |       |     |   `-ImplicitCastExpr 0x239ca041450 <col:31, col:34> 'unsigned char' <LValueToRValue>
|   |       |     |     `-ArraySubscriptExpr 0x239ca041430 <col:31, col:34> 'const unsigned char' lvalue
|   |       |     |       |-ImplicitCastExpr 0x239ca041400 <col:31> 'const unsigned char *' <LValueToRValue>
|   |       |     |       | `-DeclRefExpr 0x239ca0413c0 <col:31> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |       |     |       `-ImplicitCastExpr 0x239ca041418 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |     |         `-DeclRefExpr 0x239ca0413e0 <col:33> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |       |     `-BinaryOperator 0x239ca041578 <col:39, col:47> 'int' '<='
|   |       |       |-ImplicitCastExpr 0x239ca041560 <col:39, col:42> 'int' <IntegralCast>
|   |       |       | `-ImplicitCastExpr 0x239ca041548 <col:39, col:42> 'unsigned char' <LValueToRValue>
|   |       |       |   `-ArraySubscriptExpr 0x239ca041510 <col:39, col:42> 'const unsigned char' lvalue
|   |       |       |     |-ImplicitCastExpr 0x239ca0414e0 <col:39> 'const unsigned char *' <LValueToRValue>
|   |       |       |     | `-DeclRefExpr 0x239ca0414a0 <col:39> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |       |       |     `-ImplicitCastExpr 0x239ca0414f8 <col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |       |       `-DeclRefExpr 0x239ca0414c0 <col:41> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |       |       `-CharacterLiteral 0x239ca041530 <col:47> 'int' 57
|   |       |-CompoundStmt 0x239ca041d98 <col:53, line:731:9>
|   |       | |-IfStmt 0x239ca041bb8 <line:727:13, line:691:32>
|   |       | | |-BinaryOperator 0x239ca041ab8 <line:727:17, line:728:77> 'int' '&&'
|   |       | | | |-BinaryOperator 0x239ca041838 <line:727:17, line:728:31> 'int' '&&'
|   |       | | | | |-BinaryOperator 0x239ca041728 <line:727:17, col:42> 'int' '!='
|   |       | | | | | |-ParenExpr 0x239ca0416e0 <col:17, col:37> 'int'
|   |       | | | | | | `-BinaryOperator 0x239ca0416c0 <col:18, line:688:32> 'int' '&'
|   |       | | | | | |   |-ImplicitCastExpr 0x239ca0416a8 <line:727:18> 'int' <LValueToRValue>
|   |       | | | | | |   | `-DeclRefExpr 0x239ca0415f8 <col:18> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   |       | | | | | |   `-ParenExpr 0x239ca041688 <line:688:25, col:32> 'int'
|   |       | | | | | |     `-BinaryOperator 0x239ca041668 <col:26, col:31> 'int' '<<'
|   |       | | | | | |       |-IntegerLiteral 0x239ca041618 <col:26> 'int' 1
|   |       | | | | | |       `-IntegerLiteral 0x239ca041640 <col:31> 'int' 0
|   |       | | | | | `-IntegerLiteral 0x239ca041700 <line:727:42> 'int' 0
|   |       | | | | `-BinaryOperator 0x239ca041818 <line:728:20, col:31> 'int' '>='
|   |       | | | |   |-BinaryOperator 0x239ca0417b8 <col:20, col:26> 'unsigned long long' '-'
|   |       | | | |   | |-ImplicitCastExpr 0x239ca041788 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | | |   | | `-DeclRefExpr 0x239ca041748 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03f838 'len' 'size_t':'unsigned long long'
|   |       | | | |   | `-ImplicitCastExpr 0x239ca0417a0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | | |   |   `-DeclRefExpr 0x239ca041768 <col:26> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |       | | | |   `-ImplicitCastExpr 0x239ca041800 <col:31> 'unsigned long long' <IntegralCast>
|   |       | | | |     `-IntegerLiteral 0x239ca0417d8 <col:31> 'int' 4
|   |       | | | `-BinaryOperator 0x239ca041a98 <col:36, col:77> 'int' '=='
|   |       | | |   |-CallExpr 0x239ca0419d8 <col:36, col:72> 'int'
|   |       | | |   | |-ImplicitCastExpr 0x239ca0419c0 <col:36> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   |       | | |   | | `-DeclRefExpr 0x239ca041858 <col:36> 'int (const char *, const char *, unsigned long long)' Function 0x239ca037640 'strncasecmp' 'int (const char *, const char *, unsigned long long)'
|   |       | | |   | |-ImplicitCastExpr 0x239ca041a10 <col:48, col:60> 'const char *' <NoOp>
|   |       | | |   | | `-CStyleCastExpr 0x239ca041938 <col:48, col:60> 'char *' <BitCast>
|   |       | | |   | |   `-UnaryOperator 0x239ca041908 <col:56, col:60> 'const unsigned char *' prefix '&' cannot overflow
|   |       | | |   | |     `-ArraySubscriptExpr 0x239ca0418e8 <col:57, col:60> 'const unsigned char' lvalue
|   |       | | |   | |       |-ImplicitCastExpr 0x239ca0418b8 <col:57> 'const unsigned char *' <LValueToRValue>
|   |       | | |   | |       | `-DeclRefExpr 0x239ca041878 <col:57> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |       | | |   | |       `-ImplicitCastExpr 0x239ca0418d0 <col:59> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | |   | |         `-DeclRefExpr 0x239ca041898 <col:59> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |       | | |   | |-ImplicitCastExpr 0x239ca041a40 <col:63> 'const char *' <NoOp>
|   |       | | |   | | `-ImplicitCastExpr 0x239ca041a28 <col:63> 'char *' <ArrayToPointerDecay>
|   |       | | |   | |   `-StringLiteral 0x239ca041960 <col:63> 'char [5]' lvalue "xn--"
|   |       | | |   | `-ImplicitCastExpr 0x239ca041a58 <col:71> 'unsigned long long' <IntegralCast>
|   |       | | |   |   `-IntegerLiteral 0x239ca041980 <col:71> 'int' 4
|   |       | | |   `-IntegerLiteral 0x239ca041a70 <col:77> 'int' 0
|   |       | | `-CompoundAssignOperator 0x239ca041b88 <line:729:17, line:691:32> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |   |-DeclRefExpr 0x239ca041ad8 <line:729:17> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   |       | |   `-ParenExpr 0x239ca041b68 <line:691:25, col:32> 'int'
|   |       | |     `-BinaryOperator 0x239ca041b48 <col:26, col:31> 'int' '<<'
|   |       | |       |-IntegerLiteral 0x239ca041af8 <col:26> 'int' 1
|   |       | |       `-IntegerLiteral 0x239ca041b20 <col:31> 'int' 3
|   |       | `-CompoundAssignOperator 0x239ca041d68 <line:730:13, col:50> 'int' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |   |-DeclRefExpr 0x239ca041bd0 <col:13> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   |       |   `-UnaryOperator 0x239ca041d50 <col:22, col:50> 'int' prefix '~' cannot overflow
|   |       |     `-ParenExpr 0x239ca041d30 <col:23, col:50> 'int'
|   |       |       `-BinaryOperator 0x239ca041d10 <line:690:25, line:688:32> 'int' '|'
|   |       |         |-ParenExpr 0x239ca041c60 <line:690:25, col:32> 'int'
|   |       |         | `-BinaryOperator 0x239ca041c40 <col:26, col:31> 'int' '<<'
|   |       |         |   |-IntegerLiteral 0x239ca041bf0 <col:26> 'int' 1
|   |       |         |   `-IntegerLiteral 0x239ca041c18 <col:31> 'int' 2
|   |       |         `-ParenExpr 0x239ca041cf0 <line:688:25, col:32> 'int'
|   |       |           `-BinaryOperator 0x239ca041cd0 <col:26, col:31> 'int' '<<'
|   |       |             |-IntegerLiteral 0x239ca041c80 <col:26> 'int' 1
|   |       |             `-IntegerLiteral 0x239ca041ca8 <col:31> 'int' 0
|   |       `-IfStmt 0x239ca03a748 <line:731:16, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |         |-BinaryOperator 0x239ca041e90 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:731:20, col:28> 'int' '=='
|   |         | |-ImplicitCastExpr 0x239ca041e78 <col:20, col:23> 'int' <IntegralCast>
|   |         | | `-ImplicitCastExpr 0x239ca041e60 <col:20, col:23> 'unsigned char' <LValueToRValue>
|   |         | |   `-ArraySubscriptExpr 0x239ca041e28 <col:20, col:23> 'const unsigned char' lvalue
|   |         | |     |-ImplicitCastExpr 0x239ca041df8 <col:20> 'const unsigned char *' <LValueToRValue>
|   |         | |     | `-DeclRefExpr 0x239ca041db8 <col:20> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |         | |     `-ImplicitCastExpr 0x239ca041e10 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x239ca041dd8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |         | `-CharacterLiteral 0x239ca041e48 <col:28> 'int' 46
|   |         |-CompoundStmt 0x239ca03a238 <col:33, line:736:9>
|   |         | |-IfStmt 0x239ca042180 <line:732:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |         | | |-BinaryOperator 0x239ca0420b0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:732:17, col:59> 'int' '!='
|   |         | | | |-ParenExpr 0x239ca042068 <col:17, col:54> 'int'
|   |         | | | | `-BinaryOperator 0x239ca042048 <col:18, col:53> 'int' '&'
|   |         | | | |   |-ImplicitCastExpr 0x239ca042030 <col:18> 'int' <LValueToRValue>
|   |         | | | |   | `-DeclRefExpr 0x239ca041eb0 <col:18> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   |         | | | |   `-ParenExpr 0x239ca042010 <col:26, col:53> 'int'
|   |         | | | |     `-BinaryOperator 0x239ca041ff0 <line:690:25, line:688:32> 'int' '|'
|   |         | | | |       |-ParenExpr 0x239ca041f40 <line:690:25, col:32> 'int'
|   |         | | | |       | `-BinaryOperator 0x239ca041f20 <col:26, col:31> 'int' '<<'
|   |         | | | |       |   |-IntegerLiteral 0x239ca041ed0 <col:26> 'int' 1
|   |         | | | |       |   `-IntegerLiteral 0x239ca041ef8 <col:31> 'int' 2
|   |         | | | |       `-ParenExpr 0x239ca041fd0 <line:688:25, col:32> 'int'
|   |         | | | |         `-BinaryOperator 0x239ca041fb0 <col:26, col:31> 'int' '<<'
|   |         | | | |           |-IntegerLiteral 0x239ca041f60 <col:26> 'int' 1
|   |         | | | |           `-IntegerLiteral 0x239ca041f88 <col:31> 'int' 0
|   |         | | | `-IntegerLiteral 0x239ca042088 <line:732:59> 'int' 0
|   |         | | `-ReturnStmt 0x239ca042170 <line:733:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |         | |   `-ImplicitCastExpr 0x239ca042158 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |         | |     `-ParenExpr 0x239ca042138 <col:17, col:27> 'void *'
|   |         | |       `-CStyleCastExpr 0x239ca042110 <col:18, col:26> 'void *' <NullToPointer>
|   |         | |         `-IntegerLiteral 0x239ca0420d0 <col:26> 'int' 0
|   |         | |-BinaryOperator 0x239ca03a1e0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:734:13, line:688:32> 'int' '='
|   |         | | |-DeclRefExpr 0x239ca042198 <line:734:13> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   |         | | `-ParenExpr 0x239ca03a1c0 <line:688:25, col:32> 'int'
|   |         | |   `-BinaryOperator 0x239ca042208 <col:26, col:31> 'int' '<<'
|   |         | |     |-IntegerLiteral 0x239ca0421b8 <col:26> 'int' 1
|   |         | |     `-IntegerLiteral 0x239ca0421e0 <col:31> 'int' 0
|   |         | `-UnaryOperator 0x239ca03a220 <line:735:13, col:15> 'int' prefix '++'
|   |         |   `-DeclRefExpr 0x239ca03a200 <col:15> 'int' lvalue Var 0x239ca03fda8 'dots' 'int'
|   |         `-IfStmt 0x239ca03a720 <line:736:16, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |           |-BinaryOperator 0x239ca03a338 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:736:20, col:28> 'int' '=='
|   |           | |-ImplicitCastExpr 0x239ca03a320 <col:20, col:23> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x239ca03a308 <col:20, col:23> 'unsigned char' <LValueToRValue>
|   |           | |   `-ArraySubscriptExpr 0x239ca03a2d0 <col:20, col:23> 'const unsigned char' lvalue
|   |           | |     |-ImplicitCastExpr 0x239ca03a2a0 <col:20> 'const unsigned char *' <LValueToRValue>
|   |           | |     | `-DeclRefExpr 0x239ca03a260 <col:20> 'const unsigned char *' lvalue ParmVar 0x239ca03f7c0 'p' 'const unsigned char *'
|   |           | |     `-ImplicitCastExpr 0x239ca03a2b8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |       `-DeclRefExpr 0x239ca03a280 <col:22> 'size_t':'unsigned long long' lvalue Var 0x239ca03fbe8 'i' 'size_t':'unsigned long long'
|   |           | `-CharacterLiteral 0x239ca03a2f0 <col:28> 'int' 45
|   |           |-CompoundStmt 0x239ca03a650 <col:33, line:741:9>
|   |           | |-IfStmt 0x239ca03a558 <line:738:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |           | | |-BinaryOperator 0x239ca03a488 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:738:17, col:42> 'int' '!='
|   |           | | | |-ParenExpr 0x239ca03a440 <col:17, col:37> 'int'
|   |           | | | | `-BinaryOperator 0x239ca03a420 <col:18, line:688:32> 'int' '&'
|   |           | | | |   |-ImplicitCastExpr 0x239ca03a408 <line:738:18> 'int' <LValueToRValue>
|   |           | | | |   | `-DeclRefExpr 0x239ca03a358 <col:18> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   |           | | | |   `-ParenExpr 0x239ca03a3e8 <line:688:25, col:32> 'int'
|   |           | | | |     `-BinaryOperator 0x239ca03a3c8 <col:26, col:31> 'int' '<<'
|   |           | | | |       |-IntegerLiteral 0x239ca03a378 <col:26> 'int' 1
|   |           | | | |       `-IntegerLiteral 0x239ca03a3a0 <col:31> 'int' 0
|   |           | | | `-IntegerLiteral 0x239ca03a460 <line:738:42> 'int' 0
|   |           | | `-ReturnStmt 0x239ca03a548 <line:739:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |           | |   `-ImplicitCastExpr 0x239ca03a530 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |           | |     `-ParenExpr 0x239ca03a510 <col:17, col:27> 'void *'
|   |           | |       `-CStyleCastExpr 0x239ca03a4e8 <col:18, col:26> 'void *' <NullToPointer>
|   |           | |         `-IntegerLiteral 0x239ca03a4a8 <col:26> 'int' 0
|   |           | `-CompoundAssignOperator 0x239ca03a620 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:740:13, line:690:32> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           |   |-DeclRefExpr 0x239ca03a570 <line:740:13> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   |           |   `-ParenExpr 0x239ca03a600 <line:690:25, col:32> 'int'
|   |           |     `-BinaryOperator 0x239ca03a5e0 <col:26, col:31> 'int' '<<'
|   |           |       |-IntegerLiteral 0x239ca03a590 <col:26> 'int' 1
|   |           |       `-IntegerLiteral 0x239ca03a5b8 <col:31> 'int' 2
|   |           `-ReturnStmt 0x239ca03a710 <line:742:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |             `-ImplicitCastExpr 0x239ca03a6f8 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |               `-ParenExpr 0x239ca03a6d8 <col:17, col:27> 'void *'
|   |                 `-CStyleCastExpr 0x239ca03a6b0 <col:18, col:26> 'void *' <NullToPointer>
|   |                   `-IntegerLiteral 0x239ca03a670 <col:26> 'int' 0
|   |-IfStmt 0x239ca03ab80 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:749:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x239ca03aab0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:749:9, col:63> 'int' '||'
|   | | |-BinaryOperator 0x239ca03aa10 <col:9, col:51> 'int' '!='
|   | | | |-ParenExpr 0x239ca03a9c8 <col:9, col:46> 'int'
|   | | | | `-BinaryOperator 0x239ca03a9a8 <col:10, col:45> 'int' '&'
|   | | | |   |-ImplicitCastExpr 0x239ca03a990 <col:10> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x239ca03a810 <col:10> 'int' lvalue Var 0x239ca03fc80 'state' 'int'
|   | | | |   `-ParenExpr 0x239ca03a970 <col:18, col:45> 'int'
|   | | | |     `-BinaryOperator 0x239ca03a950 <line:688:25, line:690:32> 'int' '|'
|   | | | |       |-ParenExpr 0x239ca03a8a0 <line:688:25, col:32> 'int'
|   | | | |       | `-BinaryOperator 0x239ca03a880 <col:26, col:31> 'int' '<<'
|   | | | |       |   |-IntegerLiteral 0x239ca03a830 <col:26> 'int' 1
|   | | | |       |   `-IntegerLiteral 0x239ca03a858 <col:31> 'int' 0
|   | | | |       `-ParenExpr 0x239ca03a930 <line:690:25, col:32> 'int'
|   | | | |         `-BinaryOperator 0x239ca03a910 <col:26, col:31> 'int' '<<'
|   | | | |           |-IntegerLiteral 0x239ca03a8c0 <col:26> 'int' 1
|   | | | |           `-IntegerLiteral 0x239ca03a8e8 <col:31> 'int' 2
|   | | | `-IntegerLiteral 0x239ca03a9e8 <line:749:51> 'int' 0
|   | | `-BinaryOperator 0x239ca03aa90 <col:56, col:63> 'int' '<'
|   | |   |-ImplicitCastExpr 0x239ca03aa78 <col:56> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca03aa30 <col:56> 'int' lvalue Var 0x239ca03fda8 'dots' 'int'
|   | |   `-IntegerLiteral 0x239ca03aa50 <col:63> 'int' 2
|   | `-ReturnStmt 0x239ca03ab70 <line:750:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x239ca03ab58 <col:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x239ca03ab38 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca03ab10 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca03aad0 <col:26> 'int' 0
|   `-ReturnStmt 0x239ca03abd0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:751:5, col:12>
|     `-ImplicitCastExpr 0x239ca03abb8 <col:12> 'const unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x239ca03ab98 <col:12> 'const unsigned char *' lvalue Var 0x239ca03fb18 'star' 'const unsigned char *'
|-FunctionDecl 0x239ca03af60 <line:755:1, line:773:1> line:755:12 used equal_wildcard 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' static
| |-ParmVarDecl 0x239ca03ac40 <col:27, col:48> col:48 used pattern 'const unsigned char *'
| |-ParmVarDecl 0x239ca03acb8 <col:57, col:64> col:64 used pattern_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca03ad38 <line:756:27, col:48> col:48 used subject 'const unsigned char *'
| |-ParmVarDecl 0x239ca03adb0 <col:57, col:64> col:64 used subject_len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca03ae30 <line:757:27, col:40> col:40 used flags 'unsigned int'
| `-CompoundStmt 0x239ca045d28 <line:758:1, line:773:1>
|   |-DeclStmt 0x239ca03b160 <line:759:5, col:37>
|   | `-VarDecl 0x239ca03b058 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\x509v3\v3_utl.c:759:26 used star 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x239ca03b148 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x239ca03b128 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca03b100 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca03b0c0 <col:26> 'int' 0
|   |-IfStmt 0x239ca0455d0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:765:5, line:766:54>
|   | |-UnaryOperator 0x239ca0453e8 <line:765:9, col:47> 'int' prefix '!' cannot overflow
|   | | `-ParenExpr 0x239ca0453c8 <col:10, col:47> 'int'
|   | |   `-BinaryOperator 0x239ca0453a8 <col:11, col:44> 'int' '&&'
|   | |     |-BinaryOperator 0x239ca0452a0 <col:11, col:25> 'int' '>'
|   | |     | |-ImplicitCastExpr 0x239ca045270 <col:11> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x239ca03b178 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03adb0 'subject_len' 'size_t':'unsigned long long'
|   | |     | `-ImplicitCastExpr 0x239ca045288 <col:25> 'unsigned long long' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x239ca03b198 <col:25> 'int' 1
|   | |     `-BinaryOperator 0x239ca045388 <col:30, col:44> 'int' '=='
|   | |       |-ImplicitCastExpr 0x239ca045370 <col:30, col:39> 'int' <IntegralCast>
|   | |       | `-ImplicitCastExpr 0x239ca045358 <col:30, col:39> 'unsigned char' <LValueToRValue>
|   | |       |   `-ArraySubscriptExpr 0x239ca045320 <col:30, col:39> 'const unsigned char' lvalue
|   | |       |     |-ImplicitCastExpr 0x239ca045308 <col:30> 'const unsigned char *' <LValueToRValue>
|   | |       |     | `-DeclRefExpr 0x239ca0452c0 <col:30> 'const unsigned char *' lvalue ParmVar 0x239ca03ad38 'subject' 'const unsigned char *'
|   | |       |     `-IntegerLiteral 0x239ca0452e0 <col:38> 'int' 0
|   | |       `-CharacterLiteral 0x239ca045340 <col:44> 'int' 46
|   | `-BinaryOperator 0x239ca0455b0 <line:766:9, col:54> 'const unsigned char *' '='
|   |   |-DeclRefExpr 0x239ca045400 <col:9> 'const unsigned char *' lvalue Var 0x239ca03b058 'star' 'const unsigned char *'
|   |   `-CallExpr 0x239ca045530 <col:16, col:54> 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x239ca045518 <col:16> 'const unsigned char *(*)(const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x239ca045438 <col:16> 'const unsigned char *(const unsigned char *, size_t, unsigned int)' Function 0x239ca03fa30 'valid_star' 'const unsigned char *(const unsigned char *, size_t, unsigned int)'
|   |     |-ImplicitCastExpr 0x239ca045568 <col:27> 'const unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x239ca045458 <col:27> 'const unsigned char *' lvalue ParmVar 0x239ca03ac40 'pattern' 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x239ca045580 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x239ca045478 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03acb8 'pattern_len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x239ca045598 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x239ca045498 <col:49> 'unsigned int' lvalue ParmVar 0x239ca03ae30 'flags' 'unsigned int'
|   |-IfStmt 0x239ca045888 <line:767:5, line:769:56>
|   | |-BinaryOperator 0x239ca0456c0 <line:767:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca045690 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:767:9> 'const unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca0455e8 <col:9> 'const unsigned char *' lvalue Var 0x239ca03b058 'star' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x239ca0456a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x239ca045670 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x239ca045648 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x239ca045608 <col:26> 'int' 0
|   | `-ReturnStmt 0x239ca045878 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:768:9, line:769:56>
|   |   `-CallExpr 0x239ca0457b8 <line:768:16, line:769:56> 'int'
|   |     |-ImplicitCastExpr 0x239ca0457a0 <line:768:16> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x239ca0456e0 <col:16> 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x239ca0395e0 'equal_nocase' 'int (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|   |     |-ImplicitCastExpr 0x239ca045800 <col:29> 'const unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x239ca045700 <col:29> 'const unsigned char *' lvalue ParmVar 0x239ca03ac40 'pattern' 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x239ca045818 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x239ca045720 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03acb8 'pattern_len' 'size_t':'unsigned long long'
|   |     |-ImplicitCastExpr 0x239ca045830 <line:769:29> 'const unsigned char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x239ca045740 <col:29> 'const unsigned char *' lvalue ParmVar 0x239ca03ad38 'subject' 'const unsigned char *'
|   |     |-ImplicitCastExpr 0x239ca045848 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x239ca045760 <col:38> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03adb0 'subject_len' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x239ca045860 <col:51> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x239ca045780 <col:51> 'unsigned int' lvalue ParmVar 0x239ca03ae30 'flags' 'unsigned int'
|   `-ReturnStmt 0x239ca045d18 <line:770:5, line:772:54>
|     `-CallExpr 0x239ca045c30 <line:770:12, line:772:54> 'int'
|       |-ImplicitCastExpr 0x239ca045c18 <line:770:12> 'int (*)(const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x239ca0458a0 <col:12> 'int (const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)' Function 0x239ca03b590 'wildcard_match' 'int (const unsigned char *, size_t, const unsigned char *, size_t, const unsigned char *, size_t, unsigned int)'
|       |-ImplicitCastExpr 0x239ca045c88 <col:27> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x239ca0458c0 <col:27> 'const unsigned char *' lvalue ParmVar 0x239ca03ac40 'pattern' 'const unsigned char *'
|       |-ImplicitCastExpr 0x239ca045ca0 <col:36, col:43> 'size_t':'unsigned long long' <IntegralCast>
|       | `-BinaryOperator 0x239ca045950 <col:36, col:43> 'long long' '-'
|       |   |-ImplicitCastExpr 0x239ca045920 <col:36> 'const unsigned char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x239ca0458e0 <col:36> 'const unsigned char *' lvalue Var 0x239ca03b058 'star' 'const unsigned char *'
|       |   `-ImplicitCastExpr 0x239ca045938 <col:43> 'const unsigned char *' <LValueToRValue>
|       |     `-DeclRefExpr 0x239ca045900 <col:43> 'const unsigned char *' lvalue ParmVar 0x239ca03ac40 'pattern' 'const unsigned char *'
|       |-BinaryOperator 0x239ca0459d0 <line:771:27, col:34> 'const unsigned char *' '+'
|       | |-ImplicitCastExpr 0x239ca0459b8 <col:27> 'const unsigned char *' <LValueToRValue>
|       | | `-DeclRefExpr 0x239ca045970 <col:27> 'const unsigned char *' lvalue Var 0x239ca03b058 'star' 'const unsigned char *'
|       | `-IntegerLiteral 0x239ca045990 <col:34> 'int' 1
|       |-ImplicitCastExpr 0x239ca045cb8 <col:37, col:70> 'size_t':'unsigned long long' <IntegralCast>
|       | `-BinaryOperator 0x239ca045b38 <col:37, col:70> 'long long' '-'
|       |   |-BinaryOperator 0x239ca045ad8 <col:37, col:63> 'long long' '-'
|       |   | |-ParenExpr 0x239ca045a80 <col:37, col:59> 'const unsigned char *'
|       |   | | `-BinaryOperator 0x239ca045a60 <col:38, col:48> 'const unsigned char *' '+'
|       |   | |   |-ImplicitCastExpr 0x239ca045a30 <col:38> 'const unsigned char *' <LValueToRValue>
|       |   | |   | `-DeclRefExpr 0x239ca0459f0 <col:38> 'const unsigned char *' lvalue ParmVar 0x239ca03ac40 'pattern' 'const unsigned char *'
|       |   | |   `-ImplicitCastExpr 0x239ca045a48 <col:48> 'size_t':'unsigned long long' <LValueToRValue>
|       |   | |     `-DeclRefExpr 0x239ca045a10 <col:48> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03acb8 'pattern_len' 'size_t':'unsigned long long'
|       |   | `-ImplicitCastExpr 0x239ca045ac0 <col:63> 'const unsigned char *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x239ca045aa0 <col:63> 'const unsigned char *' lvalue Var 0x239ca03b058 'star' 'const unsigned char *'
|       |   `-ImplicitCastExpr 0x239ca045b20 <col:70> 'long long' <IntegralCast>
|       |     `-IntegerLiteral 0x239ca045af8 <col:70> 'int' 1
|       |-ImplicitCastExpr 0x239ca045cd0 <line:772:27> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x239ca045b58 <col:27> 'const unsigned char *' lvalue ParmVar 0x239ca03ad38 'subject' 'const unsigned char *'
|       |-ImplicitCastExpr 0x239ca045ce8 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x239ca045b78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca03adb0 'subject_len' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x239ca045d00 <col:49> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x239ca045b98 <col:49> 'unsigned int' lvalue ParmVar 0x239ca03ae30 'flags' 'unsigned int'
|-FunctionDecl 0x239ca0482a0 <line:781:1, line:815:1> line:781:12 invalid do_check_string 'int (const int *, int, int, unsigned int, const char *, size_t, char **)' static
| |-ParmVarDecl 0x239ca045d70 <col:28, col:47> col:47 invalid a 'const int *'
| |-ParmVarDecl 0x239ca045df0 <col:50, col:54> col:54 used cmp_type 'int'
| |-ParmVarDecl 0x239ca045e70 <col:64, col:73> col:73 invalid equal 'int'
| |-ParmVarDecl 0x239ca045ef0 <line:782:28, col:41> col:41 used flags 'unsigned int'
| |-ParmVarDecl 0x239ca045f70 <col:48, col:60> col:60 used b 'const char *'
| |-ParmVarDecl 0x239ca045fe8 <col:63, col:70> col:70 used blen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca046068 <line:783:28, col:35> col:35 used peername 'char **'
| `-CompoundStmt 0x239ca047438 <line:784:1, line:815:1>
|   |-DeclStmt 0x239ca048438 <line:785:5, col:15>
|   | `-VarDecl 0x239ca0483a8 <col:5, col:14> col:9 used rv 'int' cinit
|   |   `-IntegerLiteral 0x239ca048410 <col:14> 'int' 0
|   |-IfStmt 0x239ca0484a0 <line:787:5, line:788:16>
|   | |-OpaqueValueExpr 0x239ca048488 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x239ca048478 <col:9, col:16>
|   |   `-IntegerLiteral 0x239ca048450 <col:16> 'int' 0
|   |-IfStmt 0x239ca0473c8 <line:789:5, line:813:5> has_else
|   | |-BinaryOperator 0x239ca048530 <line:789:9, col:20> 'int' '>'
|   | | |-ImplicitCastExpr 0x239ca048518 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca0484b8 <col:9> 'int' lvalue ParmVar 0x239ca045df0 'cmp_type' 'int'
|   | | `-IntegerLiteral 0x239ca0484f0 <col:20> 'int' 0
|   | |-CompoundStmt 0x239ca048b38 <col:23, line:798:5>
|   | | |-IfStmt 0x239ca0485c0 <line:790:9, line:791:20>
|   | | | |-OpaqueValueExpr 0x239ca0485a8 <<invalid sloc>> '_Bool'
|   | | | `-ReturnStmt 0x239ca048598 <col:13, col:20>
|   | | |   `-IntegerLiteral 0x239ca048570 <col:20> 'int' 0
|   | | `-IfStmt 0x239ca0488c0 <line:792:9, line:795:18> has_else
|   | |   |-OpaqueValueExpr 0x239ca0488a8 <<invalid sloc>> '_Bool'
|   | |   |-NullStmt 0x239ca0488a0 <line:793:13>
|   | |   `-IfStmt 0x239ca048888 <line:794:14, line:795:18>
|   | |     |-OpaqueValueExpr 0x239ca048870 <<invalid sloc>> '_Bool'
|   | |     `-BinaryOperator 0x239ca048850 <col:13, col:18> 'int' '='
|   | |       |-DeclRefExpr 0x239ca048808 <col:13> 'int' lvalue Var 0x239ca0483a8 'rv' 'int'
|   | |       `-IntegerLiteral 0x239ca048828 <col:18> 'int' 1
|   | `-CompoundStmt 0x239ca047390 <line:798:12, line:813:5>
|   |   |-DeclStmt 0x239ca048bd8 <line:799:9, col:20>
|   |   | `-VarDecl 0x239ca048b70 <col:9, col:13> col:13 used astrlen 'int'
|   |   |-DeclStmt 0x239ca048c70 <line:800:9, col:28>
|   |   | `-VarDecl 0x239ca048c08 <col:9, col:24> col:24 used astr 'unsigned char *'
|   |   |-IfStmt 0x239ca048f38 <line:802:9, line:808:9>
|   |   | |-BinaryOperator 0x239ca048eb0 <line:802:13, col:23> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x239ca048e98 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x239ca048e50 <col:13> 'int' lvalue Var 0x239ca048b70 'astrlen' 'int'
|   |   | | `-IntegerLiteral 0x239ca048e70 <col:23> 'int' 0
|   |   | `-CompoundStmt 0x239ca048f20 <col:26, line:808:9>
|   |   |   `-ReturnStmt 0x239ca048f10 <line:807:13, col:21>
|   |   |     `-UnaryOperator 0x239ca048ef8 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x239ca048ed0 <col:21> 'int' 1
|   |   |-IfStmt 0x239ca0472e0 <line:810:9, line:811:62>
|   |   | |-BinaryOperator 0x239ca049120 <line:810:13, col:23> 'int' '&&'
|   |   | | |-BinaryOperator 0x239ca0490c8 <col:13, col:18> 'int' '>'
|   |   | | | |-ImplicitCastExpr 0x239ca0490b0 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x239ca049068 <col:13> 'int' lvalue Var 0x239ca0483a8 'rv' 'int'
|   |   | | | `-IntegerLiteral 0x239ca049088 <col:18> 'int' 0
|   |   | | `-ImplicitCastExpr 0x239ca049108 <col:23> 'char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x239ca0490e8 <col:23> 'char **' lvalue ParmVar 0x239ca046068 'peername' 'char **'
|   |   | `-BinaryOperator 0x239ca0472c0 <line:811:13, col:62> 'char *' '='
|   |   |   |-UnaryOperator 0x239ca049178 <col:13, col:14> 'char *' lvalue prefix '*' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x239ca049160 <col:14> 'char **' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x239ca049140 <col:14> 'char **' lvalue ParmVar 0x239ca046068 'peername' 'char **'
|   |   |   `-ImplicitCastExpr 0x239ca0472a8 <col:25, col:62> 'char *' <IntegralToPointer>
|   |   |     `-CallExpr 0x239ca049260 <col:25, col:62> 'int'
|   |   |       |-ImplicitCastExpr 0x239ca049248 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x239ca049190 <col:25> 'int ()' Function 0x239ca048a50 'OPENSSL_strndup' 'int ()'
|   |   |       |-CStyleCastExpr 0x239ca049200 <col:41, col:49> 'char *' <BitCast>
|   |   |       | `-ImplicitCastExpr 0x239ca0491e8 <col:49> 'unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |   |       |   `-DeclRefExpr 0x239ca0491b0 <col:49> 'unsigned char *' lvalue Var 0x239ca048c08 'astr' 'unsigned char *'
|   |   |       `-ImplicitCastExpr 0x239ca047290 <col:55> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x239ca049228 <col:55> 'int' lvalue Var 0x239ca048b70 'astrlen' 'int'
|   |   `-CallExpr 0x239ca047350 <line:812:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x239ca047338 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x239ca0472f8 <col:9> 'int ()' Function 0x239ca0263d0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x239ca047378 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x239ca047318 <col:22> 'unsigned char *' lvalue Var 0x239ca048c08 'astr' 'unsigned char *'
|   `-ReturnStmt 0x239ca047428 <line:814:5, col:12>
|     `-ImplicitCastExpr 0x239ca047410 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x239ca0473f0 <col:12> 'int' lvalue Var 0x239ca0483a8 'rv' 'int'
|-FunctionDecl 0x239ca047870 <line:817:1, line:896:1> line:817:12 invalid do_x509_check 'int (int *, const char *, size_t, unsigned int, int, char **)' static
| |-ParmVarDecl 0x239ca047480 <col:26, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x239ca047500 <col:35, col:47> col:47 used chk 'const char *'
| |-ParmVarDecl 0x239ca047578 <col:52, col:59> col:59 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca0475f8 <line:818:26, col:39> col:39 used flags 'unsigned int'
| |-ParmVarDecl 0x239ca047678 <col:46, col:50> col:50 used check_type 'int'
| |-ParmVarDecl 0x239ca0476f8 <col:62, col:69> col:69 used peername 'char **'
| `-CompoundStmt 0x239ca0467d0 <line:819:1, line:896:1>
|   |-DeclStmt 0x239ca047ae8 <line:822:5, col:10>
|   | `-VarDecl 0x239ca047a80 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x239ca047b80 <line:823:5, col:25>
|   | `-VarDecl 0x239ca047b18 <col:5, col:9> col:9 used cnid 'int'
|   |-DeclStmt 0x239ca047c18 <line:824:5, col:17>
|   | `-VarDecl 0x239ca047bb0 <col:5, col:9> col:9 used alt_type 'int'
|   |-DeclStmt 0x239ca047cd8 <line:825:5, col:24>
|   | `-VarDecl 0x239ca047c48 <col:5, col:23> col:9 used san_present 'int' cinit
|   |   `-IntegerLiteral 0x239ca047cb0 <col:23> 'int' 0
|   |-DeclStmt 0x239ca047d98 <line:826:5, col:15>
|   | `-VarDecl 0x239ca047d08 <col:5, col:14> col:9 used rv 'int' cinit
|   |   `-IntegerLiteral 0x239ca047d70 <col:14> 'int' 0
|   |-IfStmt 0x239ca048228 <line:831:5, line:848:5> has_else
|   | |-OpaqueValueExpr 0x239ca048210 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x239ca047eb0 <line:831:34, line:835:5>
|   | `-IfStmt 0x239ca0481e8 <col:12, line:848:5> has_else
|   |   |-OpaqueValueExpr 0x239ca0481d0 <<invalid sloc>> '_Bool'
|   |   |-CompoundStmt 0x239ca048170 <line:835:39, line:845:5>
|   |   `-CompoundStmt 0x239ca0481c0 <col:12, line:848:5>
|   |-IfStmt 0x239ca049418 <line:850:5, line:851:28>
|   | |-BinaryOperator 0x239ca049308 <line:850:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca0492d8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca048250 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca047578 'chklen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca0492f0 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x239ca0492b0 <col:19> 'int' 0
|   | `-BinaryOperator 0x239ca0493f8 <line:851:9, col:28> 'size_t':'unsigned long long' '='
|   |   |-DeclRefExpr 0x239ca049328 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca047578 'chklen' 'size_t':'unsigned long long'
|   |   `-CallExpr 0x239ca0493b8 <col:18, col:28> 'unsigned long long'
|   |     |-ImplicitCastExpr 0x239ca0493a0 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x239ca049348 <col:18> 'unsigned long long (const char *)' Function 0x239ca031f10 'strlen' 'unsigned long long (const char *)'
|   |     `-ImplicitCastExpr 0x239ca0493e0 <col:25> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x239ca049368 <col:25> 'const char *' lvalue ParmVar 0x239ca047500 'chk' 'const char *'
|   |-IfStmt 0x239ca049ec8 <line:854:5, line:878:5>
|   | |-OpaqueValueExpr 0x239ca049eb0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x239ca049e90 <line:854:15, line:878:5>
|   |   |-IfStmt 0x239ca049dd0 <line:874:9, line:875:20>
|   |   | |-BinaryOperator 0x239ca049d68 <line:874:13, col:19> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x239ca049d50 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x239ca049d08 <col:13> 'int' lvalue Var 0x239ca047d08 'rv' 'int'
|   |   | | `-IntegerLiteral 0x239ca049d28 <col:19> 'int' 0
|   |   | `-ReturnStmt 0x239ca049dc0 <line:875:13, col:20>
|   |   |   `-ImplicitCastExpr 0x239ca049da8 <col:20> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x239ca049d88 <col:20> 'int' lvalue Var 0x239ca047d08 'rv' 'int'
|   |   `-IfStmt 0x239ca049e78 <line:876:9, line:877:20>
|   |     |-OpaqueValueExpr 0x239ca049e60 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x239ca049e50 <col:13, col:20>
|   |       `-IntegerLiteral 0x239ca049e28 <col:20> 'int' 0
|   |-IfStmt 0x239ca049f70 <line:881:5, line:882:16>
|   | |-OpaqueValueExpr 0x239ca049f58 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x239ca049f48 <col:9, col:16>
|   |   `-IntegerLiteral 0x239ca049f20 <col:16> 'int' 0
|   |-BinaryOperator 0x239ca049fe8 <line:884:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x239ca049f88 <col:5> 'int' lvalue Var 0x239ca047a80 'i' 'int'
|   | `-UnaryOperator 0x239ca049fd0 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x239ca049fa8 <col:10> 'int' 1
|   `-ReturnStmt 0x239ca0467c0 <line:895:5, col:12>
|     `-IntegerLiteral 0x239ca046798 <col:12> 'int' 0
|-FunctionDecl 0x239ca046ba0 <line:898:1, line:915:1> line:898:5 invalid X509_check_host 'int (int *, const char *, size_t, unsigned int, char **)'
| |-ParmVarDecl 0x239ca046850 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x239ca0468d0 <col:30, col:42> col:42 used chk 'const char *'
| |-ParmVarDecl 0x239ca046948 <col:47, col:54> col:54 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca0469c8 <line:899:21, col:34> col:34 used flags 'unsigned int'
| |-ParmVarDecl 0x239ca046a48 <col:41, col:48> col:48 used peername 'char **'
| `-CompoundStmt 0x239ca042818 <line:900:1, line:915:1>
|   |-IfStmt 0x239ca046de0 <line:901:5, line:902:17>
|   | |-BinaryOperator 0x239ca046d70 <line:901:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca046d40 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:901:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca046c80 <col:9> 'const char *' lvalue ParmVar 0x239ca0468d0 'chk' 'const char *'
|   | | `-ImplicitCastExpr 0x239ca046d58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x239ca046d20 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x239ca046cf8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x239ca046cb8 <col:26> 'int' 0
|   | `-ReturnStmt 0x239ca046dd0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:902:9, col:17>
|   |   `-UnaryOperator 0x239ca046db8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x239ca046d90 <col:17> 'int' 2
|   |-IfStmt 0x239ca0424e0 <line:908:5, line:911:17> has_else
|   | |-BinaryOperator 0x239ca046e88 <line:908:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca046e58 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca046df8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca046948 'chklen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca046e70 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x239ca046e30 <col:19> 'int' 0
|   | |-BinaryOperator 0x239ca046f78 <line:909:9, col:28> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x239ca046ea8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca046948 'chklen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x239ca046f38 <col:18, col:28> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x239ca046f20 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x239ca046ec8 <col:18> 'unsigned long long (const char *)' Function 0x239ca031f10 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x239ca046f60 <col:25> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x239ca046ee8 <col:25> 'const char *' lvalue ParmVar 0x239ca0468d0 'chk' 'const char *'
|   | `-IfStmt 0x239ca0424c8 <line:910:10, line:911:17>
|   |   |-CallExpr 0x239ca042410 <line:910:14, col:64> 'void *'
|   |   | |-ImplicitCastExpr 0x239ca0423f8 <col:14> 'void *(*)(const void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x239ca0471d0 <col:14> 'void *(const void *, int, unsigned long long)' Function 0x239ca046fe0 'memchr' 'void *(const void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x239ca042460 <col:21> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x239ca042448 <col:21> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x239ca047208 <col:21> 'const char *' lvalue ParmVar 0x239ca0468d0 'chk' 'const char *'
|   |   | |-CharacterLiteral 0x239ca047228 <col:26> 'int' 0
|   |   | `-ConditionalOperator 0x239ca042388 <col:32, col:58> 'unsigned long long'
|   |   |   |-BinaryOperator 0x239ca042298 <col:32, col:41> 'int' '>'
|   |   |   | |-ImplicitCastExpr 0x239ca042268 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x239ca047240 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca046948 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x239ca042280 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x239ca042240 <col:41> 'int' 1
|   |   |   |-BinaryOperator 0x239ca042330 <col:45, col:54> 'unsigned long long' '-'
|   |   |   | |-ImplicitCastExpr 0x239ca042300 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x239ca0422b8 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca046948 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x239ca042318 <col:54> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x239ca0422d8 <col:54> 'int' 1
|   |   |   `-ImplicitCastExpr 0x239ca042370 <col:58> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x239ca042350 <col:58> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca046948 'chklen' 'size_t':'unsigned long long'
|   |   `-ReturnStmt 0x239ca0424b8 <line:911:9, col:17>
|   |     `-UnaryOperator 0x239ca0424a0 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x239ca042478 <col:17> 'int' 2
|   `-IfStmt 0x239ca042750 <line:912:5, line:913:11>
|     |-BinaryOperator 0x239ca0426f8 <line:912:9, col:42> 'int' '&&'
|     | |-BinaryOperator 0x239ca042580 <col:9, col:18> 'int' '>'
|     | | |-ImplicitCastExpr 0x239ca042550 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | `-DeclRefExpr 0x239ca042508 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca046948 'chklen' 'size_t':'unsigned long long'
|     | | `-ImplicitCastExpr 0x239ca042568 <col:18> 'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x239ca042528 <col:18> 'int' 1
|     | `-BinaryOperator 0x239ca0426d8 <col:23, col:42> 'int' '=='
|     |   |-ImplicitCastExpr 0x239ca0426c0 <col:23, col:37> 'int' <IntegralCast>
|     |   | `-ImplicitCastExpr 0x239ca0426a8 <col:23, col:37> 'char' <LValueToRValue>
|     |   |   `-ArraySubscriptExpr 0x239ca042670 <col:23, col:37> 'const char' lvalue
|     |   |     |-ImplicitCastExpr 0x239ca042658 <col:23> 'const char *' <LValueToRValue>
|     |   |     | `-DeclRefExpr 0x239ca0425a0 <col:23> 'const char *' lvalue ParmVar 0x239ca0468d0 'chk' 'const char *'
|     |   |     `-BinaryOperator 0x239ca042638 <col:27, col:36> 'unsigned long long' '-'
|     |   |       |-ImplicitCastExpr 0x239ca042608 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|     |   |       | `-DeclRefExpr 0x239ca0425c0 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca046948 'chklen' 'size_t':'unsigned long long'
|     |   |       `-ImplicitCastExpr 0x239ca042620 <col:36> 'unsigned long long' <IntegralCast>
|     |   |         `-IntegerLiteral 0x239ca0425e0 <col:36> 'int' 1
|     |   `-CharacterLiteral 0x239ca042690 <col:42> 'int' 0
|     `-UnaryOperator 0x239ca042738 <line:913:9, col:11> 'size_t':'unsigned long long' prefix '--'
|       `-DeclRefExpr 0x239ca042718 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca046948 'chklen' 'size_t':'unsigned long long'
|-FunctionDecl 0x239ca046fe0 <line:910:14> col:14 implicit used memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x239ca047080 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x239ca0470e8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x239ca047150 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x239ca042b20 <line:917:1, line:934:1> line:917:5 invalid X509_check_email 'int (int *, const char *, size_t, unsigned int)'
| |-ParmVarDecl 0x239ca042858 <col:22, col:28> col:28 invalid x 'int *'
| |-ParmVarDecl 0x239ca0428d8 <col:31, col:43> col:43 used chk 'const char *'
| |-ParmVarDecl 0x239ca042950 <col:48, col:55> col:55 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca0429d0 <line:918:22, col:35> col:35 used flags 'unsigned int'
| `-CompoundStmt 0x239ca04a648 <line:919:1, line:934:1>
|   |-IfStmt 0x239ca042d58 <line:920:5, line:921:17>
|   | |-BinaryOperator 0x239ca042ce8 <line:920:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca042cb8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:920:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca042bf8 <col:9> 'const char *' lvalue ParmVar 0x239ca0428d8 'chk' 'const char *'
|   | | `-ImplicitCastExpr 0x239ca042cd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x239ca042c98 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x239ca042c70 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x239ca042c30 <col:26> 'int' 0
|   | `-ReturnStmt 0x239ca042d48 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:921:9, col:17>
|   |   `-UnaryOperator 0x239ca042d30 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x239ca042d08 <col:17> 'int' 2
|   |-IfStmt 0x239ca04a2c0 <line:927:5, line:930:17> has_else
|   | |-BinaryOperator 0x239ca042e00 <line:927:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca042dd0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca042d70 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca042950 'chklen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x239ca042de8 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x239ca042da8 <col:19> 'int' 0
|   | |-BinaryOperator 0x239ca042f30 <line:928:9, col:36> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x239ca042e20 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca042950 'chklen' 'size_t':'unsigned long long'
|   | | `-CallExpr 0x239ca042ef0 <col:18, col:36> 'unsigned long long'
|   | |   |-ImplicitCastExpr 0x239ca042ed8 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x239ca042e40 <col:18> 'unsigned long long (const char *)' Function 0x239ca031f10 'strlen' 'unsigned long long (const char *)'
|   | |   `-ImplicitCastExpr 0x239ca042f18 <col:25, col:33> 'const char *' <NoOp>
|   | |     `-CStyleCastExpr 0x239ca042eb0 <col:25, col:33> 'char *' <NoOp>
|   | |       `-ImplicitCastExpr 0x239ca042e98 <col:33> 'const char *' <LValueToRValue> part_of_explicit_cast
|   | |         `-DeclRefExpr 0x239ca042e60 <col:33> 'const char *' lvalue ParmVar 0x239ca0428d8 'chk' 'const char *'
|   | `-IfStmt 0x239ca043228 <line:929:10, line:930:17>
|   |   |-CallExpr 0x239ca043170 <line:929:14, col:64> 'void *'
|   |   | |-ImplicitCastExpr 0x239ca043158 <col:14> 'void *(*)(const void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x239ca042f50 <col:14> 'void *(const void *, int, unsigned long long)' Function 0x239ca046fe0 'memchr' 'void *(const void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x239ca0431c0 <col:21> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x239ca0431a8 <col:21> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x239ca042f70 <col:21> 'const char *' lvalue ParmVar 0x239ca0428d8 'chk' 'const char *'
|   |   | |-CharacterLiteral 0x239ca042f90 <col:26> 'int' 0
|   |   | `-ConditionalOperator 0x239ca043110 <col:32, col:58> 'unsigned long long'
|   |   |   |-BinaryOperator 0x239ca043020 <col:32, col:41> 'int' '>'
|   |   |   | |-ImplicitCastExpr 0x239ca042ff0 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x239ca042fa8 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca042950 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x239ca043008 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x239ca042fc8 <col:41> 'int' 1
|   |   |   |-BinaryOperator 0x239ca0430b8 <col:45, col:54> 'unsigned long long' '-'
|   |   |   | |-ImplicitCastExpr 0x239ca043088 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x239ca043040 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca042950 'chklen' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x239ca0430a0 <col:54> 'unsigned long long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x239ca043060 <col:54> 'int' 1
|   |   |   `-ImplicitCastExpr 0x239ca0430f8 <col:58> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x239ca0430d8 <col:58> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca042950 'chklen' 'size_t':'unsigned long long'
|   |   `-ReturnStmt 0x239ca043218 <line:930:9, col:17>
|   |     `-UnaryOperator 0x239ca043200 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x239ca0431d8 <col:17> 'int' 2
|   `-IfStmt 0x239ca04a530 <line:931:5, line:932:11>
|     |-BinaryOperator 0x239ca04a4d8 <line:931:9, col:42> 'int' '&&'
|     | |-BinaryOperator 0x239ca04a360 <col:9, col:18> 'int' '>'
|     | | |-ImplicitCastExpr 0x239ca04a330 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | | `-DeclRefExpr 0x239ca04a2e8 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca042950 'chklen' 'size_t':'unsigned long long'
|     | | `-ImplicitCastExpr 0x239ca04a348 <col:18> 'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x239ca04a308 <col:18> 'int' 1
|     | `-BinaryOperator 0x239ca04a4b8 <col:23, col:42> 'int' '=='
|     |   |-ImplicitCastExpr 0x239ca04a4a0 <col:23, col:37> 'int' <IntegralCast>
|     |   | `-ImplicitCastExpr 0x239ca04a488 <col:23, col:37> 'char' <LValueToRValue>
|     |   |   `-ArraySubscriptExpr 0x239ca04a450 <col:23, col:37> 'const char' lvalue
|     |   |     |-ImplicitCastExpr 0x239ca04a438 <col:23> 'const char *' <LValueToRValue>
|     |   |     | `-DeclRefExpr 0x239ca04a380 <col:23> 'const char *' lvalue ParmVar 0x239ca0428d8 'chk' 'const char *'
|     |   |     `-BinaryOperator 0x239ca04a418 <col:27, col:36> 'unsigned long long' '-'
|     |   |       |-ImplicitCastExpr 0x239ca04a3e8 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|     |   |       | `-DeclRefExpr 0x239ca04a3a0 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca042950 'chklen' 'size_t':'unsigned long long'
|     |   |       `-ImplicitCastExpr 0x239ca04a400 <col:36> 'unsigned long long' <IntegralCast>
|     |   |         `-IntegerLiteral 0x239ca04a3c0 <col:36> 'int' 1
|     |   `-CharacterLiteral 0x239ca04a470 <col:42> 'int' 0
|     `-UnaryOperator 0x239ca04a518 <line:932:9, col:11> 'size_t':'unsigned long long' prefix '--'
|       `-DeclRefExpr 0x239ca04a4f8 <col:11> 'size_t':'unsigned long long' lvalue ParmVar 0x239ca042950 'chklen' 'size_t':'unsigned long long'
|-FunctionDecl 0x239ca04a950 <line:936:1, line:942:1> line:936:5 invalid X509_check_ip 'int (int *, const unsigned char *, size_t, unsigned int)'
| |-ParmVarDecl 0x239ca04a688 <col:19, col:25> col:25 invalid x 'int *'
| |-ParmVarDecl 0x239ca04a708 <col:28, col:49> col:49 used chk 'const unsigned char *'
| |-ParmVarDecl 0x239ca04a780 <col:54, col:61> col:61 used chklen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x239ca04a800 <line:937:19, col:32> col:32 used flags 'unsigned int'
| `-CompoundStmt 0x239ca04ad10 <line:938:1, line:942:1>
|   `-IfStmt 0x239ca04ab88 <line:939:5, line:940:17>
|     |-BinaryOperator 0x239ca04ab18 <line:939:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|     | |-ImplicitCastExpr 0x239ca04aae8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:939:9> 'const unsigned char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x239ca04aa28 <col:9> 'const unsigned char *' lvalue ParmVar 0x239ca04a708 'chk' 'const unsigned char *'
|     | `-ImplicitCastExpr 0x239ca04ab00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|     |   `-ParenExpr 0x239ca04aac8 <col:17, col:27> 'void *'
|     |     `-CStyleCastExpr 0x239ca04aaa0 <col:18, col:26> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0x239ca04aa60 <col:26> 'int' 0
|     `-ReturnStmt 0x239ca04ab78 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:940:9, col:17>
|       `-UnaryOperator 0x239ca04ab60 <col:16, col:17> 'int' prefix '-'
|         `-IntegerLiteral 0x239ca04ab38 <col:17> 'int' 2
|-FunctionDecl 0x239ca04af30 <line:944:1, line:955:1> line:944:5 invalid X509_check_ip_asc 'int (int *, const char *, unsigned int)'
| |-ParmVarDecl 0x239ca04ad40 <col:23, col:29> col:29 invalid x 'int *'
| |-ParmVarDecl 0x239ca04adc0 <col:32, col:44> col:44 used ipasc 'const char *'
| |-ParmVarDecl 0x239ca04ae40 <col:51, col:64> col:64 used flags 'unsigned int'
| `-CompoundStmt 0x239ca043780 <line:945:1, line:955:1>
|   |-DeclStmt 0x239ca04b108 <line:946:5, col:28>
|   | `-VarDecl 0x239ca04b0a0 <col:5, col:27> col:19 used ipout 'unsigned char [16]'
|   |-DeclStmt 0x239ca04b198 <line:947:5, col:17>
|   | `-VarDecl 0x239ca04b130 <col:5, col:12> col:12 used iplen 'size_t':'unsigned long long'
|   |-IfStmt 0x239ca0432a0 <line:949:5, line:950:17>
|   | |-BinaryOperator 0x239ca04b2a0 <line:949:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca04b270 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:949:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca04b1b0 <col:9> 'const char *' lvalue ParmVar 0x239ca04adc0 'ipasc' 'const char *'
|   | | `-ImplicitCastExpr 0x239ca04b288 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x239ca04b250 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x239ca04b228 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x239ca04b1e8 <col:26> 'int' 0
|   | `-ReturnStmt 0x239ca043290 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:950:9, col:17>
|   |   `-UnaryOperator 0x239ca043278 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x239ca043250 <col:17> 'int' 2
|   |-BinaryOperator 0x239ca043508 <line:951:5, col:43> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x239ca0432b8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x239ca04b130 'iplen' 'size_t':'unsigned long long'
|   | `-CStyleCastExpr 0x239ca0434e0 <col:13, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-CallExpr 0x239ca043470 <col:21, col:43> 'int'
|   |     |-ImplicitCastExpr 0x239ca043458 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x239ca0433e0 <col:21> 'int ()' Function 0x239ca043318 'a2i_ipadd' 'int ()'
|   |     |-ImplicitCastExpr 0x239ca0434a0 <col:31> 'unsigned char *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x239ca043400 <col:31> 'unsigned char [16]' lvalue Var 0x239ca04b0a0 'ipout' 'unsigned char [16]'
|   |     `-ImplicitCastExpr 0x239ca0434b8 <col:38> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x239ca043438 <col:38> 'const char *' lvalue ParmVar 0x239ca04adc0 'ipasc' 'const char *'
|   `-IfStmt 0x239ca043610 <line:952:5, line:953:17>
|     |-BinaryOperator 0x239ca0435a0 <line:952:9, col:18> 'int' '=='
|     | |-ImplicitCastExpr 0x239ca043570 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|     | | `-DeclRefExpr 0x239ca043528 <col:9> 'size_t':'unsigned long long' lvalue Var 0x239ca04b130 'iplen' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x239ca043588 <col:18> 'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x239ca043548 <col:18> 'int' 0
|     `-ReturnStmt 0x239ca043600 <line:953:9, col:17>
|       `-UnaryOperator 0x239ca0435e8 <col:16, col:17> 'int' prefix '-'
|         `-IntegerLiteral 0x239ca0435c0 <col:17> 'int' 2
|-FunctionDecl 0x239ca0438b0 <line:962:1, line:983:1> line:962:20 invalid a2i_IPADDRESS 'int *(const char *)'
| |-ParmVarDecl 0x239ca0437d0 <col:34, col:46> col:46 used ipasc 'const char *'
| `-CompoundStmt 0x239ca044378 <line:963:1, line:983:1>
|   |-DeclStmt 0x239ca043a40 <line:964:5, col:28>
|   | `-VarDecl 0x239ca0439d8 <col:5, col:27> col:19 used ipout 'unsigned char [16]'
|   |-DeclStmt 0x239ca043ad8 <line:966:5, col:14>
|   | `-VarDecl 0x239ca043a70 <col:5, col:9> col:9 used iplen 'int'
|   |-BinaryOperator 0x239ca043c18 <line:970:5, col:35> 'int' '='
|   | |-DeclRefExpr 0x239ca043af0 <col:5> 'int' lvalue Var 0x239ca043a70 'iplen' 'int'
|   | `-CallExpr 0x239ca043bb8 <col:13, col:35> 'int'
|   |   |-ImplicitCastExpr 0x239ca043ba0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x239ca043b28 <col:13> 'int ()' Function 0x239ca043318 'a2i_ipadd' 'int ()'
|   |   |-ImplicitCastExpr 0x239ca043be8 <col:23> 'unsigned char *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x239ca043b48 <col:23> 'unsigned char [16]' lvalue Var 0x239ca0439d8 'ipout' 'unsigned char [16]'
|   |   `-ImplicitCastExpr 0x239ca043c00 <col:30> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca043b80 <col:30> 'const char *' lvalue ParmVar 0x239ca0437d0 'ipasc' 'const char *'
|   |-IfStmt 0x239ca043d38 <line:972:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x239ca043c70 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:972:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x239ca043c58 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x239ca043c38 <col:10> 'int' lvalue Var 0x239ca043a70 'iplen' 'int'
|   | `-ReturnStmt 0x239ca043d28 <line:973:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x239ca043d10 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x239ca043cf0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca043cc8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca043c88 <col:26> 'int' 0
|   |-IfStmt 0x239ca043fe8 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:976:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x239ca043fd0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x239ca043fc0 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:977:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x239ca043fa8 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x239ca043f88 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca043f60 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca043f20 <col:26> 'int' 0
|   `-IfStmt 0x239ca044360 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:978:5, line:981:5>
|     |-OpaqueValueExpr 0x239ca044348 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x239ca044330 <line:978:52, line:981:5>
|       `-ReturnStmt 0x239ca044320 <line:980:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x239ca044308 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x239ca0442e8 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x239ca0442c0 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x239ca044280 <col:26> 'int' 0
|-FunctionDecl 0x239ca044480 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:985:1, line:1025:1> line:985:20 invalid a2i_IPADDRESS_NC 'int *(const char *)'
| |-ParmVarDecl 0x239ca0443d0 <col:37, col:49> col:49 used ipasc 'const char *'
| `-CompoundStmt 0x239ca04ed28 <line:986:1, line:1025:1>
|   |-DeclStmt 0x239ca0446d8 <line:988:5, col:28>
|   | `-VarDecl 0x239ca044670 <col:5, col:27> col:19 used ipout 'unsigned char [32]'
|   |-DeclStmt 0x239ca0448a8 <line:989:5, col:27>
|   | |-VarDecl 0x239ca044708 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\x509v3\v3_utl.c:989:11 used iptmp 'char *' cinit
|   | | `-ImplicitCastExpr 0x239ca0447f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x239ca0447d8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x239ca0447b0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x239ca044770 <col:26> 'int' 0
|   | `-VarDecl 0x239ca044828 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:989:5, col:26> col:26 used p 'char *'
|   |-DeclStmt 0x239ca0449d8 <line:990:5, col:23>
|   | |-VarDecl 0x239ca0448d8 <col:5, col:9> col:9 used iplen1 'int'
|   | `-VarDecl 0x239ca044958 <col:5, col:17> col:17 used iplen2 'int'
|   |-BinaryOperator 0x239ca044cf8 <line:991:5, col:26> 'char *' '='
|   | |-DeclRefExpr 0x239ca0449f0 <col:5> 'char *' lvalue Var 0x239ca044828 'p' 'char *'
|   | `-CallExpr 0x239ca044cb0 <col:9, col:26> 'char *'
|   |   |-ImplicitCastExpr 0x239ca044c98 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x239ca044be8 <col:9> 'char *(const char *, int)' Function 0x239ca044a68 'strchr' 'char *(const char *, int)'
|   |   |-ImplicitCastExpr 0x239ca044ce0 <col:16> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239ca044c20 <col:16> 'const char *' lvalue ParmVar 0x239ca0443d0 'ipasc' 'const char *'
|   |   `-CharacterLiteral 0x239ca044c40 <col:23> 'int' 47
|   |-IfStmt 0x239ca044e18 <line:992:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x239ca044d50 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:992:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x239ca044d38 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x239ca044d18 <col:10> 'char *' lvalue Var 0x239ca044828 'p' 'char *'
|   | `-ReturnStmt 0x239ca044e08 <line:993:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x239ca044df0 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x239ca044dd0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca044da8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca044d68 <col:26> 'int' 0
|   |-BinaryOperator 0x239ca044f18 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:994:5, col:33> 'char *' '='
|   | |-DeclRefExpr 0x239ca044e30 <col:5> 'char *' lvalue Var 0x239ca044708 'iptmp' 'char *'
|   | `-ImplicitCastExpr 0x239ca044f00 <col:13, col:33> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x239ca044ec0 <col:13, col:33> 'int'
|   |     |-ImplicitCastExpr 0x239ca044ea8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x239ca044e68 <col:13> 'int ()' Function 0x239ca02c460 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x239ca044ee8 <col:28> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x239ca044e88 <col:28> 'const char *' lvalue ParmVar 0x239ca0443d0 'ipasc' 'const char *'
|   |-IfStmt 0x239ca045038 <line:995:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-UnaryOperator 0x239ca044f70 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:995:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x239ca044f58 <col:10> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x239ca044f38 <col:10> 'char *' lvalue Var 0x239ca044708 'iptmp' 'char *'
|   | `-ReturnStmt 0x239ca045028 <line:996:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x239ca045010 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x239ca044ff0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x239ca044fc8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x239ca044f88 <col:26> 'int' 0
|   |-BinaryOperator 0x239ca045178 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:997:5, col:27> 'char *' '='
|   | |-DeclRefExpr 0x239ca045050 <col:5> 'char *' lvalue Var 0x239ca044828 'p' 'char *'
|   | `-BinaryOperator 0x239ca045158 <col:9, col:27> 'char *' '+'
|   |   |-ImplicitCastExpr 0x239ca045140 <col:9> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x239ca045070 <col:9> 'char *' lvalue Var 0x239ca044708 'iptmp' 'char *'
|   |   `-ParenExpr 0x239ca045120 <col:17, col:27> 'long long'
|   |     `-BinaryOperator 0x239ca045100 <col:18, col:22> 'long long' '-'
|   |       |-ImplicitCastExpr 0x239ca0450d0 <col:18> 'char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x239ca045090 <col:18> 'char *' lvalue Var 0x239ca044828 'p' 'char *'
|   |       `-ImplicitCastExpr 0x239ca0450e8 <col:22> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x239ca0450b0 <col:22> 'const char *' lvalue ParmVar 0x239ca0443d0 'ipasc' 'const char *'
|   |-BinaryOperator 0x239ca045228 <line:998:5, col:12> 'char' '='
|   | |-UnaryOperator 0x239ca0451d0 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x239ca0451b8 <col:6, col:7> 'char *' postfix '++'
|   | |   `-DeclRefExpr 0x239ca045198 <col:6> 'char *' lvalue Var 0x239ca044828 'p' 'char *'
|   | `-ImplicitCastExpr 0x239ca045210 <col:12> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x239ca0451e8 <col:12> 'int' 0
|   |-BinaryOperator 0x239ca04e428 <line:1000:5, col:36> 'int' '='
|   | |-DeclRefExpr 0x239ca04e300 <col:5> 'int' lvalue Var 0x239ca0448d8 'iplen1' 'int'
|   | `-CallExpr 0x239ca04e3c8 <col:14, col:36> 'int'
|   |   |-ImplicitCastExpr 0x239ca04e3b0 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x239ca04e338 <col:14> 'int ()' Function 0x239ca043318 'a2i_ipadd' 'int ()'
|   |   |-ImplicitCastExpr 0x239ca04e3f8 <col:24> 'unsigned char *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x239ca04e358 <col:24> 'unsigned char [32]' lvalue Var 0x239ca044670 'ipout' 'unsigned char [32]'
|   |   `-ImplicitCastExpr 0x239ca04e410 <col:31> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca04e390 <col:31> 'char *' lvalue Var 0x239ca044708 'iptmp' 'char *'
|   |-IfStmt 0x239ca04e500 <line:1002:5, line:1003:14>
|   | |-UnaryOperator 0x239ca04e480 <line:1002:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x239ca04e468 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x239ca04e448 <col:10> 'int' lvalue Var 0x239ca0448d8 'iplen1' 'int'
|   | `-GotoStmt 0x239ca04e4e8 <line:1003:9, col:14> 'err' 0x239ca04e498
|   |-BinaryOperator 0x239ca04e680 <line:1005:5, col:41> 'int' '='
|   | |-DeclRefExpr 0x239ca04e518 <col:5> 'int' lvalue Var 0x239ca044958 'iplen2' 'int'
|   | `-CallExpr 0x239ca04e638 <col:14, col:41> 'int'
|   |   |-ImplicitCastExpr 0x239ca04e620 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x239ca04e550 <col:14> 'int ()' Function 0x239ca043318 'a2i_ipadd' 'int ()'
|   |   |-BinaryOperator 0x239ca04e5e0 <col:24, col:32> 'unsigned char *' '+'
|   |   | |-ImplicitCastExpr 0x239ca04e5b0 <col:24> 'unsigned char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x239ca04e570 <col:24> 'unsigned char [32]' lvalue Var 0x239ca044670 'ipout' 'unsigned char [32]'
|   |   | `-ImplicitCastExpr 0x239ca04e5c8 <col:32> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x239ca04e590 <col:32> 'int' lvalue Var 0x239ca0448d8 'iplen1' 'int'
|   |   `-ImplicitCastExpr 0x239ca04e668 <col:40> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca04e600 <col:40> 'char *' lvalue Var 0x239ca044828 'p' 'char *'
|   |-CallExpr 0x239ca04e6f8 <line:1007:5, col:23> 'int'
|   | |-ImplicitCastExpr 0x239ca04e6e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x239ca04e6a0 <col:5> 'int ()' Function 0x239ca0263d0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x239ca04e720 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x239ca04e6c0 <col:18> 'char *' lvalue Var 0x239ca044708 'iptmp' 'char *'
|   |-BinaryOperator 0x239ca04e7f8 <line:1008:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   | |-DeclRefExpr 0x239ca04e738 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:1008:5> 'char *' lvalue Var 0x239ca044708 'iptmp' 'char *'
|   | `-ImplicitCastExpr 0x239ca04e7e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   `-ParenExpr 0x239ca04e7c0 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x239ca04e798 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x239ca04e758 <col:26> 'int' 0
|   |-IfStmt 0x239ca04e950 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:1010:5, line:1011:14>
|   | |-BinaryOperator 0x239ca04e918 <line:1010:9, col:37> 'int' '||'
|   | | |-UnaryOperator 0x239ca04e850 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x239ca04e838 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x239ca04e818 <col:10> 'int' lvalue Var 0x239ca044958 'iplen2' 'int'
|   | | `-ParenExpr 0x239ca04e8f8 <col:20, col:37> 'int'
|   | |   `-BinaryOperator 0x239ca04e8d8 <col:21, col:31> 'int' '!='
|   | |     |-ImplicitCastExpr 0x239ca04e8a8 <col:21> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x239ca04e868 <col:21> 'int' lvalue Var 0x239ca0448d8 'iplen1' 'int'
|   | |     `-ImplicitCastExpr 0x239ca04e8c0 <col:31> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x239ca04e888 <col:31> 'int' lvalue Var 0x239ca044958 'iplen2' 'int'
|   | `-GotoStmt 0x239ca04e938 <line:1011:9, col:14> 'err' 0x239ca04e498
|   |-IfStmt 0x239ca04ea78 <line:1014:5, line:1015:14>
|   | |-OpaqueValueExpr 0x239ca04ea60 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x239ca04ea48 <col:9, col:14> 'err' 0x239ca04e498
|   |-IfStmt 0x239ca04eb90 <line:1016:5, line:1017:14>
|   | |-OpaqueValueExpr 0x239ca04eb78 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x239ca04eb60 <col:9, col:14> 'err' 0x239ca04e498
|   |-LabelStmt 0x239ca04ec40 <line:1021:2, line:1022:23> 'err'
|   | `-CallExpr 0x239ca04ec00 <col:5, col:23> 'int'
|   |   |-ImplicitCastExpr 0x239ca04ebe8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x239ca04eba8 <col:5> 'int ()' Function 0x239ca0263d0 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x239ca04ec28 <col:18> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca04ebc8 <col:18> 'char *' lvalue Var 0x239ca044708 'iptmp' 'char *'
|   `-ReturnStmt 0x239ca04ed18 <line:1024:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x239ca04ed00 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x239ca04ece0 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x239ca04ecb8 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x239ca04ec78 <col:26> 'int' 0
|-FunctionDecl 0x239ca044a68 <.//openssl//file_jk/after\crypto\x509v3\v3_utl.c:991:9> col:9 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x239ca044b08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x239ca044b70 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x239ca04ef38 prev 0x239ca043318 <line:1027:1, line:1040:1> line:1027:5 used a2i_ipadd 'int (unsigned char *, const char *)'
| |-ParmVarDecl 0x239ca04ede8 <col:15, col:30> col:30 used ipout 'unsigned char *'
| |-ParmVarDecl 0x239ca04ee68 <col:37, col:49> col:49 used ipasc 'const char *'
| `-CompoundStmt 0x239ca04d438 <line:1028:1, line:1040:1>
|   `-IfStmt 0x239ca04d410 <line:1031:5, line:1039:5> has_else
|     |-CallExpr 0x239ca04f070 <line:1031:9, col:26> 'char *'
|     | |-ImplicitCastExpr 0x239ca04f058 <col:9> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x239ca04efe8 <col:9> 'char *(const char *, int)' Function 0x239ca044a68 'strchr' 'char *(const char *, int)'
|     | |-ImplicitCastExpr 0x239ca04f0a0 <col:16> 'const char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x239ca04f008 <col:16> 'const char *' lvalue ParmVar 0x239ca04ee68 'ipasc' 'const char *'
|     | `-CharacterLiteral 0x239ca04f028 <col:23> 'int' 58
|     |-CompoundStmt 0x239ca04f260 <col:29, line:1035:5>
|     | |-IfStmt 0x239ca04f210 <line:1032:9, line:1033:20>
|     | | |-UnaryOperator 0x239ca04f1c0 <line:1032:13, col:40> 'int' prefix '!' cannot overflow
|     | | | `-CallExpr 0x239ca04f160 <col:14, col:40> 'int'
|     | | |   |-ImplicitCastExpr 0x239ca04f148 <col:14> 'int (*)(unsigned char *, const char *)' <FunctionToPointerDecay>
|     | | |   | `-DeclRefExpr 0x239ca04f0b8 <col:14> 'int (unsigned char *, const char *)' Function 0x239ca024510 'ipv6_from_asc' 'int (unsigned char *, const char *)'
|     | | |   |-ImplicitCastExpr 0x239ca04f190 <col:28> 'unsigned char *' <LValueToRValue>
|     | | |   | `-DeclRefExpr 0x239ca04f0d8 <col:28> 'unsigned char *' lvalue ParmVar 0x239ca04ede8 'ipout' 'unsigned char *'
|     | | |   `-ImplicitCastExpr 0x239ca04f1a8 <col:35> 'const char *' <LValueToRValue>
|     | | |     `-DeclRefExpr 0x239ca04f0f8 <col:35> 'const char *' lvalue ParmVar 0x239ca04ee68 'ipasc' 'const char *'
|     | | `-ReturnStmt 0x239ca04f200 <line:1033:13, col:20>
|     | |   `-IntegerLiteral 0x239ca04f1d8 <col:20> 'int' 0
|     | `-ReturnStmt 0x239ca04f250 <line:1034:9, col:16>
|     |   `-IntegerLiteral 0x239ca04f228 <col:16> 'int' 16
|     `-CompoundStmt 0x239ca04d3f0 <line:1035:12, line:1039:5>
|       |-IfStmt 0x239ca04d3a0 <line:1036:9, line:1037:20>
|       | |-UnaryOperator 0x239ca04d350 <line:1036:13, col:40> 'int' prefix '!' cannot overflow
|       | | `-CallExpr 0x239ca04d2f0 <col:14, col:40> 'int'
|       | |   |-ImplicitCastExpr 0x239ca04f2e0 <col:14> 'int (*)(unsigned char *, const char *)' <FunctionToPointerDecay>
|       | |   | `-DeclRefExpr 0x239ca04f280 <col:14> 'int (unsigned char *, const char *)' Function 0x239ca0242e0 'ipv4_from_asc' 'int (unsigned char *, const char *)'
|       | |   |-ImplicitCastExpr 0x239ca04d320 <col:28> 'unsigned char *' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x239ca04f2a0 <col:28> 'unsigned char *' lvalue ParmVar 0x239ca04ede8 'ipout' 'unsigned char *'
|       | |   `-ImplicitCastExpr 0x239ca04d338 <col:35> 'const char *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x239ca04f2c0 <col:35> 'const char *' lvalue ParmVar 0x239ca04ee68 'ipasc' 'const char *'
|       | `-ReturnStmt 0x239ca04d390 <line:1037:13, col:20>
|       |   `-IntegerLiteral 0x239ca04d368 <col:20> 'int' 0
|       `-ReturnStmt 0x239ca04d3e0 <line:1038:9, col:16>
|         `-IntegerLiteral 0x239ca04d3b8 <col:16> 'int' 4
|-FunctionDecl 0x239ca04d5b8 prev 0x239ca0242e0 <line:1042:1, line:1055:1> line:1042:12 used ipv4_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x239ca04d468 <col:26, col:41> col:41 used v4 'unsigned char *'
| |-ParmVarDecl 0x239ca04d4e8 <col:45, col:57> col:57 used in 'const char *'
| `-CompoundStmt 0x239ca04c678 <line:1043:1, line:1055:1>
|   |-DeclStmt 0x239ca04d890 <line:1044:5, col:23>
|   | |-VarDecl 0x239ca04d680 <col:5, col:9> col:9 used a0 'int'
|   | |-VarDecl 0x239ca04d700 <col:5, col:13> col:13 used a1 'int'
|   | |-VarDecl 0x239ca04d780 <col:5, col:17> col:17 used a2 'int'
|   | `-VarDecl 0x239ca04d800 <col:5, col:21> col:21 used a3 'int'
|   |-IfStmt 0x239ca04dc48 <line:1045:5, line:1046:16>
|   | |-BinaryOperator 0x239ca04dbf0 <line:1045:9, col:58> 'int' '!='
|   | | |-CallExpr 0x239ca04db30 <col:9, col:53> 'int'
|   | | | |-ImplicitCastExpr 0x239ca04db18 <col:9> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x239ca04d8a8 <col:9> 'int (const char *restrict, const char *restrict, ...)' Function 0x239c9fd7428 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   | | | |-ImplicitCastExpr 0x239ca04db80 <col:16> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x239ca04d8c8 <col:16> 'const char *' lvalue ParmVar 0x239ca04d4e8 'in' 'const char *'
|   | | | |-ImplicitCastExpr 0x239ca04dbb0 <col:20> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x239ca04db98 <col:20> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x239ca04d928 <col:20> 'char [12]' lvalue "%d.%d.%d.%d"
|   | | | |-UnaryOperator 0x239ca04d988 <col:35, col:36> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x239ca04d950 <col:36> 'int' lvalue Var 0x239ca04d680 'a0' 'int'
|   | | | |-UnaryOperator 0x239ca04d9d8 <col:40, col:41> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x239ca04d9a0 <col:41> 'int' lvalue Var 0x239ca04d700 'a1' 'int'
|   | | | |-UnaryOperator 0x239ca04da28 <col:45, col:46> 'int *' prefix '&' cannot overflow
|   | | | | `-DeclRefExpr 0x239ca04d9f0 <col:46> 'int' lvalue Var 0x239ca04d780 'a2' 'int'
|   | | | `-UnaryOperator 0x239ca04da78 <col:50, col:51> 'int *' prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x239ca04da40 <col:51> 'int' lvalue Var 0x239ca04d800 'a3' 'int'
|   | | `-IntegerLiteral 0x239ca04dbc8 <col:58> 'int' 4
|   | `-ReturnStmt 0x239ca04dc38 <line:1046:9, col:16>
|   |   `-IntegerLiteral 0x239ca04dc10 <col:16> 'int' 0
|   |-IfStmt 0x239ca04e278 <line:1047:5, line:1049:16>
|   | |-BinaryOperator 0x239ca04e220 <line:1047:9, line:1048:59> 'int' '||'
|   | | |-BinaryOperator 0x239ca04e160 <line:1047:9, line:1048:45> 'int' '||'
|   | | | |-BinaryOperator 0x239ca04e0a0 <line:1047:9, line:1048:33> 'int' '||'
|   | | | | |-BinaryOperator 0x239ca04dfe0 <line:1047:9, line:1048:19> 'int' '||'
|   | | | | | |-BinaryOperator 0x239ca04df20 <line:1047:9, col:56> 'int' '||'
|   | | | | | | |-BinaryOperator 0x239ca04de60 <col:9, col:42> 'int' '||'
|   | | | | | | | |-BinaryOperator 0x239ca04dda0 <col:9, col:30> 'int' '||'
|   | | | | | | | | |-ParenExpr 0x239ca04dce0 <col:9, col:16> 'int'
|   | | | | | | | | | `-BinaryOperator 0x239ca04dcc0 <col:10, col:15> 'int' '<'
|   | | | | | | | | |   |-ImplicitCastExpr 0x239ca04dca8 <col:10> 'int' <LValueToRValue>
|   | | | | | | | | |   | `-DeclRefExpr 0x239ca04dc60 <col:10> 'int' lvalue Var 0x239ca04d680 'a0' 'int'
|   | | | | | | | | |   `-IntegerLiteral 0x239ca04dc80 <col:15> 'int' 0
|   | | | | | | | | `-ParenExpr 0x239ca04dd80 <col:21, col:30> 'int'
|   | | | | | | | |   `-BinaryOperator 0x239ca04dd60 <col:22, col:27> 'int' '>'
|   | | | | | | | |     |-ImplicitCastExpr 0x239ca04dd48 <col:22> 'int' <LValueToRValue>
|   | | | | | | | |     | `-DeclRefExpr 0x239ca04dd00 <col:22> 'int' lvalue Var 0x239ca04d680 'a0' 'int'
|   | | | | | | | |     `-IntegerLiteral 0x239ca04dd20 <col:27> 'int' 255
|   | | | | | | | `-ParenExpr 0x239ca04de40 <col:35, col:42> 'int'
|   | | | | | | |   `-BinaryOperator 0x239ca04de20 <col:36, col:41> 'int' '<'
|   | | | | | | |     |-ImplicitCastExpr 0x239ca04de08 <col:36> 'int' <LValueToRValue>
|   | | | | | | |     | `-DeclRefExpr 0x239ca04ddc0 <col:36> 'int' lvalue Var 0x239ca04d700 'a1' 'int'
|   | | | | | | |     `-IntegerLiteral 0x239ca04dde0 <col:41> 'int' 0
|   | | | | | | `-ParenExpr 0x239ca04df00 <col:47, col:56> 'int'
|   | | | | | |   `-BinaryOperator 0x239ca04dee0 <col:48, col:53> 'int' '>'
|   | | | | | |     |-ImplicitCastExpr 0x239ca04dec8 <col:48> 'int' <LValueToRValue>
|   | | | | | |     | `-DeclRefExpr 0x239ca04de80 <col:48> 'int' lvalue Var 0x239ca04d700 'a1' 'int'
|   | | | | | |     `-IntegerLiteral 0x239ca04dea0 <col:53> 'int' 255
|   | | | | | `-ParenExpr 0x239ca04dfc0 <line:1048:12, col:19> 'int'
|   | | | | |   `-BinaryOperator 0x239ca04dfa0 <col:13, col:18> 'int' '<'
|   | | | | |     |-ImplicitCastExpr 0x239ca04df88 <col:13> 'int' <LValueToRValue>
|   | | | | |     | `-DeclRefExpr 0x239ca04df40 <col:13> 'int' lvalue Var 0x239ca04d780 'a2' 'int'
|   | | | | |     `-IntegerLiteral 0x239ca04df60 <col:18> 'int' 0
|   | | | | `-ParenExpr 0x239ca04e080 <col:24, col:33> 'int'
|   | | | |   `-BinaryOperator 0x239ca04e060 <col:25, col:30> 'int' '>'
|   | | | |     |-ImplicitCastExpr 0x239ca04e048 <col:25> 'int' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x239ca04e000 <col:25> 'int' lvalue Var 0x239ca04d780 'a2' 'int'
|   | | | |     `-IntegerLiteral 0x239ca04e020 <col:30> 'int' 255
|   | | | `-ParenExpr 0x239ca04e140 <col:38, col:45> 'int'
|   | | |   `-BinaryOperator 0x239ca04e120 <col:39, col:44> 'int' '<'
|   | | |     |-ImplicitCastExpr 0x239ca04e108 <col:39> 'int' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x239ca04e0c0 <col:39> 'int' lvalue Var 0x239ca04d800 'a3' 'int'
|   | | |     `-IntegerLiteral 0x239ca04e0e0 <col:44> 'int' 0
|   | | `-ParenExpr 0x239ca04e200 <col:50, col:59> 'int'
|   | |   `-BinaryOperator 0x239ca04e1e0 <col:51, col:56> 'int' '>'
|   | |     |-ImplicitCastExpr 0x239ca04e1c8 <col:51> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x239ca04e180 <col:51> 'int' lvalue Var 0x239ca04d800 'a3' 'int'
|   | |     `-IntegerLiteral 0x239ca04e1a0 <col:56> 'int' 255
|   | `-ReturnStmt 0x239ca04e268 <line:1049:9, col:16>
|   |   `-IntegerLiteral 0x239ca04e240 <col:16> 'int' 0
|   |-BinaryOperator 0x239ca04c350 <line:1050:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x239ca04c2e0 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x239ca04e2d8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca04e290 <col:5> 'unsigned char *' lvalue ParmVar 0x239ca04d468 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x239ca04e2b0 <col:8> 'int' 0
|   | `-ImplicitCastExpr 0x239ca04c338 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x239ca04c320 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca04c300 <col:13> 'int' lvalue Var 0x239ca04d680 'a0' 'int'
|   |-BinaryOperator 0x239ca04c440 <line:1051:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x239ca04c3d0 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x239ca04c3b8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca04c370 <col:5> 'unsigned char *' lvalue ParmVar 0x239ca04d468 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x239ca04c390 <col:8> 'int' 1
|   | `-ImplicitCastExpr 0x239ca04c428 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x239ca04c410 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca04c3f0 <col:13> 'int' lvalue Var 0x239ca04d700 'a1' 'int'
|   |-BinaryOperator 0x239ca04c530 <line:1052:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x239ca04c4c0 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x239ca04c4a8 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca04c460 <col:5> 'unsigned char *' lvalue ParmVar 0x239ca04d468 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x239ca04c480 <col:8> 'int' 2
|   | `-ImplicitCastExpr 0x239ca04c518 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x239ca04c500 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca04c4e0 <col:13> 'int' lvalue Var 0x239ca04d780 'a2' 'int'
|   |-BinaryOperator 0x239ca04c620 <line:1053:5, col:13> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x239ca04c5b0 <col:5, col:9> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x239ca04c598 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca04c550 <col:5> 'unsigned char *' lvalue ParmVar 0x239ca04d468 'v4' 'unsigned char *'
|   | | `-IntegerLiteral 0x239ca04c570 <col:8> 'int' 3
|   | `-ImplicitCastExpr 0x239ca04c608 <col:13> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x239ca04c5f0 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x239ca04c5d0 <col:13> 'int' lvalue Var 0x239ca04d800 'a3' 'int'
|   `-ReturnStmt 0x239ca04c668 <line:1054:5, col:12>
|     `-IntegerLiteral 0x239ca04c640 <col:12> 'int' 1
|-RecordDecl 0x239ca04c6c8 <line:1057:9, line:1066:1> line:1057:9 struct definition
| |-FieldDecl 0x239ca04c7e8 <line:1059:5, col:25> col:19 referenced tmp 'unsigned char [16]'
| |-FieldDecl 0x239ca04c858 <line:1061:5, col:9> col:9 referenced total 'int'
| |-FieldDecl 0x239ca04c8c8 <line:1063:5, col:9> col:9 referenced zero_pos 'int'
| `-FieldDecl 0x239ca04c938 <line:1065:5, col:9> col:9 referenced zero_cnt 'int'
|-TypedefDecl 0x239ca04c9e8 <line:1057:1, line:1066:3> col:3 referenced IPV6_STAT 'struct IPV6_STAT':'IPV6_STAT'
| `-ElaboratedType 0x239ca04c990 'struct IPV6_STAT' sugar
|   `-RecordType 0x239ca04c760 'IPV6_STAT'
|     `-Record 0x239ca04c6c8 ''
|-FunctionDecl 0x239ca04cbc0 prev 0x239ca024510 <line:1068:1, line:1130:1> line:1068:12 used ipv6_from_asc 'int (unsigned char *, const char *)' static
| |-ParmVarDecl 0x239ca04ca70 <col:26, col:41> col:41 used v6 'unsigned char *'
| |-ParmVarDecl 0x239ca04caf0 <col:45, col:57> col:57 used in 'const char *'
| `-CompoundStmt 0x239ca051040 <line:1069:1, line:1130:1>
|   |-DeclStmt 0x239ca04cd08 <line:1070:5, col:21>
|   | `-VarDecl 0x239ca04cca0 <col:5, col:15> col:15 used v6stat 'IPV6_STAT':'IPV6_STAT'
|   |-BinaryOperator 0x239ca04cdb0 <line:1071:5, col:20> 'int' '='
|   | |-MemberExpr 0x239ca04cd58 <col:5, col:12> 'int' lvalue .total 0x239ca04c858
|   | | `-DeclRefExpr 0x239ca04cd20 <col:5> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-IntegerLiteral 0x239ca04cd88 <col:20> 'int' 0
|   |-BinaryOperator 0x239ca04cec8 <line:1072:5, col:24> 'int' '='
|   | |-MemberExpr 0x239ca04ce58 <col:5, col:12> 'int' lvalue .zero_pos 0x239ca04c8c8
|   | | `-DeclRefExpr 0x239ca04ce38 <col:5> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-UnaryOperator 0x239ca04ceb0 <col:23, col:24> 'int' prefix '-'
|   |   `-IntegerLiteral 0x239ca04ce88 <col:24> 'int' 1
|   |-BinaryOperator 0x239ca04cf60 <line:1073:5, col:23> 'int' '='
|   | |-MemberExpr 0x239ca04cf08 <col:5, col:12> 'int' lvalue .zero_cnt 0x239ca04c938
|   | | `-DeclRefExpr 0x239ca04cee8 <col:5> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-IntegerLiteral 0x239ca04cf38 <col:23> 'int' 0
|   |-IfStmt 0x239ca04d2b0 <line:1079:5, line:1080:16>
|   | |-UnaryOperator 0x239ca04d260 <line:1079:9, col:54> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x239ca04d1b8 <col:10, col:54> 'int'
|   | |   |-ImplicitCastExpr 0x239ca04d1a0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x239ca04d070 <col:10> 'int ()' Function 0x239ca04cfa8 'CONF_parse_list' 'int ()'
|   | |   |-ImplicitCastExpr 0x239ca04d200 <col:26> 'const char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x239ca04d090 <col:26> 'const char *' lvalue ParmVar 0x239ca04caf0 'in' 'const char *'
|   | |   |-CharacterLiteral 0x239ca04d0b0 <col:30> 'int' 58
|   | |   |-IntegerLiteral 0x239ca04d0c8 <col:35> 'int' 0
|   | |   |-ImplicitCastExpr 0x239ca04d248 <col:38> 'int (*)(const char *, int, void *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x239ca04d0f0 <col:38> 'int (const char *, int, void *)' Function 0x239ca024820 'ipv6_cb' 'int (const char *, int, void *)'
|   | |   `-UnaryOperator 0x239ca04d188 <col:47, col:48> 'IPV6_STAT *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x239ca04d110 <col:48> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-ReturnStmt 0x239ca04d2a0 <line:1080:9, col:16>
|   |   `-IntegerLiteral 0x239ca04d278 <col:16> 'int' 0
|   |-IfStmt 0x239ca04feb8 <line:1084:5, line:1112:5> has_else
|   | |-BinaryOperator 0x239ca04f3b8 <line:1084:9, col:29> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca04f3a0 <col:9, col:16> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x239ca04f330 <col:9, col:16> 'int' lvalue .zero_pos 0x239ca04c8c8
|   | | |   `-DeclRefExpr 0x239ca04f310 <col:9> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | `-UnaryOperator 0x239ca04f388 <col:28, col:29> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x239ca04f360 <col:29> 'int' 1
|   | |-CompoundStmt 0x239ca04f4d8 <col:32, line:1088:5>
|   | | `-IfStmt 0x239ca04f4c0 <line:1086:9, line:1087:20>
|   | |   |-BinaryOperator 0x239ca04f468 <line:1086:13, col:29> 'int' '!='
|   | |   | |-ImplicitCastExpr 0x239ca04f450 <col:13, col:20> 'int' <LValueToRValue>
|   | |   | | `-MemberExpr 0x239ca04f3f8 <col:13, col:20> 'int' lvalue .total 0x239ca04c858
|   | |   | |   `-DeclRefExpr 0x239ca04f3d8 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |   | `-IntegerLiteral 0x239ca04f428 <col:29> 'int' 16
|   | |   `-ReturnStmt 0x239ca04f4b0 <line:1087:13, col:20>
|   | |     `-IntegerLiteral 0x239ca04f488 <col:20> 'int' 0
|   | `-CompoundStmt 0x239ca04fe98 <line:1088:12, line:1112:5>
|   |   |-IfStmt 0x239ca04f5d8 <line:1090:9, line:1091:20>
|   |   | |-BinaryOperator 0x239ca04f580 <line:1090:13, col:29> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x239ca04f568 <col:13, col:20> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x239ca04f510 <col:13, col:20> 'int' lvalue .total 0x239ca04c858
|   |   | | |   `-DeclRefExpr 0x239ca04f4f0 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |   | | `-IntegerLiteral 0x239ca04f540 <col:29> 'int' 16
|   |   | `-ReturnStmt 0x239ca04f5c8 <line:1091:13, col:20>
|   |   |   `-IntegerLiteral 0x239ca04f5a0 <col:20> 'int' 0
|   |   `-IfStmt 0x239ca04fe70 <line:1093:9, line:1111:9> has_else
|   |     |-BinaryOperator 0x239ca04f680 <line:1093:13, col:31> 'int' '>'
|   |     | |-ImplicitCastExpr 0x239ca04f668 <col:13, col:20> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x239ca04f610 <col:13, col:20> 'int' lvalue .zero_cnt 0x239ca04c938
|   |     | |   `-DeclRefExpr 0x239ca04f5f0 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |     | `-IntegerLiteral 0x239ca04f640 <col:31> 'int' 3
|   |     |-ReturnStmt 0x239ca04f6c8 <line:1094:13, col:20>
|   |     | `-IntegerLiteral 0x239ca04f6a0 <col:20> 'int' 0
|   |     `-IfStmt 0x239ca04fe48 <line:1096:14, line:1111:9> has_else
|   |       |-BinaryOperator 0x239ca04f768 <line:1096:18, col:37> 'int' '=='
|   |       | |-ImplicitCastExpr 0x239ca04f750 <col:18, col:25> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x239ca04f6f8 <col:18, col:25> 'int' lvalue .zero_cnt 0x239ca04c938
|   |       | |   `-DeclRefExpr 0x239ca04f6d8 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |       | `-IntegerLiteral 0x239ca04f728 <col:37> 'int' 3
|   |       |-CompoundStmt 0x239ca04f888 <col:40, line:1099:9>
|   |       | `-IfStmt 0x239ca04f870 <line:1097:13, line:1098:24>
|   |       |   |-BinaryOperator 0x239ca04f818 <line:1097:17, col:32> 'int' '>'
|   |       |   | |-ImplicitCastExpr 0x239ca04f800 <col:17, col:24> 'int' <LValueToRValue>
|   |       |   | | `-MemberExpr 0x239ca04f7a8 <col:17, col:24> 'int' lvalue .total 0x239ca04c858
|   |       |   | |   `-DeclRefExpr 0x239ca04f788 <col:17> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |       |   | `-IntegerLiteral 0x239ca04f7d8 <col:32> 'int' 0
|   |       |   `-ReturnStmt 0x239ca04f860 <line:1098:17, col:24>
|   |       |     `-IntegerLiteral 0x239ca04f838 <col:24> 'int' 0
|   |       `-IfStmt 0x239ca04fe20 <line:1101:14, line:1111:9> has_else
|   |         |-BinaryOperator 0x239ca04f930 <line:1101:18, col:37> 'int' '=='
|   |         | |-ImplicitCastExpr 0x239ca04f918 <col:18, col:25> 'int' <LValueToRValue>
|   |         | | `-MemberExpr 0x239ca04f8c0 <col:18, col:25> 'int' lvalue .zero_cnt 0x239ca04c938
|   |         | |   `-DeclRefExpr 0x239ca04f8a0 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         | `-IntegerLiteral 0x239ca04f8f0 <col:37> 'int' 2
|   |         |-CompoundStmt 0x239ca04fba0 <col:40, line:1105:9>
|   |         | `-IfStmt 0x239ca04fb88 <line:1102:13, line:1104:24>
|   |         |   |-BinaryOperator 0x239ca04fb30 <line:1102:17, line:1103:52> 'int' '&&'
|   |         |   | |-ParenExpr 0x239ca04fa00 <line:1102:17, col:38> 'int'
|   |         |   | | `-BinaryOperator 0x239ca04f9e0 <col:18, col:37> 'int' '!='
|   |         |   | |   |-ImplicitCastExpr 0x239ca04f9c8 <col:18, col:25> 'int' <LValueToRValue>
|   |         |   | |   | `-MemberExpr 0x239ca04f970 <col:18, col:25> 'int' lvalue .zero_pos 0x239ca04c8c8
|   |         |   | |   |   `-DeclRefExpr 0x239ca04f950 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         |   | |   `-IntegerLiteral 0x239ca04f9a0 <col:37> 'int' 0
|   |         |   | `-ParenExpr 0x239ca04fb10 <line:1103:20, col:52> 'int'
|   |         |   |   `-BinaryOperator 0x239ca04faf0 <col:21, col:47> 'int' '!='
|   |         |   |     |-ImplicitCastExpr 0x239ca04fac0 <col:21, col:28> 'int' <LValueToRValue>
|   |         |   |     | `-MemberExpr 0x239ca04fa40 <col:21, col:28> 'int' lvalue .zero_pos 0x239ca04c8c8
|   |         |   |     |   `-DeclRefExpr 0x239ca04fa20 <col:21> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         |   |     `-ImplicitCastExpr 0x239ca04fad8 <col:40, col:47> 'int' <LValueToRValue>
|   |         |   |       `-MemberExpr 0x239ca04fa90 <col:40, col:47> 'int' lvalue .total 0x239ca04c858
|   |         |   |         `-DeclRefExpr 0x239ca04fa70 <col:40> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |         |   `-ReturnStmt 0x239ca04fb78 <line:1104:17, col:24>
|   |         |     `-IntegerLiteral 0x239ca04fb50 <col:24> 'int' 0
|   |         `-CompoundStmt 0x239ca04fe08 <line:1107:9, line:1111:9>
|   |           `-IfStmt 0x239ca04fdf0 <line:1108:13, line:1110:24>
|   |             |-BinaryOperator 0x239ca04fd98 <line:1108:17, line:1109:52> 'int' '||'
|   |             | |-ParenExpr 0x239ca04fc68 <line:1108:17, col:38> 'int'
|   |             | | `-BinaryOperator 0x239ca04fc48 <col:18, col:37> 'int' '=='
|   |             | |   |-ImplicitCastExpr 0x239ca04fc30 <col:18, col:25> 'int' <LValueToRValue>
|   |             | |   | `-MemberExpr 0x239ca04fbd8 <col:18, col:25> 'int' lvalue .zero_pos 0x239ca04c8c8
|   |             | |   |   `-DeclRefExpr 0x239ca04fbb8 <col:18> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |             | |   `-IntegerLiteral 0x239ca04fc08 <col:37> 'int' 0
|   |             | `-ParenExpr 0x239ca04fd78 <line:1109:20, col:52> 'int'
|   |             |   `-BinaryOperator 0x239ca04fd58 <col:21, col:47> 'int' '=='
|   |             |     |-ImplicitCastExpr 0x239ca04fd28 <col:21, col:28> 'int' <LValueToRValue>
|   |             |     | `-MemberExpr 0x239ca04fca8 <col:21, col:28> 'int' lvalue .zero_pos 0x239ca04c8c8
|   |             |     |   `-DeclRefExpr 0x239ca04fc88 <col:21> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |             |     `-ImplicitCastExpr 0x239ca04fd40 <col:40, col:47> 'int' <LValueToRValue>
|   |             |       `-MemberExpr 0x239ca04fcf8 <col:40, col:47> 'int' lvalue .total 0x239ca04c858
|   |             |         `-DeclRefExpr 0x239ca04fcd8 <col:40> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |             `-ReturnStmt 0x239ca04fde0 <line:1110:17, col:24>
|   |               `-IntegerLiteral 0x239ca04fdb8 <col:24> 'int' 0
|   |-IfStmt 0x239ca050fe0 <line:1116:5, line:1127:34> has_else
|   | |-BinaryOperator 0x239ca04ff70 <line:1116:9, col:28> 'int' '>='
|   | | |-ImplicitCastExpr 0x239ca04ff58 <col:9, col:16> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x239ca04ff00 <col:9, col:16> 'int' lvalue .zero_pos 0x239ca04c8c8
|   | | |   `-DeclRefExpr 0x239ca04fee0 <col:9> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | `-IntegerLiteral 0x239ca04ff30 <col:28> 'int' 0
|   | |-CompoundStmt 0x239ca050e08 <col:31, line:1126:5>
|   | | |-CallExpr 0x239ca050360 <line:1118:9, col:47> 'void *'
|   | | | |-ImplicitCastExpr 0x239ca050348 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x239ca0501c0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x239ca04ffd0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x239ca0503b0 <col:16> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x239ca050398 <col:16> 'unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x239ca0501f8 <col:16> 'unsigned char *' lvalue ParmVar 0x239ca04ca70 'v6' 'unsigned char *'
|   | | | |-ImplicitCastExpr 0x239ca0503e0 <col:20, col:27> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x239ca0503c8 <col:20, col:27> 'unsigned char *' <ArrayToPointerDecay>
|   | | | |   `-MemberExpr 0x239ca050238 <col:20, col:27> 'unsigned char [16]' lvalue .tmp 0x239ca04c7e8
|   | | | |     `-DeclRefExpr 0x239ca050218 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | | `-ImplicitCastExpr 0x239ca050410 <col:32, col:39> 'unsigned long long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x239ca0503f8 <col:32, col:39> 'int' <LValueToRValue>
|   | | |     `-MemberExpr 0x239ca050288 <col:32, col:39> 'int' lvalue .zero_pos 0x239ca04c8c8
|   | | |       `-DeclRefExpr 0x239ca050268 <col:32> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | |-CallExpr 0x239ca050870 <line:1120:9, col:58> 'void *'
|   | | | |-ImplicitCastExpr 0x239ca050858 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x239ca050660 <col:9> 'void *(void *, int, unsigned long long)' Function 0x239ca050470 'memset' 'void *(void *, int, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x239ca0508a8 <col:16, col:28> 'void *' <BitCast>
|   | | | | `-BinaryOperator 0x239ca050738 <col:16, col:28> 'unsigned char *' '+'
|   | | | |   |-ImplicitCastExpr 0x239ca050708 <col:16> 'unsigned char *' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x239ca050698 <col:16> 'unsigned char *' lvalue ParmVar 0x239ca04ca70 'v6' 'unsigned char *'
|   | | | |   `-ImplicitCastExpr 0x239ca050720 <col:21, col:28> 'int' <LValueToRValue>
|   | | | |     `-MemberExpr 0x239ca0506d8 <col:21, col:28> 'int' lvalue .zero_pos 0x239ca04c8c8
|   | | | |       `-DeclRefExpr 0x239ca0506b8 <col:21> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | | |-IntegerLiteral 0x239ca050758 <col:38> 'int' 0
|   | | | `-ImplicitCastExpr 0x239ca0508c0 <col:41, col:53> 'unsigned long long' <IntegralCast>
|   | | |   `-BinaryOperator 0x239ca050810 <col:41, col:53> 'int' '-'
|   | | |     |-IntegerLiteral 0x239ca050780 <col:41> 'int' 16
|   | | |     `-ImplicitCastExpr 0x239ca0507f8 <col:46, col:53> 'int' <LValueToRValue>
|   | | |       `-MemberExpr 0x239ca0507c8 <col:46, col:53> 'int' lvalue .total 0x239ca04c858
|   | | |         `-DeclRefExpr 0x239ca0507a8 <col:46> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | | `-IfStmt 0x239ca050df0 <line:1122:9, line:1125:50>
|   | |   |-BinaryOperator 0x239ca0509a8 <line:1122:13, col:36> 'int' '!='
|   | |   | |-ImplicitCastExpr 0x239ca050978 <col:13, col:20> 'int' <LValueToRValue>
|   | |   | | `-MemberExpr 0x239ca0508f8 <col:13, col:20> 'int' lvalue .total 0x239ca04c858
|   | |   | |   `-DeclRefExpr 0x239ca0508d8 <col:13> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |   | `-ImplicitCastExpr 0x239ca050990 <col:29, col:36> 'int' <LValueToRValue>
|   | |   |   `-MemberExpr 0x239ca050948 <col:29, col:36> 'int' lvalue .zero_pos 0x239ca04c8c8
|   | |   |     `-DeclRefExpr 0x239ca050928 <col:29> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |   `-CallExpr 0x239ca050d70 <line:1123:13, line:1125:50> 'void *'
|   | |     |-ImplicitCastExpr 0x239ca050d58 <line:1123:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x239ca0509c8 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x239ca04ffd0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |     |-ImplicitCastExpr 0x239ca050da8 <col:20, col:55> 'void *' <BitCast>
|   | |     | `-BinaryOperator 0x239ca050b58 <col:20, col:55> 'unsigned char *' '-'
|   | |     |   |-BinaryOperator 0x239ca050ad0 <col:20, col:43> 'unsigned char *' '+'
|   | |     |   | |-BinaryOperator 0x239ca050a88 <col:20, col:32> 'unsigned char *' '+'
|   | |     |   | | |-ImplicitCastExpr 0x239ca050a58 <col:20> 'unsigned char *' <LValueToRValue>
|   | |     |   | | | `-DeclRefExpr 0x239ca0509e8 <col:20> 'unsigned char *' lvalue ParmVar 0x239ca04ca70 'v6' 'unsigned char *'
|   | |     |   | | `-ImplicitCastExpr 0x239ca050a70 <col:25, col:32> 'int' <LValueToRValue>
|   | |     |   | |   `-MemberExpr 0x239ca050a28 <col:25, col:32> 'int' lvalue .zero_pos 0x239ca04c8c8
|   | |     |   | |     `-DeclRefExpr 0x239ca050a08 <col:25> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     |   | `-IntegerLiteral 0x239ca050aa8 <col:43> 'int' 16
|   | |     |   `-ImplicitCastExpr 0x239ca050b40 <col:48, col:55> 'int' <LValueToRValue>
|   | |     |     `-MemberExpr 0x239ca050b10 <col:48, col:55> 'int' lvalue .total 0x239ca04c858
|   | |     |       `-DeclRefExpr 0x239ca050af0 <col:48> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     |-ImplicitCastExpr 0x239ca050dc0 <line:1124:20, col:40> 'const void *' <BitCast>
|   | |     | `-BinaryOperator 0x239ca050c48 <col:20, col:40> 'unsigned char *' '+'
|   | |     |   |-ImplicitCastExpr 0x239ca050c18 <col:20, col:27> 'unsigned char *' <ArrayToPointerDecay>
|   | |     |   | `-MemberExpr 0x239ca050b98 <col:20, col:27> 'unsigned char [16]' lvalue .tmp 0x239ca04c7e8
|   | |     |   |   `-DeclRefExpr 0x239ca050b78 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     |   `-ImplicitCastExpr 0x239ca050c30 <col:33, col:40> 'int' <LValueToRValue>
|   | |     |     `-MemberExpr 0x239ca050be8 <col:33, col:40> 'int' lvalue .zero_pos 0x239ca04c8c8
|   | |     |       `-DeclRefExpr 0x239ca050bc8 <col:33> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |     `-ImplicitCastExpr 0x239ca050dd8 <line:1125:20, col:42> 'unsigned long long' <IntegralCast>
|   | |       `-BinaryOperator 0x239ca050d38 <col:20, col:42> 'int' '-'
|   | |         |-ImplicitCastExpr 0x239ca050d08 <col:20, col:27> 'int' <LValueToRValue>
|   | |         | `-MemberExpr 0x239ca050c88 <col:20, col:27> 'int' lvalue .total 0x239ca04c858
|   | |         |   `-DeclRefExpr 0x239ca050c68 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | |         `-ImplicitCastExpr 0x239ca050d20 <col:35, col:42> 'int' <LValueToRValue>
|   | |           `-MemberExpr 0x239ca050cd8 <col:35, col:42> 'int' lvalue .zero_pos 0x239ca04c8c8
|   | |             `-DeclRefExpr 0x239ca050cb8 <col:35> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   | `-CallExpr 0x239ca050f30 <line:1127:9, col:34> 'void *'
|   |   |-ImplicitCastExpr 0x239ca050f18 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x239ca050e30 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x239ca04ffd0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |-ImplicitCastExpr 0x239ca050f80 <col:16> 'void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x239ca050f68 <col:16> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x239ca050e50 <col:16> 'unsigned char *' lvalue ParmVar 0x239ca04ca70 'v6' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x239ca050fb0 <col:20, col:27> 'const void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x239ca050f98 <col:20, col:27> 'unsigned char *' <ArrayToPointerDecay>
|   |   |   `-MemberExpr 0x239ca050e90 <col:20, col:27> 'unsigned char [16]' lvalue .tmp 0x239ca04c7e8
|   |   |     `-DeclRefExpr 0x239ca050e70 <col:20> 'IPV6_STAT':'IPV6_STAT' lvalue Var 0x239ca04cca0 'v6stat' 'IPV6_STAT':'IPV6_STAT'
|   |   `-ImplicitCastExpr 0x239ca050fc8 <col:32> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x239ca050ec0 <col:32> 'int' 16
|   `-ReturnStmt 0x239ca051030 <line:1129:5, col:12>
|     `-IntegerLiteral 0x239ca051008 <col:12> 'int' 1
|-FunctionDecl 0x239ca04ffd0 <line:1118:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x239ca050070 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x239ca0500d8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x239ca050140 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x239ca050470 <line:1120:9> col:9 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x239ca050510 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x239ca050578 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x239ca0505e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x239ca052340 prev 0x239ca024820 <line:1132:1, line:1165:1> line:1132:12 used ipv6_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x239ca0510a8 <col:20, col:32> col:32 used elem 'const char *'
| |-ParmVarDecl 0x239ca051128 <col:38, col:42> col:42 used len 'int'
| |-ParmVarDecl 0x239ca0511a8 <col:47, col:53> col:53 used usr 'void *'
| `-CompoundStmt 0x239ca04b418 <line:1133:1, line:1165:1>
|   |-DeclStmt 0x239ca0524c0 <line:1134:5, col:23>
|   | `-VarDecl 0x239ca052408 <col:5, col:20> col:16 used s 'IPV6_STAT *' cinit
|   |   `-ImplicitCastExpr 0x239ca0524a8 <col:20> 'IPV6_STAT *' <BitCast>
|   |     `-ImplicitCastExpr 0x239ca052490 <col:20> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x239ca052470 <col:20> 'void *' lvalue ParmVar 0x239ca0511a8 'usr' 'void *'
|   |-IfStmt 0x239ca0525f0 <line:1136:5, line:1137:16>
|   | |-BinaryOperator 0x239ca052598 <line:1136:9, col:21> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca052580 <col:9, col:12> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x239ca052528 <col:9, col:12> 'int' lvalue ->total 0x239ca04c858
|   | | |   `-ImplicitCastExpr 0x239ca052510 <col:9> 'IPV6_STAT *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x239ca0524d8 <col:9> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   | | `-IntegerLiteral 0x239ca052558 <col:21> 'int' 16
|   | `-ReturnStmt 0x239ca0525e0 <line:1137:9, col:16>
|   |   `-IntegerLiteral 0x239ca0525b8 <col:16> 'int' 0
|   |-IfStmt 0x239ca04b3b8 <line:1138:5, line:1163:5> has_else
|   | |-BinaryOperator 0x239ca052668 <line:1138:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x239ca052650 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca052608 <col:9> 'int' lvalue ParmVar 0x239ca051128 'len' 'int'
|   | | `-IntegerLiteral 0x239ca052628 <col:16> 'int' 0
|   | |-CompoundStmt 0x239ca052a88 <col:19, line:1146:5>
|   | | |-IfStmt 0x239ca0529e0 <line:1140:9, line:1144:20> has_else
|   | | | |-BinaryOperator 0x239ca052748 <line:1140:13, col:29> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x239ca052730 <col:13, col:16> 'int' <LValueToRValue>
|   | | | | | `-MemberExpr 0x239ca0526c0 <col:13, col:16> 'int' lvalue ->zero_pos 0x239ca04c8c8
|   | | | | |   `-ImplicitCastExpr 0x239ca0526a8 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x239ca052688 <col:13> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   | | | | `-UnaryOperator 0x239ca052718 <col:28, col:29> 'int' prefix '-'
|   | | | |   `-IntegerLiteral 0x239ca0526f0 <col:29> 'int' 1
|   | | | |-BinaryOperator 0x239ca052850 <line:1141:13, col:30> 'int' '='
|   | | | | |-MemberExpr 0x239ca0527a0 <col:13, col:16> 'int' lvalue ->zero_pos 0x239ca04c8c8
|   | | | | | `-ImplicitCastExpr 0x239ca052788 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x239ca052768 <col:13> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   | | | | `-ImplicitCastExpr 0x239ca052838 <col:27, col:30> 'int' <LValueToRValue>
|   | | | |   `-MemberExpr 0x239ca052808 <col:27, col:30> 'int' lvalue ->total 0x239ca04c858
|   | | | |     `-ImplicitCastExpr 0x239ca0527f0 <col:27> 'IPV6_STAT *' <LValueToRValue>
|   | | | |       `-DeclRefExpr 0x239ca0527d0 <col:27> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   | | | `-IfStmt 0x239ca0529c8 <line:1143:14, line:1144:20>
|   | | |   |-BinaryOperator 0x239ca052970 <line:1143:18, col:36> 'int' '!='
|   | | |   | |-ImplicitCastExpr 0x239ca052940 <col:18, col:21> 'int' <LValueToRValue>
|   | | |   | | `-MemberExpr 0x239ca0528a8 <col:18, col:21> 'int' lvalue ->zero_pos 0x239ca04c8c8
|   | | |   | |   `-ImplicitCastExpr 0x239ca052890 <col:18> 'IPV6_STAT *' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x239ca052870 <col:18> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   | | |   | `-ImplicitCastExpr 0x239ca052958 <col:33, col:36> 'int' <LValueToRValue>
|   | | |   |   `-MemberExpr 0x239ca052910 <col:33, col:36> 'int' lvalue ->total 0x239ca04c858
|   | | |   |     `-ImplicitCastExpr 0x239ca0528f8 <col:33> 'IPV6_STAT *' <LValueToRValue>
|   | | |   |       `-DeclRefExpr 0x239ca0528d8 <col:33> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   | | |   `-ReturnStmt 0x239ca0529b8 <line:1144:13, col:20>
|   | | |     `-IntegerLiteral 0x239ca052990 <col:20> 'int' 0
|   | | `-UnaryOperator 0x239ca052a70 <line:1145:9, col:20> 'int' postfix '++'
|   | |   `-MemberExpr 0x239ca052a40 <col:9, col:12> 'int' lvalue ->zero_cnt 0x239ca04c938
|   | |     `-ImplicitCastExpr 0x239ca052a28 <col:9> 'IPV6_STAT *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x239ca052a08 <col:9> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   | `-CompoundStmt 0x239ca04b3a0 <line:1146:12, line:1163:5>
|   |   `-IfStmt 0x239ca04b378 <line:1148:9, line:1162:9> has_else
|   |     |-BinaryOperator 0x239ca052b08 <line:1148:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x239ca052af0 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x239ca052aa8 <col:13> 'int' lvalue ParmVar 0x239ca051128 'len' 'int'
|   |     | `-IntegerLiteral 0x239ca052ac8 <col:19> 'int' 4
|   |     |-CompoundStmt 0x239ca053020 <col:22, line:1158:9>
|   |     | |-IfStmt 0x239ca052c28 <line:1150:13, line:1151:24>
|   |     | | |-BinaryOperator 0x239ca052bd0 <line:1150:17, col:28> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x239ca052bb8 <col:17, col:20> 'int' <LValueToRValue>
|   |     | | | | `-MemberExpr 0x239ca052b60 <col:17, col:20> 'int' lvalue ->total 0x239ca04c858
|   |     | | | |   `-ImplicitCastExpr 0x239ca052b48 <col:17> 'IPV6_STAT *' <LValueToRValue>
|   |     | | | |     `-DeclRefExpr 0x239ca052b28 <col:17> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   |     | | | `-IntegerLiteral 0x239ca052b90 <col:28> 'int' 12
|   |     | | `-ReturnStmt 0x239ca052c18 <line:1151:17, col:24>
|   |     | |   `-IntegerLiteral 0x239ca052bf0 <col:24> 'int' 0
|   |     | |-IfStmt 0x239ca052d20 <line:1153:13, line:1154:24>
|   |     | | |-ImplicitCastExpr 0x239ca052cd0 <line:1153:17, col:25> 'char' <LValueToRValue>
|   |     | | | `-ArraySubscriptExpr 0x239ca052cb0 <col:17, col:25> 'const char' lvalue
|   |     | | |   |-ImplicitCastExpr 0x239ca052c80 <col:17> 'const char *' <LValueToRValue>
|   |     | | |   | `-DeclRefExpr 0x239ca052c40 <col:17> 'const char *' lvalue ParmVar 0x239ca0510a8 'elem' 'const char *'
|   |     | | |   `-ImplicitCastExpr 0x239ca052c98 <col:22> 'int' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x239ca052c60 <col:22> 'int' lvalue ParmVar 0x239ca051128 'len' 'int'
|   |     | | `-ReturnStmt 0x239ca052d10 <line:1154:17, col:24>
|   |     | |   `-IntegerLiteral 0x239ca052ce8 <col:24> 'int' 0
|   |     | |-IfStmt 0x239ca052f48 <line:1155:13, line:1156:24>
|   |     | | |-UnaryOperator 0x239ca052ef8 <line:1155:17, col:55> 'int' prefix '!' cannot overflow
|   |     | | | `-CallExpr 0x239ca052eb0 <col:18, col:55> 'int'
|   |     | | |   |-ImplicitCastExpr 0x239ca052e98 <col:18> 'int (*)(unsigned char *, const char *)' <FunctionToPointerDecay>
|   |     | | |   | `-DeclRefExpr 0x239ca052d38 <col:18> 'int (unsigned char *, const char *)' Function 0x239ca04d5b8 'ipv4_from_asc' 'int (unsigned char *, const char *)'
|   |     | | |   |-BinaryOperator 0x239ca052e58 <col:32, col:44> 'unsigned char *' '+'
|   |     | | |   | |-ImplicitCastExpr 0x239ca052e28 <col:32, col:35> 'unsigned char *' <ArrayToPointerDecay>
|   |     | | |   | | `-MemberExpr 0x239ca052d90 <col:32, col:35> 'unsigned char [16]' lvalue ->tmp 0x239ca04c7e8
|   |     | | |   | |   `-ImplicitCastExpr 0x239ca052d78 <col:32> 'IPV6_STAT *' <LValueToRValue>
|   |     | | |   | |     `-DeclRefExpr 0x239ca052d58 <col:32> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   |     | | |   | `-ImplicitCastExpr 0x239ca052e40 <col:41, col:44> 'int' <LValueToRValue>
|   |     | | |   |   `-MemberExpr 0x239ca052df8 <col:41, col:44> 'int' lvalue ->total 0x239ca04c858
|   |     | | |   |     `-ImplicitCastExpr 0x239ca052de0 <col:41> 'IPV6_STAT *' <LValueToRValue>
|   |     | | |   |       `-DeclRefExpr 0x239ca052dc0 <col:41> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   |     | | |   `-ImplicitCastExpr 0x239ca052ee0 <col:51> 'const char *' <LValueToRValue>
|   |     | | |     `-DeclRefExpr 0x239ca052e78 <col:51> 'const char *' lvalue ParmVar 0x239ca0510a8 'elem' 'const char *'
|   |     | | `-ReturnStmt 0x239ca052f38 <line:1156:17, col:24>
|   |     | |   `-IntegerLiteral 0x239ca052f10 <col:24> 'int' 0
|   |     | `-CompoundAssignOperator 0x239ca052ff0 <line:1157:13, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x239ca052f98 <col:13, col:16> 'int' lvalue ->total 0x239ca04c858
|   |     |   | `-ImplicitCastExpr 0x239ca052f80 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x239ca052f60 <col:13> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   |     |   `-IntegerLiteral 0x239ca052fc8 <col:25> 'int' 4
|   |     `-CompoundStmt 0x239ca04b358 <line:1158:16, line:1162:9>
|   |       |-IfStmt 0x239ca0532c8 <line:1159:13, line:1160:24>
|   |       | |-UnaryOperator 0x239ca053278 <line:1159:17, col:55> 'int' prefix '!' cannot overflow
|   |       | | `-CallExpr 0x239ca053210 <col:18, col:55> 'int'
|   |       | |   |-ImplicitCastExpr 0x239ca0531f8 <col:18> 'int (*)(unsigned char *, const char *, int)' <FunctionToPointerDecay>
|   |       | |   | `-DeclRefExpr 0x239ca053050 <col:18> 'int (unsigned char *, const char *, int)' Function 0x239ca024b40 'ipv6_hex' 'int (unsigned char *, const char *, int)'
|   |       | |   |-BinaryOperator 0x239ca053170 <col:27, col:39> 'unsigned char *' '+'
|   |       | |   | |-ImplicitCastExpr 0x239ca053140 <col:27, col:30> 'unsigned char *' <ArrayToPointerDecay>
|   |       | |   | | `-MemberExpr 0x239ca0530a8 <col:27, col:30> 'unsigned char [16]' lvalue ->tmp 0x239ca04c7e8
|   |       | |   | |   `-ImplicitCastExpr 0x239ca053090 <col:27> 'IPV6_STAT *' <LValueToRValue>
|   |       | |   | |     `-DeclRefExpr 0x239ca053070 <col:27> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   |       | |   | `-ImplicitCastExpr 0x239ca053158 <col:36, col:39> 'int' <LValueToRValue>
|   |       | |   |   `-MemberExpr 0x239ca053110 <col:36, col:39> 'int' lvalue ->total 0x239ca04c858
|   |       | |   |     `-ImplicitCastExpr 0x239ca0530f8 <col:36> 'IPV6_STAT *' <LValueToRValue>
|   |       | |   |       `-DeclRefExpr 0x239ca0530d8 <col:36> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   |       | |   |-ImplicitCastExpr 0x239ca053248 <col:46> 'const char *' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x239ca053190 <col:46> 'const char *' lvalue ParmVar 0x239ca0510a8 'elem' 'const char *'
|   |       | |   `-ImplicitCastExpr 0x239ca053260 <col:52> 'int' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x239ca0531b0 <col:52> 'int' lvalue ParmVar 0x239ca051128 'len' 'int'
|   |       | `-ReturnStmt 0x239ca0532b8 <line:1160:17, col:24>
|   |       |   `-IntegerLiteral 0x239ca053290 <col:24> 'int' 0
|   |       `-CompoundAssignOperator 0x239ca04b328 <line:1161:13, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-MemberExpr 0x239ca04b2d0 <col:13, col:16> 'int' lvalue ->total 0x239ca04c858
|   |         | `-ImplicitCastExpr 0x239ca053300 <col:13> 'IPV6_STAT *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x239ca0532e0 <col:13> 'IPV6_STAT *' lvalue Var 0x239ca052408 's' 'IPV6_STAT *'
|   |         `-IntegerLiteral 0x239ca04b300 <col:25> 'int' 2
|   `-ReturnStmt 0x239ca04b408 <line:1164:5, col:12>
|     `-IntegerLiteral 0x239ca04b3e0 <col:12> 'int' 1
|-FunctionDecl 0x239ca04b650 prev 0x239ca024b40 <line:1171:1, line:1190:1> line:1171:12 used ipv6_hex 'int (unsigned char *, const char *, int)' static
| |-ParmVarDecl 0x239ca04b460 <col:21, col:36> col:36 used out 'unsigned char *'
| |-ParmVarDecl 0x239ca04b4e0 <col:41, col:53> col:53 used in 'const char *'
| |-ParmVarDecl 0x239ca04b560 <col:57, col:61> col:61 used inlen 'int'
| `-CompoundStmt 0x239ca04c248 <line:1172:1, line:1190:1>
|   |-DeclStmt 0x239ca04b788 <line:1173:5, col:20>
|   | `-VarDecl 0x239ca04b720 <col:5, col:19> col:19 used c 'unsigned char'
|   |-DeclStmt 0x239ca04b860 <line:1174:5, col:25>
|   | `-VarDecl 0x239ca04b7b8 <col:5, col:24> col:18 used num 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x239ca04b848 <col:24> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x239ca04b820 <col:24> 'int' 0
|   |-DeclStmt 0x239ca04b8f8 <line:1175:5, col:10>
|   | `-VarDecl 0x239ca04b890 <col:5, col:9> col:9 used x 'int'
|   |-IfStmt 0x239ca04b9c8 <line:1177:5, line:1178:16>
|   | |-BinaryOperator 0x239ca04b970 <line:1177:9, col:17> 'int' '>'
|   | | |-ImplicitCastExpr 0x239ca04b958 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca04b910 <col:9> 'int' lvalue ParmVar 0x239ca04b560 'inlen' 'int'
|   | | `-IntegerLiteral 0x239ca04b930 <col:17> 'int' 4
|   | `-ReturnStmt 0x239ca04b9b8 <line:1178:9, col:16>
|   |   `-IntegerLiteral 0x239ca04b990 <col:16> 'int' 0
|   |-WhileStmt 0x239ca04bf70 <line:1179:5, line:1186:5>
|   | |-UnaryOperator 0x239ca04ba00 <line:1179:12, col:17> 'int' postfix '--'
|   | | `-DeclRefExpr 0x239ca04b9e0 <col:12> 'int' lvalue ParmVar 0x239ca04b560 'inlen' 'int'
|   | `-CompoundStmt 0x239ca04bf38 <col:21, line:1186:5>
|   |   |-BinaryOperator 0x239ca04bad0 <line:1180:9, col:16> 'unsigned char' '='
|   |   | |-DeclRefExpr 0x239ca04ba18 <col:9> 'unsigned char' lvalue Var 0x239ca04b720 'c' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x239ca04bab8 <col:13, col:16> 'unsigned char' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x239ca04baa0 <col:13, col:16> 'char' <LValueToRValue>
|   |   |     `-UnaryOperator 0x239ca04ba88 <col:13, col:16> 'const char' lvalue prefix '*' cannot overflow
|   |   |       `-UnaryOperator 0x239ca04ba70 <col:14, col:16> 'const char *' postfix '++'
|   |   |         `-DeclRefExpr 0x239ca04ba50 <col:14> 'const char *' lvalue ParmVar 0x239ca04b4e0 'in' 'const char *'
|   |   |-CompoundAssignOperator 0x239ca04bb68 <line:1181:9, col:17> 'unsigned int' '<<=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   | |-DeclRefExpr 0x239ca04baf0 <col:9> 'unsigned int' lvalue Var 0x239ca04b7b8 'num' 'unsigned int'
|   |   | `-IntegerLiteral 0x239ca04bb28 <col:17> 'int' 4
|   |   |-BinaryOperator 0x239ca04bd70 <line:1182:9, col:34> 'int' '='
|   |   | |-DeclRefExpr 0x239ca04bb98 <col:9> 'int' lvalue Var 0x239ca04b890 'x' 'int'
|   |   | `-CallExpr 0x239ca04bd18 <col:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x239ca04bd00 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x239ca04bcc0 <col:13> 'int ()' Function 0x239ca04bbf8 'OPENSSL_hexchar2int' 'int ()'
|   |   |   `-ImplicitCastExpr 0x239ca04bd58 <col:33> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x239ca04bd40 <col:33> 'unsigned char' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x239ca04bce0 <col:33> 'unsigned char' lvalue Var 0x239ca04b720 'c' 'unsigned char'
|   |   |-IfStmt 0x239ca04be48 <line:1183:9, line:1184:20>
|   |   | |-BinaryOperator 0x239ca04bdf0 <line:1183:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x239ca04bdd8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x239ca04bd90 <col:13> 'int' lvalue Var 0x239ca04b890 'x' 'int'
|   |   | | `-IntegerLiteral 0x239ca04bdb0 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x239ca04be38 <line:1184:13, col:20>
|   |   |   `-IntegerLiteral 0x239ca04be10 <col:20> 'int' 0
|   |   `-CompoundAssignOperator 0x239ca04bf08 <line:1185:9, col:22> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |     |-DeclRefExpr 0x239ca04be60 <col:9> 'unsigned int' lvalue Var 0x239ca04b7b8 'num' 'unsigned int'
|   |     `-ImplicitCastExpr 0x239ca04bef0 <col:16, col:22> 'unsigned int' <IntegralCast>
|   |       `-CStyleCastExpr 0x239ca04bec8 <col:16, col:22> 'char' <IntegralCast>
|   |         `-ImplicitCastExpr 0x239ca04beb0 <col:22> 'int' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x239ca04be80 <col:22> 'int' lvalue Var 0x239ca04b890 'x' 'int'
|   |-BinaryOperator 0x239ca04c0a0 <line:1187:5, col:21> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x239ca04bfe8 <col:5, col:10> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x239ca04bfd0 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca04bf88 <col:5> 'unsigned char *' lvalue ParmVar 0x239ca04b460 'out' 'unsigned char *'
|   | | `-IntegerLiteral 0x239ca04bfa8 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x239ca04c088 <col:14, col:21> 'unsigned char' <IntegralCast>
|   |   `-BinaryOperator 0x239ca04c068 <col:14, col:21> 'unsigned int' '>>'
|   |     |-ImplicitCastExpr 0x239ca04c050 <col:14> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x239ca04c008 <col:14> 'unsigned int' lvalue Var 0x239ca04b7b8 'num' 'unsigned int'
|   |     `-IntegerLiteral 0x239ca04c028 <col:21> 'int' 8
|   |-BinaryOperator 0x239ca04c1f0 <line:1188:5, col:20> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x239ca04c120 <col:5, col:10> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x239ca04c108 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x239ca04c0c0 <col:5> 'unsigned char *' lvalue ParmVar 0x239ca04b460 'out' 'unsigned char *'
|   | | `-IntegerLiteral 0x239ca04c0e0 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x239ca04c1d8 <col:14, col:20> 'unsigned char' <IntegralCast>
|   |   `-BinaryOperator 0x239ca04c1b8 <col:14, col:20> 'unsigned int' '&'
|   |     |-ImplicitCastExpr 0x239ca04c188 <col:14> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x239ca04c140 <col:14> 'unsigned int' lvalue Var 0x239ca04b7b8 'num' 'unsigned int'
|   |     `-ImplicitCastExpr 0x239ca04c1a0 <col:20> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x239ca04c160 <col:20> 'int' 255
|   `-ReturnStmt 0x239ca04c238 <line:1189:5, col:12>
|     `-IntegerLiteral 0x239ca04c210 <col:12> 'int' 1
`-FunctionDecl 0x239ca053500 <line:1192:1, line:1238:1> line:1192:5 invalid X509V3_NAME_from_section 'int (int *, int (*)())'
  |-ParmVarDecl 0x239ca053350 <col:30, col:41> col:41 invalid nm 'int *'
  |-ParmVarDecl 0x239ca0533e0 <col:45, <invalid sloc>> col:45 invalid STACK_OF 'int (*)()':'int (*)()'
  `-CompoundStmt 0x239ca055930 <line:1194:1, line:1238:1>
    |-DeclStmt 0x239ca0537f0 <line:1196:5, col:38>
    | |-VarDecl 0x239ca0535e0 <col:5, col:9> col:9 used i 'int'
    | |-VarDecl 0x239ca053660 <col:5, col:12> col:12 used mval 'int'
    | |-VarDecl 0x239ca0536e0 <col:5, col:18> col:18 used spec_char 'int'
    | `-VarDecl 0x239ca053760 <col:5, col:29> col:29 used plus_char 'int'
    |-DeclStmt 0x239ca053920 <line:1197:5, col:19>
    | |-VarDecl 0x239ca053820 <col:5, col:11> col:11 used p 'char *'
    | `-VarDecl 0x239ca0538a0 <col:5, col:15> col:15 used type 'char *'
    |-IfStmt 0x239ca053988 <line:1198:5, line:1199:16>
    | |-OpaqueValueExpr 0x239ca053970 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x239ca053960 <col:9, col:16>
    |   `-IntegerLiteral 0x239ca053938 <col:16> 'int' 0
    `-ReturnStmt 0x239ca055920 <line:1237:5, col:12>
      `-IntegerLiteral 0x239ca0558f8 <col:12> 'int' 1
