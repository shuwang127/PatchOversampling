TranslationUnitDecl 0x15a92791838 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15a927920d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15a92791dd0 '__int128'
|-TypedefDecl 0x15a92792140 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15a92791df0 'unsigned __int128'
|-TypedefDecl 0x15a92792478 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15a92792230 'struct __NSConstantString_tag'
|   `-Record 0x15a92792198 '__NSConstantString_tag'
|-TypedefDecl 0x15a927924e8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x15a92791a10 'unsigned long long'
|-TypedefDecl 0x15a92792580 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15a92792540 'char *'
|   `-BuiltinType 0x15a927918d0 'char'
|-TypedefDecl 0x15a927925f0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15a92792540 'char *'
|   `-BuiltinType 0x15a927918d0 'char'
`-FunctionDecl 0x15a940785d0 <.//openssl//file_jk/after\demos\cms\cms_ddec.c:18:1, line:88:1> line:18:5 main 'int (int, char **)'
  |-ParmVarDecl 0x15a92792660 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x15a92792710 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x15a940780f0 <line:19:1, line:88:1>
    |-DeclStmt 0x15a94078788 <line:24:5, col:16>
    | `-VarDecl 0x15a940786f8 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x15a94078760 <col:15> 'int' 1
    |-CallExpr 0x15a94078920 <line:26:5, col:32> 'int'
    | `-ImplicitCastExpr 0x15a94078908 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x15a940788b8 <col:5> 'int ()' Function 0x15a940787f0 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x15a94078a68 <line:27:5, col:29> 'int'
    | `-ImplicitCastExpr 0x15a94078a50 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x15a94078a30 <col:5> 'int ()' Function 0x15a94078968 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x15a94078d50 <line:32:5, line:33:14>
    | |-OpaqueValueExpr 0x15a94078d38 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15a94078d20 <col:9, col:14> 'err' 0x15a94078cd0
    |-IfStmt 0x15a94079118 <line:41:5, line:42:14>
    | |-OpaqueValueExpr 0x15a94079100 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15a940790e8 <col:9, col:14> 'err' 0x15a94078cd0
    |-IfStmt 0x15a94079240 <line:48:5, line:49:14>
    | |-OpaqueValueExpr 0x15a94079228 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15a94079210 <col:9, col:14> 'err' 0x15a94078cd0
    |-IfStmt 0x15a940793c0 <line:54:5, line:55:14>
    | |-OpaqueValueExpr 0x15a940793a8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15a94079390 <col:9, col:14> 'err' 0x15a94078cd0
    |-IfStmt 0x15a94079520 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x15a94079508 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15a940794f0 <col:9, col:14> 'err' 0x15a94078cd0
    |-IfStmt 0x15a94077688 <line:64:5, line:65:14>
    | |-OpaqueValueExpr 0x15a94077670 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15a94077658 <col:9, col:14> 'err' 0x15a94078cd0
    |-IfStmt 0x15a94077808 <line:68:5, line:69:14>
    | |-OpaqueValueExpr 0x15a940777f0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15a940777d8 <col:9, col:14> 'err' 0x15a94078cd0
    |-BinaryOperator 0x15a94077880 <line:71:5, col:11> 'int' '='
    | |-DeclRefExpr 0x15a94077820 <col:5> 'int' lvalue Var 0x15a940786f8 'ret' 'int'
    | `-IntegerLiteral 0x15a94077858 <col:11> 'int' 0
    |-LabelStmt 0x15a94077bf0 <line:73:2, line:78:5> 'err'
    | `-IfStmt 0x15a94077bd8 <line:75:5, line:78:5>
    |   |-ImplicitCastExpr 0x15a940778c0 <line:75:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x15a940778a0 <col:9> 'int' lvalue Var 0x15a940786f8 'ret' 'int'
    |   `-CompoundStmt 0x15a94077bc8 <col:14, line:78:5>
    `-ReturnStmt 0x15a940780e0 <line:87:5, col:12>
      `-ImplicitCastExpr 0x15a940780c8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15a940780a8 <col:12> 'int' lvalue Var 0x15a940786f8 'ret' 'int'
