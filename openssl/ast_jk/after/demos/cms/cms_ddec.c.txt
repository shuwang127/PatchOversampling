TranslationUnitDecl 0x1fe2e15f2a8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1fe2e15fb40 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1fe2e15f840 '__int128'
|-TypedefDecl 0x1fe2e15fbb0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1fe2e15f860 'unsigned __int128'
|-TypedefDecl 0x1fe2e15fee8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1fe2e15fca0 'struct __NSConstantString_tag'
|   `-Record 0x1fe2e15fc08 '__NSConstantString_tag'
|-TypedefDecl 0x1fe2e15ff58 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1fe2e15f480 'unsigned long long'
|-TypedefDecl 0x1fe2e15fff0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1fe2e15ffb0 'char *'
|   `-BuiltinType 0x1fe2e15f340 'char'
|-TypedefDecl 0x1fe2e160060 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1fe2e15ffb0 'char *'
|   `-BuiltinType 0x1fe2e15f340 'char'
`-FunctionDecl 0x1fe2fa86680 <.//openssl//file_jk/after\demos\cms\cms_ddec.c:18:1, line:88:1> line:18:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1fe2e1600d0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x1fe2e160180 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x1fe2fa85190 <line:19:1, line:88:1>
    |-DeclStmt 0x1fe2fa86838 <line:24:5, col:16>
    | `-VarDecl 0x1fe2fa867a8 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1fe2fa86810 <col:15> 'int' 1
    |-CallExpr 0x1fe2fa869d0 <line:26:5, col:32> 'int'
    | `-ImplicitCastExpr 0x1fe2fa869b8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1fe2fa86968 <col:5> 'int ()' Function 0x1fe2fa868a0 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x1fe2fa86b18 <line:27:5, col:29> 'int'
    | `-ImplicitCastExpr 0x1fe2fa86b00 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1fe2fa86ae0 <col:5> 'int ()' Function 0x1fe2fa86a18 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x1fe2fa86e00 <line:32:5, line:33:14>
    | |-OpaqueValueExpr 0x1fe2fa86de8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1fe2fa86dd0 <col:9, col:14> 'err' 0x1fe2fa86d80
    |-IfStmt 0x1fe2fa871c8 <line:41:5, line:42:14>
    | |-OpaqueValueExpr 0x1fe2fa871b0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1fe2fa87198 <col:9, col:14> 'err' 0x1fe2fa86d80
    |-IfStmt 0x1fe2fa872f0 <line:48:5, line:49:14>
    | |-OpaqueValueExpr 0x1fe2fa872d8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1fe2fa872c0 <col:9, col:14> 'err' 0x1fe2fa86d80
    |-IfStmt 0x1fe2fa87470 <line:54:5, line:55:14>
    | |-OpaqueValueExpr 0x1fe2fa87458 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1fe2fa87440 <col:9, col:14> 'err' 0x1fe2fa86d80
    |-IfStmt 0x1fe2fa875d0 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x1fe2fa875b8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1fe2fa875a0 <col:9, col:14> 'err' 0x1fe2fa86d80
    |-IfStmt 0x1fe2fa84728 <line:64:5, line:65:14>
    | |-OpaqueValueExpr 0x1fe2fa84710 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1fe2fa846f8 <col:9, col:14> 'err' 0x1fe2fa86d80
    |-IfStmt 0x1fe2fa848a8 <line:68:5, line:69:14>
    | |-OpaqueValueExpr 0x1fe2fa84890 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1fe2fa84878 <col:9, col:14> 'err' 0x1fe2fa86d80
    |-BinaryOperator 0x1fe2fa84920 <line:71:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1fe2fa848c0 <col:5> 'int' lvalue Var 0x1fe2fa867a8 'ret' 'int'
    | `-IntegerLiteral 0x1fe2fa848f8 <col:11> 'int' 0
    |-LabelStmt 0x1fe2fa84c90 <line:73:2, line:78:5> 'err'
    | `-IfStmt 0x1fe2fa84c78 <line:75:5, line:78:5>
    |   |-ImplicitCastExpr 0x1fe2fa84960 <line:75:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1fe2fa84940 <col:9> 'int' lvalue Var 0x1fe2fa867a8 'ret' 'int'
    |   `-CompoundStmt 0x1fe2fa84c68 <col:14, line:78:5>
    `-ReturnStmt 0x1fe2fa85180 <line:87:5, col:12>
      `-ImplicitCastExpr 0x1fe2fa85168 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1fe2fa85148 <col:12> 'int' lvalue Var 0x1fe2fa867a8 'ret' 'int'
