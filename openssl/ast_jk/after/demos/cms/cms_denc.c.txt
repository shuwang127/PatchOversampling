TranslationUnitDecl 0x15d6ecb68b8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x15d6ecb7150 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x15d6ecb6e50 '__int128'
|-TypedefDecl 0x15d6ecb71c0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x15d6ecb6e70 'unsigned __int128'
|-TypedefDecl 0x15d6ecb74f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x15d6ecb72b0 'struct __NSConstantString_tag'
|   `-Record 0x15d6ecb7218 '__NSConstantString_tag'
|-TypedefDecl 0x15d6ecb7568 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x15d6ecb6a90 'unsigned long long'
|-TypedefDecl 0x15d6ecb7600 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x15d6ecb75c0 'char *'
|   `-BuiltinType 0x15d6ecb6950 'char'
|-TypedefDecl 0x15d6ecb7670 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x15d6ecb75c0 'char *'
|   `-BuiltinType 0x15d6ecb6950 'char'
`-FunctionDecl 0x15d7077fc10 <.//openssl//file_jk/after\demos\cms\cms_denc.c:18:1, line:97:1> line:18:5 main 'int (int, char **)'
  |-ParmVarDecl 0x15d6ecb76e0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x15d6ecb7790 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x15d7077ec00 <line:19:1, line:97:1>
    |-DeclStmt 0x15d7077ff00 <line:24:5, col:16>
    | `-VarDecl 0x15d7077fe70 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x15d7077fed8 <col:15> 'int' 1
    |-DeclStmt 0x15d7077ff98 <line:26:5, col:42>
    | `-VarDecl 0x15d7077ff30 <col:5, col:9> col:9 used flags 'int'
    |-CallExpr 0x15d70780100 <line:28:5, col:32> 'int'
    | `-ImplicitCastExpr 0x15d707800e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x15d707800a0 <col:5> 'int ()' Function 0x15d7077ffd8 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x15d70780248 <line:29:5, col:29> 'int'
    | `-ImplicitCastExpr 0x15d70780230 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x15d70780210 <col:5> 'int ()' Function 0x15d70780148 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x15d70780530 <line:34:5, line:35:14>
    | |-OpaqueValueExpr 0x15d70780518 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15d70780500 <col:9, col:14> 'err' 0x15d707804b0
    |-IfStmt 0x15d707806b0 <line:39:5, line:40:14>
    | |-OpaqueValueExpr 0x15d70780698 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15d70780680 <col:9, col:14> 'err' 0x15d707804b0
    |-IfStmt 0x15d70780950 <line:45:5, line:46:14>
    | |-OpaqueValueExpr 0x15d70780938 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15d70780920 <col:9, col:14> 'err' 0x15d707804b0
    |-IfStmt 0x15d70780bd0 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x15d70780bb8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15d70780ba0 <col:9, col:14> 'err' 0x15d707804b0
    |-IfStmt 0x15d7077de88 <line:66:5, line:67:14>
    | |-OpaqueValueExpr 0x15d7077de70 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15d7077de58 <col:9, col:14> 'err' 0x15d707804b0
    |-IfStmt 0x15d7077dfb0 <line:70:5, line:71:14>
    | |-OpaqueValueExpr 0x15d7077df98 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15d7077df80 <col:9, col:14> 'err' 0x15d707804b0
    |-IfStmt 0x15d7077e128 <line:73:5, line:74:14>
    | |-OpaqueValueExpr 0x15d7077e110 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15d7077e0f8 <col:9, col:14> 'err' 0x15d707804b0
    |-IfStmt 0x15d7077e280 <line:77:5, line:78:14>
    | |-OpaqueValueExpr 0x15d7077e268 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15d7077e250 <col:9, col:14> 'err' 0x15d707804b0
    |-BinaryOperator 0x15d7077e2f8 <line:80:5, col:11> 'int' '='
    | |-DeclRefExpr 0x15d7077e298 <col:5> 'int' lvalue Var 0x15d7077fe70 'ret' 'int'
    | `-IntegerLiteral 0x15d7077e2d0 <col:11> 'int' 0
    |-LabelStmt 0x15d7077e670 <line:82:2, line:87:5> 'err'
    | `-IfStmt 0x15d7077e658 <line:84:5, line:87:5>
    |   |-ImplicitCastExpr 0x15d7077e338 <line:84:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x15d7077e318 <col:9> 'int' lvalue Var 0x15d7077fe70 'ret' 'int'
    |   `-CompoundStmt 0x15d7077e648 <col:14, line:87:5>
    `-ReturnStmt 0x15d7077eb80 <line:96:5, col:12>
      `-ImplicitCastExpr 0x15d7077eb68 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15d7077eb48 <col:12> 'int' lvalue Var 0x15d7077fe70 'ret' 'int'
