TranslationUnitDecl 0x1e7e8bd5c68 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1e7e8bd6500 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1e7e8bd6200 '__int128'
|-TypedefDecl 0x1e7e8bd6570 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1e7e8bd6220 'unsigned __int128'
|-TypedefDecl 0x1e7e8bd68a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1e7e8bd6660 'struct __NSConstantString_tag'
|   `-Record 0x1e7e8bd65c8 '__NSConstantString_tag'
|-TypedefDecl 0x1e7e8bd6918 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1e7e8bd5e40 'unsigned long long'
|-TypedefDecl 0x1e7e8bd69b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1e7e8bd6970 'char *'
|   `-BuiltinType 0x1e7e8bd5d00 'char'
|-TypedefDecl 0x1e7e8bd6a20 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1e7e8bd6970 'char *'
|   `-BuiltinType 0x1e7e8bd5d00 'char'
`-FunctionDecl 0x1e7ea480790 <.//openssl//file_jk/after\demos\cms\cms_enc.c:15:1, line:92:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1e7e8bd6a90 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x1e7e8bd6b40 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x1e7ea480490 <line:16:1, line:92:1>
    |-DeclStmt 0x1e7ea480a80 <line:21:5, col:16>
    | `-VarDecl 0x1e7ea4809f0 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1e7ea480a58 <col:15> 'int' 1
    |-DeclStmt 0x1e7ea480b18 <line:27:5, col:27>
    | `-VarDecl 0x1e7ea480ab0 <col:5, col:9> col:9 used flags 'int'
    |-CallExpr 0x1e7ea480c80 <line:29:5, col:32> 'int'
    | `-ImplicitCastExpr 0x1e7ea480c68 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1e7ea480c20 <col:5> 'int ()' Function 0x1e7ea480b58 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x1e7ea480dc8 <line:30:5, col:29> 'int'
    | `-ImplicitCastExpr 0x1e7ea480db0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1e7ea480d90 <col:5> 'int ()' Function 0x1e7ea480cc8 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x1e7ea4810b0 <line:35:5, line:36:14>
    | |-OpaqueValueExpr 0x1e7ea481098 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1e7ea481080 <col:9, col:14> 'err' 0x1e7ea481030
    |-IfStmt 0x1e7ea481230 <line:40:5, line:41:14>
    | |-OpaqueValueExpr 0x1e7ea481218 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1e7ea481200 <col:9, col:14> 'err' 0x1e7ea481030
    |-IfStmt 0x1e7ea4814d0 <line:46:5, line:47:14>
    | |-OpaqueValueExpr 0x1e7ea4814b8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1e7ea4814a0 <col:9, col:14> 'err' 0x1e7ea481030
    |-IfStmt 0x1e7ea481630 <line:59:5, line:60:14>
    | |-OpaqueValueExpr 0x1e7ea481618 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1e7ea481600 <col:9, col:14> 'err' 0x1e7ea481030
    |-IfStmt 0x1e7ea47f908 <line:65:5, line:66:14>
    | |-OpaqueValueExpr 0x1e7ea47f8f0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1e7ea47f8d8 <col:9, col:14> 'err' 0x1e7ea481030
    |-IfStmt 0x1e7ea47fa30 <line:69:5, line:70:14>
    | |-OpaqueValueExpr 0x1e7ea47fa18 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1e7ea47fa00 <col:9, col:14> 'err' 0x1e7ea481030
    |-IfStmt 0x1e7ea47fba8 <line:73:5, line:74:14>
    | |-OpaqueValueExpr 0x1e7ea47fb90 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1e7ea47fb78 <col:9, col:14> 'err' 0x1e7ea481030
    |-BinaryOperator 0x1e7ea47fc20 <line:76:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1e7ea47fbc0 <col:5> 'int' lvalue Var 0x1e7ea4809f0 'ret' 'int'
    | `-IntegerLiteral 0x1e7ea47fbf8 <col:11> 'int' 0
    |-LabelStmt 0x1e7ea47ff90 <line:78:2, line:83:5> 'err'
    | `-IfStmt 0x1e7ea47ff78 <line:80:5, line:83:5>
    |   |-ImplicitCastExpr 0x1e7ea47fc60 <line:80:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1e7ea47fc40 <col:9> 'int' lvalue Var 0x1e7ea4809f0 'ret' 'int'
    |   `-CompoundStmt 0x1e7ea47ff68 <col:14, line:83:5>
    `-ReturnStmt 0x1e7ea480480 <line:91:5, col:12>
      `-ImplicitCastExpr 0x1e7ea480468 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1e7ea480448 <col:12> 'int' lvalue Var 0x1e7ea4809f0 'ret' 'int'
