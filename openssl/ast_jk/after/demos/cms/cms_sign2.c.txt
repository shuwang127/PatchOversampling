TranslationUnitDecl 0x155844b46d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x155844b4f70 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x155844b4c70 '__int128'
|-TypedefDecl 0x155844b4fe0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x155844b4c90 'unsigned __int128'
|-TypedefDecl 0x155844b5318 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x155844b50d0 'struct __NSConstantString_tag'
|   `-Record 0x155844b5038 '__NSConstantString_tag'
|-TypedefDecl 0x155844b5388 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x155844b48b0 'unsigned long long'
|-TypedefDecl 0x155844b5420 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x155844b53e0 'char *'
|   `-BuiltinType 0x155844b4770 'char'
|-TypedefDecl 0x155844b5490 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x155844b53e0 'char *'
|   `-BuiltinType 0x155844b4770 'char'
`-FunctionDecl 0x15585f2e3d0 <.//openssl//file_jk/after\demos\cms\cms_sign2.c:15:1, line:98:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x155844b5500 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x155844b55b0 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x15585f30210 <line:16:1, line:98:1>
    |-DeclStmt 0x15585f2e588 <line:21:5, col:16>
    | `-VarDecl 0x15585f2e4f8 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x15585f2e560 <col:15> 'int' 1
    |-CallExpr 0x15585f2e720 <line:23:5, col:32> 'int'
    | `-ImplicitCastExpr 0x15585f2e708 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x15585f2e6b8 <col:5> 'int ()' Function 0x15585f2e5f0 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x15585f2e868 <line:24:5, col:29> 'int'
    | `-ImplicitCastExpr 0x15585f2e850 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x15585f2e830 <col:5> 'int ()' Function 0x15585f2e768 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x15585f2eb50 <line:28:5, line:29:14>
    | |-OpaqueValueExpr 0x15585f2eb38 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15585f2eb20 <col:9, col:14> 'err' 0x15585f2ead0
    |-IfStmt 0x15585f2f148 <line:41:5, line:42:14>
    | |-OpaqueValueExpr 0x15585f2f130 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15585f2f118 <col:9, col:14> 'err' 0x15585f2ead0
    |-IfStmt 0x15585f2f240 <line:50:5, line:51:14>
    | |-OpaqueValueExpr 0x15585f2f228 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15585f2f210 <col:9, col:14> 'err' 0x15585f2ead0
    |-IfStmt 0x15585f2f3a0 <line:55:5, line:56:14>
    | |-OpaqueValueExpr 0x15585f2f388 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15585f2f370 <col:9, col:14> 'err' 0x15585f2ead0
    |-IfStmt 0x15585f2f520 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x15585f2f508 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15585f2f4f0 <col:9, col:14> 'err' 0x15585f2ead0
    |-IfStmt 0x15585f2f6a0 <line:65:5, line:66:14>
    | |-OpaqueValueExpr 0x15585f2f688 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15585f2f670 <col:9, col:14> 'err' 0x15585f2ead0
    |-IfStmt 0x15585f2f730 <line:68:5, line:69:14>
    | |-OpaqueValueExpr 0x15585f2f718 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15585f2f700 <col:9, col:14> 'err' 0x15585f2ead0
    |-IfStmt 0x15585f2f898 <line:72:5, line:73:14>
    | |-OpaqueValueExpr 0x15585f2f880 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15585f2f868 <col:9, col:14> 'err' 0x15585f2ead0
    |-IfStmt 0x15585f2f9f0 <line:77:5, line:78:14>
    | |-OpaqueValueExpr 0x15585f2f9d8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x15585f2f9c0 <col:9, col:14> 'err' 0x15585f2ead0
    |-BinaryOperator 0x15585f2fa68 <line:80:5, col:11> 'int' '='
    | |-DeclRefExpr 0x15585f2fa08 <col:5> 'int' lvalue Var 0x15585f2e4f8 'ret' 'int'
    | `-IntegerLiteral 0x15585f2fa40 <col:11> 'int' 0
    |-LabelStmt 0x15585f2fde0 <line:82:2, line:87:5> 'err'
    | `-IfStmt 0x15585f2fdc8 <line:84:5, line:87:5>
    |   |-ImplicitCastExpr 0x15585f2faa8 <line:84:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x15585f2fa88 <col:9> 'int' lvalue Var 0x15585f2e4f8 'ret' 'int'
    |   `-CompoundStmt 0x15585f2fdb8 <col:14, line:87:5>
    `-ReturnStmt 0x15585f30200 <line:97:5, col:12>
      `-ImplicitCastExpr 0x15585f301e8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x15585f301c8 <col:12> 'int' lvalue Var 0x15585f2e4f8 'ret' 'int'
