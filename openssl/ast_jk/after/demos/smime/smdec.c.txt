TranslationUnitDecl 0x1dab95a7ce8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1dab95a8580 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1dab95a8280 '__int128'
|-TypedefDecl 0x1dab95a85f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1dab95a82a0 'unsigned __int128'
|-TypedefDecl 0x1dab95a8928 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1dab95a86e0 'struct __NSConstantString_tag'
|   `-Record 0x1dab95a8648 '__NSConstantString_tag'
|-TypedefDecl 0x1dab95a8998 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1dab95a7ec0 'unsigned long long'
|-TypedefDecl 0x1dab95a8a30 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1dab95a89f0 'char *'
|   `-BuiltinType 0x1dab95a7d80 'char'
|-TypedefDecl 0x1dab95a8aa0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1dab95a89f0 'char *'
|   `-BuiltinType 0x1dab95a7d80 'char'
`-FunctionDecl 0x1dabaf0f090 <.//openssl//file_jk/after\demos\smime\smdec.c:15:1, line:78:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1dab95a8b10 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x1dab95a8bc0 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x1dabaf09a40 <line:16:1, line:78:1>
    |-DeclStmt 0x1dabaf0f248 <line:21:5, col:16>
    | `-VarDecl 0x1dabaf0f1b8 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1dabaf0f220 <col:15> 'int' 1
    |-CallExpr 0x1dabaf0f3e0 <line:23:5, col:32> 'int'
    | `-ImplicitCastExpr 0x1dabaf0f3c8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1dabaf0f378 <col:5> 'int ()' Function 0x1dabaf0f2b0 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x1dabaf0f528 <line:24:5, col:29> 'int'
    | `-ImplicitCastExpr 0x1dabaf0f510 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1dabaf0f4f0 <col:5> 'int ()' Function 0x1dabaf0f428 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x1dabaf0f810 <line:29:5, line:30:14>
    | |-OpaqueValueExpr 0x1dabaf0f7f8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1dabaf0f7e0 <col:9, col:14> 'err' 0x1dabaf0f790
    |-IfStmt 0x1dabaf0fbd8 <line:38:5, line:39:14>
    | |-OpaqueValueExpr 0x1dabaf0fbc0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1dabaf0fba8 <col:9, col:14> 'err' 0x1dabaf0f790
    |-IfStmt 0x1dabaf0fd00 <line:45:5, line:46:14>
    | |-OpaqueValueExpr 0x1dabaf0fce8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1dabaf0fcd0 <col:9, col:14> 'err' 0x1dabaf0f790
    |-IfStmt 0x1dabaf0fe58 <line:51:5, line:52:14>
    | |-OpaqueValueExpr 0x1dabaf0fe40 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1dabaf0fe28 <col:9, col:14> 'err' 0x1dabaf0f790
    |-IfStmt 0x1dabaf0ffb8 <line:55:5, line:56:14>
    | |-OpaqueValueExpr 0x1dabaf0ffa0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1dabaf0ff88 <col:9, col:14> 'err' 0x1dabaf0f790
    |-IfStmt 0x1dabaf09170 <line:59:5, line:60:14>
    | |-OpaqueValueExpr 0x1dabaf09158 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1dabaf09140 <col:9, col:14> 'err' 0x1dabaf0f790
    |-BinaryOperator 0x1dabaf091e8 <line:62:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1dabaf09188 <col:5> 'int' lvalue Var 0x1dabaf0f1b8 'ret' 'int'
    | `-IntegerLiteral 0x1dabaf091c0 <col:11> 'int' 0
    |-LabelStmt 0x1dabaf09560 <line:64:2, line:68:5> 'err'
    | `-IfStmt 0x1dabaf09548 <line:65:5, line:68:5>
    |   |-ImplicitCastExpr 0x1dabaf09228 <line:65:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1dabaf09208 <col:9> 'int' lvalue Var 0x1dabaf0f1b8 'ret' 'int'
    |   `-CompoundStmt 0x1dabaf09538 <col:14, line:68:5>
    `-ReturnStmt 0x1dabaf09a30 <line:76:5, col:12>
      `-ImplicitCastExpr 0x1dabaf09a18 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1dabaf099f8 <col:12> 'int' lvalue Var 0x1dabaf0f1b8 'ret' 'int'
