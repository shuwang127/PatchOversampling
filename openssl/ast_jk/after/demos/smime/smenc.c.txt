TranslationUnitDecl 0x13b93ddf028 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x13b93ddf8c0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x13b93ddf5c0 '__int128'
|-TypedefDecl 0x13b93ddf930 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x13b93ddf5e0 'unsigned __int128'
|-TypedefDecl 0x13b93ddfc68 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x13b93ddfa20 'struct __NSConstantString_tag'
|   `-Record 0x13b93ddf988 '__NSConstantString_tag'
|-TypedefDecl 0x13b93ddfcd8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x13b93ddf200 'unsigned long long'
|-TypedefDecl 0x13b93ddfd70 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x13b93ddfd30 'char *'
|   `-BuiltinType 0x13b93ddf0c0 'char'
|-TypedefDecl 0x13b93ddfde0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x13b93ddfd30 'char *'
|   `-BuiltinType 0x13b93ddf0c0 'char'
`-FunctionDecl 0x13b95628640 <.//openssl//file_jk/after\demos\smime\smenc.c:15:1, line:91:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x13b93ddfe50 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x13b93ddff00 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x13b956222e0 <line:16:1, line:91:1>
    |-DeclStmt 0x13b95628930 <line:21:5, col:16>
    | `-VarDecl 0x13b956288a0 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x13b95628908 <col:15> 'int' 1
    |-DeclStmt 0x13b956289c8 <line:27:5, col:29>
    | `-VarDecl 0x13b95628960 <col:5, col:9> col:9 used flags 'int'
    |-CallExpr 0x13b95628b30 <line:29:5, col:32> 'int'
    | `-ImplicitCastExpr 0x13b95628b18 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x13b95628ad0 <col:5> 'int ()' Function 0x13b95628a08 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x13b95628c78 <line:30:5, col:29> 'int'
    | `-ImplicitCastExpr 0x13b95628c60 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x13b95628c40 <col:5> 'int ()' Function 0x13b95628b78 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x13b95628f60 <line:35:5, line:36:14>
    | |-OpaqueValueExpr 0x13b95628f48 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x13b95628f30 <col:9, col:14> 'err' 0x13b95628ee0
    |-IfStmt 0x13b956290e0 <line:40:5, line:41:14>
    | |-OpaqueValueExpr 0x13b956290c8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x13b956290b0 <col:9, col:14> 'err' 0x13b95628ee0
    |-IfStmt 0x13b95629380 <line:46:5, line:47:14>
    | |-OpaqueValueExpr 0x13b95629368 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x13b95629350 <col:9, col:14> 'err' 0x13b95628ee0
    |-IfStmt 0x13b956294e0 <line:59:5, line:60:14>
    | |-OpaqueValueExpr 0x13b956294c8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x13b956294b0 <col:9, col:14> 'err' 0x13b95628ee0
    |-IfStmt 0x13b95621758 <line:65:5, line:66:14>
    | |-OpaqueValueExpr 0x13b95621740 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x13b95621728 <col:9, col:14> 'err' 0x13b95628ee0
    |-IfStmt 0x13b95621880 <line:69:5, line:70:14>
    | |-OpaqueValueExpr 0x13b95621868 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x13b95621850 <col:9, col:14> 'err' 0x13b95628ee0
    |-IfStmt 0x13b956219f8 <line:73:5, line:74:14>
    | |-OpaqueValueExpr 0x13b956219e0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x13b956219c8 <col:9, col:14> 'err' 0x13b95628ee0
    |-BinaryOperator 0x13b95621a70 <line:76:5, col:11> 'int' '='
    | |-DeclRefExpr 0x13b95621a10 <col:5> 'int' lvalue Var 0x13b956288a0 'ret' 'int'
    | `-IntegerLiteral 0x13b95621a48 <col:11> 'int' 0
    |-LabelStmt 0x13b95621de0 <line:78:2, line:82:5> 'err'
    | `-IfStmt 0x13b95621dc8 <line:79:5, line:82:5>
    |   |-ImplicitCastExpr 0x13b95621ab0 <line:79:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x13b95621a90 <col:9> 'int' lvalue Var 0x13b956288a0 'ret' 'int'
    |   `-CompoundStmt 0x13b95621db8 <col:14, line:82:5>
    `-ReturnStmt 0x13b956222d0 <line:89:5, col:12>
      `-ImplicitCastExpr 0x13b956222b8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x13b95622298 <col:12> 'int' lvalue Var 0x13b956288a0 'ret' 'int'
