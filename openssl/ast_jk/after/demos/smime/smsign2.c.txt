TranslationUnitDecl 0x282bf23e168 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x282bf23ea00 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x282bf23e700 '__int128'
|-TypedefDecl 0x282bf23ea70 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x282bf23e720 'unsigned __int128'
|-TypedefDecl 0x282bf23eda8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x282bf23eb60 'struct __NSConstantString_tag'
|   `-Record 0x282bf23eac8 '__NSConstantString_tag'
|-TypedefDecl 0x282bf23ee18 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x282bf23e340 'unsigned long long'
|-TypedefDecl 0x282bf23eeb0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x282bf23ee70 'char *'
|   `-BuiltinType 0x282bf23e200 'char'
|-TypedefDecl 0x282bf23ef20 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x282bf23ee70 'char *'
|   `-BuiltinType 0x282bf23e200 'char'
`-FunctionDecl 0x282c0b79430 <.//openssl//file_jk/after\demos\smime\smsign2.c:15:1, line:96:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x282bf23ef90 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x282bf23f040 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x282c0b7d290 <line:16:1, line:96:1>
    |-DeclStmt 0x282c0b795e8 <line:21:5, col:16>
    | `-VarDecl 0x282c0b79558 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x282c0b795c0 <col:15> 'int' 1
    |-CallExpr 0x282c0b79780 <line:23:5, col:32> 'int'
    | `-ImplicitCastExpr 0x282c0b79768 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x282c0b79718 <col:5> 'int ()' Function 0x282c0b79650 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x282c0b798c8 <line:24:5, col:29> 'int'
    | `-ImplicitCastExpr 0x282c0b798b0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x282c0b79890 <col:5> 'int ()' Function 0x282c0b797c8 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x282c0b79bb0 <line:28:5, line:29:14>
    | |-OpaqueValueExpr 0x282c0b79b98 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x282c0b79b80 <col:9, col:14> 'err' 0x282c0b79b30
    |-IfStmt 0x282c0b7a1a8 <line:41:5, line:42:14>
    | |-OpaqueValueExpr 0x282c0b7a190 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x282c0b7a178 <col:9, col:14> 'err' 0x282c0b79b30
    |-IfStmt 0x282c0b7a2a0 <line:50:5, line:51:14>
    | |-OpaqueValueExpr 0x282c0b7a288 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x282c0b7a270 <col:9, col:14> 'err' 0x282c0b79b30
    |-IfStmt 0x282c0b7a400 <line:55:5, line:56:14>
    | |-OpaqueValueExpr 0x282c0b7a3e8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x282c0b7a3d0 <col:9, col:14> 'err' 0x282c0b79b30
    |-IfStmt 0x282c0b7c5a0 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x282c0b7c588 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x282c0b7c570 <col:9, col:14> 'err' 0x282c0b79b30
    |-IfStmt 0x282c0b7c720 <line:65:5, line:66:14>
    | |-OpaqueValueExpr 0x282c0b7c708 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x282c0b7c6f0 <col:9, col:14> 'err' 0x282c0b79b30
    |-IfStmt 0x282c0b7c7b0 <line:68:5, line:69:14>
    | |-OpaqueValueExpr 0x282c0b7c798 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x282c0b7c780 <col:9, col:14> 'err' 0x282c0b79b30
    |-IfStmt 0x282c0b7c918 <line:72:5, line:73:14>
    | |-OpaqueValueExpr 0x282c0b7c900 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x282c0b7c8e8 <col:9, col:14> 'err' 0x282c0b79b30
    |-IfStmt 0x282c0b7ca70 <line:77:5, line:78:14>
    | |-OpaqueValueExpr 0x282c0b7ca58 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x282c0b7ca40 <col:9, col:14> 'err' 0x282c0b79b30
    |-BinaryOperator 0x282c0b7cae8 <line:80:5, col:11> 'int' '='
    | |-DeclRefExpr 0x282c0b7ca88 <col:5> 'int' lvalue Var 0x282c0b79558 'ret' 'int'
    | `-IntegerLiteral 0x282c0b7cac0 <col:11> 'int' 0
    |-LabelStmt 0x282c0b7ce60 <line:82:2, line:86:5> 'err'
    | `-IfStmt 0x282c0b7ce48 <line:83:5, line:86:5>
    |   |-ImplicitCastExpr 0x282c0b7cb28 <line:83:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x282c0b7cb08 <col:9> 'int' lvalue Var 0x282c0b79558 'ret' 'int'
    |   `-CompoundStmt 0x282c0b7ce38 <col:14, line:86:5>
    `-ReturnStmt 0x282c0b7d280 <line:95:5, col:12>
      `-ImplicitCastExpr 0x282c0b7d268 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x282c0b7d248 <col:12> 'int' lvalue Var 0x282c0b79558 'ret' 'int'
