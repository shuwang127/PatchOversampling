TranslationUnitDecl 0x1da156a21c8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1da156a2a60 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1da156a2760 '__int128'
|-TypedefDecl 0x1da156a2ad0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1da156a2780 'unsigned __int128'
|-TypedefDecl 0x1da156a2e08 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1da156a2bc0 'struct __NSConstantString_tag'
|   `-Record 0x1da156a2b28 '__NSConstantString_tag'
|-TypedefDecl 0x1da156a2e78 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1da156a23a0 'unsigned long long'
|-TypedefDecl 0x1da156a2f10 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1da156a2ed0 'char *'
|   `-BuiltinType 0x1da156a2260 'char'
|-TypedefDecl 0x1da156a2f80 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1da156a2ed0 'char *'
|   `-BuiltinType 0x1da156a2260 'char'
`-FunctionDecl 0x1da1710a780 <.//openssl//file_jk/after\demos\smime\smsign2.c:15:1, line:96:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1da156a2ff0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x1da156a30a0 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x1da1710e5e0 <line:16:1, line:96:1>
    |-DeclStmt 0x1da1710a938 <line:21:5, col:16>
    | `-VarDecl 0x1da1710a8a8 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x1da1710a910 <col:15> 'int' 1
    |-CallExpr 0x1da1710aad0 <line:23:5, col:32> 'int'
    | `-ImplicitCastExpr 0x1da1710aab8 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1da1710aa68 <col:5> 'int ()' Function 0x1da1710a9a0 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x1da1710ac18 <line:24:5, col:29> 'int'
    | `-ImplicitCastExpr 0x1da1710ac00 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x1da1710abe0 <col:5> 'int ()' Function 0x1da1710ab18 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x1da1710af00 <line:28:5, line:29:14>
    | |-OpaqueValueExpr 0x1da1710aee8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1da1710aed0 <col:9, col:14> 'err' 0x1da1710ae80
    |-IfStmt 0x1da1710b4f8 <line:41:5, line:42:14>
    | |-OpaqueValueExpr 0x1da1710b4e0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1da1710b4c8 <col:9, col:14> 'err' 0x1da1710ae80
    |-IfStmt 0x1da1710b5f0 <line:50:5, line:51:14>
    | |-OpaqueValueExpr 0x1da1710b5d8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1da1710b5c0 <col:9, col:14> 'err' 0x1da1710ae80
    |-IfStmt 0x1da1710b750 <line:55:5, line:56:14>
    | |-OpaqueValueExpr 0x1da1710b738 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1da1710b720 <col:9, col:14> 'err' 0x1da1710ae80
    |-IfStmt 0x1da1710d8f0 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x1da1710d8d8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1da1710d8c0 <col:9, col:14> 'err' 0x1da1710ae80
    |-IfStmt 0x1da1710da70 <line:65:5, line:66:14>
    | |-OpaqueValueExpr 0x1da1710da58 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1da1710da40 <col:9, col:14> 'err' 0x1da1710ae80
    |-IfStmt 0x1da1710db00 <line:68:5, line:69:14>
    | |-OpaqueValueExpr 0x1da1710dae8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1da1710dad0 <col:9, col:14> 'err' 0x1da1710ae80
    |-IfStmt 0x1da1710dc68 <line:72:5, line:73:14>
    | |-OpaqueValueExpr 0x1da1710dc50 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1da1710dc38 <col:9, col:14> 'err' 0x1da1710ae80
    |-IfStmt 0x1da1710ddc0 <line:77:5, line:78:14>
    | |-OpaqueValueExpr 0x1da1710dda8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1da1710dd90 <col:9, col:14> 'err' 0x1da1710ae80
    |-BinaryOperator 0x1da1710de38 <line:80:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1da1710ddd8 <col:5> 'int' lvalue Var 0x1da1710a8a8 'ret' 'int'
    | `-IntegerLiteral 0x1da1710de10 <col:11> 'int' 0
    |-LabelStmt 0x1da1710e1b0 <line:82:2, line:86:5> 'err'
    | `-IfStmt 0x1da1710e198 <line:83:5, line:86:5>
    |   |-ImplicitCastExpr 0x1da1710de78 <line:83:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1da1710de58 <col:9> 'int' lvalue Var 0x1da1710a8a8 'ret' 'int'
    |   `-CompoundStmt 0x1da1710e188 <col:14, line:86:5>
    `-ReturnStmt 0x1da1710e5d0 <line:95:5, col:12>
      `-ImplicitCastExpr 0x1da1710e5b8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1da1710e598 <col:12> 'int' lvalue Var 0x1da1710a8a8 'ret' 'int'
