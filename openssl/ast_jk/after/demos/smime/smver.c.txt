TranslationUnitDecl 0x149a73d2288 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x149a73d2b20 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x149a73d2820 '__int128'
|-TypedefDecl 0x149a73d2b90 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x149a73d2840 'unsigned __int128'
|-TypedefDecl 0x149a73d2ec8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x149a73d2c80 'struct __NSConstantString_tag'
|   `-Record 0x149a73d2be8 '__NSConstantString_tag'
|-TypedefDecl 0x149a73d2f38 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x149a73d2460 'unsigned long long'
|-TypedefDecl 0x149a73d2fd0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x149a73d2f90 'char *'
|   `-BuiltinType 0x149a73d2320 'char'
|-TypedefDecl 0x149a73d3040 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x149a73d2f90 'char *'
|   `-BuiltinType 0x149a73d2320 'char'
`-FunctionDecl 0x149a75a7b50 <.//openssl//file_jk/after\demos\smime\smver.c:15:1, line:83:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x149a73d30b0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x149a73d3160 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x149a75a7538 <line:16:1, line:83:1>
    |-DeclStmt 0x149a75a7d08 <line:22:5, col:16>
    | `-VarDecl 0x149a75a7c78 <col:5, col:15> col:9 used ret 'int' cinit
    |   `-IntegerLiteral 0x149a75a7ce0 <col:15> 'int' 1
    |-CallExpr 0x149a75a7ea0 <line:24:5, col:32> 'int'
    | `-ImplicitCastExpr 0x149a75a7e88 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x149a75a7e38 <col:5> 'int ()' Function 0x149a75a7d70 'OpenSSL_add_all_algorithms' 'int ()'
    |-CallExpr 0x149a75a7fe8 <line:25:5, col:29> 'int'
    | `-ImplicitCastExpr 0x149a75a7fd0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x149a75a7fb0 <col:5> 'int ()' Function 0x149a75a7ee8 'ERR_load_crypto_strings' 'int ()'
    |-IfStmt 0x149a75a8410 <line:34:5, line:35:14>
    | |-OpaqueValueExpr 0x149a75a83f8 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x149a75a83e0 <col:9, col:14> 'err' 0x149a75a8390
    |-IfStmt 0x149a75a8590 <line:39:5, line:40:14>
    | |-OpaqueValueExpr 0x149a75a8578 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x149a75a8560 <col:9, col:14> 'err' 0x149a75a8390
    |-IfStmt 0x149a75a86e8 <line:42:5, line:43:14>
    | |-OpaqueValueExpr 0x149a75a86d0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x149a75a86b8 <col:9, col:14> 'err' 0x149a75a8390
    |-IfStmt 0x149a75a8848 <line:49:5, line:50:14>
    | |-OpaqueValueExpr 0x149a75a8830 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x149a75a8818 <col:9, col:14> 'err' 0x149a75a8390
    |-IfStmt 0x149a75a89a0 <line:55:5, line:56:14>
    | |-OpaqueValueExpr 0x149a75a8988 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x149a75a8970 <col:9, col:14> 'err' 0x149a75a8390
    |-IfStmt 0x149a75a8ac8 <line:60:5, line:61:14>
    | |-OpaqueValueExpr 0x149a75a8ab0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x149a75a8a98 <col:9, col:14> 'err' 0x149a75a8390
    |-IfStmt 0x149a75a6e80 <line:63:5, line:66:5>
    | |-OpaqueValueExpr 0x149a75a6e68 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x149a75a6e50 <line:63:52, line:66:5>
    |   `-GotoStmt 0x149a75a6e38 <line:65:9, col:14> 'err' 0x149a75a8390
    |-BinaryOperator 0x149a75a6f88 <line:70:5, col:11> 'int' '='
    | |-DeclRefExpr 0x149a75a6f28 <col:5> 'int' lvalue Var 0x149a75a7c78 'ret' 'int'
    | `-IntegerLiteral 0x149a75a6f60 <col:11> 'int' 0
    |-LabelStmt 0x149a75a7168 <line:72:2, line:76:5> 'err'
    | `-IfStmt 0x149a75a7150 <line:73:5, line:76:5>
    |   |-ImplicitCastExpr 0x149a75a6fc8 <line:73:9> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x149a75a6fa8 <col:9> 'int' lvalue Var 0x149a75a7c78 'ret' 'int'
    |   `-CompoundStmt 0x149a75a7140 <col:14, line:76:5>
    `-ReturnStmt 0x149a75a7528 <line:82:5, col:12>
      `-ImplicitCastExpr 0x149a75a7510 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x149a75a74f0 <col:12> 'int' lvalue Var 0x149a75a7c78 'ret' 'int'
