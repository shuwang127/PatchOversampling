TranslationUnitDecl 0x25907567038 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x259075678d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x259075675d0 '__int128'
|-TypedefDecl 0x25907567940 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x259075675f0 'unsigned __int128'
|-TypedefDecl 0x25907567c78 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x25907567a30 'struct __NSConstantString_tag'
|   `-Record 0x25907567998 '__NSConstantString_tag'
|-TypedefDecl 0x25907567ce8 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x25907567210 'unsigned long long'
|-TypedefDecl 0x25907567d80 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x25907567d40 'char *'
|   `-BuiltinType 0x259075670d0 'char'
|-TypedefDecl 0x25907567df0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x25907567d40 'char *'
|   `-BuiltinType 0x259075670d0 'char'
|-FunctionDecl 0x25908e01f80 <.//openssl//file_jk/after\fuzz/fuzzer.h:11:1, col:54> col:5 invalid FuzzerTestOneInput 'int (const int *, size_t)'
| |-ParmVarDecl 0x25907567e60 <col:24, col:39> col:39 invalid buf 'const int *'
| `-ParmVarDecl 0x25907567f00 <col:44, col:51> col:51 len 'size_t':'unsigned long long'
|-FunctionDecl 0x25908e02260 <line:12:1, col:45> col:5 FuzzerInitialize 'int (int *, char ***)'
| |-ParmVarDecl 0x25908e02070 <col:22, col:27> col:27 argc 'int *'
| `-ParmVarDecl 0x25908e02158 <col:33, col:41> col:41 argv 'char ***'
|-FunctionDecl 0x25908e024e0 prev 0x25908e02260 <.//openssl//file_jk/after\fuzz\cms.c:19:1, line:21:1> line:19:5 FuzzerInitialize 'int (int *, char ***)'
| |-ParmVarDecl 0x25908e02388 <col:22, col:27> col:27 argc 'int *'
| |-ParmVarDecl 0x25908e02410 <col:33, col:41> col:41 argv 'char ***'
| `-CompoundStmt 0x25908e025c8 <col:47, line:21:1>
|   `-ReturnStmt 0x25908e025b8 <line:20:5, col:12>
|     `-IntegerLiteral 0x25908e02590 <col:12> 'int' 1
`-FunctionDecl 0x25908e02710 <line:23:1, line:36:1> line:23:5 invalid FuzzerTestOneInput 'int (const int *, size_t)'
  |-ParmVarDecl 0x25908e025f8 <col:24, col:39> col:39 invalid buf 'const int *'
  |-ParmVarDecl 0x25908e02670 <col:44, col:51> col:51 used len 'size_t':'unsigned long long'
  `-CompoundStmt 0x25908e041d0 <col:56, line:36:1>
    |-IfStmt 0x25908e02890 <line:26:5, line:28:5>
    | |-UnaryOperator 0x25908e02828 <line:26:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x25908e02810 <col:10> 'size_t':'unsigned long long' <LValueToRValue>
    | |   `-DeclRefExpr 0x25908e027d8 <col:10> 'size_t':'unsigned long long' lvalue ParmVar 0x25908e02670 'len' 'size_t':'unsigned long long'
    | `-CompoundStmt 0x25908e02878 <col:15, line:28:5>
    |   `-ReturnStmt 0x25908e02868 <line:27:9, col:16>
    |     `-IntegerLiteral 0x25908e02840 <col:16> 'int' 0
    `-ReturnStmt 0x25908e041c0 <line:35:5, col:12>
      `-IntegerLiteral 0x25908e04198 <col:12> 'int' 0
