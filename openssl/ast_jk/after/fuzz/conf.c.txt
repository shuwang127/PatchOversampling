TranslationUnitDecl 0x190053338e8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x19005334180 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x19005333e80 '__int128'
|-TypedefDecl 0x190053341f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x19005333ea0 'unsigned __int128'
|-TypedefDecl 0x19005334528 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x190053342e0 'struct __NSConstantString_tag'
|   `-Record 0x19005334248 '__NSConstantString_tag'
|-TypedefDecl 0x19005334598 <<invalid sloc>> <invalid sloc> implicit referenced size_t 'unsigned long long'
| `-BuiltinType 0x19005333ac0 'unsigned long long'
|-TypedefDecl 0x19005334630 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x190053345f0 'char *'
|   `-BuiltinType 0x19005333980 'char'
|-TypedefDecl 0x190053346a0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x190053345f0 'char *'
|   `-BuiltinType 0x19005333980 'char'
|-FunctionDecl 0x19006c1c700 <.//openssl//file_jk/after\fuzz/fuzzer.h:11:1, col:54> col:5 invalid FuzzerTestOneInput 'int (const int *, size_t)'
| |-ParmVarDecl 0x19005334728 <col:24, col:39> col:39 invalid buf 'const int *'
| `-ParmVarDecl 0x190053347c0 <col:44, col:51> col:51 len 'size_t':'unsigned long long'
|-FunctionDecl 0x19006c1c9e0 <line:12:1, col:45> col:5 FuzzerInitialize 'int (int *, char ***)'
| |-ParmVarDecl 0x19006c1c7f0 <col:22, col:27> col:27 argc 'int *'
| `-ParmVarDecl 0x19006c1c8d8 <col:33, col:41> col:41 argv 'char ***'
|-FunctionDecl 0x19006c1cc60 prev 0x19006c1c9e0 <.//openssl//file_jk/after\fuzz\conf.c:18:1, line:20:1> line:18:5 FuzzerInitialize 'int (int *, char ***)'
| |-ParmVarDecl 0x19006c1cb08 <col:22, col:27> col:27 argc 'int *'
| |-ParmVarDecl 0x19006c1cb90 <col:33, col:41> col:41 argv 'char ***'
| `-CompoundStmt 0x19006c1cd48 <col:47, line:20:1>
|   `-ReturnStmt 0x19006c1cd38 <line:19:5, col:12>
|     `-IntegerLiteral 0x19006c1cd10 <col:12> 'int' 1
`-FunctionDecl 0x19006c1ce90 <line:22:1, line:38:1> line:22:5 invalid FuzzerTestOneInput 'int (const int *, size_t)'
  |-ParmVarDecl 0x19006c1cd78 <col:24, col:39> col:39 invalid buf 'const int *'
  |-ParmVarDecl 0x19006c1cdf0 <col:44, col:51> col:51 used len 'size_t':'unsigned long long'
  `-CompoundStmt 0x19006c17af8 <col:56, line:38:1>
    |-DeclStmt 0x19006c1cfd8 <line:25:5, col:15>
    | `-VarDecl 0x19006c1cf70 <col:5, col:10> col:10 used eline 'long'
    |-IfStmt 0x19006c1d0d8 <line:27:5, line:28:16>
    | |-BinaryOperator 0x19006c1d080 <line:27:9, col:16> 'int' '=='
    | | |-ImplicitCastExpr 0x19006c1d050 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
    | | | `-DeclRefExpr 0x19006c1cff0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x19006c1cdf0 'len' 'size_t':'unsigned long long'
    | | `-ImplicitCastExpr 0x19006c1d068 <col:16> 'unsigned long long' <IntegralCast>
    | |   `-IntegerLiteral 0x19006c1d028 <col:16> 'int' 0
    | `-ReturnStmt 0x19006c1d0c8 <line:28:9, col:16>
    |   `-IntegerLiteral 0x19006c1d0a0 <col:16> 'int' 0
    `-ReturnStmt 0x19006c17ae8 <line:37:5, col:12>
      `-IntegerLiteral 0x19006c17ac0 <col:12> 'int' 0
