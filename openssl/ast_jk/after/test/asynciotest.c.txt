TranslationUnitDecl 0x23b715a0388 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x23b715a0c20 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x23b715a0920 '__int128'
|-TypedefDecl 0x23b715a0c90 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x23b715a0940 'unsigned __int128'
|-TypedefDecl 0x23b715a0fc8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x23b715a0d80 'struct __NSConstantString_tag'
|   `-Record 0x23b715a0ce8 '__NSConstantString_tag'
|-TypedefDecl 0x23b715a1038 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x23b715a0560 'unsigned long long'
|-TypedefDecl 0x23b715a10d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x23b715a1090 'char *'
|   `-BuiltinType 0x23b715a0420 'char'
|-TypedefDecl 0x23b715a1140 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x23b715a1090 'char *'
|   `-BuiltinType 0x23b715a0420 'char'
|-TypedefDecl 0x23b715a1200 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x23b715a0560 'unsigned long long'
|-TypedefDecl 0x23b715a1270 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x23b715a1090 'char *'
|   `-BuiltinType 0x23b715a0420 'char'
|-FunctionDecl 0x23b7319c3f0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x23b7319c490 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x23b7319c500 <col:21> Implicit
|-FunctionDecl 0x23b7319c558 prev 0x23b7319c3f0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x23b7319c280 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x23b7319c648 <col:21> Inherited Implicit
|-TypedefDecl 0x23b7319c688 prev 0x23b715a1038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x23b715a0560 'unsigned long long'
|-TypedefDecl 0x23b7319c730 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x23b7319c700 'size_t' sugar
|   |-Typedef 0x23b7319c688 'size_t'
|   `-BuiltinType 0x23b715a0560 'unsigned long long'
|-TypedefDecl 0x23b7319c7a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x23b715a04c0 'long long'
|-TypedefDecl 0x23b7319c810 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x23b715a04c0 'long long'
|-TypedefDecl 0x23b7319c880 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x23b715a0500 'unsigned short'
|-TypedefDecl 0x23b7319c8f0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x23b715a0500 'unsigned short'
|-TypedefDecl 0x23b7319c960 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x23b715a0500 'unsigned short'
|-TypedefDecl 0x23b7319c9d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x23b715a0480 'int'
|-TypedefDecl 0x23b7319ca40 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x23b715a04a0 'long'
|-TypedefDecl 0x23b7319cab0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x23b715a04c0 'long long'
|-TypedefDecl 0x23b7319cb40 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x23b7319cb10 '__time64_t' sugar
|   |-Typedef 0x23b7319cab0 '__time64_t'
|   `-BuiltinType 0x23b715a04c0 'long long'
|-FunctionDecl 0x23b7319ccb8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x23b7319ced8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x23b731d7810 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x23b7319d018 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x23b7319d090 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x23b7319d108 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x23b7319d188 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x23b731d75b0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x23b731d78f0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x23b731d79b0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x23b731d7b20 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x23b731d7ad0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x23b731d7a70 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x23b731d7990 'struct threadlocaleinfostruct'
|       `-Record 0x23b731da5e0 'threadlocaleinfostruct'
|-TypedefDecl 0x23b731d7c30 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x23b731d7be0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x23b731d7b80 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x23b731d7a50 'struct threadmbcinfostruct'
|       `-Record 0x23b731d79b0 'threadmbcinfostruct'
|-RecordDecl 0x23b731d7c88 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x23b731d7d40 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x23b731d7e00 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23b731d7e90 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x23b731d7f20 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x23b731d7fd8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x23b731d7f80 'struct localeinfo_struct' sugar
|   `-RecordType 0x23b731d7de0 'struct localeinfo_struct'
|     `-Record 0x23b731d7d40 'localeinfo_struct'
|-TypedefDecl 0x23b731d80b0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x23b731d8060 'struct localeinfo_struct *'
|   `-ElaboratedType 0x23b731d7f80 'struct localeinfo_struct' sugar
|     `-RecordType 0x23b731d7de0 'struct localeinfo_struct'
|       `-Record 0x23b731d7d40 'localeinfo_struct'
|-RecordDecl 0x23b731d8128 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x23b731d81e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23b731d8258 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x23b731d8318 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x23b731d83b0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x23b731d8420 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x23b731d84d8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x23b731d8480 'struct localerefcount' sugar
|   `-RecordType 0x23b731d81c0 'struct localerefcount'
|     `-Record 0x23b731d8128 'localerefcount'
|-RecordDecl 0x23b731da5e0 prev 0x23b731d78f0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x23b731da660 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23b731da6d8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x23b731da748 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x23b731da7b8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x23b731da828 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x23b731da9e8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x23b731daa58 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x23b731daac8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x23b731dab38 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x23b731daba8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x23b731dac18 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x23b731dac70 parent 0x23b715a0388 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x23b731dae00 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x23b731dae70 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x23b731daee0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x23b731daf50 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x23b731daff0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x23b731db060 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x23b731db170 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x23b731db2a8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x23b731db358 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x23b731db300 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x23b731d7990 'struct threadlocaleinfostruct'
|     `-Record 0x23b731da5e0 'threadlocaleinfostruct'
|-FunctionDecl 0x23b731e2870 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x23b731db3e0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x23b731db490 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x23b731db510 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x23b731e2660 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731e2c38 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x23b731e2cd8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x23b731e2d40 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x23b731e2da8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b731e2e28 prev 0x23b731e2c38 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x23b731e2960 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x23b731e29e0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x23b731e2a58 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731e31e8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x23b731e2f10 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x23b731e2f90 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x23b731e3008 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731e36c0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b731e32d0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x23b731e3350 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x23b731e33c8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b731e3460 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b731e39c8 <line:51:32> col:32 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x23b731e3a68 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x23b731e3ad0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x23b731e3b38 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b731e3bb8 prev 0x23b731e39c8 <col:16, col:144> col:32 used memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x23b731e37b0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x23b731e3830 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x23b731e38a8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731e3f78 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x23b731e4018 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x23b731e4080 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x23b731e40e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b731e4168 prev 0x23b731e3f78 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x23b731e3ca0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x23b731e3d20 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x23b731e3d98 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731dd610 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x23b731e4278 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x23b731e4310 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x23b731e4390 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x23b731e4408 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x23b731dd9d8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x23b731dda78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x23b731ddae0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x23b731ddb48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b731ddbc8 prev 0x23b731dd9d8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x23b731dd700 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x23b731dd780 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x23b731dd7f8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731de048 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x23b731de0e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x23b731de150 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x23b731de1b8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x23b731de220 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b731de2a8 prev 0x23b731de048 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x23b731ddd90 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x23b731dde10 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x23b731dde90 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x23b731ddf08 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b731de368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x23b731e8858 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x23b731de530 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x23b731e86c0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x23b731e8738 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b731e8910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x23b731e8d00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x23b731e8a38 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x23b731e8ab0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b731e8b30 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x23b731e90d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x23b731e8ee0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x23b731e8f60 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x23b731e9180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b731e9590 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x23b731e92c8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x23b731e9340 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x23b731e93c0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x23b731ea9a0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x23b731eaa40 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x23b731eaaa8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23b731eab20 prev 0x23b731ea9a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x23b731ea7b8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x23b731ea838 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x23b731eabd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b731eaf28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x23b731ead18 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x23b731ead90 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x23b731eae10 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x23b731eb250 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x23b731eb2f0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x23b731eb358 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23b731eb3d0 prev 0x23b731eb250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x23b731eb0d0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x23b731eb150 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x23b731eb480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b731eb7c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x23b731eb860 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b731eb8c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23b731eb940 prev 0x23b731eb7c0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x23b731eb5c8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x23b731eb648 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x23b731ebb90 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x23b731ebc30 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23b731ebca0 prev 0x23b731ebb90 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x23b731eba20 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x23b731ebf98 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x23b731ebd78 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x23b731ebdf0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731ec1e8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x23b731ec078 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x23b731ec0f0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x23b731ec518 <line:131:1, line:133:1>
|   `-ReturnStmt 0x23b731ec508 <line:132:5, col:51>
|     `-ConditionalOperator 0x23b731ec4d8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x23b731ec348 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x23b731ec328 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x23b731ec2f8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x23b731ec2b0 <col:13> 'const char *' lvalue ParmVar 0x23b731ec078 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x23b731ec310 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x23b731ec2d0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x23b731ec4c0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x23b731ec368 <col:24> 'int' 0
|       `-CallExpr 0x23b731ec460 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x23b731ec448 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x23b731ec390 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x23b731ebf98 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x23b731ec490 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x23b731ec3b0 <col:36> 'const char *' lvalue ParmVar 0x23b731ec078 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x23b731ec4a8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x23b731ec3d0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x23b731ec0f0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731e77e8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x23b731ec548 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x23b731ec5c0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x23b731ec640 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x23b731e76b0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x23b731e7af0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x23b731e7b90 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x23b731e7bf8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x23b731e7c60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b731e7ce0 prev 0x23b731e7af0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x23b731e78d8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x23b731e7958 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x23b731e79d0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731e7f18 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x23b731e7dc8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x23b731e81e0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x23b731e8280 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b731e82e8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x23b731e8360 prev 0x23b731e81e0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x23b731e7ff0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x23b731e8070 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x23b731e85c0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x23b731e8440 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x23b731e84c0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x23b731e4800 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x23b731e4680 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x23b731e4700 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x23b731e4bb8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x23b731e48e0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x23b731e4960 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x23b731e49d8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b731e4e20 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x23b731e4ca0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x23b731e4d20 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x23b731e5118 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x23b731e4f00 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x23b731e4f80 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x23b731e4ff8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b731e5380 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x23b731e5200 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x23b731e5280 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x23b731ec700 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x23b731e5460 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x23b731e54e0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x23b731e5558 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b731ecab8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x23b731ec7e8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x23b731ec868 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x23b731ec8e0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731ecf20 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b731ecba0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x23b731ecc20 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x23b731ecc98 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b731ecd10 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b731ed228 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x23b731ed010 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x23b731ed090 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x23b731ed108 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731ed5c0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b731ed310 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x23b731ed390 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x23b731ed408 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b731ed480 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b731e58b8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x23b731e5958 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b731e59c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23b731e5a38 prev 0x23b731e58b8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x23b731e5690 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x23b731e5710 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x23b731e5cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x23b731e5c10 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x23b731e5d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b731e6170 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x23b731e5ee0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x23b731e5f58 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b731e5fd8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x23b731e6488 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x23b731e6528 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x23b731e6598 prev 0x23b731e6488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x23b731e6350 <col:90> col:93 'int'
| `-DeprecatedAttr 0x23b731e6640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b731e69b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x23b731e67a0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x23b731e6818 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b731e6898 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x23b731e6cb8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x23b731e6a98 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x23b731e6b10 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731e6fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23b731e6e58 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x23b731e7050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b731e7460 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b731e7198 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x23b731e7210 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b731e7288 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b731ed8c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x23b731e7608 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x23b731ed710 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23b731ed970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b731ede28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x23b731edab8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x23b731edb30 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x23b731edbb0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x23b731edc28 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x23b731ee2a8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x23b731ee348 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x23b731ee3b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b731ee418 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b731ee498 prev 0x23b731ee2a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x23b731edfd8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x23b731ee058 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x23b731ee0d0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b731ee550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b731f08f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x23b731f0990 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x23b731f09f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b731f0a60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b731f0ae0 prev 0x23b731f08f0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x23b731ee698 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x23b731f0758 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x23b731f07d0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731f0de0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x23b731f0bc8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x23b731f0c48 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x23b731f0cc0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731f1178 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b731f0ec8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x23b731f0f48 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x23b731f0fc0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b731f1038 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b731f1510 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x23b731f1268 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x23b731f12e0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x23b731f1360 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x23b731f13d8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x23b731ee8b8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x23b731ee958 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x23b731ee9c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b731eea28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b731eeaa8 prev 0x23b731ee8b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x23b731f16c0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x23b731ee720 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x23b731ee798 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b731eeb60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b731ef018 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x23b731eeca8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x23b731eed20 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23b731eeda0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x23b731eee18 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b731ef498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x23b731ef1c8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x23b731ef248 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x23b731ef2c0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b731ef550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b731ef8a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x23b731ef940 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b731ef9a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23b731efa20 prev 0x23b731ef8a0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x23b731ef698 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x23b731ef730 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x23b731efc80 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x23b731efd20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b731efd88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x23b731efe00 prev 0x23b731efc80 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x23b731efb00 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x23b731efb80 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x23b731effc0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x23b731efee0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x23b731f0210 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x23b731f02b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b731f0318 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23b731f0390 prev 0x23b731f0210 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x23b731f0098 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x23b731f0118 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x23b731f05f0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x23b731f0690 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b73269030 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23b732690a8 prev 0x23b731f05f0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x23b731f0470 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x23b731f04f0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x23b732693c8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x23b73269468 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x23b732694d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23b73269548 prev 0x23b732693c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x23b73269248 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x23b732692c8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x23b732695f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b732699d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x23b73269740 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x23b732697c0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x23b73269840 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x23b73269c30 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x23b73269ac0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x23b73269b38 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x23b73269eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23b73269dd0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x23b73269f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b732652f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b732650f0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x23b73265168 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b732651e0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b73265618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x23b732654a0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x23b73265518 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23b732656c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b73265ae0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x23b73265b80 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x23b73265be8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x23b73265c50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b73265cd0 prev 0x23b73265ae0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x23b73265810 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x23b73265890 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x23b73265908 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b73266138 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b73265db8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x23b73265e38 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x23b73265eb0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b73265f28 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b732663e0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x23b73266480 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x23b732664f0 prev 0x23b732663e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x23b73266300 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x23b73266598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x23b732668e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x23b73266760 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x23b732667e0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x23b73266990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x23b73266cd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x23b73266b58 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x23b73266bd8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x23b73266d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x23b73264018 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23b73266f50 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x23b732640c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x23b732644d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x23b732642c0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x23b73264340 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x23b732643b8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b73264590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x23b73264970 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x23b73264758 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x23b732647d8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x23b73264850 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b73264a28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x23b73264cd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23b73264bf0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x23b73264d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x23b7326b150 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x23b73264f40 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x23b7326b050 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x23b7326b200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x23b7326b4a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x23b7326b3c8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x23b7326b550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x23b7326b7e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x23b7326b670 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x23b7326bb70 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x23b7326b8b0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23b7326b928 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x23b7326b9a0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x23b7326bf28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b7326bd10 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23b7326bd88 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x23b7326bfd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b7326a358 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x23b7326a3f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x23b7326a460 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x23b7326a4d8 prev 0x23b7326a358 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x23b7326a138 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x23b7326a1b0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x23b7326a7d0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x23b7326a870 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x23b7326a8d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x23b7326a950 prev 0x23b7326a7d0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x23b7326a5b0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x23b7326a628 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x23b7326ac30 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x23b7326aa28 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23b7326aaa0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x23b7326ab18 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x23b7326af40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b7326add0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23b7326ae48 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x23b7326aff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b7326d388 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b7326d168 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x23b7326d1e0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x23b7326d5d0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x23b7326d670 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x23b7326d6e0 prev 0x23b7326d5d0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x23b7326d460 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x23b7326d9c8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x23b7326d7b0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x23b7326d828 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b7326dc10 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x23b7326daa0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x23b7326db18 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x23b7326dfa8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x23b7326df98 <line:307:5, col:56>
|     `-ConditionalOperator 0x23b7326df68 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x23b7326ddd0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x23b7326ddb0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x23b7326dd80 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x23b7326dcd8 <col:13> 'const wchar_t *' lvalue ParmVar 0x23b7326daa0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x23b7326dd98 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x23b7326dd60 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x23b7326dd38 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x23b7326dcf8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x23b7326df50 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x23b7326ddf0 <col:29> 'int' 0
|       `-CallExpr 0x23b7326def0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x23b7326ded8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x23b7326de18 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x23b7326d9c8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x23b7326df20 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x23b7326de38 <col:41> 'const wchar_t *' lvalue ParmVar 0x23b7326daa0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x23b7326df38 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x23b7326de58 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x23b7326db18 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x23b73268318 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x23b7326dfd0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23b73268020 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x23b73268098 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x23b73268110 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x23b73268780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x23b732684c0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23b73268538 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x23b732685b0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b73268838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b73268c48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x23b73268ce8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x23b73268d50 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x23b73268db8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x23b73268e38 prev 0x23b73268c48 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x23b73268978 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b732689f0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x23b73268a68 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b7326c210 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x23b73268f18 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23b73268f90 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x23b7326c060 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x23b7326c0d8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x23b7326c5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x23b7326c3b8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x23b7326c430 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x23b7326c4a8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b7326c678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b7326c9d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b7326c7b8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x23b7326c830 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x23b7326cc20 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x23b7326cab0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x23b7326cb28 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x23b7326ce68 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b7326ccf8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x23b7326cd70 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x23b73267070 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b7326cf40 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x23b7326cfb8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x23b73267378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b73267208 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x23b73267280 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x23b73267428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b73267890 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x23b73267568 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x23b732675e0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x23b732676c0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x23b73267bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x23b73267a38 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x23b73267c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b73271120 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x23b73267d98 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x23b73267e10 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b73267e90 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x23b732713d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x23b732712f8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x23b73271478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b73271840 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x23b732715b8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x23b73271630 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b732716a8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x23b73271a98 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b73271920 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x23b73271998 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x23b73271e38 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x23b73271b70 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b73271be8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x23b73271c60 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b73277198 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x23b73271f18 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b73271f90 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x23b73272008 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b732775f0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b73277278 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b732772f0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x23b73277368 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b732773e0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b73277a48 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x23b732776d8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23b73277750 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x23b732777c8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x23b73277840 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b73277eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x23b73277bf0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x23b73277c68 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x23b73277ce0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b73277f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b73275200 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x23b732780a8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x23b73275590 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x23b732752d0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23b73275348 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b732753c0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x23b73275948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x23b73275730 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x23b732757a8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x23b732759f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b73275d58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x23b73275b38 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x23b73275bb0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x23b73275fc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23b73275ef0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x23b73276070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b73272480 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b732721b8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x23b73272230 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b732722a8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b73272838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x23b73272620 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x23b73272698 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23b732728e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b73272b98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x23b73272a28 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x23b73272aa0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x23b73272e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23b73272d30 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x23b73272eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b73270230 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b73272ff0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x23b732700a0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b73270118 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b73270540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x23b732703d0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x23b73270448 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x23b732705f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x23b732709f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x23b73270730 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23b732707a8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x23b73270820 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b73270e38 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b73270ad0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x23b73270b48 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x23b73270bc0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b73270c38 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b73278120 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b73270f20 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x23b73270f98 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x23b73278408 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x23b732781f8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b73278270 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x23b732782e8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b73278660 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b732784e8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x23b73278560 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x23b73278948 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x23b73278738 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b732787b0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x23b73278828 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b73278c38 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x23b73278a28 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b73278aa0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x23b73278b18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b73278fc0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b73278d18 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b73278d90 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x23b73278e08 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b73278e80 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b73276298 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x23b732790a8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b73276100 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x23b73276178 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x23b73276620 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x23b73276378 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b732763f0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x23b73276468 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x23b732764e0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x23b73276880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x23b732767a8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x23b73276928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x23b73276c60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b73276ae8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b73276b60 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x23b73276d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x23b73279130 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x23b73276ed0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b73276f48 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x23b73276fc0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b732791e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x23b732795b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x23b732793a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x23b73279420 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x23b73279498 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x23b73279668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x23b73279900 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23b73279828 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x23b732799a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x23b73279cd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x23b73279b68 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x23b73279be0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x23b73279d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x23b7327a020 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23b73279f48 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x23b7327a0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x23b7327a390 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x23b7327a2b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x23b7327a438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x23b7327a770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x23b7327a5f8 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x23b7327a670 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x23b7327a820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-RecordDecl 0x23b7327a930 <.//openssl//file_jk/after\test/../ssl/packet_locl.h:25:9, line:30:1> line:25:9 struct definition
| |-FieldDecl 0x23b7327aa08 <line:27:5, col:26> col:26 referenced curr 'const unsigned char *'
| `-FieldDecl 0x23b7327aa70 <line:29:5, col:12> col:12 referenced remaining 'size_t':'unsigned long long'
|-TypedefDecl 0x23b7327ab28 <line:25:1, line:30:3> col:3 referenced PACKET 'struct PACKET':'PACKET'
| `-ElaboratedType 0x23b7327aad0 'struct PACKET' sugar
|   `-RecordType 0x23b7327a9d0 'PACKET'
|     `-Record 0x23b7327a930 ''
|-FunctionDecl 0x23b7327adf0 <line:33:1, line:37:1> line:33:25 invalid packet_forward 'int (PACKET *, size_t)' static
| |-ParmVarDecl 0x23b7327ac28 <col:40, col:48> col:48 used pkt 'PACKET *'
| |-ParmVarDecl 0x23b7327aca0 <col:53, col:60> col:60 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x23b7327b058 <line:34:1, line:37:1>
|   |-CompoundAssignOperator 0x23b7327af58 <line:35:5, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-MemberExpr 0x23b7327aef0 <col:5, col:10> 'const unsigned char *' lvalue ->curr 0x23b7327aa08
|   | | `-ImplicitCastExpr 0x23b7327aed8 <col:5> 'PACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x23b7327aeb8 <col:5> 'PACKET *' lvalue ParmVar 0x23b7327ac28 'pkt' 'PACKET *'
|   | `-ImplicitCastExpr 0x23b7327af40 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x23b7327af20 <col:18> 'size_t':'unsigned long long' lvalue ParmVar 0x23b7327aca0 'len' 'size_t':'unsigned long long'
|   `-CompoundAssignOperator 0x23b7327b028 <line:36:5, col:23> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     |-MemberExpr 0x23b7327afc0 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->remaining 0x23b7327aa70
|     | `-ImplicitCastExpr 0x23b7327afa8 <col:5> 'PACKET *' <LValueToRValue>
|     |   `-DeclRefExpr 0x23b7327af88 <col:5> 'PACKET *' lvalue ParmVar 0x23b7327ac28 'pkt' 'PACKET *'
|     `-ImplicitCastExpr 0x23b7327b010 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x23b7327aff0 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x23b7327aca0 'len' 'size_t':'unsigned long long'
|-VarDecl 0x23b7327b090 <line:42:1, col:20> col:20 invalid size_t 'int' static
|-FunctionDecl 0x23b7327e560 <.//openssl//file_jk/after\test/ssltestlib.h:19:1, line:20:70> line:19:5 invalid create_ssl_objects 'int (int *, int *, int **, int **, int *, int *)'
| |-ParmVarDecl 0x23b7327e180 <col:24, col:33> col:33 invalid serverctx 'int *'
| |-ParmVarDecl 0x23b7327e200 <col:44, col:53> col:53 invalid clientctx 'int *'
| |-ParmVarDecl 0x23b7327e2b8 <col:64, col:70> col:70 invalid sssl 'int **'
| |-ParmVarDecl 0x23b7327e340 <line:20:24, col:30> col:30 invalid cssl 'int **'
| |-ParmVarDecl 0x23b7327e3c0 <col:36, col:41> col:41 invalid s_to_c_fbio 'int *'
| `-ParmVarDecl 0x23b7327e440 <col:54, col:59> col:59 invalid c_to_s_fbio 'int *'
|-FunctionDecl 0x23b7327e7a0 <line:21:1, col:57> col:5 invalid create_ssl_connection 'int (int *, int *)'
| |-ParmVarDecl 0x23b7327e648 <col:27, col:32> col:32 invalid serverssl 'int *'
| `-ParmVarDecl 0x23b7327e6c8 <col:43, col:48> col:48 invalid clientssl 'int *'
|-FunctionDecl 0x23b7327e920 <line:24:1, col:45> col:19 invalid bio_f_tls_dump_filter 'const int *(void)'
|-FunctionDecl 0x23b7327ea58 <line:25:1, col:37> col:6 bio_f_tls_dump_filter_free 'void (void)'
|-FunctionDecl 0x23b7327ebb0 <line:27:1, col:44> col:19 invalid bio_s_mempacket_test 'const int *(void)'
|-FunctionDecl 0x23b7327ece8 <line:28:1, col:36> col:6 bio_s_mempacket_test_free 'void (void)'
|-FunctionDecl 0x23b7327f0c0 <line:34:1, line:35:35> line:34:5 invalid mempacket_test_inject 'int (int *, const char *, int, int, int)'
| |-ParmVarDecl 0x23b7327edb8 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x23b7327ee38 <col:37, col:49> col:49 in 'const char *'
| |-ParmVarDecl 0x23b7327eeb8 <col:53, col:57> col:57 inl 'int'
| |-ParmVarDecl 0x23b7327ef38 <col:62, col:66> col:66 pktnum 'int'
| `-ParmVarDecl 0x23b7327efb8 <line:35:27, col:31> col:31 type 'int'
|-RecordDecl 0x23b7327f1b8 <line:37:9, col:16> col:16 struct mempacket_st
|-TypedefDecl 0x23b7327f2c8 <col:1, col:29> col:29 referenced MEMPACKET 'struct mempacket_st':'struct mempacket_st'
| `-ElaboratedType 0x23b7327f270 'struct mempacket_st' sugar
|   `-RecordType 0x23b7327f250 'struct mempacket_st'
|     `-Record 0x23b7327f1b8 'mempacket_st'
|-FunctionDecl 0x23b7327f470 <line:39:1, col:26> col:1 DEFINE_STACK_OF 'int (MEMPACKET)'
| `-ParmVarDecl 0x23b7327f370 <col:17> col:26 'MEMPACKET':'struct mempacket_st'
|-VarDecl 0x23b7327f548 <.//openssl//file_jk/after\test\asynciotest.c:21:1, col:23> col:12 used fragment 'int' static cinit
| `-IntegerLiteral 0x23b7327f5b0 <col:23> 'int' 0
|-FunctionDecl 0x23b7327f6d0 <line:23:1, col:29> col:12 invalid async_new 'int (int *)' static
| `-ParmVarDecl 0x23b7327f608 <col:22, col:27> col:27 invalid bi 'int *'
|-FunctionDecl 0x23b7327f828 <line:24:1, col:29> col:12 invalid async_free 'int (int *)' static
| `-ParmVarDecl 0x23b7327f790 <col:23, col:28> col:28 invalid a 'int *'
|-FunctionDecl 0x23b7327fad0 <line:25:1, col:50> col:12 invalid async_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x23b7327f8e8 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x23b7327f968 <col:31, col:37> col:37 out 'char *'
| `-ParmVarDecl 0x23b7327f9e8 <col:42, col:46> col:46 outl 'int'
|-FunctionDecl 0x23b7327fd90 <line:26:1, col:55> col:12 invalid async_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x23b7327fba0 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x23b7327fc20 <col:32, col:44> col:44 in 'const char *'
| `-ParmVarDecl 0x23b7327fca0 <col:48, col:52> col:52 inl 'int'
|-FunctionDecl 0x23b732800e0 <line:27:1, col:60> col:13 invalid async_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x23b7327fe60 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x23b7327fee0 <col:32, col:36> col:36 cmd 'int'
| |-ParmVarDecl 0x23b7327ff60 <col:41, col:46> col:46 num 'long'
| `-ParmVarDecl 0x23b7327ffe0 <col:51, col:57> col:57 ptr 'void *'
|-FunctionDecl 0x23b732823a0 <line:28:1, col:51> col:12 invalid async_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x23b732821f8 <col:23, col:28> col:28 invalid bp 'int *'
| |-ParmVarDecl 0x23b73282278 <col:32, col:38> col:38 buf 'char *'
| `-ParmVarDecl 0x23b732822f8 <col:43, col:47> col:47 size 'int'
|-FunctionDecl 0x23b732825d0 <line:29:1, col:47> col:12 invalid async_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x23b73282470 <col:23, col:28> col:28 invalid bp 'int *'
| `-ParmVarDecl 0x23b732824f0 <col:32, col:44> col:44 str 'const char *'
|-VarDecl 0x23b73282698 <line:34:1, col:20> col:20 invalid methods_async 'int *' static
|-RecordDecl 0x23b73282788 <line:36:1, line:39:1> line:36:8 struct async_ctrs definition
| |-FieldDecl 0x23b73282858 <line:37:5, col:18> col:18 referenced rctr 'unsigned int'
| `-FieldDecl 0x23b732828c8 <line:38:5, col:18> col:18 referenced wctr 'unsigned int'
|-FunctionDecl 0x23b73282970 <line:41:1, line:56:1> line:41:26 invalid bio_f_async_filter 'const int *()' static
| `-CompoundStmt 0x23b7327d5a0 <line:42:1, line:56:1>
|   `-IfStmt 0x23b7327d588 <line:43:5, line:54:5>
|     |-OpaqueValueExpr 0x23b7327d570 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x23b7327d558 <line:43:32, line:54:5>
|       `-IfStmt 0x23b7327d540 <line:45:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|         |-OpaqueValueExpr 0x23b7327d528 <<invalid sloc>> '_Bool'
|         `-ReturnStmt 0x23b7327d518 <.//openssl//file_jk/after\test\asynciotest.c:53:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|           `-ImplicitCastExpr 0x23b7327d500 <col:17, col:27> 'const int *' <NullToPointer>
|             `-ParenExpr 0x23b7327d4e0 <col:17, col:27> 'void *'
|               `-CStyleCastExpr 0x23b7327d4b8 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x23b7327d478 <col:26> 'int' 0
|-FunctionDecl 0x23b7327d668 <.//openssl//file_jk/after\test\asynciotest.c:58:1, line:69:1> line:58:12 invalid async_new 'int (int *)' static
| |-ParmVarDecl 0x23b7327d5d0 <col:22, col:27> col:27 invalid bio 'int *'
| `-CompoundStmt 0x23b7327de78 <line:59:1, line:69:1>
|   |-DeclStmt 0x23b7327d848 <line:60:5, col:28>
|   | `-VarDecl 0x23b7327d7e0 <col:5, col:24> col:24 used ctrs 'struct async_ctrs *'
|   |-BinaryOperator 0x23b7327da70 <line:62:5, col:52> 'struct async_ctrs *' '='
|   | |-DeclRefExpr 0x23b7327d860 <col:5> 'struct async_ctrs *' lvalue Var 0x23b7327d7e0 'ctrs' 'struct async_ctrs *'
|   | `-ImplicitCastExpr 0x23b7327da58 <col:12, col:52> 'struct async_ctrs *' <IntegralToPointer>
|   |   `-CallExpr 0x23b7327da30 <col:12, col:52> 'int'
|   |     |-ImplicitCastExpr 0x23b7327da18 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x23b7327d988 <col:12> 'int ()' Function 0x23b7327d8c0 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x23b7327d9c8 <col:27, col:51> 'unsigned long long' sizeof 'struct async_ctrs':'struct async_ctrs'
|   |-IfStmt 0x23b7327dbc0 <line:63:5, line:64:16>
|   | |-BinaryOperator 0x23b7327db68 <line:63:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x23b7327db38 <.//openssl//file_jk/after\test\asynciotest.c:63:9> 'struct async_ctrs *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23b7327da90 <col:9> 'struct async_ctrs *' lvalue Var 0x23b7327d7e0 'ctrs' 'struct async_ctrs *'
|   | | `-ImplicitCastExpr 0x23b7327db50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'struct async_ctrs *' <BitCast>
|   | |   `-ParenExpr 0x23b7327db18 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x23b7327daf0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x23b7327dab0 <col:26> 'int' 0
|   | `-ReturnStmt 0x23b7327dbb0 <.//openssl//file_jk/after\test\asynciotest.c:64:9, col:16>
|   |   `-IntegerLiteral 0x23b7327db88 <col:16> 'int' 0
|   `-ReturnStmt 0x23b7327de68 <line:68:5, col:12>
|     `-IntegerLiteral 0x23b7327de40 <col:12> 'int' 1
|-FunctionDecl 0x23b7327df58 <line:71:1, line:83:1> line:71:12 invalid async_free 'int (int *)' static
| |-ParmVarDecl 0x23b7327dec0 <col:23, col:28> col:28 invalid bio 'int *'
| `-CompoundStmt 0x23b732805d8 <line:72:1, line:83:1>
|   |-DeclStmt 0x23b7327e0a8 <line:73:5, col:28>
|   | `-VarDecl 0x23b7327e040 <col:5, col:24> col:24 used ctrs 'struct async_ctrs *'
|   |-IfStmt 0x23b732801c8 <line:75:5, line:76:16>
|   | |-OpaqueValueExpr 0x23b732801b0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23b732801a0 <col:9, col:16>
|   |   `-IntegerLiteral 0x23b7327e148 <col:16> 'int' 0
|   |-CallExpr 0x23b73280470 <line:78:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x23b73280458 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x23b73280418 <col:5> 'int ()' Function 0x23b73280350 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x23b73280498 <col:18> 'struct async_ctrs *' <LValueToRValue>
|   |   `-DeclRefExpr 0x23b73280438 <col:18> 'struct async_ctrs *' lvalue Var 0x23b7327e040 'ctrs' 'struct async_ctrs *'
|   `-ReturnStmt 0x23b732805c8 <line:82:5, col:12>
|     `-IntegerLiteral 0x23b732805a0 <col:12> 'int' 1
|-FunctionDecl 0x23b732807c8 <line:85:1, line:111:1> line:85:12 invalid async_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x23b73280620 <col:23, col:28> col:28 invalid bio 'int *'
| |-ParmVarDecl 0x23b732806a0 <col:33, col:39> col:39 used out 'char *'
| |-ParmVarDecl 0x23b73280720 <col:44, col:48> col:48 used outl 'int'
| `-CompoundStmt 0x23b73229430 <line:86:1, line:111:1>
|   |-DeclStmt 0x23b73280928 <line:87:5, col:28>
|   | `-VarDecl 0x23b732808c0 <col:5, col:24> col:24 used ctrs 'struct async_ctrs *'
|   |-DeclStmt 0x23b73280a00 <line:88:5, col:17>
|   | `-VarDecl 0x23b73280958 <col:5, col:16> col:9 used ret 'int' cinit
|   |   `-UnaryOperator 0x23b732809e8 <col:15, col:16> 'int' prefix '-'
|   |     `-IntegerLiteral 0x23b732809c0 <col:16> 'int' 1
|   |-IfStmt 0x23b73280bf8 <line:91:5, line:92:16>
|   | |-BinaryOperator 0x23b73280ba0 <line:91:9, col:17> 'int' '<='
|   | | |-ImplicitCastExpr 0x23b73280b88 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23b73280b28 <col:9> 'int' lvalue ParmVar 0x23b73280720 'outl' 'int'
|   | | `-IntegerLiteral 0x23b73280b60 <col:17> 'int' 0
|   | `-ReturnStmt 0x23b73280be8 <line:92:9, col:16>
|   |   `-IntegerLiteral 0x23b73280bc0 <col:16> 'int' 0
|   |-IfStmt 0x23b73280ce8 <line:93:5, line:94:16>
|   | |-OpaqueValueExpr 0x23b73280cd0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23b73280cc0 <col:9, col:16>
|   |   `-IntegerLiteral 0x23b73280c98 <col:16> 'int' 0
|   |-IfStmt 0x23b732293c0 <line:100:5, line:108:5> has_else
|   | |-BinaryOperator 0x23b73280f28 <line:100:9, col:22> 'int' '>'
|   | | |-ImplicitCastExpr 0x23b73280ef8 <col:9, col:15> 'unsigned int' <LValueToRValue>
|   | | | `-MemberExpr 0x23b73280ea0 <col:9, col:15> 'unsigned int' lvalue ->rctr 0x23b73282858
|   | | |   `-ImplicitCastExpr 0x23b73280e88 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x23b73280e68 <col:9> 'struct async_ctrs *' lvalue Var 0x23b732808c0 'ctrs' 'struct async_ctrs *'
|   | | `-ImplicitCastExpr 0x23b73280f10 <col:22> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x23b73280ed0 <col:22> 'int' 0
|   | |-CompoundStmt 0x23b732292f0 <col:25, line:105:5>
|   | | `-BinaryOperator 0x23b732292d0 <line:104:9, col:22> 'unsigned int' '='
|   | |   |-MemberExpr 0x23b73229260 <col:9, col:15> 'unsigned int' lvalue ->rctr 0x23b73282858
|   | |   | `-ImplicitCastExpr 0x23b73229248 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x23b73229228 <col:9> 'struct async_ctrs *' lvalue Var 0x23b732808c0 'ctrs' 'struct async_ctrs *'
|   | |   `-ImplicitCastExpr 0x23b732292b8 <col:22> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x23b73229290 <col:22> 'int' 0
|   | `-CompoundStmt 0x23b732293a8 <line:105:12, line:108:5>
|   |   `-UnaryOperator 0x23b73229370 <line:106:9, col:19> 'unsigned int' postfix '++'
|   |     `-MemberExpr 0x23b73229340 <col:9, col:15> 'unsigned int' lvalue ->rctr 0x23b73282858
|   |       `-ImplicitCastExpr 0x23b73229328 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   |         `-DeclRefExpr 0x23b73229308 <col:9> 'struct async_ctrs *' lvalue Var 0x23b732808c0 'ctrs' 'struct async_ctrs *'
|   `-ReturnStmt 0x23b73229420 <line:110:5, col:12>
|     `-ImplicitCastExpr 0x23b73229408 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x23b732293e8 <col:12> 'int' lvalue Var 0x23b73280958 'ret' 'int'
|-FunctionDecl 0x23b73229630 <line:120:1, line:205:1> line:120:12 invalid async_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x23b73229488 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x23b73229508 <col:34, col:46> col:46 used in 'const char *'
| |-ParmVarDecl 0x23b73229588 <col:50, col:54> col:54 used inl 'int'
| `-CompoundStmt 0x23b7322b368 <line:121:1, line:205:1>
|   |-DeclStmt 0x23b73229790 <line:122:5, col:28>
|   | `-VarDecl 0x23b73229728 <col:5, col:24> col:24 used ctrs 'struct async_ctrs *'
|   |-DeclStmt 0x23b73229868 <line:123:5, col:17>
|   | `-VarDecl 0x23b732297c0 <col:5, col:16> col:9 used ret 'int' cinit
|   |   `-UnaryOperator 0x23b73229850 <col:15, col:16> 'int' prefix '-'
|   |     `-IntegerLiteral 0x23b73229828 <col:16> 'int' 1
|   |-DeclStmt 0x23b73229958 <line:124:5, col:23>
|   | `-VarDecl 0x23b732298b0 <col:5, col:22> col:12 used written 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x23b73229940 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x23b73229918 <col:22> 'int' 0
|   |-IfStmt 0x23b73229a60 <line:127:5, line:128:16>
|   | |-BinaryOperator 0x23b73229a08 <line:127:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x23b732299f0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23b73229990 <col:9> 'int' lvalue ParmVar 0x23b73229588 'inl' 'int'
|   | | `-IntegerLiteral 0x23b732299c8 <col:16> 'int' 0
|   | `-ReturnStmt 0x23b73229a50 <line:128:9, col:16>
|   |   `-IntegerLiteral 0x23b73229a28 <col:16> 'int' 0
|   |-IfStmt 0x23b73229b50 <line:129:5, line:130:16>
|   | |-OpaqueValueExpr 0x23b73229b38 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23b73229b28 <col:9, col:16>
|   |   `-IntegerLiteral 0x23b73229b00 <col:16> 'int' 0
|   |-IfStmt 0x23b7322b2f8 <line:136:5, line:202:5> has_else
|   | |-BinaryOperator 0x23b73229ca0 <line:136:9, col:22> 'int' '>'
|   | | |-ImplicitCastExpr 0x23b73229c70 <col:9, col:15> 'unsigned int' <LValueToRValue>
|   | | | `-MemberExpr 0x23b73229c18 <col:9, col:15> 'unsigned int' lvalue ->wctr 0x23b732828c8
|   | | |   `-ImplicitCastExpr 0x23b73229c00 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x23b73229be0 <col:9> 'struct async_ctrs *' lvalue Var 0x23b73229728 'ctrs' 'struct async_ctrs *'
|   | | `-ImplicitCastExpr 0x23b73229c88 <col:22> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x23b73229c48 <col:22> 'int' 0
|   | |-CompoundStmt 0x23b7322b208 <col:25, line:199:5>
|   | | |-BinaryOperator 0x23b73229d68 <line:137:9, col:22> 'unsigned int' '='
|   | | | |-MemberExpr 0x23b73229cf8 <col:9, col:15> 'unsigned int' lvalue ->wctr 0x23b732828c8
|   | | | | `-ImplicitCastExpr 0x23b73229ce0 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x23b73229cc0 <col:9> 'struct async_ctrs *' lvalue Var 0x23b73229728 'ctrs' 'struct async_ctrs *'
|   | | | `-ImplicitCastExpr 0x23b73229d50 <col:22> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x23b73229d28 <col:22> 'int' 0
|   | | |-IfStmt 0x23b7322cb30 <line:138:9, line:188:9>
|   | | | |-ImplicitCastExpr 0x23b73229da8 <line:138:13> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x23b73229d88 <col:13> 'int' lvalue Var 0x23b7327f548 'fragment' 'int'
|   | | | `-CompoundStmt 0x23b7322cb08 <col:23, line:188:9>
|   | | |   |-DeclStmt 0x23b73229e38 <line:139:13, col:23>
|   | | |   | `-VarDecl 0x23b73229dd0 <col:13, col:20> col:20 used pkt 'PACKET':'PACKET'
|   | | |   |-IfStmt 0x23b7322f290 <line:141:13, line:142:23>
|   | | |   | |-UnaryOperator 0x23b7322f140 <line:141:17, col:70> 'int' prefix '!' cannot overflow
|   | | |   | | `-CallExpr 0x23b7322f0f0 <col:18, col:70> 'int'
|   | | |   | |   |-ImplicitCastExpr 0x23b7322f0d8 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | |   | `-DeclRefExpr 0x23b73229f40 <col:18> 'int ()' Function 0x23b73229e78 'PACKET_buf_init' 'int ()'
|   | | |   | |   |-UnaryOperator 0x23b73229f98 <col:34, col:35> 'PACKET *' prefix '&' cannot overflow
|   | | |   | |   | `-DeclRefExpr 0x23b73229f60 <col:35> 'PACKET':'PACKET' lvalue Var 0x23b73229dd0 'pkt' 'PACKET':'PACKET'
|   | | |   | |   |-CStyleCastExpr 0x23b7322f090 <col:40, col:63> 'const unsigned char *' <BitCast>
|   | | |   | |   | `-ImplicitCastExpr 0x23b7322a000 <col:63> 'const char *' <LValueToRValue> part_of_explicit_cast
|   | | |   | |   |   `-DeclRefExpr 0x23b73229fb0 <col:63> 'const char *' lvalue ParmVar 0x23b73229508 'in' 'const char *'
|   | | |   | |   `-ImplicitCastExpr 0x23b7322f128 <col:67> 'int' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x23b7322f0b8 <col:67> 'int' lvalue ParmVar 0x23b73229588 'inl' 'int'
|   | | |   | `-CallExpr 0x23b7322f270 <line:142:17, col:23> 'void'
|   | | |   |   `-ImplicitCastExpr 0x23b7322f258 <col:17> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   | | |   |     `-DeclRefExpr 0x23b7322f1f8 <col:17> 'void (void) __attribute__((noreturn))' Function 0x23b7322f158 'abort' 'void (void) __attribute__((noreturn))'
|   | | |   `-WhileStmt 0x23b7322caf0 <line:144:13, line:187:13>
|   | | |     |-BinaryOperator 0x23b7322f458 <line:144:20, col:45> 'int' '>'
|   | | |     | |-CallExpr 0x23b7322f408 <col:20, col:41> 'int'
|   | | |     | | |-ImplicitCastExpr 0x23b7322f3f0 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | | | `-DeclRefExpr 0x23b7322f398 <col:20> 'int ()' Function 0x23b7322f2d0 'PACKET_remaining' 'int ()'
|   | | |     | | `-UnaryOperator 0x23b7322f3d8 <col:37, col:38> 'PACKET *' prefix '&' cannot overflow
|   | | |     | |   `-DeclRefExpr 0x23b7322f3b8 <col:38> 'PACKET':'PACKET' lvalue Var 0x23b73229dd0 'pkt' 'PACKET':'PACKET'
|   | | |     | `-IntegerLiteral 0x23b7322f430 <col:45> 'int' 0
|   | | |     `-CompoundStmt 0x23b7322cab8 <col:48, line:187:13>
|   | | |       |-DeclStmt 0x23b7322f4f0 <line:145:17, col:31>
|   | | |       | `-VarDecl 0x23b7322f488 <col:17, col:24> col:24 used payload 'PACKET':'PACKET'
|   | | |       |-DeclStmt 0x23b7322f730 <line:146:17, col:69>
|   | | |       | |-VarDecl 0x23b7322f520 <col:17, col:30> col:30 used contenttype 'unsigned int'
|   | | |       | |-VarDecl 0x23b7322f5a0 <col:17, col:43> col:43 used versionhi 'unsigned int'
|   | | |       | |-VarDecl 0x23b7322f620 <col:17, col:54> col:54 used versionlo 'unsigned int'
|   | | |       | `-VarDecl 0x23b7322f6a0 <col:17, col:65> col:65 used data 'unsigned int'
|   | | |       |-IfStmt 0x23b7322fe30 <line:148:17, line:152:27>
|   | | |       | |-BinaryOperator 0x23b7322fdb8 <line:148:24, line:151:68> 'int' '||'
|   | | |       | | |-BinaryOperator 0x23b7322fba0 <line:148:24, line:150:54> 'int' '||'
|   | | |       | | | |-BinaryOperator 0x23b7322fa78 <line:148:24, line:149:54> 'int' '||'
|   | | |       | | | | |-UnaryOperator 0x23b7322f958 <line:148:24, col:56> 'int' prefix '!' cannot overflow
|   | | |       | | | | | `-CallExpr 0x23b7322f928 <col:25, col:56> 'int'
|   | | |       | | | | |   |-ImplicitCastExpr 0x23b7322f910 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | | | | |   | `-DeclRefExpr 0x23b7322f838 <col:25> 'int ()' Function 0x23b7322f770 'PACKET_get_1' 'int ()'
|   | | |       | | | | |   |-UnaryOperator 0x23b7322f878 <col:38, col:39> 'PACKET *' prefix '&' cannot overflow
|   | | |       | | | | |   | `-DeclRefExpr 0x23b7322f858 <col:39> 'PACKET':'PACKET' lvalue Var 0x23b73229dd0 'pkt' 'PACKET':'PACKET'
|   | | |       | | | | |   `-UnaryOperator 0x23b7322f8f8 <col:44, col:45> 'unsigned int *' prefix '&' cannot overflow
|   | | |       | | | | |     `-DeclRefExpr 0x23b7322f890 <col:45> 'unsigned int' lvalue Var 0x23b7322f520 'contenttype' 'unsigned int'
|   | | |       | | | | `-UnaryOperator 0x23b7322fa60 <line:149:24, col:54> 'int' prefix '!' cannot overflow
|   | | |       | | | |   `-CallExpr 0x23b7322fa30 <col:25, col:54> 'int'
|   | | |       | | | |     |-ImplicitCastExpr 0x23b7322fa18 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | | | |     | `-DeclRefExpr 0x23b7322f970 <col:25> 'int ()' Function 0x23b7322f770 'PACKET_get_1' 'int ()'
|   | | |       | | | |     |-UnaryOperator 0x23b7322f9b0 <col:38, col:39> 'PACKET *' prefix '&' cannot overflow
|   | | |       | | | |     | `-DeclRefExpr 0x23b7322f990 <col:39> 'PACKET':'PACKET' lvalue Var 0x23b73229dd0 'pkt' 'PACKET':'PACKET'
|   | | |       | | | |     `-UnaryOperator 0x23b7322fa00 <col:44, col:45> 'unsigned int *' prefix '&' cannot overflow
|   | | |       | | | |       `-DeclRefExpr 0x23b7322f9c8 <col:45> 'unsigned int' lvalue Var 0x23b7322f5a0 'versionhi' 'unsigned int'
|   | | |       | | | `-UnaryOperator 0x23b7322fb88 <line:150:24, col:54> 'int' prefix '!' cannot overflow
|   | | |       | | |   `-CallExpr 0x23b7322fb58 <col:25, col:54> 'int'
|   | | |       | | |     |-ImplicitCastExpr 0x23b7322fb40 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | | |     | `-DeclRefExpr 0x23b7322fa98 <col:25> 'int ()' Function 0x23b7322f770 'PACKET_get_1' 'int ()'
|   | | |       | | |     |-UnaryOperator 0x23b7322fad8 <col:38, col:39> 'PACKET *' prefix '&' cannot overflow
|   | | |       | | |     | `-DeclRefExpr 0x23b7322fab8 <col:39> 'PACKET':'PACKET' lvalue Var 0x23b73229dd0 'pkt' 'PACKET':'PACKET'
|   | | |       | | |     `-UnaryOperator 0x23b7322fb28 <col:44, col:45> 'unsigned int *' prefix '&' cannot overflow
|   | | |       | | |       `-DeclRefExpr 0x23b7322faf0 <col:45> 'unsigned int' lvalue Var 0x23b7322f620 'versionlo' 'unsigned int'
|   | | |       | | `-UnaryOperator 0x23b7322fda0 <line:151:24, col:68> 'int' prefix '!' cannot overflow
|   | | |       | |   `-CallExpr 0x23b7322fd70 <col:25, col:68> 'int'
|   | | |       | |     |-ImplicitCastExpr 0x23b7322fd58 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | |     | `-DeclRefExpr 0x23b7322fcb0 <col:25> 'int ()' Function 0x23b7322fbe8 'PACKET_get_length_prefixed_2' 'int ()'
|   | | |       | |     |-UnaryOperator 0x23b7322fcf0 <col:54, col:55> 'PACKET *' prefix '&' cannot overflow
|   | | |       | |     | `-DeclRefExpr 0x23b7322fcd0 <col:55> 'PACKET':'PACKET' lvalue Var 0x23b73229dd0 'pkt' 'PACKET':'PACKET'
|   | | |       | |     `-UnaryOperator 0x23b7322fd40 <col:60, col:61> 'PACKET *' prefix '&' cannot overflow
|   | | |       | |       `-DeclRefExpr 0x23b7322fd08 <col:61> 'PACKET':'PACKET' lvalue Var 0x23b7322f488 'payload' 'PACKET':'PACKET'
|   | | |       | `-CallExpr 0x23b7322fe10 <line:152:21, col:27> 'void'
|   | | |       |   `-ImplicitCastExpr 0x23b7322fdf8 <col:21> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   | | |       |     `-DeclRefExpr 0x23b7322fdd8 <col:21> 'void (void) __attribute__((noreturn))' Function 0x23b7322f158 'abort' 'void (void) __attribute__((noreturn))'
|   | | |       |-WhileStmt 0x23b7322c9c0 <line:157:17, line:178:17>
|   | | |       | |-CallExpr 0x23b7322ff40 <line:157:24, col:52> 'int'
|   | | |       | | |-ImplicitCastExpr 0x23b7322ff28 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | | | `-DeclRefExpr 0x23b7322fe80 <col:24> 'int ()' Function 0x23b7322f770 'PACKET_get_1' 'int ()'
|   | | |       | | |-UnaryOperator 0x23b7322fec0 <col:37, col:38> 'PACKET *' prefix '&' cannot overflow
|   | | |       | | | `-DeclRefExpr 0x23b7322fea0 <col:38> 'PACKET':'PACKET' lvalue Var 0x23b7322f488 'payload' 'PACKET':'PACKET'
|   | | |       | | `-UnaryOperator 0x23b7322ff10 <col:47, col:48> 'unsigned int *' prefix '&' cannot overflow
|   | | |       | |   `-DeclRefExpr 0x23b7322fed8 <col:48> 'unsigned int' lvalue Var 0x23b7322f6a0 'data' 'unsigned int'
|   | | |       | `-CompoundStmt 0x23b7322c978 <col:55, line:178:17>
|   | | |       |   |-DeclStmt 0x23b7322c2d0 <line:161:21, line:168:22>
|   | | |       |   | `-VarDecl 0x23b73230008 <line:161:21, line:168:21> line:161:26 used smallrec 'char [6]' cinit
|   | | |       |   |   `-InitListExpr 0x23b7322c1d0 <col:53, line:168:21> 'char [6]'
|   | | |       |   |     |-ImplicitCastExpr 0x23b7322c240 <line:162:25> 'char' <IntegralCast>
|   | | |       |   |     | `-IntegerLiteral 0x23b7322c060 <col:25> 'int' 0
|   | | |       |   |     |-ImplicitCastExpr 0x23b7322c258 <line:163:25> 'char' <IntegralCast>
|   | | |       |   |     | `-IntegerLiteral 0x23b7322c088 <col:25> 'int' 0
|   | | |       |   |     |-ImplicitCastExpr 0x23b7322c270 <line:164:25> 'char' <IntegralCast>
|   | | |       |   |     | `-IntegerLiteral 0x23b7322c0b0 <col:25> 'int' 0
|   | | |       |   |     |-ImplicitCastExpr 0x23b7322c288 <line:165:25> 'char' <IntegralCast>
|   | | |       |   |     | `-IntegerLiteral 0x23b7322c0d8 <col:25> 'int' 0
|   | | |       |   |     |-ImplicitCastExpr 0x23b7322c2a0 <line:166:25> 'char' <IntegralCast>
|   | | |       |   |     | `-IntegerLiteral 0x23b7322c100 <col:25> 'int' 1
|   | | |       |   |     `-ImplicitCastExpr 0x23b7322c2b8 <line:167:25> 'char' <IntegralCast>
|   | | |       |   |       `-IntegerLiteral 0x23b7322c128 <col:25> 'int' 0
|   | | |       |   |-BinaryOperator 0x23b7322c3d0 <line:170:21, col:48> 'char' '='
|   | | |       |   | |-ArraySubscriptExpr 0x23b7322c360 <col:21, col:44> 'char' lvalue
|   | | |       |   | | |-ImplicitCastExpr 0x23b7322c348 <col:21> 'char *' <ArrayToPointerDecay>
|   | | |       |   | | | `-DeclRefExpr 0x23b7322c2e8 <col:21> 'char [6]' lvalue Var 0x23b73230008 'smallrec' 'char [6]'
|   | | |       |   | | `-IntegerLiteral 0x23b7322c320 <line:115:25> 'int' 0
|   | | |       |   | `-ImplicitCastExpr 0x23b7322c3b8 <line:170:48> 'char' <IntegralCast>
|   | | |       |   |   `-ImplicitCastExpr 0x23b7322c3a0 <col:48> 'unsigned int' <LValueToRValue>
|   | | |       |   |     `-DeclRefExpr 0x23b7322c380 <col:48> 'unsigned int' lvalue Var 0x23b7322f520 'contenttype' 'unsigned int'
|   | | |       |   |-BinaryOperator 0x23b7322c4c0 <line:171:21, col:46> 'char' '='
|   | | |       |   | |-ArraySubscriptExpr 0x23b7322c450 <col:21, col:42> 'char' lvalue
|   | | |       |   | | |-ImplicitCastExpr 0x23b7322c438 <col:21> 'char *' <ArrayToPointerDecay>
|   | | |       |   | | | `-DeclRefExpr 0x23b7322c3f0 <col:21> 'char [6]' lvalue Var 0x23b73230008 'smallrec' 'char [6]'
|   | | |       |   | | `-IntegerLiteral 0x23b7322c410 <line:116:25> 'int' 1
|   | | |       |   | `-ImplicitCastExpr 0x23b7322c4a8 <line:171:46> 'char' <IntegralCast>
|   | | |       |   |   `-ImplicitCastExpr 0x23b7322c490 <col:46> 'unsigned int' <LValueToRValue>
|   | | |       |   |     `-DeclRefExpr 0x23b7322c470 <col:46> 'unsigned int' lvalue Var 0x23b7322f5a0 'versionhi' 'unsigned int'
|   | | |       |   |-BinaryOperator 0x23b7322c5b0 <line:172:21, col:46> 'char' '='
|   | | |       |   | |-ArraySubscriptExpr 0x23b7322c540 <col:21, col:42> 'char' lvalue
|   | | |       |   | | |-ImplicitCastExpr 0x23b7322c528 <col:21> 'char *' <ArrayToPointerDecay>
|   | | |       |   | | | `-DeclRefExpr 0x23b7322c4e0 <col:21> 'char [6]' lvalue Var 0x23b73230008 'smallrec' 'char [6]'
|   | | |       |   | | `-IntegerLiteral 0x23b7322c500 <line:117:25> 'int' 2
|   | | |       |   | `-ImplicitCastExpr 0x23b7322c598 <line:172:46> 'char' <IntegralCast>
|   | | |       |   |   `-ImplicitCastExpr 0x23b7322c580 <col:46> 'unsigned int' <LValueToRValue>
|   | | |       |   |     `-DeclRefExpr 0x23b7322c560 <col:46> 'unsigned int' lvalue Var 0x23b7322f620 'versionlo' 'unsigned int'
|   | | |       |   |-BinaryOperator 0x23b7322c6a0 <line:173:21, col:41> 'char' '='
|   | | |       |   | |-ArraySubscriptExpr 0x23b7322c630 <col:21, col:37> 'char' lvalue
|   | | |       |   | | |-ImplicitCastExpr 0x23b7322c618 <col:21> 'char *' <ArrayToPointerDecay>
|   | | |       |   | | | `-DeclRefExpr 0x23b7322c5d0 <col:21> 'char [6]' lvalue Var 0x23b73230008 'smallrec' 'char [6]'
|   | | |       |   | | `-IntegerLiteral 0x23b7322c5f0 <line:118:25> 'int' 5
|   | | |       |   | `-ImplicitCastExpr 0x23b7322c688 <line:173:41> 'char' <IntegralCast>
|   | | |       |   |   `-ImplicitCastExpr 0x23b7322c670 <col:41> 'unsigned int' <LValueToRValue>
|   | | |       |   |     `-DeclRefExpr 0x23b7322c650 <col:41> 'unsigned int' lvalue Var 0x23b7322f6a0 'data' 'unsigned int'
|   | | |       |   |-IfStmt 0x23b7322c928 <line:175:21, line:176:31>
|   | | |       |   | |-BinaryOperator 0x23b7322c8b0 <line:175:25, col:32> 'int' '<='
|   | | |       |   | | |-ImplicitCastExpr 0x23b7322c898 <col:25> 'int' <LValueToRValue>
|   | | |       |   | | | `-DeclRefExpr 0x23b7322c850 <col:25> 'int' lvalue Var 0x23b732297c0 'ret' 'int'
|   | | |       |   | | `-IntegerLiteral 0x23b7322c870 <col:32> 'int' 0
|   | | |       |   | `-CallExpr 0x23b7322c908 <line:176:25, col:31> 'void'
|   | | |       |   |   `-ImplicitCastExpr 0x23b7322c8f0 <col:25> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   | | |       |   |     `-DeclRefExpr 0x23b7322c8d0 <col:25> 'void (void) __attribute__((noreturn))' Function 0x23b7322f158 'abort' 'void (void) __attribute__((noreturn))'
|   | | |       |   `-UnaryOperator 0x23b7322c960 <line:177:21, col:28> 'size_t':'unsigned long long' postfix '++'
|   | | |       |     `-DeclRefExpr 0x23b7322c940 <col:21> 'size_t':'unsigned long long' lvalue Var 0x23b732298b0 'written' 'size_t':'unsigned long long'
|   | | |       `-IfStmt 0x23b7322caa0 <line:183:17, line:186:17>
|   | | |         |-OpaqueValueExpr 0x23b7322ca88 <<invalid sloc>> '_Bool'
|   | | |         `-CompoundStmt 0x23b7322ca68 <line:183:64, line:186:17>
|   | | |           |-BinaryOperator 0x23b7322ca40 <line:184:21, col:32> 'int' '='
|   | | |           | |-DeclRefExpr 0x23b7322c9f8 <col:21> 'int' lvalue Var 0x23b7327f548 'fragment' 'int'
|   | | |           | `-IntegerLiteral 0x23b7322ca18 <col:32> 'int' 0
|   | | |           `-BreakStmt 0x23b7322ca60 <line:185:21>
|   | | |-BinaryOperator 0x23b7322cb90 <line:190:9, col:15> 'int' '='
|   | | | |-DeclRefExpr 0x23b7322cb48 <col:9> 'int' lvalue Var 0x23b732297c0 'ret' 'int'
|   | | | `-IntegerLiteral 0x23b7322cb68 <col:15> 'int' 0
|   | | |-IfStmt 0x23b7322ce08 <line:191:9, line:193:9>
|   | | | |-BinaryOperator 0x23b7322cc60 <line:191:13, col:28> 'int' '<'
|   | | | | |-CStyleCastExpr 0x23b7322cc00 <col:13, col:18> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x23b7322cbe8 <col:18> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | | | | |   `-DeclRefExpr 0x23b7322cbb0 <col:18> 'size_t':'unsigned long long' lvalue Var 0x23b732298b0 'written' 'size_t':'unsigned long long'
|   | | | | `-ImplicitCastExpr 0x23b7322cc48 <col:28> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x23b7322cc28 <col:28> 'int' lvalue ParmVar 0x23b73229588 'inl' 'int'
|   | | | `-CompoundStmt 0x23b7322cdf8 <col:33, line:193:9>
|   | | `-IfStmt 0x23b7322b1e0 <line:195:9, line:198:20> has_else
|   | |   |-OpaqueValueExpr 0x23b7322b1c8 <<invalid sloc>> '_Bool'
|   | |   |-NullStmt 0x23b7322b1c0 <line:196:13>
|   | |   `-CompoundAssignOperator 0x23b7322b190 <line:198:13, col:20> 'int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |     |-DeclRefExpr 0x23b7322b138 <col:13> 'int' lvalue Var 0x23b732297c0 'ret' 'int'
|   | |     `-ImplicitCastExpr 0x23b7322b178 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   | |       `-DeclRefExpr 0x23b7322b158 <col:20> 'size_t':'unsigned long long' lvalue Var 0x23b732298b0 'written' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x23b7322b2e0 <line:199:12, line:202:5>
|   |   `-UnaryOperator 0x23b7322b2a8 <line:200:9, col:19> 'unsigned int' postfix '++'
|   |     `-MemberExpr 0x23b7322b278 <col:9, col:15> 'unsigned int' lvalue ->wctr 0x23b732828c8
|   |       `-ImplicitCastExpr 0x23b7322b260 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   |         `-DeclRefExpr 0x23b7322b240 <col:9> 'struct async_ctrs *' lvalue Var 0x23b73229728 'ctrs' 'struct async_ctrs *'
|   `-ReturnStmt 0x23b7322b358 <line:204:5, col:12>
|     `-ImplicitCastExpr 0x23b7322b340 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x23b7322b320 <col:12> 'int' lvalue Var 0x23b732297c0 'ret' 'int'
|-FunctionDecl 0x23b7322f158 <line:142:17> col:17 implicit used abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x23b7322b5f8 <line:207:1, line:224:1> line:207:13 invalid async_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x23b7322b3c8 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x23b7322b448 <col:34, col:38> col:38 used cmd 'int'
| |-ParmVarDecl 0x23b7322b4c8 <col:43, col:48> col:48 used num 'long'
| |-ParmVarDecl 0x23b7322b548 <col:53, col:59> col:59 used ptr 'void *'
| `-CompoundStmt 0x23b7322bbf0 <line:208:1, line:224:1>
|   |-DeclStmt 0x23b7322b750 <line:209:5, col:13>
|   | `-VarDecl 0x23b7322b6e8 <col:5, col:10> col:10 used ret 'long'
|   |-IfStmt 0x23b7322b878 <line:212:5, line:213:16>
|   | |-OpaqueValueExpr 0x23b7322b860 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x23b7322b850 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x23b7322b838 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x23b7322b810 <col:16> 'int' 0
|   |-SwitchStmt 0x23b7322b8e0 <line:215:5, line:222:5>
|   | |-ImplicitCastExpr 0x23b7322b8c8 <line:215:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x23b7322b890 <col:13> 'int' lvalue ParmVar 0x23b7322b448 'cmd' 'int'
|   | `-CompoundStmt 0x23b7322bb78 <col:18, line:222:5>
|   |   |-BinaryOperator 0x23b7322b960 <line:217:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x23b7322b900 <col:9> 'long' lvalue Var 0x23b7322b6e8 'ret' 'long'
|   |   | `-IntegerLiteral 0x23b7322b938 <col:15> 'long' 0
|   |   |-BreakStmt 0x23b7322b980 <line:218:9>
|   |   |-DefaultStmt 0x23b7322bb50 <line:219:5, col:12>
|   |   | `-NullStmt 0x23b7322bb48 <col:12>
|   |   `-BreakStmt 0x23b7322bb70 <line:221:9>
|   `-ReturnStmt 0x23b7322bbe0 <line:223:5, col:12>
|     `-ImplicitCastExpr 0x23b7322bbc8 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x23b7322bba8 <col:12> 'long' lvalue Var 0x23b7322b6e8 'ret' 'long'
|-FunctionDecl 0x23b7322bde0 <line:226:1, line:230:1> line:226:12 invalid async_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x23b7322bc38 <col:23, col:28> col:28 invalid bio 'int *'
| |-ParmVarDecl 0x23b7322bcb8 <col:33, col:39> col:39 buf 'char *'
| |-ParmVarDecl 0x23b7322bd38 <col:44, col:48> col:48 size 'int'
| `-CompoundStmt 0x23b7322bf00 <line:227:1, line:230:1>
|   `-ReturnStmt 0x23b7322bef0 <line:229:5, col:13>
|     `-UnaryOperator 0x23b7322bed8 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x23b7322beb0 <col:13> 'int' 1
|-FunctionDecl 0x23b7322d0a8 <line:232:1, line:235:1> line:232:12 invalid async_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x23b7322bf60 <col:23, col:28> col:28 invalid bio 'int *'
| |-ParmVarDecl 0x23b7322bfe0 <col:33, col:45> col:45 used str 'const char *'
| `-CompoundStmt 0x23b7322d280 <line:233:1, line:235:1>
|-FunctionDecl 0x23b7322d4e0 <line:239:1, line:382:1> line:239:5 main 'int (int, char **)'
| |-ParmVarDecl 0x23b7322d2a8 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x23b7322d390 <col:20, col:31> col:26 used argv 'char **':'char **'
| `-CompoundStmt 0x23b732381b0 <line:240:1, line:382:1>
|   |-DeclStmt 0x23b7322daa0 <line:244:5, col:27>
|   | |-VarDecl 0x23b7322d8f0 <col:5, col:9> col:9 used test 'int'
|   | |-VarDecl 0x23b7322d970 <col:5, col:21> col:15 used err 'int' cinit
|   | | `-IntegerLiteral 0x23b7322d9d8 <col:21> 'int' 1
|   | `-VarDecl 0x23b7322da18 <col:5, col:24> col:24 used ret 'int'
|   |-DeclStmt 0x23b7322dbc0 <line:245:5, col:16>
|   | |-VarDecl 0x23b7322dac8 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x23b7322db40 <col:5, col:15> col:15 used j 'size_t':'unsigned long long'
|   |-DeclStmt 0x23b7322dd58 <line:246:5, col:40>
|   | `-VarDecl 0x23b7322dc58 <col:5, col:29> col:16 used testdata 'const char [10]' cinit
|   |   `-StringLiteral 0x23b7322dcf8 <col:29> 'const char [10]' "Test data"
|   |-DeclStmt 0x23b7322de70 <line:247:5, col:31>
|   | `-VarDecl 0x23b7322de08 <col:5, col:30> col:10 used buf 'char [10]'
|   |-CallExpr 0x23b7322dfd8 <line:249:5, col:27> 'int'
|   | |-ImplicitCastExpr 0x23b7322dfc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x23b7322df78 <col:5> 'int ()' Function 0x23b7322deb0 'CRYPTO_set_mem_debug' 'int ()'
|   | `-IntegerLiteral 0x23b7322df98 <col:26> 'int' 1
|   |-IfStmt 0x23b73228520 <line:252:5, line:255:5>
|   | |-BinaryOperator 0x23b73228168 <line:252:9, col:17> 'int' '!='
|   | | |-ImplicitCastExpr 0x23b73228150 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23b73228108 <col:9> 'int' lvalue ParmVar 0x23b7322d2a8 'argc' 'int'
|   | | `-IntegerLiteral 0x23b73228128 <col:17> 'int' 3
|   | `-CompoundStmt 0x23b73228500 <col:20, line:255:5>
|   |   |-CallExpr 0x23b73228440 <line:253:9, col:42> 'int'
|   |   | |-ImplicitCastExpr 0x23b73228428 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x23b73228340 <col:9> 'int (const char *, ...)' Function 0x23b732281c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x23b73228480 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x23b73228468 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x23b732283b8 <col:16> 'char [24]' lvalue "Invalid argument count\n"
|   |   `-GotoStmt 0x23b732284e8 <line:254:9, col:14> 'end' 0x23b73228498
|   |-IfStmt 0x23b73228b48 <line:257:5, line:262:5>
|   | |-OpaqueValueExpr 0x23b73228b30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x23b73228b10 <line:259:73, line:262:5>
|   |   |-CallExpr 0x23b73228aa0 <line:260:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x23b73228a88 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x23b732289d8 <col:9> 'int (const char *, ...)' Function 0x23b732281c8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x23b73228ae0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x23b73228ac8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x23b73228a38 <col:16> 'char [31]' lvalue "Failed to create SSL_CTX pair\n"
|   |   `-GotoStmt 0x23b73228af8 <line:261:9, col:14> 'end' 0x23b73228498
|   |-ForStmt 0x23b73231b68 <line:270:5, line:363:5>
|   | |-BinaryOperator 0x23b73228bc0 <line:270:10, col:17> 'int' '='
|   | | |-DeclRefExpr 0x23b73228b60 <col:10> 'int' lvalue Var 0x23b7322d8f0 'test' 'int'
|   | | `-IntegerLiteral 0x23b73228b98 <col:17> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x23b73228c40 <col:20, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x23b73228c28 <col:20> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23b73228be0 <col:20> 'int' lvalue Var 0x23b7322d8f0 'test' 'int'
|   | | `-IntegerLiteral 0x23b73228c00 <col:27> 'int' 3
|   | |-UnaryOperator 0x23b73228c80 <col:30, col:34> 'int' postfix '++'
|   | | `-DeclRefExpr 0x23b73228c60 <col:30> 'int' lvalue Var 0x23b7322d8f0 'test' 'int'
|   | `-CompoundStmt 0x23b73231b30 <col:38, line:363:5>
|   |   |-IfStmt 0x23b73228d80 <line:271:9, line:272:24>
|   |   | |-BinaryOperator 0x23b73228cf8 <line:271:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x23b73228ce0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x23b73228c98 <col:13> 'int' lvalue Var 0x23b7322d8f0 'test' 'int'
|   |   | | `-IntegerLiteral 0x23b73228cb8 <col:21> 'int' 2
|   |   | `-BinaryOperator 0x23b73228d60 <line:272:13, col:24> 'int' '='
|   |   |   |-DeclRefExpr 0x23b73228d18 <col:13> 'int' lvalue Var 0x23b7327f548 'fragment' 'int'
|   |   |   `-IntegerLiteral 0x23b73228d38 <col:24> 'int' 1
|   |   |-IfStmt 0x23b73230318 <line:277:9, line:282:9>
|   |   | |-OpaqueValueExpr 0x23b73230300 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x23b732302e0 <line:277:57, line:282:9>
|   |   |   |-CallExpr 0x23b73230140 <line:278:13, col:52> 'int'
|   |   |   | |-ImplicitCastExpr 0x23b73230128 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x23b73228fd8 <col:13> 'int (const char *, ...)' Function 0x23b732281c8 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x23b73230180 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x23b73230168 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x23b732300d8 <col:20> 'char [30]' lvalue "Failed to create filter BIOs\n"
|   |   |   `-GotoStmt 0x23b732302c8 <line:281:13, col:18> 'end' 0x23b73228498
|   |   |-IfStmt 0x23b732304e8 <line:285:9, line:289:9>
|   |   | |-OpaqueValueExpr 0x23b732304d0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x23b732304b0 <line:286:60, line:289:9>
|   |   |   |-CallExpr 0x23b73230420 <line:287:13, col:71> 'int'
|   |   |   | |-ImplicitCastExpr 0x23b73230408 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x23b73230330 <col:13> 'int (const char *, ...)' Function 0x23b732281c8 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x23b73230468 <col:20> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x23b73230450 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x23b73230388 <col:20> 'char [43]' lvalue "Test %d failed: Create SSL objects failed\n"
|   |   |   | `-ImplicitCastExpr 0x23b73230480 <col:67> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x23b732303d0 <col:67> 'int' lvalue Var 0x23b7322d8f0 'test' 'int'
|   |   |   `-GotoStmt 0x23b73230498 <line:288:13, col:18> 'end' 0x23b73228498
|   |   |-IfStmt 0x23b732306b8 <line:291:9, line:294:9>
|   |   | |-OpaqueValueExpr 0x23b732306a0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x23b73230680 <line:291:59, line:294:9>
|   |   |   |-CallExpr 0x23b732305f0 <line:292:13, col:74> 'int'
|   |   |   | |-ImplicitCastExpr 0x23b732305d8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x23b73230500 <col:13> 'int (const char *, ...)' Function 0x23b732281c8 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x23b73230638 <col:20> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x23b73230620 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x23b73230558 <col:20> 'char [46]' lvalue "Test %d failed: Create SSL connection failed\n"
|   |   |   | `-ImplicitCastExpr 0x23b73230650 <col:70> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x23b732305a0 <col:70> 'int' lvalue Var 0x23b7322d8f0 'test' 'int'
|   |   |   `-GotoStmt 0x23b73230668 <line:293:13, col:18> 'end' 0x23b73228498
|   |   `-ForStmt 0x23b73231940 <line:300:9, line:357:9>
|   |     |-BinaryOperator 0x23b73230748 <line:300:14, col:18> 'size_t':'unsigned long long' '='
|   |     | |-DeclRefExpr 0x23b732306d0 <col:14> 'size_t':'unsigned long long' lvalue Var 0x23b7322db40 'j' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x23b73230730 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x23b73230708 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x23b732307e0 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x23b732307b0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x23b73230768 <col:21> 'size_t':'unsigned long long' lvalue Var 0x23b7322db40 'j' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x23b732307c8 <col:25> 'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x23b73230788 <col:25> 'int' 2
|   |     |-UnaryOperator 0x23b73230820 <col:28, col:29> 'size_t':'unsigned long long' postfix '++'
|   |     | `-DeclRefExpr 0x23b73230800 <col:28> 'size_t':'unsigned long long' lvalue Var 0x23b7322db40 'j' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x23b73231908 <col:33, line:357:9>
|   |       |-DeclStmt 0x23b732308b8 <line:301:13, col:20>
|   |       | `-VarDecl 0x23b73230850 <col:13, col:17> col:17 used len 'int'
|   |       |-ForStmt 0x23b7322e560 <line:307:13, line:323:13>
|   |       | |-BinaryOperator 0x23b73230aa0 <line:307:18, col:41> 'int' ','
|   |       | | |-BinaryOperator 0x23b73230a00 <col:18, col:32> 'size_t':'unsigned long long' ','
|   |       | | | |-BinaryOperator 0x23b73230948 <col:18, col:25> 'int' '='
|   |       | | | | |-DeclRefExpr 0x23b732308d0 <col:18> 'int' lvalue Var 0x23b7322da18 'ret' 'int'
|   |       | | | | `-UnaryOperator 0x23b73230930 <col:24, col:25> 'int' prefix '-'
|   |       | | | |   `-IntegerLiteral 0x23b73230908 <col:25> 'int' 1
|   |       | | | `-BinaryOperator 0x23b732309e0 <col:28, col:32> 'size_t':'unsigned long long' '='
|   |       | | |   |-DeclRefExpr 0x23b73230968 <col:28> 'size_t':'unsigned long long' lvalue Var 0x23b7322dac8 'i' 'size_t':'unsigned long long'
|   |       | | |   `-ImplicitCastExpr 0x23b732309c8 <col:32> 'size_t':'unsigned long long' <IntegralCast>
|   |       | | |     `-IntegerLiteral 0x23b732309a0 <col:32> 'int' 0
|   |       | | `-BinaryOperator 0x23b73230a80 <col:35, col:41> 'int' '='
|   |       | |   |-DeclRefExpr 0x23b73230a20 <col:35> 'int' lvalue Var 0x23b73230850 'len' 'int'
|   |       | |   `-IntegerLiteral 0x23b73230a58 <col:41> 'int' 0
|   |       | |-<<<NULL>>>
|   |       | |-BinaryOperator 0x23b73230c28 <col:44, col:75> 'int' '&&'
|   |       | | |-BinaryOperator 0x23b73230b70 <col:44, col:66> 'int' '!='
|   |       | | | |-ImplicitCastExpr 0x23b73230b58 <col:44> 'unsigned long long' <IntegralCast>
|   |       | | | | `-ImplicitCastExpr 0x23b73230b40 <col:44> 'int' <LValueToRValue>
|   |       | | | |   `-DeclRefExpr 0x23b73230ac0 <col:44> 'int' lvalue Var 0x23b73230850 'len' 'int'
|   |       | | | `-UnaryExprOrTypeTraitExpr 0x23b73230b20 <col:51, col:66> 'unsigned long long' sizeof
|   |       | | |   `-ParenExpr 0x23b73230b00 <col:57, col:66> 'const char [10]' lvalue
|   |       | | |     `-DeclRefExpr 0x23b73230ae0 <col:58> 'const char [10]' lvalue Var 0x23b7322dc58 'testdata' 'const char [10]' non_odr_use_unevaluated
|   |       | | `-BinaryOperator 0x23b73230c08 <col:71, col:75> 'int' '<'
|   |       | |   |-ImplicitCastExpr 0x23b73230bd8 <col:71> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x23b73230b90 <col:71> 'size_t':'unsigned long long' lvalue Var 0x23b7322dac8 'i' 'size_t':'unsigned long long'
|   |       | |   `-ImplicitCastExpr 0x23b73230bf0 <col:75> 'unsigned long long' <IntegralCast>
|   |       | |     `-IntegerLiteral 0x23b73230bb0 <col:75> 'int' 2
|   |       | |-UnaryOperator 0x23b73230c68 <line:308:17, col:18> 'size_t':'unsigned long long' postfix '++'
|   |       | | `-DeclRefExpr 0x23b73230c48 <col:17> 'size_t':'unsigned long long' lvalue Var 0x23b7322dac8 'i' 'size_t':'unsigned long long'
|   |       | `-CompoundStmt 0x23b7322e548 <col:22, line:323:13>
|   |       |   `-IfStmt 0x23b7322e520 <line:311:17, line:322:17> has_else
|   |       |     |-BinaryOperator 0x23b73230f88 <line:311:21, col:27> 'int' '>'
|   |       |     | |-ImplicitCastExpr 0x23b73230f70 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x23b73230f28 <col:21> 'int' lvalue Var 0x23b7322da18 'ret' 'int'
|   |       |     | `-IntegerLiteral 0x23b73230f48 <col:27> 'int' 0
|   |       |     |-CompoundStmt 0x23b73231030 <col:30, line:313:17>
|   |       |     | `-CompoundAssignOperator 0x23b73231000 <line:312:21, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |     |   |-DeclRefExpr 0x23b73230fa8 <col:21> 'int' lvalue Var 0x23b73230850 'len' 'int'
|   |       |     |   `-ImplicitCastExpr 0x23b73230fe8 <col:28> 'int' <LValueToRValue>
|   |       |     |     `-DeclRefExpr 0x23b73230fc8 <col:28> 'int' lvalue Var 0x23b7322da18 'ret' 'int'
|   |       |     `-CompoundStmt 0x23b7322e500 <line:313:24, line:322:17>
|   |       |       |-DeclStmt 0x23b7322e218 <line:314:21, col:66>
|   |       |       | `-VarDecl 0x23b7322e080 <col:21, col:25> col:25 used ssl_error 'int'
|   |       |       `-IfStmt 0x23b7322e4e8 <line:316:21, line:321:21>
|   |       |         |-OpaqueValueExpr 0x23b7322e4d0 <<invalid sloc>> '_Bool'
|   |       |         `-CompoundStmt 0x23b7322e4a8 <line:317:53, line:321:21>
|   |       |           |-CallExpr 0x23b7322e380 <line:318:25, col:82> 'int'
|   |       |           | |-ImplicitCastExpr 0x23b7322e368 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       |           | | `-DeclRefExpr 0x23b7322e288 <col:25> 'int (const char *, ...)' Function 0x23b732281c8 'printf' 'int (const char *, ...)'
|   |       |           | |-ImplicitCastExpr 0x23b7322e3c8 <col:32> 'const char *' <NoOp>
|   |       |           | | `-ImplicitCastExpr 0x23b7322e3b0 <col:32> 'char *' <ArrayToPointerDecay>
|   |       |           | |   `-StringLiteral 0x23b7322e2e8 <col:32> 'char [42]' lvalue "Test %d failed: Failed to write app data\n"
|   |       |           | `-ImplicitCastExpr 0x23b7322e3e0 <col:78> 'int' <LValueToRValue>
|   |       |           |   `-DeclRefExpr 0x23b7322e330 <col:78> 'int' lvalue Var 0x23b7322d8f0 'test' 'int'
|   |       |           |-BinaryOperator 0x23b7322e470 <line:319:25, col:32> 'int' '='
|   |       |           | |-DeclRefExpr 0x23b7322e3f8 <col:25> 'int' lvalue Var 0x23b7322d970 'err' 'int'
|   |       |           | `-UnaryOperator 0x23b7322e458 <col:31, col:32> 'int' prefix '-'
|   |       |           |   `-IntegerLiteral 0x23b7322e430 <col:32> 'int' 1
|   |       |           `-GotoStmt 0x23b7322e490 <line:320:25, col:30> 'end' 0x23b73228498
|   |       |-IfStmt 0x23b7322e858 <line:324:13, line:328:13>
|   |       | |-BinaryOperator 0x23b7322e648 <line:324:17, col:39> 'int' '!='
|   |       | | |-ImplicitCastExpr 0x23b7322e630 <col:17> 'unsigned long long' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x23b7322e618 <col:17> 'int' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x23b7322e598 <col:17> 'int' lvalue Var 0x23b73230850 'len' 'int'
|   |       | | `-UnaryExprOrTypeTraitExpr 0x23b7322e5f8 <col:24, col:39> 'unsigned long long' sizeof
|   |       | |   `-ParenExpr 0x23b7322e5d8 <col:30, col:39> 'const char [10]' lvalue
|   |       | |     `-DeclRefExpr 0x23b7322e5b8 <col:31> 'const char [10]' lvalue Var 0x23b7322dc58 'testdata' 'const char [10]' non_odr_use_unevaluated
|   |       | `-CompoundStmt 0x23b7322e830 <col:42, line:328:13>
|   |       |   |-BinaryOperator 0x23b7322e6c8 <line:325:17, col:24> 'int' '='
|   |       |   | |-DeclRefExpr 0x23b7322e668 <col:17> 'int' lvalue Var 0x23b7322d970 'err' 'int'
|   |       |   | `-UnaryOperator 0x23b7322e6b0 <col:23, col:24> 'int' prefix '-'
|   |       |   |   `-IntegerLiteral 0x23b7322e688 <col:24> 'int' 1
|   |       |   |-CallExpr 0x23b7322e7a0 <line:326:17, col:78> 'int'
|   |       |   | |-ImplicitCastExpr 0x23b7322e788 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x23b7322e6e8 <col:17> 'int (const char *, ...)' Function 0x23b732281c8 'printf' 'int (const char *, ...)'
|   |       |   | |-ImplicitCastExpr 0x23b7322e7e8 <col:24> 'const char *' <NoOp>
|   |       |   | | `-ImplicitCastExpr 0x23b7322e7d0 <col:24> 'char *' <ArrayToPointerDecay>
|   |       |   | |   `-StringLiteral 0x23b7322e708 <col:24> 'char [46]' lvalue "Test %d failed: Failed to write all app data\n"
|   |       |   | `-ImplicitCastExpr 0x23b7322e800 <col:74> 'int' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x23b7322e750 <col:74> 'int' lvalue Var 0x23b7322d8f0 'test' 'int'
|   |       |   `-GotoStmt 0x23b7322e818 <line:327:17, col:22> 'end' 0x23b73228498
|   |       |-ForStmt 0x23b732313c0 <line:334:13, line:350:13>
|   |       | |-BinaryOperator 0x23b7322e9f8 <line:334:18, col:41> 'int' ','
|   |       | | |-BinaryOperator 0x23b7322e970 <col:18, col:32> 'size_t':'unsigned long long' ','
|   |       | | | |-BinaryOperator 0x23b7322e8d0 <col:18, col:25> 'int' '='
|   |       | | | | |-DeclRefExpr 0x23b7322e870 <col:18> 'int' lvalue Var 0x23b7322da18 'ret' 'int'
|   |       | | | | `-UnaryOperator 0x23b7322e8b8 <col:24, col:25> 'int' prefix '-'
|   |       | | | |   `-IntegerLiteral 0x23b7322e890 <col:25> 'int' 1
|   |       | | | `-BinaryOperator 0x23b7322e950 <col:28, col:32> 'size_t':'unsigned long long' '='
|   |       | | |   |-DeclRefExpr 0x23b7322e8f0 <col:28> 'size_t':'unsigned long long' lvalue Var 0x23b7322dac8 'i' 'size_t':'unsigned long long'
|   |       | | |   `-ImplicitCastExpr 0x23b7322e938 <col:32> 'size_t':'unsigned long long' <IntegralCast>
|   |       | | |     `-IntegerLiteral 0x23b7322e910 <col:32> 'int' 0
|   |       | | `-BinaryOperator 0x23b7322e9d8 <col:35, col:41> 'int' '='
|   |       | |   |-DeclRefExpr 0x23b7322e990 <col:35> 'int' lvalue Var 0x23b73230850 'len' 'int'
|   |       | |   `-IntegerLiteral 0x23b7322e9b0 <col:41> 'int' 0
|   |       | |-<<<NULL>>>
|   |       | |-BinaryOperator 0x23b7322eb80 <col:44, line:237:25> 'int' '&&'
|   |       | | |-BinaryOperator 0x23b7322eac8 <line:334:44, col:66> 'int' '!='
|   |       | | | |-ImplicitCastExpr 0x23b7322eab0 <col:44> 'unsigned long long' <IntegralCast>
|   |       | | | | `-ImplicitCastExpr 0x23b7322ea98 <col:44> 'int' <LValueToRValue>
|   |       | | | |   `-DeclRefExpr 0x23b7322ea18 <col:44> 'int' lvalue Var 0x23b73230850 'len' 'int'
|   |       | | | `-UnaryExprOrTypeTraitExpr 0x23b7322ea78 <col:51, col:66> 'unsigned long long' sizeof
|   |       | | |   `-ParenExpr 0x23b7322ea58 <col:57, col:66> 'const char [10]' lvalue
|   |       | | |     `-DeclRefExpr 0x23b7322ea38 <col:58> 'const char [10]' lvalue Var 0x23b7322dc58 'testdata' 'const char [10]' non_odr_use_unevaluated
|   |       | | `-BinaryOperator 0x23b7322eb60 <line:335:17, line:237:25> 'int' '<'
|   |       | |   |-ImplicitCastExpr 0x23b7322eb30 <line:335:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x23b7322eae8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x23b7322dac8 'i' 'size_t':'unsigned long long'
|   |       | |   `-ImplicitCastExpr 0x23b7322eb48 <line:237:25> 'unsigned long long' <IntegralCast>
|   |       | |     `-IntegerLiteral 0x23b7322eb08 <col:25> 'int' 100
|   |       | |-UnaryOperator 0x23b7322ebc0 <line:335:35, col:36> 'size_t':'unsigned long long' postfix '++'
|   |       | | `-DeclRefExpr 0x23b7322eba0 <col:35> 'size_t':'unsigned long long' lvalue Var 0x23b7322dac8 'i' 'size_t':'unsigned long long'
|   |       | `-CompoundStmt 0x23b732313a8 <line:336:13, line:350:13>
|   |       |   `-IfStmt 0x23b73231380 <line:338:17, line:349:17> has_else
|   |       |     |-BinaryOperator 0x23b7322eee0 <line:338:21, col:27> 'int' '>'
|   |       |     | |-ImplicitCastExpr 0x23b7322eec8 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x23b7322ee80 <col:21> 'int' lvalue Var 0x23b7322da18 'ret' 'int'
|   |       |     | `-IntegerLiteral 0x23b7322eea0 <col:27> 'int' 0
|   |       |     |-CompoundStmt 0x23b7322ef88 <col:30, line:340:17>
|   |       |     | `-CompoundAssignOperator 0x23b7322ef58 <line:339:21, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |     |   |-DeclRefExpr 0x23b7322ef00 <col:21> 'int' lvalue Var 0x23b73230850 'len' 'int'
|   |       |     |   `-ImplicitCastExpr 0x23b7322ef40 <col:28> 'int' <LValueToRValue>
|   |       |     |     `-DeclRefExpr 0x23b7322ef20 <col:28> 'int' lvalue Var 0x23b7322da18 'ret' 'int'
|   |       |     `-CompoundStmt 0x23b73231360 <line:340:24, line:349:17>
|   |       |       |-DeclStmt 0x23b7322f060 <line:341:21, col:66>
|   |       |       | `-VarDecl 0x23b7322efb8 <col:21, col:25> col:25 used ssl_error 'int'
|   |       |       `-IfStmt 0x23b73231348 <line:343:21, line:348:21>
|   |       |         |-OpaqueValueExpr 0x23b73231330 <<invalid sloc>> '_Bool'
|   |       |         `-CompoundStmt 0x23b73231308 <line:344:53, line:348:21>
|   |       |           |-CallExpr 0x23b732311f8 <line:345:25, col:81> 'int'
|   |       |           | |-ImplicitCastExpr 0x23b732311e0 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       |           | | `-DeclRefExpr 0x23b73231108 <col:25> 'int (const char *, ...)' Function 0x23b732281c8 'printf' 'int (const char *, ...)'
|   |       |           | |-ImplicitCastExpr 0x23b73231240 <col:32> 'const char *' <NoOp>
|   |       |           | | `-ImplicitCastExpr 0x23b73231228 <col:32> 'char *' <ArrayToPointerDecay>
|   |       |           | |   `-StringLiteral 0x23b73231168 <col:32> 'char [41]' lvalue "Test %d failed: Failed to read app data\n"
|   |       |           | `-ImplicitCastExpr 0x23b73231258 <col:77> 'int' <LValueToRValue>
|   |       |           |   `-DeclRefExpr 0x23b732311a8 <col:77> 'int' lvalue Var 0x23b7322d8f0 'test' 'int'
|   |       |           |-BinaryOperator 0x23b732312d0 <line:346:25, col:32> 'int' '='
|   |       |           | |-DeclRefExpr 0x23b73231270 <col:25> 'int' lvalue Var 0x23b7322d970 'err' 'int'
|   |       |           | `-UnaryOperator 0x23b732312b8 <col:31, col:32> 'int' prefix '-'
|   |       |           |   `-IntegerLiteral 0x23b73231290 <col:32> 'int' 1
|   |       |           `-GotoStmt 0x23b732312f0 <line:347:25, col:30> 'end' 0x23b73228498
|   |       `-IfStmt 0x23b732318f0 <line:351:13, line:356:13>
|   |         |-BinaryOperator 0x23b732316e0 <line:351:17, line:352:67> 'int' '||'
|   |         | |-BinaryOperator 0x23b732314a8 <line:351:17, col:39> 'int' '!='
|   |         | | |-ImplicitCastExpr 0x23b73231490 <col:17> 'unsigned long long' <IntegralCast>
|   |         | | | `-ImplicitCastExpr 0x23b73231478 <col:17> 'int' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x23b732313f8 <col:17> 'int' lvalue Var 0x23b73230850 'len' 'int'
|   |         | | `-UnaryExprOrTypeTraitExpr 0x23b73231458 <col:24, col:39> 'unsigned long long' sizeof
|   |         | |   `-ParenExpr 0x23b73231438 <col:30, col:39> 'const char [10]' lvalue
|   |         | |     `-DeclRefExpr 0x23b73231418 <col:31> 'const char [10]' lvalue Var 0x23b7322dc58 'testdata' 'const char [10]' non_odr_use_unevaluated
|   |         | `-BinaryOperator 0x23b732316c0 <line:352:24, col:67> 'int' '!='
|   |         |   |-CallExpr 0x23b73231600 <col:24, col:62> 'int'
|   |         |   | |-ImplicitCastExpr 0x23b732315e8 <col:24> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |         |   | | `-DeclRefExpr 0x23b732314c8 <col:24> 'int (const void *, const void *, unsigned long long)' Function 0x23b731e3bb8 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   |         |   | |-ImplicitCastExpr 0x23b73231650 <col:31> 'const void *' <BitCast>
|   |         |   | | `-ImplicitCastExpr 0x23b73231638 <col:31> 'char *' <ArrayToPointerDecay>
|   |         |   | |   `-DeclRefExpr 0x23b732314e8 <col:31> 'char [10]' lvalue Var 0x23b7322de08 'buf' 'char [10]'
|   |         |   | |-ImplicitCastExpr 0x23b73231680 <col:36> 'const void *' <BitCast>
|   |         |   | | `-ImplicitCastExpr 0x23b73231668 <col:36> 'const char *' <ArrayToPointerDecay>
|   |         |   | |   `-DeclRefExpr 0x23b73231508 <col:36> 'const char [10]' lvalue Var 0x23b7322dc58 'testdata' 'const char [10]'
|   |         |   | `-UnaryExprOrTypeTraitExpr 0x23b73231568 <col:46, col:61> 'unsigned long long' sizeof
|   |         |   |   `-ParenExpr 0x23b73231548 <col:52, col:61> 'const char [10]' lvalue
|   |         |   |     `-DeclRefExpr 0x23b73231528 <col:53> 'const char [10]' lvalue Var 0x23b7322dc58 'testdata' 'const char [10]' non_odr_use_unevaluated
|   |         |   `-IntegerLiteral 0x23b73231698 <col:67> 'int' 0
|   |         `-CompoundStmt 0x23b732318c8 <col:70, line:356:13>
|   |           |-BinaryOperator 0x23b73231760 <line:353:17, col:24> 'int' '='
|   |           | |-DeclRefExpr 0x23b73231700 <col:17> 'int' lvalue Var 0x23b7322d970 'err' 'int'
|   |           | `-UnaryOperator 0x23b73231748 <col:23, col:24> 'int' prefix '-'
|   |           |   `-IntegerLiteral 0x23b73231720 <col:24> 'int' 1
|   |           |-CallExpr 0x23b73231838 <line:354:17, col:78> 'int'
|   |           | |-ImplicitCastExpr 0x23b73231820 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x23b73231780 <col:17> 'int (const char *, ...)' Function 0x23b732281c8 'printf' 'int (const char *, ...)'
|   |           | |-ImplicitCastExpr 0x23b73231880 <col:24> 'const char *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x23b73231868 <col:24> 'char *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x23b732317a0 <col:24> 'char [46]' lvalue "Test %d failed: Unexpected app data received\n"
|   |           | `-ImplicitCastExpr 0x23b73231898 <col:74> 'int' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x23b732317e8 <col:74> 'int' lvalue Var 0x23b7322d8f0 'test' 'int'
|   |           `-GotoStmt 0x23b732318b0 <line:355:17, col:22> 'end' 0x23b73228498
|   |-CallExpr 0x23b73231c50 <line:365:5, col:28> 'int'
|   | |-ImplicitCastExpr 0x23b73231c38 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x23b73231ba0 <col:5> 'int (const char *, ...)' Function 0x23b732281c8 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x23b73231c90 <col:12> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x23b73231c78 <col:12> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x23b73231bf8 <col:12> 'char [14]' lvalue "Test success\n"
|   |-BinaryOperator 0x23b73231cf0 <line:367:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x23b73231ca8 <col:5> 'int' lvalue Var 0x23b7322d970 'err' 'int'
|   | `-IntegerLiteral 0x23b73231cc8 <col:11> 'int' 0
|   |-LabelStmt 0x23b73231e60 <line:368:2, col:5> 'end'
|   | `-NullStmt 0x23b73231e58 <col:5>
|   `-ReturnStmt 0x23b732381a0 <line:381:5, col:12>
|     `-ImplicitCastExpr 0x23b73238188 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x23b73238168 <col:12> 'int' lvalue Var 0x23b7322d970 'err' 'int'
`-FunctionDecl 0x23b732281c8 <line:253:9> col:9 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x23b73228268 <<invalid sloc>> <invalid sloc> 'const char *'
  `-FormatAttr 0x23b732282d8 <col:9> Implicit printf 1 2
