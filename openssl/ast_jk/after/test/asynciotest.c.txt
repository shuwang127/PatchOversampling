TranslationUnitDecl 0x1bfa2609e58 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1bfa260a6f0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1bfa260a3f0 '__int128'
|-TypedefDecl 0x1bfa260a760 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1bfa260a410 'unsigned __int128'
|-TypedefDecl 0x1bfa260aa98 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1bfa260a850 'struct __NSConstantString_tag'
|   `-Record 0x1bfa260a7b8 '__NSConstantString_tag'
|-TypedefDecl 0x1bfa260ab08 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1bfa260a030 'unsigned long long'
|-TypedefDecl 0x1bfa260aba0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1bfa260ab60 'char *'
|   `-BuiltinType 0x1bfa2609ef0 'char'
|-TypedefDecl 0x1bfa260ac10 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1bfa260ab60 'char *'
|   `-BuiltinType 0x1bfa2609ef0 'char'
|-TypedefDecl 0x1bfa260acd0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1bfa260a030 'unsigned long long'
|-TypedefDecl 0x1bfa260ad40 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1bfa260ab60 'char *'
|   `-BuiltinType 0x1bfa2609ef0 'char'
|-FunctionDecl 0x1bfa4033220 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1bfa40332c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1bfa4033330 <col:21> Implicit
|-FunctionDecl 0x1bfa4033388 prev 0x1bfa4033220 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1bfa40330b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1bfa4033478 <col:21> Inherited Implicit
|-TypedefDecl 0x1bfa40334b8 prev 0x1bfa260ab08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1bfa260a030 'unsigned long long'
|-TypedefDecl 0x1bfa4033560 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1bfa4033530 'size_t' sugar
|   |-Typedef 0x1bfa40334b8 'size_t'
|   `-BuiltinType 0x1bfa260a030 'unsigned long long'
|-TypedefDecl 0x1bfa40335d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1bfa2609f90 'long long'
|-TypedefDecl 0x1bfa4033640 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1bfa2609f90 'long long'
|-TypedefDecl 0x1bfa40336b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1bfa2609fd0 'unsigned short'
|-TypedefDecl 0x1bfa4033720 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1bfa2609fd0 'unsigned short'
|-TypedefDecl 0x1bfa4033790 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1bfa2609fd0 'unsigned short'
|-TypedefDecl 0x1bfa4033800 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1bfa2609f50 'int'
|-TypedefDecl 0x1bfa4033870 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1bfa2609f70 'long'
|-TypedefDecl 0x1bfa40338e0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1bfa2609f90 'long long'
|-TypedefDecl 0x1bfa4033970 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1bfa4033940 '__time64_t' sugar
|   |-Typedef 0x1bfa40338e0 '__time64_t'
|   `-BuiltinType 0x1bfa2609f90 'long long'
|-FunctionDecl 0x1bfa4033ae8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1bfa4033d08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1bfa406a9a0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1bfa4033e48 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1bfa4033ec0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1bfa4033f38 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1bfa4033fb8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1bfa406a740 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1bfa406aa80 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1bfa406ab40 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1bfa406acb0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1bfa406ac60 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1bfa406ac00 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1bfa406ab20 'struct threadlocaleinfostruct'
|       `-Record 0x1bfa406c760 'threadlocaleinfostruct'
|-TypedefDecl 0x1bfa406adc0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1bfa406ad70 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1bfa406ad10 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1bfa406abe0 'struct threadmbcinfostruct'
|       `-Record 0x1bfa406ab40 'threadmbcinfostruct'
|-RecordDecl 0x1bfa406ae18 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1bfa406aed0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1bfa406af90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bfa406b020 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1bfa406b0b0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1bfa406b168 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1bfa406b110 'struct localeinfo_struct' sugar
|   `-RecordType 0x1bfa406af70 'struct localeinfo_struct'
|     `-Record 0x1bfa406aed0 'localeinfo_struct'
|-TypedefDecl 0x1bfa406b240 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1bfa406b1f0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1bfa406b110 'struct localeinfo_struct' sugar
|     `-RecordType 0x1bfa406af70 'struct localeinfo_struct'
|       `-Record 0x1bfa406aed0 'localeinfo_struct'
|-RecordDecl 0x1bfa406b2b8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1bfa406b370 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bfa406b3e8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1bfa406b4a8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1bfa406b540 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1bfa406b5b0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1bfa406b668 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1bfa406b610 'struct localerefcount' sugar
|   `-RecordType 0x1bfa406b350 'struct localerefcount'
|     `-Record 0x1bfa406b2b8 'localerefcount'
|-RecordDecl 0x1bfa406c760 prev 0x1bfa406aa80 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1bfa406c7e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bfa406c858 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1bfa406c8c8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1bfa406c938 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1bfa406c9a8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1bfa406cb68 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1bfa406cbd8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1bfa406cc48 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1bfa406ccb8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1bfa406cd28 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1bfa406cd98 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1bfa406cdf0 parent 0x1bfa2609e58 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1bfa406cf80 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1bfa406cff0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1bfa406d060 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1bfa406d0d0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1bfa406d170 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1bfa406d1e0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1bfa406d2f0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1bfa406d428 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1bfa406d4d8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1bfa406d480 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1bfa406ab20 'struct threadlocaleinfostruct'
|     `-Record 0x1bfa406c760 'threadlocaleinfostruct'
|-FunctionDecl 0x1bfa40729d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1bfa406d560 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1bfa406d610 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1bfa406d690 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1bfa40727c0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa4072d98 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa4072e38 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1bfa4072ea0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1bfa4072f08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa4072f88 prev 0x1bfa4072d98 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1bfa4072ac0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1bfa4072b40 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1bfa4072bb8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa4073348 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1bfa4073070 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1bfa40730f0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1bfa4073168 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa4074830 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa4073430 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1bfa40734b0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1bfa4073528 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40735c0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa4074b38 <line:51:32> col:32 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa4074bd8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1bfa4074c40 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1bfa4074ca8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa4074d28 prev 0x1bfa4074b38 <col:16, col:144> col:32 used memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1bfa4074920 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1bfa40749a0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1bfa4074a18 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40750e8 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa4075188 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bfa40751f0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1bfa4075258 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa40752d8 prev 0x1bfa40750e8 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1bfa4074e10 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1bfa4074e90 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1bfa4074f08 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa406e780 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1bfa40753e8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1bfa4075480 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bfa4075500 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1bfa4075578 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bfa406eb48 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa406ebe8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bfa406ec50 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1bfa406ecb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa406ed38 prev 0x1bfa406eb48 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1bfa406e870 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1bfa406e8f0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1bfa406e968 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa406f1b8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa406f258 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bfa406f2c0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1bfa406f328 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1bfa406f390 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa406f418 prev 0x1bfa406f1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1bfa406ef00 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1bfa406ef80 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1bfa406f000 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1bfa406f078 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa406f4d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1bfa40789b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1bfa406f6a0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1bfa4078820 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1bfa4078898 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa4078a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1bfa4078e60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1bfa4078b98 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1bfa4078c10 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa4078c90 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1bfa4079230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1bfa4079040 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1bfa40790c0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1bfa40792e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40796f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1bfa4079428 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1bfa40794a0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa4079520 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1bfa4075ab0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1bfa4075b50 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1bfa4075bb8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bfa4075c30 prev 0x1bfa4075ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1bfa40758c8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1bfa4075948 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1bfa4075ce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa4076038 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1bfa4075e28 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1bfa4075ea0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa4075f20 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1bfa4076360 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1bfa4076400 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1bfa4076468 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bfa40764e0 prev 0x1bfa4076360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1bfa40761e0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1bfa4076260 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1bfa4076590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa4079900 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1bfa40799a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa4079a08 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bfa4079a80 prev 0x1bfa4079900 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1bfa40766d8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1bfa4076758 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1bfa4079cd0 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1bfa4079d70 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bfa4079de0 prev 0x1bfa4079cd0 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1bfa4079b60 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1bfa407a0d8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1bfa4079eb8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1bfa4079f30 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa407a328 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1bfa407a1b8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1bfa407a230 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1bfa407a658 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1bfa407a648 <line:132:5, col:51>
|     `-ConditionalOperator 0x1bfa407a618 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1bfa407a488 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1bfa407a468 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1bfa407a438 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1bfa407a3f0 <col:13> 'const char *' lvalue ParmVar 0x1bfa407a1b8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1bfa407a450 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1bfa407a410 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1bfa407a600 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1bfa407a4a8 <col:24> 'int' 0
|       `-CallExpr 0x1bfa407a5a0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1bfa407a588 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1bfa407a4d0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1bfa407a0d8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1bfa407a5d0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1bfa407a4f0 <col:36> 'const char *' lvalue ParmVar 0x1bfa407a1b8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1bfa407a5e8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1bfa407a510 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1bfa407a230 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa4076938 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1bfa407a688 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1bfa407a700 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bfa407a780 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1bfa4076800 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bfa4076c40 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa4076ce0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bfa4076d48 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1bfa4076db0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa4076e30 prev 0x1bfa4076c40 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1bfa4076a28 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1bfa4076aa8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1bfa4076b20 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa4077068 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1bfa4076f18 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1bfa4077330 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1bfa40773d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa4077438 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bfa40774b0 prev 0x1bfa4077330 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1bfa4077140 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1bfa40771c0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1bfa4077710 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bfa4077590 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1bfa4077610 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1bfa407a9c0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bfa407a840 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1bfa407a8c0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1bfa407ad78 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1bfa407aaa0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa407ab20 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1bfa407ab98 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa407afe0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bfa407ae60 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1bfa407aee0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1bfa407b2d8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1bfa407b0c0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa407b140 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1bfa407b1b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa407b540 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bfa407b3c0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1bfa407b440 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1bfa407e880 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1bfa407b620 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa407b6a0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1bfa407b718 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa407ec38 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bfa407e968 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa407e9e8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1bfa407ea60 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa407f0a0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa407ed20 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa407eda0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1bfa407ee18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa407ee90 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa407f3a8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bfa407f190 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa407f210 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1bfa407f288 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa407f740 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa407f490 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa407f510 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1bfa407f588 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa407f600 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa407ba78 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1bfa407bb18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa407bb80 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bfa407bbf8 prev 0x1bfa407ba78 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1bfa407b850 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1bfa407b8d0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1bfa407beb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1bfa407bdd0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1bfa407bf58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa407c330 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1bfa407c0a0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1bfa407c118 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa407c198 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1bfa407c648 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1bfa407c6e8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bfa407c758 prev 0x1bfa407c648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1bfa407c510 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1bfa407c800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa407cb70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1bfa407c960 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1bfa407c9d8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa407ca58 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1bfa407ce78 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1bfa407cc58 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1bfa407ccd0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa407d168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bfa407d018 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1bfa407d210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa407d620 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa407d358 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1bfa407d3d0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa407d448 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa407da20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1bfa407d7c8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1bfa407d870 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bfa407dad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa407df88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1bfa407dc18 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1bfa407dc90 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bfa407dd10 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1bfa407dd88 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bfa407e408 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa407e4a8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1bfa407e510 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa407e578 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa407e5f8 prev 0x1bfa407e408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bfa407e138 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1bfa407e1b8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1bfa407e230 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa407e6b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa4081a60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa4081b00 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1bfa4081b68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa4081bd0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa4081c50 prev 0x1bfa4081a60 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bfa407e7f8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa40818c8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1bfa4081940 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa4081f50 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bfa4081d38 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa4081db8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1bfa4081e30 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40822e8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa4082038 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa40820b8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1bfa4082130 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40821a8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa4082680 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1bfa40823d8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1bfa4082450 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bfa40824d0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1bfa4082548 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bfa407fa28 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa407fac8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1bfa407fb30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa407fb98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa407fc18 prev 0x1bfa407fa28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bfa4082830 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1bfa407f890 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1bfa407f908 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa407fcd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa4080188 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1bfa407fe18 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1bfa407fe90 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bfa407ff10 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1bfa407ff88 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa4080608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1bfa4080338 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1bfa40803b8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1bfa4080430 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa40806c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa4080a10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1bfa4080ab0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa4080b18 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bfa4080b90 prev 0x1bfa4080a10 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1bfa4080808 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1bfa40808a0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1bfa4080df0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1bfa4080e90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa4080ef8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bfa4080f70 prev 0x1bfa4080df0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1bfa4080c70 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1bfa4080cf0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1bfa4081130 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1bfa4081050 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1bfa4081380 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1bfa4081420 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa4081488 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bfa4081500 prev 0x1bfa4081380 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1bfa4081208 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1bfa4081288 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1bfa4081760 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1bfa4081800 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa40e9fb0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bfa40ea028 prev 0x1bfa4081760 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1bfa40815e0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1bfa4081660 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1bfa40ea348 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1bfa40ea3e8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1bfa40ea450 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bfa40ea4c8 prev 0x1bfa40ea348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1bfa40ea1c8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1bfa40ea248 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1bfa40ea578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40ea958 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1bfa40ea6c0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1bfa40ea740 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1bfa40ea7c0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1bfa40eabb0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1bfa40eaa40 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1bfa40eaab8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40eae30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bfa40ead50 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1bfa40eaed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40e7288 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa40e7080 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1bfa40e70f8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40e7170 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40e75a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1bfa40e7430 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1bfa40e74a8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bfa40e7658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40e7a70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa40e7b10 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1bfa40e7b78 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bfa40e7be0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa40e7c60 prev 0x1bfa40e7a70 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bfa40e77a0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1bfa40e7820 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1bfa40e7898 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40e80c8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa40e7d48 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1bfa40e7dc8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1bfa40e7e40 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40e7eb8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40e8370 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1bfa40e8410 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bfa40e8480 prev 0x1bfa40e8370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1bfa40e8290 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1bfa40e8528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1bfa40e8870 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bfa40e86f0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa40e8770 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1bfa40e8920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1bfa40e8c68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bfa40e8ae8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa40e8b68 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1bfa40e8d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1bfa40eaff8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bfa40e8ee0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1bfa40eb0a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1bfa40eb4b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bfa40eb2a0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1bfa40eb320 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1bfa40eb398 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa40eb570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1bfa40eb950 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1bfa40eb738 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1bfa40eb7b8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1bfa40eb830 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa40eba08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1bfa40ebcb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bfa40ebbd0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1bfa40ebd58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1bfa40e90a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1bfa40ebf20 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1bfa40e8fa0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1bfa40e9150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1bfa40e93f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bfa40e9318 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1bfa40e94a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1bfa40e9730 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1bfa40e95c0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1bfa40e9ac0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40e9800 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bfa40e9878 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40e98f0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1bfa40e9e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40e9c60 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bfa40e9cd8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1bfa40e9f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40ec2e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1bfa40ec388 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1bfa40ec3f0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1bfa40ec468 prev 0x1bfa40ec2e8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1bfa40ec0c8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40ec140 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1bfa40ec760 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1bfa40ec800 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1bfa40ec868 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1bfa40ec8e0 prev 0x1bfa40ec760 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1bfa40ec540 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40ec5b8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bfa40ecbc0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40ec9b8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bfa40eca30 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40ecaa8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1bfa40eced0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40ecd60 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bfa40ecdd8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1bfa40ecf80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40e5278 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40e5058 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40e50d0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1bfa40e54c0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1bfa40e5560 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1bfa40e55d0 prev 0x1bfa40e54c0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1bfa40e5350 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1bfa40e58b8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bfa40e56a0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40e5718 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40e5b00 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1bfa40e5990 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40e5a08 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1bfa40e5e98 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1bfa40e5e88 <line:307:5, col:56>
|     `-ConditionalOperator 0x1bfa40e5e58 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1bfa40e5cc0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1bfa40e5ca0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1bfa40e5c70 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1bfa40e5bc8 <col:13> 'const wchar_t *' lvalue ParmVar 0x1bfa40e5990 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1bfa40e5c88 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1bfa40e5c50 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1bfa40e5c28 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1bfa40e5be8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1bfa40e5e40 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1bfa40e5ce0 <col:29> 'int' 0
|       `-CallExpr 0x1bfa40e5de0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1bfa40e5dc8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1bfa40e5d08 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1bfa40e58b8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1bfa40e5e10 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1bfa40e5d28 <col:41> 'const wchar_t *' lvalue ParmVar 0x1bfa40e5990 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1bfa40e5e28 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1bfa40e5d48 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1bfa40e5a08 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40e6268 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1bfa40e5ec0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bfa40e5f70 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bfa40e5fe8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40e6060 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bfa40e66d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bfa40e6410 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bfa40e6488 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40e6500 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa40e6788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40e6b98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1bfa40e6c38 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1bfa40e6ca0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1bfa40e6d08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bfa40e6d88 prev 0x1bfa40e6b98 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1bfa40e68c8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40e6940 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40e69b8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40f31f0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1bfa40e6e68 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bfa40e6ee0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bfa40f3040 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f30b8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bfa40f35a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bfa40f3398 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bfa40f3410 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f3488 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa40f3658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40f39b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f3798 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f3810 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1bfa40f3c00 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1bfa40f3a90 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f3b08 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1bfa40f3e48 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f3cd8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f3d50 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1bfa40f40b0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f3f20 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f3f98 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1bfa40f43b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f4248 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bfa40f42c0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1bfa40f4468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40f48d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1bfa40f45a8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bfa40f4620 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f4700 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1bfa40f4bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1bfa40f4a78 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1bfa40f4c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40f50d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1bfa40f4dd8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1bfa40f4e50 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40f4ed0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1bfa40f5380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f52a8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1bfa40f5428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40f57f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f5568 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1bfa40f55e0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40f5658 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1bfa40f5a48 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f58d0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f5948 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bfa40f5de8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bfa40f5b20 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f5b98 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f5c10 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40ee078 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bfa40f5ec8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f5f40 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f5fb8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40ee4d0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa40ee158 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40ee1d0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40ee248 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40ee2c0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40ee928 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1bfa40ee5b8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bfa40ee630 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bfa40ee6a8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1bfa40ee720 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40eed90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1bfa40eead0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bfa40eeb48 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1bfa40eebc0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa40eee48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40f1130 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1bfa40eef88 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1bfa40f14c0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1bfa40f1200 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bfa40f1278 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40f12f0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1bfa40f1878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1bfa40f1660 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bfa40f16d8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1bfa40f1928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40f1c88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1bfa40f1a68 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1bfa40f1ae0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40f1ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bfa40f1e20 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1bfa40f1fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40f6430 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa40f6168 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bfa40f61e0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40f6258 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40f67e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bfa40f65d0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1bfa40f6648 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bfa40f6898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40f6b48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1bfa40f69d8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1bfa40f6a50 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40f6db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bfa40f6ce0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1bfa40f6e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40ef190 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa40f6fa0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bfa40ef000 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40ef078 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40ef4a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bfa40ef330 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1bfa40ef3a8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bfa40ef550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bfa40ef950 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bfa40ef690 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bfa40ef708 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40ef780 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40efd98 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa40efa30 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bfa40efaa8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40efb20 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40efb98 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40f7080 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40efe80 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40efef8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bfa40f7368 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bfa40f7158 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f71d0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f7248 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40f75c0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f7448 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f74c0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bfa40f78a8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bfa40f7698 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f7710 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f7788 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40f7b98 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bfa40f7988 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f7a00 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f7a78 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40f7f20 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa40f7c78 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f7cf0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f7d68 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40f7de0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40f01a8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bfa40f8008 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f0010 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bfa40f0088 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bfa40f0530 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bfa40f0288 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f0300 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f0378 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bfa40f03f0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bfa40f0790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f06b8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1bfa40f0838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1bfa40f0b70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f09f8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f0a70 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1bfa40f0c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1bfa40fc0d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bfa40f0de0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f0e58 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f0ed0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa40fc188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1bfa40fc550 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1bfa40fc348 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bfa40fc3c0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1bfa40fc438 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bfa40fc608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1bfa40fc8a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bfa40fc7c8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1bfa40fc948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1bfa40fcc78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1bfa40fcb08 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bfa40fcb80 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1bfa40fcd28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1bfa40fcfc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bfa40fcee8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1bfa40fd068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1bfa40f82e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bfa40f8208 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1bfa40f8388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1bfa40f86c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bfa40f8548 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bfa40f85c0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1bfa40f8770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-RecordDecl 0x1bfa40f8880 <.//openssl//file_jk/after\test/../ssl/packet_locl.h:25:9, line:30:1> line:25:9 struct definition
| |-FieldDecl 0x1bfa40f8958 <line:27:5, col:26> col:26 referenced curr 'const unsigned char *'
| `-FieldDecl 0x1bfa40f89c0 <line:29:5, col:12> col:12 referenced remaining 'size_t':'unsigned long long'
|-TypedefDecl 0x1bfa40f8a78 <line:25:1, line:30:3> col:3 referenced PACKET 'struct PACKET':'PACKET'
| `-ElaboratedType 0x1bfa40f8a20 'struct PACKET' sugar
|   `-RecordType 0x1bfa40f8920 'PACKET'
|     `-Record 0x1bfa40f8880 ''
|-FunctionDecl 0x1bfa40f8d40 <line:33:1, line:37:1> line:33:25 invalid packet_forward 'int (PACKET *, size_t)' static
| |-ParmVarDecl 0x1bfa40f8b78 <col:40, col:48> col:48 used pkt 'PACKET *'
| |-ParmVarDecl 0x1bfa40f8bf0 <col:53, col:60> col:60 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x1bfa40f8fa8 <line:34:1, line:37:1>
|   |-CompoundAssignOperator 0x1bfa40f8ea8 <line:35:5, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-MemberExpr 0x1bfa40f8e40 <col:5, col:10> 'const unsigned char *' lvalue ->curr 0x1bfa40f8958
|   | | `-ImplicitCastExpr 0x1bfa40f8e28 <col:5> 'PACKET *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bfa40f8e08 <col:5> 'PACKET *' lvalue ParmVar 0x1bfa40f8b78 'pkt' 'PACKET *'
|   | `-ImplicitCastExpr 0x1bfa40f8e90 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bfa40f8e70 <col:18> 'size_t':'unsigned long long' lvalue ParmVar 0x1bfa40f8bf0 'len' 'size_t':'unsigned long long'
|   `-CompoundAssignOperator 0x1bfa40f8f78 <line:36:5, col:23> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     |-MemberExpr 0x1bfa40f8f10 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->remaining 0x1bfa40f89c0
|     | `-ImplicitCastExpr 0x1bfa40f8ef8 <col:5> 'PACKET *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1bfa40f8ed8 <col:5> 'PACKET *' lvalue ParmVar 0x1bfa40f8b78 'pkt' 'PACKET *'
|     `-ImplicitCastExpr 0x1bfa40f8f60 <col:23> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x1bfa40f8f40 <col:23> 'size_t':'unsigned long long' lvalue ParmVar 0x1bfa40f8bf0 'len' 'size_t':'unsigned long long'
|-VarDecl 0x1bfa40f8fe0 <line:42:1, col:20> col:20 invalid size_t 'int' static
|-FunctionDecl 0x1bfa40ff4e0 <.//openssl//file_jk/after\test/ssltestlib.h:19:1, line:20:70> line:19:5 invalid create_ssl_objects 'int (int *, int *, int **, int **, int *, int *)'
| |-ParmVarDecl 0x1bfa40ff100 <col:24, col:33> col:33 invalid serverctx 'int *'
| |-ParmVarDecl 0x1bfa40ff180 <col:44, col:53> col:53 invalid clientctx 'int *'
| |-ParmVarDecl 0x1bfa40ff238 <col:64, col:70> col:70 invalid sssl 'int **'
| |-ParmVarDecl 0x1bfa40ff2c0 <line:20:24, col:30> col:30 invalid cssl 'int **'
| |-ParmVarDecl 0x1bfa40ff340 <col:36, col:41> col:41 invalid s_to_c_fbio 'int *'
| `-ParmVarDecl 0x1bfa40ff3c0 <col:54, col:59> col:59 invalid c_to_s_fbio 'int *'
|-FunctionDecl 0x1bfa40ff720 <line:21:1, col:57> col:5 invalid create_ssl_connection 'int (int *, int *)'
| |-ParmVarDecl 0x1bfa40ff5c8 <col:27, col:32> col:32 invalid serverssl 'int *'
| `-ParmVarDecl 0x1bfa40ff648 <col:43, col:48> col:48 invalid clientssl 'int *'
|-FunctionDecl 0x1bfa40ff8a0 <line:24:1, col:45> col:19 invalid bio_f_tls_dump_filter 'const int *(void)'
|-FunctionDecl 0x1bfa40ff9d8 <line:25:1, col:37> col:6 bio_f_tls_dump_filter_free 'void (void)'
|-FunctionDecl 0x1bfa40ffb30 <line:27:1, col:44> col:19 invalid bio_s_mempacket_test 'const int *(void)'
|-FunctionDecl 0x1bfa40ffc68 <line:28:1, col:36> col:6 bio_s_mempacket_test_free 'void (void)'
|-FunctionDecl 0x1bfa4100040 <line:34:1, line:35:35> line:34:5 invalid mempacket_test_inject 'int (int *, const char *, int, int, int)'
| |-ParmVarDecl 0x1bfa40ffd38 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x1bfa40ffdb8 <col:37, col:49> col:49 in 'const char *'
| |-ParmVarDecl 0x1bfa40ffe38 <col:53, col:57> col:57 inl 'int'
| |-ParmVarDecl 0x1bfa40ffeb8 <col:62, col:66> col:66 pktnum 'int'
| `-ParmVarDecl 0x1bfa40fff38 <line:35:27, col:31> col:31 type 'int'
|-RecordDecl 0x1bfa4100138 <line:37:9, col:16> col:16 struct mempacket_st
|-TypedefDecl 0x1bfa4100248 <col:1, col:29> col:29 referenced MEMPACKET 'struct mempacket_st':'struct mempacket_st'
| `-ElaboratedType 0x1bfa41001f0 'struct mempacket_st' sugar
|   `-RecordType 0x1bfa41001d0 'struct mempacket_st'
|     `-Record 0x1bfa4100138 'mempacket_st'
|-FunctionDecl 0x1bfa41003f0 <line:39:1, col:26> col:1 DEFINE_STACK_OF 'int (MEMPACKET)'
| `-ParmVarDecl 0x1bfa41002f0 <col:17> col:26 'MEMPACKET':'struct mempacket_st'
|-VarDecl 0x1bfa41004c8 <.//openssl//file_jk/after\test\asynciotest.c:21:1, col:23> col:12 used fragment 'int' static cinit
| `-IntegerLiteral 0x1bfa4100530 <col:23> 'int' 0
|-FunctionDecl 0x1bfa4100650 <line:23:1, col:29> col:12 invalid async_new 'int (int *)' static
| `-ParmVarDecl 0x1bfa4100588 <col:22, col:27> col:27 invalid bi 'int *'
|-FunctionDecl 0x1bfa41007a8 <line:24:1, col:29> col:12 invalid async_free 'int (int *)' static
| `-ParmVarDecl 0x1bfa4100710 <col:23, col:28> col:28 invalid a 'int *'
|-FunctionDecl 0x1bfa4100a50 <line:25:1, col:50> col:12 invalid async_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1bfa4100868 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x1bfa41008e8 <col:31, col:37> col:37 out 'char *'
| `-ParmVarDecl 0x1bfa4100968 <col:42, col:46> col:46 outl 'int'
|-FunctionDecl 0x1bfa4100d10 <line:26:1, col:55> col:12 invalid async_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1bfa4100b20 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x1bfa4100ba0 <col:32, col:44> col:44 in 'const char *'
| `-ParmVarDecl 0x1bfa4100c20 <col:48, col:52> col:52 inl 'int'
|-FunctionDecl 0x1bfa4101060 <line:27:1, col:60> col:13 invalid async_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1bfa4100de0 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x1bfa4100e60 <col:32, col:36> col:36 cmd 'int'
| |-ParmVarDecl 0x1bfa4100ee0 <col:41, col:46> col:46 num 'long'
| `-ParmVarDecl 0x1bfa4100f60 <col:51, col:57> col:57 ptr 'void *'
|-FunctionDecl 0x1bfa40fb2a0 <line:28:1, col:51> col:12 invalid async_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1bfa40fb0f8 <col:23, col:28> col:28 invalid bp 'int *'
| |-ParmVarDecl 0x1bfa40fb178 <col:32, col:38> col:38 buf 'char *'
| `-ParmVarDecl 0x1bfa40fb1f8 <col:43, col:47> col:47 size 'int'
|-FunctionDecl 0x1bfa40fb4d0 <line:29:1, col:47> col:12 invalid async_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1bfa40fb370 <col:23, col:28> col:28 invalid bp 'int *'
| `-ParmVarDecl 0x1bfa40fb3f0 <col:32, col:44> col:44 str 'const char *'
|-VarDecl 0x1bfa40fb598 <line:34:1, col:20> col:20 invalid methods_async 'int *' static
|-RecordDecl 0x1bfa40fb688 <line:36:1, line:39:1> line:36:8 struct async_ctrs definition
| |-FieldDecl 0x1bfa40fb758 <line:37:5, col:18> col:18 referenced rctr 'unsigned int'
| `-FieldDecl 0x1bfa40fb7c8 <line:38:5, col:18> col:18 referenced wctr 'unsigned int'
|-FunctionDecl 0x1bfa40fb870 <line:41:1, line:56:1> line:41:26 invalid bio_f_async_filter 'const int *()' static
| `-CompoundStmt 0x1bfa4101550 <line:42:1, line:56:1>
|   `-IfStmt 0x1bfa4101538 <line:43:5, line:54:5>
|     |-OpaqueValueExpr 0x1bfa4101520 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1bfa4101508 <line:43:32, line:54:5>
|       `-IfStmt 0x1bfa41014f0 <line:45:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|         |-OpaqueValueExpr 0x1bfa41014d8 <<invalid sloc>> '_Bool'
|         `-ReturnStmt 0x1bfa41014c8 <.//openssl//file_jk/after\test\asynciotest.c:53:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|           `-ImplicitCastExpr 0x1bfa41014b0 <col:17, col:27> 'const int *' <NullToPointer>
|             `-ParenExpr 0x1bfa4101490 <col:17, col:27> 'void *'
|               `-CStyleCastExpr 0x1bfa4101468 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x1bfa4101428 <col:26> 'int' 0
|-FunctionDecl 0x1bfa4101618 <.//openssl//file_jk/after\test\asynciotest.c:58:1, line:69:1> line:58:12 invalid async_new 'int (int *)' static
| |-ParmVarDecl 0x1bfa4101580 <col:22, col:27> col:27 invalid bio 'int *'
| `-CompoundStmt 0x1bfa4101e28 <line:59:1, line:69:1>
|   |-DeclStmt 0x1bfa41017f8 <line:60:5, col:28>
|   | `-VarDecl 0x1bfa4101790 <col:5, col:24> col:24 used ctrs 'struct async_ctrs *'
|   |-BinaryOperator 0x1bfa4101a20 <line:62:5, col:52> 'struct async_ctrs *' '='
|   | |-DeclRefExpr 0x1bfa4101810 <col:5> 'struct async_ctrs *' lvalue Var 0x1bfa4101790 'ctrs' 'struct async_ctrs *'
|   | `-ImplicitCastExpr 0x1bfa4101a08 <col:12, col:52> 'struct async_ctrs *' <IntegralToPointer>
|   |   `-CallExpr 0x1bfa41019e0 <col:12, col:52> 'int'
|   |     |-ImplicitCastExpr 0x1bfa41019c8 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1bfa4101938 <col:12> 'int ()' Function 0x1bfa4101870 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x1bfa4101978 <col:27, col:51> 'unsigned long long' sizeof 'struct async_ctrs':'struct async_ctrs'
|   |-IfStmt 0x1bfa4101b70 <line:63:5, line:64:16>
|   | |-BinaryOperator 0x1bfa4101b18 <line:63:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1bfa4101ae8 <.//openssl//file_jk/after\test\asynciotest.c:63:9> 'struct async_ctrs *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bfa4101a40 <col:9> 'struct async_ctrs *' lvalue Var 0x1bfa4101790 'ctrs' 'struct async_ctrs *'
|   | | `-ImplicitCastExpr 0x1bfa4101b00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'struct async_ctrs *' <BitCast>
|   | |   `-ParenExpr 0x1bfa4101ac8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1bfa4101aa0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1bfa4101a60 <col:26> 'int' 0
|   | `-ReturnStmt 0x1bfa4101b60 <.//openssl//file_jk/after\test\asynciotest.c:64:9, col:16>
|   |   `-IntegerLiteral 0x1bfa4101b38 <col:16> 'int' 0
|   `-ReturnStmt 0x1bfa4101e18 <line:68:5, col:12>
|     `-IntegerLiteral 0x1bfa4101df0 <col:12> 'int' 1
|-FunctionDecl 0x1bfa4101f08 <line:71:1, line:83:1> line:71:12 invalid async_free 'int (int *)' static
| |-ParmVarDecl 0x1bfa4101e70 <col:23, col:28> col:28 invalid bio 'int *'
| `-CompoundStmt 0x1bfa4103578 <line:72:1, line:83:1>
|   |-DeclStmt 0x1bfa4102058 <line:73:5, col:28>
|   | `-VarDecl 0x1bfa4101ff0 <col:5, col:24> col:24 used ctrs 'struct async_ctrs *'
|   |-IfStmt 0x1bfa4103168 <line:75:5, line:76:16>
|   | |-OpaqueValueExpr 0x1bfa4103150 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1bfa4103140 <col:9, col:16>
|   |   `-IntegerLiteral 0x1bfa41020f8 <col:16> 'int' 0
|   |-CallExpr 0x1bfa4103410 <line:78:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x1bfa41033f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1bfa41033b8 <col:5> 'int ()' Function 0x1bfa41032f0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1bfa4103438 <col:18> 'struct async_ctrs *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bfa41033d8 <col:18> 'struct async_ctrs *' lvalue Var 0x1bfa4101ff0 'ctrs' 'struct async_ctrs *'
|   `-ReturnStmt 0x1bfa4103568 <line:82:5, col:12>
|     `-IntegerLiteral 0x1bfa4103540 <col:12> 'int' 1
|-FunctionDecl 0x1bfa4103768 <line:85:1, line:111:1> line:85:12 invalid async_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1bfa41035c0 <col:23, col:28> col:28 invalid bio 'int *'
| |-ParmVarDecl 0x1bfa4103640 <col:33, col:39> col:39 used out 'char *'
| |-ParmVarDecl 0x1bfa41036c0 <col:44, col:48> col:48 used outl 'int'
| `-CompoundStmt 0x1bfa40add40 <line:86:1, line:111:1>
|   |-DeclStmt 0x1bfa41038c8 <line:87:5, col:28>
|   | `-VarDecl 0x1bfa4103860 <col:5, col:24> col:24 used ctrs 'struct async_ctrs *'
|   |-DeclStmt 0x1bfa41039a0 <line:88:5, col:17>
|   | `-VarDecl 0x1bfa41038f8 <col:5, col:16> col:9 used ret 'int' cinit
|   |   `-UnaryOperator 0x1bfa4103988 <col:15, col:16> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1bfa4103960 <col:16> 'int' 1
|   |-IfStmt 0x1bfa4103b98 <line:91:5, line:92:16>
|   | |-BinaryOperator 0x1bfa4103b40 <line:91:9, col:17> 'int' '<='
|   | | |-ImplicitCastExpr 0x1bfa4103b28 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bfa4103ac8 <col:9> 'int' lvalue ParmVar 0x1bfa41036c0 'outl' 'int'
|   | | `-IntegerLiteral 0x1bfa4103b00 <col:17> 'int' 0
|   | `-ReturnStmt 0x1bfa4103b88 <line:92:9, col:16>
|   |   `-IntegerLiteral 0x1bfa4103b60 <col:16> 'int' 0
|   |-IfStmt 0x1bfa4103c88 <line:93:5, line:94:16>
|   | |-OpaqueValueExpr 0x1bfa4103c70 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1bfa4103c60 <col:9, col:16>
|   |   `-IntegerLiteral 0x1bfa4103c38 <col:16> 'int' 0
|   |-IfStmt 0x1bfa40adcd0 <line:100:5, line:108:5> has_else
|   | |-BinaryOperator 0x1bfa4103ec8 <line:100:9, col:22> 'int' '>'
|   | | |-ImplicitCastExpr 0x1bfa4103e98 <col:9, col:15> 'unsigned int' <LValueToRValue>
|   | | | `-MemberExpr 0x1bfa4103e40 <col:9, col:15> 'unsigned int' lvalue ->rctr 0x1bfa40fb758
|   | | |   `-ImplicitCastExpr 0x1bfa4103e28 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1bfa4103e08 <col:9> 'struct async_ctrs *' lvalue Var 0x1bfa4103860 'ctrs' 'struct async_ctrs *'
|   | | `-ImplicitCastExpr 0x1bfa4103eb0 <col:22> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1bfa4103e70 <col:22> 'int' 0
|   | |-CompoundStmt 0x1bfa40adc00 <col:25, line:105:5>
|   | | `-BinaryOperator 0x1bfa40adbe0 <line:104:9, col:22> 'unsigned int' '='
|   | |   |-MemberExpr 0x1bfa40adb70 <col:9, col:15> 'unsigned int' lvalue ->rctr 0x1bfa40fb758
|   | |   | `-ImplicitCastExpr 0x1bfa40adb58 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1bfa40adb38 <col:9> 'struct async_ctrs *' lvalue Var 0x1bfa4103860 'ctrs' 'struct async_ctrs *'
|   | |   `-ImplicitCastExpr 0x1bfa40adbc8 <col:22> 'unsigned int' <IntegralCast>
|   | |     `-IntegerLiteral 0x1bfa40adba0 <col:22> 'int' 0
|   | `-CompoundStmt 0x1bfa40adcb8 <line:105:12, line:108:5>
|   |   `-UnaryOperator 0x1bfa40adc80 <line:106:9, col:19> 'unsigned int' postfix '++'
|   |     `-MemberExpr 0x1bfa40adc50 <col:9, col:15> 'unsigned int' lvalue ->rctr 0x1bfa40fb758
|   |       `-ImplicitCastExpr 0x1bfa40adc38 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1bfa40adc18 <col:9> 'struct async_ctrs *' lvalue Var 0x1bfa4103860 'ctrs' 'struct async_ctrs *'
|   `-ReturnStmt 0x1bfa40add30 <line:110:5, col:12>
|     `-ImplicitCastExpr 0x1bfa40add18 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1bfa40adcf8 <col:12> 'int' lvalue Var 0x1bfa41038f8 'ret' 'int'
|-FunctionDecl 0x1bfa40adf40 <line:120:1, line:205:1> line:120:12 invalid async_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1bfa40add98 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x1bfa40ade18 <col:34, col:46> col:46 used in 'const char *'
| |-ParmVarDecl 0x1bfa40ade98 <col:50, col:54> col:54 used inl 'int'
| `-CompoundStmt 0x1bfa40b0c88 <line:121:1, line:205:1>
|   |-DeclStmt 0x1bfa40ae0a0 <line:122:5, col:28>
|   | `-VarDecl 0x1bfa40ae038 <col:5, col:24> col:24 used ctrs 'struct async_ctrs *'
|   |-DeclStmt 0x1bfa40ae178 <line:123:5, col:17>
|   | `-VarDecl 0x1bfa40ae0d0 <col:5, col:16> col:9 used ret 'int' cinit
|   |   `-UnaryOperator 0x1bfa40ae160 <col:15, col:16> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1bfa40ae138 <col:16> 'int' 1
|   |-DeclStmt 0x1bfa40ae268 <line:124:5, col:23>
|   | `-VarDecl 0x1bfa40ae1c0 <col:5, col:22> col:12 used written 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1bfa40ae250 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1bfa40ae228 <col:22> 'int' 0
|   |-IfStmt 0x1bfa40ae370 <line:127:5, line:128:16>
|   | |-BinaryOperator 0x1bfa40ae318 <line:127:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1bfa40ae300 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bfa40ae2a0 <col:9> 'int' lvalue ParmVar 0x1bfa40ade98 'inl' 'int'
|   | | `-IntegerLiteral 0x1bfa40ae2d8 <col:16> 'int' 0
|   | `-ReturnStmt 0x1bfa40ae360 <line:128:9, col:16>
|   |   `-IntegerLiteral 0x1bfa40ae338 <col:16> 'int' 0
|   |-IfStmt 0x1bfa40ae460 <line:129:5, line:130:16>
|   | |-OpaqueValueExpr 0x1bfa40ae448 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1bfa40ae438 <col:9, col:16>
|   |   `-IntegerLiteral 0x1bfa40ae410 <col:16> 'int' 0
|   |-IfStmt 0x1bfa40b0c18 <line:136:5, line:202:5> has_else
|   | |-BinaryOperator 0x1bfa40ae5b0 <line:136:9, col:22> 'int' '>'
|   | | |-ImplicitCastExpr 0x1bfa40ae580 <col:9, col:15> 'unsigned int' <LValueToRValue>
|   | | | `-MemberExpr 0x1bfa40ae528 <col:9, col:15> 'unsigned int' lvalue ->wctr 0x1bfa40fb7c8
|   | | |   `-ImplicitCastExpr 0x1bfa40ae510 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1bfa40ae4f0 <col:9> 'struct async_ctrs *' lvalue Var 0x1bfa40ae038 'ctrs' 'struct async_ctrs *'
|   | | `-ImplicitCastExpr 0x1bfa40ae598 <col:22> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1bfa40ae558 <col:22> 'int' 0
|   | |-CompoundStmt 0x1bfa40b0b28 <col:25, line:199:5>
|   | | |-BinaryOperator 0x1bfa40ae678 <line:137:9, col:22> 'unsigned int' '='
|   | | | |-MemberExpr 0x1bfa40ae608 <col:9, col:15> 'unsigned int' lvalue ->wctr 0x1bfa40fb7c8
|   | | | | `-ImplicitCastExpr 0x1bfa40ae5f0 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1bfa40ae5d0 <col:9> 'struct async_ctrs *' lvalue Var 0x1bfa40ae038 'ctrs' 'struct async_ctrs *'
|   | | | `-ImplicitCastExpr 0x1bfa40ae660 <col:22> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1bfa40ae638 <col:22> 'int' 0
|   | | |-IfStmt 0x1bfa40b0430 <line:138:9, line:188:9>
|   | | | |-ImplicitCastExpr 0x1bfa40ae6b8 <line:138:13> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1bfa40ae698 <col:13> 'int' lvalue Var 0x1bfa41004c8 'fragment' 'int'
|   | | | `-CompoundStmt 0x1bfa40b0408 <col:23, line:188:9>
|   | | |   |-DeclStmt 0x1bfa40ae748 <line:139:13, col:23>
|   | | |   | `-VarDecl 0x1bfa40ae6e0 <col:13, col:20> col:20 used pkt 'PACKET':'PACKET'
|   | | |   |-IfStmt 0x1bfa40aeb50 <line:141:13, line:142:23>
|   | | |   | |-UnaryOperator 0x1bfa40aea00 <line:141:17, col:70> 'int' prefix '!' cannot overflow
|   | | |   | | `-CallExpr 0x1bfa40ae9b0 <col:18, col:70> 'int'
|   | | |   | |   |-ImplicitCastExpr 0x1bfa40ae998 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | |   | `-DeclRefExpr 0x1bfa40ae850 <col:18> 'int ()' Function 0x1bfa40ae788 'PACKET_buf_init' 'int ()'
|   | | |   | |   |-UnaryOperator 0x1bfa40ae8a8 <col:34, col:35> 'PACKET *' prefix '&' cannot overflow
|   | | |   | |   | `-DeclRefExpr 0x1bfa40ae870 <col:35> 'PACKET':'PACKET' lvalue Var 0x1bfa40ae6e0 'pkt' 'PACKET':'PACKET'
|   | | |   | |   |-CStyleCastExpr 0x1bfa40ae950 <col:40, col:63> 'const unsigned char *' <BitCast>
|   | | |   | |   | `-ImplicitCastExpr 0x1bfa40ae910 <col:63> 'const char *' <LValueToRValue> part_of_explicit_cast
|   | | |   | |   |   `-DeclRefExpr 0x1bfa40ae8c0 <col:63> 'const char *' lvalue ParmVar 0x1bfa40ade18 'in' 'const char *'
|   | | |   | |   `-ImplicitCastExpr 0x1bfa40ae9e8 <col:67> 'int' <LValueToRValue>
|   | | |   | |     `-DeclRefExpr 0x1bfa40ae978 <col:67> 'int' lvalue ParmVar 0x1bfa40ade98 'inl' 'int'
|   | | |   | `-CallExpr 0x1bfa40aeb30 <line:142:17, col:23> 'void'
|   | | |   |   `-ImplicitCastExpr 0x1bfa40aeb18 <col:17> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   | | |   |     `-DeclRefExpr 0x1bfa40aeab8 <col:17> 'void (void) __attribute__((noreturn))' Function 0x1bfa40aea18 'abort' 'void (void) __attribute__((noreturn))'
|   | | |   `-WhileStmt 0x1bfa40b03f0 <line:144:13, line:187:13>
|   | | |     |-BinaryOperator 0x1bfa40aed18 <line:144:20, col:45> 'int' '>'
|   | | |     | |-CallExpr 0x1bfa40aecc8 <col:20, col:41> 'int'
|   | | |     | | |-ImplicitCastExpr 0x1bfa40aecb0 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | | |     | | | `-DeclRefExpr 0x1bfa40aec58 <col:20> 'int ()' Function 0x1bfa40aeb90 'PACKET_remaining' 'int ()'
|   | | |     | | `-UnaryOperator 0x1bfa40aec98 <col:37, col:38> 'PACKET *' prefix '&' cannot overflow
|   | | |     | |   `-DeclRefExpr 0x1bfa40aec78 <col:38> 'PACKET':'PACKET' lvalue Var 0x1bfa40ae6e0 'pkt' 'PACKET':'PACKET'
|   | | |     | `-IntegerLiteral 0x1bfa40aecf0 <col:45> 'int' 0
|   | | |     `-CompoundStmt 0x1bfa40b03b8 <col:48, line:187:13>
|   | | |       |-DeclStmt 0x1bfa40aedb0 <line:145:17, col:31>
|   | | |       | `-VarDecl 0x1bfa40aed48 <col:17, col:24> col:24 used payload 'PACKET':'PACKET'
|   | | |       |-DeclStmt 0x1bfa40aeff0 <line:146:17, col:69>
|   | | |       | |-VarDecl 0x1bfa40aede0 <col:17, col:30> col:30 used contenttype 'unsigned int'
|   | | |       | |-VarDecl 0x1bfa40aee60 <col:17, col:43> col:43 used versionhi 'unsigned int'
|   | | |       | |-VarDecl 0x1bfa40aeee0 <col:17, col:54> col:54 used versionlo 'unsigned int'
|   | | |       | `-VarDecl 0x1bfa40aef60 <col:17, col:65> col:65 used data 'unsigned int'
|   | | |       |-IfStmt 0x1bfa40af6f0 <line:148:17, line:152:27>
|   | | |       | |-BinaryOperator 0x1bfa40af678 <line:148:24, line:151:68> 'int' '||'
|   | | |       | | |-BinaryOperator 0x1bfa40af460 <line:148:24, line:150:54> 'int' '||'
|   | | |       | | | |-BinaryOperator 0x1bfa40af338 <line:148:24, line:149:54> 'int' '||'
|   | | |       | | | | |-UnaryOperator 0x1bfa40af218 <line:148:24, col:56> 'int' prefix '!' cannot overflow
|   | | |       | | | | | `-CallExpr 0x1bfa40af1e8 <col:25, col:56> 'int'
|   | | |       | | | | |   |-ImplicitCastExpr 0x1bfa40af1d0 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | | | | |   | `-DeclRefExpr 0x1bfa40af0f8 <col:25> 'int ()' Function 0x1bfa40af030 'PACKET_get_1' 'int ()'
|   | | |       | | | | |   |-UnaryOperator 0x1bfa40af138 <col:38, col:39> 'PACKET *' prefix '&' cannot overflow
|   | | |       | | | | |   | `-DeclRefExpr 0x1bfa40af118 <col:39> 'PACKET':'PACKET' lvalue Var 0x1bfa40ae6e0 'pkt' 'PACKET':'PACKET'
|   | | |       | | | | |   `-UnaryOperator 0x1bfa40af1b8 <col:44, col:45> 'unsigned int *' prefix '&' cannot overflow
|   | | |       | | | | |     `-DeclRefExpr 0x1bfa40af150 <col:45> 'unsigned int' lvalue Var 0x1bfa40aede0 'contenttype' 'unsigned int'
|   | | |       | | | | `-UnaryOperator 0x1bfa40af320 <line:149:24, col:54> 'int' prefix '!' cannot overflow
|   | | |       | | | |   `-CallExpr 0x1bfa40af2f0 <col:25, col:54> 'int'
|   | | |       | | | |     |-ImplicitCastExpr 0x1bfa40af2d8 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | | | |     | `-DeclRefExpr 0x1bfa40af230 <col:25> 'int ()' Function 0x1bfa40af030 'PACKET_get_1' 'int ()'
|   | | |       | | | |     |-UnaryOperator 0x1bfa40af270 <col:38, col:39> 'PACKET *' prefix '&' cannot overflow
|   | | |       | | | |     | `-DeclRefExpr 0x1bfa40af250 <col:39> 'PACKET':'PACKET' lvalue Var 0x1bfa40ae6e0 'pkt' 'PACKET':'PACKET'
|   | | |       | | | |     `-UnaryOperator 0x1bfa40af2c0 <col:44, col:45> 'unsigned int *' prefix '&' cannot overflow
|   | | |       | | | |       `-DeclRefExpr 0x1bfa40af288 <col:45> 'unsigned int' lvalue Var 0x1bfa40aee60 'versionhi' 'unsigned int'
|   | | |       | | | `-UnaryOperator 0x1bfa40af448 <line:150:24, col:54> 'int' prefix '!' cannot overflow
|   | | |       | | |   `-CallExpr 0x1bfa40af418 <col:25, col:54> 'int'
|   | | |       | | |     |-ImplicitCastExpr 0x1bfa40af400 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | | |     | `-DeclRefExpr 0x1bfa40af358 <col:25> 'int ()' Function 0x1bfa40af030 'PACKET_get_1' 'int ()'
|   | | |       | | |     |-UnaryOperator 0x1bfa40af398 <col:38, col:39> 'PACKET *' prefix '&' cannot overflow
|   | | |       | | |     | `-DeclRefExpr 0x1bfa40af378 <col:39> 'PACKET':'PACKET' lvalue Var 0x1bfa40ae6e0 'pkt' 'PACKET':'PACKET'
|   | | |       | | |     `-UnaryOperator 0x1bfa40af3e8 <col:44, col:45> 'unsigned int *' prefix '&' cannot overflow
|   | | |       | | |       `-DeclRefExpr 0x1bfa40af3b0 <col:45> 'unsigned int' lvalue Var 0x1bfa40aeee0 'versionlo' 'unsigned int'
|   | | |       | | `-UnaryOperator 0x1bfa40af660 <line:151:24, col:68> 'int' prefix '!' cannot overflow
|   | | |       | |   `-CallExpr 0x1bfa40af630 <col:25, col:68> 'int'
|   | | |       | |     |-ImplicitCastExpr 0x1bfa40af618 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | |     | `-DeclRefExpr 0x1bfa40af570 <col:25> 'int ()' Function 0x1bfa40af4a8 'PACKET_get_length_prefixed_2' 'int ()'
|   | | |       | |     |-UnaryOperator 0x1bfa40af5b0 <col:54, col:55> 'PACKET *' prefix '&' cannot overflow
|   | | |       | |     | `-DeclRefExpr 0x1bfa40af590 <col:55> 'PACKET':'PACKET' lvalue Var 0x1bfa40ae6e0 'pkt' 'PACKET':'PACKET'
|   | | |       | |     `-UnaryOperator 0x1bfa40af600 <col:60, col:61> 'PACKET *' prefix '&' cannot overflow
|   | | |       | |       `-DeclRefExpr 0x1bfa40af5c8 <col:61> 'PACKET':'PACKET' lvalue Var 0x1bfa40aed48 'payload' 'PACKET':'PACKET'
|   | | |       | `-CallExpr 0x1bfa40af6d0 <line:152:21, col:27> 'void'
|   | | |       |   `-ImplicitCastExpr 0x1bfa40af6b8 <col:21> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   | | |       |     `-DeclRefExpr 0x1bfa40af698 <col:21> 'void (void) __attribute__((noreturn))' Function 0x1bfa40aea18 'abort' 'void (void) __attribute__((noreturn))'
|   | | |       |-WhileStmt 0x1bfa40b02c0 <line:157:17, line:178:17>
|   | | |       | |-CallExpr 0x1bfa40af800 <line:157:24, col:52> 'int'
|   | | |       | | |-ImplicitCastExpr 0x1bfa40af7e8 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | | | `-DeclRefExpr 0x1bfa40af740 <col:24> 'int ()' Function 0x1bfa40af030 'PACKET_get_1' 'int ()'
|   | | |       | | |-UnaryOperator 0x1bfa40af780 <col:37, col:38> 'PACKET *' prefix '&' cannot overflow
|   | | |       | | | `-DeclRefExpr 0x1bfa40af760 <col:38> 'PACKET':'PACKET' lvalue Var 0x1bfa40aed48 'payload' 'PACKET':'PACKET'
|   | | |       | | `-UnaryOperator 0x1bfa40af7d0 <col:47, col:48> 'unsigned int *' prefix '&' cannot overflow
|   | | |       | |   `-DeclRefExpr 0x1bfa40af798 <col:48> 'unsigned int' lvalue Var 0x1bfa40aef60 'data' 'unsigned int'
|   | | |       | `-CompoundStmt 0x1bfa40b0278 <col:55, line:178:17>
|   | | |       |   |-DeclStmt 0x1bfa40afbd0 <line:161:21, line:168:22>
|   | | |       |   | `-VarDecl 0x1bfa40af8c8 <line:161:21, line:168:21> line:161:26 used smallrec 'char [6]' cinit
|   | | |       |   |   `-InitListExpr 0x1bfa40afad0 <col:53, line:168:21> 'char [6]'
|   | | |       |   |     |-ImplicitCastExpr 0x1bfa40afb40 <line:162:25> 'char' <IntegralCast>
|   | | |       |   |     | `-IntegerLiteral 0x1bfa40af960 <col:25> 'int' 0
|   | | |       |   |     |-ImplicitCastExpr 0x1bfa40afb58 <line:163:25> 'char' <IntegralCast>
|   | | |       |   |     | `-IntegerLiteral 0x1bfa40af988 <col:25> 'int' 0
|   | | |       |   |     |-ImplicitCastExpr 0x1bfa40afb70 <line:164:25> 'char' <IntegralCast>
|   | | |       |   |     | `-IntegerLiteral 0x1bfa40af9b0 <col:25> 'int' 0
|   | | |       |   |     |-ImplicitCastExpr 0x1bfa40afb88 <line:165:25> 'char' <IntegralCast>
|   | | |       |   |     | `-IntegerLiteral 0x1bfa40af9d8 <col:25> 'int' 0
|   | | |       |   |     |-ImplicitCastExpr 0x1bfa40afba0 <line:166:25> 'char' <IntegralCast>
|   | | |       |   |     | `-IntegerLiteral 0x1bfa40afa00 <col:25> 'int' 1
|   | | |       |   |     `-ImplicitCastExpr 0x1bfa40afbb8 <line:167:25> 'char' <IntegralCast>
|   | | |       |   |       `-IntegerLiteral 0x1bfa40afa28 <col:25> 'int' 0
|   | | |       |   |-BinaryOperator 0x1bfa40afcd0 <line:170:21, col:48> 'char' '='
|   | | |       |   | |-ArraySubscriptExpr 0x1bfa40afc60 <col:21, col:44> 'char' lvalue
|   | | |       |   | | |-ImplicitCastExpr 0x1bfa40afc48 <col:21> 'char *' <ArrayToPointerDecay>
|   | | |       |   | | | `-DeclRefExpr 0x1bfa40afbe8 <col:21> 'char [6]' lvalue Var 0x1bfa40af8c8 'smallrec' 'char [6]'
|   | | |       |   | | `-IntegerLiteral 0x1bfa40afc20 <line:115:25> 'int' 0
|   | | |       |   | `-ImplicitCastExpr 0x1bfa40afcb8 <line:170:48> 'char' <IntegralCast>
|   | | |       |   |   `-ImplicitCastExpr 0x1bfa40afca0 <col:48> 'unsigned int' <LValueToRValue>
|   | | |       |   |     `-DeclRefExpr 0x1bfa40afc80 <col:48> 'unsigned int' lvalue Var 0x1bfa40aede0 'contenttype' 'unsigned int'
|   | | |       |   |-BinaryOperator 0x1bfa40afdc0 <line:171:21, col:46> 'char' '='
|   | | |       |   | |-ArraySubscriptExpr 0x1bfa40afd50 <col:21, col:42> 'char' lvalue
|   | | |       |   | | |-ImplicitCastExpr 0x1bfa40afd38 <col:21> 'char *' <ArrayToPointerDecay>
|   | | |       |   | | | `-DeclRefExpr 0x1bfa40afcf0 <col:21> 'char [6]' lvalue Var 0x1bfa40af8c8 'smallrec' 'char [6]'
|   | | |       |   | | `-IntegerLiteral 0x1bfa40afd10 <line:116:25> 'int' 1
|   | | |       |   | `-ImplicitCastExpr 0x1bfa40afda8 <line:171:46> 'char' <IntegralCast>
|   | | |       |   |   `-ImplicitCastExpr 0x1bfa40afd90 <col:46> 'unsigned int' <LValueToRValue>
|   | | |       |   |     `-DeclRefExpr 0x1bfa40afd70 <col:46> 'unsigned int' lvalue Var 0x1bfa40aee60 'versionhi' 'unsigned int'
|   | | |       |   |-BinaryOperator 0x1bfa40afeb0 <line:172:21, col:46> 'char' '='
|   | | |       |   | |-ArraySubscriptExpr 0x1bfa40afe40 <col:21, col:42> 'char' lvalue
|   | | |       |   | | |-ImplicitCastExpr 0x1bfa40afe28 <col:21> 'char *' <ArrayToPointerDecay>
|   | | |       |   | | | `-DeclRefExpr 0x1bfa40afde0 <col:21> 'char [6]' lvalue Var 0x1bfa40af8c8 'smallrec' 'char [6]'
|   | | |       |   | | `-IntegerLiteral 0x1bfa40afe00 <line:117:25> 'int' 2
|   | | |       |   | `-ImplicitCastExpr 0x1bfa40afe98 <line:172:46> 'char' <IntegralCast>
|   | | |       |   |   `-ImplicitCastExpr 0x1bfa40afe80 <col:46> 'unsigned int' <LValueToRValue>
|   | | |       |   |     `-DeclRefExpr 0x1bfa40afe60 <col:46> 'unsigned int' lvalue Var 0x1bfa40aeee0 'versionlo' 'unsigned int'
|   | | |       |   |-BinaryOperator 0x1bfa40affa0 <line:173:21, col:41> 'char' '='
|   | | |       |   | |-ArraySubscriptExpr 0x1bfa40aff30 <col:21, col:37> 'char' lvalue
|   | | |       |   | | |-ImplicitCastExpr 0x1bfa40aff18 <col:21> 'char *' <ArrayToPointerDecay>
|   | | |       |   | | | `-DeclRefExpr 0x1bfa40afed0 <col:21> 'char [6]' lvalue Var 0x1bfa40af8c8 'smallrec' 'char [6]'
|   | | |       |   | | `-IntegerLiteral 0x1bfa40afef0 <line:118:25> 'int' 5
|   | | |       |   | `-ImplicitCastExpr 0x1bfa40aff88 <line:173:41> 'char' <IntegralCast>
|   | | |       |   |   `-ImplicitCastExpr 0x1bfa40aff70 <col:41> 'unsigned int' <LValueToRValue>
|   | | |       |   |     `-DeclRefExpr 0x1bfa40aff50 <col:41> 'unsigned int' lvalue Var 0x1bfa40aef60 'data' 'unsigned int'
|   | | |       |   |-IfStmt 0x1bfa40b0228 <line:175:21, line:176:31>
|   | | |       |   | |-BinaryOperator 0x1bfa40b01b0 <line:175:25, col:32> 'int' '<='
|   | | |       |   | | |-ImplicitCastExpr 0x1bfa40b0198 <col:25> 'int' <LValueToRValue>
|   | | |       |   | | | `-DeclRefExpr 0x1bfa40b0150 <col:25> 'int' lvalue Var 0x1bfa40ae0d0 'ret' 'int'
|   | | |       |   | | `-IntegerLiteral 0x1bfa40b0170 <col:32> 'int' 0
|   | | |       |   | `-CallExpr 0x1bfa40b0208 <line:176:25, col:31> 'void'
|   | | |       |   |   `-ImplicitCastExpr 0x1bfa40b01f0 <col:25> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
|   | | |       |   |     `-DeclRefExpr 0x1bfa40b01d0 <col:25> 'void (void) __attribute__((noreturn))' Function 0x1bfa40aea18 'abort' 'void (void) __attribute__((noreturn))'
|   | | |       |   `-UnaryOperator 0x1bfa40b0260 <line:177:21, col:28> 'size_t':'unsigned long long' postfix '++'
|   | | |       |     `-DeclRefExpr 0x1bfa40b0240 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bfa40ae1c0 'written' 'size_t':'unsigned long long'
|   | | |       `-IfStmt 0x1bfa40b03a0 <line:183:17, line:186:17>
|   | | |         |-OpaqueValueExpr 0x1bfa40b0388 <<invalid sloc>> '_Bool'
|   | | |         `-CompoundStmt 0x1bfa40b0368 <line:183:64, line:186:17>
|   | | |           |-BinaryOperator 0x1bfa40b0340 <line:184:21, col:32> 'int' '='
|   | | |           | |-DeclRefExpr 0x1bfa40b02f8 <col:21> 'int' lvalue Var 0x1bfa41004c8 'fragment' 'int'
|   | | |           | `-IntegerLiteral 0x1bfa40b0318 <col:32> 'int' 0
|   | | |           `-BreakStmt 0x1bfa40b0360 <line:185:21>
|   | | |-BinaryOperator 0x1bfa40b0490 <line:190:9, col:15> 'int' '='
|   | | | |-DeclRefExpr 0x1bfa40b0448 <col:9> 'int' lvalue Var 0x1bfa40ae0d0 'ret' 'int'
|   | | | `-IntegerLiteral 0x1bfa40b0468 <col:15> 'int' 0
|   | | |-IfStmt 0x1bfa40b0708 <line:191:9, line:193:9>
|   | | | |-BinaryOperator 0x1bfa40b0560 <line:191:13, col:28> 'int' '<'
|   | | | | |-CStyleCastExpr 0x1bfa40b0500 <col:13, col:18> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x1bfa40b04e8 <col:18> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | | | | |   `-DeclRefExpr 0x1bfa40b04b0 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1bfa40ae1c0 'written' 'size_t':'unsigned long long'
|   | | | | `-ImplicitCastExpr 0x1bfa40b0548 <col:28> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1bfa40b0528 <col:28> 'int' lvalue ParmVar 0x1bfa40ade98 'inl' 'int'
|   | | | `-CompoundStmt 0x1bfa40b06f8 <col:33, line:193:9>
|   | | `-IfStmt 0x1bfa40b0b00 <line:195:9, line:198:20> has_else
|   | |   |-OpaqueValueExpr 0x1bfa40b0ae8 <<invalid sloc>> '_Bool'
|   | |   |-NullStmt 0x1bfa40b0ae0 <line:196:13>
|   | |   `-CompoundAssignOperator 0x1bfa40b0ab0 <line:198:13, col:20> 'int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |     |-DeclRefExpr 0x1bfa40b0a58 <col:13> 'int' lvalue Var 0x1bfa40ae0d0 'ret' 'int'
|   | |     `-ImplicitCastExpr 0x1bfa40b0a98 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1bfa40b0a78 <col:20> 'size_t':'unsigned long long' lvalue Var 0x1bfa40ae1c0 'written' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1bfa40b0c00 <line:199:12, line:202:5>
|   |   `-UnaryOperator 0x1bfa40b0bc8 <line:200:9, col:19> 'unsigned int' postfix '++'
|   |     `-MemberExpr 0x1bfa40b0b98 <col:9, col:15> 'unsigned int' lvalue ->wctr 0x1bfa40fb7c8
|   |       `-ImplicitCastExpr 0x1bfa40b0b80 <col:9> 'struct async_ctrs *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1bfa40b0b60 <col:9> 'struct async_ctrs *' lvalue Var 0x1bfa40ae038 'ctrs' 'struct async_ctrs *'
|   `-ReturnStmt 0x1bfa40b0c78 <line:204:5, col:12>
|     `-ImplicitCastExpr 0x1bfa40b0c60 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1bfa40b0c40 <col:12> 'int' lvalue Var 0x1bfa40ae0d0 'ret' 'int'
|-FunctionDecl 0x1bfa40aea18 <line:142:17> col:17 implicit used abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x1bfa40b0f18 <line:207:1, line:224:1> line:207:13 invalid async_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1bfa40b0ce8 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x1bfa40b0d68 <col:34, col:38> col:38 used cmd 'int'
| |-ParmVarDecl 0x1bfa40b0de8 <col:43, col:48> col:48 used num 'long'
| |-ParmVarDecl 0x1bfa40b0e68 <col:53, col:59> col:59 used ptr 'void *'
| `-CompoundStmt 0x1bfa40b1510 <line:208:1, line:224:1>
|   |-DeclStmt 0x1bfa40b1070 <line:209:5, col:13>
|   | `-VarDecl 0x1bfa40b1008 <col:5, col:10> col:10 used ret 'long'
|   |-IfStmt 0x1bfa40b1198 <line:212:5, line:213:16>
|   | |-OpaqueValueExpr 0x1bfa40b1180 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1bfa40b1170 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x1bfa40b1158 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1bfa40b1130 <col:16> 'int' 0
|   |-SwitchStmt 0x1bfa40b1200 <line:215:5, line:222:5>
|   | |-ImplicitCastExpr 0x1bfa40b11e8 <line:215:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1bfa40b11b0 <col:13> 'int' lvalue ParmVar 0x1bfa40b0d68 'cmd' 'int'
|   | `-CompoundStmt 0x1bfa40b1498 <col:18, line:222:5>
|   |   |-BinaryOperator 0x1bfa40b1280 <line:217:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x1bfa40b1220 <col:9> 'long' lvalue Var 0x1bfa40b1008 'ret' 'long'
|   |   | `-IntegerLiteral 0x1bfa40b1258 <col:15> 'long' 0
|   |   |-BreakStmt 0x1bfa40b12a0 <line:218:9>
|   |   |-DefaultStmt 0x1bfa40b1470 <line:219:5, col:12>
|   |   | `-NullStmt 0x1bfa40b1468 <col:12>
|   |   `-BreakStmt 0x1bfa40b1490 <line:221:9>
|   `-ReturnStmt 0x1bfa40b1500 <line:223:5, col:12>
|     `-ImplicitCastExpr 0x1bfa40b14e8 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x1bfa40b14c8 <col:12> 'long' lvalue Var 0x1bfa40b1008 'ret' 'long'
|-FunctionDecl 0x1bfa40b1700 <line:226:1, line:230:1> line:226:12 invalid async_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1bfa40b1558 <col:23, col:28> col:28 invalid bio 'int *'
| |-ParmVarDecl 0x1bfa40b15d8 <col:33, col:39> col:39 buf 'char *'
| |-ParmVarDecl 0x1bfa40b1658 <col:44, col:48> col:48 size 'int'
| `-CompoundStmt 0x1bfa40b1820 <line:227:1, line:230:1>
|   `-ReturnStmt 0x1bfa40b1810 <line:229:5, col:13>
|     `-UnaryOperator 0x1bfa40b17f8 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x1bfa40b17d0 <col:13> 'int' 1
|-FunctionDecl 0x1bfa40b19b8 <line:232:1, line:235:1> line:232:12 invalid async_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1bfa40b1880 <col:23, col:28> col:28 invalid bio 'int *'
| |-ParmVarDecl 0x1bfa40b1900 <col:33, col:45> col:45 used str 'const char *'
| `-CompoundStmt 0x1bfa40b1b90 <line:233:1, line:235:1>
|-FunctionDecl 0x1bfa40b1df0 <line:239:1, line:382:1> line:239:5 main 'int (int, char **)'
| |-ParmVarDecl 0x1bfa40b1bb8 <col:10, col:14> col:14 used argc 'int'
| |-ParmVarDecl 0x1bfa40b1ca0 <col:20, col:31> col:26 used argv 'char **':'char **'
| `-CompoundStmt 0x1bfa40baaa0 <line:240:1, line:382:1>
|   |-DeclStmt 0x1bfa40b23b0 <line:244:5, col:27>
|   | |-VarDecl 0x1bfa40b2200 <col:5, col:9> col:9 used test 'int'
|   | |-VarDecl 0x1bfa40b2280 <col:5, col:21> col:15 used err 'int' cinit
|   | | `-IntegerLiteral 0x1bfa40b22e8 <col:21> 'int' 1
|   | `-VarDecl 0x1bfa40b2328 <col:5, col:24> col:24 used ret 'int'
|   |-DeclStmt 0x1bfa40b24d0 <line:245:5, col:16>
|   | |-VarDecl 0x1bfa40b23d8 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x1bfa40b2450 <col:5, col:15> col:15 used j 'size_t':'unsigned long long'
|   |-DeclStmt 0x1bfa40b2668 <line:246:5, col:40>
|   | `-VarDecl 0x1bfa40b2568 <col:5, col:29> col:16 used testdata 'const char [10]' cinit
|   |   `-StringLiteral 0x1bfa40b2608 <col:29> 'const char [10]' "Test data"
|   |-DeclStmt 0x1bfa40b2780 <line:247:5, col:31>
|   | `-VarDecl 0x1bfa40b2718 <col:5, col:30> col:10 used buf 'char [10]'
|   |-CallExpr 0x1bfa40b28e8 <line:249:5, col:27> 'int'
|   | |-ImplicitCastExpr 0x1bfa40b28d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1bfa40b2888 <col:5> 'int ()' Function 0x1bfa40b27c0 'CRYPTO_set_mem_debug' 'int ()'
|   | `-IntegerLiteral 0x1bfa40b28a8 <col:26> 'int' 1
|   |-IfStmt 0x1bfa40ace30 <line:252:5, line:255:5>
|   | |-BinaryOperator 0x1bfa40aca78 <line:252:9, col:17> 'int' '!='
|   | | |-ImplicitCastExpr 0x1bfa40aca60 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bfa40aca18 <col:9> 'int' lvalue ParmVar 0x1bfa40b1bb8 'argc' 'int'
|   | | `-IntegerLiteral 0x1bfa40aca38 <col:17> 'int' 3
|   | `-CompoundStmt 0x1bfa40ace10 <col:20, line:255:5>
|   |   |-CallExpr 0x1bfa40acd50 <line:253:9, col:42> 'int'
|   |   | |-ImplicitCastExpr 0x1bfa40acd38 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1bfa40acc50 <col:9> 'int (const char *, ...)' Function 0x1bfa40acad8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x1bfa40acd90 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1bfa40acd78 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1bfa40accc8 <col:16> 'char [24]' lvalue "Invalid argument count\n"
|   |   `-GotoStmt 0x1bfa40acdf8 <line:254:9, col:14> 'end' 0x1bfa40acda8
|   |-IfStmt 0x1bfa40ad458 <line:257:5, line:262:5>
|   | |-OpaqueValueExpr 0x1bfa40ad440 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bfa40ad420 <line:259:73, line:262:5>
|   |   |-CallExpr 0x1bfa40ad3b0 <line:260:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x1bfa40ad398 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1bfa40ad2e8 <col:9> 'int (const char *, ...)' Function 0x1bfa40acad8 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x1bfa40ad3f0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x1bfa40ad3d8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x1bfa40ad348 <col:16> 'char [31]' lvalue "Failed to create SSL_CTX pair\n"
|   |   `-GotoStmt 0x1bfa40ad408 <line:261:9, col:14> 'end' 0x1bfa40acda8
|   |-ForStmt 0x1bfa40ac3d8 <line:270:5, line:363:5>
|   | |-BinaryOperator 0x1bfa40ad4d0 <line:270:10, col:17> 'int' '='
|   | | |-DeclRefExpr 0x1bfa40ad470 <col:10> 'int' lvalue Var 0x1bfa40b2200 'test' 'int'
|   | | `-IntegerLiteral 0x1bfa40ad4a8 <col:17> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1bfa40ad550 <col:20, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x1bfa40ad538 <col:20> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bfa40ad4f0 <col:20> 'int' lvalue Var 0x1bfa40b2200 'test' 'int'
|   | | `-IntegerLiteral 0x1bfa40ad510 <col:27> 'int' 3
|   | |-UnaryOperator 0x1bfa40ad590 <col:30, col:34> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1bfa40ad570 <col:30> 'int' lvalue Var 0x1bfa40b2200 'test' 'int'
|   | `-CompoundStmt 0x1bfa40ac3a0 <col:38, line:363:5>
|   |   |-IfStmt 0x1bfa40ad690 <line:271:9, line:272:24>
|   |   | |-BinaryOperator 0x1bfa40ad608 <line:271:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1bfa40ad5f0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1bfa40ad5a8 <col:13> 'int' lvalue Var 0x1bfa40b2200 'test' 'int'
|   |   | | `-IntegerLiteral 0x1bfa40ad5c8 <col:21> 'int' 2
|   |   | `-BinaryOperator 0x1bfa40ad670 <line:272:13, col:24> 'int' '='
|   |   |   |-DeclRefExpr 0x1bfa40ad628 <col:13> 'int' lvalue Var 0x1bfa41004c8 'fragment' 'int'
|   |   |   `-IntegerLiteral 0x1bfa40ad648 <col:24> 'int' 1
|   |   |-IfStmt 0x1bfa40aab88 <line:277:9, line:282:9>
|   |   | |-OpaqueValueExpr 0x1bfa40aab70 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1bfa40aab50 <line:277:57, line:282:9>
|   |   |   |-CallExpr 0x1bfa40aa9b0 <line:278:13, col:52> 'int'
|   |   |   | |-ImplicitCastExpr 0x1bfa40aa998 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1bfa40ad8e8 <col:13> 'int (const char *, ...)' Function 0x1bfa40acad8 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x1bfa40aa9f0 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x1bfa40aa9d8 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x1bfa40aa948 <col:20> 'char [30]' lvalue "Failed to create filter BIOs\n"
|   |   |   `-GotoStmt 0x1bfa40aab38 <line:281:13, col:18> 'end' 0x1bfa40acda8
|   |   |-IfStmt 0x1bfa40aad58 <line:285:9, line:289:9>
|   |   | |-OpaqueValueExpr 0x1bfa40aad40 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1bfa40aad20 <line:286:60, line:289:9>
|   |   |   |-CallExpr 0x1bfa40aac90 <line:287:13, col:71> 'int'
|   |   |   | |-ImplicitCastExpr 0x1bfa40aac78 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1bfa40aaba0 <col:13> 'int (const char *, ...)' Function 0x1bfa40acad8 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x1bfa40aacd8 <col:20> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x1bfa40aacc0 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x1bfa40aabf8 <col:20> 'char [43]' lvalue "Test %d failed: Create SSL objects failed\n"
|   |   |   | `-ImplicitCastExpr 0x1bfa40aacf0 <col:67> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1bfa40aac40 <col:67> 'int' lvalue Var 0x1bfa40b2200 'test' 'int'
|   |   |   `-GotoStmt 0x1bfa40aad08 <line:288:13, col:18> 'end' 0x1bfa40acda8
|   |   |-IfStmt 0x1bfa40aaf28 <line:291:9, line:294:9>
|   |   | |-OpaqueValueExpr 0x1bfa40aaf10 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1bfa40aaef0 <line:291:59, line:294:9>
|   |   |   |-CallExpr 0x1bfa40aae60 <line:292:13, col:74> 'int'
|   |   |   | |-ImplicitCastExpr 0x1bfa40aae48 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1bfa40aad70 <col:13> 'int (const char *, ...)' Function 0x1bfa40acad8 'printf' 'int (const char *, ...)'
|   |   |   | |-ImplicitCastExpr 0x1bfa40aaea8 <col:20> 'const char *' <NoOp>
|   |   |   | | `-ImplicitCastExpr 0x1bfa40aae90 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   | |   `-StringLiteral 0x1bfa40aadc8 <col:20> 'char [46]' lvalue "Test %d failed: Create SSL connection failed\n"
|   |   |   | `-ImplicitCastExpr 0x1bfa40aaec0 <col:70> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1bfa40aae10 <col:70> 'int' lvalue Var 0x1bfa40b2200 'test' 'int'
|   |   |   `-GotoStmt 0x1bfa40aaed8 <line:293:13, col:18> 'end' 0x1bfa40acda8
|   |   `-ForStmt 0x1bfa40ac1b0 <line:300:9, line:357:9>
|   |     |-BinaryOperator 0x1bfa40aafb8 <line:300:14, col:18> 'size_t':'unsigned long long' '='
|   |     | |-DeclRefExpr 0x1bfa40aaf40 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1bfa40b2450 'j' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1bfa40aafa0 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1bfa40aaf78 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1bfa40ab050 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1bfa40ab020 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1bfa40aafd8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bfa40b2450 'j' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1bfa40ab038 <col:25> 'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1bfa40aaff8 <col:25> 'int' 2
|   |     |-UnaryOperator 0x1bfa40ab090 <col:28, col:29> 'size_t':'unsigned long long' postfix '++'
|   |     | `-DeclRefExpr 0x1bfa40ab070 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1bfa40b2450 'j' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x1bfa40ac178 <col:33, line:357:9>
|   |       |-DeclStmt 0x1bfa40ab128 <line:301:13, col:20>
|   |       | `-VarDecl 0x1bfa40ab0c0 <col:13, col:17> col:17 used len 'int'
|   |       |-ForStmt 0x1bfa40b2e70 <line:307:13, line:323:13>
|   |       | |-BinaryOperator 0x1bfa40ab310 <line:307:18, col:41> 'int' ','
|   |       | | |-BinaryOperator 0x1bfa40ab270 <col:18, col:32> 'size_t':'unsigned long long' ','
|   |       | | | |-BinaryOperator 0x1bfa40ab1b8 <col:18, col:25> 'int' '='
|   |       | | | | |-DeclRefExpr 0x1bfa40ab140 <col:18> 'int' lvalue Var 0x1bfa40b2328 'ret' 'int'
|   |       | | | | `-UnaryOperator 0x1bfa40ab1a0 <col:24, col:25> 'int' prefix '-'
|   |       | | | |   `-IntegerLiteral 0x1bfa40ab178 <col:25> 'int' 1
|   |       | | | `-BinaryOperator 0x1bfa40ab250 <col:28, col:32> 'size_t':'unsigned long long' '='
|   |       | | |   |-DeclRefExpr 0x1bfa40ab1d8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1bfa40b23d8 'i' 'size_t':'unsigned long long'
|   |       | | |   `-ImplicitCastExpr 0x1bfa40ab238 <col:32> 'size_t':'unsigned long long' <IntegralCast>
|   |       | | |     `-IntegerLiteral 0x1bfa40ab210 <col:32> 'int' 0
|   |       | | `-BinaryOperator 0x1bfa40ab2f0 <col:35, col:41> 'int' '='
|   |       | |   |-DeclRefExpr 0x1bfa40ab290 <col:35> 'int' lvalue Var 0x1bfa40ab0c0 'len' 'int'
|   |       | |   `-IntegerLiteral 0x1bfa40ab2c8 <col:41> 'int' 0
|   |       | |-<<<NULL>>>
|   |       | |-BinaryOperator 0x1bfa40ab498 <col:44, col:75> 'int' '&&'
|   |       | | |-BinaryOperator 0x1bfa40ab3e0 <col:44, col:66> 'int' '!='
|   |       | | | |-ImplicitCastExpr 0x1bfa40ab3c8 <col:44> 'unsigned long long' <IntegralCast>
|   |       | | | | `-ImplicitCastExpr 0x1bfa40ab3b0 <col:44> 'int' <LValueToRValue>
|   |       | | | |   `-DeclRefExpr 0x1bfa40ab330 <col:44> 'int' lvalue Var 0x1bfa40ab0c0 'len' 'int'
|   |       | | | `-UnaryExprOrTypeTraitExpr 0x1bfa40ab390 <col:51, col:66> 'unsigned long long' sizeof
|   |       | | |   `-ParenExpr 0x1bfa40ab370 <col:57, col:66> 'const char [10]' lvalue
|   |       | | |     `-DeclRefExpr 0x1bfa40ab350 <col:58> 'const char [10]' lvalue Var 0x1bfa40b2568 'testdata' 'const char [10]' non_odr_use_unevaluated
|   |       | | `-BinaryOperator 0x1bfa40ab478 <col:71, col:75> 'int' '<'
|   |       | |   |-ImplicitCastExpr 0x1bfa40ab448 <col:71> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x1bfa40ab400 <col:71> 'size_t':'unsigned long long' lvalue Var 0x1bfa40b23d8 'i' 'size_t':'unsigned long long'
|   |       | |   `-ImplicitCastExpr 0x1bfa40ab460 <col:75> 'unsigned long long' <IntegralCast>
|   |       | |     `-IntegerLiteral 0x1bfa40ab420 <col:75> 'int' 2
|   |       | |-UnaryOperator 0x1bfa40ab4d8 <line:308:17, col:18> 'size_t':'unsigned long long' postfix '++'
|   |       | | `-DeclRefExpr 0x1bfa40ab4b8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bfa40b23d8 'i' 'size_t':'unsigned long long'
|   |       | `-CompoundStmt 0x1bfa40b2e58 <col:22, line:323:13>
|   |       |   `-IfStmt 0x1bfa40b2e30 <line:311:17, line:322:17> has_else
|   |       |     |-BinaryOperator 0x1bfa40ab7f8 <line:311:21, col:27> 'int' '>'
|   |       |     | |-ImplicitCastExpr 0x1bfa40ab7e0 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x1bfa40ab798 <col:21> 'int' lvalue Var 0x1bfa40b2328 'ret' 'int'
|   |       |     | `-IntegerLiteral 0x1bfa40ab7b8 <col:27> 'int' 0
|   |       |     |-CompoundStmt 0x1bfa40ab8a0 <col:30, line:313:17>
|   |       |     | `-CompoundAssignOperator 0x1bfa40ab870 <line:312:21, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |     |   |-DeclRefExpr 0x1bfa40ab818 <col:21> 'int' lvalue Var 0x1bfa40ab0c0 'len' 'int'
|   |       |     |   `-ImplicitCastExpr 0x1bfa40ab858 <col:28> 'int' <LValueToRValue>
|   |       |     |     `-DeclRefExpr 0x1bfa40ab838 <col:28> 'int' lvalue Var 0x1bfa40b2328 'ret' 'int'
|   |       |     `-CompoundStmt 0x1bfa40b2e10 <line:313:24, line:322:17>
|   |       |       |-DeclStmt 0x1bfa40b2b28 <line:314:21, col:66>
|   |       |       | `-VarDecl 0x1bfa40b2990 <col:21, col:25> col:25 used ssl_error 'int'
|   |       |       `-IfStmt 0x1bfa40b2df8 <line:316:21, line:321:21>
|   |       |         |-OpaqueValueExpr 0x1bfa40b2de0 <<invalid sloc>> '_Bool'
|   |       |         `-CompoundStmt 0x1bfa40b2db8 <line:317:53, line:321:21>
|   |       |           |-CallExpr 0x1bfa40b2c90 <line:318:25, col:82> 'int'
|   |       |           | |-ImplicitCastExpr 0x1bfa40b2c78 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       |           | | `-DeclRefExpr 0x1bfa40b2b98 <col:25> 'int (const char *, ...)' Function 0x1bfa40acad8 'printf' 'int (const char *, ...)'
|   |       |           | |-ImplicitCastExpr 0x1bfa40b2cd8 <col:32> 'const char *' <NoOp>
|   |       |           | | `-ImplicitCastExpr 0x1bfa40b2cc0 <col:32> 'char *' <ArrayToPointerDecay>
|   |       |           | |   `-StringLiteral 0x1bfa40b2bf8 <col:32> 'char [42]' lvalue "Test %d failed: Failed to write app data\n"
|   |       |           | `-ImplicitCastExpr 0x1bfa40b2cf0 <col:78> 'int' <LValueToRValue>
|   |       |           |   `-DeclRefExpr 0x1bfa40b2c40 <col:78> 'int' lvalue Var 0x1bfa40b2200 'test' 'int'
|   |       |           |-BinaryOperator 0x1bfa40b2d80 <line:319:25, col:32> 'int' '='
|   |       |           | |-DeclRefExpr 0x1bfa40b2d08 <col:25> 'int' lvalue Var 0x1bfa40b2280 'err' 'int'
|   |       |           | `-UnaryOperator 0x1bfa40b2d68 <col:31, col:32> 'int' prefix '-'
|   |       |           |   `-IntegerLiteral 0x1bfa40b2d40 <col:32> 'int' 1
|   |       |           `-GotoStmt 0x1bfa40b2da0 <line:320:25, col:30> 'end' 0x1bfa40acda8
|   |       |-IfStmt 0x1bfa40b3168 <line:324:13, line:328:13>
|   |       | |-BinaryOperator 0x1bfa40b2f58 <line:324:17, col:39> 'int' '!='
|   |       | | |-ImplicitCastExpr 0x1bfa40b2f40 <col:17> 'unsigned long long' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x1bfa40b2f28 <col:17> 'int' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x1bfa40b2ea8 <col:17> 'int' lvalue Var 0x1bfa40ab0c0 'len' 'int'
|   |       | | `-UnaryExprOrTypeTraitExpr 0x1bfa40b2f08 <col:24, col:39> 'unsigned long long' sizeof
|   |       | |   `-ParenExpr 0x1bfa40b2ee8 <col:30, col:39> 'const char [10]' lvalue
|   |       | |     `-DeclRefExpr 0x1bfa40b2ec8 <col:31> 'const char [10]' lvalue Var 0x1bfa40b2568 'testdata' 'const char [10]' non_odr_use_unevaluated
|   |       | `-CompoundStmt 0x1bfa40b3140 <col:42, line:328:13>
|   |       |   |-BinaryOperator 0x1bfa40b2fd8 <line:325:17, col:24> 'int' '='
|   |       |   | |-DeclRefExpr 0x1bfa40b2f78 <col:17> 'int' lvalue Var 0x1bfa40b2280 'err' 'int'
|   |       |   | `-UnaryOperator 0x1bfa40b2fc0 <col:23, col:24> 'int' prefix '-'
|   |       |   |   `-IntegerLiteral 0x1bfa40b2f98 <col:24> 'int' 1
|   |       |   |-CallExpr 0x1bfa40b30b0 <line:326:17, col:78> 'int'
|   |       |   | |-ImplicitCastExpr 0x1bfa40b3098 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x1bfa40b2ff8 <col:17> 'int (const char *, ...)' Function 0x1bfa40acad8 'printf' 'int (const char *, ...)'
|   |       |   | |-ImplicitCastExpr 0x1bfa40b30f8 <col:24> 'const char *' <NoOp>
|   |       |   | | `-ImplicitCastExpr 0x1bfa40b30e0 <col:24> 'char *' <ArrayToPointerDecay>
|   |       |   | |   `-StringLiteral 0x1bfa40b3018 <col:24> 'char [46]' lvalue "Test %d failed: Failed to write all app data\n"
|   |       |   | `-ImplicitCastExpr 0x1bfa40b3110 <col:74> 'int' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1bfa40b3060 <col:74> 'int' lvalue Var 0x1bfa40b2200 'test' 'int'
|   |       |   `-GotoStmt 0x1bfa40b3128 <line:327:17, col:22> 'end' 0x1bfa40acda8
|   |       |-ForStmt 0x1bfa40abc30 <line:334:13, line:350:13>
|   |       | |-BinaryOperator 0x1bfa40b3308 <line:334:18, col:41> 'int' ','
|   |       | | |-BinaryOperator 0x1bfa40b3280 <col:18, col:32> 'size_t':'unsigned long long' ','
|   |       | | | |-BinaryOperator 0x1bfa40b31e0 <col:18, col:25> 'int' '='
|   |       | | | | |-DeclRefExpr 0x1bfa40b3180 <col:18> 'int' lvalue Var 0x1bfa40b2328 'ret' 'int'
|   |       | | | | `-UnaryOperator 0x1bfa40b31c8 <col:24, col:25> 'int' prefix '-'
|   |       | | | |   `-IntegerLiteral 0x1bfa40b31a0 <col:25> 'int' 1
|   |       | | | `-BinaryOperator 0x1bfa40b3260 <col:28, col:32> 'size_t':'unsigned long long' '='
|   |       | | |   |-DeclRefExpr 0x1bfa40b3200 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1bfa40b23d8 'i' 'size_t':'unsigned long long'
|   |       | | |   `-ImplicitCastExpr 0x1bfa40b3248 <col:32> 'size_t':'unsigned long long' <IntegralCast>
|   |       | | |     `-IntegerLiteral 0x1bfa40b3220 <col:32> 'int' 0
|   |       | | `-BinaryOperator 0x1bfa40b32e8 <col:35, col:41> 'int' '='
|   |       | |   |-DeclRefExpr 0x1bfa40b32a0 <col:35> 'int' lvalue Var 0x1bfa40ab0c0 'len' 'int'
|   |       | |   `-IntegerLiteral 0x1bfa40b32c0 <col:41> 'int' 0
|   |       | |-<<<NULL>>>
|   |       | |-BinaryOperator 0x1bfa40b3490 <col:44, line:237:25> 'int' '&&'
|   |       | | |-BinaryOperator 0x1bfa40b33d8 <line:334:44, col:66> 'int' '!='
|   |       | | | |-ImplicitCastExpr 0x1bfa40b33c0 <col:44> 'unsigned long long' <IntegralCast>
|   |       | | | | `-ImplicitCastExpr 0x1bfa40b33a8 <col:44> 'int' <LValueToRValue>
|   |       | | | |   `-DeclRefExpr 0x1bfa40b3328 <col:44> 'int' lvalue Var 0x1bfa40ab0c0 'len' 'int'
|   |       | | | `-UnaryExprOrTypeTraitExpr 0x1bfa40b3388 <col:51, col:66> 'unsigned long long' sizeof
|   |       | | |   `-ParenExpr 0x1bfa40b3368 <col:57, col:66> 'const char [10]' lvalue
|   |       | | |     `-DeclRefExpr 0x1bfa40b3348 <col:58> 'const char [10]' lvalue Var 0x1bfa40b2568 'testdata' 'const char [10]' non_odr_use_unevaluated
|   |       | | `-BinaryOperator 0x1bfa40b3470 <line:335:17, line:237:25> 'int' '<'
|   |       | |   |-ImplicitCastExpr 0x1bfa40b3440 <line:335:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x1bfa40b33f8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bfa40b23d8 'i' 'size_t':'unsigned long long'
|   |       | |   `-ImplicitCastExpr 0x1bfa40b3458 <line:237:25> 'unsigned long long' <IntegralCast>
|   |       | |     `-IntegerLiteral 0x1bfa40b3418 <col:25> 'int' 100
|   |       | |-UnaryOperator 0x1bfa40b34d0 <line:335:35, col:36> 'size_t':'unsigned long long' postfix '++'
|   |       | | `-DeclRefExpr 0x1bfa40b34b0 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1bfa40b23d8 'i' 'size_t':'unsigned long long'
|   |       | `-CompoundStmt 0x1bfa40abc18 <line:336:13, line:350:13>
|   |       |   `-IfStmt 0x1bfa40abbf0 <line:338:17, line:349:17> has_else
|   |       |     |-BinaryOperator 0x1bfa40b37f0 <line:338:21, col:27> 'int' '>'
|   |       |     | |-ImplicitCastExpr 0x1bfa40b37d8 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x1bfa40b3790 <col:21> 'int' lvalue Var 0x1bfa40b2328 'ret' 'int'
|   |       |     | `-IntegerLiteral 0x1bfa40b37b0 <col:27> 'int' 0
|   |       |     |-CompoundStmt 0x1bfa40b3898 <col:30, line:340:17>
|   |       |     | `-CompoundAssignOperator 0x1bfa40b3868 <line:339:21, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |     |   |-DeclRefExpr 0x1bfa40b3810 <col:21> 'int' lvalue Var 0x1bfa40ab0c0 'len' 'int'
|   |       |     |   `-ImplicitCastExpr 0x1bfa40b3850 <col:28> 'int' <LValueToRValue>
|   |       |     |     `-DeclRefExpr 0x1bfa40b3830 <col:28> 'int' lvalue Var 0x1bfa40b2328 'ret' 'int'
|   |       |     `-CompoundStmt 0x1bfa40abbd0 <line:340:24, line:349:17>
|   |       |       |-DeclStmt 0x1bfa40b3970 <line:341:21, col:66>
|   |       |       | `-VarDecl 0x1bfa40b38c8 <col:21, col:25> col:25 used ssl_error 'int'
|   |       |       `-IfStmt 0x1bfa40abbb8 <line:343:21, line:348:21>
|   |       |         |-OpaqueValueExpr 0x1bfa40abba0 <<invalid sloc>> '_Bool'
|   |       |         `-CompoundStmt 0x1bfa40abb78 <line:344:53, line:348:21>
|   |       |           |-CallExpr 0x1bfa40aba68 <line:345:25, col:81> 'int'
|   |       |           | |-ImplicitCastExpr 0x1bfa40aba50 <col:25> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       |           | | `-DeclRefExpr 0x1bfa40ab978 <col:25> 'int (const char *, ...)' Function 0x1bfa40acad8 'printf' 'int (const char *, ...)'
|   |       |           | |-ImplicitCastExpr 0x1bfa40abab0 <col:32> 'const char *' <NoOp>
|   |       |           | | `-ImplicitCastExpr 0x1bfa40aba98 <col:32> 'char *' <ArrayToPointerDecay>
|   |       |           | |   `-StringLiteral 0x1bfa40ab9d8 <col:32> 'char [41]' lvalue "Test %d failed: Failed to read app data\n"
|   |       |           | `-ImplicitCastExpr 0x1bfa40abac8 <col:77> 'int' <LValueToRValue>
|   |       |           |   `-DeclRefExpr 0x1bfa40aba18 <col:77> 'int' lvalue Var 0x1bfa40b2200 'test' 'int'
|   |       |           |-BinaryOperator 0x1bfa40abb40 <line:346:25, col:32> 'int' '='
|   |       |           | |-DeclRefExpr 0x1bfa40abae0 <col:25> 'int' lvalue Var 0x1bfa40b2280 'err' 'int'
|   |       |           | `-UnaryOperator 0x1bfa40abb28 <col:31, col:32> 'int' prefix '-'
|   |       |           |   `-IntegerLiteral 0x1bfa40abb00 <col:32> 'int' 1
|   |       |           `-GotoStmt 0x1bfa40abb60 <line:347:25, col:30> 'end' 0x1bfa40acda8
|   |       `-IfStmt 0x1bfa40ac160 <line:351:13, line:356:13>
|   |         |-BinaryOperator 0x1bfa40abf50 <line:351:17, line:352:67> 'int' '||'
|   |         | |-BinaryOperator 0x1bfa40abd18 <line:351:17, col:39> 'int' '!='
|   |         | | |-ImplicitCastExpr 0x1bfa40abd00 <col:17> 'unsigned long long' <IntegralCast>
|   |         | | | `-ImplicitCastExpr 0x1bfa40abce8 <col:17> 'int' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x1bfa40abc68 <col:17> 'int' lvalue Var 0x1bfa40ab0c0 'len' 'int'
|   |         | | `-UnaryExprOrTypeTraitExpr 0x1bfa40abcc8 <col:24, col:39> 'unsigned long long' sizeof
|   |         | |   `-ParenExpr 0x1bfa40abca8 <col:30, col:39> 'const char [10]' lvalue
|   |         | |     `-DeclRefExpr 0x1bfa40abc88 <col:31> 'const char [10]' lvalue Var 0x1bfa40b2568 'testdata' 'const char [10]' non_odr_use_unevaluated
|   |         | `-BinaryOperator 0x1bfa40abf30 <line:352:24, col:67> 'int' '!='
|   |         |   |-CallExpr 0x1bfa40abe70 <col:24, col:62> 'int'
|   |         |   | |-ImplicitCastExpr 0x1bfa40abe58 <col:24> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |         |   | | `-DeclRefExpr 0x1bfa40abd38 <col:24> 'int (const void *, const void *, unsigned long long)' Function 0x1bfa4074d28 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   |         |   | |-ImplicitCastExpr 0x1bfa40abec0 <col:31> 'const void *' <BitCast>
|   |         |   | | `-ImplicitCastExpr 0x1bfa40abea8 <col:31> 'char *' <ArrayToPointerDecay>
|   |         |   | |   `-DeclRefExpr 0x1bfa40abd58 <col:31> 'char [10]' lvalue Var 0x1bfa40b2718 'buf' 'char [10]'
|   |         |   | |-ImplicitCastExpr 0x1bfa40abef0 <col:36> 'const void *' <BitCast>
|   |         |   | | `-ImplicitCastExpr 0x1bfa40abed8 <col:36> 'const char *' <ArrayToPointerDecay>
|   |         |   | |   `-DeclRefExpr 0x1bfa40abd78 <col:36> 'const char [10]' lvalue Var 0x1bfa40b2568 'testdata' 'const char [10]'
|   |         |   | `-UnaryExprOrTypeTraitExpr 0x1bfa40abdd8 <col:46, col:61> 'unsigned long long' sizeof
|   |         |   |   `-ParenExpr 0x1bfa40abdb8 <col:52, col:61> 'const char [10]' lvalue
|   |         |   |     `-DeclRefExpr 0x1bfa40abd98 <col:53> 'const char [10]' lvalue Var 0x1bfa40b2568 'testdata' 'const char [10]' non_odr_use_unevaluated
|   |         |   `-IntegerLiteral 0x1bfa40abf08 <col:67> 'int' 0
|   |         `-CompoundStmt 0x1bfa40ac138 <col:70, line:356:13>
|   |           |-BinaryOperator 0x1bfa40abfd0 <line:353:17, col:24> 'int' '='
|   |           | |-DeclRefExpr 0x1bfa40abf70 <col:17> 'int' lvalue Var 0x1bfa40b2280 'err' 'int'
|   |           | `-UnaryOperator 0x1bfa40abfb8 <col:23, col:24> 'int' prefix '-'
|   |           |   `-IntegerLiteral 0x1bfa40abf90 <col:24> 'int' 1
|   |           |-CallExpr 0x1bfa40ac0a8 <line:354:17, col:78> 'int'
|   |           | |-ImplicitCastExpr 0x1bfa40ac090 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x1bfa40abff0 <col:17> 'int (const char *, ...)' Function 0x1bfa40acad8 'printf' 'int (const char *, ...)'
|   |           | |-ImplicitCastExpr 0x1bfa40ac0f0 <col:24> 'const char *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x1bfa40ac0d8 <col:24> 'char *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x1bfa40ac010 <col:24> 'char [46]' lvalue "Test %d failed: Unexpected app data received\n"
|   |           | `-ImplicitCastExpr 0x1bfa40ac108 <col:74> 'int' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x1bfa40ac058 <col:74> 'int' lvalue Var 0x1bfa40b2200 'test' 'int'
|   |           `-GotoStmt 0x1bfa40ac120 <line:355:17, col:22> 'end' 0x1bfa40acda8
|   |-CallExpr 0x1bfa40ac4c0 <line:365:5, col:28> 'int'
|   | |-ImplicitCastExpr 0x1bfa40ac4a8 <col:5> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1bfa40ac410 <col:5> 'int (const char *, ...)' Function 0x1bfa40acad8 'printf' 'int (const char *, ...)'
|   | `-ImplicitCastExpr 0x1bfa40ac500 <col:12> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1bfa40ac4e8 <col:12> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1bfa40ac468 <col:12> 'char [14]' lvalue "Test success\n"
|   |-BinaryOperator 0x1bfa40ac560 <line:367:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1bfa40ac518 <col:5> 'int' lvalue Var 0x1bfa40b2280 'err' 'int'
|   | `-IntegerLiteral 0x1bfa40ac538 <col:11> 'int' 0
|   |-LabelStmt 0x1bfa40ac6d0 <line:368:2, col:5> 'end'
|   | `-NullStmt 0x1bfa40ac6c8 <col:5>
|   `-ReturnStmt 0x1bfa40baa90 <line:381:5, col:12>
|     `-ImplicitCastExpr 0x1bfa40baa78 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1bfa40baa58 <col:12> 'int' lvalue Var 0x1bfa40b2280 'err' 'int'
`-FunctionDecl 0x1bfa40acad8 <line:253:9> col:9 implicit used printf 'int (const char *, ...)' extern
  |-ParmVarDecl 0x1bfa40acb78 <<invalid sloc>> <invalid sloc> 'const char *'
  `-FormatAttr 0x1bfa40acbe8 <col:9> Implicit printf 1 2
