TranslationUnitDecl 0x2202a31c578 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2202a31ce10 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2202a31cb10 '__int128'
|-TypedefDecl 0x2202a31ce80 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2202a31cb30 'unsigned __int128'
|-TypedefDecl 0x2202a31d1b8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2202a31cf70 'struct __NSConstantString_tag'
|   `-Record 0x2202a31ced8 '__NSConstantString_tag'
|-TypedefDecl 0x2202a31d228 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2202a31c750 'unsigned long long'
|-TypedefDecl 0x2202a31d2c0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2202a31d280 'char *'
|   `-BuiltinType 0x2202a31c610 'char'
|-TypedefDecl 0x2202a31d330 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2202a31d280 'char *'
|   `-BuiltinType 0x2202a31c610 'char'
|-TypedefDecl 0x2202a31d3f0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2202a31c750 'unsigned long long'
|-TypedefDecl 0x2202a31d460 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2202a31d280 'char *'
|   `-BuiltinType 0x2202a31c610 'char'
|-FunctionDecl 0x2202bd14810 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2202bd148b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2202bd14920 <col:21> Implicit
|-FunctionDecl 0x2202bd14978 prev 0x2202bd14810 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2202bd146a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2202bd14a68 <col:21> Inherited Implicit
|-TypedefDecl 0x2202bd14aa8 prev 0x2202a31d228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2202a31c750 'unsigned long long'
|-TypedefDecl 0x2202bd14b50 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2202bd14b20 'size_t' sugar
|   |-Typedef 0x2202bd14aa8 'size_t'
|   `-BuiltinType 0x2202a31c750 'unsigned long long'
|-TypedefDecl 0x2202bd14bc0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2202a31c6b0 'long long'
|-TypedefDecl 0x2202bd14c30 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2202a31c6b0 'long long'
|-TypedefDecl 0x2202bd14ca0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2202a31c6f0 'unsigned short'
|-TypedefDecl 0x2202bd14d10 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2202a31c6f0 'unsigned short'
|-TypedefDecl 0x2202bd14d80 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2202a31c6f0 'unsigned short'
|-TypedefDecl 0x2202bd14df0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2202a31c670 'int'
|-TypedefDecl 0x2202bd14e60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2202a31c690 'long'
|-TypedefDecl 0x2202bd14ed0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2202a31c6b0 'long long'
|-TypedefDecl 0x2202bd14f60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2202bd14f30 '__time64_t' sugar
|   |-Typedef 0x2202bd14ed0 '__time64_t'
|   `-BuiltinType 0x2202a31c6b0 'long long'
|-FunctionDecl 0x2202bd150d8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2202bd152f8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2202bd3b260 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2202bd15438 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2202bd154b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2202bd15528 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2202bd155a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2202bd3b000 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2202bd3b340 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2202bd3b400 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2202bd3b570 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2202bd3b520 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2202bd3b4c0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2202bd3b3e0 'struct threadlocaleinfostruct'
|       `-Record 0x2202bd480d0 'threadlocaleinfostruct'
|-TypedefDecl 0x2202bd3b680 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2202bd3b630 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2202bd3b5d0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2202bd3b4a0 'struct threadmbcinfostruct'
|       `-Record 0x2202bd3b400 'threadmbcinfostruct'
|-RecordDecl 0x2202bd3b6d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2202bd3b790 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2202bd3b850 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2202bd3b8e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2202bd3b970 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2202bd3ba28 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2202bd3b9d0 'struct localeinfo_struct' sugar
|   `-RecordType 0x2202bd3b830 'struct localeinfo_struct'
|     `-Record 0x2202bd3b790 'localeinfo_struct'
|-TypedefDecl 0x2202bd3bb00 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2202bd3bab0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2202bd3b9d0 'struct localeinfo_struct' sugar
|     `-RecordType 0x2202bd3b830 'struct localeinfo_struct'
|       `-Record 0x2202bd3b790 'localeinfo_struct'
|-RecordDecl 0x2202bd3bb78 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2202bd3bc30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2202bd3bca8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2202bd3bd68 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2202bd3be00 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2202bd3be70 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2202bd3bf28 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2202bd3bed0 'struct localerefcount' sugar
|   `-RecordType 0x2202bd3bc10 'struct localerefcount'
|     `-Record 0x2202bd3bb78 'localerefcount'
|-RecordDecl 0x2202bd480d0 prev 0x2202bd3b340 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2202bd48150 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2202bd481c8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2202bd48238 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2202bd482a8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2202bd48318 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2202bd484d8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2202bd48548 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2202bd485b8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2202bd48628 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2202bd48698 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2202bd48708 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2202bd48760 parent 0x2202a31c578 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2202bd488f0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2202bd48960 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2202bd489d0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2202bd48a40 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2202bd48ae0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2202bd48b50 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2202bd48c60 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2202bd48d98 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2202bd48e48 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2202bd48df0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2202bd3b3e0 'struct threadlocaleinfostruct'
|     `-Record 0x2202bd480d0 'threadlocaleinfostruct'
|-RecordDecl 0x2202bd48ee0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2202bd48fa0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2202bd49018 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x2202bd4e130 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x2202bd4e1a0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x2202bd4e210 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x2202bd4e280 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x2202bd4e2f0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x2202bd4e360 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x2202bd4e3d0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x2202bd4e480 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x2202bd4e430 'struct _iobuf' sugar
|   `-RecordType 0x2202bd48f80 'struct _iobuf'
|     `-Record 0x2202bd48ee0 '_iobuf'
|-FunctionDecl 0x2202bd4e6b8 <line:137:9, col:39> col:24 used __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x2202bd4e788 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2202a31c6b0 'long long'
|-FunctionDecl 0x2202bd4e968 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bd4e7f0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x2202bd4ec60 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2202bd4ea40 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x2202bd4eab8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2202bd4f010 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x2202bd4ed40 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x2202bd4edc0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x2202bd4ee40 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2202bd49250 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2202bd490e0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2202bd49480 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2202bd49340 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2202bd49630 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bd49550 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2202bd49820 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2202bd49b18 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2202bd498f0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2202bd49970 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2202bd49cd0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bd49bf0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2202bd49e80 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bd49da0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2202bd4a030 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bd49f50 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2202bd562b8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bd561d8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2202bd56448 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2202bd567b0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2202bd56510 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2202bd56608 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2202bd56b68 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2202bd56890 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2202bd56910 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2202bd56988 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2202bd56d28 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bd56c48 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2202bd56ff0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2202bd56e00 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2202bd56e80 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2202bd52170 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2202bd52568 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2202bd52608 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2202bd52670 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2202bd526e8 prev 0x2202bd52568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2202bd52340 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2202bd523c0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2202bd52798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bd52c10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2202bd52940 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2202bd529c0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2202bd52a40 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2202bd52f30 <line:215:40> col:40 implicit used fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2202bd52fd0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2202bd53038 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2202bd530b0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2202bd51160 prev 0x2202bd52f30 <col:28, col:125> col:40 used fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2202bd52cf0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2202bd52d70 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2202bd51258 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2202bd51420 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2202bd512a0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2202bd51320 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2202bd51678 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2202bd51500 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2202bd51578 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2202bd518a8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2202bd51758 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2202bd51ba0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2202bd51980 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2202bd519f8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2202bd52038 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2202bd520d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2202bd53180 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2202bd531e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2202bd53250 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2202bd532d8 prev 0x2202bd52038 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2202bd51c80 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2202bd51cf8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bd51d70 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bd51de8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2202bd537e0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2202bd533c8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2202bd53440 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bd534b8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bd53530 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bd535a8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2202bd53ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2202bd539d0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2202bd53a50 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2202bd53ac8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2202bd53d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bd55248 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2202bd53ea0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2202bd53f20 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2202bd53fa0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2202bd54018 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2202bd555f0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2202bd55690 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2202bd556f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2202bd55770 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2202bd557d8 prev 0x2202bd555f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2202bd55428 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2202bd554a8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2202bd559b8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2202bd55888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bd55df8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bd55af8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2202bd55b78 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2202bd55c10 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bd55eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bd571c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2202bd55ff0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2202bd56070 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2202bd574b0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bd57298 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2202bd57318 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2202bd57390 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bd57810 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2202bd57590 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2202bd57668 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2202bd57bc8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2202bd578e8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2202bd57968 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2202bd579e8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2202bd57e28 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2202bd57ca8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x2202bda6038 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2202bd57ef8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2202bd57f78 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2202bd57ff8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x2202bda6298 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2202bda6118 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2202bda6758 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2202bda67f8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2202bda6860 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2202bda68c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2202bda6930 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2202bda69b8 prev 0x2202bda6758 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2202bda63a0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x2202bda6418 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bda6490 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bda6508 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2202bda6b80 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bda6aa0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2202bda6d10 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2202bda6e98 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2202bda71c0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2202bda6f68 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2202bda7010 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2202bda74e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2202bda73a0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x2202bda7590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bda77b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bda76d0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x2202bda79d0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2202bda7888 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2202bda7b80 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bda7aa0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x2202bda7dd0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2202bda7c58 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x2202bda7cd8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2202bda3fd0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2202bda4070 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2202bda40e0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2202bda4148 prev 0x2202bda3fd0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x2202bda7eb0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2202bda4238 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2202bda4368 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2202bda4288 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2202bda45b8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2202bda4440 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2202bda44b8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2202bda4778 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2202bda4698 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2202bda4998 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2202bda4850 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2202bda4be8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2202bda4a70 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2202bda4ae8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2202bda4da8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2202bda4cc8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2202bda0060 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2202bda4e80 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2202bda4f00 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2202bda0220 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2202bda0140 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2202bda04b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2202bda03d0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2202bda0558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2202bda0750 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2202bda0678 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2202bda08e0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2202bda0b88 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2202bda0c28 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2202bda0c98 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2202bda0d00 prev 0x2202bda0b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2202bda0a70 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2202bda0ed8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2202bda0da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bda32d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bda3098 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2202bda3110 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bda3380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bda35a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2202bda34c8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2202bda37f8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bda3680 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2202bda36f8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bda3bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2202bda3990 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2202bda3a10 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2202bda3c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bda3e90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2202bda3db0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x2202bda8158 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2202bda8010 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x2202bda8340 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x2202bda8790 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x2202bda8408 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2202bda8488 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x2202bda8508 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x2202bda8580 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2202bda8c10 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x2202bda8880 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bda88f8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bda8970 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bda89f0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x2202bdab040 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2202bda8d00 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bda8d78 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bda8df8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x2202bdab208 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2202bdab128 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x2202bdab5e0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2202bdab680 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2202bdab6e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2202bdab760 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2202bdab7c8 prev 0x2202bdab5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2202bdab3a0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x2202bdab420 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x2202bdab9a8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2202bdab878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdabd98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdabab8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x2202bdabb38 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x2202bdabbb0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bdabe50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdac150 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x2202bdabf98 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2202bdac050 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2202bdac448 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdac230 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2202bdac2b0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2202bdac328 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdac8d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2202bdac5f0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2202bdac668 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdac6e8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2202bdac990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdacf60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdacbd0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2202bdacc48 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdaccc8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2202bdacd40 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bda4fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bda5340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2202bda5128 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x2202bda51a0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bda5220 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x2202bda56d8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bda5428 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x2202bda54a0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bda5520 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x2202bda5598 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bda5938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x2202bda59d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bda5c90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x2202bda5b20 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x2202bdad060 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x2202bda5d68 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x2202bda5de0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2202bdad2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2202bdad200 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x2202bdad388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdad648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2202bdad4d0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x2202bdad548 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x2202bdada60 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2202bdadb00 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2202bdadb68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2202bdadbd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2202bdadc50 <col:40> Implicit printf 2 0
|-FunctionDecl 0x2202bdadcb8 prev 0x2202bdada60 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2202bdad720 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2202bdad7a0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x2202bdad818 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2202bdaddb8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2202bdb0090 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2202bdb0130 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2202bdb0198 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2202bdb0200 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2202bdb0280 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2202bdb02e8 prev 0x2202bdb0090 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2202bdade00 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2202bdade80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2202bdadef8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2202bdb03e8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2202bdb0648 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2202bdb0430 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2202bdb04b0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb0528 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb0940 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2202bdb0728 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2202bdb07a8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb0820 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb0c88 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2202bdb0d28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2202bdb0d90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2202bdb0e08 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2202bdb0e70 prev 0x2202bdb0c88 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2202bdb0a28 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb0aa0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2202bdb0f68 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2202bdaf1b8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2202bdaf258 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2202bdaf2c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2202bdaf338 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2202bdaf3a0 prev 0x2202bdaf1b8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2202bdb0fb8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2202bdaf080 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2202bdaf498 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2202bdaf660 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2202bdaf4e8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2202bdaf560 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdaf8b8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2202bdaf740 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2202bdaf7b8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdafe18 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2202bdafeb8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2202bdaff20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2202bdaff88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2202bdafff0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2202bdaa030 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2202bdaa098 prev 0x2202bdafe18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2202bdafa58 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdafad0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdafb50 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2202bdafbc8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2202bdaa288 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2202bdaa158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdaa6f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2202bdaa2d8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdaa350 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdaa3c8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdaa448 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2202bdaa4c0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdaab38 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2202bdaa7f0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdaa868 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdaa8e0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdaa960 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2202bdaa9d8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdaaf08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2202bdaacf0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2202bdaad68 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdaade8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2202bdaafc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bda9490 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2202bda91e0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2202bda9258 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bda92d8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2202bda9350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2202bda9550 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bda9948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2202bda9698 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bda9710 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bda9790 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2202bda9808 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bda9d08 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2202bda9a38 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2202bda9ab8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2202bda9b30 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb5180 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2202bdb5220 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2202bdb5288 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2202bdb5300 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2202bdb5368 prev 0x2202bdb5180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2202bda9eb0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2202bda9f30 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2202bdb5548 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2202bdb5418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdb5970 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2202bdb5a10 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2202bdb5a78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2202bdb5ae0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2202bdb5b60 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2202bdb5bc8 prev 0x2202bdb5970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2202bdb5658 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2202bdb56d8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb5750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2202bdb5db0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2202bdb5c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdae070 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2202bdae110 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2202bdae178 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2202bdae1e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2202bdae260 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2202bdae2c8 prev 0x2202bdae070 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2202bdb5e00 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2202bdb5e80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb5ef8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2202bdae3c8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2202bdae590 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2202bdae418 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x2202bdae490 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdae888 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2202bdae670 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdae6e8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdae768 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x2202bdaec20 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2202bdae970 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdae9e8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdaea68 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2202bdaeae0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdaee88 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2202bdaed08 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2202bdaed88 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2202bdb7100 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2202bdaef68 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2202bdb73f0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2202bdb71d8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2202bdb7250 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdb72d0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2202bdb76e8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2202bdb74d0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2202bdb7550 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb75c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb7948 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2202bdb77d0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb7848 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb7cd8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2202bdb7a28 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2202bdb7aa0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb7b20 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb7b98 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb7ea8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2202bdb7dc8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x2202bdb10a0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2202bdb7f80 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb7ff8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb1260 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2202bdb1180 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2202bdb13f0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2202bdb1638 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb14c0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb1538 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb1890 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb1718 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb1790 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb1ae8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb1970 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb19e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb1e98 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb1bc8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb1c40 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb1cb8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb41f0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb1f80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb1ff8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb40d0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb44e8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb42d8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb4350 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb43c8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb47e0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb45c8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2202bdb4648 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb46c0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb4ad8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb48c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2202bdb4940 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb49b8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb4dd0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb4bb8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2202bdb4c38 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb4cb0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb9280 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb4eb0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2202bdb4f30 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb4fa8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb5020 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb9618 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb9368 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2202bdb93e8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb9460 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb94d8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb99b0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb9700 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2202bdb9780 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb97f8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb9870 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb9e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb9b60 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb9be0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb9c58 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bdb9f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdb8420 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdba048 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb8110 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb8190 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb8208 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb87c0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb8510 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb8588 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb8608 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb8680 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb8d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb89b0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb8a30 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb8aa8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2202bdb8b20 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2202bdb8dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdb6328 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb8f18 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb8f90 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb9010 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb9088 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb60f0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb6768 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb6420 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb6498 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb6518 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb6590 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb6608 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb69d8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb6860 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb68d8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb6c30 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb6ab8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb6b30 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb6f20 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb6d10 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb6d88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb6e00 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb31f0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb7008 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb7080 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb30d0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdb3648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb3398 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb3410 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb3490 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb3508 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bdb3708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdb3b00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb3850 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb38c8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb3948 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb39c0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb20b0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdb3bf0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb3c68 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb3ce0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb3d60 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2202bdb3dd8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdb25f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb22a8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb2320 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb23a0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb2418 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2202bdb2490 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2202bdb26b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdb2b38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb2808 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb2880 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb2900 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2202bdb2978 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb29f0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdbd1c0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdb2c30 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdb2ca8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb2d20 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdb2da0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2202bdb2e18 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdb2e90 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdbd580 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2202bdbd2b8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2202bdbd330 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2202bdbd3b0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2202bdbd7f0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2202bdbd680 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2202bdbda08 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2202bdbdce8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2202bdbdad0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2202bdbdb48 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2202bdbdf30 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2202bdbddc0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2202bdbe170 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2202bdbe000 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x2202bdbe2f8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2202bdbe530 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2202bdbe3c0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2202bdbe438 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x2202bdbe6e0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2202bdbe608 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2202bdbe988 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2202bdbe7b0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2202bdbe828 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2202bdbed30 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x2202bdbea60 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2202bdbeae0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x2202bdbeb58 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x2202bdbf030 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2202bdbee10 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2202bdbee88 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2202bdbb2f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x2202bdbf108 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2202bdbb150 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2202bdbb600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2202bdbb490 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2202bdbb6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdbb968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2202bdbb7e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2202bdbbc70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdbba38 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2202bdbbab0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdbbec0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdbbd48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2202bdbbdc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc4c90 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2202bdbbf98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc4e40 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2202bdc4d60 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc4ff0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2202bdc4f10 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc5388 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc50c0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc5138 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc51b0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc5678 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc5468 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc54e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc5558 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc5968 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc5758 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc57d0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc5848 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc3c80 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc5a48 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc5ac0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc5b38 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc3f80 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc3d60 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc3dd8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc41d0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc4058 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc40d0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc4420 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc42a8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc4320 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc4670 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc44f8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc4570 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc4a28 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdc4748 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2202bdc47c0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdc4838 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc0e60 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc4b08 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2202bdc4b80 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc4bf8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc0c50 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc1218 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc0f48 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc0fc0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc1038 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc1508 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc12f8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc1370 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc13e8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc17f8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdc15e8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdc1660 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdc16d8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc1b80 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc18d8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdc1950 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc19c8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc1a40 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc8070 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdc7ce8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdc7d60 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc7dd8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdc7e50 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc8578 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc8158 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdc81d0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc8248 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc82c0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc8338 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc8938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdc8728 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202bdc87a0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc8818 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2202bdc89f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdc6ee0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc8bf0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202bdc6cb0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc6d28 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc6da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2202bdc6fa0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdc7258 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdc70e0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2202bdc7158 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc7410 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2202bdc7330 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc76f0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc74e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc7558 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc75d0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc7948 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc77d0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc7848 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc8cd0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdc7a20 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdc7a98 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdc7b10 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc9058 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc8db0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdc8e28 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc8ea0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc8f18 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc9220 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2202bdc9140 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdc9468 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdc92f0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc9368 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc9770 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdc9540 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc95b8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdc99c0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdc9848 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc98c0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdc9c10 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdc9a98 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc9b10 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdc5f98 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdc5cc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc5d40 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdc5db8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc6288 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdc6078 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc60f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdc6168 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc6578 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdc6368 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc63e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdc6458 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc6938 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdc6658 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc66d0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc6748 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdc1c60 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdc6a18 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc6a90 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc6b08 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdc1f50 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdc1d40 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc1db8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc1e30 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdc23a0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdc2030 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc20a8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc2120 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdc2198 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc2730 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdc2488 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc2500 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc2578 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdc25f0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc2ac0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdc2818 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2202bdc2890 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc2908 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdc2980 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc9ff0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdc2ba8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdc9ce0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc9d58 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc9dd0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdca380 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdca0d8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdca150 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdca1c8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdca240 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdca710 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdca468 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdca4e0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdca558 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdca5d0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdcac18 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdca7f8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdca870 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdca8e8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdca960 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdca9d8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc2fd8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdc2c98 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdc2d10 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc2d88 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc2e00 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdc2e78 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc3408 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdc30c8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdc3140 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdc31b8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc3230 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdc32a8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdc3670 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdc34f8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc3570 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdc38c0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdc3748 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdc37c0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdc3ba8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdc3998 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdc3a10 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdc3a88 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdd20f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdd1e50 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdd1ec8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdd1f40 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd1fb8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bdd21b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdd2728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdd2300 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdd2378 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdd23f0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdd2468 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdd24e0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdd2c60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdd2920 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdd2998 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdd2a10 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd2a88 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2202bdd2b00 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2202bdcacf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdcb300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdcae38 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdcaeb0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdcaf28 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdcafa0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdcb018 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdcb090 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdcb800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdcb5c8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202bdcb640 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x2202bdcb8b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2202bdcb9c8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2202bdccf78 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdcbc80 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202bdccd20 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdccd98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2202bdcd030 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2202bdcd148 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2202bdcd6e8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdcd408 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202bdcd480 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdcd4f8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x2202bdcd7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2202bdcd8c0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2202bdd2f80 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdcdb80 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202bdcdbf8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdcdc70 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2202bdd2d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2202bdd3040 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2202bdd3160 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2202bdd3468 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x2202bdd3288 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x2202bdd3300 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdd3378 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x2202bdd4020 <line:37:1, line:44:1>
|   |-DeclStmt 0x2202bdd35b0 <line:38:5, col:21>
|   | `-VarDecl 0x2202bdd3548 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2202bdd3648 <line:39:5, col:13>
|   | `-VarDecl 0x2202bdd35e0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2202bdd39a0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2202bdd3988 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2202bdd38a0 <col:34> '<builtin fn type>' Function 0x2202bdd3738 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2202bdd38d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x2202bdd3548 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2202bdd3910 <col:29> 'const wchar_t *' lvalue ParmVar 0x2202bdd3378 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x2202bdd3c60 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x2202bdd39d0 <col:5> 'int' lvalue Var 0x2202bdd35e0 '_Ret' 'int'
|   | `-CallExpr 0x2202bdd3ba0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x2202bdd3b88 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2202bdd3a08 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2202bdcac18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2202bdd3be8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2202bdd3a28 <col:27> 'wchar_t *' lvalue ParmVar 0x2202bdd3288 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2202bdd3c00 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2202bdd3a48 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2202bdd3300 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2202bdd3c18 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2202bdd3a68 <col:44> 'const wchar_t *' lvalue ParmVar 0x2202bdd3378 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2202bdd3c30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x2202bdd3af0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2202bdd3ac8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2202bdd3a88 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x2202bdd3c48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2202bdd3b10 <col:59> 'va_list':'char *' lvalue Var 0x2202bdd3548 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2202bdd3fb0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2202bdd3f98 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2202bdd3ee8 <col:34> '<builtin fn type>' Function 0x2202bdd3d80 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2202bdd3f20 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x2202bdd3548 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2202bdd4010 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x2202bdd3ff8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2202bdd3fd8 <col:12> 'int' lvalue Var 0x2202bdd35e0 '_Ret' 'int'
|-FunctionDecl 0x2202bdd3738 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x2202bdd37d8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2202bdd3848 <col:34> Implicit
|-FunctionDecl 0x2202bdd3d80 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x2202bdd3e20 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2202bdd3e90 <col:34> Implicit
|-FunctionDecl 0x2202bdd4318 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x2202bdd4070 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x2202bdd40e8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdd4160 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd41d8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2202bdd4600 <line:50:1, line:52:1>
|   `-ReturnStmt 0x2202bdd45f0 <line:51:5, col:62>
|     `-CallExpr 0x2202bdd4530 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x2202bdd4518 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2202bdd43f0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2202bdcac18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2202bdd4578 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2202bdd4410 <col:27> 'wchar_t *' lvalue ParmVar 0x2202bdd4070 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2202bdd4590 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2202bdd4430 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2202bdd40e8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2202bdd45a8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2202bdd4450 <col:44> 'const wchar_t *' lvalue ParmVar 0x2202bdd4160 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2202bdd45c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x2202bdd44d8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x2202bdd44b0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x2202bdd4470 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x2202bdd45d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2202bdd44f8 <col:59> 'va_list':'char *' lvalue ParmVar 0x2202bdd41d8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2202bdd48a0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x2202bdd4628 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x2202bdd46a0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdd4718 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd4790 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x2202bdd4e38 <line:61:1, line:68:1>
|   |-DeclStmt 0x2202bdd49f0 <line:62:5, col:21>
|   | `-VarDecl 0x2202bdd4988 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2202bdd4a88 <line:63:5, col:13>
|   | `-VarDecl 0x2202bdd4a20 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2202bdd4b30 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2202bdd4b18 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2202bdd4aa0 <col:34> '<builtin fn type>' Function 0x2202bdd3738 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2202bdd4ac0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x2202bdd4988 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2202bdd4af8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2202bdd4790 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x2202bdd4d30 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x2202bdd4b60 <col:5> 'int' lvalue Var 0x2202bdd4a20 '_Ret' 'int'
|   | `-CallExpr 0x2202bdd4c70 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x2202bdd4c58 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2202bdd4b98 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2202bdcac18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2202bdd4cb8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2202bdd4bb8 <col:27> 'wchar_t *' lvalue ParmVar 0x2202bdd4628 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2202bdd4cd0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2202bdd4bd8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2202bdd46a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2202bdd4ce8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2202bdd4bf8 <col:44> 'const wchar_t *' lvalue ParmVar 0x2202bdd4718 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2202bdd4d00 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2202bdd4c18 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2202bdd4790 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x2202bdd4d18 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2202bdd4c38 <col:64> 'va_list':'char *' lvalue Var 0x2202bdd4988 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2202bdd4dc8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2202bdd4db0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2202bdd4d50 <col:34> '<builtin fn type>' Function 0x2202bdd3d80 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2202bdd4d90 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x2202bdd4988 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2202bdd4e28 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x2202bdd4e10 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2202bdd4df0 <col:12> 'int' lvalue Var 0x2202bdd4a20 '_Ret' 'int'
|-FunctionDecl 0x2202bdd51c8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x2202bdd4e88 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x2202bdd4f00 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdd4f78 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd4ff0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2202bdd5068 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2202bdd5450 <line:74:1, line:76:1>
|   `-ReturnStmt 0x2202bdd5440 <line:75:5, col:67>
|     `-CallExpr 0x2202bdd5380 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2202bdd5368 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2202bdd52a8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2202bdcac18 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2202bdd53c8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2202bdd52c8 <col:27> 'wchar_t *' lvalue ParmVar 0x2202bdd4e88 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2202bdd53e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2202bdd52e8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2202bdd4f00 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2202bdd53f8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2202bdd5308 <col:44> 'const wchar_t *' lvalue ParmVar 0x2202bdd4f78 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2202bdd5410 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x2202bdd5328 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2202bdd4ff0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x2202bdd5428 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2202bdd5348 <col:64> 'va_list':'char *' lvalue ParmVar 0x2202bdd5068 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2202bdd5698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2202bdd5478 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x2202bdd54f0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x2202bdd58e8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2202bdd5770 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdd57e8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdd5bd0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2202bdd59c0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd5a38 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2202bdd5ab0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2202bdcde98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdcdd20 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x2202bdcdd98 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2202bdcdf48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdce358 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdce148 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x2202bdce1c0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdce238 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bdce410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdce6c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdce550 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2202bdce5c8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdce9b0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdce7a0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2202bdce818 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdce890 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdd5e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdceb50 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2202bdcebc8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2202bdd5ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdd6398 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdd60c0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd6138 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd61b0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bdd6450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdd6708 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdd6590 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2202bdd6608 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdd69f0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdd67e0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd6858 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdd68d0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdcee18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdd6b90 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd6c08 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdd6c80 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2202bdceed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdcf450 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdcf0d0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2202bdcf148 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdcf1c0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdcf238 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bdcf510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdcf860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdcf650 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2202bdcf6c8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdcf740 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdcfbe8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdcf940 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2202bdcf9b8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdcfa30 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdcfaa8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdd6f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2202bdd6e80 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2202bdd7008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdd7380 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdd7208 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd7280 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202bdd7430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdd7650 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2202bdd7570 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2202bdd7898 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2202bdd7720 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2202bdd7798 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdd7b98 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2202bdd7978 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2202bdd79f0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2202bdcfee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2202bdd7d30 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2202bdcfd40 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2202bdcff98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdd03a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2202bdd00e0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2202bdd0158 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2202bdd01d0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x2202bdd0800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2202bdd0540 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd05b8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd0630 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x2202bdd08b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdd9e28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2202bdd0a00 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x2202bdd0a78 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2202bdd0af0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2202bdd0b68 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x2202bdda080 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2202bdd9f10 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2202bdda2c0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2202bdda150 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x2202bdda1c8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x2202bdda478 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2202bdda398 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x2202bdda768 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2202bdda548 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x2202bdda5c0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2202bdda9d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2202bdda900 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2202bddaa80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bddac98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2202bddabc0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2202bddaee8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2202bddad68 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2202bddadf0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2202bddb130 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2202bddafc0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2202bddb038 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2202bddb2e0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2202bddb208 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2202bddb488 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2202bddb3b0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2202bddb638 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bddb558 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2202bddb7e8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2202bddb708 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2202bddbb60 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2202bddb8c0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2202bddb938 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bddb9b0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bddba28 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x2202bddcfe0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2202bddbc50 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2202bddbcc8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bddbd40 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bddce10 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bddce88 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x2202bddd2f0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2202bddd0d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2202bddd150 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x2202bddd1d0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x2202bddd4b0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2202bddd3d0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2202bddd7a0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2202bddd580 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x2202bddd600 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x2202bddd680 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x2202bddd960 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2202bddd880 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x2202bdddcd8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2202bddda38 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x2202bdddab0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdddb28 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdddba0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2202bdddf98 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2202bddde20 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2202bddde98 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2202bdde2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2202bdde150 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2202bdde1d0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2202bdde380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2202bdde638 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2202bdde6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2202bddea18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2202bdde8a0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2202bdde920 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2202bddeac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x2202bdd8dd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2202bdd8e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x2202bdd9110 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2202bdd9030 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x2202bdd91b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x2202bdd9438 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2202bdd94d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x2202bdd9780 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x2202bdd96a0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x2202bdd9828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x2202bdd9b08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2202bdd9a28 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x2202bdd9bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2202bddefa8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2202bddee30 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2202bddeea8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2202bddf058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2202bddf318 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2202bddf3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x2202bddf688 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x2202bddf620 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x2202bddf5c0 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x2202bddf570 'int (void)' sugar
|     | `-FunctionProtoType 0x2202bd49770 'int (void)' cdecl
|     |   `-BuiltinType 0x2202a31c670 'int'
|     `-ParenType 0x2202bddf570 'int (void)' sugar
|       `-FunctionProtoType 0x2202bd49770 'int (void)' cdecl
|         `-BuiltinType 0x2202a31c670 'int'
|-RecordDecl 0x2202bddf6e0 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x2202bddf7a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2202bddf818 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x2202bddf888 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x2202bddf938 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x2202bddf8e0 'struct _div_t' sugar
|   `-RecordType 0x2202bddf780 'struct _div_t'
|     `-Record 0x2202bddf6e0 '_div_t'
|-RecordDecl 0x2202bddf9a8 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x2202bddfa60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2202bddfad8 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x2202bddfb48 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x2202bddfbf8 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x2202bddfba0 'struct _ldiv_t' sugar
|   `-RecordType 0x2202bddfa40 'struct _ldiv_t'
|     `-Record 0x2202bddf9a8 '_ldiv_t'
|-RecordDecl 0x2202bddfc68 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x2202bddfd20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2202bddfd98 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x2202bde9e70 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x2202bde9f28 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x2202bde9ed0 'struct _lldiv_t' sugar
|   `-RecordType 0x2202bddfd00 'struct _lldiv_t'
|     `-Record 0x2202bddfc68 '_lldiv_t'
|-RecordDecl 0x2202bde9fc0 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x2202bdea080 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x2202bdea180 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x2202bdea238 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x2202bdea1e0 'struct _LDOUBLE' sugar
|   `-RecordType 0x2202bdea060 '_LDOUBLE'
|     `-Record 0x2202bde9fc0 ''
|-RecordDecl 0x2202bdea2a8 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x2202bdea378 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x2202bdea428 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x2202bdea3d0 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x2202bdea340 '_CRT_DOUBLE'
|     `-Record 0x2202bdea2a8 ''
|-RecordDecl 0x2202bdea498 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x2202bdea568 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x2202bdea618 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x2202bdea5c0 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x2202bdea530 '_CRT_FLOAT'
|     `-Record 0x2202bdea498 ''
|-RecordDecl 0x2202bdea688 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x2202bdea758 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x2202bdea808 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x2202bdea7b0 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x2202bdea720 '_LONGDOUBLE'
|     `-Record 0x2202bdea688 ''
|-RecordDecl 0x2202bdea8a0 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x2202bdea960 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x2202bdeaa60 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x2202bdeab18 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x2202bdeaac0 'struct _LDBL12' sugar
|   `-RecordType 0x2202bdea940 '_LDBL12'
|     `-Record 0x2202bdea8a0 ''
|-VarDecl 0x2202bdeaba0 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x2202bdeacf0 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2202bdebf58 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x2202bdeadb8 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x2202bdec1a0 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x2202bdec140 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x2202bdec0e0 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x2202bdec090 'void (void)' sugar
|     | `-FunctionProtoType 0x2202bd15030 'void (void)' cdecl
|     |   `-BuiltinType 0x2202a31c5d0 'void'
|     `-ParenType 0x2202bdec090 'void (void)' sugar
|       `-FunctionProtoType 0x2202bd15030 'void (void)' cdecl
|         `-BuiltinType 0x2202a31c5d0 'void'
|-FunctionDecl 0x2202bdec3a0 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x2202bdec230 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x2202bdec5b8 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x2202bdeca08 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x2202bdec980 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x2202bdec920 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x2202bdec8d0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x2202bd3b0c0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x2202a31c5d0 'void'
|     |   |-PointerType 0x2202bd15400 'const wchar_t *'
|     |   | `-QualType 0x2202bd153b1 'const wchar_t' const
|     |   |   `-TypedefType 0x2202bd153b0 'wchar_t' sugar
|     |   |     |-Typedef 0x2202bd14ca0 'wchar_t'
|     |   |     `-BuiltinType 0x2202a31c6f0 'unsigned short'
|     |   |-PointerType 0x2202bd15400 'const wchar_t *'
|     |   | `-QualType 0x2202bd153b1 'const wchar_t' const
|     |   |   `-TypedefType 0x2202bd153b0 'wchar_t' sugar
|     |   |     |-Typedef 0x2202bd14ca0 'wchar_t'
|     |   |     `-BuiltinType 0x2202a31c6f0 'unsigned short'
|     |   |-PointerType 0x2202bd15400 'const wchar_t *'
|     |   | `-QualType 0x2202bd153b1 'const wchar_t' const
|     |   |   `-TypedefType 0x2202bd153b0 'wchar_t' sugar
|     |   |     |-Typedef 0x2202bd14ca0 'wchar_t'
|     |   |     `-BuiltinType 0x2202a31c6f0 'unsigned short'
|     |   |-BuiltinType 0x2202a31c710 'unsigned int'
|     |   `-TypedefType 0x2202bd15610 'uintptr_t' sugar
|     |     |-Typedef 0x2202a31d3f0 'uintptr_t'
|     |     `-BuiltinType 0x2202a31c750 'unsigned long long'
|     `-ParenType 0x2202bdec8d0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x2202bd3b0c0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x2202a31c5d0 'void'
|         |-PointerType 0x2202bd15400 'const wchar_t *'
|         | `-QualType 0x2202bd153b1 'const wchar_t' const
|         |   `-TypedefType 0x2202bd153b0 'wchar_t' sugar
|         |     |-Typedef 0x2202bd14ca0 'wchar_t'
|         |     `-BuiltinType 0x2202a31c6f0 'unsigned short'
|         |-PointerType 0x2202bd15400 'const wchar_t *'
|         | `-QualType 0x2202bd153b1 'const wchar_t' const
|         |   `-TypedefType 0x2202bd153b0 'wchar_t' sugar
|         |     |-Typedef 0x2202bd14ca0 'wchar_t'
|         |     `-BuiltinType 0x2202a31c6f0 'unsigned short'
|         |-PointerType 0x2202bd15400 'const wchar_t *'
|         | `-QualType 0x2202bd153b1 'const wchar_t' const
|         |   `-TypedefType 0x2202bd153b0 'wchar_t' sugar
|         |     |-Typedef 0x2202bd14ca0 'wchar_t'
|         |     `-BuiltinType 0x2202a31c6f0 'unsigned short'
|         |-BuiltinType 0x2202a31c710 'unsigned int'
|         `-TypedefType 0x2202bd15610 'uintptr_t' sugar
|           |-Typedef 0x2202a31d3f0 'uintptr_t'
|           `-BuiltinType 0x2202a31c750 'unsigned long long'
|-FunctionDecl 0x2202bdecc00 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x2202bdeca90 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x2202bdefed0 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x2202bdf00b0 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x2202bdf02c0 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x2202bdf0180 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x2202bdf0510 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x2202bdf0398 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x2202bdf0730 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x2202bdf0970 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x2202bdf0800 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x2202bdf0bc0 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x2202bdf0a48 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x2202bdedeb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x2202bdedf50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdee210 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x2202bdee2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x2202bdee3f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x2202bdee490 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x2202bdee580 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x2202bdee618 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x2202bdee6b0 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x2202bdee808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x2202bdee870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x2202bdeea70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x2202bdeead8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdeed90 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x2202bdeec20 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x2202bde8fd0 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x2202bde8e60 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x2202bde9168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x2202bde91d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bde93f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x2202bde9318 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x2202bde95a0 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x2202bde94c8 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x2202bde97f0 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x2202bde9890 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2202bde9900 prev 0x2202bde97f0 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x2202bde9678 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x2202bde9ab0 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x2202bde9b50 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2202bde9bc0 prev 0x2202bde9ab0 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x2202bde99d8 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x2202bde9d48 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x2202bdf4f20 prev 0x2202bde9d48 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2202bdf51e0 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x2202bdf4ff0 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x2202bdf5070 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x2202bdf53a0 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x2202bdf5440 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x2202bdf54b0 <col:19> Implicit
| `-ConstAttr 0x2202bdf5508 <col:19> Implicit
|-FunctionDecl 0x2202bdf5530 prev 0x2202bdf53a0 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x2202bdf52c0 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x2202bdf5620 <col:19> Inherited Implicit
| `-ConstAttr 0x2202bdf5648 <col:19> Inherited Implicit
|-FunctionDecl 0x2202bdf57d8 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x2202bdf5878 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x2202bdf58e8 <col:19> Implicit
| `-ConstAttr 0x2202bdf5940 <col:19> Implicit
|-FunctionDecl 0x2202bdf5968 prev 0x2202bdf57d8 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x2202bdf5688 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x2202bdf5a58 <col:19> Inherited Implicit
| `-ConstAttr 0x2202bdf5a80 <col:19> Inherited Implicit
|-FunctionDecl 0x2202bdf5c08 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x2202bdf5ca8 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x2202bdf5d18 <col:19> Implicit
| `-ConstAttr 0x2202bdf5d70 <col:19> Implicit
|-FunctionDecl 0x2202bdf5d98 prev 0x2202bdf5c08 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x2202bdf5ac0 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x2202bdf5e88 <col:19> Inherited Implicit
| `-ConstAttr 0x2202bdf5eb0 <col:19> Inherited Implicit
|-FunctionDecl 0x2202bdf3fd8 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x2202bdf3f10 <col:35> col:42 'long long'
|-FunctionDecl 0x2202bdf42d8 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x2202bdf4170 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x2202bdf44f8 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x2202bdf43b0 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x2202bdf47f0 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x2202bdf45d0 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x2202bdf4648 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdf49b0 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2202bdf48d0 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x2202bdf4cb0 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x2202bdf4a88 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2202bdf4b00 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdf5f30 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x2202bdf4d90 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x2202bdf6230 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x2202bdf6008 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2202bdf6080 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdf6458 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x2202bdf6310 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x2202bdf6750 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x2202bdf6530 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x2202bdf65a8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdf7050 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x2202bdf6830 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x2202bdf68b0 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x2202bdf6928 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdf69a0 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdf6d00 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x2202bdf6d80 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x2202bdf77d8 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x2202bdf7150 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x2202bdf71d0 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x2202bdf7248 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdf72c0 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdf7598 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x2202bdf7f50 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x2202bdf78d0 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x2202bdf7948 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdf79c0 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdf7c28 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x2202bdf7ca8 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x2202bdf8518 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x2202bdf8048 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x2202bdf80c0 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdf8138 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdf8318 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x2202bdf8718 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x2202bdf87b8 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x2202bdf8828 <col:47> Implicit
| `-ConstAttr 0x2202bdf8880 <col:47> Implicit
|-FunctionDecl 0x2202bdf88a8 prev 0x2202bdf8718 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x2202bdf8608 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x2202bdf8998 <col:47> Inherited Implicit
| `-ConstAttr 0x2202bdf89c0 <col:47> Inherited Implicit
|-FunctionDecl 0x2202bdf8b48 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x2202bdf8be8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x2202bdf8c58 <col:47> Implicit
| `-ConstAttr 0x2202bdf8cb0 <col:47> Implicit
|-FunctionDecl 0x2202bdf8cd8 prev 0x2202bdf8b48 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x2202bdf8a00 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x2202bdf8dc8 <col:47> Inherited Implicit
| `-ConstAttr 0x2202bdf8df0 <col:47> Inherited Implicit
|-FunctionDecl 0x2202bdf0f18 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x2202bdf0fb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x2202bdf1028 <col:49> Implicit
| `-ConstAttr 0x2202bdf1080 <col:49> Implicit
|-FunctionDecl 0x2202bdf10a8 prev 0x2202bdf0f18 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x2202bdf8e30 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x2202bdf1198 <col:49> Inherited Implicit
| `-ConstAttr 0x2202bdf11c0 <col:49> Inherited Implicit
|-FunctionDecl 0x2202bdf1448 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x2202bdf1228 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x2202bdf12a8 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x2202bdf1738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2202bdf15e8 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x2202bdf17e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdf1cf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2202bdf1978 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x2202bdf19f8 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdf1a70 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdf1af0 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x2202bdf9130 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x2202bdf1de8 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x2202bdf1e60 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x2202bdf8f60 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x2202bdf9598 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x2202bdf9218 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x2202bdf9298 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdf9310 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdf9390 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x2202bdf99e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x2202bdf9748 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x2202bdf97c8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2202bdf9848 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x2202bdf9aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdf9fb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x2202bdf9be8 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x2202bdf9c68 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdf9ce0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdf9d60 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x2202bdfa408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x2202bdfa168 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x2202bdfa1e8 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdfa268 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x2202bdfa4c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdfa988 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x2202bdfa608 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x2202bdfa688 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdfa700 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdfa780 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x2202bdfadd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x2202bdfab38 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x2202bdfabb8 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdfac38 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x2202bdfae90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdf30e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x2202bdf3000 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x2202bdf3330 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x2202bdf31b8 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x2202bdf3230 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdf36a8 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x2202bdf3410 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x2202bdf3490 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x2202bdf3510 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x2202bdf3b10 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2202bdf3790 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x2202bdf3810 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x2202bdf3890 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x2202bdf3908 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdfcfa0 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x2202bdf3c00 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x2202bdf3c80 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x2202bdf3d00 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x2202bdfd410 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2202bdfd088 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x2202bdfd108 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x2202bdfd188 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x2202bdfd200 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdfd748 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x2202bdfd528 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x2202bdfd5a8 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x2202bdfda68 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x2202bdfd848 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x2202bdfd8c8 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x2202bdfdec8 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x2202bdfdb48 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x2202bdfdbc8 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2202bdfdc40 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdfdcc0 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x2202be00348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x2202be000a8 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x2202be00128 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x2202be001a8 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x2202be00400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be00770 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x2202be00548 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x2202be005c0 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2202be00b18 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2202be00850 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x2202be008c8 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be00940 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be00d70 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x2202be00c00 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x2202be010a8 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x2202be00e48 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x2202be00ec0 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be013a8 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2202be01188 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2202be01200 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2202be01750 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2202be01488 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x2202be01500 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be01578 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be01b08 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x2202be01830 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x2202be018b0 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x2202be01928 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x2202bdfdfb0 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2202be01be8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x2202be01c68 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x2202be01ce0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be01d58 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdfe4b0 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x2202bdfe098 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x2202bdfe110 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdfe188 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdfe208 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x2202bdfe280 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2202bdfe930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x2202bdfe660 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202bdfe6e0 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x2202bdfe758 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2202bdfe9e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be02048 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2202bdfeb28 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x2202bdfeba0 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202bdfec18 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdfec98 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x2202bdfed10 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdfed88 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be02578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2202be02200 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202be02280 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x2202be022f8 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be02370 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202be02638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be02838 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2202be029e8 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2202be02908 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x2202be02c00 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x2202be02ac0 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x2202be02ec0 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x2202be02f60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2202bdfaf80 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x2202bdfaff8 prev 0x2202be02ec0 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x2202be02cd8 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2202be02d58 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x2202bdfb3a8 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x2202bdfb0d8 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x2202bdfb158 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x2202bdfb1d0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdfb728 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x2202bdfb7c8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2202bdfb830 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x2202bdfb898 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2202bdfb918 prev 0x2202bdfb728 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x2202bdfb490 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x2202bdfb510 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x2202bdfb590 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x2202bdfbd80 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2202bdfba00 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x2202bdfba80 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x2202bdfbb00 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x2202bdfbb78 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be03120 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x2202be031c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2202be03228 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x2202be03290 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2202be03310 prev 0x2202be03120 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x2202bdfbe70 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x2202bdfbef0 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x2202be03000 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x2202be036b0 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2202be033f8 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x2202be03478 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x2202be034f8 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x2202be03570 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be03a38 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x2202be03ad8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2202be03b40 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x2202be03ba8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2202be03c28 prev 0x2202be03a38 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x2202be037a0 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x2202be03820 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x2202be038a0 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x2202be040c0 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2202be03d10 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x2202be03d90 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x2202be03e10 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x2202be03e88 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be043d0 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x2202be04470 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2202be044d8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x2202be04540 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2202be045c0 prev 0x2202be043d0 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x2202be041b0 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x2202be04230 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x2202be042b0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x2202be04960 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x2202be046a8 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x2202be04728 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x2202be047a8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x2202be04820 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be04c40 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x2202be04ce0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2202be04d48 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x2202be04dc0 prev 0x2202be04c40 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x2202be04a50 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x2202be04ad0 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x2202be05198 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x2202be04ea0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x2202be04f20 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x2202be04f98 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be05470 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x2202be05510 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2202be05578 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x2202be055f0 prev 0x2202be05470 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x2202be05280 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2202be05300 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x2202be059a8 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x2202be056d0 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x2202be05750 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x2202be057c8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be05b70 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2202be05a90 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x2202be06030 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x2202be05c48 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x2202be05cc8 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x2202be05d40 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be05dc0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x2202be06478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x2202be061e0 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x2202be06260 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x2202be062e0 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x2202be06530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be06960 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x2202be06738 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x2202be067b0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2202be06a10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be06ee8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x2202be06c18 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x2202be06c90 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2202be06d08 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202be06fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202bdff438 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x2202bdff0c0 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x2202bdff140 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x2202bdff1b8 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2202bdff230 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x2202bdff940 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x2202bdff528 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x2202bdff5a8 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x2202bdff620 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdff698 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2202bdff710 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202bdffe50 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2202bdffa30 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x2202bdffab0 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x2202bdffb28 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202bdffba0 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2202bdffc18 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x2202be073e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2202be07118 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x2202be07190 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2202be07208 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2202be07498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be07a98 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2202be075d8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x2202be07658 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x2202be076d0 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be07748 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2202be077c0 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be07838 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be0f0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2202be07c58 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x2202be07cd0 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2202be07d48 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be07dc0 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2202be0f180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be0f4e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x2202be0f580 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2202be0f5e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2202be0f660 prev 0x2202be0f4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x2202be0f2c0 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be0f338 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2202be0f710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2202be0f768 <line:615:33> restrict
|-FunctionDecl 0x2202be0f900 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x2202be0f7c0 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x2202be0f9a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x2202be0fba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x2202be0fc48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2202be0fcb8 prev 0x2202be0fba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x2202be0fa28 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2202be0fd60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2202be0fdb8 <line:615:33> restrict
|-FunctionDecl 0x2202be0d0a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x2202be0d140 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x2202be0d1a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2202be0d220 prev 0x2202be0d0a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x2202be0fe10 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x2202be0fe88 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2202be0d2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2202be0d328 <line:615:33> restrict
|-FunctionDecl 0x2202be0d648 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x2202be0d380 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x2202be0d3f8 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be0d470 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2202be0d700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2202be0d758 <line:615:33> restrict
|-FunctionDecl 0x2202be0d888 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x2202be0d7b0 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x2202be0d930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x2202be0db28 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x2202be0d9b0 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be0da28 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2202be0dbd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2202be0dc30 <line:615:33> restrict
|-FunctionDecl 0x2202be0df48 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x2202be0dc80 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be0dcf8 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be0dd70 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2202be0e000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2202be0e058 <line:615:33> restrict
|-FunctionDecl 0x2202be08278 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x2202be08068 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x2202be080e0 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be08158 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2202be08330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2202be08388 <line:615:33> restrict
|-FunctionDecl 0x2202be08750 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x2202be083e0 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x2202be08458 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be084d0 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be08548 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2202be08810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2202be08868 <line:615:33> restrict
|-FunctionDecl 0x2202be08b68 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x2202be088c0 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x2202be08938 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be089b0 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be08a28 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2202be08c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2202be08c80 <line:615:33> restrict
|-FunctionDecl 0x2202be10188 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x2202be08cd8 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x2202be08d50 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be08dc8 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be08e40 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be08eb8 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x2202be10250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x2202be102a8 <line:615:33> restrict
|-FunctionDecl 0x2202be105c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x2202be10300 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x2202be10378 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be103f0 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x2202be10a18 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2202be106a8 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x2202be10720 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202be10798 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be10818 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x2202be10e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x2202be10bc8 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x2202be10c40 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202be10cc0 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x2202be10f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be0b3f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2202be0b080 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x2202be0b0f8 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202be0b170 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be0b1f0 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x2202be0b870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x2202be0b5a8 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x2202be0b620 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202be0b6a0 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x2202be0b928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be0bde8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2202be0ba70 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x2202be0bae8 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202be0bb60 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be0bbe0 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x2202be0a260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x2202be0bf98 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x2202be0c010 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2202be0a088 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x2202be0a318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be0a680 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2202be0a458 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2202be0a4d8 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x2202be0aa28 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x2202be0a758 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be0a7d8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2202be0a850 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be0ade8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2202be0ab08 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be0ab88 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2202be0ac08 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x2202be112f0 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2202be0aec8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be0af48 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2202be0afc8 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x2202be110e0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be116b8 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2202be113d8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be11458 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2202be114d8 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x2202be11b20 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2202be11798 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be11818 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2202be11898 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x2202be11910 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be11ee8 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2202be11c08 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be11c88 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2202be11d08 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x2202be12370 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2202be11fc8 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be12048 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2202be120f0 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x2202be12168 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be12738 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2202be12458 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be124d8 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2202be12558 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x2202be12ba0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2202be12818 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be12898 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2202be12918 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x2202be12990 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be12eb0 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2202be12c88 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2202be12d08 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x2202be0c208 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x2202be12f88 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be13008 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2202be13080 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be0c510 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2202be0c2e8 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2202be0c368 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x2202be0c8b8 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x2202be0c5e8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be0c668 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2202be0c6e0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be0cbd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2202be0ca58 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x2202be0cc78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be161d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x2202be0cdb8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x2202be0ce30 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202be0cea8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be0cf20 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x2202be16590 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x2202be162c8 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x2202be16340 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x2202be163b8 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x2202be16750 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2202be16670 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x2202be16998 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x2202be16820 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x2202be16c90 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2202be16a68 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2202be16ae0 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be16e48 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2202be16d68 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x2202be17180 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2202be16f18 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2202be16f90 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be173d8 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x2202be17258 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x2202be176d0 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2202be174a8 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2202be17520 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be17928 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x2202be177a8 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x2202be17c20 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2202be179f8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2202be17a70 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be18078 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2202be17d00 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x2202be17d78 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202be17df0 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be17e70 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x2202be1a530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x2202be1a260 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x2202be1a2d8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202be1a358 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x2202be1a5e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be1aaa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2202be1a730 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x2202be1a7a8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202be1a820 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2202be1a8a0 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x2202be1af20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x2202be1ac58 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x2202be1acd0 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2202be1ad50 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x2202be1afd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be15200 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x2202be15120 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x2202be15448 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2202be152d0 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2202be15348 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be15740 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2202be15520 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be155a0 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2202be15620 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x2202be15ad8 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2202be15820 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be158a0 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2202be15920 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x2202be15998 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be15de0 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x2202be15bc0 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be15c40 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x2202be15cc0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x2202be191d8 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x2202be15ec0 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x2202be15f40 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x2202be15fc0 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x2202be16038 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be19598 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x2202be192c8 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x2202be19348 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x2202be193c0 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x2202be19b58 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x2202be19680 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x2202be196f8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be19778 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x2202be197f8 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x2202be19878 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x2202be198f8 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x2202be1a050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x2202be19d18 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x2202be19d98 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x2202be19e18 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x2202be19e98 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x2202be1a110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be14600 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x2202be14210 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x2202be14288 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be14308 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x2202be14388 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x2202be14408 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x2202be14488 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x2202be14a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x2202be147c0 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x2202be14840 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x2202be148c0 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x2202be14940 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x2202be14b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be15008 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x2202be14c88 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x2202be14d00 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be14d80 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x2202be14e00 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x2202be184c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x2202be18228 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x2202be182a8 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x2202be18328 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x2202be18580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be18960 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x2202be18738 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x2202be187b8 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x2202be18ce0 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x2202be18ab8 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x2202be18b38 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x2202be19060 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x2202be18e38 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x2202be18eb8 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x2202be133d8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x2202be13100 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x2202be13180 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x2202be131f8 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be13788 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x2202be134b8 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x2202be13538 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x2202be135b0 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be13b38 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x2202be13868 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x2202be138e8 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x2202be13960 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2202be13e10 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x2202be13eb0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x2202be13f18 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2202be13f90 <col:46> Implicit
|-FunctionDecl 0x2202be13fe8 prev 0x2202be13e10 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x2202be13c20 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x2202be13ca0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x2202be1d1a0 <col:46> Inherited Implicit
|-FunctionDecl 0x2202be1d360 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x2202be1d400 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x2202be1d468 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2202be1d4e0 <col:46> Implicit
|-FunctionDecl 0x2202be1d538 prev 0x2202be1d360 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x2202be1d1e0 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x2202be1d260 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x2202be1d630 <col:46> Inherited Implicit
|-FunctionDecl 0x2202be1db48 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x2202be1d670 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x2202be1d6e8 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be1d768 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x2202be1d7e8 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x2202be1d868 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x2202be1d8e8 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x2202be1e0f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x2202be1dd08 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x2202be1dd88 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x2202be1de08 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x2202be1de88 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x2202be1df08 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x2202be1c1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be1c490 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x2202be1c320 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x2202be1c648 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2202be1c568 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x2202be1c908 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x2202be1c720 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x2202be1c7a0 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x2202be1cbd0 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x2202be1cc70 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x2202be1ccd8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2202be1cd50 <col:30> Implicit
|-FunctionDecl 0x2202be1cda8 prev 0x2202be1cbd0 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x2202be1c9e8 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x2202be1ca68 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x2202be1cea0 <col:30> Inherited Implicit
|-FunctionDecl 0x2202be1d0d0 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x2202be211e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2202be21248 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2202be212c0 <col:34> Implicit
|-FunctionDecl 0x2202be21318 prev 0x2202be1d0d0 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x2202be1cee0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x2202be1cf60 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x2202be21410 <col:34> Inherited Implicit
|-FunctionDecl 0x2202be215d0 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x2202be21670 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x2202be216d8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2202be21750 <col:30> Implicit
|-FunctionDecl 0x2202be217a8 prev 0x2202be215d0 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x2202be21450 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x2202be214d0 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x2202be218a0 <col:30> Inherited Implicit
|-FunctionDecl 0x2202be21a60 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x2202be21b00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2202be21b68 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x2202be21be0 <col:34> Implicit
|-FunctionDecl 0x2202be21c38 prev 0x2202be21a60 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x2202be218e0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x2202be21960 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x2202be21d30 <col:34> Inherited Implicit
|-FunctionDecl 0x2202be220e8 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x2202be21d70 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x2202be21df0 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x2202be21e70 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x2202be21ee8 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x2202be1f530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x2202be1f298 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x2202be1f318 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x2202be1f398 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x2202be1f5e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be1fbd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x2202be1f7f0 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x2202be1f870 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x2202be1f8f0 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x2202be1f970 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x2202be1f9f0 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x2202be1fc98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be1e4a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x2202be1fde0 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x2202be1fe60 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x2202be1fed8 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be1ff58 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x2202be1ffd0 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be20050 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x2202be200c8 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be20148 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x2202be1e1b0 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x2202be1e850 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x2202be1e5b8 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x2202be1e638 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x2202be1e6b8 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x2202be1ebf0 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2202be1e930 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x2202be1e9a8 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x2202be1ea20 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2202be201d0 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2202be1ecd0 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x2202be1ed48 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be1edc0 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x2202be1ee38 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x2202be1eeb0 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2202be1ef28 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x2202be207a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2202be20388 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x2202be20400 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x2202be20478 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x2202be204f0 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2202be20568 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x2202be20868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be20a88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2202be209a8 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x2202be20d78 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2202be20b58 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x2202be20bd0 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x2202be1b180 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x2202be20e50 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2202be20ec8 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x2202be20f40 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x2202be20fb8 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2202be1b5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x2202be1b328 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2202be1b3a0 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x2202be1b418 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x2202be1b6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be1bcc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x2202be1b8a8 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x2202be1b920 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x2202be1b998 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x2202be1ba10 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x2202be1ba88 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x2202be1bd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be23660 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x2202be1bec8 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x2202be1bf40 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x2202be1bfb8 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be1c030 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x2202be1c0a8 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be23200 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x2202be23278 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2202be232f0 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x2202be23368 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x2202be23980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x2202be23878 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x2202be23a28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x2202be23e18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x2202be23c38 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x2202be23cb8 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x2202be23ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x2202be24240 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x2202be240d0 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x2202be242e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x2202be24850 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x2202be24590 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x2202be24610 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x2202be24690 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x2202be24710 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x2202be24910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x2202be24a08 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be24f40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x2202be24c80 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x2202be24d00 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x2202be24d80 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x2202be24e00 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x2202be25000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x2202be250f8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be255b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x2202be25398 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x2202be25418 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x2202be25498 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x2202be25670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x2202be25768 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be25c00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x2202be259e0 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x2202be25a60 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x2202be25ae0 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x2202be25cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x2202be25db0 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be26278 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x2202be26028 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x2202be260a8 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x2202be26128 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x2202be26330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x2202be26428 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be266c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2202be265e0 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x2202be26768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x2202be26b48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x2202be26930 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x2202be269b0 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x2202be26a30 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x2202be26c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x2202be270a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x2202be26e88 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x2202be26f08 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x2202be26f88 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x2202be27160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x2202be27270 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2202be27458 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x2202be27380 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-VarDecl 0x2202be27530 <.//openssl//file_jk/after\test\constant_time_test.c:17:1, col:57> col:27 used CONSTTIME_TRUE 'const unsigned int' static cinit
| `-CStyleCastExpr 0x2202be27630 <col:44, col:57> 'unsigned int' <IntegralCast>
|   `-ParenExpr 0x2202be27610 <col:54, col:57> 'int'
|     `-UnaryOperator 0x2202be275c0 <col:55, col:56> 'int' prefix '~' cannot overflow
|       `-IntegerLiteral 0x2202be27598 <col:56> 'int' 0
|-VarDecl 0x2202be27688 <line:18:1, col:45> col:27 used CONSTTIME_FALSE 'const unsigned int' static cinit
| `-ImplicitCastExpr 0x2202be27730 <col:45> 'unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x2202be276f0 <col:45> 'int' 0
|-VarDecl 0x2202be27760 <line:19:1, col:47> col:28 used CONSTTIME_TRUE_8 'const unsigned char' static cinit
| `-ImplicitCastExpr 0x2202be27808 <col:47> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x2202be277c8 <col:47> 'int' 255
|-VarDecl 0x2202be27838 <line:20:1, col:48> col:28 used CONSTTIME_FALSE_8 'const unsigned char' static cinit
| `-ImplicitCastExpr 0x2202be278e0 <col:48> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x2202be278a0 <col:48> 'int' 0
|-FunctionDecl 0x2202be27ed0 <line:22:1, line:37:1> line:22:12 used test_binary_op 'int (unsigned int (*)(unsigned int, unsigned int), const char *, unsigned int, unsigned int, int)' static
| |-ParmVarDecl 0x2202be27b00 <col:27, col:77> col:42 used op 'unsigned int (*)(unsigned int, unsigned int)'
| |-ParmVarDecl 0x2202be27b80 <line:23:27, col:39> col:39 used op_name 'const char *'
| |-ParmVarDecl 0x2202be27c00 <col:48, col:61> col:61 used a 'unsigned int'
| |-ParmVarDecl 0x2202be27c80 <col:64, col:77> col:77 used b 'unsigned int'
| |-ParmVarDecl 0x2202be27d00 <line:24:27, col:31> col:31 used is_true 'int'
| `-CompoundStmt 0x2202bdbab68 <line:25:1, line:37:1>
|   |-DeclStmt 0x2202be28108 <line:26:5, col:26>
|   | `-VarDecl 0x2202be27fc8 <col:5, col:25> col:14 used c 'unsigned int' cinit
|   |   `-CallExpr 0x2202be280a8 <col:18, col:25> 'unsigned int'
|   |     |-ImplicitCastExpr 0x2202be28090 <col:18> 'unsigned int (*)(unsigned int, unsigned int)' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2202be28030 <col:18> 'unsigned int (*)(unsigned int, unsigned int)' lvalue ParmVar 0x2202be27b00 'op' 'unsigned int (*)(unsigned int, unsigned int)'
|   |     |-ImplicitCastExpr 0x2202be280d8 <col:21> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2202be28050 <col:21> 'unsigned int' lvalue ParmVar 0x2202be27c00 'a' 'unsigned int'
|   |     `-ImplicitCastExpr 0x2202be280f0 <col:24> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2202be28070 <col:24> 'unsigned int' lvalue ParmVar 0x2202be27c80 'b' 'unsigned int'
|   |-IfStmt 0x2202bdbab08 <line:27:5, line:35:5> has_else
|   | |-BinaryOperator 0x2202be28200 <line:27:9, col:25> 'int' '&&'
|   | | |-ImplicitCastExpr 0x2202be281e8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2202be28120 <col:9> 'int' lvalue ParmVar 0x2202be27d00 'is_true' 'int'
|   | | `-BinaryOperator 0x2202be281c8 <col:20, col:25> 'int' '!='
|   | |   |-ImplicitCastExpr 0x2202be28198 <col:20> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2202be28140 <col:20> 'unsigned int' lvalue Var 0x2202be27fc8 'c' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x2202be281b0 <col:25> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2202be28178 <col:25> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   | |-CompoundStmt 0x2202bdba5c8 <col:41, line:31:5>
|   | | |-CallExpr 0x2202bdba490 <line:28:9, line:29:70> 'int'
|   | | | |-ImplicitCastExpr 0x2202bdba478 <line:28:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x2202bdba178 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x2202bdba2b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x2202bdba298 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x2202bdba278 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x2202bdba230 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x2202bdba218 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x2202bdba198 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x2202bdba250 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x2202bdba500 <.//openssl//file_jk/after\test\constant_time_test.c:28:25, line:29:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x2202bdba4e8 <line:28:25, line:29:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x2202bdba308 <line:28:25, line:29:17> 'char [60]' lvalue "Test failed for %s(%du, %du): expected %du (TRUE), got %du\n"
|   | | | |-ImplicitCastExpr 0x2202bdba518 <col:38> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bdba360 <col:38> 'const char *' lvalue ParmVar 0x2202be27b80 'op_name' 'const char *'
|   | | | |-ImplicitCastExpr 0x2202bdba530 <col:47> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bdba380 <col:47> 'unsigned int' lvalue ParmVar 0x2202be27c00 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x2202bdba548 <col:50> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bdba3a0 <col:50> 'unsigned int' lvalue ParmVar 0x2202be27c80 'b' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x2202bdba560 <col:53> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bdba3c0 <col:53> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   | | | `-ImplicitCastExpr 0x2202bdba578 <col:69> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2202bdba3e0 <col:69> 'unsigned int' lvalue Var 0x2202be27fc8 'c' 'unsigned int'
|   | | `-ReturnStmt 0x2202bdba5b8 <line:30:9, col:16>
|   | |   `-IntegerLiteral 0x2202bdba590 <col:16> 'int' 1
|   | `-IfStmt 0x2202bdbaaf0 <line:31:12, line:35:5>
|   |   |-BinaryOperator 0x2202bdba6c8 <line:31:16, col:33> 'int' '&&'
|   |   | |-UnaryOperator 0x2202bdba620 <col:16, col:17> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x2202bdba608 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2202bdba5e8 <col:17> 'int' lvalue ParmVar 0x2202be27d00 'is_true' 'int'
|   |   | `-BinaryOperator 0x2202bdba6a8 <col:28, col:33> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x2202bdba678 <col:28> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2202bdba638 <col:28> 'unsigned int' lvalue Var 0x2202be27fc8 'c' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x2202bdba690 <col:33> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2202bdba658 <col:33> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x2202bdbaad0 <col:50, line:35:5>
|   |     |-CallExpr 0x2202bdba998 <line:32:9, line:33:72> 'int'
|   |     | |-ImplicitCastExpr 0x2202bdba980 <line:32:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x2202bdba730 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x2202bdba808 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x2202bdba7f0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x2202bdba7d0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x2202bdba788 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x2202bdba770 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x2202bdba750 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x2202bdba7a8 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x2202bdbaa08 <.//openssl//file_jk/after\test\constant_time_test.c:32:25, line:33:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x2202bdba9f0 <line:32:25, line:33:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x2202bdba868 <line:32:25, line:33:17> 'char [62]' lvalue "Test failed for  %s(%du, %du): expected %du (FALSE), got %du\n"
|   |     | |-ImplicitCastExpr 0x2202bdbaa20 <col:39> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202bdba8c8 <col:39> 'const char *' lvalue ParmVar 0x2202be27b80 'op_name' 'const char *'
|   |     | |-ImplicitCastExpr 0x2202bdbaa38 <col:48> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202bdba8e8 <col:48> 'unsigned int' lvalue ParmVar 0x2202be27c00 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x2202bdbaa50 <col:51> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202bdba908 <col:51> 'unsigned int' lvalue ParmVar 0x2202be27c80 'b' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x2202bdbaa68 <col:54> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202bdba928 <col:54> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |     | `-ImplicitCastExpr 0x2202bdbaa80 <col:71> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2202bdba948 <col:71> 'unsigned int' lvalue Var 0x2202be27fc8 'c' 'unsigned int'
|   |     `-ReturnStmt 0x2202bdbaac0 <line:34:9, col:16>
|   |       `-IntegerLiteral 0x2202bdbaa98 <col:16> 'int' 1
|   `-ReturnStmt 0x2202bdbab58 <line:36:5, col:12>
|     `-IntegerLiteral 0x2202bdbab30 <col:12> 'int' 0
|-FunctionDecl 0x2202bec1180 <line:39:1, line:55:1> line:39:12 used test_binary_op_8 'int (unsigned char (*)(unsigned int, unsigned int), const char *, unsigned int, unsigned int, int)' static
| |-ParmVarDecl 0x2202bdbadd0 <col:29, line:40:71> col:36 used op 'unsigned char (*)(unsigned int, unsigned int)'
| |-ParmVarDecl 0x2202bdbae50 <line:41:29, col:41> col:41 used op_name 'const char *'
| |-ParmVarDecl 0x2202bdbaed0 <col:50, col:63> col:63 used a 'unsigned int'
| |-ParmVarDecl 0x2202bdbaf50 <line:42:29, col:42> col:42 used b 'unsigned int'
| |-ParmVarDecl 0x2202bdbafd0 <col:45, col:49> col:49 used is_true 'int'
| `-CompoundStmt 0x2202bec1ec0 <line:43:1, line:55:1>
|   |-DeclStmt 0x2202bec13b8 <line:44:5, col:31>
|   | `-VarDecl 0x2202bec1278 <col:5, col:30> col:19 used c 'unsigned char' cinit
|   |   `-CallExpr 0x2202bec1358 <col:23, col:30> 'unsigned char'
|   |     |-ImplicitCastExpr 0x2202bec1340 <col:23> 'unsigned char (*)(unsigned int, unsigned int)' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2202bec12e0 <col:23> 'unsigned char (*)(unsigned int, unsigned int)' lvalue ParmVar 0x2202bdbadd0 'op' 'unsigned char (*)(unsigned int, unsigned int)'
|   |     |-ImplicitCastExpr 0x2202bec1388 <col:26> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2202bec1300 <col:26> 'unsigned int' lvalue ParmVar 0x2202bdbaed0 'a' 'unsigned int'
|   |     `-ImplicitCastExpr 0x2202bec13a0 <col:29> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2202bec1320 <col:29> 'unsigned int' lvalue ParmVar 0x2202bdbaf50 'b' 'unsigned int'
|   |-IfStmt 0x2202bec1e60 <line:45:5, line:53:5> has_else
|   | |-BinaryOperator 0x2202bec14e0 <line:45:9, col:25> 'int' '&&'
|   | | |-ImplicitCastExpr 0x2202bec14c8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2202bec13d0 <col:9> 'int' lvalue ParmVar 0x2202bdbafd0 'is_true' 'int'
|   | | `-BinaryOperator 0x2202bec14a8 <col:20, col:25> 'int' '!='
|   | |   |-ImplicitCastExpr 0x2202bec1478 <col:20> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x2202bec1448 <col:20> 'unsigned char' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x2202bec13f0 <col:20> 'unsigned char' lvalue Var 0x2202bec1278 'c' 'unsigned char'
|   | |   `-ImplicitCastExpr 0x2202bec1490 <col:25> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x2202bec1460 <col:25> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2202bec1428 <col:25> 'const unsigned char' lvalue Var 0x2202be27760 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | |-CompoundStmt 0x2202bec1908 <col:43, line:49:5>
|   | | |-CallExpr 0x2202bec17a0 <line:46:9, line:47:71> 'int'
|   | | | |-ImplicitCastExpr 0x2202bec1788 <line:46:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x2202bec1548 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x2202bec1620 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x2202bec1608 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x2202bec15e8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x2202bec15a0 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x2202bec1588 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x2202bec1568 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x2202bec15c0 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x2202bec1810 <.//openssl//file_jk/after\test\constant_time_test.c:46:25, line:47:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x2202bec17f8 <line:46:25, line:47:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x2202bec1678 <line:46:25, line:47:17> 'char [58]' lvalue "Test failed for %s(%du, %du): expected %u (TRUE), got %u\n"
|   | | | |-ImplicitCastExpr 0x2202bec1828 <col:37> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bec16d0 <col:37> 'const char *' lvalue ParmVar 0x2202bdbae50 'op_name' 'const char *'
|   | | | |-ImplicitCastExpr 0x2202bec1840 <col:46> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bec16f0 <col:46> 'unsigned int' lvalue ParmVar 0x2202bdbaed0 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x2202bec1858 <col:49> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bec1710 <col:49> 'unsigned int' lvalue ParmVar 0x2202bdbaf50 'b' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x2202bec1888 <col:52> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x2202bec1870 <col:52> 'unsigned char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2202bec1730 <col:52> 'const unsigned char' lvalue Var 0x2202be27760 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | | | `-ImplicitCastExpr 0x2202bec18b8 <col:70> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x2202bec18a0 <col:70> 'unsigned char' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2202bec1750 <col:70> 'unsigned char' lvalue Var 0x2202bec1278 'c' 'unsigned char'
|   | | `-ReturnStmt 0x2202bec18f8 <line:48:9, col:16>
|   | |   `-IntegerLiteral 0x2202bec18d0 <col:16> 'int' 1
|   | `-IfStmt 0x2202bec1e48 <line:49:12, line:53:5>
|   |   |-BinaryOperator 0x2202bec1a38 <line:49:16, col:33> 'int' '&&'
|   |   | |-UnaryOperator 0x2202bec1960 <col:16, col:17> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x2202bec1948 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2202bec1928 <col:17> 'int' lvalue ParmVar 0x2202bdbafd0 'is_true' 'int'
|   |   | `-BinaryOperator 0x2202bec1a18 <col:28, col:33> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x2202bec19e8 <col:28> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x2202bec19b8 <col:28> 'unsigned char' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2202bec1978 <col:28> 'unsigned char' lvalue Var 0x2202bec1278 'c' 'unsigned char'
|   |   |   `-ImplicitCastExpr 0x2202bec1a00 <col:33> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2202bec19d0 <col:33> 'unsigned char' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2202bec1998 <col:33> 'const unsigned char' lvalue Var 0x2202be27838 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |   `-CompoundStmt 0x2202bec1e28 <col:52, line:53:5>
|   |     |-CallExpr 0x2202bec1cc0 <line:50:9, line:51:73> 'int'
|   |     | |-ImplicitCastExpr 0x2202bec1ca8 <line:50:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x2202bec1aa0 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x2202bec1b78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x2202bec1b60 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x2202bec1b40 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x2202bec1af8 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x2202bec1ae0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x2202bec1ac0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x2202bec1b18 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x2202bec1d30 <.//openssl//file_jk/after\test\constant_time_test.c:50:25, line:51:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x2202bec1d18 <line:50:25, line:51:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x2202bec1b98 <line:50:25, line:51:17> 'char [60]' lvalue "Test failed for  %s(%du, %du): expected %u (FALSE), got %u\n"
|   |     | |-ImplicitCastExpr 0x2202bec1d48 <col:38> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202bec1bf0 <col:38> 'const char *' lvalue ParmVar 0x2202bdbae50 'op_name' 'const char *'
|   |     | |-ImplicitCastExpr 0x2202bec1d60 <col:47> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202bec1c10 <col:47> 'unsigned int' lvalue ParmVar 0x2202bdbaed0 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x2202bec1d78 <col:50> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202bec1c30 <col:50> 'unsigned int' lvalue ParmVar 0x2202bdbaf50 'b' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x2202bec1da8 <col:53> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x2202bec1d90 <col:53> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x2202bec1c50 <col:53> 'const unsigned char' lvalue Var 0x2202be27838 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     | `-ImplicitCastExpr 0x2202bec1dd8 <col:72> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x2202bec1dc0 <col:72> 'unsigned char' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2202bec1c70 <col:72> 'unsigned char' lvalue Var 0x2202bec1278 'c' 'unsigned char'
|   |     `-ReturnStmt 0x2202bec1e18 <line:52:9, col:16>
|   |       `-IntegerLiteral 0x2202bec1df0 <col:16> 'int' 1
|   `-ReturnStmt 0x2202bec1eb0 <line:54:5, col:12>
|     `-IntegerLiteral 0x2202bec1e88 <col:12> 'int' 0
|-FunctionDecl 0x2202bec1fe0 <line:57:1, line:70:1> line:57:12 used test_is_zero 'int (unsigned int)' static
| |-ParmVarDecl 0x2202bec1f00 <col:25, col:38> col:38 used a 'unsigned int'
| `-CompoundStmt 0x2202bec6d60 <line:58:1, line:70:1>
|   |-DeclStmt 0x2202bec6398 <line:59:5, col:46>
|   | `-VarDecl 0x2202bec6130 <col:5, col:45> col:18 used c 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x2202bec6380 <col:22, col:45> 'unsigned int' <IntegralCast>
|   |     `-CallExpr 0x2202bec6340 <col:22, col:45> 'int'
|   |       |-ImplicitCastExpr 0x2202bec6328 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2202bec62b8 <col:22> 'int ()' Function 0x2202bec61f0 'constant_time_is_zero' 'int ()'
|   |       `-ImplicitCastExpr 0x2202bec6368 <col:44> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x2202bec62d8 <col:44> 'unsigned int' lvalue ParmVar 0x2202bec1f00 'a' 'unsigned int'
|   |-IfStmt 0x2202bec6d00 <line:60:5, line:68:5> has_else
|   | |-BinaryOperator 0x2202bec64f0 <line:60:9, col:24> 'int' '&&'
|   | | |-BinaryOperator 0x2202bec6428 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2202bec63f8 <col:9> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bec63b0 <col:9> 'unsigned int' lvalue ParmVar 0x2202bec1f00 'a' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x2202bec6410 <col:14> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x2202bec63d0 <col:14> 'int' 0
|   | | `-BinaryOperator 0x2202bec64d0 <col:19, col:24> 'int' '!='
|   | |   |-ImplicitCastExpr 0x2202bec64a0 <col:19> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2202bec6448 <col:19> 'unsigned int' lvalue Var 0x2202bec6130 'c' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x2202bec64b8 <col:24> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2202bec6480 <col:24> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   | |-CompoundStmt 0x2202bec6838 <col:40, line:64:5>
|   | | |-CallExpr 0x2202bec6740 <line:61:9, line:62:71> 'int'
|   | | | |-ImplicitCastExpr 0x2202bec6728 <line:61:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x2202bec6510 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x2202bec65e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x2202bec65d0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x2202bec65b0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x2202bec6568 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x2202bec6550 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x2202bec6530 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x2202bec6588 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x2202bec67a0 <.//openssl//file_jk/after\test\constant_time_test.c:61:25, line:62:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x2202bec6788 <line:61:25, line:62:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x2202bec6648 <line:61:25, line:62:17> 'char [74]' lvalue "Test failed for constant_time_is_zero(%du): expected %du (TRUE), got %du\n"
|   | | | |-ImplicitCastExpr 0x2202bec67b8 <col:51> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bec66b0 <col:51> 'unsigned int' lvalue ParmVar 0x2202bec1f00 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x2202bec67d0 <col:54> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bec66d0 <col:54> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   | | | `-ImplicitCastExpr 0x2202bec67e8 <col:70> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2202bec66f0 <col:70> 'unsigned int' lvalue Var 0x2202bec6130 'c' 'unsigned int'
|   | | `-ReturnStmt 0x2202bec6828 <line:63:9, col:16>
|   | |   `-IntegerLiteral 0x2202bec6800 <col:16> 'int' 1
|   | `-IfStmt 0x2202bec6ce8 <line:64:12, line:68:5>
|   |   |-BinaryOperator 0x2202bec6980 <line:64:16, col:31> 'int' '&&'
|   |   | |-BinaryOperator 0x2202bec68d0 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2202bec68a0 <col:16> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2202bec6858 <col:16> 'unsigned int' lvalue ParmVar 0x2202bec1f00 'a' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x2202bec68b8 <col:21> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2202bec6878 <col:21> 'int' 0
|   |   | `-BinaryOperator 0x2202bec6960 <col:26, col:31> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x2202bec6930 <col:26> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2202bec68f0 <col:26> 'unsigned int' lvalue Var 0x2202bec6130 'c' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x2202bec6948 <col:31> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2202bec6910 <col:31> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x2202bec6cc8 <col:48, line:68:5>
|   |     |-CallExpr 0x2202bec6bd0 <line:65:9, line:66:73> 'int'
|   |     | |-ImplicitCastExpr 0x2202bec6bb8 <line:65:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x2202bec69a0 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x2202bec6a78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x2202bec6a60 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x2202bec6a40 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x2202bec69f8 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x2202bec69e0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x2202bec69c0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x2202bec6a18 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x2202bec6c30 <.//openssl//file_jk/after\test\constant_time_test.c:65:25, line:66:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x2202bec6c18 <line:65:25, line:66:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x2202bec6ad8 <line:65:25, line:66:17> 'char [75]' lvalue "Test failed for constant_time_is_zero(%du): expected %du (FALSE), got %du\n"
|   |     | |-ImplicitCastExpr 0x2202bec6c48 <col:52> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202bec6b40 <col:52> 'unsigned int' lvalue ParmVar 0x2202bec1f00 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x2202bec6c60 <col:55> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202bec6b60 <col:55> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |     | `-ImplicitCastExpr 0x2202bec6c78 <col:72> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2202bec6b80 <col:72> 'unsigned int' lvalue Var 0x2202bec6130 'c' 'unsigned int'
|   |     `-ReturnStmt 0x2202bec6cb8 <line:67:9, col:16>
|   |       `-IntegerLiteral 0x2202bec6c90 <col:16> 'int' 1
|   `-ReturnStmt 0x2202bec6d50 <line:69:5, col:12>
|     `-IntegerLiteral 0x2202bec6d28 <col:12> 'int' 0
|-FunctionDecl 0x2202bec6e50 <line:72:1, line:85:1> line:72:12 used test_is_zero_8 'int (unsigned int)' static
| |-ParmVarDecl 0x2202bec6da0 <col:27, col:40> col:40 used a 'unsigned int'
| `-CompoundStmt 0x2202bec0b30 <line:73:1, line:85:1>
|   |-DeclStmt 0x2202bec00d0 <line:74:5, col:49>
|   | `-VarDecl 0x2202bec6f28 <col:5, col:48> col:19 used c 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x2202bec7118 <col:23, col:48> 'unsigned char' <IntegralCast>
|   |     `-CallExpr 0x2202bec70d8 <col:23, col:48> 'int'
|   |       |-ImplicitCastExpr 0x2202bec70c0 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2202bec7080 <col:23> 'int ()' Function 0x2202bec6fb8 'constant_time_is_zero_8' 'int ()'
|   |       `-ImplicitCastExpr 0x2202bec7100 <col:47> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x2202bec70a0 <col:47> 'unsigned int' lvalue ParmVar 0x2202bec6da0 'a' 'unsigned int'
|   |-IfStmt 0x2202bec0ad0 <line:75:5, line:83:5> has_else
|   | |-BinaryOperator 0x2202bec0258 <line:75:9, col:24> 'int' '&&'
|   | | |-BinaryOperator 0x2202bec0160 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2202bec0130 <col:9> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bec00e8 <col:9> 'unsigned int' lvalue ParmVar 0x2202bec6da0 'a' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x2202bec0148 <col:14> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x2202bec0108 <col:14> 'int' 0
|   | | `-BinaryOperator 0x2202bec0238 <col:19, col:24> 'int' '!='
|   | |   |-ImplicitCastExpr 0x2202bec0208 <col:19> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x2202bec01d8 <col:19> 'unsigned char' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x2202bec0180 <col:19> 'unsigned char' lvalue Var 0x2202bec6f28 'c' 'unsigned char'
|   | |   `-ImplicitCastExpr 0x2202bec0220 <col:24> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x2202bec01f0 <col:24> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2202bec01b8 <col:24> 'const unsigned char' lvalue Var 0x2202be27760 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | |-CompoundStmt 0x2202bec05c8 <col:42, line:79:5>
|   | | |-CallExpr 0x2202bec04a0 <line:76:9, line:77:71> 'int'
|   | | | |-ImplicitCastExpr 0x2202bec0488 <line:76:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x2202bec0278 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x2202bec0350 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x2202bec0338 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x2202bec0318 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x2202bec02d0 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x2202bec02b8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x2202bec0298 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x2202bec02f0 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x2202bec0500 <.//openssl//file_jk/after\test\constant_time_test.c:76:25, line:77:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x2202bec04e8 <line:76:25, line:77:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x2202bec03a8 <line:76:25, line:77:17> 'char [72]' lvalue "Test failed for constant_time_is_zero(%du): expected %u (TRUE), got %u\n"
|   | | | |-ImplicitCastExpr 0x2202bec0518 <col:49> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202bec0410 <col:49> 'unsigned int' lvalue ParmVar 0x2202bec6da0 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x2202bec0548 <col:52> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x2202bec0530 <col:52> 'unsigned char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2202bec0430 <col:52> 'const unsigned char' lvalue Var 0x2202be27760 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | | | `-ImplicitCastExpr 0x2202bec0578 <col:70> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x2202bec0560 <col:70> 'unsigned char' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2202bec0450 <col:70> 'unsigned char' lvalue Var 0x2202bec6f28 'c' 'unsigned char'
|   | | `-ReturnStmt 0x2202bec05b8 <line:78:9, col:16>
|   | |   `-IntegerLiteral 0x2202bec0590 <col:16> 'int' 1
|   | `-IfStmt 0x2202bec0ab8 <line:79:12, line:83:5>
|   |   |-BinaryOperator 0x2202bec0728 <line:79:16, col:31> 'int' '&&'
|   |   | |-BinaryOperator 0x2202bec0660 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2202bec0630 <col:16> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2202bec05e8 <col:16> 'unsigned int' lvalue ParmVar 0x2202bec6da0 'a' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x2202bec0648 <col:21> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2202bec0608 <col:21> 'int' 0
|   |   | `-BinaryOperator 0x2202bec0708 <col:26, col:31> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x2202bec06f0 <col:26> 'unsigned int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x2202bec06c0 <col:26> 'unsigned char' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2202bec0680 <col:26> 'unsigned char' lvalue Var 0x2202bec6f28 'c' 'unsigned char'
|   |   |   `-ImplicitCastExpr 0x2202bec06d8 <col:31> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2202bec06a0 <col:31> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x2202bec0a98 <col:48, line:83:5>
|   |     |-CallExpr 0x2202bec0970 <line:80:9, line:81:73> 'int'
|   |     | |-ImplicitCastExpr 0x2202bec0958 <line:80:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x2202bec0748 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x2202bec0820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x2202bec0808 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x2202bec07e8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x2202bec07a0 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x2202bec0788 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x2202bec0768 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x2202bec07c0 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x2202bec09d0 <.//openssl//file_jk/after\test\constant_time_test.c:80:25, line:81:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x2202bec09b8 <line:80:25, line:81:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x2202bec0878 <line:80:25, line:81:17> 'char [73]' lvalue "Test failed for constant_time_is_zero(%du): expected %u (FALSE), got %u\n"
|   |     | |-ImplicitCastExpr 0x2202bec09e8 <col:50> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202bec08e0 <col:50> 'unsigned int' lvalue ParmVar 0x2202bec6da0 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x2202bec0a18 <col:53> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x2202bec0a00 <col:53> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x2202bec0900 <col:53> 'const unsigned char' lvalue Var 0x2202be27838 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     | `-ImplicitCastExpr 0x2202bec0a48 <col:72> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x2202bec0a30 <col:72> 'unsigned char' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2202bec0920 <col:72> 'unsigned char' lvalue Var 0x2202bec6f28 'c' 'unsigned char'
|   |     `-ReturnStmt 0x2202bec0a88 <line:82:9, col:16>
|   |       `-IntegerLiteral 0x2202bec0a60 <col:16> 'int' 1
|   `-ReturnStmt 0x2202bec0b20 <line:84:5, col:12>
|     `-IntegerLiteral 0x2202bec0af8 <col:12> 'int' 0
|-FunctionDecl 0x2202bec0d00 <line:87:1, line:104:1> line:87:12 used test_select 'int (unsigned int, unsigned int)' static
| |-ParmVarDecl 0x2202bec0b70 <col:24, col:37> col:37 used a 'unsigned int'
| |-ParmVarDecl 0x2202bec0bf0 <col:40, col:53> col:53 used b 'unsigned int'
| `-CompoundStmt 0x2202bec4b98 <line:88:1, line:104:1>
|   |-DeclStmt 0x2202bec1068 <line:89:5, col:71>
|   | `-VarDecl 0x2202bec0de0 <col:5, col:70> col:18 used selected 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x2202bec1050 <col:29, col:70> 'unsigned int' <IntegralCast>
|   |     `-CallExpr 0x2202bec0fd0 <col:29, col:70> 'int'
|   |       |-ImplicitCastExpr 0x2202bec0fb8 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2202bec0f38 <col:29> 'int ()' Function 0x2202bec0e70 'constant_time_select' 'int ()'
|   |       |-ImplicitCastExpr 0x2202bec1008 <col:50> 'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2202bec0f58 <col:50> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   |       |-ImplicitCastExpr 0x2202bec1020 <col:66> 'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2202bec0f78 <col:66> 'unsigned int' lvalue ParmVar 0x2202bec0b70 'a' 'unsigned int'
|   |       `-ImplicitCastExpr 0x2202bec1038 <col:69> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x2202bec0f98 <col:69> 'unsigned int' lvalue ParmVar 0x2202bec0bf0 'b' 'unsigned int'
|   |-IfStmt 0x2202bec4558 <line:90:5, line:95:5>
|   | |-BinaryOperator 0x2202bec4160 <line:90:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x2202bec4130 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2202bec1080 <col:9> 'unsigned int' lvalue Var 0x2202bec0de0 'selected' 'unsigned int'
|   | | `-ImplicitCastExpr 0x2202bec4148 <col:21> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2202bec4110 <col:21> 'unsigned int' lvalue ParmVar 0x2202bec0b70 'a' 'unsigned int'
|   | `-CompoundStmt 0x2202bec4538 <col:24, line:95:5>
|   |   |-CallExpr 0x2202bec4400 <line:91:9, line:93:50> 'int'
|   |   | |-ImplicitCastExpr 0x2202bec43e8 <line:91:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2202bec4180 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x2202bec4258 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x2202bec4240 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x2202bec4220 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x2202bec41d8 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x2202bec41c0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x2202bec41a0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x2202bec41f8 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x2202bec4470 <.//openssl//file_jk/after\test\constant_time_test.c:91:25, line:92:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2202bec4458 <line:91:25, line:92:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2202bec42b8 <line:91:25, line:92:17> 'char [88]' lvalue "Test failed for constant_time_select(%du, %du,%du): expected %du(first value), got %du\n"
|   |   | |-ImplicitCastExpr 0x2202bec4488 <line:93:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec4330 <col:17> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x2202bec44a0 <col:33> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec4350 <col:33> 'unsigned int' lvalue ParmVar 0x2202bec0b70 'a' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x2202bec44b8 <col:36> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec4370 <col:36> 'unsigned int' lvalue ParmVar 0x2202bec0bf0 'b' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x2202bec44d0 <col:39> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec4390 <col:39> 'unsigned int' lvalue ParmVar 0x2202bec0b70 'a' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x2202bec44e8 <col:42> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2202bec43b0 <col:42> 'unsigned int' lvalue Var 0x2202bec0de0 'selected' 'unsigned int'
|   |   `-ReturnStmt 0x2202bec4528 <line:94:9, col:16>
|   |     `-IntegerLiteral 0x2202bec4500 <col:16> 'int' 1
|   |-BinaryOperator 0x2202bec46c0 <line:96:5, col:58> 'unsigned int' '='
|   | |-DeclRefExpr 0x2202bec4570 <col:5> 'unsigned int' lvalue Var 0x2202bec0de0 'selected' 'unsigned int'
|   | `-ImplicitCastExpr 0x2202bec46a8 <col:16, col:58> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x2202bec4628 <col:16, col:58> 'int'
|   |     |-ImplicitCastExpr 0x2202bec4610 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2202bec4590 <col:16> 'int ()' Function 0x2202bec0e70 'constant_time_select' 'int ()'
|   |     |-ImplicitCastExpr 0x2202bec4660 <col:37> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2202bec45b0 <col:37> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |     |-ImplicitCastExpr 0x2202bec4678 <col:54> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2202bec45d0 <col:54> 'unsigned int' lvalue ParmVar 0x2202bec0b70 'a' 'unsigned int'
|   |     `-ImplicitCastExpr 0x2202bec4690 <col:57> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2202bec45f0 <col:57> 'unsigned int' lvalue ParmVar 0x2202bec0bf0 'b' 'unsigned int'
|   |-IfStmt 0x2202bec4b48 <line:97:5, line:102:5>
|   | |-BinaryOperator 0x2202bec4750 <line:97:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x2202bec4720 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2202bec46e0 <col:9> 'unsigned int' lvalue Var 0x2202bec0de0 'selected' 'unsigned int'
|   | | `-ImplicitCastExpr 0x2202bec4738 <col:21> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2202bec4700 <col:21> 'unsigned int' lvalue ParmVar 0x2202bec0bf0 'b' 'unsigned int'
|   | `-CompoundStmt 0x2202bec4b28 <col:24, line:102:5>
|   |   |-CallExpr 0x2202bec49f0 <line:98:9, line:100:51> 'int'
|   |   | |-ImplicitCastExpr 0x2202bec49d8 <line:98:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2202bec4770 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x2202bec4848 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x2202bec4830 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x2202bec4810 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x2202bec47c8 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x2202bec47b0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x2202bec4790 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x2202bec47e8 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x2202bec4a60 <.//openssl//file_jk/after\test\constant_time_test.c:98:25, line:99:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2202bec4a48 <line:98:25, line:99:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2202bec48a8 <line:98:25, line:99:17> 'char [89]' lvalue "Test failed for constant_time_select(%du, %du,%du): expected %du(second value), got %du\n"
|   |   | |-ImplicitCastExpr 0x2202bec4a78 <line:100:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec4920 <col:17> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x2202bec4a90 <col:34> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec4940 <col:34> 'unsigned int' lvalue ParmVar 0x2202bec0b70 'a' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x2202bec4aa8 <col:37> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec4960 <col:37> 'unsigned int' lvalue ParmVar 0x2202bec0bf0 'b' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x2202bec4ac0 <col:40> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec4980 <col:40> 'unsigned int' lvalue ParmVar 0x2202bec0bf0 'b' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x2202bec4ad8 <col:43> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2202bec49a0 <col:43> 'unsigned int' lvalue Var 0x2202bec0de0 'selected' 'unsigned int'
|   |   `-ReturnStmt 0x2202bec4b18 <line:101:9, col:16>
|   |     `-IntegerLiteral 0x2202bec4af0 <col:16> 'int' 1
|   `-ReturnStmt 0x2202bec4b88 <line:103:5, col:12>
|     `-IntegerLiteral 0x2202bec4b60 <col:12> 'int' 0
|-FunctionDecl 0x2202bec4d70 <line:106:1, line:123:1> line:106:12 used test_select_8 'int (unsigned char, unsigned char)' static
| |-ParmVarDecl 0x2202bec4be8 <col:26, col:40> col:40 used a 'unsigned char'
| |-ParmVarDecl 0x2202bec4c68 <col:43, col:57> col:57 used b 'unsigned char'
| `-CompoundStmt 0x2202bec5d60 <line:107:1, line:123:1>
|   |-DeclStmt 0x2202bec5138 <line:108:5, col:76>
|   | `-VarDecl 0x2202bec4e50 <col:5, col:75> col:19 used selected 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x2202bec5120 <col:30, col:75> 'unsigned char' <IntegralCast>
|   |     `-CallExpr 0x2202bec5040 <col:30, col:75> 'int'
|   |       |-ImplicitCastExpr 0x2202bec5028 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2202bec4fa8 <col:30> 'int ()' Function 0x2202bec4ee0 'constant_time_select_8' 'int ()'
|   |       |-ImplicitCastExpr 0x2202bec5090 <col:53> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x2202bec5078 <col:53> 'unsigned char' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2202bec4fc8 <col:53> 'const unsigned char' lvalue Var 0x2202be27760 'CONSTTIME_TRUE_8' 'const unsigned char'
|   |       |-ImplicitCastExpr 0x2202bec50c0 <col:71> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x2202bec50a8 <col:71> 'unsigned char' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2202bec4fe8 <col:71> 'unsigned char' lvalue ParmVar 0x2202bec4be8 'a' 'unsigned char'
|   |       `-ImplicitCastExpr 0x2202bec50f0 <col:74> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x2202bec50d8 <col:74> 'unsigned char' <LValueToRValue>
|   |           `-DeclRefExpr 0x2202bec5008 <col:74> 'unsigned char' lvalue ParmVar 0x2202bec4c68 'b' 'unsigned char'
|   |-IfStmt 0x2202bec5650 <line:109:5, line:114:5>
|   | |-BinaryOperator 0x2202bec5208 <line:109:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x2202bec51d8 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2202bec51a8 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2202bec5150 <col:9> 'unsigned char' lvalue Var 0x2202bec4e50 'selected' 'unsigned char'
|   | | `-ImplicitCastExpr 0x2202bec51f0 <col:21> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x2202bec51c0 <col:21> 'unsigned char' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2202bec5188 <col:21> 'unsigned char' lvalue ParmVar 0x2202bec4be8 'a' 'unsigned char'
|   | `-CompoundStmt 0x2202bec5630 <col:24, line:114:5>
|   |   |-CallExpr 0x2202bec5498 <line:110:9, line:112:50> 'int'
|   |   | |-ImplicitCastExpr 0x2202bec5480 <line:110:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2202bec5228 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x2202bec5300 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x2202bec52e8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x2202bec52c8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x2202bec5280 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x2202bec5268 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x2202bec5248 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x2202bec52a0 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x2202bec5508 <.//openssl//file_jk/after\test\constant_time_test.c:110:25, line:111:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2202bec54f0 <line:110:25, line:111:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2202bec5358 <line:110:25, line:111:17> 'char [83]' lvalue "Test failed for constant_time_select(%u, %u,%u): expected %u(first value), got %u\n"
|   |   | |-ImplicitCastExpr 0x2202bec5520 <line:112:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec53c8 <col:17> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x2202bec5550 <col:33> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x2202bec5538 <col:33> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2202bec53e8 <col:33> 'unsigned char' lvalue ParmVar 0x2202bec4be8 'a' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x2202bec5580 <col:36> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x2202bec5568 <col:36> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2202bec5408 <col:36> 'unsigned char' lvalue ParmVar 0x2202bec4c68 'b' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x2202bec55b0 <col:39> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x2202bec5598 <col:39> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2202bec5428 <col:39> 'unsigned char' lvalue ParmVar 0x2202bec4be8 'a' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x2202bec55e0 <col:42> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2202bec55c8 <col:42> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2202bec5448 <col:42> 'unsigned char' lvalue Var 0x2202bec4e50 'selected' 'unsigned char'
|   |   `-ReturnStmt 0x2202bec5620 <line:113:9, col:16>
|   |     `-IntegerLiteral 0x2202bec55f8 <col:16> 'int' 1
|   |-BinaryOperator 0x2202bec5800 <line:115:5, col:62> 'unsigned char' '='
|   | |-DeclRefExpr 0x2202bec5668 <col:5> 'unsigned char' lvalue Var 0x2202bec4e50 'selected' 'unsigned char'
|   | `-ImplicitCastExpr 0x2202bec57e8 <col:16, col:62> 'unsigned char' <IntegralCast>
|   |   `-CallExpr 0x2202bec5720 <col:16, col:62> 'int'
|   |     |-ImplicitCastExpr 0x2202bec5708 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2202bec5688 <col:16> 'int ()' Function 0x2202bec4ee0 'constant_time_select_8' 'int ()'
|   |     |-ImplicitCastExpr 0x2202bec5770 <col:39> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x2202bec5758 <col:39> 'unsigned char' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2202bec56a8 <col:39> 'const unsigned char' lvalue Var 0x2202be27838 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     |-ImplicitCastExpr 0x2202bec57a0 <col:58> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x2202bec5788 <col:58> 'unsigned char' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2202bec56c8 <col:58> 'unsigned char' lvalue ParmVar 0x2202bec4be8 'a' 'unsigned char'
|   |     `-ImplicitCastExpr 0x2202bec57d0 <col:61> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x2202bec57b8 <col:61> 'unsigned char' <LValueToRValue>
|   |         `-DeclRefExpr 0x2202bec56e8 <col:61> 'unsigned char' lvalue ParmVar 0x2202bec4c68 'b' 'unsigned char'
|   |-IfStmt 0x2202bec5d10 <line:116:5, line:121:5>
|   | |-BinaryOperator 0x2202bec58c0 <line:116:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x2202bec5890 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2202bec5860 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2202bec5820 <col:9> 'unsigned char' lvalue Var 0x2202bec4e50 'selected' 'unsigned char'
|   | | `-ImplicitCastExpr 0x2202bec58a8 <col:21> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x2202bec5878 <col:21> 'unsigned char' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2202bec5840 <col:21> 'unsigned char' lvalue ParmVar 0x2202bec4c68 'b' 'unsigned char'
|   | `-CompoundStmt 0x2202bec5cf0 <col:24, line:121:5>
|   |   |-CallExpr 0x2202bec5b58 <line:117:9, line:119:51> 'int'
|   |   | |-ImplicitCastExpr 0x2202bec5b40 <line:117:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2202bec58e0 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x2202bec59b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x2202bec59a0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x2202bec5980 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x2202bec5938 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x2202bec5920 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x2202bec5900 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x2202bec5958 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x2202bec5bc8 <.//openssl//file_jk/after\test\constant_time_test.c:117:25, line:118:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2202bec5bb0 <line:117:25, line:118:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2202bec5a18 <line:117:25, line:118:17> 'char [84]' lvalue "Test failed for constant_time_select(%u, %u,%u): expected %u(second value), got %u\n"
|   |   | |-ImplicitCastExpr 0x2202bec5be0 <line:119:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec5a88 <col:17> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x2202bec5c10 <col:34> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x2202bec5bf8 <col:34> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2202bec5aa8 <col:34> 'unsigned char' lvalue ParmVar 0x2202bec4be8 'a' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x2202bec5c40 <col:37> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x2202bec5c28 <col:37> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2202bec5ac8 <col:37> 'unsigned char' lvalue ParmVar 0x2202bec4c68 'b' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x2202bec5c70 <col:40> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x2202bec5c58 <col:40> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2202bec5ae8 <col:40> 'unsigned char' lvalue ParmVar 0x2202bec4c68 'b' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x2202bec5ca0 <col:43> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x2202bec5c88 <col:43> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2202bec5b08 <col:43> 'unsigned char' lvalue Var 0x2202bec4e50 'selected' 'unsigned char'
|   |   `-ReturnStmt 0x2202bec5ce0 <line:120:9, col:16>
|   |     `-IntegerLiteral 0x2202bec5cb8 <col:16> 'int' 1
|   `-ReturnStmt 0x2202bec5d50 <line:122:5, col:12>
|     `-IntegerLiteral 0x2202bec5d28 <col:12> 'int' 0
|-FunctionDecl 0x2202bec5f40 <line:125:1, line:142:1> line:125:12 used test_select_int 'int (int, int)' static
| |-ParmVarDecl 0x2202bec5db0 <col:28, col:32> col:32 used a 'int'
| |-ParmVarDecl 0x2202bec5e30 <col:35, col:39> col:39 used b 'int'
| `-CompoundStmt 0x2202bec9db0 <line:126:1, line:142:1>
|   |-DeclStmt 0x2202bec9340 <line:127:5, col:66>
|   | `-VarDecl 0x2202bec6020 <col:5, col:65> col:9 used selected 'int' cinit
|   |   `-CallExpr 0x2202bec92c0 <col:20, col:65> 'int'
|   |     |-ImplicitCastExpr 0x2202bec92a8 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2202bec9228 <col:20> 'int ()' Function 0x2202bec9160 'constant_time_select_int' 'int ()'
|   |     |-ImplicitCastExpr 0x2202bec92f8 <col:45> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2202bec9248 <col:45> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   |     |-ImplicitCastExpr 0x2202bec9310 <col:61> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2202bec9268 <col:61> 'int' lvalue ParmVar 0x2202bec5db0 'a' 'int'
|   |     `-ImplicitCastExpr 0x2202bec9328 <col:64> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2202bec9288 <col:64> 'int' lvalue ParmVar 0x2202bec5e30 'b' 'int'
|   |-IfStmt 0x2202bec9790 <line:128:5, line:133:5>
|   | |-BinaryOperator 0x2202bec93e0 <line:128:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x2202bec93b0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2202bec9358 <col:9> 'int' lvalue Var 0x2202bec6020 'selected' 'int'
|   | | `-ImplicitCastExpr 0x2202bec93c8 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2202bec9390 <col:21> 'int' lvalue ParmVar 0x2202bec5db0 'a' 'int'
|   | `-CompoundStmt 0x2202bec9770 <col:24, line:133:5>
|   |   |-CallExpr 0x2202bec9638 <line:129:9, line:131:50> 'int'
|   |   | |-ImplicitCastExpr 0x2202bec9620 <line:129:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2202bec9400 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x2202bec94d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x2202bec94c0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x2202bec94a0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x2202bec9458 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x2202bec9440 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x2202bec9420 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x2202bec9478 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x2202bec96a8 <.//openssl//file_jk/after\test\constant_time_test.c:129:25, line:130:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2202bec9690 <line:129:25, line:130:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2202bec94f8 <line:129:25, line:130:17> 'char [84]' lvalue "Test failed for constant_time_select(%du, %d,%d): expected %d(first value), got %d\n"
|   |   | |-ImplicitCastExpr 0x2202bec96c0 <line:131:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec9568 <col:17> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x2202bec96d8 <col:33> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec9588 <col:33> 'int' lvalue ParmVar 0x2202bec5db0 'a' 'int'
|   |   | |-ImplicitCastExpr 0x2202bec96f0 <col:36> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec95a8 <col:36> 'int' lvalue ParmVar 0x2202bec5e30 'b' 'int'
|   |   | |-ImplicitCastExpr 0x2202bec9708 <col:39> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec95c8 <col:39> 'int' lvalue ParmVar 0x2202bec5db0 'a' 'int'
|   |   | `-ImplicitCastExpr 0x2202bec9720 <col:42> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2202bec95e8 <col:42> 'int' lvalue Var 0x2202bec6020 'selected' 'int'
|   |   `-ReturnStmt 0x2202bec9760 <line:132:9, col:16>
|   |     `-IntegerLiteral 0x2202bec9738 <col:16> 'int' 1
|   |-BinaryOperator 0x2202bec98e0 <line:134:5, col:62> 'int' '='
|   | |-DeclRefExpr 0x2202bec97a8 <col:5> 'int' lvalue Var 0x2202bec6020 'selected' 'int'
|   | `-CallExpr 0x2202bec9860 <col:16, col:62> 'int'
|   |   |-ImplicitCastExpr 0x2202bec9848 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2202bec97c8 <col:16> 'int ()' Function 0x2202bec9160 'constant_time_select_int' 'int ()'
|   |   |-ImplicitCastExpr 0x2202bec9898 <col:41> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2202bec97e8 <col:41> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |   |-ImplicitCastExpr 0x2202bec98b0 <col:58> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2202bec9808 <col:58> 'int' lvalue ParmVar 0x2202bec5db0 'a' 'int'
|   |   `-ImplicitCastExpr 0x2202bec98c8 <col:61> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2202bec9828 <col:61> 'int' lvalue ParmVar 0x2202bec5e30 'b' 'int'
|   |-IfStmt 0x2202bec9d60 <line:135:5, line:140:5>
|   | |-BinaryOperator 0x2202bec9970 <line:135:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x2202bec9940 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2202bec9900 <col:9> 'int' lvalue Var 0x2202bec6020 'selected' 'int'
|   | | `-ImplicitCastExpr 0x2202bec9958 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2202bec9920 <col:21> 'int' lvalue ParmVar 0x2202bec5e30 'b' 'int'
|   | `-CompoundStmt 0x2202bec9d40 <col:24, line:140:5>
|   |   |-CallExpr 0x2202bec9c08 <line:136:9, line:138:51> 'int'
|   |   | |-ImplicitCastExpr 0x2202bec9bf0 <line:136:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2202bec9990 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x2202bec9a68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x2202bec9a50 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x2202bec9a30 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x2202bec99e8 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x2202bec99d0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x2202bec99b0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x2202bec9a08 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x2202bec9c78 <.//openssl//file_jk/after\test\constant_time_test.c:136:25, line:137:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2202bec9c60 <line:136:25, line:137:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x2202bec9ac8 <line:136:25, line:137:17> 'char [85]' lvalue "Test failed for constant_time_select(%du, %d,%d): expected %d(second value), got %d\n"
|   |   | |-ImplicitCastExpr 0x2202bec9c90 <line:138:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec9b38 <col:17> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x2202bec9ca8 <col:34> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec9b58 <col:34> 'int' lvalue ParmVar 0x2202bec5db0 'a' 'int'
|   |   | |-ImplicitCastExpr 0x2202bec9cc0 <col:37> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec9b78 <col:37> 'int' lvalue ParmVar 0x2202bec5e30 'b' 'int'
|   |   | |-ImplicitCastExpr 0x2202bec9cd8 <col:40> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2202bec9b98 <col:40> 'int' lvalue ParmVar 0x2202bec5e30 'b' 'int'
|   |   | `-ImplicitCastExpr 0x2202bec9cf0 <col:43> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2202bec9bb8 <col:43> 'int' lvalue Var 0x2202bec6020 'selected' 'int'
|   |   `-ReturnStmt 0x2202bec9d30 <line:139:9, col:16>
|   |     `-IntegerLiteral 0x2202bec9d08 <col:16> 'int' 1
|   `-ReturnStmt 0x2202bec9da0 <line:141:5, col:12>
|     `-IntegerLiteral 0x2202bec9d78 <col:12> 'int' 0
|-FunctionDecl 0x2202bec9f50 <line:144:1, line:158:1> line:144:12 used test_eq_int 'int (int, int)' static
| |-ParmVarDecl 0x2202bec9e00 <col:24, col:28> col:28 used a 'int'
| |-ParmVarDecl 0x2202bec9e80 <col:31, col:35> col:35 used b 'int'
| `-CompoundStmt 0x2202be2ef30 <line:145:1, line:158:1>
|   |-DeclStmt 0x2202be2e538 <line:146:5, col:52>
|   | `-VarDecl 0x2202beca030 <col:5, col:51> col:18 used equal 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x2202be2e520 <col:26, col:51> 'unsigned int' <IntegralCast>
|   |     `-CallExpr 0x2202be2e4c0 <col:26, col:51> 'int'
|   |       |-ImplicitCastExpr 0x2202be2e4a8 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2202be2e448 <col:26> 'int ()' Function 0x2202beca0c0 'constant_time_eq_int' 'int ()'
|   |       |-ImplicitCastExpr 0x2202be2e4f0 <col:47> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2202be2e468 <col:47> 'int' lvalue ParmVar 0x2202bec9e00 'a' 'int'
|   |       `-ImplicitCastExpr 0x2202be2e508 <col:50> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x2202be2e488 <col:50> 'int' lvalue ParmVar 0x2202bec9e80 'b' 'int'
|   |-IfStmt 0x2202be2eed0 <line:147:5, line:156:5> has_else
|   | |-BinaryOperator 0x2202be2e688 <line:147:9, col:28> 'int' '&&'
|   | | |-BinaryOperator 0x2202be2e5c0 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2202be2e590 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202be2e550 <col:9> 'int' lvalue ParmVar 0x2202bec9e00 'a' 'int'
|   | | | `-ImplicitCastExpr 0x2202be2e5a8 <col:14> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2202be2e570 <col:14> 'int' lvalue ParmVar 0x2202bec9e80 'b' 'int'
|   | | `-BinaryOperator 0x2202be2e668 <col:19, col:28> 'int' '!='
|   | |   |-ImplicitCastExpr 0x2202be2e638 <col:19> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2202be2e5e0 <col:19> 'unsigned int' lvalue Var 0x2202beca030 'equal' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x2202be2e650 <col:28> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2202be2e618 <col:28> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   | |-CompoundStmt 0x2202be2e9d0 <col:44, line:151:5>
|   | | |-CallExpr 0x2202be2e8b8 <line:148:9, line:149:77> 'int'
|   | | | |-ImplicitCastExpr 0x2202be2e8a0 <line:148:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x2202be2e6a8 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x2202be2e780 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x2202be2e768 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x2202be2e748 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x2202be2e700 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x2202be2e6e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x2202be2e6c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x2202be2e720 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x2202be2e920 <.//openssl//file_jk/after\test\constant_time_test.c:148:25, line:149:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x2202be2e908 <line:148:25, line:149:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x2202be2e7a0 <line:148:25, line:149:17> 'char [75]' lvalue "Test failed for constant_time_eq_int(%d, %d): expected %du(TRUE), got %du\n"
|   | | | |-ImplicitCastExpr 0x2202be2e938 <col:50> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202be2e808 <col:50> 'int' lvalue ParmVar 0x2202bec9e00 'a' 'int'
|   | | | |-ImplicitCastExpr 0x2202be2e950 <col:53> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202be2e828 <col:53> 'int' lvalue ParmVar 0x2202bec9e80 'b' 'int'
|   | | | |-ImplicitCastExpr 0x2202be2e968 <col:56> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202be2e848 <col:56> 'const unsigned int' lvalue Var 0x2202be27530 'CONSTTIME_TRUE' 'const unsigned int'
|   | | | `-ImplicitCastExpr 0x2202be2e980 <col:72> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2202be2e868 <col:72> 'unsigned int' lvalue Var 0x2202beca030 'equal' 'unsigned int'
|   | | `-ReturnStmt 0x2202be2e9c0 <line:150:9, col:16>
|   | |   `-IntegerLiteral 0x2202be2e998 <col:16> 'int' 1
|   | `-IfStmt 0x2202be2eeb8 <line:151:12, line:156:5>
|   |   |-BinaryOperator 0x2202be2eb10 <line:151:16, col:35> 'int' '&&'
|   |   | |-BinaryOperator 0x2202be2ea60 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2202be2ea30 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2202be2e9f0 <col:16> 'int' lvalue ParmVar 0x2202bec9e00 'a' 'int'
|   |   | | `-ImplicitCastExpr 0x2202be2ea48 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2202be2ea10 <col:21> 'int' lvalue ParmVar 0x2202bec9e80 'b' 'int'
|   |   | `-BinaryOperator 0x2202be2eaf0 <col:26, col:35> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x2202be2eac0 <col:26> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x2202be2ea80 <col:26> 'unsigned int' lvalue Var 0x2202beca030 'equal' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x2202be2ead8 <col:35> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2202be2eaa0 <col:35> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x2202be2ee98 <col:52, line:156:5>
|   |     |-CallExpr 0x2202be2ed80 <line:152:9, line:154:45> 'int'
|   |     | |-ImplicitCastExpr 0x2202be2ed68 <line:152:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x2202be2eb30 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x2202be2ec08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x2202be2ebf0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x2202be2ebd0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x2202be2eb88 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x2202be2eb70 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x2202be2eb50 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x2202be2eba8 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x2202be2ede8 <.//openssl//file_jk/after\test\constant_time_test.c:152:25, line:153:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x2202be2edd0 <line:152:25, line:153:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x2202be2ec68 <line:152:25, line:153:17> 'char [76]' lvalue "Test failed for constant_time_eq_int(%d, %d): expected %du(FALSE), got %du\n"
|   |     | |-ImplicitCastExpr 0x2202be2ee00 <line:154:17> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202be2ecd0 <col:17> 'int' lvalue ParmVar 0x2202bec9e00 'a' 'int'
|   |     | |-ImplicitCastExpr 0x2202be2ee18 <col:20> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202be2ecf0 <col:20> 'int' lvalue ParmVar 0x2202bec9e80 'b' 'int'
|   |     | |-ImplicitCastExpr 0x2202be2ee30 <col:23> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202be2ed10 <col:23> 'const unsigned int' lvalue Var 0x2202be27688 'CONSTTIME_FALSE' 'const unsigned int'
|   |     | `-ImplicitCastExpr 0x2202be2ee48 <col:40> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2202be2ed30 <col:40> 'unsigned int' lvalue Var 0x2202beca030 'equal' 'unsigned int'
|   |     `-ReturnStmt 0x2202be2ee88 <line:155:9, col:16>
|   |       `-IntegerLiteral 0x2202be2ee60 <col:16> 'int' 1
|   `-ReturnStmt 0x2202be2ef20 <line:157:5, col:12>
|     `-IntegerLiteral 0x2202be2eef8 <col:12> 'int' 0
|-FunctionDecl 0x2202be2f0c0 <line:160:1, line:174:1> line:160:12 used test_eq_int_8 'int (int, int)' static
| |-ParmVarDecl 0x2202be2ef70 <col:26, col:30> col:30 used a 'int'
| |-ParmVarDecl 0x2202be2eff0 <col:33, col:37> col:37 used b 'int'
| `-CompoundStmt 0x2202be2fe60 <line:161:1, line:174:1>
|   |-DeclStmt 0x2202be2f3e8 <line:162:5, col:55>
|   | `-VarDecl 0x2202be2f1a0 <col:5, col:54> col:19 used equal 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x2202be2f3d0 <col:27, col:54> 'unsigned char' <IntegralCast>
|   |     `-CallExpr 0x2202be2f370 <col:27, col:54> 'int'
|   |       |-ImplicitCastExpr 0x2202be2f358 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2202be2f2f8 <col:27> 'int ()' Function 0x2202be2f230 'constant_time_eq_int_8' 'int ()'
|   |       |-ImplicitCastExpr 0x2202be2f3a0 <col:50> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2202be2f318 <col:50> 'int' lvalue ParmVar 0x2202be2ef70 'a' 'int'
|   |       `-ImplicitCastExpr 0x2202be2f3b8 <col:53> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x2202be2f338 <col:53> 'int' lvalue ParmVar 0x2202be2eff0 'b' 'int'
|   |-IfStmt 0x2202be2fe00 <line:163:5, line:172:5> has_else
|   | |-BinaryOperator 0x2202be2f568 <line:163:9, col:28> 'int' '&&'
|   | | |-BinaryOperator 0x2202be2f470 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2202be2f440 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202be2f400 <col:9> 'int' lvalue ParmVar 0x2202be2ef70 'a' 'int'
|   | | | `-ImplicitCastExpr 0x2202be2f458 <col:14> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2202be2f420 <col:14> 'int' lvalue ParmVar 0x2202be2eff0 'b' 'int'
|   | | `-BinaryOperator 0x2202be2f548 <col:19, col:28> 'int' '!='
|   | |   |-ImplicitCastExpr 0x2202be2f518 <col:19> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x2202be2f4e8 <col:19> 'unsigned char' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x2202be2f490 <col:19> 'unsigned char' lvalue Var 0x2202be2f1a0 'equal' 'unsigned char'
|   | |   `-ImplicitCastExpr 0x2202be2f530 <col:28> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x2202be2f500 <col:28> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2202be2f4c8 <col:28> 'const unsigned char' lvalue Var 0x2202be27760 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | |-CompoundStmt 0x2202be2f8e0 <col:46, line:167:5>
|   | | |-CallExpr 0x2202be2f798 <line:164:9, line:165:77> 'int'
|   | | | |-ImplicitCastExpr 0x2202be2f780 <line:164:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x2202be2f588 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x2202be2f660 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x2202be2f648 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x2202be2f628 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x2202be2f5e0 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x2202be2f5c8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x2202be2f5a8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x2202be2f600 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x2202be2f800 <.//openssl//file_jk/after\test\constant_time_test.c:164:25, line:165:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x2202be2f7e8 <line:164:25, line:165:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x2202be2f680 <line:164:25, line:165:17> 'char [75]' lvalue "Test failed for constant_time_eq_int_8(%d, %d): expected %u(TRUE), got %u\n"
|   | | | |-ImplicitCastExpr 0x2202be2f818 <col:48> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202be2f6e8 <col:48> 'int' lvalue ParmVar 0x2202be2ef70 'a' 'int'
|   | | | |-ImplicitCastExpr 0x2202be2f830 <col:51> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2202be2f708 <col:51> 'int' lvalue ParmVar 0x2202be2eff0 'b' 'int'
|   | | | |-ImplicitCastExpr 0x2202be2f860 <col:54> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x2202be2f848 <col:54> 'unsigned char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2202be2f728 <col:54> 'const unsigned char' lvalue Var 0x2202be27760 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | | | `-ImplicitCastExpr 0x2202be2f890 <col:72> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x2202be2f878 <col:72> 'unsigned char' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2202be2f748 <col:72> 'unsigned char' lvalue Var 0x2202be2f1a0 'equal' 'unsigned char'
|   | | `-ReturnStmt 0x2202be2f8d0 <line:166:9, col:16>
|   | |   `-IntegerLiteral 0x2202be2f8a8 <col:16> 'int' 1
|   | `-IfStmt 0x2202be2fde8 <line:167:12, line:172:5>
|   |   |-BinaryOperator 0x2202be2fa50 <line:167:16, col:35> 'int' '&&'
|   |   | |-BinaryOperator 0x2202be2f970 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2202be2f940 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2202be2f900 <col:16> 'int' lvalue ParmVar 0x2202be2ef70 'a' 'int'
|   |   | | `-ImplicitCastExpr 0x2202be2f958 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2202be2f920 <col:21> 'int' lvalue ParmVar 0x2202be2eff0 'b' 'int'
|   |   | `-BinaryOperator 0x2202be2fa30 <col:26, col:35> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x2202be2fa00 <col:26> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x2202be2f9d0 <col:26> 'unsigned char' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2202be2f990 <col:26> 'unsigned char' lvalue Var 0x2202be2f1a0 'equal' 'unsigned char'
|   |   |   `-ImplicitCastExpr 0x2202be2fa18 <col:35> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2202be2f9e8 <col:35> 'unsigned char' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2202be2f9b0 <col:35> 'const unsigned char' lvalue Var 0x2202be27838 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |   `-CompoundStmt 0x2202be2fdc8 <col:54, line:172:5>
|   |     |-CallExpr 0x2202be2fc80 <line:168:9, line:170:47> 'int'
|   |     | |-ImplicitCastExpr 0x2202be2fc68 <line:168:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x2202be2fa70 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x2202be2fb48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x2202be2fb30 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x2202be2fb10 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x2202be2fac8 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x2202be2fab0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x2202be2fa90 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x2202be2fae8 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x2202be2fce8 <.//openssl//file_jk/after\test\constant_time_test.c:168:25, line:169:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x2202be2fcd0 <line:168:25, line:169:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x2202be2fb68 <line:168:25, line:169:17> 'char [76]' lvalue "Test failed for constant_time_eq_int_8(%d, %d): expected %u(FALSE), got %u\n"
|   |     | |-ImplicitCastExpr 0x2202be2fd00 <line:170:17> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202be2fbd0 <col:17> 'int' lvalue ParmVar 0x2202be2ef70 'a' 'int'
|   |     | |-ImplicitCastExpr 0x2202be2fd18 <col:20> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2202be2fbf0 <col:20> 'int' lvalue ParmVar 0x2202be2eff0 'b' 'int'
|   |     | |-ImplicitCastExpr 0x2202be2fd48 <col:23> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x2202be2fd30 <col:23> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x2202be2fc10 <col:23> 'const unsigned char' lvalue Var 0x2202be27838 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     | `-ImplicitCastExpr 0x2202be2fd78 <col:42> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x2202be2fd60 <col:42> 'unsigned char' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2202be2fc30 <col:42> 'unsigned char' lvalue Var 0x2202be2f1a0 'equal' 'unsigned char'
|   |     `-ReturnStmt 0x2202be2fdb8 <line:171:9, col:16>
|   |       `-IntegerLiteral 0x2202be2fd90 <col:16> 'int' 1
|   `-ReturnStmt 0x2202be2fe50 <line:173:5, col:12>
|     `-IntegerLiteral 0x2202be2fe28 <col:12> 'int' 0
|-VarDecl 0x2202be2fee0 <line:176:1, line:180:1> line:176:21 used test_values 'unsigned int [10]' static cinit
| `-InitListExpr 0x2202be307e8 <line:177:5, line:180:1> 'unsigned int [10]'
|   |-ImplicitCastExpr 0x2202be30828 <line:177:7> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x2202be2ff48 <col:7> 'int' 0
|   |-ImplicitCastExpr 0x2202be30848 <col:10> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x2202be2ff70 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x2202be30870 <col:13> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x2202be2ff98 <col:13> 'int' 1024
|   |-ImplicitCastExpr 0x2202be308a8 <col:19> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x2202be2ffc0 <col:19> 'int' 12345
|   |-ImplicitCastExpr 0x2202be308c0 <col:26> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x2202be2ffe8 <col:26> 'int' 32000
|   |-BinaryOperator 0x2202be301a0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:177:48> 'unsigned int' '-'
|   | |-BinaryOperator 0x2202be30140 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:177:44> 'unsigned int' '/'
|   | | |-ParenExpr 0x2202be300e0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | | `-BinaryOperator 0x2202be300c0 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | | |   |-BinaryOperator 0x2202be30078 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | | |   | |-ImplicitCastExpr 0x2202be30060 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | | |   | | `-IntegerLiteral 0x2202be30010 <col:21> 'int' 2147483647
|   | | |   | `-IntegerLiteral 0x2202be30038 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | | |   `-IntegerLiteral 0x2202be30098 <col:38> 'unsigned int' 1
|   | | `-ImplicitCastExpr 0x2202be30128 <.//openssl//file_jk/after\test\constant_time_test.c:177:44> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x2202be30100 <col:44> 'int' 2
|   | `-ImplicitCastExpr 0x2202be30188 <col:48> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x2202be30160 <col:48> 'int' 1
|   |-BinaryOperator 0x2202be302f0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:178:16> 'unsigned int' '/'
|   | |-ParenExpr 0x2202be30290 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | `-BinaryOperator 0x2202be30270 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | |   |-BinaryOperator 0x2202be30228 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | |   | |-ImplicitCastExpr 0x2202be30210 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | |   | | `-IntegerLiteral 0x2202be301c0 <col:21> 'int' 2147483647
|   | |   | `-IntegerLiteral 0x2202be301e8 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | |   `-IntegerLiteral 0x2202be30248 <col:38> 'unsigned int' 1
|   | `-ImplicitCastExpr 0x2202be302d8 <.//openssl//file_jk/after\test\constant_time_test.c:178:16> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x2202be302b0 <col:16> 'int' 2
|   |-BinaryOperator 0x2202be304d0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:178:34> 'unsigned int' '+'
|   | |-BinaryOperator 0x2202be30470 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:178:30> 'unsigned int' '/'
|   | | |-ParenExpr 0x2202be303e0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | | `-BinaryOperator 0x2202be303c0 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | | |   |-BinaryOperator 0x2202be30378 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | | |   | |-ImplicitCastExpr 0x2202be30360 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | | |   | | `-IntegerLiteral 0x2202be30310 <col:21> 'int' 2147483647
|   | | |   | `-IntegerLiteral 0x2202be30338 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | | |   `-IntegerLiteral 0x2202be30398 <col:38> 'unsigned int' 1
|   | | `-ImplicitCastExpr 0x2202be30458 <.//openssl//file_jk/after\test\constant_time_test.c:178:30> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x2202be30430 <col:30> 'int' 2
|   | `-ImplicitCastExpr 0x2202be304b8 <col:34> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x2202be30490 <col:34> 'int' 1
|   |-BinaryOperator 0x2202be30620 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:178:48> 'unsigned int' '-'
|   | |-ParenExpr 0x2202be305c0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | `-BinaryOperator 0x2202be305a0 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | |   |-BinaryOperator 0x2202be30558 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | |   | |-ImplicitCastExpr 0x2202be30540 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | |   | | `-IntegerLiteral 0x2202be304f0 <col:21> 'int' 2147483647
|   | |   | `-IntegerLiteral 0x2202be30518 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | |   `-IntegerLiteral 0x2202be30578 <col:38> 'unsigned int' 1
|   | `-ImplicitCastExpr 0x2202be30608 <.//openssl//file_jk/after\test\constant_time_test.c:178:48> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x2202be305e0 <col:48> 'int' 1
|   `-ParenExpr 0x2202be30710 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|     `-BinaryOperator 0x2202be306f0 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|       |-BinaryOperator 0x2202be306a8 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|       | |-ImplicitCastExpr 0x2202be30690 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|       | | `-IntegerLiteral 0x2202be30640 <col:21> 'int' 2147483647
|       | `-IntegerLiteral 0x2202be30668 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|       `-IntegerLiteral 0x2202be306c8 <col:38> 'unsigned int' 1
|-VarDecl 0x2202be30a30 <.//openssl//file_jk/after\test\constant_time_test.c:182:1, line:183:43> line:182:22 used test_values_8 'unsigned char [9]' static cinit
| `-InitListExpr 0x2202be30cb0 <line:183:5, col:43> 'unsigned char [9]'
|   |-ImplicitCastExpr 0x2202be30cf0 <col:7> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2202be30a98 <col:7> 'int' 0
|   |-ImplicitCastExpr 0x2202be30d10 <col:10> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2202be30ac0 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x2202be30d38 <col:13> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2202be30ae8 <col:13> 'int' 2
|   |-ImplicitCastExpr 0x2202be30d70 <col:16> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2202be30b10 <col:16> 'int' 20
|   |-ImplicitCastExpr 0x2202be30d88 <col:20> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2202be30b38 <col:20> 'int' 32
|   |-ImplicitCastExpr 0x2202be30de0 <col:24> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2202be30b60 <col:24> 'int' 127
|   |-ImplicitCastExpr 0x2202be30df8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2202be30b88 <col:29> 'int' 128
|   |-ImplicitCastExpr 0x2202be30e10 <col:34> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x2202be30bb0 <col:34> 'int' 129
|   `-ImplicitCastExpr 0x2202be30e28 <col:39> 'unsigned char' <IntegralCast>
|     `-IntegerLiteral 0x2202be30bd8 <col:39> 'int' 255
|-VarDecl 0x2202be30f50 <line:185:1, line:188:1> line:185:12 used signed_test_values 'int [13]' static cinit
| `-InitListExpr 0x2202be31480 <col:35, line:188:1> 'int [13]'
|   |-IntegerLiteral 0x2202be30fb8 <line:185:37> 'int' 0
|   |-IntegerLiteral 0x2202be30fe0 <col:40> 'int' 1
|   |-UnaryOperator 0x2202be31030 <col:43, col:44> 'int' prefix '-'
|   | `-IntegerLiteral 0x2202be31008 <col:44> 'int' 1
|   |-IntegerLiteral 0x2202be31048 <col:47> 'int' 1024
|   |-UnaryOperator 0x2202be31098 <col:53, col:54> 'int' prefix '-'
|   | `-IntegerLiteral 0x2202be31070 <col:54> 'int' 1024
|   |-IntegerLiteral 0x2202be310b0 <col:60> 'int' 12345
|   |-UnaryOperator 0x2202be31100 <col:67, col:68> 'int' prefix '-'
|   | `-IntegerLiteral 0x2202be310d8 <col:68> 'int' 12345
|   |-IntegerLiteral 0x2202be31118 <line:186:5> 'int' 32000
|   |-UnaryOperator 0x2202be31168 <col:12, col:13> 'int' prefix '-'
|   | `-IntegerLiteral 0x2202be31140 <col:13> 'int' 32000
|   |-IntegerLiteral 0x2202be31180 <<built-in>:30:21> 'int' 2147483647
|   |-ParenExpr 0x2202be31230 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:19, col:36> 'int'
|   | `-BinaryOperator 0x2202be31210 <col:20, col:35> 'int' '-'
|   |   |-UnaryOperator 0x2202be311d0 <col:20, <built-in>:30:21> 'int' prefix '-'
|   |   | `-IntegerLiteral 0x2202be311a8 <col:21> 'int' 2147483647
|   |   `-IntegerLiteral 0x2202be311e8 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:35> 'int' 1
|   |-BinaryOperator 0x2202be312a0 <<built-in>:30:21, .//openssl//file_jk/after\test\constant_time_test.c:186:48> 'int' '-'
|   | |-IntegerLiteral 0x2202be31250 <<built-in>:30:21> 'int' 2147483647
|   | `-IntegerLiteral 0x2202be31278 <.//openssl//file_jk/after\test\constant_time_test.c:186:48> 'int' 1
|   `-BinaryOperator 0x2202be31390 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:19, .//openssl//file_jk/after\test\constant_time_test.c:187:15> 'int' '+'
|     |-ParenExpr 0x2202be31348 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:19, col:36> 'int'
|     | `-BinaryOperator 0x2202be31328 <col:20, col:35> 'int' '-'
|     |   |-UnaryOperator 0x2202be312e8 <col:20, <built-in>:30:21> 'int' prefix '-'
|     |   | `-IntegerLiteral 0x2202be312c0 <col:21> 'int' 2147483647
|     |   `-IntegerLiteral 0x2202be31300 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:35> 'int' 1
|     `-IntegerLiteral 0x2202be31368 <.//openssl//file_jk/after\test\constant_time_test.c:187:15> 'int' 1
`-FunctionDecl 0x2202be31850 <line:190:1, line:268:1> line:190:5 main 'int (int, char **)'
  |-ParmVarDecl 0x2202be31610 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x2202be31700 <col:20, col:31> col:26 argv 'char **':'char **'
  `-CompoundStmt 0x2202bd82fd8 <line:191:1, line:268:1>
    |-DeclStmt 0x2202be31b40 <line:192:5, col:28>
    | |-VarDecl 0x2202be31930 <col:5, col:18> col:18 used a 'unsigned int'
    | |-VarDecl 0x2202be319b0 <col:5, col:21> col:21 used b 'unsigned int'
    | |-VarDecl 0x2202be31a30 <col:5, col:24> col:24 used i 'unsigned int'
    | `-VarDecl 0x2202be31ab0 <col:5, col:27> col:27 used j 'unsigned int'
    |-DeclStmt 0x2202be31c70 <line:193:5, col:13>
    | |-VarDecl 0x2202be31b70 <col:5, col:9> col:9 used c 'int'
    | `-VarDecl 0x2202be31bf0 <col:5, col:12> col:12 used d 'int'
    |-DeclStmt 0x2202be31da0 <line:194:5, col:23>
    | |-VarDecl 0x2202be31ca0 <col:5, col:19> col:19 used e 'unsigned char'
    | `-VarDecl 0x2202be31d20 <col:5, col:22> col:22 used f 'unsigned char'
    |-DeclStmt 0x2202be31f20 <line:195:5, col:36>
    | |-VarDecl 0x2202be31dd0 <col:5, col:22> col:9 used num_failed 'int' cinit
    | | `-IntegerLiteral 0x2202be31e38 <col:22> 'int' 0
    | `-VarDecl 0x2202be31e78 <col:5, col:35> col:25 used num_all 'int' cinit
    |   `-IntegerLiteral 0x2202be31ee0 <col:35> 'int' 0
    |-CallExpr 0x2202be320d8 <line:196:5, col:60> 'int'
    | |-ImplicitCastExpr 0x2202be320c0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x2202be31f38 <col:5> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
    | |-ParenExpr 0x2202be32010 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
    | | `-UnaryOperator 0x2202be31ff8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
    | |   `-ArraySubscriptExpr 0x2202be31fd8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
    | |     |-CallExpr 0x2202be31f90 <col:18, col:29> 'FILE *'
    | |     | `-ImplicitCastExpr 0x2202be31f78 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
    | |     |   `-DeclRefExpr 0x2202be31f58 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
    | |     `-IntegerLiteral 0x2202be31fb0 <col:31> 'int' 1
    | `-ImplicitCastExpr 0x2202be32120 <.//openssl//file_jk/after\test\constant_time_test.c:196:21> 'const char *' <NoOp>
    |   `-ImplicitCastExpr 0x2202be32108 <col:21> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x2202be32068 <col:21> 'char [37]' lvalue "Testing constant time operations...\n"
    |-ForStmt 0x2202be37c70 <line:198:5, line:239:5>
    | |-BinaryOperator 0x2202be321b0 <line:198:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x2202be32138 <col:10> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x2202be32198 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x2202be32170 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x2202be323d0 <col:17, col:43> 'int' '<'
    | | |-ImplicitCastExpr 0x2202be323a0 <col:17> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2202be321d0 <col:17> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x2202be323b8 <col:21, col:43> 'unsigned int' <IntegralCast>
    | |   `-CallExpr 0x2202be32338 <col:21, col:43> 'int'
    | |     |-ImplicitCastExpr 0x2202be32320 <col:21> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x2202be322e0 <col:21> 'int ()' Function 0x2202be32218 'OSSL_NELEM' 'int ()'
    | |     `-ImplicitCastExpr 0x2202be32388 <col:32> 'unsigned int *' <ArrayToPointerDecay>
    | |       `-DeclRefExpr 0x2202be32300 <col:32> 'unsigned int [10]' lvalue Var 0x2202be2fee0 'test_values' 'unsigned int [10]'
    | |-UnaryOperator 0x2202be32410 <col:46, col:48> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x2202be323f0 <col:48> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    | `-CompoundStmt 0x2202be37c38 <col:51, line:239:5>
    |   |-BinaryOperator 0x2202be36520 <line:199:9, col:26> 'unsigned int' '='
    |   | |-DeclRefExpr 0x2202be36440 <col:9> 'unsigned int' lvalue Var 0x2202be31930 'a' 'unsigned int'
    |   | `-ImplicitCastExpr 0x2202be36508 <col:13, col:26> 'unsigned int' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x2202be364e8 <col:13, col:26> 'unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x2202be364b8 <col:13> 'unsigned int *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x2202be36478 <col:13> 'unsigned int [10]' lvalue Var 0x2202be2fee0 'test_values' 'unsigned int [10]'
    |   |     `-ImplicitCastExpr 0x2202be364d0 <col:25> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x2202be36498 <col:25> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    |   |-CompoundAssignOperator 0x2202be36640 <line:200:9, col:37> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x2202be36540 <col:9> 'int' lvalue Var 0x2202be31dd0 'num_failed' 'int'
    |   | `-CallExpr 0x2202be36600 <col:23, col:37> 'int'
    |   |   |-ImplicitCastExpr 0x2202be365e8 <col:23> 'int (*)(unsigned int)' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x2202be36578 <col:23> 'int (unsigned int)' Function 0x2202bec1fe0 'test_is_zero' 'int (unsigned int)'
    |   |   `-ImplicitCastExpr 0x2202be36628 <col:36> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x2202be36598 <col:36> 'unsigned int' lvalue Var 0x2202be31930 'a' 'unsigned int'
    |   |-CompoundAssignOperator 0x2202be36728 <line:201:9, col:39> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x2202be36670 <col:9> 'int' lvalue Var 0x2202be31dd0 'num_failed' 'int'
    |   | `-CallExpr 0x2202be366e8 <col:23, col:39> 'int'
    |   |   |-ImplicitCastExpr 0x2202be366d0 <col:23> 'int (*)(unsigned int)' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x2202be36690 <col:23> 'int (unsigned int)' Function 0x2202bec6e50 'test_is_zero_8' 'int (unsigned int)'
    |   |   `-ImplicitCastExpr 0x2202be36710 <col:38> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x2202be366b0 <col:38> 'unsigned int' lvalue Var 0x2202be31930 'a' 'unsigned int'
    |   |-CompoundAssignOperator 0x2202be367b8 <line:202:9, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x2202be36758 <col:9> 'int' lvalue Var 0x2202be31e78 'num_all' 'int'
    |   | `-IntegerLiteral 0x2202be36790 <col:20> 'int' 2
    |   `-ForStmt 0x2202be37c00 <line:203:9, line:238:9>
    |     |-BinaryOperator 0x2202be36860 <line:203:14, col:18> 'unsigned int' '='
    |     | |-DeclRefExpr 0x2202be367e8 <col:14> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x2202be36848 <col:18> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x2202be36820 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x2202be36968 <col:21, col:47> 'int' '<'
    |     | |-ImplicitCastExpr 0x2202be36938 <col:21> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x2202be36880 <col:21> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x2202be36950 <col:25, col:47> 'unsigned int' <IntegralCast>
    |     |   `-CallExpr 0x2202be368f8 <col:25, col:47> 'int'
    |     |     |-ImplicitCastExpr 0x2202be368e0 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x2202be368a0 <col:25> 'int ()' Function 0x2202be32218 'OSSL_NELEM' 'int ()'
    |     |     `-ImplicitCastExpr 0x2202be36920 <col:36> 'unsigned int *' <ArrayToPointerDecay>
    |     |       `-DeclRefExpr 0x2202be368c0 <col:36> 'unsigned int [10]' lvalue Var 0x2202be2fee0 'test_values' 'unsigned int [10]'
    |     |-UnaryOperator 0x2202be369a8 <col:50, col:52> 'unsigned int' prefix '++'
    |     | `-DeclRefExpr 0x2202be36988 <col:52> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |     `-CompoundStmt 0x2202be37bd8 <col:55, line:238:9>
    |       |-BinaryOperator 0x2202be36aa0 <line:204:13, col:30> 'unsigned int' '='
    |       | |-DeclRefExpr 0x2202be369c0 <col:13> 'unsigned int' lvalue Var 0x2202be319b0 'b' 'unsigned int'
    |       | `-ImplicitCastExpr 0x2202be36a88 <col:17, col:30> 'unsigned int' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x2202be36a68 <col:17, col:30> 'unsigned int' lvalue
    |       |     |-ImplicitCastExpr 0x2202be36a38 <col:17> 'unsigned int *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x2202be369f8 <col:17> 'unsigned int [10]' lvalue Var 0x2202be2fee0 'test_values' 'unsigned int [10]'
    |       |     `-ImplicitCastExpr 0x2202be36a50 <col:29> 'unsigned int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x2202be36a18 <col:29> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |       |-CompoundAssignOperator 0x2202be37b30 <line:236:13, col:43> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x2202be37a08 <col:13> 'int' lvalue Var 0x2202be31dd0 'num_failed' 'int'
    |       | `-CallExpr 0x2202be37ad0 <col:27, col:43> 'int'
    |       |   |-ImplicitCastExpr 0x2202be37ab8 <col:27> 'int (*)(unsigned int, unsigned int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x2202be37a28 <col:27> 'int (unsigned int, unsigned int)' Function 0x2202bec0d00 'test_select' 'int (unsigned int, unsigned int)'
    |       |   |-ImplicitCastExpr 0x2202be37b00 <col:39> 'unsigned int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x2202be37a48 <col:39> 'unsigned int' lvalue Var 0x2202be31930 'a' 'unsigned int'
    |       |   `-ImplicitCastExpr 0x2202be37b18 <col:42> 'unsigned int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x2202be37a68 <col:42> 'unsigned int' lvalue Var 0x2202be319b0 'b' 'unsigned int'
    |       `-CompoundAssignOperator 0x2202be37ba8 <line:237:13, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x2202be37b60 <col:13> 'int' lvalue Var 0x2202be31e78 'num_all' 'int'
    |         `-IntegerLiteral 0x2202be37b80 <col:24> 'int' 13
    |-ForStmt 0x2202bd82240 <line:241:5, line:250:5>
    | |-BinaryOperator 0x2202be37d08 <line:241:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x2202be37ca8 <col:10> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x2202be37cf0 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x2202be37cc8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x2202be37e10 <col:17, col:50> 'int' '<'
    | | |-ImplicitCastExpr 0x2202be37de0 <col:17> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2202be37d28 <col:17> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x2202be37df8 <col:21, col:50> 'unsigned int' <IntegralCast>
    | |   `-CallExpr 0x2202be37da0 <col:21, col:50> 'int'
    | |     |-ImplicitCastExpr 0x2202be37d88 <col:21> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x2202be37d48 <col:21> 'int ()' Function 0x2202be32218 'OSSL_NELEM' 'int ()'
    | |     `-ImplicitCastExpr 0x2202be37dc8 <col:32> 'int *' <ArrayToPointerDecay>
    | |       `-DeclRefExpr 0x2202be37d68 <col:32> 'int [13]' lvalue Var 0x2202be30f50 'signed_test_values' 'int [13]'
    | |-UnaryOperator 0x2202be37e50 <col:53, col:55> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x2202be37e30 <col:55> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    | `-CompoundStmt 0x2202bd82220 <col:58, line:250:5>
    |   |-BinaryOperator 0x2202be37f48 <line:242:9, col:33> 'int' '='
    |   | |-DeclRefExpr 0x2202be37e68 <col:9> 'int' lvalue Var 0x2202be31b70 'c' 'int'
    |   | `-ImplicitCastExpr 0x2202be37f30 <col:13, col:33> 'int' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x2202be37f10 <col:13, col:33> 'int' lvalue
    |   |     |-ImplicitCastExpr 0x2202be37ee0 <col:13> 'int *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x2202be37ea0 <col:13> 'int [13]' lvalue Var 0x2202be30f50 'signed_test_values' 'int [13]'
    |   |     `-ImplicitCastExpr 0x2202be37ef8 <col:32> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x2202be37ec0 <col:32> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    |   `-ForStmt 0x2202bd821e8 <line:243:9, line:249:9>
    |     |-BinaryOperator 0x2202be37fc8 <line:243:14, col:18> 'unsigned int' '='
    |     | |-DeclRefExpr 0x2202be37f68 <col:14> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x2202be37fb0 <col:18> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x2202be37f88 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x2202be380d0 <col:21, col:54> 'int' '<'
    |     | |-ImplicitCastExpr 0x2202be380a0 <col:21> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x2202be37fe8 <col:21> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x2202be380b8 <col:25, col:54> 'unsigned int' <IntegralCast>
    |     |   `-CallExpr 0x2202be38060 <col:25, col:54> 'int'
    |     |     |-ImplicitCastExpr 0x2202be38048 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x2202be38008 <col:25> 'int ()' Function 0x2202be32218 'OSSL_NELEM' 'int ()'
    |     |     `-ImplicitCastExpr 0x2202be38088 <col:36> 'int *' <ArrayToPointerDecay>
    |     |       `-DeclRefExpr 0x2202be38028 <col:36> 'int [13]' lvalue Var 0x2202be30f50 'signed_test_values' 'int [13]'
    |     |-UnaryOperator 0x2202be38110 <col:57, col:59> 'unsigned int' prefix '++'
    |     | `-DeclRefExpr 0x2202be380f0 <col:59> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |     `-CompoundStmt 0x2202bd821b0 <col:62, line:249:9>
    |       |-BinaryOperator 0x2202be38208 <line:244:13, col:37> 'int' '='
    |       | |-DeclRefExpr 0x2202be38128 <col:13> 'int' lvalue Var 0x2202be31bf0 'd' 'int'
    |       | `-ImplicitCastExpr 0x2202be381f0 <col:17, col:37> 'int' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x2202be381d0 <col:17, col:37> 'int' lvalue
    |       |     |-ImplicitCastExpr 0x2202be381a0 <col:17> 'int *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x2202be38160 <col:17> 'int [13]' lvalue Var 0x2202be30f50 'signed_test_values' 'int [13]'
    |       |     `-ImplicitCastExpr 0x2202be381b8 <col:36> 'unsigned int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x2202be38180 <col:36> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |       |-CompoundAssignOperator 0x2202be38350 <line:245:13, col:47> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x2202be38228 <col:13> 'int' lvalue Var 0x2202be31dd0 'num_failed' 'int'
    |       | `-CallExpr 0x2202be382f0 <col:27, col:47> 'int'
    |       |   |-ImplicitCastExpr 0x2202be382d8 <col:27> 'int (*)(int, int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x2202be38248 <col:27> 'int (int, int)' Function 0x2202bec5f40 'test_select_int' 'int (int, int)'
    |       |   |-ImplicitCastExpr 0x2202be38320 <col:43> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x2202be38268 <col:43> 'int' lvalue Var 0x2202be31b70 'c' 'int'
    |       |   `-ImplicitCastExpr 0x2202be38338 <col:46> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x2202be38288 <col:46> 'int' lvalue Var 0x2202be31bf0 'd' 'int'
    |       |-CompoundAssignOperator 0x2202bd81fe0 <line:246:13, col:43> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x2202be38380 <col:13> 'int' lvalue Var 0x2202be31dd0 'num_failed' 'int'
    |       | `-CallExpr 0x2202bd81f80 <col:27, col:43> 'int'
    |       |   |-ImplicitCastExpr 0x2202be38400 <col:27> 'int (*)(int, int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x2202be383a0 <col:27> 'int (int, int)' Function 0x2202bec9f50 'test_eq_int' 'int (int, int)'
    |       |   |-ImplicitCastExpr 0x2202bd81fb0 <col:39> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x2202be383c0 <col:39> 'int' lvalue Var 0x2202be31b70 'c' 'int'
    |       |   `-ImplicitCastExpr 0x2202bd81fc8 <col:42> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x2202be383e0 <col:42> 'int' lvalue Var 0x2202be31bf0 'd' 'int'
    |       |-CompoundAssignOperator 0x2202bd82108 <line:247:13, col:45> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x2202bd82010 <col:13> 'int' lvalue Var 0x2202be31dd0 'num_failed' 'int'
    |       | `-CallExpr 0x2202bd820a8 <col:27, col:45> 'int'
    |       |   |-ImplicitCastExpr 0x2202bd82090 <col:27> 'int (*)(int, int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x2202bd82030 <col:27> 'int (int, int)' Function 0x2202be2f0c0 'test_eq_int_8' 'int (int, int)'
    |       |   |-ImplicitCastExpr 0x2202bd820d8 <col:41> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x2202bd82050 <col:41> 'int' lvalue Var 0x2202be31b70 'c' 'int'
    |       |   `-ImplicitCastExpr 0x2202bd820f0 <col:44> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x2202bd82070 <col:44> 'int' lvalue Var 0x2202be31bf0 'd' 'int'
    |       `-CompoundAssignOperator 0x2202bd82180 <line:248:13, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x2202bd82138 <col:13> 'int' lvalue Var 0x2202be31e78 'num_all' 'int'
    |         `-IntegerLiteral 0x2202bd82158 <col:24> 'int' 3
    |-ForStmt 0x2202bd82a08 <line:252:5, line:259:5>
    | |-BinaryOperator 0x2202bd822d8 <line:252:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x2202bd82278 <col:10> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x2202bd822c0 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x2202bd82298 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x2202bd823a8 <col:17, col:41> 'int' '<'
    | | |-ImplicitCastExpr 0x2202bd82390 <col:17> 'unsigned long long' <IntegralCast>
    | | | `-ImplicitCastExpr 0x2202bd82378 <col:17> 'unsigned int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x2202bd822f8 <col:17> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    | | `-UnaryExprOrTypeTraitExpr 0x2202bd82358 <col:21, col:41> 'unsigned long long' sizeof
    | |   `-ParenExpr 0x2202bd82338 <col:27, col:41> 'unsigned char [9]' lvalue
    | |     `-DeclRefExpr 0x2202bd82318 <col:28> 'unsigned char [9]' lvalue Var 0x2202be30a30 'test_values_8' 'unsigned char [9]' non_odr_use_unevaluated
    | |-UnaryOperator 0x2202bd823e8 <col:44, col:46> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x2202bd823c8 <col:46> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    | `-CompoundStmt 0x2202bd829e8 <col:49, line:259:5>
    |   |-BinaryOperator 0x2202bd82510 <line:253:9, col:28> 'unsigned char' '='
    |   | |-DeclRefExpr 0x2202bd82400 <col:9> 'unsigned char' lvalue Var 0x2202be31ca0 'e' 'unsigned char'
    |   | `-ImplicitCastExpr 0x2202bd824f8 <col:13, col:28> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x2202bd824d8 <col:13, col:28> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x2202bd824a8 <col:13> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x2202bd82438 <col:13> 'unsigned char [9]' lvalue Var 0x2202be30a30 'test_values_8' 'unsigned char [9]'
    |   |     `-ImplicitCastExpr 0x2202bd824c0 <col:27> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x2202bd82458 <col:27> 'unsigned int' lvalue Var 0x2202be31a30 'i' 'unsigned int'
    |   `-ForStmt 0x2202bd829b0 <line:254:9, line:258:9>
    |     |-BinaryOperator 0x2202bd82590 <line:254:14, col:18> 'unsigned int' '='
    |     | |-DeclRefExpr 0x2202bd82530 <col:14> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x2202bd82578 <col:18> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x2202bd82550 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x2202bd82660 <col:21, col:45> 'int' '<'
    |     | |-ImplicitCastExpr 0x2202bd82648 <col:21> 'unsigned long long' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x2202bd82630 <col:21> 'unsigned int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x2202bd825b0 <col:21> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |     | `-UnaryExprOrTypeTraitExpr 0x2202bd82610 <col:25, col:45> 'unsigned long long' sizeof
    |     |   `-ParenExpr 0x2202bd825f0 <col:31, col:45> 'unsigned char [9]' lvalue
    |     |     `-DeclRefExpr 0x2202bd825d0 <col:32> 'unsigned char [9]' lvalue Var 0x2202be30a30 'test_values_8' 'unsigned char [9]' non_odr_use_unevaluated
    |     |-UnaryOperator 0x2202bd826a0 <col:48, col:50> 'unsigned int' prefix '++'
    |     | `-DeclRefExpr 0x2202bd82680 <col:50> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |     `-CompoundStmt 0x2202bd82988 <col:53, line:258:9>
    |       |-BinaryOperator 0x2202bd82798 <line:255:13, col:32> 'unsigned char' '='
    |       | |-DeclRefExpr 0x2202bd826b8 <col:13> 'unsigned char' lvalue Var 0x2202be31d20 'f' 'unsigned char'
    |       | `-ImplicitCastExpr 0x2202bd82780 <col:17, col:32> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x2202bd82760 <col:17, col:32> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x2202bd82730 <col:17> 'unsigned char *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x2202bd826f0 <col:17> 'unsigned char [9]' lvalue Var 0x2202be30a30 'test_values_8' 'unsigned char [9]'
    |       |     `-ImplicitCastExpr 0x2202bd82748 <col:31> 'unsigned int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x2202bd82710 <col:31> 'unsigned int' lvalue Var 0x2202be31ab0 'j' 'unsigned int'
    |       |-CompoundAssignOperator 0x2202bd828e0 <line:256:13, col:45> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x2202bd827b8 <col:13> 'int' lvalue Var 0x2202be31dd0 'num_failed' 'int'
    |       | `-CallExpr 0x2202bd82880 <col:27, col:45> 'int'
    |       |   |-ImplicitCastExpr 0x2202bd82868 <col:27> 'int (*)(unsigned char, unsigned char)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x2202bd827d8 <col:27> 'int (unsigned char, unsigned char)' Function 0x2202bec4d70 'test_select_8' 'int (unsigned char, unsigned char)'
    |       |   |-ImplicitCastExpr 0x2202bd828b0 <col:41> 'unsigned char' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x2202bd827f8 <col:41> 'unsigned char' lvalue Var 0x2202be31ca0 'e' 'unsigned char'
    |       |   `-ImplicitCastExpr 0x2202bd828c8 <col:44> 'unsigned char' <LValueToRValue>
    |       |     `-DeclRefExpr 0x2202bd82818 <col:44> 'unsigned char' lvalue Var 0x2202be31d20 'f' 'unsigned char'
    |       `-CompoundAssignOperator 0x2202bd82958 <line:257:13, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x2202bd82910 <col:13> 'int' lvalue Var 0x2202be31e78 'num_all' 'int'
    |         `-IntegerLiteral 0x2202bd82930 <col:24> 'int' 1
    `-IfStmt 0x2202bd82fb0 <line:261:5, line:267:5> has_else
      |-UnaryOperator 0x2202bd82a78 <line:261:9, col:10> 'int' prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x2202bd82a60 <col:10> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x2202bd82a40 <col:10> 'int' lvalue Var 0x2202be31dd0 'num_failed' 'int'
      |-CompoundStmt 0x2202bd82d00 <col:22, line:264:5>
      | |-CallExpr 0x2202bd82c48 <line:262:9, col:60> 'int'
      | | |-ImplicitCastExpr 0x2202bd82c30 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
      | | | `-DeclRefExpr 0x2202bd82a90 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
      | | |-ParenExpr 0x2202bd82b68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
      | | | `-UnaryOperator 0x2202bd82b50 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
      | | |   `-ArraySubscriptExpr 0x2202bd82b30 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
      | | |     |-CallExpr 0x2202bd82ae8 <col:18, col:29> 'FILE *'
      | | |     | `-ImplicitCastExpr 0x2202bd82ad0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
      | | |     |   `-DeclRefExpr 0x2202bd82ab0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
      | | |     `-IntegerLiteral 0x2202bd82b08 <col:31> 'int' 1
      | | |-ImplicitCastExpr 0x2202bd82c98 <.//openssl//file_jk/after\test\constant_time_test.c:262:25> 'const char *' <NoOp>
      | | | `-ImplicitCastExpr 0x2202bd82c80 <col:25> 'char *' <ArrayToPointerDecay>
      | | |   `-StringLiteral 0x2202bd82bc8 <col:25> 'char [24]' lvalue "success (ran %d tests)\n"
      | | `-ImplicitCastExpr 0x2202bd82cb0 <col:53> 'int' <LValueToRValue>
      | |   `-DeclRefExpr 0x2202bd82bf8 <col:53> 'int' lvalue Var 0x2202be31e78 'num_all' 'int'
      | `-ReturnStmt 0x2202bd82cf0 <line:263:9, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:45:25>
      |   `-IntegerLiteral 0x2202bd82cc8 <col:25> 'int' 0
      `-CompoundStmt 0x2202bd82f90 <.//openssl//file_jk/after\test\constant_time_test.c:264:12, line:267:5>
        |-CallExpr 0x2202bd82eb8 <line:265:9, col:72> 'int'
        | |-ImplicitCastExpr 0x2202bd82ea0 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x2202bd82d20 <col:9> 'int (FILE *, const char *, ...)' Function 0x2202bd51160 'fprintf' 'int (FILE *, const char *, ...)'
        | |-ParenExpr 0x2202bd82df8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
        | | `-UnaryOperator 0x2202bd82de0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
        | |   `-ArraySubscriptExpr 0x2202bd82dc0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
        | |     |-CallExpr 0x2202bd82d78 <col:18, col:29> 'FILE *'
        | |     | `-ImplicitCastExpr 0x2202bd82d60 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
        | |     |   `-DeclRefExpr 0x2202bd82d40 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x2202bd4e6b8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
        | |     `-IntegerLiteral 0x2202bd82d98 <col:31> 'int' 1
        | |-ImplicitCastExpr 0x2202bd82f10 <.//openssl//file_jk/after\test\constant_time_test.c:265:25> 'const char *' <NoOp>
        | | `-ImplicitCastExpr 0x2202bd82ef8 <col:25> 'char *' <ArrayToPointerDecay>
        | |   `-StringLiteral 0x2202bd82e18 <col:25> 'char [24]' lvalue "%d of %d tests failed!\n"
        | |-ImplicitCastExpr 0x2202bd82f28 <col:53> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x2202bd82e48 <col:53> 'int' lvalue Var 0x2202be31dd0 'num_failed' 'int'
        | `-ImplicitCastExpr 0x2202bd82f40 <col:65> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x2202bd82e68 <col:65> 'int' lvalue Var 0x2202be31e78 'num_all' 'int'
        `-ReturnStmt 0x2202bd82f80 <line:266:9, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:46:25>
          `-IntegerLiteral 0x2202bd82f58 <col:25> 'int' 1
