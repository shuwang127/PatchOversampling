TranslationUnitDecl 0x1daeeda60a8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1daeeda6940 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1daeeda6640 '__int128'
|-TypedefDecl 0x1daeeda69b0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1daeeda6660 'unsigned __int128'
|-TypedefDecl 0x1daeeda6ce8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1daeeda6aa0 'struct __NSConstantString_tag'
|   `-Record 0x1daeeda6a08 '__NSConstantString_tag'
|-TypedefDecl 0x1daeeda6d58 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1daeeda6280 'unsigned long long'
|-TypedefDecl 0x1daeeda6df0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1daeeda6db0 'char *'
|   `-BuiltinType 0x1daeeda6140 'char'
|-TypedefDecl 0x1daeeda6e60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1daeeda6db0 'char *'
|   `-BuiltinType 0x1daeeda6140 'char'
|-TypedefDecl 0x1daeeda6f20 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1daeeda6280 'unsigned long long'
|-TypedefDecl 0x1daeeda6f90 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1daeeda6db0 'char *'
|   `-BuiltinType 0x1daeeda6140 'char'
|-FunctionDecl 0x1daf088a490 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1daf088a530 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1daf088a5a0 <col:21> Implicit
|-FunctionDecl 0x1daf088a5f8 prev 0x1daf088a490 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1daf088a320 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1daf088a6e8 <col:21> Inherited Implicit
|-TypedefDecl 0x1daf088a728 prev 0x1daeeda6d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1daeeda6280 'unsigned long long'
|-TypedefDecl 0x1daf088a7d0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1daf088a7a0 'size_t' sugar
|   |-Typedef 0x1daf088a728 'size_t'
|   `-BuiltinType 0x1daeeda6280 'unsigned long long'
|-TypedefDecl 0x1daf088a840 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1daeeda61e0 'long long'
|-TypedefDecl 0x1daf088a8b0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1daeeda61e0 'long long'
|-TypedefDecl 0x1daf088a920 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1daeeda6220 'unsigned short'
|-TypedefDecl 0x1daf088a990 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1daeeda6220 'unsigned short'
|-TypedefDecl 0x1daf088aa00 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1daeeda6220 'unsigned short'
|-TypedefDecl 0x1daf088aa70 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1daeeda61a0 'int'
|-TypedefDecl 0x1daf088aae0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1daeeda61c0 'long'
|-TypedefDecl 0x1daf088ab50 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1daeeda61e0 'long long'
|-TypedefDecl 0x1daf088abe0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1daf088abb0 '__time64_t' sugar
|   |-Typedef 0x1daf088ab50 '__time64_t'
|   `-BuiltinType 0x1daeeda61e0 'long long'
|-FunctionDecl 0x1daf088ad58 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1daf088af78 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1daf08afd80 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1daf088b0b8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1daf088b130 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1daf088b1a8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1daf088b228 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1daf08afb20 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1daf08afe60 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1daf08aff20 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1daf08b0090 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1daf08b0040 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1daf08affe0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1daf08aff00 'struct threadlocaleinfostruct'
|       `-Record 0x1daf08b8bb0 'threadlocaleinfostruct'
|-TypedefDecl 0x1daf08b01a0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1daf08b0150 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1daf08b00f0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1daf08affc0 'struct threadmbcinfostruct'
|       `-Record 0x1daf08aff20 'threadmbcinfostruct'
|-RecordDecl 0x1daf08b01f8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1daf08b02b0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1daf08b0370 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1daf08b0400 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1daf08b0490 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1daf08b0548 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1daf08b04f0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1daf08b0350 'struct localeinfo_struct'
|     `-Record 0x1daf08b02b0 'localeinfo_struct'
|-TypedefDecl 0x1daf08b0620 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1daf08b05d0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1daf08b04f0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1daf08b0350 'struct localeinfo_struct'
|       `-Record 0x1daf08b02b0 'localeinfo_struct'
|-RecordDecl 0x1daf08b0698 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1daf08b0750 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1daf08b07c8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1daf08b0888 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1daf08b0920 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1daf08b0990 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1daf08b0a48 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1daf08b09f0 'struct localerefcount' sugar
|   `-RecordType 0x1daf08b0730 'struct localerefcount'
|     `-Record 0x1daf08b0698 'localerefcount'
|-RecordDecl 0x1daf08b8bb0 prev 0x1daf08afe60 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1daf08b8c30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1daf08b8ca8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1daf08b8d18 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1daf08b8d88 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1daf08b8df8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1daf08b8fb8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1daf08b9028 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1daf08b9098 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1daf08b9108 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1daf08b9178 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1daf08b91e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1daf08b9240 parent 0x1daeeda60a8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1daf08b93d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1daf08b9440 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1daf08b94b0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1daf08b9520 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1daf08b95c0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1daf08b9630 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1daf08b9740 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1daf08b9878 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1daf08b9928 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1daf08b98d0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1daf08aff00 'struct threadlocaleinfostruct'
|     `-Record 0x1daf08b8bb0 'threadlocaleinfostruct'
|-RecordDecl 0x1daf08b99c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1daf08b9a80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1daf08b9af8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1daf08bfc20 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1daf08bfc90 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1daf08bfd00 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1daf08bfd70 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1daf08bfde0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1daf08bfe50 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1daf08bfec0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1daf08bff70 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1daf08bff20 'struct _iobuf' sugar
|   `-RecordType 0x1daf08b9a60 'struct _iobuf'
|     `-Record 0x1daf08b99c0 '_iobuf'
|-FunctionDecl 0x1daf08c01a8 <line:137:9, col:39> col:24 used __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1daf08c0278 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1daeeda61e0 'long long'
|-FunctionDecl 0x1daf08c0458 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf08c02e0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1daf08c0750 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1daf08c0530 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1daf08c05a8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1daf08c0b00 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1daf08c0830 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1daf08c08b0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1daf08c0930 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1daf08bdd70 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1daf08bdc00 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1daf08bdfa0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1daf08bde60 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1daf08be150 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf08be070 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1daf08be340 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1daf08be638 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1daf08be410 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1daf08be490 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1daf08be7f0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf08be710 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1daf08be9a0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf08be8c0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1daf08beb50 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf08bea70 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1daf08bed18 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf08bec38 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1daf08beea8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1daf08bf210 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1daf08bef70 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1daf08bf068 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1daf08bf5c8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1daf08bf2f0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1daf08bf370 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1daf08bf3e8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1daf08bf788 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf08bf6a8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1daf08bfa50 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1daf08bf860 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1daf08bf8e0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1daf08c3c60 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1daf08c4058 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1daf08c40f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1daf08c4160 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1daf08c41d8 prev 0x1daf08c4058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1daf08c3e30 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1daf08c3eb0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1daf08c4288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf08c4700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1daf08c4430 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1daf08c44b0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1daf08c4530 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1daf08c4a20 <line:215:40> col:40 implicit used fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1daf08c4ac0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1daf08c4b28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1daf08c4ba0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1daf08c7ca0 prev 0x1daf08c4a20 <col:28, col:125> col:40 used fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1daf08c47e0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1daf08c4860 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1daf08c7d98 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1daf08c7f60 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1daf08c7de0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1daf08c7e60 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1daf08c81b8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1daf08c8040 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1daf08c80b8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1daf08c83e8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1daf08c8298 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1daf08c86e0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1daf08c84c0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1daf08c8538 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1daf08c8b78 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1daf08c8c18 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1daf08c4c70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1daf08c4cd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1daf08c4d40 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1daf08c4dc8 prev 0x1daf08c8b78 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1daf08c87c0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1daf08c8838 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf08c88b0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf08c8928 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1daf08c52d0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1daf08c4eb8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1daf08c4f30 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf08c4fa8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf08c5020 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf08c5098 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1daf08c5790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1daf08c54c0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1daf08c5540 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1daf08c55b8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1daf08c5848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf08c6d38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1daf08c5990 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1daf08c5a10 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1daf08c5a90 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1daf08c5b08 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1daf08c70e0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1daf08c7180 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1daf08c71e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1daf08c7260 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1daf08c72c8 prev 0x1daf08c70e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1daf08c6f18 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1daf08c6f98 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1daf08c74a8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1daf08c7378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf08c78e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf08c75e8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1daf08c7668 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1daf08c7700 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf08c79a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf08c1c40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1daf08c7ae0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1daf08c7b60 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1daf08c1f30 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf08c1d18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1daf08c1d98 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1daf08c1e10 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf08c2290 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1daf08c2010 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1daf08c20e8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1daf08c2648 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1daf08c2368 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1daf08c23e8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1daf08c2468 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1daf08c28a8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1daf08c2728 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1daf0917fa8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1daf08c2978 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1daf08c29f8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1daf08c2a78 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1daf0918208 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1daf0918088 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1daf09186c8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1daf0918768 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1daf09187d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1daf0918838 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1daf09188a0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1daf0918928 prev 0x1daf09186c8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1daf0918310 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1daf0918388 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0918400 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0918478 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1daf0918af0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf0918a10 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1daf0918c80 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1daf0918e08 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1daf0919130 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1daf0918ed8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1daf0918f80 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1daf0919458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1daf0919310 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1daf0919500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0919720 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf0919640 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1daf0919940 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1daf09197f8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1daf0919af0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf0919a10 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1daf0919d40 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1daf0919bc8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1daf0919c48 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1daf0911f00 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1daf0911fa0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1daf0912010 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1daf0912078 prev 0x1daf0911f00 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1daf0919e20 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1daf0912168 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1daf0912298 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1daf09121b8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1daf09124e8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1daf0912370 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1daf09123e8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1daf09126a8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1daf09125c8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1daf09128c8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1daf0912780 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1daf0912b18 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1daf09129a0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1daf0912a18 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1daf0912cd8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1daf0912bf8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1daf0913ff0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1daf0912db0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1daf0912e30 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1daf09141b0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1daf09140d0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1daf0914440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1daf0914360 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1daf09144e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1daf09146e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1daf0914608 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1daf0914870 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1daf0914b18 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1daf0914bb8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1daf0914c28 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1daf0914c90 prev 0x1daf0914b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1daf0914a00 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1daf0914e68 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1daf0914d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0915240 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0915008 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1daf0915080 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf09152f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0915518 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1daf0915438 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1daf0915768 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf09155f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1daf0915668 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0915b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1daf0915900 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1daf0915980 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1daf0915bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0915e00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1daf0915d20 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1daf0913058 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1daf0912f10 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1daf0913240 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1daf0913690 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1daf0913308 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1daf0913388 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1daf0913408 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1daf0913480 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf0913b10 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1daf0913780 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf09137f8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0913870 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf09138f0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1daf091af90 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1daf0913c00 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0913c78 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0913cf8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1daf091b158 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1daf091b078 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1daf091b530 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1daf091b5d0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1daf091b638 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1daf091b6b0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1daf091b718 prev 0x1daf091b530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1daf091b2f0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1daf091b370 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1daf091b8f8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1daf091b7c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf091bce8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf091ba08 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1daf091ba88 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1daf091bb00 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf091bda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf091c0a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1daf091bee8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1daf091bfa0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1daf091c398 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf091c180 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1daf091c200 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1daf091c278 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf091c828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1daf091c540 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1daf091c5b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf091c638 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1daf091c8e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf091ceb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf091cb20 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1daf091cb98 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf091cc18 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1daf091cc90 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf091cfb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf091d310 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1daf091d0f8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1daf091d170 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf091d1f0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1daf091d6a8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf091d3f8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1daf091d470 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf091d4f0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1daf091d568 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf091d908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1daf091d9a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf091dc60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1daf091daf0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1daf0915f40 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1daf091dd38 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1daf091ddb0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1daf09161c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1daf09160e0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1daf0916268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0916528 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1daf09163b0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1daf0916428 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1daf0916940 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1daf09169e0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1daf0916a48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1daf0916ab0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1daf0916b30 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1daf0916b98 prev 0x1daf0916940 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1daf0916600 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1daf0916680 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1daf09166f8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1daf0916c98 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1daf091efd0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1daf091f070 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1daf091f0d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1daf091f140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1daf091f1c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1daf091f228 prev 0x1daf091efd0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1daf0916ce0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1daf0916d60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1daf0916dd8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1daf091f328 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1daf091f588 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1daf091f370 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1daf091f3f0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1daf091f468 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf091f880 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1daf091f668 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1daf091f6e8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1daf091f760 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf091fbc8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1daf091fc68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1daf091fcd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1daf091fd48 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1daf091fdb0 prev 0x1daf091fbc8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1daf091f968 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1daf091f9e0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1daf091fea8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1daf0925168 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1daf0925208 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1daf0925270 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1daf09252e8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1daf0925350 prev 0x1daf0925168 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1daf091fef8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1daf0925030 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1daf0925448 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1daf0925610 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1daf0925498 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1daf0925510 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0925868 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1daf09256f0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1daf0925768 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0925dc8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1daf0925e68 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1daf0925ed0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1daf0925f38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1daf0925fa0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1daf091dfc0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1daf091e028 prev 0x1daf0925dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1daf0925a08 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0925a80 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0925b00 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1daf0925b78 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1daf091e218 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1daf091e0e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf091e688 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1daf091e268 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf091e2e0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf091e358 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf091e3d8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1daf091e450 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf091eac8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1daf091e780 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf091e7f8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf091e870 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf091e8f0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1daf091e968 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf091ee98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1daf091ec80 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1daf091ecf8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf091ed78 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1daf091ef50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0920450 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1daf09201a0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1daf0920218 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0920298 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1daf0920310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1daf0920510 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0920908 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1daf0920658 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf09206d0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0920750 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1daf09207c8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0920cc8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1daf09209f8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1daf0920a78 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1daf0920af0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf09220a0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1daf0922140 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1daf09221a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1daf0922220 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1daf0922288 prev 0x1daf09220a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1daf0920e70 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1daf0920ef0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1daf0922468 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1daf0922338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0922890 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1daf0922930 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1daf0922998 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1daf0922a00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1daf0922a80 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1daf0922ae8 prev 0x1daf0922890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1daf0922578 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1daf09225f8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1daf0922670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1daf0922cd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1daf0922ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0920ff0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1daf0921090 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1daf09210f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1daf0921160 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1daf09211e0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1daf0921248 prev 0x1daf0920ff0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1daf0922d20 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1daf0922da0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1daf0922e18 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1daf0921348 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1daf0921510 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1daf0921398 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1daf0921410 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0921808 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1daf09215f0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0921668 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf09216e8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1daf0921ba0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1daf09218f0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0921968 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf09219e8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1daf0921a60 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0921e08 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1daf0921c88 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1daf0921d08 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1daf0926040 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1daf0921ee8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1daf0926330 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1daf0926118 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1daf0926190 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0926210 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1daf0926628 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1daf0926410 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1daf0926490 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1daf0926508 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0926888 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1daf0926710 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1daf0926788 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0926c18 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1daf0926968 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1daf09269e0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0926a60 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1daf0926ad8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0926de8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1daf0926d08 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1daf0927050 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1daf0926ec0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1daf0926f38 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0927210 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1daf0927130 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1daf09273a0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1daf09275e8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0927470 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1daf09274e8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0927840 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf09276c8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1daf0927740 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0927a98 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0927920 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1daf0927998 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0927e48 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0927b78 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1daf0927bf0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0927c68 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0928180 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0927f30 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1daf0927fa8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0928060 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0928478 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0928268 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1daf09282e0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0928358 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0928770 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0928558 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1daf09285d8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1daf0928650 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0928a68 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0928850 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1daf09288d0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1daf0928948 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0928d60 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0928b48 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1daf0928bc8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1daf0928c40 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09291d0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0928e40 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1daf0928ec0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1daf0928f38 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0928fb0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0929568 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf09292b8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1daf0929338 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1daf09293b0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0929428 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0929900 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0929650 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1daf09296d0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1daf0929748 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf09297c0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0929d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0929ab0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0929b30 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1daf0929ba8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf0929e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf092a390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0929f98 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf092a080 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf092a100 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1daf092a178 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf092a730 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf092a480 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf092a4f8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf092a578 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1daf092a5f0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf092ac80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf092a920 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf092a9a0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1daf092aa18 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1daf092aa90 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1daf092ad40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0923248 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf092ae88 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf092af00 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf092af80 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1daf092aff8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0923010 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0923688 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0923340 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf09233b8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0923438 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1daf09234b0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0923528 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf09238f8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0923780 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1daf09237f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0923b50 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf09239d8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1daf0923a50 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0923e40 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0923c30 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1daf0923ca8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0923d20 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf092b1c0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0923f28 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1daf0923fa0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf092b0a0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf092b618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf092b368 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf092b3e0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf092b460 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1daf092b4d8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf092b6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf092bad0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf092b820 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf092b898 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf092b918 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1daf092b990 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0924020 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf092bbc0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf092bc38 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf092bcb0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf092bd30 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1daf092bda8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0924560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0924218 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0924290 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0924310 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1daf0924388 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1daf0924400 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1daf0924628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0924aa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0924778 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf09247f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0924870 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1daf09248e8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0924960 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf092c100 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0924ba0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0924c18 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0924c90 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0924d10 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1daf0924d88 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0924e00 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf092c4c0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1daf092c1f8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1daf092c270 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1daf092c2f0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1daf092c730 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1daf092c5c0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1daf092c948 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1daf092cc28 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1daf092ca10 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1daf092ca88 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1daf092ce70 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1daf092cd00 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1daf09300e0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1daf092cf40 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1daf0930268 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1daf09304a0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1daf0930330 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1daf09303a8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1daf0930650 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1daf0930578 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1daf09308f8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1daf0930720 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1daf0930798 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1daf0930ca0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1daf09309d0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1daf0930a50 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1daf0930ac8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1daf0930fa0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1daf0930d80 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1daf0930df8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1daf092e278 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1daf0931078 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1daf092e0d0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf092e580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1daf092e410 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1daf092e628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf092e8e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1daf092e768 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1daf092ebf0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf092e9b8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1daf092ea30 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf092ee40 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf092ecc8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1daf092ed40 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf0938a20 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1daf092ef18 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf0938bd0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1daf0938af0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf0938d80 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1daf0938ca0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf0939118 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0938e50 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1daf0938ec8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0938f40 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0939408 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf09391f8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1daf0939270 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09392e8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf09396f8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf09394e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1daf0939560 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09395d8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0936a00 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf09397d8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1daf0939850 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09398c8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0936d00 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0936ae0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0936b58 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0936f50 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0936dd8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0936e50 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf09371a0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0937028 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09370a0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf09373f0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0937278 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09372f0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf09377a8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf09374c8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1daf0937540 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf09375b8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf0934bf0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0937888 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1daf0937900 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0937978 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09349e0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0934fa8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0934cd8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1daf0934d50 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0934dc8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0935298 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0935088 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1daf0935100 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0935178 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0935588 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0935378 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf09353f0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0935468 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf0935910 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0935668 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf09356e0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0935758 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09357d0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0935da0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0935a18 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0935a90 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0935b08 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0935b80 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf09362a8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0935e88 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0935f00 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0935f78 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0935ff0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0936068 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0936668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0936458 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf09364d0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0936548 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1daf0936720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0939c60 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0936920 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf0939a30 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0939aa8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0939b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1daf0939d20 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0939fd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0939e60 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1daf0939ed8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf093a190 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1daf093a0b0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf093a470 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf093a260 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1daf093a2d8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf093a350 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf093a6c8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf093a550 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf093a5c8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0937a10 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf093a7a0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf093a818 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf093a890 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf0937d98 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0937af0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0937b68 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0937be0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0937c58 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0937f60 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1daf0937e80 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf09381a8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf0938030 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09380a8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf09384b0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0938280 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09382f8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0938700 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0938588 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0938600 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0938950 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf09387d8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0938850 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0932cb8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf09329e8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0932a60 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0932ad8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0932fa8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0932d98 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0932e10 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0932e88 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0933298 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0933088 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0933100 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0933178 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0933658 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0933378 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1daf09333f0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0933468 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf093aa40 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0933738 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1daf09337b0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0933828 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf093ad30 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf093ab20 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1daf093ab98 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf093ac10 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf093b180 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf093ae10 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1daf093ae88 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf093af00 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf093af78 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf093b510 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf093b268 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1daf093b2e0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf093b358 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf093b3d0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf093b8a0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf093b5f8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1daf093b670 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf093b6e8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf093b760 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0933ce0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf093b988 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf09339d0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0933a48 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0933ac0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0934070 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0933dc8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0933e40 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0933eb8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0933f30 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0934400 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0934158 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf09341d0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0934248 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09342c0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0934908 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf09344e8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0934560 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf09345d8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0934650 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf09346c8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0942e28 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0942ae8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0942b60 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0942bd8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0942c50 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0942cc8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0943258 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0942f18 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0942f90 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0943008 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0943080 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf09430f8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf09434c0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0943348 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09433c0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0943710 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0943598 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0943610 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09439f8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf09437e8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0943860 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf09438d8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0941e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0941ba0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0941c18 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0941c90 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0941d08 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf0941f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0942478 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0942050 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf09420c8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0942140 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf09421b8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0942230 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09429b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0942670 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf09426e8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0942760 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf09427d8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1daf0942850 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1daf093ba50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf093c060 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf093bb98 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf093bc10 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf093bc88 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf093bd00 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf093bd78 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf093bdf0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf093c560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf093c328 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf093c3a0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1daf093c610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1daf093c728 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1daf0943d38 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf093c9e0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf0943ae0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0943b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1daf0943df0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1daf0943f08 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1daf09444a8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf09441c8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf0944240 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf09442b8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1daf0944560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1daf0944680 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1daf093cc70 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0944940 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf09449b8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0944a30 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1daf093ca60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1daf093cd30 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1daf093ce50 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1daf093d158 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1daf093cf78 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1daf093cff0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf093d068 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1daf0945d90 <line:37:1, line:44:1>
|   |-DeclStmt 0x1daf093d2a0 <line:38:5, col:21>
|   | `-VarDecl 0x1daf093d238 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1daf093d338 <line:39:5, col:13>
|   | `-VarDecl 0x1daf093d2d0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1daf093d690 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1daf093d678 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1daf093d590 <col:34> '<builtin fn type>' Function 0x1daf093d428 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1daf093d5c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1daf093d238 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1daf093d600 <col:29> 'const wchar_t *' lvalue ParmVar 0x1daf093d068 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1daf093d950 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1daf093d6c0 <col:5> 'int' lvalue Var 0x1daf093d2d0 '_Ret' 'int'
|   | `-CallExpr 0x1daf093d890 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1daf093d878 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1daf093d6f8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1daf0934908 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1daf093d8d8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1daf093d718 <col:27> 'wchar_t *' lvalue ParmVar 0x1daf093cf78 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1daf093d8f0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1daf093d738 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1daf093cff0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1daf093d908 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1daf093d758 <col:44> 'const wchar_t *' lvalue ParmVar 0x1daf093d068 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1daf093d920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1daf093d7e0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1daf093d7b8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1daf093d778 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1daf093d938 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1daf093d800 <col:59> 'va_list':'char *' lvalue Var 0x1daf093d238 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1daf0945d20 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1daf0945d08 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1daf0945c58 <col:34> '<builtin fn type>' Function 0x1daf0945af0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1daf0945c90 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1daf093d238 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1daf0945d80 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1daf0945d68 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1daf0945d48 <col:12> 'int' lvalue Var 0x1daf093d2d0 '_Ret' 'int'
|-FunctionDecl 0x1daf093d428 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1daf093d4c8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1daf093d538 <col:34> Implicit
|-FunctionDecl 0x1daf0945af0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1daf0945b90 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1daf0945c00 <col:34> Implicit
|-FunctionDecl 0x1daf0946088 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1daf0945de0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1daf0945e58 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0945ed0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0945f48 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1daf0946370 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1daf0946360 <line:51:5, col:62>
|     `-CallExpr 0x1daf09462a0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1daf0946288 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1daf0946160 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1daf0934908 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1daf09462e8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1daf0946180 <col:27> 'wchar_t *' lvalue ParmVar 0x1daf0945de0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1daf0946300 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1daf09461a0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1daf0945e58 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1daf0946318 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1daf09461c0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1daf0945ed0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1daf0946330 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1daf0946248 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1daf0946220 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1daf09461e0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1daf0946348 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1daf0946268 <col:59> 'va_list':'char *' lvalue ParmVar 0x1daf0945f48 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1daf0946610 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1daf0946398 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1daf0946410 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0946488 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0946500 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1daf0944b88 <line:61:1, line:68:1>
|   |-DeclStmt 0x1daf0946760 <line:62:5, col:21>
|   | `-VarDecl 0x1daf09466f8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1daf09467f8 <line:63:5, col:13>
|   | `-VarDecl 0x1daf0946790 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1daf09468a0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1daf0946888 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1daf0946810 <col:34> '<builtin fn type>' Function 0x1daf093d428 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1daf0946830 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1daf09466f8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1daf0946868 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1daf0946500 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1daf0946aa0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1daf09468d0 <col:5> 'int' lvalue Var 0x1daf0946790 '_Ret' 'int'
|   | `-CallExpr 0x1daf09469e0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1daf09469c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1daf0946908 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1daf0934908 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1daf0946a28 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1daf0946928 <col:27> 'wchar_t *' lvalue ParmVar 0x1daf0946398 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1daf0946a40 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1daf0946948 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1daf0946410 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1daf0946a58 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1daf0946968 <col:44> 'const wchar_t *' lvalue ParmVar 0x1daf0946488 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1daf0946a70 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1daf0946988 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1daf0946500 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1daf0946a88 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1daf09469a8 <col:64> 'va_list':'char *' lvalue Var 0x1daf09466f8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1daf0944b18 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1daf0944b00 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1daf0946ac0 <col:34> '<builtin fn type>' Function 0x1daf0945af0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1daf0944ae0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1daf09466f8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1daf0944b78 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1daf0944b60 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1daf0944b40 <col:12> 'int' lvalue Var 0x1daf0946790 '_Ret' 'int'
|-FunctionDecl 0x1daf0944f18 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1daf0944bd8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1daf0944c50 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0944cc8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0944d40 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1daf0944db8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1daf09451a0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1daf0945190 <line:75:5, col:67>
|     `-CallExpr 0x1daf09450d0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1daf09450b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1daf0944ff8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1daf0934908 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1daf0945118 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1daf0945018 <col:27> 'wchar_t *' lvalue ParmVar 0x1daf0944bd8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1daf0945130 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1daf0945038 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1daf0944c50 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1daf0945148 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1daf0945058 <col:44> 'const wchar_t *' lvalue ParmVar 0x1daf0944cc8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1daf0945160 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1daf0945078 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1daf0944d40 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1daf0945178 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1daf0945098 <col:64> 'va_list':'char *' lvalue ParmVar 0x1daf0944db8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1daf09453e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1daf09451c8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1daf0945240 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1daf0945638 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1daf09454c0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0945538 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0945920 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1daf0945710 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0945788 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1daf0945800 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1daf0946c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0946b00 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1daf0946b78 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1daf0946d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0947138 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0946f28 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1daf0946fa0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0947018 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf09471f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09474a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0947330 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1daf09473a8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf0947790 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0947580 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1daf09475f8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0947670 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf093fb00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0947930 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1daf09479a8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1daf093fbb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0940088 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf093fdb0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1daf093fe28 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf093fea0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf0940140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09403f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0940280 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1daf09402f8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf09406e0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf09404d0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1daf0940548 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf09405c0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0947bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0940880 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1daf09408f8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0940970 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1daf0947cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0948230 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0947eb0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1daf0947f28 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0947fa0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0948018 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf09482f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0948640 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0948430 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1daf09484a8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0948520 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf09489c8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0948720 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1daf0948798 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0948810 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0948888 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0940c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1daf0940b70 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1daf0940cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0941070 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0940ef8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1daf0940f70 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf0941120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0941340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1daf0941260 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1daf0941588 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1daf0941410 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1daf0941488 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0941888 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1daf0941668 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1daf09416e0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1daf094dd18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1daf0941a20 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1daf094db70 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1daf094ddc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf094e1d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1daf094df10 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1daf094df88 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1daf094e000 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1daf094e630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1daf094e370 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1daf094e3e8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1daf094e460 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1daf094e6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf094ab88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1daf094e830 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1daf094e8a8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1daf094e920 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1daf094e998 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1daf094ade0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1daf094ac70 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1daf094b020 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1daf094aeb0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1daf094af28 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1daf094b1d8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1daf094b0f8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1daf094b4c8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1daf094b2a8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1daf094b320 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf094b738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1daf094b660 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1daf094b7e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf094b9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1daf094b920 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1daf094ec78 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1daf094bac8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1daf094eb80 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1daf094eec0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1daf094ed50 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1daf094edc8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1daf094f070 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1daf094ef98 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1daf094f218 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1daf094f140 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1daf094f3c8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf094f2e8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1daf094f578 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1daf094f498 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1daf094f8f0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1daf094f650 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1daf094f6c8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf094f740 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf094f7b8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1daf094fd60 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1daf094f9e0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1daf094fa58 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf094fad0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf094fb90 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf094fc08 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1daf0950070 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1daf094fe50 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1daf094fed0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1daf094ff50 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1daf0950230 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1daf0950150 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1daf0950520 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1daf0950300 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1daf0950380 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1daf0950400 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1daf09506e0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1daf0950600 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1daf0950a58 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1daf09507b8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1daf0950830 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf09508a8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0950920 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1daf094ccd8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1daf094cb60 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1daf094cbd8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1daf094d010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1daf094ce90 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1daf094cf10 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1daf094d0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1daf094d378 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1daf094d418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1daf094d758 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1daf094d5e0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1daf094d660 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1daf094d808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1daf0948b20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1daf0948bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1daf0948e60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1daf0948d80 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1daf0948f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1daf0949188 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1daf0949228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1daf09494d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1daf09493f0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1daf0949578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1daf0949858 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1daf0949778 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1daf0949900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1daf0950d18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1daf0950ba0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1daf0950c18 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1daf0950dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1daf0951088 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1daf0951128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x1daf09513f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1daf0951390 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1daf0951330 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1daf09512e0 'int (void)' sugar
|     | `-FunctionProtoType 0x1daf08be290 'int (void)' cdecl
|     |   `-BuiltinType 0x1daeeda61a0 'int'
|     `-ParenType 0x1daf09512e0 'int (void)' sugar
|       `-FunctionProtoType 0x1daf08be290 'int (void)' cdecl
|         `-BuiltinType 0x1daeeda61a0 'int'
|-RecordDecl 0x1daf0951450 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x1daf0951510 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1daf0951588 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x1daf09515f8 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x1daf09516a8 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x1daf0951650 'struct _div_t' sugar
|   `-RecordType 0x1daf09514f0 'struct _div_t'
|     `-Record 0x1daf0951450 '_div_t'
|-RecordDecl 0x1daf0951718 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x1daf09517d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1daf0951848 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x1daf09518b8 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x1daf0951968 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x1daf0951910 'struct _ldiv_t' sugar
|   `-RecordType 0x1daf09517b0 'struct _ldiv_t'
|     `-Record 0x1daf0951718 '_ldiv_t'
|-RecordDecl 0x1daf09519d8 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x1daf0951a90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1daf0951b08 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x1daf095d000 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x1daf095d0b8 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x1daf095d060 'struct _lldiv_t' sugar
|   `-RecordType 0x1daf0951a70 'struct _lldiv_t'
|     `-Record 0x1daf09519d8 '_lldiv_t'
|-RecordDecl 0x1daf095d150 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x1daf095d210 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1daf095d310 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x1daf095d3c8 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x1daf095d370 'struct _LDOUBLE' sugar
|   `-RecordType 0x1daf095d1f0 '_LDOUBLE'
|     `-Record 0x1daf095d150 ''
|-RecordDecl 0x1daf095d438 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x1daf095d508 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x1daf095d5b8 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x1daf095d560 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x1daf095d4d0 '_CRT_DOUBLE'
|     `-Record 0x1daf095d438 ''
|-RecordDecl 0x1daf095d628 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x1daf095d6f8 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x1daf095d7a8 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x1daf095d750 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x1daf095d6c0 '_CRT_FLOAT'
|     `-Record 0x1daf095d628 ''
|-RecordDecl 0x1daf095d818 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x1daf095d8e8 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x1daf095d998 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x1daf095d940 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x1daf095d8b0 '_LONGDOUBLE'
|     `-Record 0x1daf095d818 ''
|-RecordDecl 0x1daf095da30 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x1daf095daf0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1daf095dbf0 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x1daf095dca8 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x1daf095dc50 'struct _LDBL12' sugar
|   `-RecordType 0x1daf095dad0 '_LDBL12'
|     `-Record 0x1daf095da30 ''
|-VarDecl 0x1daf095dd30 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1daf095de80 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1daf0962118 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1daf095df48 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x1daf0962360 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1daf0962300 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1daf09622a0 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1daf0962250 'void (void)' sugar
|     | `-FunctionProtoType 0x1daf088acb0 'void (void)' cdecl
|     |   `-BuiltinType 0x1daeeda6100 'void'
|     `-ParenType 0x1daf0962250 'void (void)' sugar
|       `-FunctionProtoType 0x1daf088acb0 'void (void)' cdecl
|         `-BuiltinType 0x1daeeda6100 'void'
|-FunctionDecl 0x1daf0962560 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x1daf09623f0 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1daf0962778 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x1daf0962bc8 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x1daf0962b40 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x1daf0962ae0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x1daf0962a90 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x1daf08afbe0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x1daeeda6100 'void'
|     |   |-PointerType 0x1daf088b080 'const wchar_t *'
|     |   | `-QualType 0x1daf088b031 'const wchar_t' const
|     |   |   `-TypedefType 0x1daf088b030 'wchar_t' sugar
|     |   |     |-Typedef 0x1daf088a920 'wchar_t'
|     |   |     `-BuiltinType 0x1daeeda6220 'unsigned short'
|     |   |-PointerType 0x1daf088b080 'const wchar_t *'
|     |   | `-QualType 0x1daf088b031 'const wchar_t' const
|     |   |   `-TypedefType 0x1daf088b030 'wchar_t' sugar
|     |   |     |-Typedef 0x1daf088a920 'wchar_t'
|     |   |     `-BuiltinType 0x1daeeda6220 'unsigned short'
|     |   |-PointerType 0x1daf088b080 'const wchar_t *'
|     |   | `-QualType 0x1daf088b031 'const wchar_t' const
|     |   |   `-TypedefType 0x1daf088b030 'wchar_t' sugar
|     |   |     |-Typedef 0x1daf088a920 'wchar_t'
|     |   |     `-BuiltinType 0x1daeeda6220 'unsigned short'
|     |   |-BuiltinType 0x1daeeda6240 'unsigned int'
|     |   `-TypedefType 0x1daf088b290 'uintptr_t' sugar
|     |     |-Typedef 0x1daeeda6f20 'uintptr_t'
|     |     `-BuiltinType 0x1daeeda6280 'unsigned long long'
|     `-ParenType 0x1daf0962a90 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x1daf08afbe0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x1daeeda6100 'void'
|         |-PointerType 0x1daf088b080 'const wchar_t *'
|         | `-QualType 0x1daf088b031 'const wchar_t' const
|         |   `-TypedefType 0x1daf088b030 'wchar_t' sugar
|         |     |-Typedef 0x1daf088a920 'wchar_t'
|         |     `-BuiltinType 0x1daeeda6220 'unsigned short'
|         |-PointerType 0x1daf088b080 'const wchar_t *'
|         | `-QualType 0x1daf088b031 'const wchar_t' const
|         |   `-TypedefType 0x1daf088b030 'wchar_t' sugar
|         |     |-Typedef 0x1daf088a920 'wchar_t'
|         |     `-BuiltinType 0x1daeeda6220 'unsigned short'
|         |-PointerType 0x1daf088b080 'const wchar_t *'
|         | `-QualType 0x1daf088b031 'const wchar_t' const
|         |   `-TypedefType 0x1daf088b030 'wchar_t' sugar
|         |     |-Typedef 0x1daf088a920 'wchar_t'
|         |     `-BuiltinType 0x1daeeda6220 'unsigned short'
|         |-BuiltinType 0x1daeeda6240 'unsigned int'
|         `-TypedefType 0x1daf088b290 'uintptr_t' sugar
|           |-Typedef 0x1daeeda6f20 'uintptr_t'
|           `-BuiltinType 0x1daeeda6280 'unsigned long long'
|-FunctionDecl 0x1daf0962dc0 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x1daf0962c50 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x1daf0960030 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x1daf0960210 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1daf0960420 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1daf09602e0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1daf0960670 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1daf09604f8 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1daf0960890 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x1daf0960ad0 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x1daf0960960 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x1daf0960d20 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x1daf0960ba8 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x1daf0961040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1daf09610e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09613a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1daf0961440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1daf0961588 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x1daf0961620 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x1daf0961710 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x1daf09617a8 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x1daf0961840 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x1daf0961998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x1daf0961a00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1daf0961c00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x1daf0961c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0961f20 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x1daf0961db0 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x1daf095b150 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x1daf095afe0 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x1daf095b2e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x1daf095b350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf095b570 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1daf095b498 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x1daf095b720 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1daf095b648 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x1daf095b970 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1daf095ba10 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1daf095ba80 prev 0x1daf095b970 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1daf095b7f8 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x1daf095bc30 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1daf095bcd0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1daf095bd40 prev 0x1daf095bc30 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1daf095bb58 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x1daf095bec8 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x1daf0965080 prev 0x1daf095bec8 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1daf0965340 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1daf0965150 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x1daf09651d0 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x1daf0965500 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x1daf09655a0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1daf0965610 <col:19> Implicit
| `-ConstAttr 0x1daf0965668 <col:19> Implicit
|-FunctionDecl 0x1daf0965690 prev 0x1daf0965500 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x1daf0965420 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x1daf0965780 <col:19> Inherited Implicit
| `-ConstAttr 0x1daf09657a8 <col:19> Inherited Implicit
|-FunctionDecl 0x1daf0965938 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x1daf09659d8 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x1daf0965a48 <col:19> Implicit
| `-ConstAttr 0x1daf0965aa0 <col:19> Implicit
|-FunctionDecl 0x1daf0965ac8 prev 0x1daf0965938 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x1daf09657e8 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x1daf0965bb8 <col:19> Inherited Implicit
| `-ConstAttr 0x1daf0965be0 <col:19> Inherited Implicit
|-FunctionDecl 0x1daf0965d68 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x1daf0965e08 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x1daf0965e78 <col:19> Implicit
| `-ConstAttr 0x1daf0965ed0 <col:19> Implicit
|-FunctionDecl 0x1daf0965ef8 prev 0x1daf0965d68 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x1daf0965c20 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x1daf0965fe8 <col:19> Inherited Implicit
| `-ConstAttr 0x1daf0966010 <col:19> Inherited Implicit
|-FunctionDecl 0x1daf0964138 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x1daf0964070 <col:35> col:42 'long long'
|-FunctionDecl 0x1daf0964438 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x1daf09642d0 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1daf0964658 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x1daf0964510 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x1daf0964950 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x1daf0964730 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x1daf09647a8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0964b10 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1daf0964a30 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x1daf0964e10 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x1daf0964be8 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1daf0964c60 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0966090 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x1daf0964ef0 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x1daf0966390 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x1daf0966168 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1daf09661e0 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09665b8 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1daf0966470 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x1daf09668b0 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1daf0966690 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1daf0966708 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09671b0 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1daf0966990 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x1daf0966a10 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x1daf0966a88 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0966b00 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0966e60 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1daf0966ee0 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x1daf0967938 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1daf09672b0 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x1daf0967330 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x1daf09673a8 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0967420 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf09676f8 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1daf09680b0 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1daf0967a30 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x1daf0967aa8 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0967b20 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0967d88 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1daf0967e08 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x1daf0968678 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1daf09681a8 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x1daf0968220 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0968298 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0968478 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1daf0968878 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x1daf0968918 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x1daf0968988 <col:47> Implicit
| `-ConstAttr 0x1daf09689e0 <col:47> Implicit
|-FunctionDecl 0x1daf0968a08 prev 0x1daf0968878 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x1daf0968768 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x1daf0968af8 <col:47> Inherited Implicit
| `-ConstAttr 0x1daf0968b20 <col:47> Inherited Implicit
|-FunctionDecl 0x1daf0968ca8 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x1daf0968d48 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x1daf0968db8 <col:47> Implicit
| `-ConstAttr 0x1daf0968e10 <col:47> Implicit
|-FunctionDecl 0x1daf0968e38 prev 0x1daf0968ca8 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x1daf0968b60 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x1daf0968f28 <col:47> Inherited Implicit
| `-ConstAttr 0x1daf0968f50 <col:47> Inherited Implicit
|-FunctionDecl 0x1daf096a108 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x1daf096a1a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x1daf096a218 <col:49> Implicit
| `-ConstAttr 0x1daf096a270 <col:49> Implicit
|-FunctionDecl 0x1daf096a298 prev 0x1daf096a108 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x1daf0968f90 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x1daf096a388 <col:49> Inherited Implicit
| `-ConstAttr 0x1daf096a3b0 <col:49> Inherited Implicit
|-FunctionDecl 0x1daf096a638 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x1daf096a418 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x1daf096a498 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x1daf096a928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1daf096a7d8 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x1daf096a9d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf096aee8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1daf096ab68 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1daf096abe8 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf096ac60 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1daf096ace0 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x1daf0963230 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x1daf096afd8 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x1daf096b050 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x1daf0963060 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x1daf0963698 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x1daf0963318 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x1daf0963398 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0963410 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0963490 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1daf0963ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1daf0963848 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x1daf09638c8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1daf0963948 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1daf0963ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf096d148 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x1daf0963ce8 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1daf0963d68 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0963de0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0963e60 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x1daf096d598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x1daf096d2f8 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x1daf096d378 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf096d3f8 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x1daf096d650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf096db18 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x1daf096d798 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1daf096d818 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf096d890 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf096d910 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x1daf096df68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x1daf096dcc8 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x1daf096dd48 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf096ddc8 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x1daf096e020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0970310 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1daf0970230 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x1daf0970560 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1daf09703e8 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x1daf0970460 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09708d8 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1daf0970640 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x1daf09706c0 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x1daf0970740 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x1daf0970d40 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1daf09709c0 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x1daf0970a40 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x1daf0970ac0 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x1daf0970b38 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0971140 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1daf0970e30 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x1daf0970eb0 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x1daf0970f30 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x1daf09715b0 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1daf0971228 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x1daf09712a8 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x1daf0971328 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x1daf09713a0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09718e8 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x1daf09716c8 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x1daf0971748 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x1daf0971c08 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x1daf09719e8 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x1daf0971a68 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x1daf0972068 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x1daf0971ce8 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x1daf0971d68 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0971de0 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0971e60 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x1daf09724c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1daf0972228 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x1daf09722a8 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x1daf0972328 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x1daf0972580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09728f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x1daf09726c8 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x1daf0972740 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf0972c98 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1daf09729d0 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x1daf0972a48 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0972ac0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0972ef0 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x1daf0972d80 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x1daf096c1b8 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x1daf0972fc8 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1daf0973040 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf096c4b8 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1daf096c298 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1daf096c310 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf096c860 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1daf096c598 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1daf096c610 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf096c688 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf096cc18 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1daf096c940 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1daf096c9c0 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x1daf096ca38 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf096b0e0 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1daf096ccf8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1daf096cd78 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x1daf096cdf0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf096ce68 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf096b5e0 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x1daf096b1c8 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1daf096b240 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf096b2b8 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf096b338 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x1daf096b3b0 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf096ba60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1daf096b790 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf096b810 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x1daf096b888 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1daf096bb18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09731b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1daf096bc58 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1daf096bcd0 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf096bd48 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf096bdc8 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x1daf096be40 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf096beb8 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09736e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1daf0973370 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf09733f0 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x1daf0973468 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf09734e0 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf09737a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09739a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1daf0973b58 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1daf0973a78 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x1daf0973d70 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x1daf0973c30 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x1daf0974030 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x1daf09740d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1daf0974170 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1daf09741e8 prev 0x1daf0974030 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x1daf0973e48 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1daf0973ec8 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x1daf0974598 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1daf09742c8 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x1daf0974348 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x1daf09743c0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0974918 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1daf09749b8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1daf0974a20 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1daf0974a88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1daf0974b08 prev 0x1daf0974918 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x1daf0974680 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x1daf0974700 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x1daf0974780 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1daf0974f70 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1daf0974bf0 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1daf0974c70 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x1daf0974cf0 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x1daf0974d68 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09752a0 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1daf0975340 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1daf09753a8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1daf0975410 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1daf0975490 prev 0x1daf09752a0 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1daf0975060 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1daf09750e0 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x1daf0975180 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x1daf0975830 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1daf0975578 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1daf09755f8 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x1daf0975678 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x1daf09756f0 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0975bb8 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1daf0975c58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1daf0975cc0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1daf0975d28 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1daf0975da8 prev 0x1daf0975bb8 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x1daf0975920 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1daf09759a0 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x1daf0975a20 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1daf096e1c0 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1daf0975e90 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x1daf0975f10 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x1daf0975f90 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x1daf0976008 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf096e4d0 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1daf096e570 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1daf096e5d8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1daf096e640 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1daf096e6c0 prev 0x1daf096e4d0 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1daf096e2b0 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x1daf096e330 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x1daf096e3b0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1daf096ea60 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1daf096e7a8 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x1daf096e828 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x1daf096e8a8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1daf096e920 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf096ed40 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x1daf096ede0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1daf096ee48 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1daf096eec0 prev 0x1daf096ed40 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x1daf096eb50 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x1daf096ebd0 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x1daf0976308 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1daf096efa0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x1daf096f020 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x1daf096f098 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09765e0 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x1daf0976680 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1daf09766e8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1daf0976760 prev 0x1daf09765e0 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x1daf09763f0 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1daf0976470 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x1daf0976b18 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1daf0976840 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1daf09768c0 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x1daf0976938 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0976ce0 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1daf0976c00 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x1daf097e210 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x1daf0976db8 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1daf0976e38 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0976eb0 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0976f30 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1daf097e658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1daf097e3c0 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x1daf097e440 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x1daf097e4c0 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x1daf097e710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf097eb40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x1daf097e918 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1daf097e990 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1daf097ebf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf097f0c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1daf097edf8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1daf097ee70 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1daf097eee8 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf097f180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf097a648 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x1daf097a2d0 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x1daf097a350 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x1daf097a3c8 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1daf097a440 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x1daf097ab50 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1daf097a738 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x1daf097a7b8 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x1daf097a830 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097a8a8 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1daf097a920 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf097b060 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1daf097ac40 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1daf097acc0 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x1daf097ad38 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097adb0 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1daf097ae28 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf0979560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1daf0979298 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x1daf0979310 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1daf0979388 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1daf0979618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0979c18 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1daf0979758 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1daf09797d8 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x1daf0979850 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf09798c8 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1daf0979940 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf09799b8 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09771a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1daf0979dd8 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x1daf0979e50 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1daf0979ec8 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0979f40 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1daf0977260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09775c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x1daf0977660 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1daf09776c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1daf0977740 prev 0x1daf09775c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x1daf09773a0 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0977418 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1daf09777f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1daf0977848 <line:615:33> restrict
|-FunctionDecl 0x1daf09779e0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1daf09778a0 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x1daf0977a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1daf0977c88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x1daf0977d28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1daf0977d98 prev 0x1daf0977c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x1daf0977b08 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1daf0977e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1daf0977e98 <line:615:33> restrict
|-FunctionDecl 0x1daf097f220 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x1daf097f2c0 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x1daf097f328 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1daf097f3a0 prev 0x1daf097f220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x1daf0977ef0 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x1daf0977f68 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1daf097f450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1daf097f4a8 <line:615:33> restrict
|-FunctionDecl 0x1daf097f7c8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1daf097f500 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x1daf097f578 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097f5f0 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1daf097f880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1daf097f8d8 <line:615:33> restrict
|-FunctionDecl 0x1daf097fa08 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1daf097f930 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x1daf097fab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1daf097fca8 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x1daf097fb30 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097fba8 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1daf097fd58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1daf097fdb0 <line:615:33> restrict
|-FunctionDecl 0x1daf09800c8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x1daf097fe00 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097fe78 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097fef0 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1daf0980180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1daf09801d8 <line:615:33> restrict
|-FunctionDecl 0x1daf097b408 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1daf097b1f8 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x1daf097b270 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097b2e8 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1daf097b4c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1daf097b518 <line:615:33> restrict
|-FunctionDecl 0x1daf097b8e0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1daf097b570 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x1daf097b5e8 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097b660 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097b6d8 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1daf097b9a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1daf097b9f8 <line:615:33> restrict
|-FunctionDecl 0x1daf097bcf8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1daf097ba50 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x1daf097bac8 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097bb40 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097bbb8 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1daf097bdb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1daf097be10 <line:615:33> restrict
|-FunctionDecl 0x1daf0978268 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1daf097be68 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x1daf097bee0 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097bf58 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097bfd0 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf097c048 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1daf0978330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1daf0978388 <line:615:33> restrict
|-FunctionDecl 0x1daf09786a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x1daf09783e0 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x1daf0978458 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf09784d0 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf0978af8 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1daf0978788 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x1daf0978800 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0978878 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf09788f8 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x1daf0978f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x1daf0978ca8 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x1daf0978d20 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf0978da0 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x1daf0979028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09835d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1daf0983260 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x1daf09832d8 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0983350 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf09833d0 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x1daf0983a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x1daf0983788 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x1daf0983800 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf0983880 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x1daf0983b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0983fc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1daf0983c50 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x1daf0983cc8 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0983d40 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0983dc0 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x1daf0982440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x1daf0984178 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x1daf09841f0 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1daf0982268 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x1daf09824f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0982860 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1daf0982638 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1daf09826b8 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1daf0982c08 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1daf0982938 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf09829b8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1daf0982a30 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0982fc8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1daf0982ce8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf0982d68 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1daf0982de8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1daf0981450 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1daf09830a8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf0983128 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1daf09831a8 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x1daf0981240 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0981818 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1daf0981538 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf09815b8 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1daf0981638 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x1daf0981c80 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1daf09818f8 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf0981978 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1daf09819f8 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x1daf0981a70 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0982048 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1daf0981d68 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf0981de8 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1daf0981e68 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1daf097c470 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1daf0982128 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf09821a8 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1daf097c1f0 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x1daf097c268 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf097c838 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1daf097c558 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf097c5d8 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1daf097c658 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1daf097cca0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1daf097c918 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf097c998 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1daf097ca18 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1daf097ca90 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf097cfb0 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1daf097cd88 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1daf097ce08 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1daf0988428 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1daf097d088 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf097d108 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1daf097d180 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0988730 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1daf0988508 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1daf0988588 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1daf0988ad8 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1daf0988808 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf0988888 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1daf0988900 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0988df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1daf0988c78 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x1daf0988e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0985328 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1daf0988fd8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1daf0989050 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf09890c8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0989140 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x1daf09856e0 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x1daf0985418 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x1daf0985490 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x1daf0985508 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x1daf09858a0 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1daf09857c0 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x1daf0985ae8 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x1daf0985970 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x1daf0985de0 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1daf0985bb8 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1daf0985c30 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0985f98 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1daf0985eb8 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x1daf09862d0 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1daf0986068 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1daf09860e0 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0986528 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x1daf09863a8 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x1daf0986820 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1daf09865f8 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1daf0986670 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf0986a78 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1daf09868f8 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x1daf0986d70 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1daf0986b48 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1daf0986bc0 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf09871c8 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1daf0986e50 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1daf0986ec8 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0986f40 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf0986fc0 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x1daf0989680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x1daf09893b0 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x1daf0989428 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf09894a8 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x1daf0989738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0989bf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1daf0989880 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1daf09898f8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0989970 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1daf09899f0 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x1daf098a070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x1daf0989da8 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x1daf0989e20 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1daf0989ea0 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1daf098a128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf098a3b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1daf098a2d0 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x1daf098a5f8 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1daf098a480 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1daf098a4f8 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf098a8f0 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1daf098a6d0 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf098a750 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1daf098a7d0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1daf098ac88 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1daf098a9d0 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf098aa50 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1daf098aad0 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x1daf098ab48 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf098af90 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1daf098ad70 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf098adf0 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1daf098ae70 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1daf098b358 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1daf098b070 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1daf098b0f0 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1daf098b170 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x1daf098b1e8 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf098b718 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x1daf098b448 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x1daf098b4c8 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x1daf098b540 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf098bcd8 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1daf098b800 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf098b878 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf098b8f8 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1daf098b978 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x1daf098b9f8 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x1daf098ba78 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x1daf098c1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1daf098be98 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1daf098bf18 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x1daf098bf98 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x1daf098c018 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x1daf098c290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0984760 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1daf0984370 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf09843e8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0984468 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1daf09844e8 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x1daf0984568 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x1daf09845e8 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x1daf0984be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1daf0984920 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1daf09849a0 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x1daf0984a20 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x1daf0984aa0 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x1daf0984ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0985168 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x1daf0984de8 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0984e60 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0984ee0 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x1daf0984f60 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x1daf098c668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1daf098c3c8 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x1daf098c448 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x1daf098c4c8 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x1daf098c720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf098cb00 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x1daf098c8d8 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x1daf098c958 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x1daf098ce80 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x1daf098cc58 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x1daf098ccd8 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x1daf098d200 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x1daf098cfd8 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x1daf098d058 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x1daf098d5d8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1daf098d300 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x1daf098d380 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x1daf098d3f8 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf098d988 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1daf098d6b8 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x1daf098d738 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x1daf098d7b0 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf098dd38 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x1daf098da68 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x1daf098dae8 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x1daf098db60 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1daf098e010 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1daf098e0b0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1daf098e118 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1daf098e190 <col:46> Implicit
|-FunctionDecl 0x1daf098e1e8 prev 0x1daf098e010 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1daf098de20 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1daf098dea0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1daf098e310 <col:46> Inherited Implicit
|-FunctionDecl 0x1daf098e4d0 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1daf098e570 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1daf098e5d8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1daf098e650 <col:46> Implicit
|-FunctionDecl 0x1daf098e6a8 prev 0x1daf098e4d0 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1daf098e350 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1daf098e3d0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1daf098e7a0 <col:46> Inherited Implicit
|-FunctionDecl 0x1daf098ecb8 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1daf098e7e0 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x1daf098e858 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf098e8d8 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x1daf098e958 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x1daf098e9d8 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x1daf098ea58 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x1daf098f260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1daf098ee78 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x1daf098eef8 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x1daf098ef78 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x1daf098eff8 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x1daf098f078 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x1daf09872c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09875a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1daf0987430 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1daf0987758 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1daf0987678 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x1daf0987a18 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x1daf0987830 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x1daf09878b0 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x1daf0987ce0 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1daf0987d80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1daf0987de8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1daf0987e60 <col:30> Implicit
|-FunctionDecl 0x1daf0987eb8 prev 0x1daf0987ce0 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1daf0987af8 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1daf0987b78 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1daf0987fb0 <col:30> Inherited Implicit
|-FunctionDecl 0x1daf09881e0 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1daf098f320 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1daf098f388 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1daf098f400 <col:34> Implicit
|-FunctionDecl 0x1daf098f458 prev 0x1daf09881e0 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1daf0987ff0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1daf0988070 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1daf098f550 <col:34> Inherited Implicit
|-FunctionDecl 0x1daf098f710 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1daf098f7b0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1daf098f818 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1daf098f890 <col:30> Implicit
|-FunctionDecl 0x1daf098f8e8 prev 0x1daf098f710 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1daf098f590 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1daf098f610 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1daf098f9e0 <col:30> Inherited Implicit
|-FunctionDecl 0x1daf098fba0 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1daf098fc40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1daf098fca8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1daf098fd20 <col:34> Implicit
|-FunctionDecl 0x1daf098fd78 prev 0x1daf098fba0 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1daf098fa20 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1daf098faa0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1daf098fe70 <col:34> Inherited Implicit
|-FunctionDecl 0x1daf0990228 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x1daf098feb0 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x1daf098ff30 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x1daf098ffb0 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x1daf0990028 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf0996700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x1daf0996468 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x1daf09964e8 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x1daf0996568 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x1daf09967b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0996da0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x1daf09969c0 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x1daf0996a40 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x1daf0996ac0 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x1daf0996b40 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x1daf0996bc0 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x1daf0996e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0994660 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x1daf0996fb0 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x1daf0997030 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x1daf09970a8 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0997128 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x1daf09971a0 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0997220 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x1daf0997298 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0997318 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x1daf0994370 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf0994a10 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1daf0994778 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x1daf09947f8 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x1daf0994878 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x1daf0994db0 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1daf0994af0 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x1daf0994b68 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x1daf0994be0 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf0995380 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1daf0994e90 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x1daf0994f08 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0994f80 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1daf0994ff8 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1daf0995070 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1daf09950e8 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x1daf0995950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1daf0995538 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x1daf09955b0 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1daf0995628 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1daf09956a0 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1daf0995718 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x1daf0995a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0995c38 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1daf0995b58 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x1daf0995f28 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1daf0995d08 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x1daf0995d80 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x1daf09973a0 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x1daf0996000 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1daf0996078 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1daf09960f0 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x1daf0996168 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf0997810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1daf0997548 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1daf09975c0 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1daf0997638 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x1daf09978c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0997ee0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1daf0997ac8 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1daf0997b40 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1daf0997bb8 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1daf0997c30 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1daf0997ca8 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x1daf0997fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09927b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x1daf09980e8 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1daf0998160 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1daf09981d8 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0998250 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1daf09982c8 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0992350 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1daf09923c8 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1daf0992440 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x1daf09924b8 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1daf0992ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x1daf09929c8 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x1daf0992b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x1daf0992f68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1daf0992d88 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x1daf0992e08 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x1daf0993018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x1daf0990360 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x1daf0993220 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x1daf0990408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x1daf0990970 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1daf09906b0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1daf0990730 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x1daf09907b0 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x1daf0990830 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x1daf0990a30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x1daf0990b28 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0991060 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1daf0990da0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1daf0990e20 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x1daf0990ea0 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x1daf0990f20 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x1daf0991120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x1daf0991218 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0998748 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1daf0998528 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x1daf09985a8 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x1daf0998628 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x1daf0998800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x1daf09988f8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0998d90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1daf0998b70 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x1daf0998bf0 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf0998c70 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x1daf0998e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x1daf0998f40 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf0991388 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1daf09991b8 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x1daf0999238 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x1daf09992b8 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x1daf0991440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x1daf0991538 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09917d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1daf09916f0 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x1daf0991878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x1daf0991c58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1daf0991a40 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x1daf0991ac0 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x1daf0991b40 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x1daf0991d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x1daf09921b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1daf0991f98 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x1daf0992018 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x1daf0992098 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x1daf0992270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x1daf09993f0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1daf09995d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1daf0999500 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-VarDecl 0x1daf09996b0 <.//openssl//file_jk/after\test\constant_time_test.c:17:1, col:57> col:27 used CONSTTIME_TRUE 'const unsigned int' static cinit
| `-CStyleCastExpr 0x1daf09997b0 <col:44, col:57> 'unsigned int' <IntegralCast>
|   `-ParenExpr 0x1daf0999790 <col:54, col:57> 'int'
|     `-UnaryOperator 0x1daf0999740 <col:55, col:56> 'int' prefix '~' cannot overflow
|       `-IntegerLiteral 0x1daf0999718 <col:56> 'int' 0
|-VarDecl 0x1daf0999808 <line:18:1, col:45> col:27 used CONSTTIME_FALSE 'const unsigned int' static cinit
| `-ImplicitCastExpr 0x1daf09998b0 <col:45> 'unsigned int' <IntegralCast>
|   `-IntegerLiteral 0x1daf0999870 <col:45> 'int' 0
|-VarDecl 0x1daf09998e0 <line:19:1, col:47> col:28 used CONSTTIME_TRUE_8 'const unsigned char' static cinit
| `-ImplicitCastExpr 0x1daf0999988 <col:47> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x1daf0999948 <col:47> 'int' 255
|-VarDecl 0x1daf09999b8 <line:20:1, col:48> col:28 used CONSTTIME_FALSE_8 'const unsigned char' static cinit
| `-ImplicitCastExpr 0x1daf0999a60 <col:48> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x1daf0999a20 <col:48> 'int' 0
|-FunctionDecl 0x1daf099a050 <line:22:1, line:37:1> line:22:12 used test_binary_op 'int (unsigned int (*)(unsigned int, unsigned int), const char *, unsigned int, unsigned int, int)' static
| |-ParmVarDecl 0x1daf0999c80 <col:27, col:77> col:42 used op 'unsigned int (*)(unsigned int, unsigned int)'
| |-ParmVarDecl 0x1daf0999d00 <line:23:27, col:39> col:39 used op_name 'const char *'
| |-ParmVarDecl 0x1daf0999d80 <col:48, col:61> col:61 used a 'unsigned int'
| |-ParmVarDecl 0x1daf0999e00 <col:64, col:77> col:77 used b 'unsigned int'
| |-ParmVarDecl 0x1daf0999e80 <line:24:27, col:31> col:31 used is_true 'int'
| `-CompoundStmt 0x1daf092dae8 <line:25:1, line:37:1>
|   |-DeclStmt 0x1daf099a288 <line:26:5, col:26>
|   | `-VarDecl 0x1daf099a148 <col:5, col:25> col:14 used c 'unsigned int' cinit
|   |   `-CallExpr 0x1daf099a228 <col:18, col:25> 'unsigned int'
|   |     |-ImplicitCastExpr 0x1daf099a210 <col:18> 'unsigned int (*)(unsigned int, unsigned int)' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1daf099a1b0 <col:18> 'unsigned int (*)(unsigned int, unsigned int)' lvalue ParmVar 0x1daf0999c80 'op' 'unsigned int (*)(unsigned int, unsigned int)'
|   |     |-ImplicitCastExpr 0x1daf099a258 <col:21> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1daf099a1d0 <col:21> 'unsigned int' lvalue ParmVar 0x1daf0999d80 'a' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1daf099a270 <col:24> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1daf099a1f0 <col:24> 'unsigned int' lvalue ParmVar 0x1daf0999e00 'b' 'unsigned int'
|   |-IfStmt 0x1daf092da88 <line:27:5, line:35:5> has_else
|   | |-BinaryOperator 0x1daf099a380 <line:27:9, col:25> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1daf099a368 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1daf099a2a0 <col:9> 'int' lvalue ParmVar 0x1daf0999e80 'is_true' 'int'
|   | | `-BinaryOperator 0x1daf099a348 <col:20, col:25> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1daf099a318 <col:20> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1daf099a2c0 <col:20> 'unsigned int' lvalue Var 0x1daf099a148 'c' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x1daf099a330 <col:25> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1daf099a2f8 <col:25> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   | |-CompoundStmt 0x1daf092d548 <col:41, line:31:5>
|   | | |-CallExpr 0x1daf092d410 <line:28:9, line:29:70> 'int'
|   | | | |-ImplicitCastExpr 0x1daf092d3f8 <line:28:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1daf092d0f8 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1daf092d230 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1daf092d218 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1daf092d1f8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1daf092d1b0 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1daf092d198 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1daf092d118 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1daf092d1d0 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1daf092d480 <.//openssl//file_jk/after\test\constant_time_test.c:28:25, line:29:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1daf092d468 <line:28:25, line:29:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1daf092d288 <line:28:25, line:29:17> 'char [60]' lvalue "Test failed for %s(%du, %du): expected %du (TRUE), got %du\n"
|   | | | |-ImplicitCastExpr 0x1daf092d498 <col:38> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf092d2e0 <col:38> 'const char *' lvalue ParmVar 0x1daf0999d00 'op_name' 'const char *'
|   | | | |-ImplicitCastExpr 0x1daf092d4b0 <col:47> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf092d300 <col:47> 'unsigned int' lvalue ParmVar 0x1daf0999d80 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1daf092d4c8 <col:50> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf092d320 <col:50> 'unsigned int' lvalue ParmVar 0x1daf0999e00 'b' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1daf092d4e0 <col:53> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf092d340 <col:53> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   | | | `-ImplicitCastExpr 0x1daf092d4f8 <col:69> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1daf092d360 <col:69> 'unsigned int' lvalue Var 0x1daf099a148 'c' 'unsigned int'
|   | | `-ReturnStmt 0x1daf092d538 <line:30:9, col:16>
|   | |   `-IntegerLiteral 0x1daf092d510 <col:16> 'int' 1
|   | `-IfStmt 0x1daf092da70 <line:31:12, line:35:5>
|   |   |-BinaryOperator 0x1daf092d648 <line:31:16, col:33> 'int' '&&'
|   |   | |-UnaryOperator 0x1daf092d5a0 <col:16, col:17> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1daf092d588 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1daf092d568 <col:17> 'int' lvalue ParmVar 0x1daf0999e80 'is_true' 'int'
|   |   | `-BinaryOperator 0x1daf092d628 <col:28, col:33> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1daf092d5f8 <col:28> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1daf092d5b8 <col:28> 'unsigned int' lvalue Var 0x1daf099a148 'c' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x1daf092d610 <col:33> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1daf092d5d8 <col:33> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x1daf092da50 <col:50, line:35:5>
|   |     |-CallExpr 0x1daf092d918 <line:32:9, line:33:72> 'int'
|   |     | |-ImplicitCastExpr 0x1daf092d900 <line:32:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1daf092d6b0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1daf092d788 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1daf092d770 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1daf092d750 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1daf092d708 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1daf092d6f0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1daf092d6d0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1daf092d728 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1daf092d988 <.//openssl//file_jk/after\test\constant_time_test.c:32:25, line:33:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1daf092d970 <line:32:25, line:33:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1daf092d7e8 <line:32:25, line:33:17> 'char [62]' lvalue "Test failed for  %s(%du, %du): expected %du (FALSE), got %du\n"
|   |     | |-ImplicitCastExpr 0x1daf092d9a0 <col:39> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf092d848 <col:39> 'const char *' lvalue ParmVar 0x1daf0999d00 'op_name' 'const char *'
|   |     | |-ImplicitCastExpr 0x1daf092d9b8 <col:48> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf092d868 <col:48> 'unsigned int' lvalue ParmVar 0x1daf0999d80 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1daf092d9d0 <col:51> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf092d888 <col:51> 'unsigned int' lvalue ParmVar 0x1daf0999e00 'b' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1daf092d9e8 <col:54> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf092d8a8 <col:54> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |     | `-ImplicitCastExpr 0x1daf092da00 <col:71> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1daf092d8c8 <col:71> 'unsigned int' lvalue Var 0x1daf099a148 'c' 'unsigned int'
|   |     `-ReturnStmt 0x1daf092da40 <line:34:9, col:16>
|   |       `-IntegerLiteral 0x1daf092da18 <col:16> 'int' 1
|   `-ReturnStmt 0x1daf092dad8 <line:36:5, col:12>
|     `-IntegerLiteral 0x1daf092dab0 <col:12> 'int' 0
|-FunctionDecl 0x1daf0a40170 <line:39:1, line:55:1> line:39:12 used test_binary_op_8 'int (unsigned char (*)(unsigned int, unsigned int), const char *, unsigned int, unsigned int, int)' static
| |-ParmVarDecl 0x1daf092dd50 <col:29, line:40:71> col:36 used op 'unsigned char (*)(unsigned int, unsigned int)'
| |-ParmVarDecl 0x1daf092ddd0 <line:41:29, col:41> col:41 used op_name 'const char *'
| |-ParmVarDecl 0x1daf092de50 <col:50, col:63> col:63 used a 'unsigned int'
| |-ParmVarDecl 0x1daf092ded0 <line:42:29, col:42> col:42 used b 'unsigned int'
| |-ParmVarDecl 0x1daf092df50 <col:45, col:49> col:49 used is_true 'int'
| `-CompoundStmt 0x1daf0a40eb0 <line:43:1, line:55:1>
|   |-DeclStmt 0x1daf0a403a8 <line:44:5, col:31>
|   | `-VarDecl 0x1daf0a40268 <col:5, col:30> col:19 used c 'unsigned char' cinit
|   |   `-CallExpr 0x1daf0a40348 <col:23, col:30> 'unsigned char'
|   |     |-ImplicitCastExpr 0x1daf0a40330 <col:23> 'unsigned char (*)(unsigned int, unsigned int)' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1daf0a402d0 <col:23> 'unsigned char (*)(unsigned int, unsigned int)' lvalue ParmVar 0x1daf092dd50 'op' 'unsigned char (*)(unsigned int, unsigned int)'
|   |     |-ImplicitCastExpr 0x1daf0a40378 <col:26> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1daf0a402f0 <col:26> 'unsigned int' lvalue ParmVar 0x1daf092de50 'a' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1daf0a40390 <col:29> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1daf0a40310 <col:29> 'unsigned int' lvalue ParmVar 0x1daf092ded0 'b' 'unsigned int'
|   |-IfStmt 0x1daf0a40e50 <line:45:5, line:53:5> has_else
|   | |-BinaryOperator 0x1daf0a404d0 <line:45:9, col:25> 'int' '&&'
|   | | |-ImplicitCastExpr 0x1daf0a404b8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1daf0a403c0 <col:9> 'int' lvalue ParmVar 0x1daf092df50 'is_true' 'int'
|   | | `-BinaryOperator 0x1daf0a40498 <col:20, col:25> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1daf0a40468 <col:20> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1daf0a40438 <col:20> 'unsigned char' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1daf0a403e0 <col:20> 'unsigned char' lvalue Var 0x1daf0a40268 'c' 'unsigned char'
|   | |   `-ImplicitCastExpr 0x1daf0a40480 <col:25> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1daf0a40450 <col:25> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1daf0a40418 <col:25> 'const unsigned char' lvalue Var 0x1daf09998e0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | |-CompoundStmt 0x1daf0a408f8 <col:43, line:49:5>
|   | | |-CallExpr 0x1daf0a40790 <line:46:9, line:47:71> 'int'
|   | | | |-ImplicitCastExpr 0x1daf0a40778 <line:46:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1daf0a40538 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1daf0a40610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1daf0a405f8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1daf0a405d8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1daf0a40590 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1daf0a40578 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1daf0a40558 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1daf0a405b0 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1daf0a40800 <.//openssl//file_jk/after\test\constant_time_test.c:46:25, line:47:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1daf0a407e8 <line:46:25, line:47:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1daf0a40668 <line:46:25, line:47:17> 'char [58]' lvalue "Test failed for %s(%du, %du): expected %u (TRUE), got %u\n"
|   | | | |-ImplicitCastExpr 0x1daf0a40818 <col:37> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf0a406c0 <col:37> 'const char *' lvalue ParmVar 0x1daf092ddd0 'op_name' 'const char *'
|   | | | |-ImplicitCastExpr 0x1daf0a40830 <col:46> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf0a406e0 <col:46> 'unsigned int' lvalue ParmVar 0x1daf092de50 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1daf0a40848 <col:49> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf0a40700 <col:49> 'unsigned int' lvalue ParmVar 0x1daf092ded0 'b' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1daf0a40878 <col:52> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1daf0a40860 <col:52> 'unsigned char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1daf0a40720 <col:52> 'const unsigned char' lvalue Var 0x1daf09998e0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | | | `-ImplicitCastExpr 0x1daf0a408a8 <col:70> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1daf0a40890 <col:70> 'unsigned char' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1daf0a40740 <col:70> 'unsigned char' lvalue Var 0x1daf0a40268 'c' 'unsigned char'
|   | | `-ReturnStmt 0x1daf0a408e8 <line:48:9, col:16>
|   | |   `-IntegerLiteral 0x1daf0a408c0 <col:16> 'int' 1
|   | `-IfStmt 0x1daf0a40e38 <line:49:12, line:53:5>
|   |   |-BinaryOperator 0x1daf0a40a28 <line:49:16, col:33> 'int' '&&'
|   |   | |-UnaryOperator 0x1daf0a40950 <col:16, col:17> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1daf0a40938 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1daf0a40918 <col:17> 'int' lvalue ParmVar 0x1daf092df50 'is_true' 'int'
|   |   | `-BinaryOperator 0x1daf0a40a08 <col:28, col:33> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1daf0a409d8 <col:28> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1daf0a409a8 <col:28> 'unsigned char' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1daf0a40968 <col:28> 'unsigned char' lvalue Var 0x1daf0a40268 'c' 'unsigned char'
|   |   |   `-ImplicitCastExpr 0x1daf0a409f0 <col:33> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1daf0a409c0 <col:33> 'unsigned char' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1daf0a40988 <col:33> 'const unsigned char' lvalue Var 0x1daf09999b8 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |   `-CompoundStmt 0x1daf0a40e18 <col:52, line:53:5>
|   |     |-CallExpr 0x1daf0a40cb0 <line:50:9, line:51:73> 'int'
|   |     | |-ImplicitCastExpr 0x1daf0a40c98 <line:50:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1daf0a40a90 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1daf0a40b68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1daf0a40b50 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1daf0a40b30 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1daf0a40ae8 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1daf0a40ad0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1daf0a40ab0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1daf0a40b08 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1daf0a40d20 <.//openssl//file_jk/after\test\constant_time_test.c:50:25, line:51:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1daf0a40d08 <line:50:25, line:51:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1daf0a40b88 <line:50:25, line:51:17> 'char [60]' lvalue "Test failed for  %s(%du, %du): expected %u (FALSE), got %u\n"
|   |     | |-ImplicitCastExpr 0x1daf0a40d38 <col:38> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf0a40be0 <col:38> 'const char *' lvalue ParmVar 0x1daf092ddd0 'op_name' 'const char *'
|   |     | |-ImplicitCastExpr 0x1daf0a40d50 <col:47> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf0a40c00 <col:47> 'unsigned int' lvalue ParmVar 0x1daf092de50 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1daf0a40d68 <col:50> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf0a40c20 <col:50> 'unsigned int' lvalue ParmVar 0x1daf092ded0 'b' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1daf0a40d98 <col:53> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1daf0a40d80 <col:53> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1daf0a40c40 <col:53> 'const unsigned char' lvalue Var 0x1daf09999b8 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     | `-ImplicitCastExpr 0x1daf0a40dc8 <col:72> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x1daf0a40db0 <col:72> 'unsigned char' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1daf0a40c60 <col:72> 'unsigned char' lvalue Var 0x1daf0a40268 'c' 'unsigned char'
|   |     `-ReturnStmt 0x1daf0a40e08 <line:52:9, col:16>
|   |       `-IntegerLiteral 0x1daf0a40de0 <col:16> 'int' 1
|   `-ReturnStmt 0x1daf0a40ea0 <line:54:5, col:12>
|     `-IntegerLiteral 0x1daf0a40e78 <col:12> 'int' 0
|-FunctionDecl 0x1daf0a40fd0 <line:57:1, line:70:1> line:57:12 used test_is_zero 'int (unsigned int)' static
| |-ParmVarDecl 0x1daf0a40ef0 <col:25, col:38> col:38 used a 'unsigned int'
| `-CompoundStmt 0x1daf0a42d20 <line:58:1, line:70:1>
|   |-DeclStmt 0x1daf0a42358 <line:59:5, col:46>
|   | `-VarDecl 0x1daf0a420f0 <col:5, col:45> col:18 used c 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1daf0a42340 <col:22, col:45> 'unsigned int' <IntegralCast>
|   |     `-CallExpr 0x1daf0a42300 <col:22, col:45> 'int'
|   |       |-ImplicitCastExpr 0x1daf0a422e8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1daf0a42278 <col:22> 'int ()' Function 0x1daf0a421b0 'constant_time_is_zero' 'int ()'
|   |       `-ImplicitCastExpr 0x1daf0a42328 <col:44> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1daf0a42298 <col:44> 'unsigned int' lvalue ParmVar 0x1daf0a40ef0 'a' 'unsigned int'
|   |-IfStmt 0x1daf0a42cc0 <line:60:5, line:68:5> has_else
|   | |-BinaryOperator 0x1daf0a424b0 <line:60:9, col:24> 'int' '&&'
|   | | |-BinaryOperator 0x1daf0a423e8 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1daf0a423b8 <col:9> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf0a42370 <col:9> 'unsigned int' lvalue ParmVar 0x1daf0a40ef0 'a' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x1daf0a423d0 <col:14> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1daf0a42390 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1daf0a42490 <col:19, col:24> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1daf0a42460 <col:19> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1daf0a42408 <col:19> 'unsigned int' lvalue Var 0x1daf0a420f0 'c' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x1daf0a42478 <col:24> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1daf0a42440 <col:24> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   | |-CompoundStmt 0x1daf0a427f8 <col:40, line:64:5>
|   | | |-CallExpr 0x1daf0a42700 <line:61:9, line:62:71> 'int'
|   | | | |-ImplicitCastExpr 0x1daf0a426e8 <line:61:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1daf0a424d0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1daf0a425a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1daf0a42590 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1daf0a42570 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1daf0a42528 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1daf0a42510 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1daf0a424f0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1daf0a42548 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1daf0a42760 <.//openssl//file_jk/after\test\constant_time_test.c:61:25, line:62:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1daf0a42748 <line:61:25, line:62:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1daf0a42608 <line:61:25, line:62:17> 'char [74]' lvalue "Test failed for constant_time_is_zero(%du): expected %du (TRUE), got %du\n"
|   | | | |-ImplicitCastExpr 0x1daf0a42778 <col:51> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf0a42670 <col:51> 'unsigned int' lvalue ParmVar 0x1daf0a40ef0 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1daf0a42790 <col:54> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf0a42690 <col:54> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   | | | `-ImplicitCastExpr 0x1daf0a427a8 <col:70> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1daf0a426b0 <col:70> 'unsigned int' lvalue Var 0x1daf0a420f0 'c' 'unsigned int'
|   | | `-ReturnStmt 0x1daf0a427e8 <line:63:9, col:16>
|   | |   `-IntegerLiteral 0x1daf0a427c0 <col:16> 'int' 1
|   | `-IfStmt 0x1daf0a42ca8 <line:64:12, line:68:5>
|   |   |-BinaryOperator 0x1daf0a42940 <line:64:16, col:31> 'int' '&&'
|   |   | |-BinaryOperator 0x1daf0a42890 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1daf0a42860 <col:16> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1daf0a42818 <col:16> 'unsigned int' lvalue ParmVar 0x1daf0a40ef0 'a' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1daf0a42878 <col:21> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1daf0a42838 <col:21> 'int' 0
|   |   | `-BinaryOperator 0x1daf0a42920 <col:26, col:31> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1daf0a428f0 <col:26> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1daf0a428b0 <col:26> 'unsigned int' lvalue Var 0x1daf0a420f0 'c' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x1daf0a42908 <col:31> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1daf0a428d0 <col:31> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x1daf0a42c88 <col:48, line:68:5>
|   |     |-CallExpr 0x1daf0a42b90 <line:65:9, line:66:73> 'int'
|   |     | |-ImplicitCastExpr 0x1daf0a42b78 <line:65:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1daf0a42960 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1daf0a42a38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1daf0a42a20 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1daf0a42a00 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1daf0a429b8 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1daf0a429a0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1daf0a42980 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1daf0a429d8 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1daf0a42bf0 <.//openssl//file_jk/after\test\constant_time_test.c:65:25, line:66:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1daf0a42bd8 <line:65:25, line:66:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1daf0a42a98 <line:65:25, line:66:17> 'char [75]' lvalue "Test failed for constant_time_is_zero(%du): expected %du (FALSE), got %du\n"
|   |     | |-ImplicitCastExpr 0x1daf0a42c08 <col:52> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf0a42b00 <col:52> 'unsigned int' lvalue ParmVar 0x1daf0a40ef0 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1daf0a42c20 <col:55> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf0a42b20 <col:55> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |     | `-ImplicitCastExpr 0x1daf0a42c38 <col:72> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1daf0a42b40 <col:72> 'unsigned int' lvalue Var 0x1daf0a420f0 'c' 'unsigned int'
|   |     `-ReturnStmt 0x1daf0a42c78 <line:67:9, col:16>
|   |       `-IntegerLiteral 0x1daf0a42c50 <col:16> 'int' 1
|   `-ReturnStmt 0x1daf0a42d10 <line:69:5, col:12>
|     `-IntegerLiteral 0x1daf0a42ce8 <col:12> 'int' 0
|-FunctionDecl 0x1daf0a42e10 <line:72:1, line:85:1> line:72:12 used test_is_zero_8 'int (unsigned int)' static
| |-ParmVarDecl 0x1daf0a42d60 <col:27, col:40> col:40 used a 'unsigned int'
| `-CompoundStmt 0x1daf0a43b60 <line:73:1, line:85:1>
|   |-DeclStmt 0x1daf0a43100 <line:74:5, col:49>
|   | `-VarDecl 0x1daf0a42ee8 <col:5, col:48> col:19 used c 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x1daf0a430d8 <col:23, col:48> 'unsigned char' <IntegralCast>
|   |     `-CallExpr 0x1daf0a43098 <col:23, col:48> 'int'
|   |       |-ImplicitCastExpr 0x1daf0a43080 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1daf0a43040 <col:23> 'int ()' Function 0x1daf0a42f78 'constant_time_is_zero_8' 'int ()'
|   |       `-ImplicitCastExpr 0x1daf0a430c0 <col:47> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1daf0a43060 <col:47> 'unsigned int' lvalue ParmVar 0x1daf0a42d60 'a' 'unsigned int'
|   |-IfStmt 0x1daf0a43b00 <line:75:5, line:83:5> has_else
|   | |-BinaryOperator 0x1daf0a43288 <line:75:9, col:24> 'int' '&&'
|   | | |-BinaryOperator 0x1daf0a43190 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1daf0a43160 <col:9> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf0a43118 <col:9> 'unsigned int' lvalue ParmVar 0x1daf0a42d60 'a' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x1daf0a43178 <col:14> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1daf0a43138 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1daf0a43268 <col:19, col:24> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1daf0a43238 <col:19> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1daf0a43208 <col:19> 'unsigned char' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1daf0a431b0 <col:19> 'unsigned char' lvalue Var 0x1daf0a42ee8 'c' 'unsigned char'
|   | |   `-ImplicitCastExpr 0x1daf0a43250 <col:24> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1daf0a43220 <col:24> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1daf0a431e8 <col:24> 'const unsigned char' lvalue Var 0x1daf09998e0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | |-CompoundStmt 0x1daf0a435f8 <col:42, line:79:5>
|   | | |-CallExpr 0x1daf0a434d0 <line:76:9, line:77:71> 'int'
|   | | | |-ImplicitCastExpr 0x1daf0a434b8 <line:76:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1daf0a432a8 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1daf0a43380 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1daf0a43368 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1daf0a43348 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1daf0a43300 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1daf0a432e8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1daf0a432c8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1daf0a43320 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1daf0a43530 <.//openssl//file_jk/after\test\constant_time_test.c:76:25, line:77:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1daf0a43518 <line:76:25, line:77:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1daf0a433d8 <line:76:25, line:77:17> 'char [72]' lvalue "Test failed for constant_time_is_zero(%du): expected %u (TRUE), got %u\n"
|   | | | |-ImplicitCastExpr 0x1daf0a43548 <col:49> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf0a43440 <col:49> 'unsigned int' lvalue ParmVar 0x1daf0a42d60 'a' 'unsigned int'
|   | | | |-ImplicitCastExpr 0x1daf0a43578 <col:52> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1daf0a43560 <col:52> 'unsigned char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1daf0a43460 <col:52> 'const unsigned char' lvalue Var 0x1daf09998e0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | | | `-ImplicitCastExpr 0x1daf0a435a8 <col:70> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1daf0a43590 <col:70> 'unsigned char' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1daf0a43480 <col:70> 'unsigned char' lvalue Var 0x1daf0a42ee8 'c' 'unsigned char'
|   | | `-ReturnStmt 0x1daf0a435e8 <line:78:9, col:16>
|   | |   `-IntegerLiteral 0x1daf0a435c0 <col:16> 'int' 1
|   | `-IfStmt 0x1daf0a43ae8 <line:79:12, line:83:5>
|   |   |-BinaryOperator 0x1daf0a43758 <line:79:16, col:31> 'int' '&&'
|   |   | |-BinaryOperator 0x1daf0a43690 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1daf0a43660 <col:16> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1daf0a43618 <col:16> 'unsigned int' lvalue ParmVar 0x1daf0a42d60 'a' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1daf0a43678 <col:21> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1daf0a43638 <col:21> 'int' 0
|   |   | `-BinaryOperator 0x1daf0a43738 <col:26, col:31> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1daf0a43720 <col:26> 'unsigned int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1daf0a436f0 <col:26> 'unsigned char' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1daf0a436b0 <col:26> 'unsigned char' lvalue Var 0x1daf0a42ee8 'c' 'unsigned char'
|   |   |   `-ImplicitCastExpr 0x1daf0a43708 <col:31> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1daf0a436d0 <col:31> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x1daf0a43ac8 <col:48, line:83:5>
|   |     |-CallExpr 0x1daf0a439a0 <line:80:9, line:81:73> 'int'
|   |     | |-ImplicitCastExpr 0x1daf0a43988 <line:80:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1daf0a43778 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1daf0a43850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1daf0a43838 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1daf0a43818 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1daf0a437d0 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1daf0a437b8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1daf0a43798 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1daf0a437f0 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1daf0a43a00 <.//openssl//file_jk/after\test\constant_time_test.c:80:25, line:81:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1daf0a439e8 <line:80:25, line:81:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1daf0a438a8 <line:80:25, line:81:17> 'char [73]' lvalue "Test failed for constant_time_is_zero(%du): expected %u (FALSE), got %u\n"
|   |     | |-ImplicitCastExpr 0x1daf0a43a18 <col:50> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf0a43910 <col:50> 'unsigned int' lvalue ParmVar 0x1daf0a42d60 'a' 'unsigned int'
|   |     | |-ImplicitCastExpr 0x1daf0a43a48 <col:53> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1daf0a43a30 <col:53> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1daf0a43930 <col:53> 'const unsigned char' lvalue Var 0x1daf09999b8 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     | `-ImplicitCastExpr 0x1daf0a43a78 <col:72> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x1daf0a43a60 <col:72> 'unsigned char' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1daf0a43950 <col:72> 'unsigned char' lvalue Var 0x1daf0a42ee8 'c' 'unsigned char'
|   |     `-ReturnStmt 0x1daf0a43ab8 <line:82:9, col:16>
|   |       `-IntegerLiteral 0x1daf0a43a90 <col:16> 'int' 1
|   `-ReturnStmt 0x1daf0a43b50 <line:84:5, col:12>
|     `-IntegerLiteral 0x1daf0a43b28 <col:12> 'int' 0
|-FunctionDecl 0x1daf0a43d30 <line:87:1, line:104:1> line:87:12 used test_select 'int (unsigned int, unsigned int)' static
| |-ParmVarDecl 0x1daf0a43ba0 <col:24, col:37> col:37 used a 'unsigned int'
| |-ParmVarDecl 0x1daf0a43c20 <col:40, col:53> col:53 used b 'unsigned int'
| `-CompoundStmt 0x1daf0a41b68 <line:88:1, line:104:1>
|   |-DeclStmt 0x1daf0a44098 <line:89:5, col:71>
|   | `-VarDecl 0x1daf0a43e10 <col:5, col:70> col:18 used selected 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1daf0a44080 <col:29, col:70> 'unsigned int' <IntegralCast>
|   |     `-CallExpr 0x1daf0a44000 <col:29, col:70> 'int'
|   |       |-ImplicitCastExpr 0x1daf0a43fe8 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1daf0a43f68 <col:29> 'int ()' Function 0x1daf0a43ea0 'constant_time_select' 'int ()'
|   |       |-ImplicitCastExpr 0x1daf0a44038 <col:50> 'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1daf0a43f88 <col:50> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   |       |-ImplicitCastExpr 0x1daf0a44050 <col:66> 'unsigned int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1daf0a43fa8 <col:66> 'unsigned int' lvalue ParmVar 0x1daf0a43ba0 'a' 'unsigned int'
|   |       `-ImplicitCastExpr 0x1daf0a44068 <col:69> 'unsigned int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1daf0a43fc8 <col:69> 'unsigned int' lvalue ParmVar 0x1daf0a43c20 'b' 'unsigned int'
|   |-IfStmt 0x1daf0a41528 <line:90:5, line:95:5>
|   | |-BinaryOperator 0x1daf0a41130 <line:90:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1daf0a41100 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1daf0a440b0 <col:9> 'unsigned int' lvalue Var 0x1daf0a43e10 'selected' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1daf0a41118 <col:21> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1daf0a410e0 <col:21> 'unsigned int' lvalue ParmVar 0x1daf0a43ba0 'a' 'unsigned int'
|   | `-CompoundStmt 0x1daf0a41508 <col:24, line:95:5>
|   |   |-CallExpr 0x1daf0a413d0 <line:91:9, line:93:50> 'int'
|   |   | |-ImplicitCastExpr 0x1daf0a413b8 <line:91:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1daf0a41150 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1daf0a41228 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1daf0a41210 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1daf0a411f0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1daf0a411a8 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1daf0a41190 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1daf0a41170 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1daf0a411c8 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1daf0a41440 <.//openssl//file_jk/after\test\constant_time_test.c:91:25, line:92:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1daf0a41428 <line:91:25, line:92:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1daf0a41288 <line:91:25, line:92:17> 'char [88]' lvalue "Test failed for constant_time_select(%du, %du,%du): expected %du(first value), got %du\n"
|   |   | |-ImplicitCastExpr 0x1daf0a41458 <line:93:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a41300 <col:17> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1daf0a41470 <col:33> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a41320 <col:33> 'unsigned int' lvalue ParmVar 0x1daf0a43ba0 'a' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x1daf0a41488 <col:36> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a41340 <col:36> 'unsigned int' lvalue ParmVar 0x1daf0a43c20 'b' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x1daf0a414a0 <col:39> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a41360 <col:39> 'unsigned int' lvalue ParmVar 0x1daf0a43ba0 'a' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x1daf0a414b8 <col:42> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1daf0a41380 <col:42> 'unsigned int' lvalue Var 0x1daf0a43e10 'selected' 'unsigned int'
|   |   `-ReturnStmt 0x1daf0a414f8 <line:94:9, col:16>
|   |     `-IntegerLiteral 0x1daf0a414d0 <col:16> 'int' 1
|   |-BinaryOperator 0x1daf0a41690 <line:96:5, col:58> 'unsigned int' '='
|   | |-DeclRefExpr 0x1daf0a41540 <col:5> 'unsigned int' lvalue Var 0x1daf0a43e10 'selected' 'unsigned int'
|   | `-ImplicitCastExpr 0x1daf0a41678 <col:16, col:58> 'unsigned int' <IntegralCast>
|   |   `-CallExpr 0x1daf0a415f8 <col:16, col:58> 'int'
|   |     |-ImplicitCastExpr 0x1daf0a415e0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1daf0a41560 <col:16> 'int ()' Function 0x1daf0a43ea0 'constant_time_select' 'int ()'
|   |     |-ImplicitCastExpr 0x1daf0a41630 <col:37> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1daf0a41580 <col:37> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |     |-ImplicitCastExpr 0x1daf0a41648 <col:54> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1daf0a415a0 <col:54> 'unsigned int' lvalue ParmVar 0x1daf0a43ba0 'a' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1daf0a41660 <col:57> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1daf0a415c0 <col:57> 'unsigned int' lvalue ParmVar 0x1daf0a43c20 'b' 'unsigned int'
|   |-IfStmt 0x1daf0a41b18 <line:97:5, line:102:5>
|   | |-BinaryOperator 0x1daf0a41720 <line:97:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1daf0a416f0 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1daf0a416b0 <col:9> 'unsigned int' lvalue Var 0x1daf0a43e10 'selected' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1daf0a41708 <col:21> 'unsigned int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1daf0a416d0 <col:21> 'unsigned int' lvalue ParmVar 0x1daf0a43c20 'b' 'unsigned int'
|   | `-CompoundStmt 0x1daf0a41af8 <col:24, line:102:5>
|   |   |-CallExpr 0x1daf0a419c0 <line:98:9, line:100:51> 'int'
|   |   | |-ImplicitCastExpr 0x1daf0a419a8 <line:98:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1daf0a41740 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1daf0a41818 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1daf0a41800 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1daf0a417e0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1daf0a41798 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1daf0a41780 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1daf0a41760 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1daf0a417b8 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1daf0a41a30 <.//openssl//file_jk/after\test\constant_time_test.c:98:25, line:99:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1daf0a41a18 <line:98:25, line:99:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1daf0a41878 <line:98:25, line:99:17> 'char [89]' lvalue "Test failed for constant_time_select(%du, %du,%du): expected %du(second value), got %du\n"
|   |   | |-ImplicitCastExpr 0x1daf0a41a48 <line:100:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a418f0 <col:17> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1daf0a41a60 <col:34> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a41910 <col:34> 'unsigned int' lvalue ParmVar 0x1daf0a43ba0 'a' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x1daf0a41a78 <col:37> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a41930 <col:37> 'unsigned int' lvalue ParmVar 0x1daf0a43c20 'b' 'unsigned int'
|   |   | |-ImplicitCastExpr 0x1daf0a41a90 <col:40> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a41950 <col:40> 'unsigned int' lvalue ParmVar 0x1daf0a43c20 'b' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x1daf0a41aa8 <col:43> 'unsigned int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1daf0a41970 <col:43> 'unsigned int' lvalue Var 0x1daf0a43e10 'selected' 'unsigned int'
|   |   `-ReturnStmt 0x1daf0a41ae8 <line:101:9, col:16>
|   |     `-IntegerLiteral 0x1daf0a41ac0 <col:16> 'int' 1
|   `-ReturnStmt 0x1daf0a41b58 <line:103:5, col:12>
|     `-IntegerLiteral 0x1daf0a41b30 <col:12> 'int' 0
|-FunctionDecl 0x1daf0a41d40 <line:106:1, line:123:1> line:106:12 used test_select_8 'int (unsigned char, unsigned char)' static
| |-ParmVarDecl 0x1daf0a41bb8 <col:26, col:40> col:40 used a 'unsigned char'
| |-ParmVarDecl 0x1daf0a41c38 <col:43, col:57> col:57 used b 'unsigned char'
| `-CompoundStmt 0x1daf0a46d70 <line:107:1, line:123:1>
|   |-DeclStmt 0x1daf0a46148 <line:108:5, col:76>
|   | `-VarDecl 0x1daf0a41e20 <col:5, col:75> col:19 used selected 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x1daf0a46130 <col:30, col:75> 'unsigned char' <IntegralCast>
|   |     `-CallExpr 0x1daf0a42010 <col:30, col:75> 'int'
|   |       |-ImplicitCastExpr 0x1daf0a41ff8 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1daf0a41f78 <col:30> 'int ()' Function 0x1daf0a41eb0 'constant_time_select_8' 'int ()'
|   |       |-ImplicitCastExpr 0x1daf0a42060 <col:53> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x1daf0a42048 <col:53> 'unsigned char' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1daf0a41f98 <col:53> 'const unsigned char' lvalue Var 0x1daf09998e0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   |       |-ImplicitCastExpr 0x1daf0a42090 <col:71> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x1daf0a42078 <col:71> 'unsigned char' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1daf0a41fb8 <col:71> 'unsigned char' lvalue ParmVar 0x1daf0a41bb8 'a' 'unsigned char'
|   |       `-ImplicitCastExpr 0x1daf0a420c0 <col:74> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x1daf0a420a8 <col:74> 'unsigned char' <LValueToRValue>
|   |           `-DeclRefExpr 0x1daf0a41fd8 <col:74> 'unsigned char' lvalue ParmVar 0x1daf0a41c38 'b' 'unsigned char'
|   |-IfStmt 0x1daf0a46660 <line:109:5, line:114:5>
|   | |-BinaryOperator 0x1daf0a46218 <line:109:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1daf0a461e8 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1daf0a461b8 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1daf0a46160 <col:9> 'unsigned char' lvalue Var 0x1daf0a41e20 'selected' 'unsigned char'
|   | | `-ImplicitCastExpr 0x1daf0a46200 <col:21> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1daf0a461d0 <col:21> 'unsigned char' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1daf0a46198 <col:21> 'unsigned char' lvalue ParmVar 0x1daf0a41bb8 'a' 'unsigned char'
|   | `-CompoundStmt 0x1daf0a46640 <col:24, line:114:5>
|   |   |-CallExpr 0x1daf0a464a8 <line:110:9, line:112:50> 'int'
|   |   | |-ImplicitCastExpr 0x1daf0a46490 <line:110:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1daf0a46238 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1daf0a46310 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1daf0a462f8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1daf0a462d8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1daf0a46290 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1daf0a46278 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1daf0a46258 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1daf0a462b0 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1daf0a46518 <.//openssl//file_jk/after\test\constant_time_test.c:110:25, line:111:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1daf0a46500 <line:110:25, line:111:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1daf0a46368 <line:110:25, line:111:17> 'char [83]' lvalue "Test failed for constant_time_select(%u, %u,%u): expected %u(first value), got %u\n"
|   |   | |-ImplicitCastExpr 0x1daf0a46530 <line:112:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a463d8 <col:17> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1daf0a46560 <col:33> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1daf0a46548 <col:33> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1daf0a463f8 <col:33> 'unsigned char' lvalue ParmVar 0x1daf0a41bb8 'a' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x1daf0a46590 <col:36> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1daf0a46578 <col:36> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1daf0a46418 <col:36> 'unsigned char' lvalue ParmVar 0x1daf0a41c38 'b' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x1daf0a465c0 <col:39> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1daf0a465a8 <col:39> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1daf0a46438 <col:39> 'unsigned char' lvalue ParmVar 0x1daf0a41bb8 'a' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x1daf0a465f0 <col:42> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1daf0a465d8 <col:42> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1daf0a46458 <col:42> 'unsigned char' lvalue Var 0x1daf0a41e20 'selected' 'unsigned char'
|   |   `-ReturnStmt 0x1daf0a46630 <line:113:9, col:16>
|   |     `-IntegerLiteral 0x1daf0a46608 <col:16> 'int' 1
|   |-BinaryOperator 0x1daf0a46810 <line:115:5, col:62> 'unsigned char' '='
|   | |-DeclRefExpr 0x1daf0a46678 <col:5> 'unsigned char' lvalue Var 0x1daf0a41e20 'selected' 'unsigned char'
|   | `-ImplicitCastExpr 0x1daf0a467f8 <col:16, col:62> 'unsigned char' <IntegralCast>
|   |   `-CallExpr 0x1daf0a46730 <col:16, col:62> 'int'
|   |     |-ImplicitCastExpr 0x1daf0a46718 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1daf0a46698 <col:16> 'int ()' Function 0x1daf0a41eb0 'constant_time_select_8' 'int ()'
|   |     |-ImplicitCastExpr 0x1daf0a46780 <col:39> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1daf0a46768 <col:39> 'unsigned char' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1daf0a466b8 <col:39> 'const unsigned char' lvalue Var 0x1daf09999b8 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     |-ImplicitCastExpr 0x1daf0a467b0 <col:58> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1daf0a46798 <col:58> 'unsigned char' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1daf0a466d8 <col:58> 'unsigned char' lvalue ParmVar 0x1daf0a41bb8 'a' 'unsigned char'
|   |     `-ImplicitCastExpr 0x1daf0a467e0 <col:61> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x1daf0a467c8 <col:61> 'unsigned char' <LValueToRValue>
|   |         `-DeclRefExpr 0x1daf0a466f8 <col:61> 'unsigned char' lvalue ParmVar 0x1daf0a41c38 'b' 'unsigned char'
|   |-IfStmt 0x1daf0a46d20 <line:116:5, line:121:5>
|   | |-BinaryOperator 0x1daf0a468d0 <line:116:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1daf0a468a0 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1daf0a46870 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1daf0a46830 <col:9> 'unsigned char' lvalue Var 0x1daf0a41e20 'selected' 'unsigned char'
|   | | `-ImplicitCastExpr 0x1daf0a468b8 <col:21> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1daf0a46888 <col:21> 'unsigned char' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1daf0a46850 <col:21> 'unsigned char' lvalue ParmVar 0x1daf0a41c38 'b' 'unsigned char'
|   | `-CompoundStmt 0x1daf0a46d00 <col:24, line:121:5>
|   |   |-CallExpr 0x1daf0a46b68 <line:117:9, line:119:51> 'int'
|   |   | |-ImplicitCastExpr 0x1daf0a46b50 <line:117:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1daf0a468f0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1daf0a469c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1daf0a469b0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1daf0a46990 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1daf0a46948 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1daf0a46930 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1daf0a46910 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1daf0a46968 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1daf0a46bd8 <.//openssl//file_jk/after\test\constant_time_test.c:117:25, line:118:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1daf0a46bc0 <line:117:25, line:118:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1daf0a46a28 <line:117:25, line:118:17> 'char [84]' lvalue "Test failed for constant_time_select(%u, %u,%u): expected %u(second value), got %u\n"
|   |   | |-ImplicitCastExpr 0x1daf0a46bf0 <line:119:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a46a98 <col:17> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1daf0a46c20 <col:34> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1daf0a46c08 <col:34> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1daf0a46ab8 <col:34> 'unsigned char' lvalue ParmVar 0x1daf0a41bb8 'a' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x1daf0a46c50 <col:37> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1daf0a46c38 <col:37> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1daf0a46ad8 <col:37> 'unsigned char' lvalue ParmVar 0x1daf0a41c38 'b' 'unsigned char'
|   |   | |-ImplicitCastExpr 0x1daf0a46c80 <col:40> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x1daf0a46c68 <col:40> 'unsigned char' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1daf0a46af8 <col:40> 'unsigned char' lvalue ParmVar 0x1daf0a41c38 'b' 'unsigned char'
|   |   | `-ImplicitCastExpr 0x1daf0a46cb0 <col:43> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1daf0a46c98 <col:43> 'unsigned char' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1daf0a46b18 <col:43> 'unsigned char' lvalue Var 0x1daf0a41e20 'selected' 'unsigned char'
|   |   `-ReturnStmt 0x1daf0a46cf0 <line:120:9, col:16>
|   |     `-IntegerLiteral 0x1daf0a46cc8 <col:16> 'int' 1
|   `-ReturnStmt 0x1daf0a46d60 <line:122:5, col:12>
|     `-IntegerLiteral 0x1daf0a46d38 <col:12> 'int' 0
|-FunctionDecl 0x1daf0a46f50 <line:125:1, line:142:1> line:125:12 used test_select_int 'int (int, int)' static
| |-ParmVarDecl 0x1daf0a46dc0 <col:28, col:32> col:32 used a 'int'
| |-ParmVarDecl 0x1daf0a46e40 <col:35, col:39> col:39 used b 'int'
| `-CompoundStmt 0x1daf0a48da0 <line:126:1, line:142:1>
|   |-DeclStmt 0x1daf0a48330 <line:127:5, col:66>
|   | `-VarDecl 0x1daf0a47030 <col:5, col:65> col:9 used selected 'int' cinit
|   |   `-CallExpr 0x1daf0a482b0 <col:20, col:65> 'int'
|   |     |-ImplicitCastExpr 0x1daf0a48298 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1daf0a48218 <col:20> 'int ()' Function 0x1daf0a48150 'constant_time_select_int' 'int ()'
|   |     |-ImplicitCastExpr 0x1daf0a482e8 <col:45> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1daf0a48238 <col:45> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   |     |-ImplicitCastExpr 0x1daf0a48300 <col:61> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1daf0a48258 <col:61> 'int' lvalue ParmVar 0x1daf0a46dc0 'a' 'int'
|   |     `-ImplicitCastExpr 0x1daf0a48318 <col:64> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1daf0a48278 <col:64> 'int' lvalue ParmVar 0x1daf0a46e40 'b' 'int'
|   |-IfStmt 0x1daf0a48780 <line:128:5, line:133:5>
|   | |-BinaryOperator 0x1daf0a483d0 <line:128:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1daf0a483a0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1daf0a48348 <col:9> 'int' lvalue Var 0x1daf0a47030 'selected' 'int'
|   | | `-ImplicitCastExpr 0x1daf0a483b8 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1daf0a48380 <col:21> 'int' lvalue ParmVar 0x1daf0a46dc0 'a' 'int'
|   | `-CompoundStmt 0x1daf0a48760 <col:24, line:133:5>
|   |   |-CallExpr 0x1daf0a48628 <line:129:9, line:131:50> 'int'
|   |   | |-ImplicitCastExpr 0x1daf0a48610 <line:129:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1daf0a483f0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1daf0a484c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1daf0a484b0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1daf0a48490 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1daf0a48448 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1daf0a48430 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1daf0a48410 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1daf0a48468 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1daf0a48698 <.//openssl//file_jk/after\test\constant_time_test.c:129:25, line:130:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1daf0a48680 <line:129:25, line:130:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1daf0a484e8 <line:129:25, line:130:17> 'char [84]' lvalue "Test failed for constant_time_select(%du, %d,%d): expected %d(first value), got %d\n"
|   |   | |-ImplicitCastExpr 0x1daf0a486b0 <line:131:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a48558 <col:17> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1daf0a486c8 <col:33> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a48578 <col:33> 'int' lvalue ParmVar 0x1daf0a46dc0 'a' 'int'
|   |   | |-ImplicitCastExpr 0x1daf0a486e0 <col:36> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a48598 <col:36> 'int' lvalue ParmVar 0x1daf0a46e40 'b' 'int'
|   |   | |-ImplicitCastExpr 0x1daf0a486f8 <col:39> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a485b8 <col:39> 'int' lvalue ParmVar 0x1daf0a46dc0 'a' 'int'
|   |   | `-ImplicitCastExpr 0x1daf0a48710 <col:42> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1daf0a485d8 <col:42> 'int' lvalue Var 0x1daf0a47030 'selected' 'int'
|   |   `-ReturnStmt 0x1daf0a48750 <line:132:9, col:16>
|   |     `-IntegerLiteral 0x1daf0a48728 <col:16> 'int' 1
|   |-BinaryOperator 0x1daf0a488d0 <line:134:5, col:62> 'int' '='
|   | |-DeclRefExpr 0x1daf0a48798 <col:5> 'int' lvalue Var 0x1daf0a47030 'selected' 'int'
|   | `-CallExpr 0x1daf0a48850 <col:16, col:62> 'int'
|   |   |-ImplicitCastExpr 0x1daf0a48838 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1daf0a487b8 <col:16> 'int ()' Function 0x1daf0a48150 'constant_time_select_int' 'int ()'
|   |   |-ImplicitCastExpr 0x1daf0a48888 <col:41> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1daf0a487d8 <col:41> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |   |-ImplicitCastExpr 0x1daf0a488a0 <col:58> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1daf0a487f8 <col:58> 'int' lvalue ParmVar 0x1daf0a46dc0 'a' 'int'
|   |   `-ImplicitCastExpr 0x1daf0a488b8 <col:61> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1daf0a48818 <col:61> 'int' lvalue ParmVar 0x1daf0a46e40 'b' 'int'
|   |-IfStmt 0x1daf0a48d50 <line:135:5, line:140:5>
|   | |-BinaryOperator 0x1daf0a48960 <line:135:9, col:21> 'int' '!='
|   | | |-ImplicitCastExpr 0x1daf0a48930 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1daf0a488f0 <col:9> 'int' lvalue Var 0x1daf0a47030 'selected' 'int'
|   | | `-ImplicitCastExpr 0x1daf0a48948 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1daf0a48910 <col:21> 'int' lvalue ParmVar 0x1daf0a46e40 'b' 'int'
|   | `-CompoundStmt 0x1daf0a48d30 <col:24, line:140:5>
|   |   |-CallExpr 0x1daf0a48bf8 <line:136:9, line:138:51> 'int'
|   |   | |-ImplicitCastExpr 0x1daf0a48be0 <line:136:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1daf0a48980 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |   | |-ParenExpr 0x1daf0a48a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |   | | `-UnaryOperator 0x1daf0a48a40 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |   | |   `-ArraySubscriptExpr 0x1daf0a48a20 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |   | |     |-CallExpr 0x1daf0a489d8 <col:18, col:29> 'FILE *'
|   |   | |     | `-ImplicitCastExpr 0x1daf0a489c0 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | |     |   `-DeclRefExpr 0x1daf0a489a0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |   | |     `-IntegerLiteral 0x1daf0a489f8 <col:31> 'int' 2
|   |   | |-ImplicitCastExpr 0x1daf0a48c68 <.//openssl//file_jk/after\test\constant_time_test.c:136:25, line:137:17> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1daf0a48c50 <line:136:25, line:137:17> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x1daf0a48ab8 <line:136:25, line:137:17> 'char [85]' lvalue "Test failed for constant_time_select(%du, %d,%d): expected %d(second value), got %d\n"
|   |   | |-ImplicitCastExpr 0x1daf0a48c80 <line:138:17> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a48b28 <col:17> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |   | |-ImplicitCastExpr 0x1daf0a48c98 <col:34> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a48b48 <col:34> 'int' lvalue ParmVar 0x1daf0a46dc0 'a' 'int'
|   |   | |-ImplicitCastExpr 0x1daf0a48cb0 <col:37> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a48b68 <col:37> 'int' lvalue ParmVar 0x1daf0a46e40 'b' 'int'
|   |   | |-ImplicitCastExpr 0x1daf0a48cc8 <col:40> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1daf0a48b88 <col:40> 'int' lvalue ParmVar 0x1daf0a46e40 'b' 'int'
|   |   | `-ImplicitCastExpr 0x1daf0a48ce0 <col:43> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1daf0a48ba8 <col:43> 'int' lvalue Var 0x1daf0a47030 'selected' 'int'
|   |   `-ReturnStmt 0x1daf0a48d20 <line:139:9, col:16>
|   |     `-IntegerLiteral 0x1daf0a48cf8 <col:16> 'int' 1
|   `-ReturnStmt 0x1daf0a48d90 <line:141:5, col:12>
|     `-IntegerLiteral 0x1daf0a48d68 <col:12> 'int' 0
|-FunctionDecl 0x1daf0a48f40 <line:144:1, line:158:1> line:144:12 used test_eq_int 'int (int, int)' static
| |-ParmVarDecl 0x1daf0a48df0 <col:24, col:28> col:28 used a 'int'
| |-ParmVarDecl 0x1daf0a48e70 <col:31, col:35> col:35 used b 'int'
| `-CompoundStmt 0x1daf099f310 <line:145:1, line:158:1>
|   |-DeclStmt 0x1daf099e918 <line:146:5, col:52>
|   | `-VarDecl 0x1daf0a49020 <col:5, col:51> col:18 used equal 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1daf099e900 <col:26, col:51> 'unsigned int' <IntegralCast>
|   |     `-CallExpr 0x1daf099e8a0 <col:26, col:51> 'int'
|   |       |-ImplicitCastExpr 0x1daf099e888 <col:26> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1daf099e828 <col:26> 'int ()' Function 0x1daf0a490b0 'constant_time_eq_int' 'int ()'
|   |       |-ImplicitCastExpr 0x1daf099e8d0 <col:47> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1daf099e848 <col:47> 'int' lvalue ParmVar 0x1daf0a48df0 'a' 'int'
|   |       `-ImplicitCastExpr 0x1daf099e8e8 <col:50> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1daf099e868 <col:50> 'int' lvalue ParmVar 0x1daf0a48e70 'b' 'int'
|   |-IfStmt 0x1daf099f2b0 <line:147:5, line:156:5> has_else
|   | |-BinaryOperator 0x1daf099ea68 <line:147:9, col:28> 'int' '&&'
|   | | |-BinaryOperator 0x1daf099e9a0 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1daf099e970 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf099e930 <col:9> 'int' lvalue ParmVar 0x1daf0a48df0 'a' 'int'
|   | | | `-ImplicitCastExpr 0x1daf099e988 <col:14> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1daf099e950 <col:14> 'int' lvalue ParmVar 0x1daf0a48e70 'b' 'int'
|   | | `-BinaryOperator 0x1daf099ea48 <col:19, col:28> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1daf099ea18 <col:19> 'unsigned int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1daf099e9c0 <col:19> 'unsigned int' lvalue Var 0x1daf0a49020 'equal' 'unsigned int'
|   | |   `-ImplicitCastExpr 0x1daf099ea30 <col:28> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1daf099e9f8 <col:28> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   | |-CompoundStmt 0x1daf099edb0 <col:44, line:151:5>
|   | | |-CallExpr 0x1daf099ec98 <line:148:9, line:149:77> 'int'
|   | | | |-ImplicitCastExpr 0x1daf099ec80 <line:148:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1daf099ea88 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1daf099eb60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1daf099eb48 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1daf099eb28 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1daf099eae0 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1daf099eac8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1daf099eaa8 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1daf099eb00 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1daf099ed00 <.//openssl//file_jk/after\test\constant_time_test.c:148:25, line:149:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1daf099ece8 <line:148:25, line:149:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1daf099eb80 <line:148:25, line:149:17> 'char [75]' lvalue "Test failed for constant_time_eq_int(%d, %d): expected %du(TRUE), got %du\n"
|   | | | |-ImplicitCastExpr 0x1daf099ed18 <col:50> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf099ebe8 <col:50> 'int' lvalue ParmVar 0x1daf0a48df0 'a' 'int'
|   | | | |-ImplicitCastExpr 0x1daf099ed30 <col:53> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf099ec08 <col:53> 'int' lvalue ParmVar 0x1daf0a48e70 'b' 'int'
|   | | | |-ImplicitCastExpr 0x1daf099ed48 <col:56> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf099ec28 <col:56> 'const unsigned int' lvalue Var 0x1daf09996b0 'CONSTTIME_TRUE' 'const unsigned int'
|   | | | `-ImplicitCastExpr 0x1daf099ed60 <col:72> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1daf099ec48 <col:72> 'unsigned int' lvalue Var 0x1daf0a49020 'equal' 'unsigned int'
|   | | `-ReturnStmt 0x1daf099eda0 <line:150:9, col:16>
|   | |   `-IntegerLiteral 0x1daf099ed78 <col:16> 'int' 1
|   | `-IfStmt 0x1daf099f298 <line:151:12, line:156:5>
|   |   |-BinaryOperator 0x1daf099eef0 <line:151:16, col:35> 'int' '&&'
|   |   | |-BinaryOperator 0x1daf099ee40 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1daf099ee10 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1daf099edd0 <col:16> 'int' lvalue ParmVar 0x1daf0a48df0 'a' 'int'
|   |   | | `-ImplicitCastExpr 0x1daf099ee28 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1daf099edf0 <col:21> 'int' lvalue ParmVar 0x1daf0a48e70 'b' 'int'
|   |   | `-BinaryOperator 0x1daf099eed0 <col:26, col:35> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1daf099eea0 <col:26> 'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1daf099ee60 <col:26> 'unsigned int' lvalue Var 0x1daf0a49020 'equal' 'unsigned int'
|   |   |   `-ImplicitCastExpr 0x1daf099eeb8 <col:35> 'unsigned int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1daf099ee80 <col:35> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |   `-CompoundStmt 0x1daf099f278 <col:52, line:156:5>
|   |     |-CallExpr 0x1daf099f160 <line:152:9, line:154:45> 'int'
|   |     | |-ImplicitCastExpr 0x1daf099f148 <line:152:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1daf099ef10 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1daf099efe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1daf099efd0 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1daf099efb0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1daf099ef68 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1daf099ef50 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1daf099ef30 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1daf099ef88 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1daf099f1c8 <.//openssl//file_jk/after\test\constant_time_test.c:152:25, line:153:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1daf099f1b0 <line:152:25, line:153:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1daf099f048 <line:152:25, line:153:17> 'char [76]' lvalue "Test failed for constant_time_eq_int(%d, %d): expected %du(FALSE), got %du\n"
|   |     | |-ImplicitCastExpr 0x1daf099f1e0 <line:154:17> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf099f0b0 <col:17> 'int' lvalue ParmVar 0x1daf0a48df0 'a' 'int'
|   |     | |-ImplicitCastExpr 0x1daf099f1f8 <col:20> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf099f0d0 <col:20> 'int' lvalue ParmVar 0x1daf0a48e70 'b' 'int'
|   |     | |-ImplicitCastExpr 0x1daf099f210 <col:23> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf099f0f0 <col:23> 'const unsigned int' lvalue Var 0x1daf0999808 'CONSTTIME_FALSE' 'const unsigned int'
|   |     | `-ImplicitCastExpr 0x1daf099f228 <col:40> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1daf099f110 <col:40> 'unsigned int' lvalue Var 0x1daf0a49020 'equal' 'unsigned int'
|   |     `-ReturnStmt 0x1daf099f268 <line:155:9, col:16>
|   |       `-IntegerLiteral 0x1daf099f240 <col:16> 'int' 1
|   `-ReturnStmt 0x1daf099f300 <line:157:5, col:12>
|     `-IntegerLiteral 0x1daf099f2d8 <col:12> 'int' 0
|-FunctionDecl 0x1daf099f4a0 <line:160:1, line:174:1> line:160:12 used test_eq_int_8 'int (int, int)' static
| |-ParmVarDecl 0x1daf099f350 <col:26, col:30> col:30 used a 'int'
| |-ParmVarDecl 0x1daf099f3d0 <col:33, col:37> col:37 used b 'int'
| `-CompoundStmt 0x1daf09a0240 <line:161:1, line:174:1>
|   |-DeclStmt 0x1daf099f7c8 <line:162:5, col:55>
|   | `-VarDecl 0x1daf099f580 <col:5, col:54> col:19 used equal 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x1daf099f7b0 <col:27, col:54> 'unsigned char' <IntegralCast>
|   |     `-CallExpr 0x1daf099f750 <col:27, col:54> 'int'
|   |       |-ImplicitCastExpr 0x1daf099f738 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1daf099f6d8 <col:27> 'int ()' Function 0x1daf099f610 'constant_time_eq_int_8' 'int ()'
|   |       |-ImplicitCastExpr 0x1daf099f780 <col:50> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1daf099f6f8 <col:50> 'int' lvalue ParmVar 0x1daf099f350 'a' 'int'
|   |       `-ImplicitCastExpr 0x1daf099f798 <col:53> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1daf099f718 <col:53> 'int' lvalue ParmVar 0x1daf099f3d0 'b' 'int'
|   |-IfStmt 0x1daf09a01e0 <line:163:5, line:172:5> has_else
|   | |-BinaryOperator 0x1daf099f948 <line:163:9, col:28> 'int' '&&'
|   | | |-BinaryOperator 0x1daf099f850 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1daf099f820 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf099f7e0 <col:9> 'int' lvalue ParmVar 0x1daf099f350 'a' 'int'
|   | | | `-ImplicitCastExpr 0x1daf099f838 <col:14> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1daf099f800 <col:14> 'int' lvalue ParmVar 0x1daf099f3d0 'b' 'int'
|   | | `-BinaryOperator 0x1daf099f928 <col:19, col:28> 'int' '!='
|   | |   |-ImplicitCastExpr 0x1daf099f8f8 <col:19> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1daf099f8c8 <col:19> 'unsigned char' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1daf099f870 <col:19> 'unsigned char' lvalue Var 0x1daf099f580 'equal' 'unsigned char'
|   | |   `-ImplicitCastExpr 0x1daf099f910 <col:28> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1daf099f8e0 <col:28> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1daf099f8a8 <col:28> 'const unsigned char' lvalue Var 0x1daf09998e0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | |-CompoundStmt 0x1daf099fcc0 <col:46, line:167:5>
|   | | |-CallExpr 0x1daf099fb78 <line:164:9, line:165:77> 'int'
|   | | | |-ImplicitCastExpr 0x1daf099fb60 <line:164:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1daf099f968 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   | | | |-ParenExpr 0x1daf099fa40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   | | | | `-UnaryOperator 0x1daf099fa28 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   | | | |   `-ArraySubscriptExpr 0x1daf099fa08 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   | | | |     |-CallExpr 0x1daf099f9c0 <col:18, col:29> 'FILE *'
|   | | | |     | `-ImplicitCastExpr 0x1daf099f9a8 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | | |     |   `-DeclRefExpr 0x1daf099f988 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   | | | |     `-IntegerLiteral 0x1daf099f9e0 <col:31> 'int' 2
|   | | | |-ImplicitCastExpr 0x1daf099fbe0 <.//openssl//file_jk/after\test\constant_time_test.c:164:25, line:165:17> 'const char *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x1daf099fbc8 <line:164:25, line:165:17> 'char *' <ArrayToPointerDecay>
|   | | | |   `-StringLiteral 0x1daf099fa60 <line:164:25, line:165:17> 'char [75]' lvalue "Test failed for constant_time_eq_int_8(%d, %d): expected %u(TRUE), got %u\n"
|   | | | |-ImplicitCastExpr 0x1daf099fbf8 <col:48> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf099fac8 <col:48> 'int' lvalue ParmVar 0x1daf099f350 'a' 'int'
|   | | | |-ImplicitCastExpr 0x1daf099fc10 <col:51> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1daf099fae8 <col:51> 'int' lvalue ParmVar 0x1daf099f3d0 'b' 'int'
|   | | | |-ImplicitCastExpr 0x1daf099fc40 <col:54> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1daf099fc28 <col:54> 'unsigned char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1daf099fb08 <col:54> 'const unsigned char' lvalue Var 0x1daf09998e0 'CONSTTIME_TRUE_8' 'const unsigned char'
|   | | | `-ImplicitCastExpr 0x1daf099fc70 <col:72> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1daf099fc58 <col:72> 'unsigned char' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1daf099fb28 <col:72> 'unsigned char' lvalue Var 0x1daf099f580 'equal' 'unsigned char'
|   | | `-ReturnStmt 0x1daf099fcb0 <line:166:9, col:16>
|   | |   `-IntegerLiteral 0x1daf099fc88 <col:16> 'int' 1
|   | `-IfStmt 0x1daf09a01c8 <line:167:12, line:172:5>
|   |   |-BinaryOperator 0x1daf099fe30 <line:167:16, col:35> 'int' '&&'
|   |   | |-BinaryOperator 0x1daf099fd50 <col:16, col:21> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1daf099fd20 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1daf099fce0 <col:16> 'int' lvalue ParmVar 0x1daf099f350 'a' 'int'
|   |   | | `-ImplicitCastExpr 0x1daf099fd38 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1daf099fd00 <col:21> 'int' lvalue ParmVar 0x1daf099f3d0 'b' 'int'
|   |   | `-BinaryOperator 0x1daf099fe10 <col:26, col:35> 'int' '!='
|   |   |   |-ImplicitCastExpr 0x1daf099fde0 <col:26> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1daf099fdb0 <col:26> 'unsigned char' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1daf099fd70 <col:26> 'unsigned char' lvalue Var 0x1daf099f580 'equal' 'unsigned char'
|   |   |   `-ImplicitCastExpr 0x1daf099fdf8 <col:35> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1daf099fdc8 <col:35> 'unsigned char' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1daf099fd90 <col:35> 'const unsigned char' lvalue Var 0x1daf09999b8 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |   `-CompoundStmt 0x1daf09a01a8 <col:54, line:172:5>
|   |     |-CallExpr 0x1daf09a0060 <line:168:9, line:170:47> 'int'
|   |     | |-ImplicitCastExpr 0x1daf09a0048 <line:168:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1daf099fe50 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
|   |     | |-ParenExpr 0x1daf099ff28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:151:16, col:33> 'FILE *'
|   |     | | `-UnaryOperator 0x1daf099ff10 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
|   |     | |   `-ArraySubscriptExpr 0x1daf099fef0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
|   |     | |     |-CallExpr 0x1daf099fea8 <col:18, col:29> 'FILE *'
|   |     | |     | `-ImplicitCastExpr 0x1daf099fe90 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x1daf099fe70 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|   |     | |     `-IntegerLiteral 0x1daf099fec8 <col:31> 'int' 2
|   |     | |-ImplicitCastExpr 0x1daf09a00c8 <.//openssl//file_jk/after\test\constant_time_test.c:168:25, line:169:17> 'const char *' <NoOp>
|   |     | | `-ImplicitCastExpr 0x1daf09a00b0 <line:168:25, line:169:17> 'char *' <ArrayToPointerDecay>
|   |     | |   `-StringLiteral 0x1daf099ff48 <line:168:25, line:169:17> 'char [76]' lvalue "Test failed for constant_time_eq_int_8(%d, %d): expected %u(FALSE), got %u\n"
|   |     | |-ImplicitCastExpr 0x1daf09a00e0 <line:170:17> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf099ffb0 <col:17> 'int' lvalue ParmVar 0x1daf099f350 'a' 'int'
|   |     | |-ImplicitCastExpr 0x1daf09a00f8 <col:20> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1daf099ffd0 <col:20> 'int' lvalue ParmVar 0x1daf099f3d0 'b' 'int'
|   |     | |-ImplicitCastExpr 0x1daf09a0128 <col:23> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1daf09a0110 <col:23> 'unsigned char' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1daf099fff0 <col:23> 'const unsigned char' lvalue Var 0x1daf09999b8 'CONSTTIME_FALSE_8' 'const unsigned char'
|   |     | `-ImplicitCastExpr 0x1daf09a0158 <col:42> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x1daf09a0140 <col:42> 'unsigned char' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1daf09a0010 <col:42> 'unsigned char' lvalue Var 0x1daf099f580 'equal' 'unsigned char'
|   |     `-ReturnStmt 0x1daf09a0198 <line:171:9, col:16>
|   |       `-IntegerLiteral 0x1daf09a0170 <col:16> 'int' 1
|   `-ReturnStmt 0x1daf09a0230 <line:173:5, col:12>
|     `-IntegerLiteral 0x1daf09a0208 <col:12> 'int' 0
|-VarDecl 0x1daf09a02c0 <line:176:1, line:180:1> line:176:21 used test_values 'unsigned int [10]' static cinit
| `-InitListExpr 0x1daf09a0bc8 <line:177:5, line:180:1> 'unsigned int [10]'
|   |-ImplicitCastExpr 0x1daf09a0c08 <line:177:7> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0328 <col:7> 'int' 0
|   |-ImplicitCastExpr 0x1daf09a0c28 <col:10> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0350 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x1daf09a0c50 <col:13> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0378 <col:13> 'int' 1024
|   |-ImplicitCastExpr 0x1daf09a0c88 <col:19> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a03a0 <col:19> 'int' 12345
|   |-ImplicitCastExpr 0x1daf09a0ca0 <col:26> 'unsigned int' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a03c8 <col:26> 'int' 32000
|   |-BinaryOperator 0x1daf09a0580 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:177:48> 'unsigned int' '-'
|   | |-BinaryOperator 0x1daf09a0520 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:177:44> 'unsigned int' '/'
|   | | |-ParenExpr 0x1daf09a04c0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | | `-BinaryOperator 0x1daf09a04a0 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | | |   |-BinaryOperator 0x1daf09a0458 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | | |   | |-ImplicitCastExpr 0x1daf09a0440 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | | |   | | `-IntegerLiteral 0x1daf09a03f0 <col:21> 'int' 2147483647
|   | | |   | `-IntegerLiteral 0x1daf09a0418 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | | |   `-IntegerLiteral 0x1daf09a0478 <col:38> 'unsigned int' 1
|   | | `-ImplicitCastExpr 0x1daf09a0508 <.//openssl//file_jk/after\test\constant_time_test.c:177:44> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1daf09a04e0 <col:44> 'int' 2
|   | `-ImplicitCastExpr 0x1daf09a0568 <col:48> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1daf09a0540 <col:48> 'int' 1
|   |-BinaryOperator 0x1daf09a06d0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:178:16> 'unsigned int' '/'
|   | |-ParenExpr 0x1daf09a0670 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | `-BinaryOperator 0x1daf09a0650 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | |   |-BinaryOperator 0x1daf09a0608 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | |   | |-ImplicitCastExpr 0x1daf09a05f0 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | |   | | `-IntegerLiteral 0x1daf09a05a0 <col:21> 'int' 2147483647
|   | |   | `-IntegerLiteral 0x1daf09a05c8 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | |   `-IntegerLiteral 0x1daf09a0628 <col:38> 'unsigned int' 1
|   | `-ImplicitCastExpr 0x1daf09a06b8 <.//openssl//file_jk/after\test\constant_time_test.c:178:16> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1daf09a0690 <col:16> 'int' 2
|   |-BinaryOperator 0x1daf09a08b0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:178:34> 'unsigned int' '+'
|   | |-BinaryOperator 0x1daf09a0850 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:178:30> 'unsigned int' '/'
|   | | |-ParenExpr 0x1daf09a07c0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | | `-BinaryOperator 0x1daf09a07a0 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | | |   |-BinaryOperator 0x1daf09a0758 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | | |   | |-ImplicitCastExpr 0x1daf09a0740 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | | |   | | `-IntegerLiteral 0x1daf09a06f0 <col:21> 'int' 2147483647
|   | | |   | `-IntegerLiteral 0x1daf09a0718 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | | |   `-IntegerLiteral 0x1daf09a0778 <col:38> 'unsigned int' 1
|   | | `-ImplicitCastExpr 0x1daf09a0838 <.//openssl//file_jk/after\test\constant_time_test.c:178:30> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1daf09a0810 <col:30> 'int' 2
|   | `-ImplicitCastExpr 0x1daf09a0898 <col:34> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1daf09a0870 <col:34> 'int' 1
|   |-BinaryOperator 0x1daf09a0a00 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, .//openssl//file_jk/after\test\constant_time_test.c:178:48> 'unsigned int' '-'
|   | |-ParenExpr 0x1daf09a09a0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|   | | `-BinaryOperator 0x1daf09a0980 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|   | |   |-BinaryOperator 0x1daf09a0938 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|   | |   | |-ImplicitCastExpr 0x1daf09a0920 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | |   | | `-IntegerLiteral 0x1daf09a08d0 <col:21> 'int' 2147483647
|   | |   | `-IntegerLiteral 0x1daf09a08f8 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|   | |   `-IntegerLiteral 0x1daf09a0958 <col:38> 'unsigned int' 1
|   | `-ImplicitCastExpr 0x1daf09a09e8 <.//openssl//file_jk/after\test\constant_time_test.c:178:48> 'unsigned int' <IntegralCast>
|   |   `-IntegerLiteral 0x1daf09a09c0 <col:48> 'int' 1
|   `-ParenExpr 0x1daf09a0af0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:19, col:40> 'unsigned int'
|     `-BinaryOperator 0x1daf09a0ad0 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:38> 'unsigned int' '+'
|       |-BinaryOperator 0x1daf09a0a88 <<built-in>:30:21, D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' '*'
|       | |-ImplicitCastExpr 0x1daf09a0a70 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|       | | `-IntegerLiteral 0x1daf09a0a20 <col:21> 'int' 2147483647
|       | `-IntegerLiteral 0x1daf09a0a48 <D:\LLVM\lib\clang\10.0.0\include\limits.h:56:34> 'unsigned int' 2
|       `-IntegerLiteral 0x1daf09a0aa8 <col:38> 'unsigned int' 1
|-VarDecl 0x1daf09a0e10 <.//openssl//file_jk/after\test\constant_time_test.c:182:1, line:183:43> line:182:22 used test_values_8 'unsigned char [9]' static cinit
| `-InitListExpr 0x1daf09a1090 <line:183:5, col:43> 'unsigned char [9]'
|   |-ImplicitCastExpr 0x1daf09a10d0 <col:7> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0e78 <col:7> 'int' 0
|   |-ImplicitCastExpr 0x1daf09a10f0 <col:10> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0ea0 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x1daf09a1118 <col:13> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0ec8 <col:13> 'int' 2
|   |-ImplicitCastExpr 0x1daf09a1150 <col:16> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0ef0 <col:16> 'int' 20
|   |-ImplicitCastExpr 0x1daf09a1168 <col:20> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0f18 <col:20> 'int' 32
|   |-ImplicitCastExpr 0x1daf09a11c0 <col:24> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0f40 <col:24> 'int' 127
|   |-ImplicitCastExpr 0x1daf09a11d8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0f68 <col:29> 'int' 128
|   |-ImplicitCastExpr 0x1daf09a11f0 <col:34> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1daf09a0f90 <col:34> 'int' 129
|   `-ImplicitCastExpr 0x1daf09a1208 <col:39> 'unsigned char' <IntegralCast>
|     `-IntegerLiteral 0x1daf09a0fb8 <col:39> 'int' 255
|-VarDecl 0x1daf09a1330 <line:185:1, line:188:1> line:185:12 used signed_test_values 'int [13]' static cinit
| `-InitListExpr 0x1daf09a1860 <col:35, line:188:1> 'int [13]'
|   |-IntegerLiteral 0x1daf09a1398 <line:185:37> 'int' 0
|   |-IntegerLiteral 0x1daf09a13c0 <col:40> 'int' 1
|   |-UnaryOperator 0x1daf09a1410 <col:43, col:44> 'int' prefix '-'
|   | `-IntegerLiteral 0x1daf09a13e8 <col:44> 'int' 1
|   |-IntegerLiteral 0x1daf09a1428 <col:47> 'int' 1024
|   |-UnaryOperator 0x1daf09a1478 <col:53, col:54> 'int' prefix '-'
|   | `-IntegerLiteral 0x1daf09a1450 <col:54> 'int' 1024
|   |-IntegerLiteral 0x1daf09a1490 <col:60> 'int' 12345
|   |-UnaryOperator 0x1daf09a14e0 <col:67, col:68> 'int' prefix '-'
|   | `-IntegerLiteral 0x1daf09a14b8 <col:68> 'int' 12345
|   |-IntegerLiteral 0x1daf09a14f8 <line:186:5> 'int' 32000
|   |-UnaryOperator 0x1daf09a1548 <col:12, col:13> 'int' prefix '-'
|   | `-IntegerLiteral 0x1daf09a1520 <col:13> 'int' 32000
|   |-IntegerLiteral 0x1daf09a1560 <<built-in>:30:21> 'int' 2147483647
|   |-ParenExpr 0x1daf09a1610 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:19, col:36> 'int'
|   | `-BinaryOperator 0x1daf09a15f0 <col:20, col:35> 'int' '-'
|   |   |-UnaryOperator 0x1daf09a15b0 <col:20, <built-in>:30:21> 'int' prefix '-'
|   |   | `-IntegerLiteral 0x1daf09a1588 <col:21> 'int' 2147483647
|   |   `-IntegerLiteral 0x1daf09a15c8 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:35> 'int' 1
|   |-BinaryOperator 0x1daf09a1680 <<built-in>:30:21, .//openssl//file_jk/after\test\constant_time_test.c:186:48> 'int' '-'
|   | |-IntegerLiteral 0x1daf09a1630 <<built-in>:30:21> 'int' 2147483647
|   | `-IntegerLiteral 0x1daf09a1658 <.//openssl//file_jk/after\test\constant_time_test.c:186:48> 'int' 1
|   `-BinaryOperator 0x1daf09a1770 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:19, .//openssl//file_jk/after\test\constant_time_test.c:187:15> 'int' '+'
|     |-ParenExpr 0x1daf09a1728 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:19, col:36> 'int'
|     | `-BinaryOperator 0x1daf09a1708 <col:20, col:35> 'int' '-'
|     |   |-UnaryOperator 0x1daf09a16c8 <col:20, <built-in>:30:21> 'int' prefix '-'
|     |   | `-IntegerLiteral 0x1daf09a16a0 <col:21> 'int' 2147483647
|     |   `-IntegerLiteral 0x1daf09a16e0 <D:\LLVM\lib\clang\10.0.0\include\limits.h:51:35> 'int' 1
|     `-IntegerLiteral 0x1daf09a1748 <.//openssl//file_jk/after\test\constant_time_test.c:187:15> 'int' 1
`-FunctionDecl 0x1daf09a1c30 <line:190:1, line:268:1> line:190:5 main 'int (int, char **)'
  |-ParmVarDecl 0x1daf09a19f0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x1daf09a1ae0 <col:20, col:31> col:26 argv 'char **':'char **'
  `-CompoundStmt 0x1daf09a9888 <line:191:1, line:268:1>
    |-DeclStmt 0x1daf09a1f20 <line:192:5, col:28>
    | |-VarDecl 0x1daf09a1d10 <col:5, col:18> col:18 used a 'unsigned int'
    | |-VarDecl 0x1daf09a1d90 <col:5, col:21> col:21 used b 'unsigned int'
    | |-VarDecl 0x1daf09a1e10 <col:5, col:24> col:24 used i 'unsigned int'
    | `-VarDecl 0x1daf09a1e90 <col:5, col:27> col:27 used j 'unsigned int'
    |-DeclStmt 0x1daf09a2050 <line:193:5, col:13>
    | |-VarDecl 0x1daf09a1f50 <col:5, col:9> col:9 used c 'int'
    | `-VarDecl 0x1daf09a1fd0 <col:5, col:12> col:12 used d 'int'
    |-DeclStmt 0x1daf09a2180 <line:194:5, col:23>
    | |-VarDecl 0x1daf09a2080 <col:5, col:19> col:19 used e 'unsigned char'
    | `-VarDecl 0x1daf09a2100 <col:5, col:22> col:22 used f 'unsigned char'
    |-DeclStmt 0x1daf09a2300 <line:195:5, col:36>
    | |-VarDecl 0x1daf09a21b0 <col:5, col:22> col:9 used num_failed 'int' cinit
    | | `-IntegerLiteral 0x1daf09a2218 <col:22> 'int' 0
    | `-VarDecl 0x1daf09a2258 <col:5, col:35> col:25 used num_all 'int' cinit
    |   `-IntegerLiteral 0x1daf09a22c0 <col:35> 'int' 0
    |-CallExpr 0x1daf09a24b8 <line:196:5, col:60> 'int'
    | |-ImplicitCastExpr 0x1daf09a24a0 <col:5> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1daf09a2318 <col:5> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
    | |-ParenExpr 0x1daf09a23f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
    | | `-UnaryOperator 0x1daf09a23d8 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
    | |   `-ArraySubscriptExpr 0x1daf09a23b8 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
    | |     |-CallExpr 0x1daf09a2370 <col:18, col:29> 'FILE *'
    | |     | `-ImplicitCastExpr 0x1daf09a2358 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
    | |     |   `-DeclRefExpr 0x1daf09a2338 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
    | |     `-IntegerLiteral 0x1daf09a2390 <col:31> 'int' 1
    | `-ImplicitCastExpr 0x1daf09a2500 <.//openssl//file_jk/after\test\constant_time_test.c:196:21> 'const char *' <NoOp>
    |   `-ImplicitCastExpr 0x1daf09a24e8 <col:21> 'char *' <ArrayToPointerDecay>
    |     `-StringLiteral 0x1daf09a2448 <col:21> 'char [37]' lvalue "Testing constant time operations...\n"
    |-ForStmt 0x1daf09a8050 <line:198:5, line:239:5>
    | |-BinaryOperator 0x1daf09a2590 <line:198:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x1daf09a2518 <col:10> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1daf09a2578 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1daf09a2550 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1daf09a27b0 <col:17, col:43> 'int' '<'
    | | |-ImplicitCastExpr 0x1daf09a2780 <col:17> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1daf09a25b0 <col:17> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1daf09a2798 <col:21, col:43> 'unsigned int' <IntegralCast>
    | |   `-CallExpr 0x1daf09a2718 <col:21, col:43> 'int'
    | |     |-ImplicitCastExpr 0x1daf09a2700 <col:21> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x1daf09a26c0 <col:21> 'int ()' Function 0x1daf09a25f8 'OSSL_NELEM' 'int ()'
    | |     `-ImplicitCastExpr 0x1daf09a2768 <col:32> 'unsigned int *' <ArrayToPointerDecay>
    | |       `-DeclRefExpr 0x1daf09a26e0 <col:32> 'unsigned int [10]' lvalue Var 0x1daf09a02c0 'test_values' 'unsigned int [10]'
    | |-UnaryOperator 0x1daf09a27f0 <col:46, col:48> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x1daf09a27d0 <col:48> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    | `-CompoundStmt 0x1daf09a8018 <col:51, line:239:5>
    |   |-BinaryOperator 0x1daf09a6900 <line:199:9, col:26> 'unsigned int' '='
    |   | |-DeclRefExpr 0x1daf09a6820 <col:9> 'unsigned int' lvalue Var 0x1daf09a1d10 'a' 'unsigned int'
    |   | `-ImplicitCastExpr 0x1daf09a68e8 <col:13, col:26> 'unsigned int' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1daf09a68c8 <col:13, col:26> 'unsigned int' lvalue
    |   |     |-ImplicitCastExpr 0x1daf09a6898 <col:13> 'unsigned int *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x1daf09a6858 <col:13> 'unsigned int [10]' lvalue Var 0x1daf09a02c0 'test_values' 'unsigned int [10]'
    |   |     `-ImplicitCastExpr 0x1daf09a68b0 <col:25> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1daf09a6878 <col:25> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    |   |-CompoundAssignOperator 0x1daf09a6a20 <line:200:9, col:37> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x1daf09a6920 <col:9> 'int' lvalue Var 0x1daf09a21b0 'num_failed' 'int'
    |   | `-CallExpr 0x1daf09a69e0 <col:23, col:37> 'int'
    |   |   |-ImplicitCastExpr 0x1daf09a69c8 <col:23> 'int (*)(unsigned int)' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1daf09a6958 <col:23> 'int (unsigned int)' Function 0x1daf0a40fd0 'test_is_zero' 'int (unsigned int)'
    |   |   `-ImplicitCastExpr 0x1daf09a6a08 <col:36> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1daf09a6978 <col:36> 'unsigned int' lvalue Var 0x1daf09a1d10 'a' 'unsigned int'
    |   |-CompoundAssignOperator 0x1daf09a6b08 <line:201:9, col:39> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x1daf09a6a50 <col:9> 'int' lvalue Var 0x1daf09a21b0 'num_failed' 'int'
    |   | `-CallExpr 0x1daf09a6ac8 <col:23, col:39> 'int'
    |   |   |-ImplicitCastExpr 0x1daf09a6ab0 <col:23> 'int (*)(unsigned int)' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x1daf09a6a70 <col:23> 'int (unsigned int)' Function 0x1daf0a42e10 'test_is_zero_8' 'int (unsigned int)'
    |   |   `-ImplicitCastExpr 0x1daf09a6af0 <col:38> 'unsigned int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1daf09a6a90 <col:38> 'unsigned int' lvalue Var 0x1daf09a1d10 'a' 'unsigned int'
    |   |-CompoundAssignOperator 0x1daf09a6b98 <line:202:9, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x1daf09a6b38 <col:9> 'int' lvalue Var 0x1daf09a2258 'num_all' 'int'
    |   | `-IntegerLiteral 0x1daf09a6b70 <col:20> 'int' 2
    |   `-ForStmt 0x1daf09a7fe0 <line:203:9, line:238:9>
    |     |-BinaryOperator 0x1daf09a6c40 <line:203:14, col:18> 'unsigned int' '='
    |     | |-DeclRefExpr 0x1daf09a6bc8 <col:14> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x1daf09a6c28 <col:18> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x1daf09a6c00 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1daf09a6d48 <col:21, col:47> 'int' '<'
    |     | |-ImplicitCastExpr 0x1daf09a6d18 <col:21> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1daf09a6c60 <col:21> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x1daf09a6d30 <col:25, col:47> 'unsigned int' <IntegralCast>
    |     |   `-CallExpr 0x1daf09a6cd8 <col:25, col:47> 'int'
    |     |     |-ImplicitCastExpr 0x1daf09a6cc0 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x1daf09a6c80 <col:25> 'int ()' Function 0x1daf09a25f8 'OSSL_NELEM' 'int ()'
    |     |     `-ImplicitCastExpr 0x1daf09a6d00 <col:36> 'unsigned int *' <ArrayToPointerDecay>
    |     |       `-DeclRefExpr 0x1daf09a6ca0 <col:36> 'unsigned int [10]' lvalue Var 0x1daf09a02c0 'test_values' 'unsigned int [10]'
    |     |-UnaryOperator 0x1daf09a6d88 <col:50, col:52> 'unsigned int' prefix '++'
    |     | `-DeclRefExpr 0x1daf09a6d68 <col:52> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |     `-CompoundStmt 0x1daf09a7fb8 <col:55, line:238:9>
    |       |-BinaryOperator 0x1daf09a6e80 <line:204:13, col:30> 'unsigned int' '='
    |       | |-DeclRefExpr 0x1daf09a6da0 <col:13> 'unsigned int' lvalue Var 0x1daf09a1d90 'b' 'unsigned int'
    |       | `-ImplicitCastExpr 0x1daf09a6e68 <col:17, col:30> 'unsigned int' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1daf09a6e48 <col:17, col:30> 'unsigned int' lvalue
    |       |     |-ImplicitCastExpr 0x1daf09a6e18 <col:17> 'unsigned int *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x1daf09a6dd8 <col:17> 'unsigned int [10]' lvalue Var 0x1daf09a02c0 'test_values' 'unsigned int [10]'
    |       |     `-ImplicitCastExpr 0x1daf09a6e30 <col:29> 'unsigned int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x1daf09a6df8 <col:29> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |       |-CompoundAssignOperator 0x1daf09a7f10 <line:236:13, col:43> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1daf09a7de8 <col:13> 'int' lvalue Var 0x1daf09a21b0 'num_failed' 'int'
    |       | `-CallExpr 0x1daf09a7eb0 <col:27, col:43> 'int'
    |       |   |-ImplicitCastExpr 0x1daf09a7e98 <col:27> 'int (*)(unsigned int, unsigned int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1daf09a7e08 <col:27> 'int (unsigned int, unsigned int)' Function 0x1daf0a43d30 'test_select' 'int (unsigned int, unsigned int)'
    |       |   |-ImplicitCastExpr 0x1daf09a7ee0 <col:39> 'unsigned int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1daf09a7e28 <col:39> 'unsigned int' lvalue Var 0x1daf09a1d10 'a' 'unsigned int'
    |       |   `-ImplicitCastExpr 0x1daf09a7ef8 <col:42> 'unsigned int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1daf09a7e48 <col:42> 'unsigned int' lvalue Var 0x1daf09a1d90 'b' 'unsigned int'
    |       `-CompoundAssignOperator 0x1daf09a7f88 <line:237:13, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x1daf09a7f40 <col:13> 'int' lvalue Var 0x1daf09a2258 'num_all' 'int'
    |         `-IntegerLiteral 0x1daf09a7f60 <col:24> 'int' 13
    |-ForStmt 0x1daf09a8af0 <line:241:5, line:250:5>
    | |-BinaryOperator 0x1daf09a80e8 <line:241:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x1daf09a8088 <col:10> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1daf09a80d0 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1daf09a80a8 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1daf09a81f0 <col:17, col:50> 'int' '<'
    | | |-ImplicitCastExpr 0x1daf09a81c0 <col:17> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1daf09a8108 <col:17> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1daf09a81d8 <col:21, col:50> 'unsigned int' <IntegralCast>
    | |   `-CallExpr 0x1daf09a8180 <col:21, col:50> 'int'
    | |     |-ImplicitCastExpr 0x1daf09a8168 <col:21> 'int (*)()' <FunctionToPointerDecay>
    | |     | `-DeclRefExpr 0x1daf09a8128 <col:21> 'int ()' Function 0x1daf09a25f8 'OSSL_NELEM' 'int ()'
    | |     `-ImplicitCastExpr 0x1daf09a81a8 <col:32> 'int *' <ArrayToPointerDecay>
    | |       `-DeclRefExpr 0x1daf09a8148 <col:32> 'int [13]' lvalue Var 0x1daf09a1330 'signed_test_values' 'int [13]'
    | |-UnaryOperator 0x1daf09a8230 <col:53, col:55> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x1daf09a8210 <col:55> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    | `-CompoundStmt 0x1daf09a8ad0 <col:58, line:250:5>
    |   |-BinaryOperator 0x1daf09a8328 <line:242:9, col:33> 'int' '='
    |   | |-DeclRefExpr 0x1daf09a8248 <col:9> 'int' lvalue Var 0x1daf09a1f50 'c' 'int'
    |   | `-ImplicitCastExpr 0x1daf09a8310 <col:13, col:33> 'int' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1daf09a82f0 <col:13, col:33> 'int' lvalue
    |   |     |-ImplicitCastExpr 0x1daf09a82c0 <col:13> 'int *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x1daf09a8280 <col:13> 'int [13]' lvalue Var 0x1daf09a1330 'signed_test_values' 'int [13]'
    |   |     `-ImplicitCastExpr 0x1daf09a82d8 <col:32> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1daf09a82a0 <col:32> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    |   `-ForStmt 0x1daf09a8a98 <line:243:9, line:249:9>
    |     |-BinaryOperator 0x1daf09a83a8 <line:243:14, col:18> 'unsigned int' '='
    |     | |-DeclRefExpr 0x1daf09a8348 <col:14> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x1daf09a8390 <col:18> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x1daf09a8368 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1daf09a84b0 <col:21, col:54> 'int' '<'
    |     | |-ImplicitCastExpr 0x1daf09a8480 <col:21> 'unsigned int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1daf09a83c8 <col:21> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x1daf09a8498 <col:25, col:54> 'unsigned int' <IntegralCast>
    |     |   `-CallExpr 0x1daf09a8440 <col:25, col:54> 'int'
    |     |     |-ImplicitCastExpr 0x1daf09a8428 <col:25> 'int (*)()' <FunctionToPointerDecay>
    |     |     | `-DeclRefExpr 0x1daf09a83e8 <col:25> 'int ()' Function 0x1daf09a25f8 'OSSL_NELEM' 'int ()'
    |     |     `-ImplicitCastExpr 0x1daf09a8468 <col:36> 'int *' <ArrayToPointerDecay>
    |     |       `-DeclRefExpr 0x1daf09a8408 <col:36> 'int [13]' lvalue Var 0x1daf09a1330 'signed_test_values' 'int [13]'
    |     |-UnaryOperator 0x1daf09a84f0 <col:57, col:59> 'unsigned int' prefix '++'
    |     | `-DeclRefExpr 0x1daf09a84d0 <col:59> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |     `-CompoundStmt 0x1daf09a8a60 <col:62, line:249:9>
    |       |-BinaryOperator 0x1daf09a85e8 <line:244:13, col:37> 'int' '='
    |       | |-DeclRefExpr 0x1daf09a8508 <col:13> 'int' lvalue Var 0x1daf09a1fd0 'd' 'int'
    |       | `-ImplicitCastExpr 0x1daf09a85d0 <col:17, col:37> 'int' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1daf09a85b0 <col:17, col:37> 'int' lvalue
    |       |     |-ImplicitCastExpr 0x1daf09a8580 <col:17> 'int *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x1daf09a8540 <col:17> 'int [13]' lvalue Var 0x1daf09a1330 'signed_test_values' 'int [13]'
    |       |     `-ImplicitCastExpr 0x1daf09a8598 <col:36> 'unsigned int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x1daf09a8560 <col:36> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |       |-CompoundAssignOperator 0x1daf09a8730 <line:245:13, col:47> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1daf09a8608 <col:13> 'int' lvalue Var 0x1daf09a21b0 'num_failed' 'int'
    |       | `-CallExpr 0x1daf09a86d0 <col:27, col:47> 'int'
    |       |   |-ImplicitCastExpr 0x1daf09a86b8 <col:27> 'int (*)(int, int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1daf09a8628 <col:27> 'int (int, int)' Function 0x1daf0a46f50 'test_select_int' 'int (int, int)'
    |       |   |-ImplicitCastExpr 0x1daf09a8700 <col:43> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1daf09a8648 <col:43> 'int' lvalue Var 0x1daf09a1f50 'c' 'int'
    |       |   `-ImplicitCastExpr 0x1daf09a8718 <col:46> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1daf09a8668 <col:46> 'int' lvalue Var 0x1daf09a1fd0 'd' 'int'
    |       |-CompoundAssignOperator 0x1daf09a8890 <line:246:13, col:43> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1daf09a8760 <col:13> 'int' lvalue Var 0x1daf09a21b0 'num_failed' 'int'
    |       | `-CallExpr 0x1daf09a8830 <col:27, col:43> 'int'
    |       |   |-ImplicitCastExpr 0x1daf09a87e0 <col:27> 'int (*)(int, int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1daf09a8780 <col:27> 'int (int, int)' Function 0x1daf0a48f40 'test_eq_int' 'int (int, int)'
    |       |   |-ImplicitCastExpr 0x1daf09a8860 <col:39> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1daf09a87a0 <col:39> 'int' lvalue Var 0x1daf09a1f50 'c' 'int'
    |       |   `-ImplicitCastExpr 0x1daf09a8878 <col:42> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1daf09a87c0 <col:42> 'int' lvalue Var 0x1daf09a1fd0 'd' 'int'
    |       |-CompoundAssignOperator 0x1daf09a89b8 <line:247:13, col:45> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1daf09a88c0 <col:13> 'int' lvalue Var 0x1daf09a21b0 'num_failed' 'int'
    |       | `-CallExpr 0x1daf09a8958 <col:27, col:45> 'int'
    |       |   |-ImplicitCastExpr 0x1daf09a8940 <col:27> 'int (*)(int, int)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1daf09a88e0 <col:27> 'int (int, int)' Function 0x1daf099f4a0 'test_eq_int_8' 'int (int, int)'
    |       |   |-ImplicitCastExpr 0x1daf09a8988 <col:41> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1daf09a8900 <col:41> 'int' lvalue Var 0x1daf09a1f50 'c' 'int'
    |       |   `-ImplicitCastExpr 0x1daf09a89a0 <col:44> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1daf09a8920 <col:44> 'int' lvalue Var 0x1daf09a1fd0 'd' 'int'
    |       `-CompoundAssignOperator 0x1daf09a8a30 <line:248:13, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x1daf09a89e8 <col:13> 'int' lvalue Var 0x1daf09a2258 'num_all' 'int'
    |         `-IntegerLiteral 0x1daf09a8a08 <col:24> 'int' 3
    |-ForStmt 0x1daf09a92b8 <line:252:5, line:259:5>
    | |-BinaryOperator 0x1daf09a8b88 <line:252:10, col:14> 'unsigned int' '='
    | | |-DeclRefExpr 0x1daf09a8b28 <col:10> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x1daf09a8b70 <col:14> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x1daf09a8b48 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1daf09a8c58 <col:17, col:41> 'int' '<'
    | | |-ImplicitCastExpr 0x1daf09a8c40 <col:17> 'unsigned long long' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1daf09a8c28 <col:17> 'unsigned int' <LValueToRValue>
    | | |   `-DeclRefExpr 0x1daf09a8ba8 <col:17> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    | | `-UnaryExprOrTypeTraitExpr 0x1daf09a8c08 <col:21, col:41> 'unsigned long long' sizeof
    | |   `-ParenExpr 0x1daf09a8be8 <col:27, col:41> 'unsigned char [9]' lvalue
    | |     `-DeclRefExpr 0x1daf09a8bc8 <col:28> 'unsigned char [9]' lvalue Var 0x1daf09a0e10 'test_values_8' 'unsigned char [9]' non_odr_use_unevaluated
    | |-UnaryOperator 0x1daf09a8c98 <col:44, col:46> 'unsigned int' prefix '++'
    | | `-DeclRefExpr 0x1daf09a8c78 <col:46> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    | `-CompoundStmt 0x1daf09a9298 <col:49, line:259:5>
    |   |-BinaryOperator 0x1daf09a8dc0 <line:253:9, col:28> 'unsigned char' '='
    |   | |-DeclRefExpr 0x1daf09a8cb0 <col:9> 'unsigned char' lvalue Var 0x1daf09a2080 'e' 'unsigned char'
    |   | `-ImplicitCastExpr 0x1daf09a8da8 <col:13, col:28> 'unsigned char' <LValueToRValue>
    |   |   `-ArraySubscriptExpr 0x1daf09a8d88 <col:13, col:28> 'unsigned char' lvalue
    |   |     |-ImplicitCastExpr 0x1daf09a8d58 <col:13> 'unsigned char *' <ArrayToPointerDecay>
    |   |     | `-DeclRefExpr 0x1daf09a8ce8 <col:13> 'unsigned char [9]' lvalue Var 0x1daf09a0e10 'test_values_8' 'unsigned char [9]'
    |   |     `-ImplicitCastExpr 0x1daf09a8d70 <col:27> 'unsigned int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x1daf09a8d08 <col:27> 'unsigned int' lvalue Var 0x1daf09a1e10 'i' 'unsigned int'
    |   `-ForStmt 0x1daf09a9260 <line:254:9, line:258:9>
    |     |-BinaryOperator 0x1daf09a8e40 <line:254:14, col:18> 'unsigned int' '='
    |     | |-DeclRefExpr 0x1daf09a8de0 <col:14> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |     | `-ImplicitCastExpr 0x1daf09a8e28 <col:18> 'unsigned int' <IntegralCast>
    |     |   `-IntegerLiteral 0x1daf09a8e00 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1daf09a8f10 <col:21, col:45> 'int' '<'
    |     | |-ImplicitCastExpr 0x1daf09a8ef8 <col:21> 'unsigned long long' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x1daf09a8ee0 <col:21> 'unsigned int' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x1daf09a8e60 <col:21> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |     | `-UnaryExprOrTypeTraitExpr 0x1daf09a8ec0 <col:25, col:45> 'unsigned long long' sizeof
    |     |   `-ParenExpr 0x1daf09a8ea0 <col:31, col:45> 'unsigned char [9]' lvalue
    |     |     `-DeclRefExpr 0x1daf09a8e80 <col:32> 'unsigned char [9]' lvalue Var 0x1daf09a0e10 'test_values_8' 'unsigned char [9]' non_odr_use_unevaluated
    |     |-UnaryOperator 0x1daf09a8f50 <col:48, col:50> 'unsigned int' prefix '++'
    |     | `-DeclRefExpr 0x1daf09a8f30 <col:50> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |     `-CompoundStmt 0x1daf09a9238 <col:53, line:258:9>
    |       |-BinaryOperator 0x1daf09a9048 <line:255:13, col:32> 'unsigned char' '='
    |       | |-DeclRefExpr 0x1daf09a8f68 <col:13> 'unsigned char' lvalue Var 0x1daf09a2100 'f' 'unsigned char'
    |       | `-ImplicitCastExpr 0x1daf09a9030 <col:17, col:32> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1daf09a9010 <col:17, col:32> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x1daf09a8fe0 <col:17> 'unsigned char *' <ArrayToPointerDecay>
    |       |     | `-DeclRefExpr 0x1daf09a8fa0 <col:17> 'unsigned char [9]' lvalue Var 0x1daf09a0e10 'test_values_8' 'unsigned char [9]'
    |       |     `-ImplicitCastExpr 0x1daf09a8ff8 <col:31> 'unsigned int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x1daf09a8fc0 <col:31> 'unsigned int' lvalue Var 0x1daf09a1e90 'j' 'unsigned int'
    |       |-CompoundAssignOperator 0x1daf09a9190 <line:256:13, col:45> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1daf09a9068 <col:13> 'int' lvalue Var 0x1daf09a21b0 'num_failed' 'int'
    |       | `-CallExpr 0x1daf09a9130 <col:27, col:45> 'int'
    |       |   |-ImplicitCastExpr 0x1daf09a9118 <col:27> 'int (*)(unsigned char, unsigned char)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1daf09a9088 <col:27> 'int (unsigned char, unsigned char)' Function 0x1daf0a41d40 'test_select_8' 'int (unsigned char, unsigned char)'
    |       |   |-ImplicitCastExpr 0x1daf09a9160 <col:41> 'unsigned char' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x1daf09a90a8 <col:41> 'unsigned char' lvalue Var 0x1daf09a2080 'e' 'unsigned char'
    |       |   `-ImplicitCastExpr 0x1daf09a9178 <col:44> 'unsigned char' <LValueToRValue>
    |       |     `-DeclRefExpr 0x1daf09a90c8 <col:44> 'unsigned char' lvalue Var 0x1daf09a2100 'f' 'unsigned char'
    |       `-CompoundAssignOperator 0x1daf09a9208 <line:257:13, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |         |-DeclRefExpr 0x1daf09a91c0 <col:13> 'int' lvalue Var 0x1daf09a2258 'num_all' 'int'
    |         `-IntegerLiteral 0x1daf09a91e0 <col:24> 'int' 1
    `-IfStmt 0x1daf09a9860 <line:261:5, line:267:5> has_else
      |-UnaryOperator 0x1daf09a9328 <line:261:9, col:10> 'int' prefix '!' cannot overflow
      | `-ImplicitCastExpr 0x1daf09a9310 <col:10> 'int' <LValueToRValue>
      |   `-DeclRefExpr 0x1daf09a92f0 <col:10> 'int' lvalue Var 0x1daf09a21b0 'num_failed' 'int'
      |-CompoundStmt 0x1daf09a95b0 <col:22, line:264:5>
      | |-CallExpr 0x1daf09a94f8 <line:262:9, col:60> 'int'
      | | |-ImplicitCastExpr 0x1daf09a94e0 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
      | | | `-DeclRefExpr 0x1daf09a9340 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
      | | |-ParenExpr 0x1daf09a9418 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
      | | | `-UnaryOperator 0x1daf09a9400 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
      | | |   `-ArraySubscriptExpr 0x1daf09a93e0 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
      | | |     |-CallExpr 0x1daf09a9398 <col:18, col:29> 'FILE *'
      | | |     | `-ImplicitCastExpr 0x1daf09a9380 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
      | | |     |   `-DeclRefExpr 0x1daf09a9360 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
      | | |     `-IntegerLiteral 0x1daf09a93b8 <col:31> 'int' 1
      | | |-ImplicitCastExpr 0x1daf09a9548 <.//openssl//file_jk/after\test\constant_time_test.c:262:25> 'const char *' <NoOp>
      | | | `-ImplicitCastExpr 0x1daf09a9530 <col:25> 'char *' <ArrayToPointerDecay>
      | | |   `-StringLiteral 0x1daf09a9478 <col:25> 'char [24]' lvalue "success (ran %d tests)\n"
      | | `-ImplicitCastExpr 0x1daf09a9560 <col:53> 'int' <LValueToRValue>
      | |   `-DeclRefExpr 0x1daf09a94a8 <col:53> 'int' lvalue Var 0x1daf09a2258 'num_all' 'int'
      | `-ReturnStmt 0x1daf09a95a0 <line:263:9, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:45:25>
      |   `-IntegerLiteral 0x1daf09a9578 <col:25> 'int' 0
      `-CompoundStmt 0x1daf09a9840 <.//openssl//file_jk/after\test\constant_time_test.c:264:12, line:267:5>
        |-CallExpr 0x1daf09a9768 <line:265:9, col:72> 'int'
        | |-ImplicitCastExpr 0x1daf09a9750 <col:9> 'int (*)(FILE *, const char *, ...)' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x1daf09a95d0 <col:9> 'int (FILE *, const char *, ...)' Function 0x1daf08c7ca0 'fprintf' 'int (FILE *, const char *, ...)'
        | |-ParenExpr 0x1daf09a96a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:150:16, col:33> 'FILE *'
        | | `-UnaryOperator 0x1daf09a9690 <col:17, col:32> 'FILE *' prefix '&' cannot overflow
        | |   `-ArraySubscriptExpr 0x1daf09a9670 <col:18, col:32> 'FILE':'struct _iobuf' lvalue
        | |     |-CallExpr 0x1daf09a9628 <col:18, col:29> 'FILE *'
        | |     | `-ImplicitCastExpr 0x1daf09a9610 <col:18> 'FILE *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
        | |     |   `-DeclRefExpr 0x1daf09a95f0 <col:18> 'FILE *(void) __attribute__((cdecl))':'FILE *(void)' Function 0x1daf08c01a8 '__iob_func' 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
        | |     `-IntegerLiteral 0x1daf09a9648 <col:31> 'int' 1
        | |-ImplicitCastExpr 0x1daf09a97c0 <.//openssl//file_jk/after\test\constant_time_test.c:265:25> 'const char *' <NoOp>
        | | `-ImplicitCastExpr 0x1daf09a97a8 <col:25> 'char *' <ArrayToPointerDecay>
        | |   `-StringLiteral 0x1daf09a96c8 <col:25> 'char [24]' lvalue "%d of %d tests failed!\n"
        | |-ImplicitCastExpr 0x1daf09a97d8 <col:53> 'int' <LValueToRValue>
        | | `-DeclRefExpr 0x1daf09a96f8 <col:53> 'int' lvalue Var 0x1daf09a21b0 'num_failed' 'int'
        | `-ImplicitCastExpr 0x1daf09a97f0 <col:65> 'int' <LValueToRValue>
        |   `-DeclRefExpr 0x1daf09a9718 <col:65> 'int' lvalue Var 0x1daf09a2258 'num_all' 'int'
        `-ReturnStmt 0x1daf09a9830 <line:266:9, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:46:25>
          `-IntegerLiteral 0x1daf09a9808 <col:25> 'int' 1
