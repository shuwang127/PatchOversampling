TranslationUnitDecl 0x213a39fac28 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x213a39fb4c0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x213a39fb1c0 '__int128'
|-TypedefDecl 0x213a39fb530 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x213a39fb1e0 'unsigned __int128'
|-TypedefDecl 0x213a39fb868 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x213a39fb620 'struct __NSConstantString_tag'
|   `-Record 0x213a39fb588 '__NSConstantString_tag'
|-TypedefDecl 0x213a39fb8d8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x213a39fae00 'unsigned long long'
|-TypedefDecl 0x213a39fb970 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x213a39fb930 'char *'
|   `-BuiltinType 0x213a39facc0 'char'
|-TypedefDecl 0x213a39fb9e0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x213a39fb930 'char *'
|   `-BuiltinType 0x213a39facc0 'char'
|-TypedefDecl 0x213a39fbaa0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x213a39fae00 'unsigned long long'
|-TypedefDecl 0x213a39fbb10 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x213a39fb930 'char *'
|   `-BuiltinType 0x213a39facc0 'char'
|-FunctionDecl 0x213a54dd190 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x213a54dd230 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x213a54dd2a0 <col:21> Implicit
|-FunctionDecl 0x213a54dd2f8 prev 0x213a54dd190 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x213a54dd020 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x213a54dd3e8 <col:21> Inherited Implicit
|-TypedefDecl 0x213a54dd428 prev 0x213a39fb8d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x213a39fae00 'unsigned long long'
|-TypedefDecl 0x213a54dd4d0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x213a54dd4a0 'size_t' sugar
|   |-Typedef 0x213a54dd428 'size_t'
|   `-BuiltinType 0x213a39fae00 'unsigned long long'
|-TypedefDecl 0x213a54dd540 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x213a39fad60 'long long'
|-TypedefDecl 0x213a54dd5b0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x213a39fad60 'long long'
|-TypedefDecl 0x213a54dd620 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x213a39fada0 'unsigned short'
|-TypedefDecl 0x213a54dd690 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x213a39fada0 'unsigned short'
|-TypedefDecl 0x213a54dd700 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x213a39fada0 'unsigned short'
|-TypedefDecl 0x213a54dd770 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x213a39fad20 'int'
|-TypedefDecl 0x213a54dd7e0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x213a39fad40 'long'
|-TypedefDecl 0x213a54dd850 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x213a39fad60 'long long'
|-TypedefDecl 0x213a54dd8e0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x213a54dd8b0 '__time64_t' sugar
|   |-Typedef 0x213a54dd850 '__time64_t'
|   `-BuiltinType 0x213a39fad60 'long long'
|-FunctionDecl 0x213a54dda58 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x213a54ddc78 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x213a5521190 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x213a54dddb8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x213a54dde30 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x213a54ddea8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x213a54ddf28 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x213a5520f30 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x213a5521270 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x213a5521330 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x213a55214a0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x213a5521450 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x213a55213f0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x213a5521310 'struct threadlocaleinfostruct'
|       `-Record 0x213a5522f50 'threadlocaleinfostruct'
|-TypedefDecl 0x213a55215b0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x213a5521560 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x213a5521500 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x213a55213d0 'struct threadmbcinfostruct'
|       `-Record 0x213a5521330 'threadmbcinfostruct'
|-RecordDecl 0x213a5521608 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x213a55216c0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x213a5521780 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x213a5521810 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x213a55218a0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x213a5521958 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x213a5521900 'struct localeinfo_struct' sugar
|   `-RecordType 0x213a5521760 'struct localeinfo_struct'
|     `-Record 0x213a55216c0 'localeinfo_struct'
|-TypedefDecl 0x213a5521a30 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x213a55219e0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x213a5521900 'struct localeinfo_struct' sugar
|     `-RecordType 0x213a5521760 'struct localeinfo_struct'
|       `-Record 0x213a55216c0 'localeinfo_struct'
|-RecordDecl 0x213a5521aa8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x213a5521b60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x213a5521bd8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x213a5521c98 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x213a5521d30 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x213a5521da0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x213a5521e58 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x213a5521e00 'struct localerefcount' sugar
|   `-RecordType 0x213a5521b40 'struct localerefcount'
|     `-Record 0x213a5521aa8 'localerefcount'
|-RecordDecl 0x213a5522f50 prev 0x213a5521270 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x213a5522fd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x213a5523048 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x213a55230b8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x213a5523128 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x213a5523198 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x213a5523358 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x213a55233c8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x213a5523438 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x213a55234a8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x213a5523518 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x213a5523588 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x213a55235e0 parent 0x213a39fac28 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x213a5523770 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x213a55237e0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x213a5523850 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x213a55238c0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x213a5523960 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x213a55239d0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x213a5523ae0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x213a5523c18 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x213a5523cc8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x213a5523c70 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x213a5521310 'struct threadlocaleinfostruct'
|     `-Record 0x213a5522f50 'threadlocaleinfostruct'
|-FunctionDecl 0x213a55271a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x213a5523d50 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x213a5523e00 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x213a5523e80 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x213a5526f90 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5527568 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x213a5527608 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x213a5527670 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x213a55276d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a5527758 prev 0x213a5527568 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x213a5527290 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x213a5527310 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x213a5527388 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5527b18 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x213a5527840 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x213a55278c0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x213a5527938 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x213a552b020 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a5527c00 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x213a5527c80 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x213a5527cf8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a5527d90 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a552b328 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x213a552b3c8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x213a552b430 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x213a552b498 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a552b518 prev 0x213a552b328 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x213a552b110 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x213a552b190 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x213a552b208 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x213a552b8d8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x213a552b978 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x213a552b9e0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x213a552ba48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a552bac8 prev 0x213a552b8d8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x213a552b600 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x213a552b680 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x213a552b6f8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5525f80 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x213a552bbd8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x213a552bc70 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x213a552bcf0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x213a552bd68 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x213a5526348 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x213a55263e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x213a5526450 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x213a55264b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a5526538 prev 0x213a5526348 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x213a5526070 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x213a55260f0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x213a5526168 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55269b8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x213a5526a58 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x213a5526ac0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x213a5526b28 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x213a5526b90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a5526c18 prev 0x213a55269b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x213a5526700 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x213a5526780 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x213a5526800 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x213a5526878 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a5526cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x213a552d188 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x213a5526ea0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x213a552cff0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x213a552d068 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a552d240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x213a552d630 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x213a552d368 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x213a552d3e0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a552d460 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x213a552da00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x213a552d810 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x213a552d890 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x213a552dab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a552dec0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x213a552dbf8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x213a552dc70 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x213a552dcf0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x213a5533310 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x213a55333b0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x213a5533418 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x213a5533490 prev 0x213a5533310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x213a5533128 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x213a55331a8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x213a5533540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a5533898 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x213a5533688 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x213a5533700 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x213a5533780 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x213a5533bc0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x213a5533c60 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x213a5533cc8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x213a5533d40 prev 0x213a5533bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x213a5533a40 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x213a5533ac0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x213a5533df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a552e0d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x213a552e170 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a552e1d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x213a552e250 prev 0x213a552e0d0 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x213a5533f38 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x213a5533fb8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x213a552e4a0 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x213a552e540 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x213a552e5b0 prev 0x213a552e4a0 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x213a552e330 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x213a552e8a8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x213a552e688 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x213a552e700 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a552eaf8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x213a552e988 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x213a552ea00 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x213a552ee28 <line:131:1, line:133:1>
|   `-ReturnStmt 0x213a552ee18 <line:132:5, col:51>
|     `-ConditionalOperator 0x213a552ede8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x213a552ec58 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x213a552ec38 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x213a552ec08 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x213a552ebc0 <col:13> 'const char *' lvalue ParmVar 0x213a552e988 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x213a552ec20 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x213a552ebe0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x213a552edd0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x213a552ec78 <col:24> 'int' 0
|       `-CallExpr 0x213a552ed70 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x213a552ed58 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x213a552eca0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x213a552e8a8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x213a552eda0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x213a552ecc0 <col:36> 'const char *' lvalue ParmVar 0x213a552e988 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x213a552edb8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x213a552ece0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x213a552ea00 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5530158 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x213a552ee58 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x213a552eed0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x213a552ef50 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x213a5530020 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x213a5530460 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x213a5530500 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x213a5530568 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x213a55305d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a5530650 prev 0x213a5530460 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x213a5530248 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x213a55302c8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x213a5530340 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5530888 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x213a5530738 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x213a5530b50 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x213a5530bf0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a5530c58 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x213a5530cd0 prev 0x213a5530b50 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x213a5530960 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x213a55309e0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x213a5530f30 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x213a5530db0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x213a5530e30 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x213a55311b0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x213a5531030 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x213a55310b0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x213a5531568 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x213a5531290 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x213a5531310 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x213a5531388 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55317d0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x213a5531650 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x213a55316d0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x213a5531ac8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x213a55318b0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x213a5531930 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x213a55319a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a5531d30 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x213a5531bb0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x213a5531c30 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x213a5532040 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x213a5531e10 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x213a5531e90 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x213a5531f08 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55323f8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x213a5532128 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x213a55321a8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x213a5532220 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5532860 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a55324e0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x213a5532560 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x213a55325d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a5532650 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a5532b68 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x213a5532950 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x213a55329d0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x213a5532a48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5532f00 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a5532c50 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x213a5532cd0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x213a5532d48 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a5532dc0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a552c208 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x213a552c2a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a552c310 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x213a552c388 prev 0x213a552c208 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x213a552bfe0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x213a552c060 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x213a552c640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x213a552c560 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x213a552c6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a552cac0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x213a552c830 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x213a552c8a8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a552c928 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x213a552cdd8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x213a552ce78 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x213a552cee8 prev 0x213a552cdd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x213a552cca0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x213a552cf90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a5534370 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x213a5534160 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x213a55341d8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a5534258 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x213a5534678 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x213a5534458 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x213a55344d0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5534968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x213a5534818 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x213a5534a10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a5534e20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a5534b58 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x213a5534bd0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a5534c48 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a5535220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x213a5534fc8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x213a5535070 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x213a55352d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a5535788 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x213a5535418 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x213a5535490 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x213a5535510 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x213a5535588 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x213a5535c08 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x213a5535ca8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x213a5535d10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a5535d78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a5535df8 prev 0x213a5535c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x213a5535938 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x213a55359b8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x213a5535a30 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a5535eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a5536230 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x213a55362d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x213a5536338 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a55363a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a5536420 prev 0x213a5536230 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x213a5535ff8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x213a5536098 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x213a5536110 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5536720 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x213a5536508 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x213a5536588 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x213a5536600 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5536ab8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a5536808 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x213a5536888 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x213a5536900 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a5536978 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a5536e50 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x213a5536ba8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x213a5536c20 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x213a5536ca0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x213a5536d18 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x213a5537228 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x213a55372c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x213a5537330 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a5537398 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a5537418 prev 0x213a5537228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x213a5537000 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x213a5537090 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x213a5537108 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a55374d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a5537988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x213a5537618 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x213a5537690 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x213a5537710 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x213a5537788 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a5537e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x213a5537b38 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x213a5537bb8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x213a5537c30 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a5537ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a5538210 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x213a55382b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a5538318 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x213a5538390 prev 0x213a5538210 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x213a5538008 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x213a55380a0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x213a55385f0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x213a5538690 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a55386f8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x213a5538770 prev 0x213a55385f0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x213a5538470 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x213a55384f0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x213a5538930 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x213a5538850 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x213a5538b80 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x213a5538c20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a5538c88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x213a5538d00 prev 0x213a5538b80 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x213a5538a08 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x213a5538a88 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x213a5538f60 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x213a5539000 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a55ade50 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x213a55adec8 prev 0x213a5538f60 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x213a5538de0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x213a5538e60 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x213a55ae1e8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x213a55ae288 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x213a55ae2f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x213a55ae368 prev 0x213a55ae1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x213a55ae068 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x213a55ae0e8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x213a55ae418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55ae7f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x213a55ae560 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x213a55ae5e0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x213a55ae660 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x213a55aea50 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x213a55ae8e0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x213a55ae958 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55aecd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x213a55aebf0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x213a55aed78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55ac138 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a55abf30 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x213a55abfa8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55ac020 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55ac458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x213a55ac2e0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x213a55ac358 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x213a55ac508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55ac920 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x213a55ac9c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x213a55aca28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x213a55aca90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a55acb10 prev 0x213a55ac920 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x213a55ac650 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x213a55ac6d0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x213a55ac748 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55acf78 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a55acbf8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x213a55acc78 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x213a55accf0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55acd68 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55ad220 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x213a55ad2c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x213a55ad330 prev 0x213a55ad220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x213a55ad140 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x213a55ad3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x213a55ad720 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x213a55ad5a0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x213a55ad620 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x213a55ad7d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x213a55adb18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x213a55ad998 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x213a55ada18 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x213a55adbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x213a55afea8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x213a55add90 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x213a55aff50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x213a55b0368 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x213a55b0150 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x213a55b01d0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x213a55b0248 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a55b0420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x213a55b0800 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x213a55b05e8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x213a55b0668 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x213a55b06e0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a55b08b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x213a55b0b60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x213a55b0a80 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x213a55b0c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x213a55b2fa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x213a55b0dd0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x213a55b2ea0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x213a55b3050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x213a55b32f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x213a55b3218 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x213a55b33a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x213a55b3630 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x213a55b34c0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x213a55b39c0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x213a55b3700 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x213a55b3778 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x213a55b37f0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x213a55b3d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55b3b60 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x213a55b3bd8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x213a55b3e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55b51d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x213a55b5278 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x213a55b52e0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x213a55b5358 prev 0x213a55b51d8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x213a55b4fb8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x213a55b5030 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x213a55b5650 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x213a55b56f0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x213a55b5758 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x213a55b57d0 prev 0x213a55b5650 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x213a55b5430 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x213a55b54a8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x213a55b5ab0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x213a55b58a8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x213a55b5920 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x213a55b5998 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x213a55b5dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55b5c50 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x213a55b5cc8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x213a55b5e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55af178 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55aef58 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x213a55aefd0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x213a55af3c0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x213a55af460 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x213a55af4d0 prev 0x213a55af3c0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x213a55af250 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x213a55af7b8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x213a55af5a0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x213a55af618 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55afa00 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x213a55af890 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x213a55af908 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x213a55afd98 <line:306:1, line:308:1>
|   `-ReturnStmt 0x213a55afd88 <line:307:5, col:56>
|     `-ConditionalOperator 0x213a55afd58 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x213a55afbc0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x213a55afba0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x213a55afb70 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x213a55afac8 <col:13> 'const wchar_t *' lvalue ParmVar 0x213a55af890 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x213a55afb88 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x213a55afb50 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x213a55afb28 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x213a55afae8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x213a55afd40 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x213a55afbe0 <col:29> 'int' 0
|       `-CallExpr 0x213a55afce0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x213a55afcc8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x213a55afc08 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x213a55af7b8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x213a55afd10 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x213a55afc28 <col:41> 'const wchar_t *' lvalue ParmVar 0x213a55af890 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x213a55afd28 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x213a55afc48 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x213a55af908 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55b2188 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x213a55afdc0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x213a55b1e90 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x213a55b1f08 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x213a55b1f80 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x213a55b25f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x213a55b2330 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x213a55b23a8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x213a55b2420 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a55b26a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55b2ab8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x213a55b2b58 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x213a55b2bc0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x213a55b2c28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x213a55b2ca8 prev 0x213a55b2ab8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x213a55b27e8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55b2860 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x213a55b28d8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55b80a0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x213a55b2d88 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x213a55b2e00 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x213a55b7ef0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x213a55b7f68 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x213a55b8450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x213a55b8248 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x213a55b82c0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x213a55b8338 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a55b8508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55b8868 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55b8648 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x213a55b86c0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x213a55b8ab0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x213a55b8940 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x213a55b89b8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x213a55b8cf8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55b8b88 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x213a55b8c00 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x213a55b3f10 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55b8dd0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x213a55b8e48 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x213a55b4218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55b40a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x213a55b4120 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x213a55b42c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55b4730 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x213a55b4408 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x213a55b4480 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x213a55b4560 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x213a55b4a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x213a55b48d8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x213a55b4af8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55b0ef0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x213a55b4c38 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x213a55b4cb0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55b4d30 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x213a55b11a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x213a55b10c8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x213a55b1248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55b1610 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x213a55b1388 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x213a55b1400 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55b1478 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x213a55b1868 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55b16f0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x213a55b1768 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x213a55b1c08 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x213a55b1940 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55b19b8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x213a55b1a30 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55bafa8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x213a55b1ce8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55b1d60 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x213a55b1dd8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55bb400 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a55bb088 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55bb100 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x213a55bb178 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55bb1f0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55bb858 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x213a55bb4e8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x213a55bb560 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x213a55bb5d8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x213a55bb650 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55bbcc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x213a55bba00 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x213a55bba78 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x213a55bbaf0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a55bbd78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55ba020 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x213a55bbeb8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x213a55ba3b0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x213a55ba0f0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x213a55ba168 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55ba1e0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x213a55ba768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x213a55ba550 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x213a55ba5c8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x213a55ba818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55bab78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x213a55ba958 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x213a55ba9d0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55bade8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x213a55bad10 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x213a55bae90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55bc2f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a55bc028 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x213a55bc0a0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55bc118 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55bc6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x213a55bc490 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x213a55bc508 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x213a55bc758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55bca08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x213a55bc898 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x213a55bc910 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55bcc78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x213a55bcba0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x213a55bcd20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55bd0d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a55bce60 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x213a55bcf40 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55bcfb8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55bd3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x213a55bd270 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x213a55bd2e8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x213a55bd490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x213a55bd890 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x213a55bd5d0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x213a55bd648 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x213a55bd6c0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55bdcd8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a55bd970 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x213a55bd9e8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x213a55bda60 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55bdad8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55bff70 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55bddc0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x213a55bde38 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x213a55c0258 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x213a55c0048 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55c00c0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x213a55c0138 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55c04b0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55c0338 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x213a55c03b0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x213a55c0798 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x213a55c0588 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55c0600 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x213a55c0678 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55c0a88 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x213a55c0878 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55c08f0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x213a55c0968 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55c0e10 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a55c0b68 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55c0be0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x213a55c0c58 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55c0cd0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55b9098 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x213a55c0ef8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55b8f00 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x213a55b8f78 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55b9420 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x213a55b9178 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55b91f0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x213a55b9268 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x213a55b92e0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x213a55b9680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x213a55b95a8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x213a55b9728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x213a55b9a60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55b98e8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55b9960 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x213a55b9b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x213a55bef60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x213a55b9cd0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55b9d48 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x213a55b9dc0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a55bf018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x213a55bf3e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x213a55bf1d8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x213a55bf250 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x213a55bf2c8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x213a55bf498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x213a55bf730 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x213a55bf658 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x213a55bf7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x213a55bfb08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x213a55bf998 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x213a55bfa10 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x213a55bfbb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x213a55bfe50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x213a55bfd78 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x213a55bfef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x213a55c21e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x213a55c2108 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x213a55c2288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x213a55c25c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x213a55c2448 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x213a55c24c0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x213a55c2670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x213a55c2780 <.//openssl//file_jk/after\test/ssl_test_ctx.h:16:9, line:23:1> line:16:9
| |-EnumConstantDecl 0x213a55c28a0 <line:17:5, col:24> col:5 referenced SSL_TEST_SUCCESS 'int'
| | `-ConstantExpr 0x213a55c2888 <col:24> 'int'
| |   `-IntegerLiteral 0x213a55c2860 <col:24> 'int' 0
| |-EnumConstantDecl 0x213a55c28f8 <line:18:5> col:5 referenced SSL_TEST_SERVER_FAIL 'int'
| |-EnumConstantDecl 0x213a55c2950 <line:19:5> col:5 referenced SSL_TEST_CLIENT_FAIL 'int'
| |-EnumConstantDecl 0x213a55c29a8 <line:20:5> col:5 referenced SSL_TEST_INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x213a55c2a00 <line:22:5> col:5 referenced SSL_TEST_FIRST_HANDSHAKE_FAILED 'int'
|-TypedefDecl 0x213a55c2ab8 <line:16:1, line:23:3> col:3 referenced ssl_test_result_t 'enum ssl_test_result_t':'ssl_test_result_t'
| `-ElaboratedType 0x213a55c2a60 'enum ssl_test_result_t' sugar
|   `-EnumType 0x213a55c2840 'ssl_test_result_t'
|     `-Enum 0x213a55c2780 ''
|-EnumDecl 0x213a55c2b28 <line:25:9, line:29:1> line:25:9
| |-EnumConstantDecl 0x213a55c2c40 <line:26:5, col:28> col:5 SSL_TEST_VERIFY_NONE 'int'
| | `-ConstantExpr 0x213a55c2c28 <col:28> 'int'
| |   `-IntegerLiteral 0x213a55c2c00 <col:28> 'int' 0
| |-EnumConstantDecl 0x213a55c2c98 <line:27:5> col:5 referenced SSL_TEST_VERIFY_ACCEPT_ALL 'int'
| `-EnumConstantDecl 0x213a55c2cf0 <line:28:5> col:5 referenced SSL_TEST_VERIFY_REJECT_ALL 'int'
|-TypedefDecl 0x213a55c2da8 <line:25:1, line:29:3> col:3 referenced ssl_verify_callback_t 'enum ssl_verify_callback_t':'ssl_verify_callback_t'
| `-ElaboratedType 0x213a55c2d50 'enum ssl_verify_callback_t' sugar
|   `-EnumType 0x213a55c2be0 'ssl_verify_callback_t'
|     `-Enum 0x213a55c2b28 ''
|-EnumDecl 0x213a55c2e18 <line:31:9, line:36:1> line:31:9
| |-EnumConstantDecl 0x213a55c2f30 <line:32:5, col:32> col:5 referenced SSL_TEST_SERVERNAME_NONE 'int'
| | `-ConstantExpr 0x213a55c2f18 <col:32> 'int'
| |   `-IntegerLiteral 0x213a55c2ef0 <col:32> 'int' 0
| |-EnumConstantDecl 0x213a55c2fa0 <line:33:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER1 'int'
| |-EnumConstantDecl 0x213a55c2ff8 <line:34:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER2 'int'
| `-EnumConstantDecl 0x213a55c3050 <line:35:5> col:5 SSL_TEST_SERVERNAME_INVALID 'int'
|-TypedefDecl 0x213a55c3108 <line:31:1, line:36:3> col:3 referenced ssl_servername_t 'enum ssl_servername_t':'ssl_servername_t'
| `-ElaboratedType 0x213a55c30b0 'enum ssl_servername_t' sugar
|   `-EnumType 0x213a55c2ed0 'ssl_servername_t'
|     `-Enum 0x213a55c2e18 ''
|-EnumDecl 0x213a55c3178 <line:38:9, line:42:1> line:38:9
| |-EnumConstantDecl 0x213a55c3290 <line:39:5, col:35> col:5 SSL_TEST_SERVERNAME_CB_NONE 'int'
| | `-ConstantExpr 0x213a55c3278 <col:35> 'int'
| |   `-IntegerLiteral 0x213a55c3250 <col:35> 'int' 0
| |-EnumConstantDecl 0x213a55c32e8 <line:40:5> col:5 referenced SSL_TEST_SERVERNAME_IGNORE_MISMATCH 'int'
| `-EnumConstantDecl 0x213a55c3340 <line:41:5> col:5 referenced SSL_TEST_SERVERNAME_REJECT_MISMATCH 'int'
|-TypedefDecl 0x213a55c33f8 <line:38:1, line:42:3> col:3 referenced ssl_servername_callback_t 'enum ssl_servername_callback_t':'ssl_servername_callback_t'
| `-ElaboratedType 0x213a55c33a0 'enum ssl_servername_callback_t' sugar
|   `-EnumType 0x213a55c3230 'ssl_servername_callback_t'
|     `-Enum 0x213a55c3178 ''
|-EnumDecl 0x213a55c3468 <line:44:9, line:49:1> line:44:9
| |-EnumConstantDecl 0x213a55c3580 <line:45:5, col:38> col:5 SSL_TEST_SESSION_TICKET_IGNORE 'int'
| | `-ConstantExpr 0x213a55c3568 <col:38> 'int'
| |   `-IntegerLiteral 0x213a55c3540 <col:38> 'int' 0
| |-EnumConstantDecl 0x213a55c35d8 <line:46:5> col:5 referenced SSL_TEST_SESSION_TICKET_YES 'int'
| |-EnumConstantDecl 0x213a55c3630 <line:47:5> col:5 referenced SSL_TEST_SESSION_TICKET_NO 'int'
| `-EnumConstantDecl 0x213a55c3688 <line:48:5> col:5 SSL_TEST_SESSION_TICKET_BROKEN 'int'
|-TypedefDecl 0x213a55c3738 <line:44:1, line:49:3> col:3 referenced ssl_session_ticket_t 'enum ssl_session_ticket_t':'ssl_session_ticket_t'
| `-ElaboratedType 0x213a55c36e0 'enum ssl_session_ticket_t' sugar
|   `-EnumType 0x213a55c3520 'ssl_session_ticket_t'
|     `-Enum 0x213a55c3468 ''
|-EnumDecl 0x213a55c37a8 <line:51:9, line:54:1> line:51:9
| |-EnumConstantDecl 0x213a55c38c0 <line:52:5, col:27> col:5 SSL_TEST_METHOD_TLS 'int'
| | `-ConstantExpr 0x213a55c38a8 <col:27> 'int'
| |   `-IntegerLiteral 0x213a55c3880 <col:27> 'int' 0
| `-EnumConstantDecl 0x213a55c3918 <line:53:5> col:5 SSL_TEST_METHOD_DTLS 'int'
|-TypedefDecl 0x213a55c39c8 <line:51:1, line:54:3> col:3 referenced ssl_test_method_t 'enum ssl_test_method_t':'ssl_test_method_t'
| `-ElaboratedType 0x213a55c3970 'enum ssl_test_method_t' sugar
|   `-EnumType 0x213a55c3860 'ssl_test_method_t'
|     `-Enum 0x213a55c37a8 ''
|-EnumDecl 0x213a55c3a38 <line:56:9, line:61:1> line:56:9
| |-EnumConstantDecl 0x213a55c3b50 <line:57:5, col:33> col:5 SSL_TEST_HANDSHAKE_SIMPLE 'int'
| | `-ConstantExpr 0x213a55c3b38 <col:33> 'int'
| |   `-IntegerLiteral 0x213a55c3b10 <col:33> 'int' 0
| |-EnumConstantDecl 0x213a55c3ba8 <line:58:5> col:5 referenced SSL_TEST_HANDSHAKE_RESUME 'int'
| |-EnumConstantDecl 0x213a55c3c00 <line:59:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_SERVER 'int'
| `-EnumConstantDecl 0x213a55c3c58 <line:60:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_CLIENT 'int'
|-TypedefDecl 0x213a55c3d08 <line:56:1, line:61:3> col:3 referenced ssl_handshake_mode_t 'enum ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-ElaboratedType 0x213a55c3cb0 'enum ssl_handshake_mode_t' sugar
|   `-EnumType 0x213a55c3af0 'ssl_handshake_mode_t'
|     `-Enum 0x213a55c3a38 ''
|-EnumDecl 0x213a55c3d78 <line:63:9, line:67:1> line:63:9
| |-EnumConstantDecl 0x213a55c3e90 <line:64:5, col:35> col:5 referenced SSL_TEST_CT_VALIDATION_NONE 'int'
| | `-ConstantExpr 0x213a55c3e78 <col:35> 'int'
| |   `-IntegerLiteral 0x213a55c3e50 <col:35> 'int' 0
| |-EnumConstantDecl 0x213a55c3ee8 <line:65:5> col:5 referenced SSL_TEST_CT_VALIDATION_PERMISSIVE 'int'
| `-EnumConstantDecl 0x213a55c3f40 <line:66:5> col:5 referenced SSL_TEST_CT_VALIDATION_STRICT 'int'
|-TypedefDecl 0x213a55c8048 <line:63:1, line:67:3> col:3 referenced ssl_ct_validation_t 'enum ssl_ct_validation_t':'ssl_ct_validation_t'
| `-ElaboratedType 0x213a55c7ff0 'enum ssl_ct_validation_t' sugar
|   `-EnumType 0x213a55c3e30 'ssl_ct_validation_t'
|     `-Enum 0x213a55c3d78 ''
|-EnumDecl 0x213a55c80b8 <line:69:9, line:73:1> line:69:9
| |-EnumConstantDecl 0x213a55c81d0 <line:70:5, col:33> col:5 referenced SSL_TEST_CERT_STATUS_NONE 'int'
| | `-ConstantExpr 0x213a55c81b8 <col:33> 'int'
| |   `-IntegerLiteral 0x213a55c8190 <col:33> 'int' 0
| |-EnumConstantDecl 0x213a55c8228 <line:71:5> col:5 referenced SSL_TEST_CERT_STATUS_GOOD_RESPONSE 'int'
| `-EnumConstantDecl 0x213a55c8280 <line:72:5> col:5 SSL_TEST_CERT_STATUS_BAD_RESPONSE 'int'
|-TypedefDecl 0x213a55c8338 <line:69:1, line:73:3> col:3 referenced ssl_cert_status_t 'enum ssl_cert_status_t':'ssl_cert_status_t'
| `-ElaboratedType 0x213a55c82e0 'enum ssl_cert_status_t' sugar
|   `-EnumType 0x213a55c8170 'ssl_cert_status_t'
|     `-Enum 0x213a55c80b8 ''
|-RecordDecl 0x213a55c83a8 <line:78:9, line:89:1> line:78:9 struct definition
| |-FieldDecl 0x213a55c8490 <line:80:5, col:27> col:27 referenced verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| |-FieldDecl 0x213a55c8520 <line:82:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x213a55c8590 <line:84:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x213a55c8600 <line:85:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x213a55c8690 <line:86:5, col:25> col:25 referenced ct_validation 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-FieldDecl 0x213a55c8700 <line:88:5, col:11> col:11 referenced reneg_ciphers 'char *'
|-TypedefDecl 0x213a55c87b8 <line:78:1, line:89:3> col:3 referenced SSL_TEST_CLIENT_CONF 'struct SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| `-ElaboratedType 0x213a55c8760 'struct SSL_TEST_CLIENT_CONF' sugar
|   `-RecordType 0x213a55c8440 'SSL_TEST_CLIENT_CONF'
|     `-Record 0x213a55c83a8 ''
|-RecordDecl 0x213a55c8828 <line:91:9, line:101:1> line:91:9 struct definition
| |-FieldDecl 0x213a55c8910 <line:93:5, col:31> col:31 referenced servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| |-FieldDecl 0x213a55c8980 <line:95:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x213a55c89f0 <line:96:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x213a55c8a60 <line:98:5, col:9> col:9 referenced broken_session_ticket 'int'
| `-FieldDecl 0x213a55c8af0 <line:100:5, col:23> col:23 referenced cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-TypedefDecl 0x213a55c8ba8 <line:91:1, line:101:3> col:3 referenced SSL_TEST_SERVER_CONF 'struct SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-ElaboratedType 0x213a55c8b50 'struct SSL_TEST_SERVER_CONF' sugar
|   `-RecordType 0x213a55c88c0 'SSL_TEST_SERVER_CONF'
|     `-Record 0x213a55c8828 ''
|-RecordDecl 0x213a55c8c18 <line:103:9, line:107:1> line:103:9 struct definition
| |-FieldDecl 0x213a55c8d00 <line:104:5, col:26> col:26 referenced client 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| |-FieldDecl 0x213a55c8d90 <line:105:5, col:26> col:26 referenced server 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-FieldDecl 0x213a55c8df8 <line:106:5, col:26> col:26 referenced server2 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
|-TypedefDecl 0x213a55c8f28 <line:103:1, line:107:3> col:3 referenced SSL_TEST_EXTRA_CONF 'struct SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| `-ElaboratedType 0x213a55c8ed0 'struct SSL_TEST_EXTRA_CONF' sugar
|   `-RecordType 0x213a55c8cb0 'SSL_TEST_EXTRA_CONF'
|     `-Record 0x213a55c8c18 ''
|-RecordDecl 0x213a55c5fd0 <line:109:9, line:166:1> line:109:9 struct definition
| |-FieldDecl 0x213a55c60c0 <line:114:5, col:23> col:23 method 'ssl_test_method_t':'ssl_test_method_t'
| |-FieldDecl 0x213a55c6150 <line:116:5, col:26> col:26 referenced handshake_mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| |-FieldDecl 0x213a55c61c0 <line:121:5, col:9> col:9 referenced app_data_size 'int'
| |-FieldDecl 0x213a55c6230 <line:123:5, col:9> col:9 referenced max_fragment_size 'int'
| |-FieldDecl 0x213a55c62c0 <line:129:5, col:25> col:25 referenced extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x213a55c6328 <line:131:5, col:25> col:25 referenced resume_extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x213a55c63b0 <line:137:5, col:23> col:23 expected_result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x213a55c6420 <line:141:5, col:9> col:9 expected_client_alert 'int'
| |-FieldDecl 0x213a55c6490 <line:143:5, col:9> col:9 expected_server_alert 'int'
| |-FieldDecl 0x213a55c6500 <line:146:5, col:9> col:9 expected_protocol 'int'
| |-FieldDecl 0x213a55c6568 <line:157:5, col:22> col:22 expected_servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x213a55c65f0 <line:158:5, col:26> col:26 session_ticket_expected 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x213a55c6660 <line:160:5, col:11> col:11 expected_npn_protocol 'char *'
| |-FieldDecl 0x213a55c66d0 <line:161:5, col:11> col:11 expected_alpn_protocol 'char *'
| |-FieldDecl 0x213a55c6740 <line:163:5, col:9> col:9 resumption_expected 'int'
| `-FieldDecl 0x213a55c67b0 <line:165:5, col:9> col:9 expected_tmp_key_type 'int'
|-TypedefDecl 0x213a55c6868 <line:109:1, line:166:3> col:3 referenced SSL_TEST_CTX 'struct SSL_TEST_CTX':'SSL_TEST_CTX'
| `-ElaboratedType 0x213a55c6810 'struct SSL_TEST_CTX' sugar
|   `-RecordType 0x213a55c6070 'SSL_TEST_CTX'
|     `-Record 0x213a55c5fd0 ''
|-FunctionDecl 0x213a55c6a00 <line:168:1, col:58> col:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| `-ParmVarDecl 0x213a55c68e8 <col:34, col:52> col:52 result 'ssl_test_result_t':'ssl_test_result_t'
|-FunctionDecl 0x213a55c6bc0 <line:169:1, col:37> col:13 ssl_alert_name 'const char *(int)'
| `-ParmVarDecl 0x213a55c6ad8 <col:28, col:32> col:32 alert 'int'
|-FunctionDecl 0x213a55c6d48 <line:170:1, col:43> col:13 ssl_protocol_name 'const char *(int)'
| `-ParmVarDecl 0x213a55c6c98 <col:31, col:35> col:35 protocol 'int'
|-FunctionDecl 0x213a55c6f30 <line:171:1, col:75> col:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| `-ParmVarDecl 0x213a55c6e18 <col:38, col:60> col:60 verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-FunctionDecl 0x213a55c9140 <line:172:1, col:56> col:13 used ssl_servername_name 'const char *(ssl_servername_t)'
| `-ParmVarDecl 0x213a55c9030 <col:33, col:50> col:50 server 'ssl_servername_t':'ssl_servername_t'
|-FunctionDecl 0x213a55c9320 <line:173:1, line:174:61> line:173:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| `-ParmVarDecl 0x213a55c9210 <col:42, line:174:42> col:42 servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-FunctionDecl 0x213a55c9500 <line:175:1, col:64> col:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| `-ParmVarDecl 0x213a55c93f0 <col:37, col:58> col:58 server 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-FunctionDecl 0x213a55c96e0 <line:176:1, col:58> col:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| `-ParmVarDecl 0x213a55c95d0 <col:34, col:52> col:52 method 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x213a55c98c0 <line:177:1, col:62> col:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| `-ParmVarDecl 0x213a55c97b0 <col:37, col:58> col:58 mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x213a55c9aa0 <line:178:1, col:60> col:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| `-ParmVarDecl 0x213a55c9990 <col:36, col:56> col:56 mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x213a55c9c80 <line:179:1, col:62> col:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| `-ParmVarDecl 0x213a55c9b70 <col:33, col:51> col:51 cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x213a55c3fb0 <line:185:1, col:77> col:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
| |-ParmVarDecl 0x213a55c9d78 <col:35, col:47> col:47 invalid conf 'const int *'
| `-ParmVarDecl 0x213a55c9df8 <col:53, col:65> col:65 test_section 'const char *'
|-FunctionDecl 0x213a55c4158 <line:187:1, col:36> col:15 SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
|-FunctionDecl 0x213a55c4328 <line:189:1, col:41> col:6 SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| `-ParmVarDecl 0x213a55c4220 <col:24, col:38> col:38 ctx 'SSL_TEST_CTX *'
|-RecordDecl 0x213a55c43e8 <.//openssl//file_jk/after\test/handshake_helper.h:15:9, line:48:1> line:15:16 struct handshake_result definition
| |-FieldDecl 0x213a55c44b0 <line:16:5, col:23> col:23 referenced result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x213a55c4520 <line:19:5, col:9> col:9 referenced client_alert_sent 'int'
| |-FieldDecl 0x213a55c4590 <line:21:5, col:9> col:9 referenced client_num_fatal_alerts_sent 'int'
| |-FieldDecl 0x213a55c4600 <line:23:5, col:9> col:9 referenced client_alert_received 'int'
| |-FieldDecl 0x213a55c4670 <line:25:5, col:9> col:9 referenced server_alert_sent 'int'
| |-FieldDecl 0x213a55c46e0 <line:27:5, col:9> col:9 referenced server_num_fatal_alerts_sent 'int'
| |-FieldDecl 0x213a55c4750 <line:29:5, col:9> col:9 referenced server_alert_received 'int'
| |-FieldDecl 0x213a55c47c0 <line:31:5, col:9> col:9 referenced server_protocol 'int'
| |-FieldDecl 0x213a55c4830 <line:32:5, col:9> col:9 referenced client_protocol 'int'
| |-FieldDecl 0x213a55c4898 <line:34:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x213a55c4900 <line:36:5, col:26> col:26 referenced session_ticket 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x213a55c4970 <line:38:5, col:9> col:9 referenced session_ticket_do_not_call 'int'
| |-FieldDecl 0x213a55c49e0 <line:39:5, col:11> col:11 referenced client_npn_negotiated 'char *'
| |-FieldDecl 0x213a55c4a50 <line:40:5, col:11> col:11 referenced server_npn_negotiated 'char *'
| |-FieldDecl 0x213a55c4ac0 <line:41:5, col:11> col:11 referenced client_alpn_negotiated 'char *'
| |-FieldDecl 0x213a55c4b30 <line:42:5, col:11> col:11 referenced server_alpn_negotiated 'char *'
| |-FieldDecl 0x213a55c4ba0 <line:44:5, col:9> col:9 referenced client_resumed 'int'
| |-FieldDecl 0x213a55c4c10 <line:45:5, col:9> col:9 referenced server_resumed 'int'
| `-FieldDecl 0x213a55c4c80 <line:47:5, col:9> col:9 referenced tmp_key_type 'int'
|-TypedefDecl 0x213a55c4d38 <line:15:1, line:48:3> col:3 referenced HANDSHAKE_RESULT 'struct handshake_result':'struct handshake_result'
| `-ElaboratedType 0x213a55c4ce0 'struct handshake_result' sugar
|   `-RecordType 0x213a55c4480 'struct handshake_result'
|     `-Record 0x213a55c43e8 'handshake_result'
|-FunctionDecl 0x213a5569010 <line:50:1, col:44> col:19 used HANDSHAKE_RESULT_new 'HANDSHAKE_RESULT *(void)'
|-FunctionDecl 0x213a55691e8 <line:51:1, col:52> col:6 used HANDSHAKE_RESULT_free 'void (HANDSHAKE_RESULT *)'
| `-ParmVarDecl 0x213a55690d8 <col:28, col:46> col:46 result 'HANDSHAKE_RESULT *'
|-FunctionDecl 0x213a5569708 <line:54:1, line:57:60> line:54:19 invalid do_handshake 'HANDSHAKE_RESULT *(int *, int *, int *, int *, int *, const SSL_TEST_CTX *)'
| |-ParmVarDecl 0x213a55692c0 <col:32, col:41> col:41 invalid server_ctx 'int *'
| |-ParmVarDecl 0x213a5569340 <col:53, col:62> col:62 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x213a55693c0 <line:55:32, col:41> col:41 invalid client_ctx 'int *'
| |-ParmVarDecl 0x213a5569440 <col:53, col:62> col:62 invalid resume_server_ctx 'int *'
| |-ParmVarDecl 0x213a55694c0 <line:56:32, col:41> col:41 invalid resume_client_ctx 'int *'
| `-ParmVarDecl 0x213a5569598 <line:57:32, col:52> col:52 test_ctx 'const SSL_TEST_CTX *'
|-FunctionDecl 0x213a5569a98 <.//openssl//file_jk/after\test/testutil.h:85:1, col:60> col:6 add_test 'void (const char *, int (*)())'
| |-ParmVarDecl 0x213a55697f0 <col:15, col:27> col:27 test_case_name 'const char *'
| `-ParmVarDecl 0x213a5569950 <col:43, col:59> col:49 test_fn 'int (*)()'
|-FunctionDecl 0x213a5569f68 <line:86:1, col:80> col:6 add_all_tests 'void (const char *, int (*)(int), int)'
| |-ParmVarDecl 0x213a5569b78 <col:20, col:32> col:32 test_case_name 'const char *'
| |-ParmVarDecl 0x213a5569d78 <col:48, col:70> col:54 test_fn 'int (*)(int)'
| `-ParmVarDecl 0x213a5569df8 <col:73, col:77> col:77 num 'int'
|-FunctionDecl 0x213a5568130 <line:87:1, col:41> col:5 run_tests 'int (const char *)'
| `-ParmVarDecl 0x213a5568048 <col:15, col:27> col:27 test_prog_name 'const char *'
|-FunctionDecl 0x213a5568440 <line:97:1, col:67> col:5 strings_equal 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x213a5568208 <col:19, col:31> col:31 desc 'const char *'
| |-ParmVarDecl 0x213a5568288 <col:37, col:49> col:49 s1 'const char *'
| `-ParmVarDecl 0x213a5568308 <col:53, col:65> col:65 s2 'const char *'
|-FunctionDecl 0x213a5568588 prev 0x213a5569010 <.//openssl//file_jk/after\test\handshake_helper.c:19:1, line:24:1> line:19:19 used HANDSHAKE_RESULT_new 'HANDSHAKE_RESULT *(void)'
| `-CompoundStmt 0x213a5568dd0 <line:20:1, line:24:1>
|   |-DeclStmt 0x213a5568898 <line:21:5, col:57>
|   | `-VarDecl 0x213a5568638 <col:5, col:56> col:23 used ret 'HANDSHAKE_RESULT *' cinit
|   |   `-ImplicitCastExpr 0x213a5568880 <col:29, col:56> 'HANDSHAKE_RESULT *' <IntegralToPointer>
|   |     `-CallExpr 0x213a5568858 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x213a5568840 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x213a5568790 <col:29> 'int ()' Function 0x213a55686c8 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x213a5568820 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x213a5568800 <col:50, col:55> 'HANDSHAKE_RESULT':'struct handshake_result' lvalue
|   |           `-UnaryOperator 0x213a55687e8 <col:51, col:52> 'HANDSHAKE_RESULT':'struct handshake_result' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x213a55687d0 <col:52> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |               `-DeclRefExpr 0x213a55687b0 <col:52> 'HANDSHAKE_RESULT *' lvalue Var 0x213a5568638 'ret' 'HANDSHAKE_RESULT *' non_odr_use_unevaluated
|   |-DoStmt 0x213a5568d60 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5568d20 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5568d08 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a55689e0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a55689c0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a55689a0 <.//openssl//file_jk/after\test\handshake_helper.c:22:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x213a5568970 <.//openssl//file_jk/after\test\handshake_helper.c:22:16> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x213a55688b0 <col:16> 'HANDSHAKE_RESULT *' lvalue Var 0x213a5568638 'ret' 'HANDSHAKE_RESULT *'
|   | |   |     `-ImplicitCastExpr 0x213a5568988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'HANDSHAKE_RESULT *' <BitCast>
|   | |   |       `-ParenExpr 0x213a5568950 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x213a5568928 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x213a55688e8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x213a5568cf0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5568cc8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5568cb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5568bf8 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5568c98 <col:28, <scratch space>:294:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5568c80 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5568c58 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x213a5568d38 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5568d80 <.//openssl//file_jk/after\test\handshake_helper.c:22:28>
|   `-ReturnStmt 0x213a5568dc0 <line:23:5, col:12>
|     `-ImplicitCastExpr 0x213a5568da8 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x213a5568d88 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x213a5568638 'ret' 'HANDSHAKE_RESULT *'
|-FunctionDecl 0x213a5568eb8 prev 0x213a55691e8 <line:26:1, line:35:1> line:26:6 used HANDSHAKE_RESULT_free 'void (HANDSHAKE_RESULT *)'
| |-ParmVarDecl 0x213a5568e10 <col:28, col:46> col:46 used result 'HANDSHAKE_RESULT *'
| `-CompoundStmt 0x213a5567590 <line:27:1, line:35:1>
|   |-IfStmt 0x213a5567070 <line:28:5, line:29:9>
|   | |-BinaryOperator 0x213a5567040 <line:28:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x213a5567010 <.//openssl//file_jk/after\test\handshake_helper.c:28:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x213a5568f60 <col:9> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x213a5568e10 'result' 'HANDSHAKE_RESULT *'
|   | | `-ImplicitCastExpr 0x213a5567028 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'HANDSHAKE_RESULT *' <BitCast>
|   | |   `-ParenExpr 0x213a5566ff0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x213a5568fc0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x213a5568f80 <col:26> 'int' 0
|   | `-ReturnStmt 0x213a5567060 <.//openssl//file_jk/after\test\handshake_helper.c:29:9>
|   |-CallExpr 0x213a5567218 <line:30:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x213a5567200 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5567178 <col:5> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x213a5567240 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x213a55671d0 <col:18, col:26> 'char *' lvalue ->client_npn_negotiated 0x213a55c49e0
|   |     `-ImplicitCastExpr 0x213a55671b8 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5567198 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x213a5568e10 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x213a55672f8 <line:31:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x213a55672e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5567258 <col:5> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x213a5567320 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x213a55672b0 <col:18, col:26> 'char *' lvalue ->server_npn_negotiated 0x213a55c4a50
|   |     `-ImplicitCastExpr 0x213a5567298 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5567278 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x213a5568e10 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x213a55673d8 <line:32:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x213a55673c0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5567338 <col:5> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x213a5567400 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x213a5567390 <col:18, col:26> 'char *' lvalue ->client_alpn_negotiated 0x213a55c4ac0
|   |     `-ImplicitCastExpr 0x213a5567378 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5567358 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x213a5568e10 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x213a55674b8 <line:33:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x213a55674a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5567418 <col:5> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x213a55674e0 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x213a5567470 <col:18, col:26> 'char *' lvalue ->server_alpn_negotiated 0x213a55c4b30
|   |     `-ImplicitCastExpr 0x213a5567458 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5567438 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x213a5568e10 'result' 'HANDSHAKE_RESULT *'
|   `-CallExpr 0x213a5567550 <line:34:5, col:24> 'int'
|     |-ImplicitCastExpr 0x213a5567538 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x213a55674f8 <col:5> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x213a5567578 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x213a5567518 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x213a5568e10 'result' 'HANDSHAKE_RESULT *'
|-RecordDecl 0x213a55675d0 <line:42:9, line:48:1> line:42:16 struct handshake_ex_data_st definition
| |-FieldDecl 0x213a55676a8 <line:43:5, col:9> col:9 referenced alert_sent 'int'
| |-FieldDecl 0x213a5567718 <line:44:5, col:9> col:9 referenced num_fatal_alerts_sent 'int'
| |-FieldDecl 0x213a5567788 <line:45:5, col:9> col:9 referenced alert_received 'int'
| |-FieldDecl 0x213a55677f8 <line:46:5, col:9> col:9 referenced session_ticket_do_not_call 'int'
| `-FieldDecl 0x213a5567860 <line:47:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
|-TypedefDecl 0x213a5567918 <line:42:1, line:48:3> col:3 referenced HANDSHAKE_EX_DATA 'struct handshake_ex_data_st':'struct handshake_ex_data_st'
| `-ElaboratedType 0x213a55678c0 'struct handshake_ex_data_st' sugar
|   `-RecordType 0x213a5567670 'struct handshake_ex_data_st'
|     `-Record 0x213a55675d0 'handshake_ex_data_st'
|-RecordDecl 0x213a5567988 <line:50:9, line:55:1> line:50:16 struct ctx_data_st definition
| |-FieldDecl 0x213a5567a80 <line:51:5, col:20> col:20 referenced npn_protocols 'unsigned char *'
| |-FieldDecl 0x213a5567ae8 <line:52:5, col:12> col:12 referenced npn_protocols_len 'size_t':'unsigned long long'
| |-FieldDecl 0x213a5567b58 <line:53:5, col:20> col:20 referenced alpn_protocols 'unsigned char *'
| `-FieldDecl 0x213a5567bc0 <line:54:5, col:12> col:12 referenced alpn_protocols_len 'size_t':'unsigned long long'
|-TypedefDecl 0x213a5567c78 <line:50:1, line:55:3> col:3 referenced CTX_DATA 'struct ctx_data_st':'struct ctx_data_st'
| `-ElaboratedType 0x213a5567c20 'struct ctx_data_st' sugar
|   `-RecordType 0x213a5567a20 'struct ctx_data_st'
|     `-Record 0x213a5567988 'ctx_data_st'
|-FunctionDecl 0x213a5567e88 <line:58:1, line:64:1> line:58:13 used ctx_data_free_data 'void (CTX_DATA *)' static
| |-ParmVarDecl 0x213a5567d78 <col:32, col:42> col:42 used ctx_data 'CTX_DATA *'
| `-CompoundStmt 0x213a556a390 <line:59:1, line:64:1>
|   |-CallExpr 0x213a556a020 <line:60:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x213a5567fd0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5567f48 <col:5> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x213a556a048 <col:18, col:28> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x213a5567fa0 <col:18, col:28> 'unsigned char *' lvalue ->npn_protocols 0x213a5567a80
|   |     `-ImplicitCastExpr 0x213a5567f88 <col:18> 'CTX_DATA *' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5567f68 <col:18> 'CTX_DATA *' lvalue ParmVar 0x213a5567d78 'ctx_data' 'CTX_DATA *'
|   |-BinaryOperator 0x213a556a168 <line:61:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|   | |-MemberExpr 0x213a556a098 <.//openssl//file_jk/after\test\handshake_helper.c:61:5, col:15> 'unsigned char *' lvalue ->npn_protocols 0x213a5567a80
|   | | `-ImplicitCastExpr 0x213a556a080 <col:5> 'CTX_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a556a060 <col:5> 'CTX_DATA *' lvalue ParmVar 0x213a5567d78 'ctx_data' 'CTX_DATA *'
|   | `-ImplicitCastExpr 0x213a556a150 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |   `-ParenExpr 0x213a556a130 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x213a556a108 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x213a556a0c8 <col:26> 'int' 0
|   |-CallExpr 0x213a556a228 <.//openssl//file_jk/after\test\handshake_helper.c:62:5, col:42> 'int'
|   | |-ImplicitCastExpr 0x213a556a210 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a556a188 <col:5> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x213a556a250 <col:18, col:28> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x213a556a1e0 <col:18, col:28> 'unsigned char *' lvalue ->alpn_protocols 0x213a5567b58
|   |     `-ImplicitCastExpr 0x213a556a1c8 <col:18> 'CTX_DATA *' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a556a1a8 <col:18> 'CTX_DATA *' lvalue ParmVar 0x213a5567d78 'ctx_data' 'CTX_DATA *'
|   `-BinaryOperator 0x213a556a370 <line:63:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|     |-MemberExpr 0x213a556a2a0 <.//openssl//file_jk/after\test\handshake_helper.c:63:5, col:15> 'unsigned char *' lvalue ->alpn_protocols 0x213a5567b58
|     | `-ImplicitCastExpr 0x213a556a288 <col:5> 'CTX_DATA *' <LValueToRValue>
|     |   `-DeclRefExpr 0x213a556a268 <col:5> 'CTX_DATA *' lvalue ParmVar 0x213a5567d78 'ctx_data' 'CTX_DATA *'
|     `-ImplicitCastExpr 0x213a556a358 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|       `-ParenExpr 0x213a556a338 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x213a556a310 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x213a556a2d0 <col:26> 'int' 0
|-VarDecl 0x213a556a3d8 <.//openssl//file_jk/after\test\handshake_helper.c:66:1, col:12> col:12 used ex_data_idx 'int' static
|-FunctionDecl 0x213a556a658 <line:68:1, line:82:1> line:68:13 invalid info_cb 'void (const int *, int, int)' static
| |-ParmVarDecl 0x213a556a470 <col:21, col:32> col:32 invalid s 'const int *'
| |-ParmVarDecl 0x213a556a4f0 <col:35, col:39> col:39 used where 'int'
| |-ParmVarDecl 0x213a556a570 <col:46, col:50> col:50 used ret 'int'
| `-CompoundStmt 0x213a5570380 <line:69:1, line:82:1>
|   `-IfStmt 0x213a5570368 <line:70:5, line:81:5>
|     |-OpaqueValueExpr 0x213a5570350 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x213a5570330 <line:70:31, line:81:5>
|       |-DeclStmt 0x213a556a980 <line:71:9, line:72:66>
|       | `-VarDecl 0x213a556a7e8 <line:71:9, col:28> col:28 used ex_data 'HANDSHAKE_EX_DATA *'
|       `-IfStmt 0x213a5570308 <line:73:9, line:80:9> has_else
|         |-OpaqueValueExpr 0x213a55702f0 <<invalid sloc>> '_Bool'
|         |-CompoundStmt 0x213a55701f8 <line:73:35, line:78:9>
|         | |-BinaryOperator 0x213a556aa88 <line:74:13, col:35> 'int' '='
|         | | |-MemberExpr 0x213a556aa08 <col:13, col:22> 'int' lvalue ->alert_sent 0x213a55676a8
|         | | | `-ImplicitCastExpr 0x213a556a9f0 <col:13> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x213a556a9b8 <col:13> 'HANDSHAKE_EX_DATA *' lvalue Var 0x213a556a7e8 'ex_data' 'HANDSHAKE_EX_DATA *'
|         | | `-ImplicitCastExpr 0x213a556aa70 <col:35> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x213a556aa38 <col:35> 'int' lvalue ParmVar 0x213a556a570 'ret' 'int'
|         | `-IfStmt 0x213a55701e0 <line:75:13, line:77:47>
|         |   |-BinaryOperator 0x213a5570140 <line:75:17, line:76:64> 'int' '||'
|         |   | |-BinaryOperator 0x213a556ada0 <line:75:17, col:60> 'int' '=='
|         |   | | |-CallExpr 0x213a556ad00 <col:17, col:55> 'int'
|         |   | | | |-ImplicitCastExpr 0x213a556ace8 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|         |   | | | | `-DeclRefExpr 0x213a556aaa8 <col:17> 'int (const char *, const char *)' Function 0x213a552e250 'strcmp' 'int (const char *, const char *)'
|         |   | | | |-ImplicitCastExpr 0x213a556ad30 <col:24, col:49> 'const char *' <IntegralToPointer>
|         |   | | | | `-CallExpr 0x213a556ac10 <col:24, col:49> 'int'
|         |   | | | |   |-ImplicitCastExpr 0x213a556abf8 <col:24> 'int (*)()' <FunctionToPointerDecay>
|         |   | | | |   | `-DeclRefExpr 0x213a556abb8 <col:24> 'int ()' Function 0x213a556aaf0 'SSL_alert_type_string' 'int ()'
|         |   | | | |   `-ImplicitCastExpr 0x213a556ac38 <col:46> 'int' <LValueToRValue>
|         |   | | | |     `-DeclRefExpr 0x213a556abd8 <col:46> 'int' lvalue ParmVar 0x213a556a570 'ret' 'int'
|         |   | | | `-ImplicitCastExpr 0x213a556ad60 <col:52> 'const char *' <NoOp>
|         |   | | |   `-ImplicitCastExpr 0x213a556ad48 <col:52> 'char *' <ArrayToPointerDecay>
|         |   | | |     `-StringLiteral 0x213a556ac88 <col:52> 'char [2]' lvalue "F"
|         |   | | `-IntegerLiteral 0x213a556ad78 <col:60> 'int' 0
|         |   | `-BinaryOperator 0x213a5570120 <line:76:20, col:64> 'int' '=='
|         |   |   |-CallExpr 0x213a5570080 <col:20, col:59> 'int'
|         |   |   | |-ImplicitCastExpr 0x213a556afe0 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|         |   |   | | `-DeclRefExpr 0x213a556adc0 <col:20> 'int (const char *, const char *)' Function 0x213a552e250 'strcmp' 'int (const char *, const char *)'
|         |   |   | |-ImplicitCastExpr 0x213a55700b0 <col:27, col:52> 'const char *' <IntegralToPointer>
|         |   |   | | `-CallExpr 0x213a556af28 <col:27, col:52> 'int'
|         |   |   | |   |-ImplicitCastExpr 0x213a556af10 <col:27> 'int (*)()' <FunctionToPointerDecay>
|         |   |   | |   | `-DeclRefExpr 0x213a556aed0 <col:27> 'int ()' Function 0x213a556ae08 'SSL_alert_desc_string' 'int ()'
|         |   |   | |   `-ImplicitCastExpr 0x213a556af50 <col:49> 'int' <LValueToRValue>
|         |   |   | |     `-DeclRefExpr 0x213a556aef0 <col:49> 'int' lvalue ParmVar 0x213a556a570 'ret' 'int'
|         |   |   | `-ImplicitCastExpr 0x213a55700e0 <col:55> 'const char *' <NoOp>
|         |   |   |   `-ImplicitCastExpr 0x213a55700c8 <col:55> 'char *' <ArrayToPointerDecay>
|         |   |   |     `-StringLiteral 0x213a556afa8 <col:55> 'char [3]' lvalue "CN"
|         |   |   `-IntegerLiteral 0x213a55700f8 <col:64> 'int' 0
|         |   `-UnaryOperator 0x213a55701c8 <line:77:17, col:47> 'int' postfix '++'
|         |     `-MemberExpr 0x213a5570198 <col:17, col:26> 'int' lvalue ->num_fatal_alerts_sent 0x213a5567718
|         |       `-ImplicitCastExpr 0x213a5570180 <col:17> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         |         `-DeclRefExpr 0x213a5570160 <col:17> 'HANDSHAKE_EX_DATA *' lvalue Var 0x213a556a7e8 'ex_data' 'HANDSHAKE_EX_DATA *'
|         `-CompoundStmt 0x213a55702d8 <line:78:16, line:80:9>
|           `-BinaryOperator 0x213a55702b8 <line:79:13, col:39> 'int' '='
|             |-MemberExpr 0x213a5570250 <col:13, col:22> 'int' lvalue ->alert_received 0x213a5567788
|             | `-ImplicitCastExpr 0x213a5570238 <col:13> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|             |   `-DeclRefExpr 0x213a5570218 <col:13> 'HANDSHAKE_EX_DATA *' lvalue Var 0x213a556a7e8 'ex_data' 'HANDSHAKE_EX_DATA *'
|             `-ImplicitCastExpr 0x213a55702a0 <col:39> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x213a5570280 <col:39> 'int' lvalue ParmVar 0x213a556a570 'ret' 'int'
|-FunctionDecl 0x213a55705a0 <line:90:1, line:124:1> line:90:12 invalid select_server_ctx 'int (int *, void *, int)' static
| |-ParmVarDecl 0x213a55703b0 <col:30, col:35> col:35 invalid s 'int *'
| |-ParmVarDecl 0x213a5570430 <col:38, col:44> col:44 arg 'void *'
| |-ParmVarDecl 0x213a55704b0 <col:49, col:53> col:53 used ignore 'int'
| `-CompoundStmt 0x213a556c5f0 <line:91:1, line:124:1>
|   |-DeclStmt 0x213a5570800 <line:92:5, col:78>
|   | `-VarDecl 0x213a5570688 <col:5, col:17> col:17 used servername 'const char *'
|   |-DeclStmt 0x213a55708d0 <line:93:5, line:94:62>
|   | `-VarDecl 0x213a5570828 <line:93:5, col:24> col:24 used ex_data 'HANDSHAKE_EX_DATA *'
|   |-IfStmt 0x213a5570ae8 <line:96:5, line:99:5>
|   | |-BinaryOperator 0x213a55709d8 <line:96:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x213a55709a8 <.//openssl//file_jk/after\test\handshake_helper.c:96:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x213a55708e8 <col:9> 'const char *' lvalue Var 0x213a5570688 'servername' 'const char *'
|   | | `-ImplicitCastExpr 0x213a55709c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x213a5570988 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x213a5570960 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x213a5570920 <col:26> 'int' 0
|   | `-CompoundStmt 0x213a5570ad0 <.//openssl//file_jk/after\test\handshake_helper.c:96:29, line:99:5>
|   |   `-BinaryOperator 0x213a5570ab0 <line:97:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|   |     |-MemberExpr 0x213a5570a48 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x213a5567860
|   |     | `-ImplicitCastExpr 0x213a5570a30 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x213a55709f8 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x213a5570828 'ex_data' 'HANDSHAKE_EX_DATA *'
|   |     `-ImplicitCastExpr 0x213a5570a98 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |       `-DeclRefExpr 0x213a5570a78 <col:31> 'int' EnumConstant 0x213a55c2fa0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|   `-IfStmt 0x213a556c5c8 <line:101:5, line:123:5> has_else
|     |-BinaryOperator 0x213a5570c80 <line:101:9, col:42> 'int' '=='
|     | |-CallExpr 0x213a5570be0 <col:9, col:37> 'int'
|     | | |-ImplicitCastExpr 0x213a5570bc8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x213a5570b00 <col:9> 'int (const char *, const char *)' Function 0x213a552e250 'strcmp' 'int (const char *, const char *)'
|     | | |-ImplicitCastExpr 0x213a5570c10 <col:16> 'const char *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x213a5570b20 <col:16> 'const char *' lvalue Var 0x213a5570688 'servername' 'const char *'
|     | | `-ImplicitCastExpr 0x213a5570c40 <col:28> 'const char *' <NoOp>
|     | |   `-ImplicitCastExpr 0x213a5570c28 <col:28> 'char *' <ArrayToPointerDecay>
|     | |     `-StringLiteral 0x213a5570b78 <col:28> 'char [8]' lvalue "server2"
|     | `-IntegerLiteral 0x213a5570c58 <col:42> 'int' 0
|     |-CompoundStmt 0x213a556c1e8 <col:45, line:114:5>
|     | `-BinaryOperator 0x213a556c1c8 <line:112:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|     |   |-MemberExpr 0x213a556c160 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x213a5567860
|     |   | `-ImplicitCastExpr 0x213a556c148 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x213a556c128 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x213a5570828 'ex_data' 'HANDSHAKE_EX_DATA *'
|     |   `-ImplicitCastExpr 0x213a556c1b0 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|     |     `-DeclRefExpr 0x213a556c190 <col:31> 'int' EnumConstant 0x213a55c2ff8 'SSL_TEST_SERVERNAME_SERVER2' 'int'
|     `-IfStmt 0x213a556c5a0 <line:114:12, line:123:5> has_else
|       |-BinaryOperator 0x213a556c348 <line:114:16, col:49> 'int' '=='
|       | |-CallExpr 0x213a556c2a8 <col:16, col:44> 'int'
|       | | |-ImplicitCastExpr 0x213a556c290 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x213a556c200 <col:16> 'int (const char *, const char *)' Function 0x213a552e250 'strcmp' 'int (const char *, const char *)'
|       | | |-ImplicitCastExpr 0x213a556c2d8 <col:23> 'const char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x213a556c220 <col:23> 'const char *' lvalue Var 0x213a5570688 'servername' 'const char *'
|       | | `-ImplicitCastExpr 0x213a556c308 <col:35> 'const char *' <NoOp>
|       | |   `-ImplicitCastExpr 0x213a556c2f0 <col:35> 'char *' <ArrayToPointerDecay>
|       | |     `-StringLiteral 0x213a556c240 <col:35> 'char [8]' lvalue "server1"
|       | `-IntegerLiteral 0x213a556c320 <col:49> 'int' 0
|       |-CompoundStmt 0x213a556c428 <col:52, line:117:5>
|       | `-BinaryOperator 0x213a556c408 <line:115:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|       |   |-MemberExpr 0x213a556c3a0 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x213a5567860
|       |   | `-ImplicitCastExpr 0x213a556c388 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x213a556c368 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x213a5570828 'ex_data' 'HANDSHAKE_EX_DATA *'
|       |   `-ImplicitCastExpr 0x213a556c3f0 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|       |     `-DeclRefExpr 0x213a556c3d0 <col:31> 'int' EnumConstant 0x213a55c2fa0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|       `-IfStmt 0x213a556c578 <line:117:12, line:123:5> has_else
|         |-ImplicitCastExpr 0x213a556c478 <line:117:16> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x213a556c440 <col:16> 'int' lvalue ParmVar 0x213a55704b0 'ignore' 'int'
|         |-CompoundStmt 0x213a556c550 <col:24, line:120:5>
|         | `-BinaryOperator 0x213a556c530 <line:118:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|         |   |-MemberExpr 0x213a556c4c8 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x213a5567860
|         |   | `-ImplicitCastExpr 0x213a556c4b0 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         |   |   `-DeclRefExpr 0x213a556c490 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x213a5570828 'ex_data' 'HANDSHAKE_EX_DATA *'
|         |   `-ImplicitCastExpr 0x213a556c518 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|         |     `-DeclRefExpr 0x213a556c4f8 <col:31> 'int' EnumConstant 0x213a55c2fa0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|         `-CompoundStmt 0x213a556c568 <line:120:12, line:123:5>
|-FunctionDecl 0x213a556c820 <line:137:1, line:140:1> line:137:12 invalid servername_ignore_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x213a556c638 <col:33, col:38> col:38 invalid s 'int *'
| |-ParmVarDecl 0x213a556c6b8 <col:41, col:46> col:46 ad 'int *'
| |-ParmVarDecl 0x213a556c738 <col:50, col:56> col:56 used arg 'void *'
| `-CompoundStmt 0x213a556c950 <line:138:1, line:140:1>
|-FunctionDecl 0x213a556cb38 <line:142:1, line:145:1> line:142:12 invalid servername_reject_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x213a556c990 <col:33, col:38> col:38 invalid s 'int *'
| |-ParmVarDecl 0x213a556ca10 <col:41, col:46> col:46 ad 'int *'
| |-ParmVarDecl 0x213a556ca90 <col:50, col:56> col:56 used arg 'void *'
| `-CompoundStmt 0x213a556cc68 <line:143:1, line:145:1>
|-VarDecl 0x213a556cca8 <line:147:1, col:49> col:22 used dummy_ocsp_resp_good_val 'unsigned char' static cinit
| `-ImplicitCastExpr 0x213a556cd50 <col:49> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x213a556cd10 <col:49> 'int' 255
|-VarDecl 0x213a556cd80 <line:148:1, col:48> col:22 used dummy_ocsp_resp_bad_val 'unsigned char' static cinit
| `-ImplicitCastExpr 0x213a556ce28 <col:48> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x213a556cde8 <col:48> 'int' 254
|-FunctionDecl 0x213a556f070 <line:150:1, line:165:1> line:150:12 invalid server_ocsp_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x213a556ce58 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x213a556ced8 <col:35, col:41> col:41 used arg 'void *'
| `-CompoundStmt 0x213a556f738 <line:151:1, line:165:1>
|   |-DeclStmt 0x213a556f1b8 <line:152:5, col:24>
|   | `-VarDecl 0x213a556f150 <col:5, col:20> col:20 used resp 'unsigned char *'
|   |-BinaryOperator 0x213a556f398 <line:154:5, col:28> 'unsigned char *' '='
|   | |-DeclRefExpr 0x213a556f1d0 <col:5> 'unsigned char *' lvalue Var 0x213a556f150 'resp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x213a556f380 <col:12, col:28> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x213a556f358 <col:12, col:28> 'int'
|   |     |-ImplicitCastExpr 0x213a556f340 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a556f2f8 <col:12> 'int ()' Function 0x213a556f230 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x213a556f318 <col:27> 'int' 1
|   `-BinaryOperator 0x213a556f5c0 <line:160:5, col:31> 'unsigned char' '='
|     |-UnaryOperator 0x213a556f4e8 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x213a556f4d0 <col:6> 'unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x213a556f4b0 <col:6> 'unsigned char *' lvalue Var 0x213a556f150 'resp' 'unsigned char *'
|     `-ImplicitCastExpr 0x213a556f5a8 <col:13, col:31> 'unsigned char' <LValueToRValue>
|       `-UnaryOperator 0x213a556f590 <col:13, col:31> 'unsigned char' lvalue prefix '*' cannot overflow
|         `-CStyleCastExpr 0x213a556f568 <col:14, col:31> 'unsigned char *' <BitCast>
|           `-ImplicitCastExpr 0x213a556f550 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x213a556f500 <col:31> 'void *' lvalue ParmVar 0x213a556ced8 'arg' 'void *'
|-FunctionDecl 0x213a556f898 <line:167:1, line:177:1> line:167:12 invalid client_ocsp_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x213a556f778 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x213a556f7f8 <col:35, col:41> col:41 arg 'void *'
| `-CompoundStmt 0x213a556fe90 <line:168:1, line:177:1>
|   |-DeclStmt 0x213a556f9e0 <line:169:5, col:30>
|   | `-VarDecl 0x213a556f978 <col:5, col:26> col:26 used resp 'const unsigned char *'
|   |-DeclStmt 0x213a556fa78 <line:170:5, col:12>
|   | `-VarDecl 0x213a556fa10 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x213a556fe40 <line:173:5, line:174:16>
|   | |-BinaryOperator 0x213a556fde8 <line:173:9, col:30> 'int' '||'
|   | | |-BinaryOperator 0x213a556fcb0 <col:9, col:16> 'int' '!='
|   | | | |-ImplicitCastExpr 0x213a556fc98 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x213a556fc50 <col:9> 'int' lvalue Var 0x213a556fa10 'len' 'int'
|   | | | `-IntegerLiteral 0x213a556fc70 <col:16> 'int' 1
|   | | `-BinaryOperator 0x213a556fdc8 <col:21, col:30> 'int' '!='
|   | |   |-ImplicitCastExpr 0x213a556fd98 <col:21, col:22> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x213a556fd68 <col:21, col:22> 'unsigned char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x213a556fd30 <col:21, col:22> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x213a556fd18 <col:22> 'const unsigned char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x213a556fcf8 <col:22> 'const unsigned char *' lvalue Var 0x213a556f978 'resp' 'const unsigned char *'
|   | |   `-ImplicitCastExpr 0x213a556fdb0 <col:30> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x213a556fd80 <col:30> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x213a556fd48 <col:30> 'unsigned char' lvalue Var 0x213a556cca8 'dummy_ocsp_resp_good_val' 'unsigned char'
|   | `-ReturnStmt 0x213a556fe30 <line:174:9, col:16>
|   |   `-IntegerLiteral 0x213a556fe08 <col:16> 'int' 0
|   `-ReturnStmt 0x213a556fe80 <line:176:5, col:12>
|     `-IntegerLiteral 0x213a556fe58 <col:12> 'int' 1
|-FunctionDecl 0x213a5571090 <line:179:1, line:182:1> line:179:12 invalid verify_reject_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x213a556fef0 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x213a556ff70 <col:50, col:56> col:56 arg 'void *'
| `-CompoundStmt 0x213a55712a0 <col:61, line:182:1>
|   `-ReturnStmt 0x213a5571290 <line:181:5, col:12>
|     `-IntegerLiteral 0x213a5571268 <col:12> 'int' 0
|-FunctionDecl 0x213a55713f0 <line:184:1, line:186:1> line:184:12 invalid verify_accept_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x213a55712d0 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x213a5571350 <col:50, col:56> col:56 arg 'void *'
| `-CompoundStmt 0x213a55714f0 <col:61, line:186:1>
|   `-ReturnStmt 0x213a55714e0 <line:185:5, col:12>
|     `-IntegerLiteral 0x213a55714b8 <col:12> 'int' 1
|-FunctionDecl 0x213a55718d0 <line:188:1, line:192:1> line:188:12 invalid broken_session_ticket_cb 'int (int *, unsigned char *, unsigned char *, int *, int *, int)' static
| |-ParmVarDecl 0x213a5571538 <col:37, col:42> col:42 invalid s 'int *'
| |-ParmVarDecl 0x213a55715b8 <col:45, col:60> col:60 key_name 'unsigned char *'
| |-ParmVarDecl 0x213a5571638 <col:70, col:85> col:85 iv 'unsigned char *'
| |-ParmVarDecl 0x213a55716b8 <line:189:37, col:53> col:53 invalid ctx 'int *'
| |-ParmVarDecl 0x213a5571738 <col:58, col:68> col:68 invalid hctx 'int *'
| |-ParmVarDecl 0x213a55717b8 <col:74, col:78> col:78 enc 'int'
| `-CompoundStmt 0x213a55719f0 <line:190:1, line:192:1>
|   `-ReturnStmt 0x213a55719e0 <line:191:5, col:12>
|     `-IntegerLiteral 0x213a55719b8 <col:12> 'int' 0
|-FunctionDecl 0x213a5571da8 <line:194:1, line:203:1> line:194:12 invalid do_not_call_session_ticket_cb 'int (int *, unsigned char *, unsigned char *, int *, int *, int)' static
| |-ParmVarDecl 0x213a5571a68 <col:42, col:47> col:47 invalid s 'int *'
| |-ParmVarDecl 0x213a5571ae8 <col:50, col:65> col:65 key_name 'unsigned char *'
| |-ParmVarDecl 0x213a5571b68 <line:195:42, col:57> col:57 iv 'unsigned char *'
| |-ParmVarDecl 0x213a5571be8 <line:196:42, col:58> col:58 invalid ctx 'int *'
| |-ParmVarDecl 0x213a5571c68 <line:197:42, col:52> col:52 invalid hctx 'int *'
| |-ParmVarDecl 0x213a5571ce8 <col:58, col:62> col:62 enc 'int'
| `-CompoundStmt 0x213a5572060 <line:198:1, line:203:1>
|   |-DeclStmt 0x213a5571f48 <line:199:5, line:200:62>
|   | `-VarDecl 0x213a5571ea0 <line:199:5, col:24> col:24 used ex_data 'HANDSHAKE_EX_DATA *'
|   |-BinaryOperator 0x213a5572008 <line:201:5, col:43> 'int' '='
|   | |-MemberExpr 0x213a5571fb0 <col:5, col:14> 'int' lvalue ->session_ticket_do_not_call 0x213a55677f8
|   | | `-ImplicitCastExpr 0x213a5571f98 <col:5> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5571f60 <col:5> 'HANDSHAKE_EX_DATA *' lvalue Var 0x213a5571ea0 'ex_data' 'HANDSHAKE_EX_DATA *'
|   | `-IntegerLiteral 0x213a5571fe0 <col:43> 'int' 1
|   `-ReturnStmt 0x213a5572050 <line:202:5, col:12>
|     `-IntegerLiteral 0x213a5572028 <col:12> 'int' 0
|-FunctionDecl 0x213a556b388 <line:206:1, line:238:1> line:206:13 used parse_protos 'void (const char *, unsigned char **, size_t *)' static
| |-ParmVarDecl 0x213a556b090 <col:26, col:38> col:38 used protos 'const char *'
| |-ParmVarDecl 0x213a556b148 <col:46, col:62> col:62 used out 'unsigned char **'
| |-ParmVarDecl 0x213a556b218 <col:67, col:75> col:75 used outlen 'size_t *'
| `-CompoundStmt 0x213a55730b0 <line:207:1, line:238:1>
|   |-DeclStmt 0x213a556b5e0 <line:208:5, col:26>
|   | |-VarDecl 0x213a556b468 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   | |-VarDecl 0x213a556b4e0 <col:5, col:17> col:17 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x213a556b558 <col:5, col:20> col:20 used prefix 'size_t':'unsigned long long'
|   |-BinaryOperator 0x213a556b710 <line:210:5, col:24> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x213a556b5f8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x213a556b468 'len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x213a556b6d0 <col:11, col:24> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x213a556b6b8 <col:11> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x213a556b630 <col:11> 'unsigned long long (const char *)' Function 0x213a552e5b0 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x213a556b6f8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x213a556b650 <col:18> 'const char *' lvalue ParmVar 0x213a556b090 'protos' 'const char *'
|   |-DoStmt 0x213a556ba10 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a556b9d0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a556b9b8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a556b878 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a556b858 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a556b838 <.//openssl//file_jk/after\test\handshake_helper.c:213:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x213a556b808 <.//openssl//file_jk/after\test\handshake_helper.c:213:16, col:17> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-UnaryOperator 0x213a556b768 <col:16, col:17> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |     |   `-ImplicitCastExpr 0x213a556b750 <col:17> 'unsigned char **' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x213a556b730 <col:17> 'unsigned char **' lvalue ParmVar 0x213a556b148 'out' 'unsigned char **'
|   | |   |     `-ImplicitCastExpr 0x213a556b820 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x213a556b7e8 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x213a556b7c0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x213a556b780 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x213a556b9a0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a556b978 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a556b960 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a556b8b0 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a556b948 <col:28, <scratch space>:295:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a556b930 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a556b908 <col:1> 'char [13]' lvalue "*out == NULL"
|   | `-IntegerLiteral 0x213a556b9e8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a556ba30 <.//openssl//file_jk/after\test\handshake_helper.c:213:29>
|   |-BinaryOperator 0x213a556bb98 <line:216:5, col:34> 'unsigned char *' '='
|   | |-UnaryOperator 0x213a556ba70 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x213a556ba58 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a556ba38 <col:6> 'unsigned char **' lvalue ParmVar 0x213a556b148 'out' 'unsigned char **'
|   | `-ImplicitCastExpr 0x213a556bb80 <col:12, col:34> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x213a556bb58 <col:12, col:34> 'int'
|   |     |-ImplicitCastExpr 0x213a556bb40 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a556ba88 <col:12> 'int ()' Function 0x213a556f230 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x213a556bb20 <col:27, col:33> 'unsigned long long' '+'
|   |       |-ImplicitCastExpr 0x213a556baf0 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x213a556baa8 <col:27> 'size_t':'unsigned long long' lvalue Var 0x213a556b468 'len' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x213a556bb08 <col:33> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x213a556bac8 <col:33> 'int' 1
|   |-DoStmt 0x213a556be60 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a556be20 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a556be08 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a556bd00 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a556bce0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a556bcc0 <.//openssl//file_jk/after\test\handshake_helper.c:217:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x213a556bc90 <.//openssl//file_jk/after\test\handshake_helper.c:217:16, col:17> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-UnaryOperator 0x213a556bbf0 <col:16, col:17> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |     |   `-ImplicitCastExpr 0x213a556bbd8 <col:17> 'unsigned char **' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x213a556bbb8 <col:17> 'unsigned char **' lvalue ParmVar 0x213a556b148 'out' 'unsigned char **'
|   | |   |     `-ImplicitCastExpr 0x213a556bca8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x213a556bc70 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x213a556bc48 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x213a556bc08 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x213a556bdf0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a556bdc8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a556bdb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a556bd38 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a556bd98 <col:28, <scratch space>:296:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a556bd80 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a556bd58 <col:1> 'char [13]' lvalue "*out != NULL"
|   | `-IntegerLiteral 0x213a556be38 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a556be80 <.//openssl//file_jk/after\test\handshake_helper.c:217:29>
|   |-BinaryOperator 0x213a556bf70 <line:218:5, col:21> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x213a556bec0 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x213a556bea8 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a556be88 <col:6> 'size_t *' lvalue ParmVar 0x213a556b218 'outlen' 'size_t *'
|   | `-BinaryOperator 0x213a556bf50 <col:15, col:21> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x213a556bf20 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a556bed8 <col:15> 'size_t':'unsigned long long' lvalue Var 0x213a556b468 'len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x213a556bf38 <col:21> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x213a556bef8 <col:21> 'int' 1
|   |-CallExpr 0x213a5572190 <line:224:5, col:33> 'void *'
|   | |-ImplicitCastExpr 0x213a5572178 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a556bf90 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x213a552bac8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x213a55721c8 <col:12, col:19> 'void *' <BitCast>
|   | | `-BinaryOperator 0x213a55720b8 <col:12, col:19> 'unsigned char *' '+'
|   | |   |-ImplicitCastExpr 0x213a55720a0 <col:12, col:13> 'unsigned char *' <LValueToRValue>
|   | |   | `-UnaryOperator 0x213a556bfe8 <col:12, col:13> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |   `-ImplicitCastExpr 0x213a556bfd0 <col:13> 'unsigned char **' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x213a556bfb0 <col:13> 'unsigned char **' lvalue ParmVar 0x213a556b148 'out' 'unsigned char **'
|   | |   `-IntegerLiteral 0x213a556c000 <col:19> 'int' 1
|   | |-ImplicitCastExpr 0x213a55721f8 <col:22> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x213a55721e0 <col:22> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a55720d8 <col:22> 'const char *' lvalue ParmVar 0x213a556b090 'protos' 'const char *'
|   | `-ImplicitCastExpr 0x213a5572210 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x213a55720f8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x213a556b468 'len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x213a55722a0 <line:226:5, col:14> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x213a5572228 <col:5> 'size_t':'unsigned long long' lvalue Var 0x213a556b558 'prefix' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x213a5572288 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x213a5572260 <col:14> 'int' 0
|   |-BinaryOperator 0x213a5572390 <line:227:5, col:18> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x213a55722c0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x213a556b4e0 'i' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x213a5572370 <col:9, col:18> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x213a5572340 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a55722f8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x213a556b558 'prefix' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x213a5572358 <col:18> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x213a5572318 <col:18> 'int' 1
|   |-WhileStmt 0x213a5572be0 <line:228:5, line:235:5>
|   | |-BinaryOperator 0x213a5572420 <line:228:12, col:17> 'int' '<='
|   | | |-ImplicitCastExpr 0x213a55723f0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x213a55723b0 <col:12> 'size_t':'unsigned long long' lvalue Var 0x213a556b4e0 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x213a5572408 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a55723d0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x213a556b468 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x213a5572bc0 <col:22, line:235:5>
|   |   |-IfStmt 0x213a5572b70 <line:229:9, line:233:9>
|   |   | |-BinaryOperator 0x213a5572568 <line:229:13, col:26> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x213a5572550 <col:13, col:21> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x213a5572538 <col:13, col:21> 'unsigned char' <LValueToRValue>
|   |   | | |   `-ArraySubscriptExpr 0x213a5572500 <col:13, col:21> 'unsigned char' lvalue
|   |   | | |     |-ImplicitCastExpr 0x213a55724d0 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   | | |     | `-ParenExpr 0x213a5572490 <col:13, col:18> 'unsigned char *' lvalue
|   |   | | |     |   `-UnaryOperator 0x213a5572478 <col:14, col:15> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | |     |     `-ImplicitCastExpr 0x213a5572460 <col:15> 'unsigned char **' <LValueToRValue>
|   |   | | |     |       `-DeclRefExpr 0x213a5572440 <col:15> 'unsigned char **' lvalue ParmVar 0x213a556b148 'out' 'unsigned char **'
|   |   | | |     `-ImplicitCastExpr 0x213a55724e8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x213a55724b0 <col:20> 'size_t':'unsigned long long' lvalue Var 0x213a556b4e0 'i' 'size_t':'unsigned long long'
|   |   | | `-CharacterLiteral 0x213a5572520 <col:26> 'int' 44
|   |   | `-CompoundStmt 0x213a5572b40 <col:31, line:233:9>
|   |   |   |-DoStmt 0x213a5572898 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   |   | |-CompoundStmt 0x213a5572858 <line:106:8, line:111:5>
|   |   |   | | `-IfStmt 0x213a5572840 <line:107:9, line:110:9>
|   |   |   | |   |-UnaryOperator 0x213a55726f8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |   |   | |   | `-ParenExpr 0x213a55726d8 <col:14, col:24> 'int'
|   |   |   | |   |   `-BinaryOperator 0x213a55726b8 <.//openssl//file_jk/after\test\handshake_helper.c:230:24, col:41> 'int' '>'
|   |   |   | |   |     |-BinaryOperator 0x213a5572658 <col:24, col:32> 'unsigned long long' '-'
|   |   |   | |   |     | |-BinaryOperator 0x213a5572600 <col:24, col:28> 'unsigned long long' '-'
|   |   |   | |   |     | | |-ImplicitCastExpr 0x213a55725d0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   |     | | | `-DeclRefExpr 0x213a5572588 <col:24> 'size_t':'unsigned long long' lvalue Var 0x213a556b4e0 'i' 'size_t':'unsigned long long'
|   |   |   | |   |     | | `-ImplicitCastExpr 0x213a55725e8 <col:28> 'unsigned long long' <IntegralCast>
|   |   |   | |   |     | |   `-IntegerLiteral 0x213a55725a8 <col:28> 'int' 1
|   |   |   | |   |     | `-ImplicitCastExpr 0x213a5572640 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   |     |   `-DeclRefExpr 0x213a5572620 <col:32> 'size_t':'unsigned long long' lvalue Var 0x213a556b558 'prefix' 'size_t':'unsigned long long'
|   |   |   | |   |     `-ImplicitCastExpr 0x213a55726a0 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   | |   |       `-IntegerLiteral 0x213a5572678 <col:41> 'int' 0
|   |   |   | |   `-CompoundStmt 0x213a5572828 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   |   |   | |     `-CallExpr 0x213a5572800 <line:109:13, col:39> 'int'
|   |   |   | |       |-ImplicitCastExpr 0x213a55727e8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | |       | `-DeclRefExpr 0x213a5572730 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   |   |   | |       `-UnaryOperator 0x213a55727d0 <col:28, <scratch space>:297:1> 'int' prefix '!' cannot overflow
|   |   |   | |         `-ImplicitCastExpr 0x213a55727b8 <col:1> 'char *' <ArrayToPointerDecay>
|   |   |   | |           `-StringLiteral 0x213a5572788 <col:1> 'char [19]' lvalue "i - 1 - prefix > 0"
|   |   |   | `-IntegerLiteral 0x213a5572870 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   |   |-NullStmt 0x213a55728b8 <.//openssl//file_jk/after\test\handshake_helper.c:230:43>
|   |   |   |-BinaryOperator 0x213a5572aa8 <line:231:13, col:38> 'unsigned char' '='
|   |   |   | |-ArraySubscriptExpr 0x213a5572980 <col:13, col:26> 'unsigned char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x213a5572950 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   |   | | | `-ParenExpr 0x213a5572910 <col:13, col:18> 'unsigned char *' lvalue
|   |   |   | | |   `-UnaryOperator 0x213a55728f8 <col:14, col:15> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   | | |     `-ImplicitCastExpr 0x213a55728e0 <col:15> 'unsigned char **' <LValueToRValue>
|   |   |   | | |       `-DeclRefExpr 0x213a55728c0 <col:15> 'unsigned char **' lvalue ParmVar 0x213a556b148 'out' 'unsigned char **'
|   |   |   | | `-ImplicitCastExpr 0x213a5572968 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x213a5572930 <col:20> 'size_t':'unsigned long long' lvalue Var 0x213a556b558 'prefix' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x213a5572a90 <col:30, col:38> 'unsigned char' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x213a5572a70 <col:30, col:38> 'unsigned long long' '-'
|   |   |   |     |-BinaryOperator 0x213a5572a18 <col:30, col:34> 'unsigned long long' '-'
|   |   |   |     | |-ImplicitCastExpr 0x213a55729e8 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |     | | `-DeclRefExpr 0x213a55729a0 <col:30> 'size_t':'unsigned long long' lvalue Var 0x213a556b4e0 'i' 'size_t':'unsigned long long'
|   |   |   |     | `-ImplicitCastExpr 0x213a5572a00 <col:34> 'unsigned long long' <IntegralCast>
|   |   |   |     |   `-IntegerLiteral 0x213a55729c0 <col:34> 'int' 1
|   |   |   |     `-ImplicitCastExpr 0x213a5572a58 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x213a5572a38 <col:38> 'size_t':'unsigned long long' lvalue Var 0x213a556b558 'prefix' 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x213a5572b20 <line:232:13, col:22> 'size_t':'unsigned long long' '='
|   |   |     |-DeclRefExpr 0x213a5572ac8 <col:13> 'size_t':'unsigned long long' lvalue Var 0x213a556b558 'prefix' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x213a5572b08 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x213a5572ae8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x213a556b4e0 'i' 'size_t':'unsigned long long'
|   |   `-UnaryOperator 0x213a5572ba8 <line:234:9, col:10> 'size_t':'unsigned long long' postfix '++'
|   |     `-DeclRefExpr 0x213a5572b88 <col:9> 'size_t':'unsigned long long' lvalue Var 0x213a556b4e0 'i' 'size_t':'unsigned long long'
|   |-DoStmt 0x213a5572ea0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5572e60 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5572e48 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a5572d08 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a5572ce8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a5572cc8 <.//openssl//file_jk/after\test\handshake_helper.c:236:16, col:31> 'int' '>'
|   | |   |     |-BinaryOperator 0x213a5572c68 <col:16, col:22> 'unsigned long long' '-'
|   | |   |     | |-ImplicitCastExpr 0x213a5572c38 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     | | `-DeclRefExpr 0x213a5572bf8 <col:16> 'size_t':'unsigned long long' lvalue Var 0x213a556b468 'len' 'size_t':'unsigned long long'
|   | |   |     | `-ImplicitCastExpr 0x213a5572c50 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     |   `-DeclRefExpr 0x213a5572c18 <col:22> 'size_t':'unsigned long long' lvalue Var 0x213a556b558 'prefix' 'size_t':'unsigned long long'
|   | |   |     `-ImplicitCastExpr 0x213a5572cb0 <col:31> 'unsigned long long' <IntegralCast>
|   | |   |       `-IntegerLiteral 0x213a5572c88 <col:31> 'int' 0
|   | |   `-CompoundStmt 0x213a5572e30 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5572e08 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5572df0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5572d40 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5572dd8 <col:28, <scratch space>:298:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5572dc0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5572d98 <col:1> 'char [17]' lvalue "len - prefix > 0"
|   | `-IntegerLiteral 0x213a5572e78 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5572ec0 <.//openssl//file_jk/after\test\handshake_helper.c:236:33>
|   `-BinaryOperator 0x213a5573050 <line:237:5, col:28> 'unsigned char' '='
|     |-ArraySubscriptExpr 0x213a5572f88 <col:5, col:18> 'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x213a5572f58 <col:5, col:10> 'unsigned char *' <LValueToRValue>
|     | | `-ParenExpr 0x213a5572f18 <col:5, col:10> 'unsigned char *' lvalue
|     | |   `-UnaryOperator 0x213a5572f00 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
|     | |     `-ImplicitCastExpr 0x213a5572ee8 <col:7> 'unsigned char **' <LValueToRValue>
|     | |       `-DeclRefExpr 0x213a5572ec8 <col:7> 'unsigned char **' lvalue ParmVar 0x213a556b148 'out' 'unsigned char **'
|     | `-ImplicitCastExpr 0x213a5572f70 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x213a5572f38 <col:12> 'size_t':'unsigned long long' lvalue Var 0x213a556b558 'prefix' 'size_t':'unsigned long long'
|     `-ImplicitCastExpr 0x213a5573038 <col:22, col:28> 'unsigned char' <IntegralCast>
|       `-BinaryOperator 0x213a5573018 <col:22, col:28> 'unsigned long long' '-'
|         |-ImplicitCastExpr 0x213a5572fe8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|         | `-DeclRefExpr 0x213a5572fa8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x213a556b468 'len' 'size_t':'unsigned long long'
|         `-ImplicitCastExpr 0x213a5573000 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x213a5572fc8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x213a556b558 'prefix' 'size_t':'unsigned long long'
|-FunctionDecl 0x213a55734f0 <line:247:1, line:260:1> line:247:12 invalid client_npn_cb 'int (int *, unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x213a5573150 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x213a55731d8 <col:34, col:50> col:50 used out 'unsigned char **'
| |-ParmVarDecl 0x213a5573258 <col:55, col:70> col:70 used outlen 'unsigned char *'
| |-ParmVarDecl 0x213a55732d8 <line:248:26, col:47> col:47 used in 'const unsigned char *'
| |-ParmVarDecl 0x213a5573358 <col:51, col:64> col:64 used inlen 'unsigned int'
| |-ParmVarDecl 0x213a55733d8 <line:249:26, col:32> col:32 used arg 'void *'
| `-CompoundStmt 0x213a5573e20 <line:250:1, line:260:1>
|   |-DeclStmt 0x213a5573718 <line:251:5, col:42>
|   | `-VarDecl 0x213a55735e8 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x213a55736f0 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x213a55736d8 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x213a55736b8 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x213a5573650 <col:38> 'void *' lvalue ParmVar 0x213a55733d8 'arg' 'void *'
|   |-DeclStmt 0x213a55737b0 <line:252:5, col:12>
|   | `-VarDecl 0x213a5573748 <col:5, col:9> col:9 used ret 'int'
|   |-BinaryOperator 0x213a5573bd0 <line:254:5, line:256:60> 'int' '='
|   | |-DeclRefExpr 0x213a55737c8 <line:254:5> 'int' lvalue Var 0x213a5573748 'ret' 'int'
|   | `-CallExpr 0x213a5573af0 <col:11, line:256:60> 'int'
|   |   |-ImplicitCastExpr 0x213a5573ad8 <line:254:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x213a55738f0 <col:11> 'int ()' Function 0x213a5573828 'SSL_select_next_proto' 'int ()'
|   |   |-ImplicitCastExpr 0x213a5573b40 <col:33> 'unsigned char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a5573910 <col:33> 'unsigned char **' lvalue ParmVar 0x213a55731d8 'out' 'unsigned char **'
|   |   |-ImplicitCastExpr 0x213a5573b58 <col:38> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a5573948 <col:38> 'unsigned char *' lvalue ParmVar 0x213a5573258 'outlen' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x213a5573b70 <col:46> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a5573980 <col:46> 'const unsigned char *' lvalue ParmVar 0x213a55732d8 'in' 'const unsigned char *'
|   |   |-ImplicitCastExpr 0x213a5573b88 <col:50> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a55739b8 <col:50> 'unsigned int' lvalue ParmVar 0x213a5573358 'inlen' 'unsigned int'
|   |   |-ImplicitCastExpr 0x213a5573ba0 <line:255:33, col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-MemberExpr 0x213a5573a40 <col:33, col:43> 'unsigned char *' lvalue ->npn_protocols 0x213a5567a80
|   |   |   `-ImplicitCastExpr 0x213a5573a28 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x213a55739f0 <col:33> 'CTX_DATA *' lvalue Var 0x213a55735e8 'ctx_data' 'CTX_DATA *'
|   |   `-ImplicitCastExpr 0x213a5573bb8 <line:256:33, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-MemberExpr 0x213a5573aa8 <col:33, col:43> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x213a5567ae8
|   |       `-ImplicitCastExpr 0x213a5573a90 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |         `-DeclRefExpr 0x213a5573a70 <col:33> 'CTX_DATA *' lvalue Var 0x213a55735e8 'ctx_data' 'CTX_DATA *'
|   |-DoStmt 0x213a5573df8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5573db8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5573da0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a5573d88 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a5573d70 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5573d48 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5573d30 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5573c50 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5573d18 <col:28, <scratch space>:299:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5573d00 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5573ca8 <col:1> 'char [63]' lvalue "ret == OPENSSL_NPN_NEGOTIATED || ret == OPENSSL_NPN_NO_OVERLAP"
|   | `-IntegerLiteral 0x213a5573dd0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   `-NullStmt 0x213a5573e18 <.//openssl//file_jk/after\test\handshake_helper.c:258:79>
|-FunctionDecl 0x213a5575160 <line:262:1, line:269:1> line:262:12 invalid server_npn_cb 'int (int *, const unsigned char **, unsigned int *, void *)' static
| |-ParmVarDecl 0x213a5573e70 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x213a5573ef8 <col:34, col:56> col:56 used data 'const unsigned char **'
| |-ParmVarDecl 0x213a5573fa0 <line:263:26, col:40> col:40 used len 'unsigned int *'
| |-ParmVarDecl 0x213a5574020 <col:45, col:51> col:51 used arg 'void *'
| `-CompoundStmt 0x213a55755e8 <line:264:1, line:269:1>
|   |-DeclStmt 0x213a5575378 <line:265:5, col:42>
|   | `-VarDecl 0x213a5575248 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x213a5575350 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x213a5575338 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x213a5575318 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x213a55752b0 <col:38> 'void *' lvalue ParmVar 0x213a5574020 'arg' 'void *'
|   |-BinaryOperator 0x213a55754a8 <line:266:5, col:23> 'const unsigned char *' '='
|   | |-UnaryOperator 0x213a55753e0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x213a55753c8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5575390 <col:6> 'const unsigned char **' lvalue ParmVar 0x213a5573ef8 'data' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x213a5575490 <col:13, col:23> 'const unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x213a5575478 <col:13, col:23> 'unsigned char *' <LValueToRValue>
|   |     `-MemberExpr 0x213a5575448 <col:13, col:23> 'unsigned char *' lvalue ->npn_protocols 0x213a5567a80
|   |       `-ImplicitCastExpr 0x213a5575430 <col:13> 'CTX_DATA *' <LValueToRValue>
|   |         `-DeclRefExpr 0x213a55753f8 <col:13> 'CTX_DATA *' lvalue Var 0x213a5575248 'ctx_data' 'CTX_DATA *'
|   `-BinaryOperator 0x213a55755c8 <line:267:5, col:22> 'unsigned int' '='
|     |-UnaryOperator 0x213a5575518 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x213a5575500 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x213a55754c8 <col:6> 'unsigned int *' lvalue ParmVar 0x213a5573fa0 'len' 'unsigned int *'
|     `-ImplicitCastExpr 0x213a55755b0 <col:12, col:22> 'unsigned int' <IntegralCast>
|       `-ImplicitCastExpr 0x213a5575598 <col:12, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|         `-MemberExpr 0x213a5575568 <col:12, col:22> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x213a5567ae8
|           `-ImplicitCastExpr 0x213a5575550 <col:12> 'CTX_DATA *' <LValueToRValue>
|             `-DeclRefExpr 0x213a5575530 <col:12> 'CTX_DATA *' lvalue Var 0x213a5575248 'ctx_data' 'CTX_DATA *'
|-FunctionDecl 0x213a55759d0 <line:278:1, line:301:1> line:278:12 invalid server_alpn_cb 'int (int *, const unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x213a5575628 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x213a55756b0 <col:35, col:57> col:57 used out 'const unsigned char **'
| |-ParmVarDecl 0x213a5575730 <line:279:27, col:42> col:42 used outlen 'unsigned char *'
| |-ParmVarDecl 0x213a55757b0 <col:50, col:71> col:71 used in 'const unsigned char *'
| |-ParmVarDecl 0x213a5575830 <line:280:27, col:40> col:40 used inlen 'unsigned int'
| |-ParmVarDecl 0x213a55758b0 <col:47, col:53> col:53 used arg 'void *'
| `-CompoundStmt 0x213a5574168 <line:281:1, line:301:1>
|   |-DeclStmt 0x213a5575bf8 <line:282:5, col:42>
|   | `-VarDecl 0x213a5575ac8 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x213a5575bd0 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x213a5575bb8 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x213a5575b98 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x213a5575b30 <col:38> 'void *' lvalue ParmVar 0x213a55758b0 'arg' 'void *'
|   |-DeclStmt 0x213a5575c90 <line:283:5, col:12>
|   | `-VarDecl 0x213a5575c28 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x213a5575d28 <line:286:5, col:27>
|   | `-VarDecl 0x213a5575cc0 <col:5, col:20> col:20 used tmp_out 'unsigned char *'
|   |-BinaryOperator 0x213a5576058 <line:293:5, line:295:72> 'int' '='
|   | |-DeclRefExpr 0x213a5575d40 <line:293:5> 'int' lvalue Var 0x213a5575c28 'ret' 'int'
|   | `-CallExpr 0x213a5575f90 <col:11, line:295:72> 'int'
|   |   |-ImplicitCastExpr 0x213a5575f78 <line:293:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x213a5575d78 <col:11> 'int ()' Function 0x213a5573828 'SSL_select_next_proto' 'int ()'
|   |   |-UnaryOperator 0x213a5575dd0 <col:33, col:34> 'unsigned char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x213a5575d98 <col:34> 'unsigned char *' lvalue Var 0x213a5575cc0 'tmp_out' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x213a5575fe0 <col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a5575de8 <col:43> 'unsigned char *' lvalue ParmVar 0x213a5575730 'outlen' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x213a5575ff8 <line:294:33, col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-MemberExpr 0x213a5575e70 <col:33, col:43> 'unsigned char *' lvalue ->alpn_protocols 0x213a5567b58
|   |   |   `-ImplicitCastExpr 0x213a5575e58 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x213a5575e20 <col:33> 'CTX_DATA *' lvalue Var 0x213a5575ac8 'ctx_data' 'CTX_DATA *'
|   |   |-ImplicitCastExpr 0x213a5576010 <line:295:33, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-MemberExpr 0x213a5575ed8 <col:33, col:43> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x213a5567bc0
|   |   |   `-ImplicitCastExpr 0x213a5575ec0 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x213a5575ea0 <col:33> 'CTX_DATA *' lvalue Var 0x213a5575ac8 'ctx_data' 'CTX_DATA *'
|   |   |-ImplicitCastExpr 0x213a5576028 <col:63> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a5575f08 <col:63> 'const unsigned char *' lvalue ParmVar 0x213a55757b0 'in' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x213a5576040 <col:67> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x213a5575f40 <col:67> 'unsigned int' lvalue ParmVar 0x213a5575830 'inlen' 'unsigned int'
|   `-BinaryOperator 0x213a5574128 <line:297:5, col:12> 'const unsigned char *' '='
|     |-UnaryOperator 0x213a55740c0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x213a55760b0 <col:6> 'const unsigned char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x213a5576078 <col:6> 'const unsigned char **' lvalue ParmVar 0x213a55756b0 'out' 'const unsigned char **'
|     `-ImplicitCastExpr 0x213a5574110 <col:12> 'const unsigned char *' <NoOp>
|       `-ImplicitCastExpr 0x213a55740f8 <col:12> 'unsigned char *' <LValueToRValue>
|         `-DeclRefExpr 0x213a55740d8 <col:12> 'unsigned char *' lvalue Var 0x213a5575cc0 'tmp_out' 'unsigned char *'
|-FunctionDecl 0x213a5574718 <line:307:1, line:449:1> line:307:13 invalid configure_handshake_ctx 'void (int *, int *, int *, const SSL_TEST_CTX *, const SSL_TEST_EXTRA_CONF *, CTX_DATA *, CTX_DATA *, CTX_DATA *)' static
| |-ParmVarDecl 0x213a55741b8 <col:37, col:46> col:46 invalid server_ctx 'int *'
| |-ParmVarDecl 0x213a5574238 <col:58, col:67> col:67 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x213a55742b8 <line:308:37, col:46> col:46 invalid client_ctx 'int *'
| |-ParmVarDecl 0x213a5574330 <line:309:37, col:57> col:57 used test 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x213a5574408 <line:310:37, col:64> col:64 used extra 'const SSL_TEST_EXTRA_CONF *'
| |-ParmVarDecl 0x213a5574480 <line:311:37, col:47> col:47 used server_ctx_data 'CTX_DATA *'
| |-ParmVarDecl 0x213a55744f8 <line:312:37, col:47> col:47 used server2_ctx_data 'CTX_DATA *'
| |-ParmVarDecl 0x213a5574570 <line:313:37, col:47> col:47 used client_ctx_data 'CTX_DATA *'
| `-CompoundStmt 0x213a557d030 <line:314:1, line:449:1>
|   |-DeclStmt 0x213a5574890 <line:315:5, col:31>
|   | `-VarDecl 0x213a5574828 <col:5, col:20> col:20 used ticket_keys 'unsigned char *'
|   |-DeclStmt 0x213a5574920 <line:316:5, col:26>
|   | `-VarDecl 0x213a55748b8 <col:5, col:12> col:12 used ticket_key_len 'size_t':'unsigned long long'
|   |-DoStmt 0x213a5574cc0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5574c80 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5574c68 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a5574c50 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a5574c38 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5574c10 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5574bf8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5574b10 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5574be0 <col:28, <scratch space>:300:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5574bc8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5574b68 <col:1> 'char [72]' lvalue "SSL_CTX_set_max_send_fragment(server_ctx, test->max_fragment_size) == 1"
|   | `-IntegerLiteral 0x213a5574c98 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5574ce0 <.//openssl//file_jk/after\test\handshake_helper.c:319:76>
|   |-IfStmt 0x213a5575050 <line:320:5, line:323:5>
|   | |-OpaqueValueExpr 0x213a5575038 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x213a5575018 <line:320:30, line:323:5>
|   |   |-DoStmt 0x213a5574ff0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x213a5574fb0 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x213a5574f98 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x213a5574f80 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x213a5574f68 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x213a5574f40 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x213a5574f28 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x213a5574e40 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x213a5574f10 <col:28, <scratch space>:2:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x213a5574ef8 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x213a5574e98 <col:1> 'char [73]' lvalue "SSL_CTX_set_max_send_fragment(server2_ctx, test->max_fragment_size) == 1"
|   |   | `-IntegerLiteral 0x213a5574fc8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x213a5575010 <.//openssl//file_jk/after\test\handshake_helper.c:322:80>
|   |-DoStmt 0x213a5579300 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a55792c0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a55792a8 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a5579290 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a5579278 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5579250 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5579238 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5579188 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5579220 <col:28, <scratch space>:3:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5579208 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a55791a8 <col:1> 'char [72]' lvalue "SSL_CTX_set_max_send_fragment(client_ctx, test->max_fragment_size) == 1"
|   | `-IntegerLiteral 0x213a55792d8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5579320 <.//openssl//file_jk/after\test\handshake_helper.c:325:76>
|   |-SwitchStmt 0x213a5579408 <line:327:5, line:338:5>
|   | |-ImplicitCastExpr 0x213a55793f0 <line:327:13, col:27> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x213a55793d8 <col:13, col:27> 'ssl_verify_callback_t':'ssl_verify_callback_t' <LValueToRValue>
|   | |   `-MemberExpr 0x213a55793a8 <col:13, col:27> 'const ssl_verify_callback_t':'const ssl_verify_callback_t' lvalue .verify_callback 0x213a55c8490
|   | |     `-MemberExpr 0x213a5579378 <col:13, col:20> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x213a55c8d00
|   | |       `-ImplicitCastExpr 0x213a5579360 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x213a5579328 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x213a5579770 <col:44, line:338:5>
|   |   |-CaseStmt 0x213a5579460 <line:328:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x213a5579448 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x213a5579428 <col:10> 'int' EnumConstant 0x213a55c2c98 'SSL_TEST_VERIFY_ACCEPT_ALL' 'int'
|   |   | `-NullStmt 0x213a5579620 <<invalid sloc>>
|   |   |-BreakStmt 0x213a5579628 <line:331:9>
|   |   |-CaseStmt 0x213a5579668 <line:332:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x213a5579650 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x213a5579630 <col:10> 'int' EnumConstant 0x213a55c2cf0 'SSL_TEST_VERIFY_REJECT_ALL' 'int'
|   |   | `-NullStmt 0x213a5579738 <<invalid sloc>>
|   |   |-BreakStmt 0x213a5579740 <line:335:9>
|   |   `-DefaultStmt 0x213a5579750 <line:336:5, line:337:9>
|   |     `-BreakStmt 0x213a5579748 <col:9>
|   |-SwitchStmt 0x213a5579870 <line:341:5, line:352:5>
|   | |-ImplicitCastExpr 0x213a5579858 <line:341:13, col:27> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x213a5579840 <col:13, col:27> 'ssl_servername_callback_t':'ssl_servername_callback_t' <LValueToRValue>
|   | |   `-MemberExpr 0x213a5579810 <col:13, col:27> 'const ssl_servername_callback_t':'const ssl_servername_callback_t' lvalue .servername_callback 0x213a55c8910
|   | |     `-MemberExpr 0x213a55797e0 <col:13, col:20> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x213a55c8d90
|   | |       `-ImplicitCastExpr 0x213a55797c8 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x213a55797a8 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x213a5579bf8 <col:48, line:352:5>
|   |   |-CaseStmt 0x213a55798c8 <line:342:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x213a55798b0 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x213a5579890 <col:10> 'int' EnumConstant 0x213a55c32e8 'SSL_TEST_SERVERNAME_IGNORE_MISMATCH' 'int'
|   |   | `-NullStmt 0x213a5579a00 <<invalid sloc>>
|   |   |-BreakStmt 0x213a5579b18 <line:345:9>
|   |   |-CaseStmt 0x213a5579b58 <line:346:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x213a5579b40 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x213a5579b20 <col:10> 'int' EnumConstant 0x213a55c3340 'SSL_TEST_SERVERNAME_REJECT_MISMATCH' 'int'
|   |   | `-NullStmt 0x213a5579ba0 <<invalid sloc>>
|   |   |-BreakStmt 0x213a5579bc8 <line:349:9>
|   |   `-DefaultStmt 0x213a5579bd8 <line:350:5, line:351:9>
|   |     `-BreakStmt 0x213a5579bd0 <col:9>
|   |-IfStmt 0x213a557a400 <line:354:5, line:362:5>
|   | |-BinaryOperator 0x213a5579d18 <line:354:9, col:38> 'int' '!='
|   | | |-ImplicitCastExpr 0x213a5579d00 <col:9, col:23> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x213a5579ce8 <col:9, col:23> 'ssl_cert_status_t':'ssl_cert_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x213a5579c98 <col:9, col:23> 'const ssl_cert_status_t':'const ssl_cert_status_t' lvalue .cert_status 0x213a55c8af0
|   | | |     `-MemberExpr 0x213a5579c68 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x213a55c8d90
|   | | |       `-ImplicitCastExpr 0x213a5579c50 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x213a5579c30 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-DeclRefExpr 0x213a5579cc8 <col:38> 'int' EnumConstant 0x213a55c81d0 'SSL_TEST_CERT_STATUS_NONE' 'int'
|   | `-CompoundStmt 0x213a557a3f0 <col:65, line:362:5>
|   |-IfStmt 0x213a557a690 <line:373:5, line:375:5>
|   | |-ImplicitCastExpr 0x213a557a648 <line:373:9, col:23> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x213a557a618 <col:9, col:23> 'const int' lvalue .broken_session_ticket 0x213a55c8a60
|   | |   `-MemberExpr 0x213a557a5e8 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x213a55c8d90
|   | |     `-ImplicitCastExpr 0x213a557a5d0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x213a557a5b0 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x213a557a680 <col:46, line:375:5>
|   |-IfStmt 0x213a557ac10 <line:377:5, line:383:5>
|   | |-BinaryOperator 0x213a557a7f8 <line:377:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x213a557a7c8 <.//openssl//file_jk/after\test\handshake_helper.c:377:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x213a557a710 <col:9, col:23> 'char *const' lvalue .npn_protocols 0x213a55c8980
|   | | |   `-MemberExpr 0x213a557a6e0 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x213a55c8d90
|   | | |     `-ImplicitCastExpr 0x213a557a6c8 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x213a557a6a8 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x213a557a7e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x213a557a7a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x213a557a780 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x213a557a740 <col:26> 'int' 0
|   | `-CompoundStmt 0x213a557abf8 <.//openssl//file_jk/after\test\handshake_helper.c:377:46, line:383:5>
|   |   `-CallExpr 0x213a557aa60 <line:378:9, line:380:57> 'void'
|   |     |-ImplicitCastExpr 0x213a557aa48 <line:378:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a557a818 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x213a556b388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x213a557aab0 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x213a557aa98 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x213a557a8a0 <col:22, col:36> 'char *const' lvalue .npn_protocols 0x213a55c8980
|   |     |     `-MemberExpr 0x213a557a870 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x213a55c8d90
|   |     |       `-ImplicitCastExpr 0x213a557a858 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x213a557a838 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x213a557a950 <line:379:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x213a557a920 <col:23, col:40> 'unsigned char *' lvalue ->npn_protocols 0x213a5567a80
|   |     |   `-ImplicitCastExpr 0x213a557a908 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x213a557a8d0 <col:23> 'CTX_DATA *' lvalue ParmVar 0x213a5574480 'server_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x213a557a9d0 <line:380:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x213a557a9a0 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x213a5567ae8
|   |         `-ImplicitCastExpr 0x213a557a988 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x213a557a968 <col:23> 'CTX_DATA *' lvalue ParmVar 0x213a5574480 'server_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x213a5576268 <line:384:5, line:391:5>
|   | |-BinaryOperator 0x213a557ad78 <line:384:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x213a557ad48 <.//openssl//file_jk/after\test\handshake_helper.c:384:9, col:24> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x213a557ac90 <col:9, col:24> 'char *const' lvalue .npn_protocols 0x213a55c8980
|   | | |   `-MemberExpr 0x213a557ac60 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x213a55c8df8
|   | | |     `-ImplicitCastExpr 0x213a557ac48 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x213a557ac28 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x213a557ad60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x213a557ad28 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x213a557ad00 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x213a557acc0 <col:26> 'int' 0
|   | `-CompoundStmt 0x213a5576240 <.//openssl//file_jk/after\test\handshake_helper.c:384:47, line:391:5>
|   |   |-CallExpr 0x213a557af80 <line:385:9, line:387:58> 'void'
|   |   | |-ImplicitCastExpr 0x213a557af68 <line:385:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x213a557ad98 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x213a556b388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |   | |-ImplicitCastExpr 0x213a557afd0 <col:22, col:37> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x213a557afb8 <col:22, col:37> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x213a557ae20 <col:22, col:37> 'char *const' lvalue .npn_protocols 0x213a55c8980
|   |   | |     `-MemberExpr 0x213a557adf0 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x213a55c8df8
|   |   | |       `-ImplicitCastExpr 0x213a557add8 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x213a557adb8 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |   | |-UnaryOperator 0x213a557aed0 <line:386:22, col:41> 'unsigned char **' prefix '&' cannot overflow
|   |   | | `-MemberExpr 0x213a557aea0 <col:23, col:41> 'unsigned char *' lvalue ->npn_protocols 0x213a5567a80
|   |   | |   `-ImplicitCastExpr 0x213a557ae88 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x213a557ae50 <col:23> 'CTX_DATA *' lvalue ParmVar 0x213a55744f8 'server2_ctx_data' 'CTX_DATA *'
|   |   | `-UnaryOperator 0x213a557af50 <line:387:22, col:41> 'size_t *' prefix '&' cannot overflow
|   |   |   `-MemberExpr 0x213a557af20 <col:23, col:41> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x213a5567ae8
|   |   |     `-ImplicitCastExpr 0x213a557af08 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x213a557aee8 <col:23> 'CTX_DATA *' lvalue ParmVar 0x213a55744f8 'server2_ctx_data' 'CTX_DATA *'
|   |   |-DoStmt 0x213a55761d8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x213a5576198 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x213a5576180 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x213a5576168 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x213a5576150 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x213a5576128 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x213a5576110 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x213a557b090 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x213a55760f8 <col:28, <scratch space>:4:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x213a55760e0 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x213a557b0e8 <col:1> 'char [20]' lvalue "server2_ctx != NULL"
|   |   | `-IntegerLiteral 0x213a55761b0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x213a55761f8 <.//openssl//file_jk/after\test\handshake_helper.c:388:40>
|   |-IfStmt 0x213a5576788 <line:392:5, line:398:5>
|   | |-BinaryOperator 0x213a55763d0 <line:392:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x213a55763a0 <.//openssl//file_jk/after\test\handshake_helper.c:392:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x213a55762e8 <col:9, col:23> 'char *const' lvalue .npn_protocols 0x213a55c8590
|   | | |   `-MemberExpr 0x213a55762b8 <col:9, col:16> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x213a55c8d00
|   | | |     `-ImplicitCastExpr 0x213a55762a0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x213a5576280 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x213a55763b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x213a5576380 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x213a5576358 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x213a5576318 <col:26> 'int' 0
|   | `-CompoundStmt 0x213a5576770 <.//openssl//file_jk/after\test\handshake_helper.c:392:46, line:398:5>
|   |   `-CallExpr 0x213a55765d8 <line:393:9, line:395:57> 'void'
|   |     |-ImplicitCastExpr 0x213a55765c0 <line:393:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a55763f0 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x213a556b388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x213a5576628 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x213a5576610 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x213a5576478 <col:22, col:36> 'char *const' lvalue .npn_protocols 0x213a55c8590
|   |     |     `-MemberExpr 0x213a5576448 <col:22, col:29> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x213a55c8d00
|   |     |       `-ImplicitCastExpr 0x213a5576430 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x213a5576410 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x213a5576528 <line:394:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x213a55764f8 <col:23, col:40> 'unsigned char *' lvalue ->npn_protocols 0x213a5567a80
|   |     |   `-ImplicitCastExpr 0x213a55764e0 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x213a55764a8 <col:23> 'CTX_DATA *' lvalue ParmVar 0x213a5574570 'client_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x213a55765a8 <line:395:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x213a5576578 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x213a5567ae8
|   |         `-ImplicitCastExpr 0x213a5576560 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x213a5576540 <col:23> 'CTX_DATA *' lvalue ParmVar 0x213a5574570 'client_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x213a5576c90 <line:400:5, line:405:5>
|   | |-BinaryOperator 0x213a55768f0 <line:400:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x213a55768c0 <.//openssl//file_jk/after\test\handshake_helper.c:400:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x213a5576808 <col:9, col:23> 'char *const' lvalue .alpn_protocols 0x213a55c89f0
|   | | |   `-MemberExpr 0x213a55767d8 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x213a55c8d90
|   | | |     `-ImplicitCastExpr 0x213a55767c0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x213a55767a0 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x213a55768d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x213a55768a0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x213a5576878 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x213a5576838 <col:26> 'int' 0
|   | `-CompoundStmt 0x213a5576c78 <.//openssl//file_jk/after\test\handshake_helper.c:400:47, line:405:5>
|   |   `-CallExpr 0x213a5576ae0 <line:401:9, line:403:58> 'void'
|   |     |-ImplicitCastExpr 0x213a5576ac8 <line:401:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a5576910 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x213a556b388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x213a5576b30 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x213a5576b18 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x213a5576998 <col:22, col:36> 'char *const' lvalue .alpn_protocols 0x213a55c89f0
|   |     |     `-MemberExpr 0x213a5576968 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x213a55c8d90
|   |     |       `-ImplicitCastExpr 0x213a5576950 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x213a5576930 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x213a5576a30 <line:402:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x213a5576a00 <col:23, col:40> 'unsigned char *' lvalue ->alpn_protocols 0x213a5567b58
|   |     |   `-ImplicitCastExpr 0x213a55769e8 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x213a55769c8 <col:23> 'CTX_DATA *' lvalue ParmVar 0x213a5574480 'server_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x213a5576ab0 <line:403:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x213a5576a80 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x213a5567bc0
|   |         `-ImplicitCastExpr 0x213a5576a68 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x213a5576a48 <col:23> 'CTX_DATA *' lvalue ParmVar 0x213a5574480 'server_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x213a5577308 <line:406:5, line:412:5>
|   | |-BinaryOperator 0x213a5576df8 <line:406:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x213a5576dc8 <.//openssl//file_jk/after\test\handshake_helper.c:406:9, col:24> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x213a5576d10 <col:9, col:24> 'char *const' lvalue .alpn_protocols 0x213a55c89f0
|   | | |   `-MemberExpr 0x213a5576ce0 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x213a55c8df8
|   | | |     `-ImplicitCastExpr 0x213a5576cc8 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x213a5576ca8 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x213a5576de0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x213a5576da8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x213a5576d80 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x213a5576d40 <col:26> 'int' 0
|   | `-CompoundStmt 0x213a55772e0 <.//openssl//file_jk/after\test\handshake_helper.c:406:48, line:412:5>
|   |   |-DoStmt 0x213a5577008 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x213a5576fc8 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x213a5576fb0 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x213a5576f98 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x213a5576f80 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x213a5576f58 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x213a5576f40 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x213a5576ec0 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x213a5576f28 <col:28, <scratch space>:5:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x213a5576f10 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x213a5576ee0 <col:1> 'char [20]' lvalue "server2_ctx != NULL"
|   |   | `-IntegerLiteral 0x213a5576fe0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x213a5577028 <.//openssl//file_jk/after\test\handshake_helper.c:407:40>
|   |   `-CallExpr 0x213a5577238 <line:408:9, line:410:59> 'void'
|   |     |-ImplicitCastExpr 0x213a5577220 <line:408:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a5577030 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x213a556b388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x213a5577288 <col:22, col:37> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x213a5577270 <col:22, col:37> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x213a55770f0 <col:22, col:37> 'char *const' lvalue .alpn_protocols 0x213a55c89f0
|   |     |     `-MemberExpr 0x213a5577088 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x213a55c8df8
|   |     |       `-ImplicitCastExpr 0x213a5577070 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x213a5577050 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x213a5577188 <line:409:22, col:41> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x213a5577158 <col:23, col:41> 'unsigned char *' lvalue ->alpn_protocols 0x213a5567b58
|   |     |   `-ImplicitCastExpr 0x213a5577140 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x213a5577120 <col:23> 'CTX_DATA *' lvalue ParmVar 0x213a55744f8 'server2_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x213a5577208 <line:410:22, col:41> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x213a55771d8 <col:23, col:41> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x213a5567bc0
|   |         `-ImplicitCastExpr 0x213a55771c0 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x213a55771a0 <col:23> 'CTX_DATA *' lvalue ParmVar 0x213a55744f8 'server2_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x213a5577c80 <line:413:5, line:422:5>
|   | |-BinaryOperator 0x213a5577470 <line:413:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x213a5577440 <.//openssl//file_jk/after\test\handshake_helper.c:413:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x213a5577388 <col:9, col:23> 'char *const' lvalue .alpn_protocols 0x213a55c8600
|   | | |   `-MemberExpr 0x213a5577358 <col:9, col:16> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x213a55c8d00
|   | | |     `-ImplicitCastExpr 0x213a5577340 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x213a5577320 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x213a5577458 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x213a5577420 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x213a55773f8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x213a55773b8 <col:26> 'int' 0
|   | `-CompoundStmt 0x213a5577c40 <.//openssl//file_jk/after\test\handshake_helper.c:413:47, line:422:5>
|   |   |-DeclStmt 0x213a55775b0 <line:414:9, col:42>
|   |   | `-VarDecl 0x213a55774a8 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\test\handshake_helper.c:414:24 used alpn_protos 'unsigned char *' cinit
|   |   |   `-ImplicitCastExpr 0x213a5577598 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |   |     `-ParenExpr 0x213a5577578 <col:17, col:27> 'void *'
|   |   |       `-CStyleCastExpr 0x213a5577550 <col:18, col:26> 'void *' <NullToPointer>
|   |   |         `-IntegerLiteral 0x213a5577510 <col:26> 'int' 0
|   |   |-DeclStmt 0x213a5577640 <.//openssl//file_jk/after\test\handshake_helper.c:415:9, col:31>
|   |   | `-VarDecl 0x213a55775d8 <col:9, col:16> col:16 used alpn_protos_len 'size_t':'unsigned long long'
|   |   |-CallExpr 0x213a55777c8 <line:416:9, line:417:52> 'void'
|   |   | |-ImplicitCastExpr 0x213a55777b0 <line:416:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x213a5577658 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x213a556b388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |   | |-ImplicitCastExpr 0x213a5577818 <col:22, col:36> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x213a5577800 <col:22, col:36> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x213a55776e0 <col:22, col:36> 'char *const' lvalue .alpn_protocols 0x213a55c8600
|   |   | |     `-MemberExpr 0x213a55776b0 <col:22, col:29> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x213a55c8d00
|   |   | |       `-ImplicitCastExpr 0x213a5577698 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x213a5577678 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |   | |-UnaryOperator 0x213a5577748 <line:417:22, col:23> 'unsigned char **' prefix '&' cannot overflow
|   |   | | `-DeclRefExpr 0x213a5577710 <col:23> 'unsigned char *' lvalue Var 0x213a55774a8 'alpn_protos' 'unsigned char *'
|   |   | `-UnaryOperator 0x213a5577798 <col:36, col:37> 'size_t *' prefix '&' cannot overflow
|   |   |   `-DeclRefExpr 0x213a5577760 <col:37> 'size_t':'unsigned long long' lvalue Var 0x213a55775d8 'alpn_protos_len' 'size_t':'unsigned long long'
|   |   |-DoStmt 0x213a5577b80 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x213a5577b40 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x213a5577b28 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x213a5577b10 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x213a5577af8 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x213a5577ad0 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x213a5577ab8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x213a55779c8 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x213a5577aa0 <col:28, <scratch space>:6:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x213a5577a88 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x213a5577a28 <col:1> 'char [71]' lvalue "SSL_CTX_set_alpn_protos(client_ctx, alpn_protos, alpn_protos_len) == 0"
|   |   | `-IntegerLiteral 0x213a5577b58 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x213a5577ba0 <.//openssl//file_jk/after\test\handshake_helper.c:420:66>
|   |   `-CallExpr 0x213a5577c00 <line:421:9, col:33> 'int'
|   |     |-ImplicitCastExpr 0x213a5577be8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a5577ba8 <col:9> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x213a5577c28 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5577bc8 <col:22> 'unsigned char *' lvalue Var 0x213a55774a8 'alpn_protos' 'unsigned char *'
|   |-BinaryOperator 0x213a5577f78 <line:429:5, col:48> 'unsigned char *' '='
|   | |-DeclRefExpr 0x213a5577e90 <col:5> 'unsigned char *' lvalue Var 0x213a5574828 'ticket_keys' 'unsigned char *'
|   | `-ImplicitCastExpr 0x213a5577f60 <col:19, col:48> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x213a5577f20 <col:19, col:48> 'int'
|   |     |-ImplicitCastExpr 0x213a5577f08 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a5577ec8 <col:19> 'int ()' Function 0x213a55686c8 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x213a5577f48 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5577ee8 <col:34> 'size_t':'unsigned long long' lvalue Var 0x213a55748b8 'ticket_key_len' 'size_t':'unsigned long long'
|   |-DoStmt 0x213a557c270 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a557c230 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a557c218 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a55780b0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a5578090 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a5578070 <.//openssl//file_jk/after\test\handshake_helper.c:430:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x213a5578040 <.//openssl//file_jk/after\test\handshake_helper.c:430:16> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x213a5577f98 <col:16> 'unsigned char *' lvalue Var 0x213a5574828 'ticket_keys' 'unsigned char *'
|   | |   |     `-ImplicitCastExpr 0x213a5578058 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x213a5578020 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x213a5577ff8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x213a5577fb8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x213a557c200 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a557c1d8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a557c1c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a557c140 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a557c1a8 <col:28, <scratch space>:7:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a557c190 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a557c160 <col:1> 'char [20]' lvalue "ticket_keys != NULL"
|   | `-IntegerLiteral 0x213a557c248 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a557c290 <.//openssl//file_jk/after\test\handshake_helper.c:430:36>
|   |-DoStmt 0x213a557c4f8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a557c4b8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a557c4a0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a557c488 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a557c470 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a557c448 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a557c430 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a557c340 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a557c418 <col:28, <scratch space>:8:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a557c400 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a557c398 <col:1> 'char [77]' lvalue "SSL_CTX_set_tlsext_ticket_keys(server_ctx, ticket_keys, ticket_key_len) == 1"
|   | `-IntegerLiteral 0x213a557c4d0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a557c518 <.//openssl//file_jk/after\test\handshake_helper.c:432:68>
|   |-CallExpr 0x213a557c578 <line:433:5, col:29> 'int'
|   | |-ImplicitCastExpr 0x213a557c560 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a557c520 <col:5> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x213a557c5a0 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x213a557c540 <col:18> 'unsigned char *' lvalue Var 0x213a5574828 'ticket_keys' 'unsigned char *'
|   |-DoStmt 0x213a557c888 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a557c848 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a557c830 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a557c818 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a557c800 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a557c7d8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a557c7c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a557c6e8 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a557c7a8 <col:28, <scratch space>:9:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a557c790 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a557c748 <col:1> 'char [48]' lvalue "SSL_CTX_set_default_ctlog_list_file(client_ctx)"
|   | `-IntegerLiteral 0x213a557c860 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a557c8a8 <.//openssl//file_jk/after\test\handshake_helper.c:437:64>
|   `-SwitchStmt 0x213a557c978 <line:438:5, line:447:5>
|     |-ImplicitCastExpr 0x213a557c960 <line:438:13, col:27> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x213a557c948 <col:13, col:27> 'ssl_ct_validation_t':'ssl_ct_validation_t' <LValueToRValue>
|     |   `-MemberExpr 0x213a557c918 <col:13, col:27> 'const ssl_ct_validation_t':'const ssl_ct_validation_t' lvalue .ct_validation 0x213a55c8690
|     |     `-MemberExpr 0x213a557c8e8 <col:13, col:20> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x213a55c8d00
|     |       `-ImplicitCastExpr 0x213a557c8d0 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|     |         `-DeclRefExpr 0x213a557c8b0 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x213a5574408 'extra' 'const SSL_TEST_EXTRA_CONF *'
|     `-CompoundStmt 0x213a557cfe8 <col:42, line:447:5>
|       |-CaseStmt 0x213a557c9d0 <line:439:5, .//openssl//file_jk/after\test/testutil.h:111:15>
|       | |-ConstantExpr 0x213a557c9b8 <.//openssl//file_jk/after\test\handshake_helper.c:439:10> 'int'
|       | | `-DeclRefExpr 0x213a557c998 <col:10> 'int' EnumConstant 0x213a55c3ee8 'SSL_TEST_CT_VALIDATION_PERMISSIVE' 'int'
|       | `-DoStmt 0x213a557ccd8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|       |   |-CompoundStmt 0x213a557cc98 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x213a557cc80 <line:107:9, line:110:9>
|       |   |   |-OpaqueValueExpr 0x213a557cc68 <<invalid sloc>> '_Bool'
|       |   |   `-CompoundStmt 0x213a557cc50 <line:107:27, line:110:9>
|       |   |     `-CallExpr 0x213a557cc28 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x213a557cc10 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x213a557cb28 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x213a557cbf8 <col:28, <scratch space>:10:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x213a557cbe0 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x213a557cb88 <col:1> 'char [60]' lvalue "SSL_CTX_enable_ct(client_ctx, SSL_CT_VALIDATION_PERMISSIVE)"
|       |   `-IntegerLiteral 0x213a557ccb0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|       |-NullStmt 0x213a557ccf8 <.//openssl//file_jk/after\test\handshake_helper.c:440:80>
|       |-BreakStmt 0x213a557cd00 <line:441:9>
|       |-CaseStmt 0x213a557cd40 <line:442:5, .//openssl//file_jk/after\test/testutil.h:111:15>
|       | |-ConstantExpr 0x213a557cd28 <.//openssl//file_jk/after\test\handshake_helper.c:442:10> 'int'
|       | | `-DeclRefExpr 0x213a557cd08 <col:10> 'int' EnumConstant 0x213a55c3f40 'SSL_TEST_CT_VALIDATION_STRICT' 'int'
|       | `-DoStmt 0x213a557cf50 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|       |   |-CompoundStmt 0x213a557cf10 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x213a557cef8 <line:107:9, line:110:9>
|       |   |   |-OpaqueValueExpr 0x213a557cee0 <<invalid sloc>> '_Bool'
|       |   |   `-CompoundStmt 0x213a557cec8 <line:107:27, line:110:9>
|       |   |     `-CallExpr 0x213a557cea0 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x213a557ce88 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x213a557cda8 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x213a557ce70 <col:28, <scratch space>:11:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x213a557ce58 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x213a557ce08 <col:1> 'char [56]' lvalue "SSL_CTX_enable_ct(client_ctx, SSL_CT_VALIDATION_STRICT)"
|       |   `-IntegerLiteral 0x213a557cf28 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|       |-NullStmt 0x213a557cf70 <.//openssl//file_jk/after\test\handshake_helper.c:443:76>
|       |-BreakStmt 0x213a557cf78 <line:444:9>
|       `-CaseStmt 0x213a557cfb8 <line:445:5, line:446:9>
|         |-ConstantExpr 0x213a557cfa0 <line:445:10> 'int'
|         | `-DeclRefExpr 0x213a557cf80 <col:10> 'int' EnumConstant 0x213a55c3e90 'SSL_TEST_CT_VALIDATION_NONE' 'int'
|         `-BreakStmt 0x213a557cfe0 <line:446:9>
|-FunctionDecl 0x213a557d368 <line:452:1, line:458:1> line:452:13 invalid configure_handshake_ssl 'void (int *, int *, const SSL_TEST_EXTRA_CONF *)' static
| |-ParmVarDecl 0x213a557d150 <col:37, col:42> col:42 invalid server 'int *'
| |-ParmVarDecl 0x213a557d1d0 <col:50, col:55> col:55 invalid client 'int *'
| |-ParmVarDecl 0x213a557d248 <line:453:37, col:64> col:64 used extra 'const SSL_TEST_EXTRA_CONF *'
| `-CompoundStmt 0x213a557d7d0 <line:454:1, line:458:1>
|-EnumDecl 0x213a557d7e0 <line:461:9, line:465:1> line:461:9
| |-EnumConstantDecl 0x213a557d8c0 <line:462:5> col:5 referenced PEER_SUCCESS 'int'
| |-EnumConstantDecl 0x213a557d918 <line:463:5> col:5 referenced PEER_RETRY 'int'
| `-EnumConstantDecl 0x213a557d970 <line:464:5> col:5 referenced PEER_ERROR 'int'
|-TypedefDecl 0x213a557da28 <line:461:1, line:465:3> col:3 referenced peer_status_t 'enum peer_status_t':'peer_status_t'
| `-ElaboratedType 0x213a557d9d0 'enum peer_status_t' sugar
|   `-EnumType 0x213a557d8a0 'peer_status_t'
|     `-Enum 0x213a557d7e0 ''
|-RecordDecl 0x213a557da98 <line:468:9, line:478:1> line:468:16 invalid struct peer_st definition
| |-FieldDecl 0x213a557db68 <line:469:5, col:10> col:10 invalid ssl 'int *'
| |-FieldDecl 0x213a557dbd8 <line:471:5, col:20> col:20 referenced write_buf 'unsigned char *'
| |-FieldDecl 0x213a557dc48 <line:472:5, col:9> col:9 referenced write_buf_len 'int'
| |-FieldDecl 0x213a557dcb8 <line:473:5, col:20> col:20 referenced read_buf 'unsigned char *'
| |-FieldDecl 0x213a557dd28 <line:474:5, col:9> col:9 referenced read_buf_len 'int'
| |-FieldDecl 0x213a557dd98 <line:475:5, col:9> col:9 referenced bytes_to_write 'int'
| |-FieldDecl 0x213a557de08 <line:476:5, col:9> col:9 referenced bytes_to_read 'int'
| `-FieldDecl 0x213a557de90 <line:477:5, col:19> col:19 referenced status 'peer_status_t':'peer_status_t'
|-TypedefDecl 0x213a557df48 <line:468:1, line:478:3> col:3 referenced PEER 'struct peer_st':'struct peer_st'
| `-ElaboratedType 0x213a557def0 'struct peer_st' sugar
|   `-RecordType 0x213a557db30 'struct peer_st'
|     `-Record 0x213a557da98 'peer_st'
|-FunctionDecl 0x213a557e208 <line:480:1, line:491:1> line:480:13 invalid create_peer 'void (PEER *, int *)' static
| |-ParmVarDecl 0x213a557e048 <col:25, col:31> col:31 used peer 'PEER *'
| |-ParmVarDecl 0x213a557e0c8 <col:37, col:46> col:46 invalid ctx 'int *'
| `-CompoundStmt 0x213a557b220 <line:481:1, line:491:1>
|   |-DeclStmt 0x213a557e3c0 <line:482:5, col:50>
|   | `-VarDecl 0x213a557e2e8 <col:5, col:46> col:22 used peer_buffer_size 'const int' static cinit
|   |   `-BinaryOperator 0x213a557e3a0 <col:41, col:46> 'int' '*'
|   |     |-IntegerLiteral 0x213a557e350 <col:41> 'int' 64
|   |     `-IntegerLiteral 0x213a557e378 <col:46> 'int' 1024
|   |-DoStmt 0x213a557e7a0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a557e760 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a557e748 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a557e730 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a557e718 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a557e6f0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a557e6d8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a557e618 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a557e6c0 <col:28, <scratch space>:12:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a557e6a8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a557e678 <col:1> 'char [18]' lvalue "peer->ssl != NULL"
|   | `-IntegerLiteral 0x213a557e778 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a557e7c0 <.//openssl//file_jk/after\test\handshake_helper.c:485:34>
|   |-BinaryOperator 0x213a557e8f8 <line:486:5, col:54> 'unsigned char *' '='
|   | |-MemberExpr 0x213a557e800 <col:5, col:11> 'unsigned char *' lvalue ->write_buf 0x213a557dbd8
|   | | `-ImplicitCastExpr 0x213a557e7e8 <col:5> 'PEER *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a557e7c8 <col:5> 'PEER *' lvalue ParmVar 0x213a557e048 'peer' 'PEER *'
|   | `-ImplicitCastExpr 0x213a557e8e0 <col:23, col:54> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x213a557e8a0 <col:23, col:54> 'int'
|   |     |-ImplicitCastExpr 0x213a557e888 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a557e830 <col:23> 'int ()' Function 0x213a55686c8 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x213a557e8c8 <col:38> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a557e850 <col:38> 'const int' lvalue Var 0x213a557e2e8 'peer_buffer_size' 'const int'
|   |-DoStmt 0x213a557ec18 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a557ebd8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a557ebc0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a557ea78 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a557ea58 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a557ea38 <.//openssl//file_jk/after\test\handshake_helper.c:487:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x213a557ea08 <.//openssl//file_jk/after\test\handshake_helper.c:487:16, col:22> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x213a557e950 <col:16, col:22> 'unsigned char *' lvalue ->write_buf 0x213a557dbd8
|   | |   |     |   `-ImplicitCastExpr 0x213a557e938 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x213a557e918 <col:16> 'PEER *' lvalue ParmVar 0x213a557e048 'peer' 'PEER *'
|   | |   |     `-ImplicitCastExpr 0x213a557ea20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x213a557e9e8 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x213a557e9c0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x213a557e980 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x213a557eba8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a557eb80 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a557eb68 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a557eab0 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a557eb50 <col:28, <scratch space>:13:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a557eb38 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a557eb08 <col:1> 'char [24]' lvalue "peer->write_buf != NULL"
|   | `-IntegerLiteral 0x213a557ebf0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a557ec38 <.//openssl//file_jk/after\test\handshake_helper.c:487:40>
|   |-BinaryOperator 0x213a557ed58 <line:488:5, col:53> 'unsigned char *' '='
|   | |-MemberExpr 0x213a557ec78 <col:5, col:11> 'unsigned char *' lvalue ->read_buf 0x213a557dcb8
|   | | `-ImplicitCastExpr 0x213a557ec60 <col:5> 'PEER *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a557ec40 <col:5> 'PEER *' lvalue ParmVar 0x213a557e048 'peer' 'PEER *'
|   | `-ImplicitCastExpr 0x213a557ed40 <col:22, col:53> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x213a557ed00 <col:22, col:53> 'int'
|   |     |-ImplicitCastExpr 0x213a557ece8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a557eca8 <col:22> 'int ()' Function 0x213a55686c8 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x213a557ed28 <col:37> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a557ecc8 <col:37> 'const int' lvalue Var 0x213a557e2e8 'peer_buffer_size' 'const int'
|   |-DoStmt 0x213a557f078 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a557f038 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a557f020 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a557eed8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a557eeb8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a557ee98 <.//openssl//file_jk/after\test\handshake_helper.c:489:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x213a557ee68 <.//openssl//file_jk/after\test\handshake_helper.c:489:16, col:22> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x213a557edb0 <col:16, col:22> 'unsigned char *' lvalue ->read_buf 0x213a557dcb8
|   | |   |     |   `-ImplicitCastExpr 0x213a557ed98 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x213a557ed78 <col:16> 'PEER *' lvalue ParmVar 0x213a557e048 'peer' 'PEER *'
|   | |   |     `-ImplicitCastExpr 0x213a557ee80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x213a557ee48 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x213a557ee20 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x213a557ede0 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x213a557f008 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a557efe0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a557efc8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a557ef10 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a557efb0 <col:28, <scratch space>:14:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a557ef98 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a557ef68 <col:1> 'char [23]' lvalue "peer->read_buf != NULL"
|   | `-IntegerLiteral 0x213a557f050 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a557f098 <.//openssl//file_jk/after\test\handshake_helper.c:489:39>
|   `-BinaryOperator 0x213a557b1b8 <line:490:5, col:48> 'int' '='
|     |-MemberExpr 0x213a557f0d8 <col:5, col:11> 'int' lvalue ->write_buf_len 0x213a557dc48
|     | `-ImplicitCastExpr 0x213a557f0c0 <col:5> 'PEER *' <LValueToRValue>
|     |   `-DeclRefExpr 0x213a557f0a0 <col:5> 'PEER *' lvalue ParmVar 0x213a557e048 'peer' 'PEER *'
|     `-BinaryOperator 0x213a557b198 <col:27, col:48> 'int' '='
|       |-MemberExpr 0x213a557b130 <col:27, col:33> 'int' lvalue ->read_buf_len 0x213a557dd28
|       | `-ImplicitCastExpr 0x213a557f128 <col:27> 'PEER *' <LValueToRValue>
|       |   `-DeclRefExpr 0x213a557f108 <col:27> 'PEER *' lvalue ParmVar 0x213a557e048 'peer' 'PEER *'
|       `-ImplicitCastExpr 0x213a557b180 <col:48> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x213a557b160 <col:48> 'const int' lvalue Var 0x213a557e2e8 'peer_buffer_size' 'const int'
|-FunctionDecl 0x213a557b398 <line:493:1, line:498:1> line:493:13 used peer_free_data 'void (PEER *)' static
| |-ParmVarDecl 0x213a557b290 <col:28, col:34> col:34 used peer 'PEER *'
| `-CompoundStmt 0x213a557b760 <line:494:1, line:498:1>
|   |-CallExpr 0x213a557b640 <line:496:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x213a557b628 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a557b5a0 <col:5> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x213a557b668 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x213a557b5f8 <col:18, col:24> 'unsigned char *' lvalue ->write_buf 0x213a557dbd8
|   |     `-ImplicitCastExpr 0x213a557b5e0 <col:18> 'PEER *' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a557b5c0 <col:18> 'PEER *' lvalue ParmVar 0x213a557b290 'peer' 'PEER *'
|   `-CallExpr 0x213a557b720 <line:497:5, col:32> 'int'
|     |-ImplicitCastExpr 0x213a557b708 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x213a557b680 <col:5> 'int ()' Function 0x213a55670b0 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x213a557b748 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|       `-MemberExpr 0x213a557b6d8 <col:18, col:24> 'unsigned char *' lvalue ->read_buf 0x213a557dcb8
|         `-ImplicitCastExpr 0x213a557b6c0 <col:18> 'PEER *' <LValueToRValue>
|           `-DeclRefExpr 0x213a557b6a0 <col:18> 'PEER *' lvalue ParmVar 0x213a557b290 'peer' 'PEER *'
|-FunctionDecl 0x213a557b838 <line:504:1, line:525:1> line:504:13 used do_handshake_step 'void (PEER *)' static
| |-ParmVarDecl 0x213a557b790 <col:31, col:37> col:37 used peer 'PEER *'
| `-CompoundStmt 0x213a557f378 <line:505:1, line:525:1>
|   |-DeclStmt 0x213a557b978 <line:506:5, col:12>
|   | `-VarDecl 0x213a557b910 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x213a557bb58 <line:508:5, line:511:5>
|   | |-BinaryOperator 0x213a557ba48 <line:508:9, col:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x213a557ba30 <col:9, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x213a557ba18 <col:9, col:15> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x213a557b9c8 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   | | |     `-ImplicitCastExpr 0x213a557b9b0 <col:9> 'PEER *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x213a557b990 <col:9> 'PEER *' lvalue ParmVar 0x213a557b790 'peer' 'PEER *'
|   | | `-DeclRefExpr 0x213a557b9f8 <col:25> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   | `-CompoundStmt 0x213a557bb38 <col:37, line:511:5>
|   |   |-BinaryOperator 0x213a557bb08 <line:509:9, col:24> 'peer_status_t':'peer_status_t' '='
|   |   | |-MemberExpr 0x213a557baa0 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |   | | `-ImplicitCastExpr 0x213a557ba88 <col:9> 'PEER *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x213a557ba68 <col:9> 'PEER *' lvalue ParmVar 0x213a557b790 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x213a557baf0 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   `-DeclRefExpr 0x213a557bad0 <col:24> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   |   `-ReturnStmt 0x213a557bb28 <line:510:9>
|   `-IfStmt 0x213a557f350 <line:515:5, line:524:5> has_else
|     |-BinaryOperator 0x213a557bd50 <line:515:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x213a557bd38 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x213a557bcf0 <col:9> 'int' lvalue Var 0x213a557b910 'ret' 'int'
|     | `-IntegerLiteral 0x213a557bd10 <col:16> 'int' 1
|     |-CompoundStmt 0x213a557be30 <col:19, line:517:5>
|     | `-BinaryOperator 0x213a557be10 <line:516:9, col:24> 'peer_status_t':'peer_status_t' '='
|     |   |-MemberExpr 0x213a557bda8 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|     |   | `-ImplicitCastExpr 0x213a557bd90 <col:9> 'PEER *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x213a557bd70 <col:9> 'PEER *' lvalue ParmVar 0x213a557b790 'peer' 'PEER *'
|     |   `-ImplicitCastExpr 0x213a557bdf8 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|     |     `-DeclRefExpr 0x213a557bdd8 <col:24> 'int' EnumConstant 0x213a557d8c0 'PEER_SUCCESS' 'int'
|     `-IfStmt 0x213a557f328 <line:517:12, line:524:5> has_else
|       |-BinaryOperator 0x213a557bea8 <line:517:16, col:23> 'int' '=='
|       | |-ImplicitCastExpr 0x213a557be90 <col:16> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x213a557be48 <col:16> 'int' lvalue Var 0x213a557b910 'ret' 'int'
|       | `-IntegerLiteral 0x213a557be68 <col:23> 'int' 0
|       |-CompoundStmt 0x213a557bf88 <col:26, line:519:5>
|       | `-BinaryOperator 0x213a557bf68 <line:518:9, col:24> 'peer_status_t':'peer_status_t' '='
|       |   |-MemberExpr 0x213a557bf00 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|       |   | `-ImplicitCastExpr 0x213a557bee8 <col:9> 'PEER *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x213a557bec8 <col:9> 'PEER *' lvalue ParmVar 0x213a557b790 'peer' 'PEER *'
|       |   `-ImplicitCastExpr 0x213a557bf50 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|       |     `-DeclRefExpr 0x213a557bf30 <col:24> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|       `-CompoundStmt 0x213a557f308 <line:519:12, line:524:5>
|         |-DeclStmt 0x213a557f1c8 <line:520:9, col:50>
|         | `-VarDecl 0x213a557bfb8 <col:9, col:13> col:13 used error 'int'
|         `-IfStmt 0x213a557f2f0 <line:522:9, line:523:28>
|           |-OpaqueValueExpr 0x213a557f2d8 <<invalid sloc>> '_Bool'
|           `-BinaryOperator 0x213a557f2b8 <col:13, col:28> 'peer_status_t':'peer_status_t' '='
|             |-MemberExpr 0x213a557f250 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|             | `-ImplicitCastExpr 0x213a557f238 <col:13> 'PEER *' <LValueToRValue>
|             |   `-DeclRefExpr 0x213a557f218 <col:13> 'PEER *' lvalue ParmVar 0x213a557b790 'peer' 'PEER *'
|             `-ImplicitCastExpr 0x213a557f2a0 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|               `-DeclRefExpr 0x213a557f280 <col:28> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|-FunctionDecl 0x213a557f458 <line:536:1, line:588:1> line:536:13 used do_app_data_step 'void (PEER *)' static
| |-ParmVarDecl 0x213a557f3b0 <col:30, col:36> col:36 used peer 'PEER *'
| `-CompoundStmt 0x213a55841c0 <line:537:1, line:588:1>
|   |-DeclStmt 0x213a557f658 <line:538:5, col:29>
|   | |-VarDecl 0x213a557f530 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x213a557f598 <col:15> 'int' 1
|   | `-VarDecl 0x213a557f5d8 <col:5, col:18> col:18 used write_bytes 'int'
|   |-DoStmt 0x213a557f910 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a557f8d0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a557f8b8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a557f768 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a557f748 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a557f728 <.//openssl//file_jk/after\test\handshake_helper.c:540:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x213a557f710 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x213a557f6f8 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x213a557f6a8 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   | |   |     |     `-ImplicitCastExpr 0x213a557f690 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x213a557f670 <col:16> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x213a557f6d8 <col:32> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x213a557f8a0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a557f878 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a557f860 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a557f7a0 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a557f848 <col:28, <scratch space>:15:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a557f830 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a557f7f8 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x213a557f8e8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a557f930 <.//openssl//file_jk/after\test\handshake_helper.c:540:43>
|   |-WhileStmt 0x213a55784a8 <line:543:5, line:558:5>
|   | |-BinaryOperator 0x213a557fa50 <line:543:12, col:29> 'int' '&&'
|   | | |-BinaryOperator 0x213a557f9b0 <col:12, col:18> 'int' '>'
|   | | | |-ImplicitCastExpr 0x213a557f998 <col:12> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x213a557f938 <col:12> 'int' lvalue Var 0x213a557f530 'ret' 'int'
|   | | | `-IntegerLiteral 0x213a557f970 <col:18> 'int' 0
|   | | `-ImplicitCastExpr 0x213a557fa38 <col:23, col:29> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x213a557fa08 <col:23, col:29> 'int' lvalue ->bytes_to_read 0x213a557de08
|   | |     `-ImplicitCastExpr 0x213a557f9f0 <col:23> 'PEER *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x213a557f9d0 <col:23> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   | `-CompoundStmt 0x213a5578490 <col:44, line:558:5>
|   |   `-IfStmt 0x213a5578468 <line:545:9, line:557:9> has_else
|   |     |-BinaryOperator 0x213a557fd08 <line:545:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x213a557fcf0 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x213a557fca8 <col:13> 'int' lvalue Var 0x213a557f530 'ret' 'int'
|   |     | `-IntegerLiteral 0x213a557fcc8 <col:19> 'int' 0
|   |     |-CompoundStmt 0x213a5580088 <col:22, line:548:9>
|   |     | |-DoStmt 0x213a557ff90 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |     | | |-CompoundStmt 0x213a557ff50 <line:106:8, line:111:5>
|   |     | | | `-IfStmt 0x213a557ff38 <line:107:9, line:110:9>
|   |     | | |   |-UnaryOperator 0x213a557fe20 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |     | | |   | `-ParenExpr 0x213a557fe00 <col:14, col:24> 'int'
|   |     | | |   |   `-BinaryOperator 0x213a557fde0 <.//openssl//file_jk/after\test\handshake_helper.c:546:24, col:37> 'int' '<='
|   |     | | |   |     |-ImplicitCastExpr 0x213a557fdb0 <col:24> 'int' <LValueToRValue>
|   |     | | |   |     | `-DeclRefExpr 0x213a557fd28 <col:24> 'int' lvalue Var 0x213a557f530 'ret' 'int'
|   |     | | |   |     `-ImplicitCastExpr 0x213a557fdc8 <col:31, col:37> 'int' <LValueToRValue>
|   |     | | |   |       `-MemberExpr 0x213a557fd80 <col:31, col:37> 'int' lvalue ->bytes_to_read 0x213a557de08
|   |     | | |   |         `-ImplicitCastExpr 0x213a557fd68 <col:31> 'PEER *' <LValueToRValue>
|   |     | | |   |           `-DeclRefExpr 0x213a557fd48 <col:31> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   |     | | |   `-CompoundStmt 0x213a557ff20 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   |     | | |     `-CallExpr 0x213a557fef8 <line:109:13, col:39> 'int'
|   |     | | |       |-ImplicitCastExpr 0x213a557fee0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | |       | `-DeclRefExpr 0x213a557fe58 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   |     | | |       `-UnaryOperator 0x213a557fec8 <col:28, <scratch space>:16:1> 'int' prefix '!' cannot overflow
|   |     | | |         `-ImplicitCastExpr 0x213a557feb0 <col:1> 'char *' <ArrayToPointerDecay>
|   |     | | |           `-StringLiteral 0x213a557fe78 <col:1> 'char [27]' lvalue "ret <= peer->bytes_to_read"
|   |     | | `-IntegerLiteral 0x213a557ff68 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |     | |-NullStmt 0x213a557ffb0 <.//openssl//file_jk/after\test\handshake_helper.c:546:51>
|   |     | `-CompoundAssignOperator 0x213a5580058 <line:547:13, col:36> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x213a557fff0 <col:13, col:19> 'int' lvalue ->bytes_to_read 0x213a557de08
|   |     |   | `-ImplicitCastExpr 0x213a557ffd8 <col:13> 'PEER *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x213a557ffb8 <col:13> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   |     |   `-ImplicitCastExpr 0x213a5580040 <col:36> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x213a5580020 <col:36> 'int' lvalue Var 0x213a557f530 'ret' 'int'
|   |     `-IfStmt 0x213a5578440 <line:548:16, line:557:9> has_else
|   |       |-BinaryOperator 0x213a5580110 <line:548:20, col:27> 'int' '=='
|   |       | |-ImplicitCastExpr 0x213a55800f8 <col:20> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x213a55800b0 <col:20> 'int' lvalue Var 0x213a557f530 'ret' 'int'
|   |       | `-IntegerLiteral 0x213a55800d0 <col:27> 'int' 0
|   |       |-CompoundStmt 0x213a5578198 <col:30, line:551:9>
|   |       | |-BinaryOperator 0x213a5578168 <line:549:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |       | | |-MemberExpr 0x213a5578100 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |       | | | `-ImplicitCastExpr 0x213a5580150 <col:13> 'PEER *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x213a5580130 <col:13> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   |       | | `-ImplicitCastExpr 0x213a5578150 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       | |   `-DeclRefExpr 0x213a5578130 <col:28> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   |       | `-ReturnStmt 0x213a5578188 <line:550:13>
|   |       `-CompoundStmt 0x213a5578420 <line:551:16, line:557:9>
|   |         |-DeclStmt 0x213a55782b0 <line:552:13, col:54>
|   |         | `-VarDecl 0x213a55781d0 <col:13, col:17> col:17 used error 'int'
|   |         `-IfStmt 0x213a5578408 <line:553:13, line:556:13>
|   |           |-OpaqueValueExpr 0x213a55783f0 <<invalid sloc>> '_Bool'
|   |           `-CompoundStmt 0x213a55783d0 <line:553:47, line:556:13>
|   |             |-BinaryOperator 0x213a55783a0 <line:554:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |             | |-MemberExpr 0x213a5578338 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |             | | `-ImplicitCastExpr 0x213a5578320 <col:17> 'PEER *' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x213a5578300 <col:17> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   |             | `-ImplicitCastExpr 0x213a5578388 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |             |   `-DeclRefExpr 0x213a5578368 <col:32> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   |             `-ReturnStmt 0x213a55783c0 <line:555:17>
|   |-BinaryOperator 0x213a5578748 <line:561:5, line:562:15> 'int' '='
|   | |-DeclRefExpr 0x213a55784c0 <line:561:5> 'int' lvalue Var 0x213a557f5d8 'write_bytes' 'int'
|   | `-ConditionalOperator 0x213a5578718 <col:19, line:562:15> 'int'
|   |   |-BinaryOperator 0x213a55785f8 <line:561:19, col:48> 'int' '<'
|   |   | |-ImplicitCastExpr 0x213a55785c8 <col:19, col:25> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x213a5578530 <col:19, col:25> 'int' lvalue ->bytes_to_write 0x213a557dd98
|   |   | |   `-ImplicitCastExpr 0x213a5578518 <col:19> 'PEER *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x213a55784f8 <col:19> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x213a55785e0 <col:42, col:48> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x213a5578598 <col:42, col:48> 'int' lvalue ->write_buf_len 0x213a557dc48
|   |   |     `-ImplicitCastExpr 0x213a5578580 <col:42> 'PEER *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x213a5578560 <col:42> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   |   |-ImplicitCastExpr 0x213a55786e8 <col:64, col:70> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x213a5578650 <col:64, col:70> 'int' lvalue ->bytes_to_write 0x213a557dd98
|   |   |   `-ImplicitCastExpr 0x213a5578638 <col:64> 'PEER *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x213a5578618 <col:64> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   |   `-ImplicitCastExpr 0x213a5578700 <line:562:9, col:15> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x213a55786b8 <col:9, col:15> 'int' lvalue ->write_buf_len 0x213a557dc48
|   |       `-ImplicitCastExpr 0x213a55786a0 <col:9> 'PEER *' <LValueToRValue>
|   |         `-DeclRefExpr 0x213a5578680 <col:9> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   |-IfStmt 0x213a5578e78 <line:563:5, line:577:5>
|   | |-ImplicitCastExpr 0x213a5578788 <line:563:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x213a5578768 <col:9> 'int' lvalue Var 0x213a557f5d8 'write_bytes' 'int'
|   | `-CompoundStmt 0x213a5578e60 <col:22, line:577:5>
|   |   `-IfStmt 0x213a5578e38 <line:565:9, line:576:9> has_else
|   |     |-BinaryOperator 0x213a55789f0 <line:565:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x213a55789d8 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x213a5578990 <col:13> 'int' lvalue Var 0x213a557f530 'ret' 'int'
|   |     | `-IntegerLiteral 0x213a55789b0 <col:19> 'int' 0
|   |     |-CompoundStmt 0x213a5578d20 <col:22, line:569:9>
|   |     | |-DoStmt 0x213a5578c28 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |     | | |-CompoundStmt 0x213a5578be8 <line:106:8, line:111:5>
|   |     | | | `-IfStmt 0x213a5578bd0 <line:107:9, line:110:9>
|   |     | | |   |-UnaryOperator 0x213a5578ac0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |     | | |   | `-ParenExpr 0x213a5578aa0 <col:14, col:24> 'int'
|   |     | | |   |   `-BinaryOperator 0x213a5578a80 <.//openssl//file_jk/after\test\handshake_helper.c:567:24, col:31> 'int' '=='
|   |     | | |   |     |-ImplicitCastExpr 0x213a5578a50 <col:24> 'int' <LValueToRValue>
|   |     | | |   |     | `-DeclRefExpr 0x213a5578a10 <col:24> 'int' lvalue Var 0x213a557f530 'ret' 'int'
|   |     | | |   |     `-ImplicitCastExpr 0x213a5578a68 <col:31> 'int' <LValueToRValue>
|   |     | | |   |       `-DeclRefExpr 0x213a5578a30 <col:31> 'int' lvalue Var 0x213a557f5d8 'write_bytes' 'int'
|   |     | | |   `-CompoundStmt 0x213a5578bb8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   |     | | |     `-CallExpr 0x213a5578b90 <line:109:13, col:39> 'int'
|   |     | | |       |-ImplicitCastExpr 0x213a5578b78 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | |       | `-DeclRefExpr 0x213a5578af8 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   |     | | |       `-UnaryOperator 0x213a5578b60 <col:28, <scratch space>:17:1> 'int' prefix '!' cannot overflow
|   |     | | |         `-ImplicitCastExpr 0x213a5578b48 <col:1> 'char *' <ArrayToPointerDecay>
|   |     | | |           `-StringLiteral 0x213a5578b18 <col:1> 'char [19]' lvalue "ret == write_bytes"
|   |     | | `-IntegerLiteral 0x213a5578c00 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |     | |-NullStmt 0x213a5578c48 <.//openssl//file_jk/after\test\handshake_helper.c:567:43>
|   |     | `-CompoundAssignOperator 0x213a5578cf0 <line:568:13, col:37> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x213a5578c88 <col:13, col:19> 'int' lvalue ->bytes_to_write 0x213a557dd98
|   |     |   | `-ImplicitCastExpr 0x213a5578c70 <col:13> 'PEER *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x213a5578c50 <col:13> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   |     |   `-ImplicitCastExpr 0x213a5578cd8 <col:37> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x213a5578cb8 <col:37> 'int' lvalue Var 0x213a557f530 'ret' 'int'
|   |     `-CompoundStmt 0x213a5578e18 <line:569:16, line:576:9>
|   |       |-BinaryOperator 0x213a5578de8 <line:574:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |       | |-MemberExpr 0x213a5578d80 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |       | | `-ImplicitCastExpr 0x213a5578d68 <col:13> 'PEER *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x213a5578d48 <col:13> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|   |       | `-ImplicitCastExpr 0x213a5578dd0 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   `-DeclRefExpr 0x213a5578db0 <col:28> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   |       `-ReturnStmt 0x213a5578e08 <line:575:13>
|   `-IfStmt 0x213a55790b8 <line:585:5, line:587:5>
|     |-BinaryOperator 0x213a5578fc0 <line:585:9, col:41> 'int' '&&'
|     | |-UnaryOperator 0x213a5578f10 <col:9, col:16> 'int' prefix '!' cannot overflow
|     | | `-ImplicitCastExpr 0x213a5578ef8 <col:10, col:16> 'int' <LValueToRValue>
|     | |   `-MemberExpr 0x213a5578ec8 <col:10, col:16> 'int' lvalue ->bytes_to_write 0x213a557dd98
|     | |     `-ImplicitCastExpr 0x213a5578eb0 <col:10> 'PEER *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x213a5578e90 <col:10> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|     | `-UnaryOperator 0x213a5578fa8 <col:34, col:41> 'int' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x213a5578f90 <col:35, col:41> 'int' <LValueToRValue>
|     |     `-MemberExpr 0x213a5578f60 <col:35, col:41> 'int' lvalue ->bytes_to_read 0x213a557de08
|     |       `-ImplicitCastExpr 0x213a5578f48 <col:35> 'PEER *' <LValueToRValue>
|     |         `-DeclRefExpr 0x213a5578f28 <col:35> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|     `-CompoundStmt 0x213a55790a0 <col:56, line:587:5>
|       `-BinaryOperator 0x213a5579080 <line:586:9, col:24> 'peer_status_t':'peer_status_t' '='
|         |-MemberExpr 0x213a5579018 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|         | `-ImplicitCastExpr 0x213a5579000 <col:9> 'PEER *' <LValueToRValue>
|         |   `-DeclRefExpr 0x213a5578fe0 <col:9> 'PEER *' lvalue ParmVar 0x213a557f3b0 'peer' 'PEER *'
|         `-ImplicitCastExpr 0x213a5579068 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|           `-DeclRefExpr 0x213a5579048 <col:24> 'int' EnumConstant 0x213a557d8c0 'PEER_SUCCESS' 'int'
|-FunctionDecl 0x213a55843d8 <line:590:1, line:687:1> line:590:13 used do_reneg_setup_step 'void (const SSL_TEST_CTX *, PEER *)' static
| |-ParmVarDecl 0x213a5584218 <col:33, col:53> col:53 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x213a5584290 <col:63, col:69> col:69 used peer 'PEER *'
| `-CompoundStmt 0x213a5582ad8 <line:591:1, line:687:1>
|   |-DeclStmt 0x213a5584520 <line:592:5, col:12>
|   | `-VarDecl 0x213a55844b8 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x213a55845b0 <line:593:5, col:13>
|   | `-VarDecl 0x213a5584548 <col:5, col:10> col:10 used buf 'char'
|   |-IfStmt 0x213a5584888 <line:595:5, line:604:5>
|   | |-BinaryOperator 0x213a5584680 <line:595:9, col:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x213a5584668 <col:9, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x213a5584650 <col:9, col:15> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x213a5584600 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   | | |     `-ImplicitCastExpr 0x213a55845e8 <col:9> 'PEER *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x213a55845c8 <col:9> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   | | `-DeclRefExpr 0x213a5584630 <col:25> 'int' EnumConstant 0x213a557d8c0 'PEER_SUCCESS' 'int'
|   | `-CompoundStmt 0x213a5584860 <col:39, line:604:5>
|   |   |-BinaryOperator 0x213a5584740 <line:601:9, col:24> 'peer_status_t':'peer_status_t' '='
|   |   | |-MemberExpr 0x213a55846d8 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |   | | `-ImplicitCastExpr 0x213a55846c0 <col:9> 'PEER *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x213a55846a0 <col:9> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x213a5584728 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   `-DeclRefExpr 0x213a5584708 <col:24> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   |   |-CallExpr 0x213a5584810 <line:602:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x213a55847f8 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x213a5584760 <col:9> 'void (PEER *)' Function 0x213a557b838 'do_handshake_step' 'void (PEER *)'
|   |   | `-ImplicitCastExpr 0x213a5584838 <col:27> 'PEER *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x213a5584780 <col:27> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   |   `-ReturnStmt 0x213a5584850 <line:603:9>
|   |-DoStmt 0x213a5584b08 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5584ac8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5584ab0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a5584998 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a5584978 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a5584958 <.//openssl//file_jk/after\test\handshake_helper.c:606:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x213a5584940 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x213a5584928 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x213a55848d8 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   | |   |     |     `-ImplicitCastExpr 0x213a55848c0 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x213a55848a0 <col:16> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x213a5584908 <col:32> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x213a5584a98 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5584a70 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5584a58 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a55849d0 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5584a40 <col:28, <scratch space>:18:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5584a28 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a55849f0 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x213a5584ae0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5584b28 <.//openssl//file_jk/after\test\handshake_helper.c:606:43>
|   |-DoStmt 0x213a5584f30 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5584ef0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5584ed8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a5584d20 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a5584d00 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a5584ce0 <.//openssl//file_jk/after\test\handshake_helper.c:607:16, line:608:48> 'int' '||'
|   | |   |     |-BinaryOperator 0x213a5584be8 <line:607:16, col:44> 'int' '=='
|   | |   |     | |-ImplicitCastExpr 0x213a5584bd0 <col:16, col:26> 'int' <IntegralCast>
|   | |   |     | | `-ImplicitCastExpr 0x213a5584bb8 <col:16, col:26> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|   | |   |     | |   `-MemberExpr 0x213a5584b68 <col:16, col:26> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x213a55c6150
|   | |   |     | |     `-ImplicitCastExpr 0x213a5584b50 <col:16> 'const SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     | |       `-DeclRefExpr 0x213a5584b30 <col:16> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a5584218 'test_ctx' 'const SSL_TEST_CTX *'
|   | |   |     | `-DeclRefExpr 0x213a5584b98 <col:44> 'int' EnumConstant 0x213a55c3c00 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|   | |   |     `-BinaryOperator 0x213a5584cc0 <line:608:20, col:48> 'int' '=='
|   | |   |       |-ImplicitCastExpr 0x213a5584ca8 <col:20, col:30> 'int' <IntegralCast>
|   | |   |       | `-ImplicitCastExpr 0x213a5584c90 <col:20, col:30> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|   | |   |       |   `-MemberExpr 0x213a5584c40 <col:20, col:30> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x213a55c6150
|   | |   |       |     `-ImplicitCastExpr 0x213a5584c28 <col:20> 'const SSL_TEST_CTX *' <LValueToRValue>
|   | |   |       |       `-DeclRefExpr 0x213a5584c08 <col:20> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a5584218 'test_ctx' 'const SSL_TEST_CTX *'
|   | |   |       `-DeclRefExpr 0x213a5584c70 <col:48> 'int' EnumConstant 0x213a55c3c58 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|   | |   `-CompoundStmt 0x213a5584ec0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5584e98 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5584e80 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5584d58 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5584e68 <col:28, <scratch space>:19:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5584e50 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5584db8 <col:1> 'char [123]' lvalue "test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEG_SERVER || test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEG_CLIENT"
|   | `-IntegerLiteral 0x213a5584f08 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5584f50 <.//openssl//file_jk/after\test\handshake_helper.c:608:80>
|   |-IfStmt 0x213a5582328 <line:611:5, line:660:5>
|   | |-OpaqueValueExpr 0x213a5582310 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x213a55822f8 <line:614:48, line:660:5>
|   |   `-IfStmt 0x213a55822e0 <line:619:9, line:659:9>
|   |     |-OpaqueValueExpr 0x213a55822c8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x213a5582290 <line:619:50, line:659:9>
|   |       |-IfStmt 0x213a5580cd8 <line:625:13, line:638:13> has_else
|   |       | |-OpaqueValueExpr 0x213a5580cc0 <<invalid sloc>> '_Bool'
|   |       | |-CompoundStmt 0x213a5580598 <line:625:43, line:627:13>
|   |       | `-CompoundStmt 0x213a5580ca8 <col:20, line:638:13>
|   |       |   `-IfStmt 0x213a5580c80 <line:628:17, line:637:17> has_else
|   |       |     |-BinaryOperator 0x213a5580728 <line:628:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |       |     | |-ImplicitCastExpr 0x213a55806f8 <.//openssl//file_jk/after\test\handshake_helper.c:628:21, col:44> 'char *' <LValueToRValue>
|   |       |     | | `-MemberExpr 0x213a5580640 <col:21, col:44> 'char *const' lvalue .reneg_ciphers 0x213a55c8700
|   |       |     | |   `-MemberExpr 0x213a5580610 <col:21, col:37> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue .client 0x213a55c8d00
|   |       |     | |     `-MemberExpr 0x213a55805e0 <col:21, col:31> 'const SSL_TEST_EXTRA_CONF':'const SSL_TEST_EXTRA_CONF' lvalue ->extra 0x213a55c62c0
|   |       |     | |       `-ImplicitCastExpr 0x213a55805c8 <col:21> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |       |     | |         `-DeclRefExpr 0x213a55805a8 <col:21> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a5584218 'test_ctx' 'const SSL_TEST_CTX *'
|   |       |     | `-ImplicitCastExpr 0x213a5580710 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |       |     |   `-ParenExpr 0x213a55806d8 <col:17, col:27> 'void *'
|   |       |     |     `-CStyleCastExpr 0x213a55806b0 <col:18, col:26> 'void *' <NullToPointer>
|   |       |     |       `-IntegerLiteral 0x213a5580670 <col:26> 'int' 0
|   |       |     |-CompoundStmt 0x213a5580af0 <.//openssl//file_jk/after\test\handshake_helper.c:628:67, line:635:17>
|   |       |     | `-IfStmt 0x213a5580a60 <line:629:21, line:633:21>
|   |       |     |   |-OpaqueValueExpr 0x213a5580a48 <<invalid sloc>> '_Bool'
|   |       |     |   `-CompoundStmt 0x213a5580a28 <line:630:72, line:633:21>
|   |       |     |     |-BinaryOperator 0x213a55809f8 <line:631:25, col:40> 'peer_status_t':'peer_status_t' '='
|   |       |     |     | |-MemberExpr 0x213a5580990 <col:25, col:31> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |       |     |     | | `-ImplicitCastExpr 0x213a5580978 <col:25> 'PEER *' <LValueToRValue>
|   |       |     |     | |   `-DeclRefExpr 0x213a5580958 <col:25> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   |       |     |     | `-ImplicitCastExpr 0x213a55809e0 <col:40> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |     |     |   `-DeclRefExpr 0x213a55809c0 <col:40> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   |       |     |     `-ReturnStmt 0x213a5580a18 <line:632:25>
|   |       |     `-CompoundStmt 0x213a5580c70 <line:635:24, line:637:17>
|   |       |-IfStmt 0x213a5580e40 <line:639:13, line:642:13>
|   |       | |-UnaryOperator 0x213a5580d38 <line:639:17, col:18> 'int' prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x213a5580d20 <col:18> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x213a5580d00 <col:18> 'int' lvalue Var 0x213a55844b8 'ret' 'int'
|   |       | `-CompoundStmt 0x213a5580e20 <col:23, line:642:13>
|   |       |   |-BinaryOperator 0x213a5580df0 <line:640:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       |   | |-MemberExpr 0x213a5580d88 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |       |   | | `-ImplicitCastExpr 0x213a5580d70 <col:17> 'PEER *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x213a5580d50 <col:17> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   |       |   | `-ImplicitCastExpr 0x213a5580dd8 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   |   `-DeclRefExpr 0x213a5580db8 <col:32> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   |       |   `-ReturnStmt 0x213a5580e10 <line:641:17>
|   |       |-CallExpr 0x213a5580eb0 <line:643:13, col:35> 'void'
|   |       | |-ImplicitCastExpr 0x213a5580e98 <col:13> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x213a5580e58 <col:13> 'void (PEER *)' Function 0x213a557b838 'do_handshake_step' 'void (PEER *)'
|   |       | `-ImplicitCastExpr 0x213a5580ed8 <col:31> 'PEER *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x213a5580e78 <col:31> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   |       |-IfStmt 0x213a5582258 <line:654:13, line:657:32> has_else
|   |       | |-BinaryOperator 0x213a5580fa8 <line:654:17, col:33> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x213a5580f90 <col:17, col:23> 'int' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x213a5580f78 <col:17, col:23> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       | | |   `-MemberExpr 0x213a5580f28 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |       | | |     `-ImplicitCastExpr 0x213a5580f10 <col:17> 'PEER *' <LValueToRValue>
|   |       | | |       `-DeclRefExpr 0x213a5580ef0 <col:17> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   |       | | `-DeclRefExpr 0x213a5580f58 <col:33> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   |       | |-BinaryOperator 0x213a5581068 <line:655:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       | | |-MemberExpr 0x213a5581000 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |       | | | `-ImplicitCastExpr 0x213a5580fe8 <col:17> 'PEER *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x213a5580fc8 <col:17> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   |       | | `-ImplicitCastExpr 0x213a5581050 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       | |   `-DeclRefExpr 0x213a5581030 <col:32> 'int' EnumConstant 0x213a557d8c0 'PEER_SUCCESS' 'int'
|   |       | `-IfStmt 0x213a5582240 <line:656:18, line:657:32>
|   |       |   |-BinaryOperator 0x213a5581140 <line:656:22, col:38> 'int' '=='
|   |       |   | |-ImplicitCastExpr 0x213a5581128 <col:22, col:28> 'int' <IntegralCast>
|   |       |   | | `-ImplicitCastExpr 0x213a5581110 <col:22, col:28> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       |   | |   `-MemberExpr 0x213a55810c0 <col:22, col:28> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |       |   | |     `-ImplicitCastExpr 0x213a55810a8 <col:22> 'PEER *' <LValueToRValue>
|   |       |   | |       `-DeclRefExpr 0x213a5581088 <col:22> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   |       |   | `-DeclRefExpr 0x213a55810f0 <col:38> 'int' EnumConstant 0x213a557d8c0 'PEER_SUCCESS' 'int'
|   |       |   `-BinaryOperator 0x213a5582220 <line:657:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       |     |-MemberExpr 0x213a55821b8 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |       |     | `-ImplicitCastExpr 0x213a55821a0 <col:17> 'PEER *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x213a5581160 <col:17> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   |       |     `-ImplicitCastExpr 0x213a5582208 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |       `-DeclRefExpr 0x213a55821e8 <col:32> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   |       `-ReturnStmt 0x213a5582280 <line:658:13>
|   |-IfStmt 0x213a55829f0 <line:668:5, line:684:5> has_else
|   | |-BinaryOperator 0x213a55824c8 <line:668:9, col:16> 'int' '>='
|   | | |-ImplicitCastExpr 0x213a55824b0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x213a5582468 <col:9> 'int' lvalue Var 0x213a55844b8 'ret' 'int'
|   | | `-IntegerLiteral 0x213a5582488 <col:16> 'int' 0
|   | |-CompoundStmt 0x213a55825b8 <col:19, line:675:5>
|   | | |-BinaryOperator 0x213a5582588 <line:673:9, col:24> 'peer_status_t':'peer_status_t' '='
|   | | | |-MemberExpr 0x213a5582520 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   | | | | `-ImplicitCastExpr 0x213a5582508 <col:9> 'PEER *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x213a55824e8 <col:9> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   | | | `-ImplicitCastExpr 0x213a5582570 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   | | |   `-DeclRefExpr 0x213a5582550 <col:24> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   | | `-ReturnStmt 0x213a55825a8 <line:674:9>
|   | `-CompoundStmt 0x213a55829c8 <line:675:12, line:684:5>
|   |   |-DeclStmt 0x213a55826d0 <line:676:9, col:50>
|   |   | `-VarDecl 0x213a55825f0 <col:9, col:13> col:13 used error 'int'
|   |   |-IfStmt 0x213a5582828 <line:677:9, line:680:9>
|   |   | |-OpaqueValueExpr 0x213a5582810 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x213a55827f0 <line:677:43, line:680:9>
|   |   |   |-BinaryOperator 0x213a55827c0 <line:678:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |   |   | |-MemberExpr 0x213a5582758 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   |   |   | | `-ImplicitCastExpr 0x213a5582740 <col:13> 'PEER *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x213a5582720 <col:13> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|   |   |   | `-ImplicitCastExpr 0x213a55827a8 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   |   `-DeclRefExpr 0x213a5582788 <col:28> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   |   |   `-ReturnStmt 0x213a55827e0 <line:679:13>
|   |   `-IfStmt 0x213a55829b0 <line:682:9, line:683:13>
|   |     |-OpaqueValueExpr 0x213a5582998 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x213a5582988 <col:13>
|   `-BinaryOperator 0x213a5582ab8 <line:686:5, col:20> 'peer_status_t':'peer_status_t' '='
|     |-MemberExpr 0x213a5582a50 <col:5, col:11> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|     | `-ImplicitCastExpr 0x213a5582a38 <col:5> 'PEER *' <LValueToRValue>
|     |   `-DeclRefExpr 0x213a5582a18 <col:5> 'PEER *' lvalue ParmVar 0x213a5584290 'peer' 'PEER *'
|     `-ImplicitCastExpr 0x213a5582aa0 <col:20> 'peer_status_t':'peer_status_t' <IntegralCast>
|       `-DeclRefExpr 0x213a5582a80 <col:20> 'int' EnumConstant 0x213a557d8c0 'PEER_SUCCESS' 'int'
|-FunctionDecl 0x213a5582bf0 <line:705:1, line:720:1> line:705:13 used do_shutdown_step 'void (PEER *)' static
| |-ParmVarDecl 0x213a5582b48 <col:30, col:36> col:36 used peer 'PEER *'
| `-CompoundStmt 0x213a55815b8 <line:706:1, line:720:1>
|   |-DeclStmt 0x213a5582d30 <line:707:5, col:12>
|   | `-VarDecl 0x213a5582cc8 <col:5, col:9> col:9 used ret 'int'
|   |-DoStmt 0x213a5582fb0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5582f70 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5582f58 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a5582e40 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a5582e20 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a5582e00 <.//openssl//file_jk/after\test\handshake_helper.c:709:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x213a5582de8 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x213a5582dd0 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x213a5582d80 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|   | |   |     |     `-ImplicitCastExpr 0x213a5582d68 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x213a5582d48 <col:16> 'PEER *' lvalue ParmVar 0x213a5582b48 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x213a5582db0 <col:32> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x213a5582f40 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5582f18 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5582f00 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5582e78 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5582ee8 <col:28, <scratch space>:20:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5582ed0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5582e98 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x213a5582f88 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5582fd0 <.//openssl//file_jk/after\test\handshake_helper.c:709:43>
|   `-IfStmt 0x213a5581590 <line:712:5, line:719:5> has_else
|     |-BinaryOperator 0x213a55811a8 <line:712:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x213a5581190 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x213a5583158 <col:9> 'int' lvalue Var 0x213a5582cc8 'ret' 'int'
|     | `-IntegerLiteral 0x213a5583178 <col:16> 'int' 1
|     |-CompoundStmt 0x213a5581288 <col:19, line:714:5>
|     | `-BinaryOperator 0x213a5581268 <line:713:9, col:24> 'peer_status_t':'peer_status_t' '='
|     |   |-MemberExpr 0x213a5581200 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|     |   | `-ImplicitCastExpr 0x213a55811e8 <col:9> 'PEER *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x213a55811c8 <col:9> 'PEER *' lvalue ParmVar 0x213a5582b48 'peer' 'PEER *'
|     |   `-ImplicitCastExpr 0x213a5581250 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|     |     `-DeclRefExpr 0x213a5581230 <col:24> 'int' EnumConstant 0x213a557d8c0 'PEER_SUCCESS' 'int'
|     `-IfStmt 0x213a5581578 <line:714:12, line:719:5>
|       |-BinaryOperator 0x213a5581300 <line:714:16, col:22> 'int' '<'
|       | |-ImplicitCastExpr 0x213a55812e8 <col:16> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x213a55812a0 <col:16> 'int' lvalue Var 0x213a5582cc8 'ret' 'int'
|       | `-IntegerLiteral 0x213a55812c0 <col:22> 'int' 0
|       `-CompoundStmt 0x213a5581558 <col:25, line:719:5>
|         |-DeclStmt 0x213a5581418 <line:715:9, col:50>
|         | `-VarDecl 0x213a5581338 <col:9, col:13> col:13 used error 'int'
|         `-IfStmt 0x213a5581540 <line:717:9, line:718:28>
|           |-OpaqueValueExpr 0x213a5581528 <<invalid sloc>> '_Bool'
|           `-BinaryOperator 0x213a5581508 <col:13, col:28> 'peer_status_t':'peer_status_t' '='
|             |-MemberExpr 0x213a55814a0 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x213a557de90
|             | `-ImplicitCastExpr 0x213a5581488 <col:13> 'PEER *' <LValueToRValue>
|             |   `-DeclRefExpr 0x213a5581468 <col:13> 'PEER *' lvalue ParmVar 0x213a5582b48 'peer' 'PEER *'
|             `-ImplicitCastExpr 0x213a55814f0 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|               `-DeclRefExpr 0x213a55814d0 <col:28> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|-EnumDecl 0x213a55815e8 <line:722:9, line:730:1> line:722:9
| |-EnumConstantDecl 0x213a55816c0 <line:723:5> col:5 referenced HANDSHAKE 'int'
| |-EnumConstantDecl 0x213a5581718 <line:724:5> col:5 referenced RENEG_APPLICATION_DATA 'int'
| |-EnumConstantDecl 0x213a5581770 <line:725:5> col:5 referenced RENEG_SETUP 'int'
| |-EnumConstantDecl 0x213a55817c8 <line:726:5> col:5 referenced RENEG_HANDSHAKE 'int'
| |-EnumConstantDecl 0x213a5581820 <line:727:5> col:5 referenced APPLICATION_DATA 'int'
| |-EnumConstantDecl 0x213a5581878 <line:728:5> col:5 referenced SHUTDOWN 'int'
| `-EnumConstantDecl 0x213a55818d0 <line:729:5> col:5 referenced CONNECTION_DONE 'int'
|-TypedefDecl 0x213a5581988 <line:722:1, line:730:3> col:3 referenced connect_phase_t 'enum connect_phase_t':'connect_phase_t'
| `-ElaboratedType 0x213a5581930 'enum connect_phase_t' sugar
|   `-EnumType 0x213a55816a0 'connect_phase_t'
|     `-Enum 0x213a55815e8 ''
|-FunctionDecl 0x213a5581be8 <line:732:1, line:754:1> line:732:24 used next_phase 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)' static
| |-ParmVarDecl 0x213a5581a30 <col:35, col:55> col:55 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x213a5581aa8 <line:733:35, col:51> col:51 used phase 'connect_phase_t':'connect_phase_t'
| `-CompoundStmt 0x213a55835b0 <line:734:1, line:754:1>
|   `-SwitchStmt 0x213a5581d00 <line:735:5, line:753:5>
|     |-ImplicitCastExpr 0x213a5581ce8 <line:735:13> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x213a5581cd0 <col:13> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|     |   `-DeclRefExpr 0x213a5581cb0 <col:13> 'connect_phase_t':'connect_phase_t' lvalue ParmVar 0x213a5581aa8 'phase' 'connect_phase_t':'connect_phase_t'
|     `-CompoundStmt 0x213a5583558 <col:20, line:753:5>
|       |-CaseStmt 0x213a5581d58 <line:736:5, line:739:20>
|       | |-ConstantExpr 0x213a5581d40 <line:736:10> 'int'
|       | | `-DeclRefExpr 0x213a5581d20 <col:10> 'int' EnumConstant 0x213a55816c0 'HANDSHAKE' 'int'
|       | `-IfStmt 0x213a5581f98 <line:737:9, line:739:20>
|       |   |-BinaryOperator 0x213a5581f30 <line:737:13, line:738:48> 'int' '||'
|       |   | |-BinaryOperator 0x213a5581e38 <line:737:13, col:41> 'int' '=='
|       |   | | |-ImplicitCastExpr 0x213a5581e20 <col:13, col:23> 'int' <IntegralCast>
|       |   | | | `-ImplicitCastExpr 0x213a5581e08 <col:13, col:23> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|       |   | | |   `-MemberExpr 0x213a5581db8 <col:13, col:23> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x213a55c6150
|       |   | | |     `-ImplicitCastExpr 0x213a5581da0 <col:13> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   | | |       `-DeclRefExpr 0x213a5581d80 <col:13> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a5581a30 'test_ctx' 'const SSL_TEST_CTX *'
|       |   | | `-DeclRefExpr 0x213a5581de8 <col:41> 'int' EnumConstant 0x213a55c3c00 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|       |   | `-BinaryOperator 0x213a5581f10 <line:738:20, col:48> 'int' '=='
|       |   |   |-ImplicitCastExpr 0x213a5581ef8 <col:20, col:30> 'int' <IntegralCast>
|       |   |   | `-ImplicitCastExpr 0x213a5581ee0 <col:20, col:30> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|       |   |   |   `-MemberExpr 0x213a5581e90 <col:20, col:30> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x213a55c6150
|       |   |   |     `-ImplicitCastExpr 0x213a5581e78 <col:20> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   |   |       `-DeclRefExpr 0x213a5581e58 <col:20> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a5581a30 'test_ctx' 'const SSL_TEST_CTX *'
|       |   |   `-DeclRefExpr 0x213a5581ec0 <col:48> 'int' EnumConstant 0x213a55c3c58 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|       |   `-ReturnStmt 0x213a5581f88 <line:739:13, col:20>
|       |     `-ImplicitCastExpr 0x213a5581f70 <col:20> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |       `-DeclRefExpr 0x213a5581f50 <col:20> 'int' EnumConstant 0x213a5581718 'RENEG_APPLICATION_DATA' 'int'
|       |-ReturnStmt 0x213a5581fe8 <line:740:9, col:16>
|       | `-ImplicitCastExpr 0x213a5581fd0 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |   `-DeclRefExpr 0x213a5581fb0 <col:16> 'int' EnumConstant 0x213a5581820 'APPLICATION_DATA' 'int'
|       |-CaseStmt 0x213a5582030 <line:741:5, line:742:16>
|       | |-ConstantExpr 0x213a5582018 <line:741:10> 'int'
|       | | `-DeclRefExpr 0x213a5581ff8 <col:10> 'int' EnumConstant 0x213a5581718 'RENEG_APPLICATION_DATA' 'int'
|       | `-ReturnStmt 0x213a5582090 <line:742:9, col:16>
|       |   `-ImplicitCastExpr 0x213a5582078 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x213a5582058 <col:16> 'int' EnumConstant 0x213a5581770 'RENEG_SETUP' 'int'
|       |-CaseStmt 0x213a55820d8 <line:743:5, line:744:16>
|       | |-ConstantExpr 0x213a55820c0 <line:743:10> 'int'
|       | | `-DeclRefExpr 0x213a55820a0 <col:10> 'int' EnumConstant 0x213a5581770 'RENEG_SETUP' 'int'
|       | `-ReturnStmt 0x213a5582138 <line:744:9, col:16>
|       |   `-ImplicitCastExpr 0x213a5582120 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x213a5582100 <col:16> 'int' EnumConstant 0x213a55817c8 'RENEG_HANDSHAKE' 'int'
|       |-CaseStmt 0x213a55831b0 <line:745:5, line:746:16>
|       | |-ConstantExpr 0x213a5582168 <line:745:10> 'int'
|       | | `-DeclRefExpr 0x213a5582148 <col:10> 'int' EnumConstant 0x213a55817c8 'RENEG_HANDSHAKE' 'int'
|       | `-ReturnStmt 0x213a5583210 <line:746:9, col:16>
|       |   `-ImplicitCastExpr 0x213a55831f8 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x213a55831d8 <col:16> 'int' EnumConstant 0x213a5581820 'APPLICATION_DATA' 'int'
|       |-CaseStmt 0x213a5583258 <line:747:5, line:748:16>
|       | |-ConstantExpr 0x213a5583240 <line:747:10> 'int'
|       | | `-DeclRefExpr 0x213a5583220 <col:10> 'int' EnumConstant 0x213a5581820 'APPLICATION_DATA' 'int'
|       | `-ReturnStmt 0x213a55832b8 <line:748:9, col:16>
|       |   `-ImplicitCastExpr 0x213a55832a0 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x213a5583280 <col:16> 'int' EnumConstant 0x213a5581878 'SHUTDOWN' 'int'
|       |-CaseStmt 0x213a5583300 <line:749:5, line:750:16>
|       | |-ConstantExpr 0x213a55832e8 <line:749:10> 'int'
|       | | `-DeclRefExpr 0x213a55832c8 <col:10> 'int' EnumConstant 0x213a5581878 'SHUTDOWN' 'int'
|       | `-ReturnStmt 0x213a5583360 <line:750:9, col:16>
|       |   `-ImplicitCastExpr 0x213a5583348 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x213a5583328 <col:16> 'int' EnumConstant 0x213a55818d0 'CONNECTION_DONE' 'int'
|       |-DefaultStmt 0x213a5583530 <line:751:5, .//openssl//file_jk/after\test/testutil.h:111:15>
|       | `-DoStmt 0x213a5583510 <line:106:5, line:111:15>
|       |   |-CompoundStmt 0x213a55834d0 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x213a55834b8 <line:107:9, line:110:9>
|       |   |   |-UnaryOperator 0x213a55833b8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|       |   |   | `-ParenExpr 0x213a5583398 <col:14, col:24> 'int'
|       |   |   |   `-IntegerLiteral 0x213a5583370 <.//openssl//file_jk/after\test\handshake_helper.c:752:20> 'int' 0
|       |   |   `-CompoundStmt 0x213a55834a0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|       |   |     `-CallExpr 0x213a5583478 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x213a5583460 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x213a55833f0 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x213a5583448 <col:28, <scratch space>:21:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x213a5583430 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x213a5583410 <col:1> 'char [2]' lvalue "0"
|       |   `-IntegerLiteral 0x213a55834e8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|       `-NullStmt 0x213a5583550 <.//openssl//file_jk/after\test\handshake_helper.c:752:22>
|-FunctionDecl 0x213a5583838 <line:756:1, line:781:1> line:756:13 used do_connect_step 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' static
| |-ParmVarDecl 0x213a55835d8 <col:29, col:49> col:49 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x213a5583650 <col:59, col:65> col:65 used peer 'PEER *'
| |-ParmVarDecl 0x213a55836c8 <line:757:29, col:45> col:45 used phase 'connect_phase_t':'connect_phase_t'
| `-CompoundStmt 0x213a561f070 <line:758:1, line:781:1>
|   `-SwitchStmt 0x213a5583958 <line:759:5, line:780:5>
|     |-ImplicitCastExpr 0x213a5583940 <line:759:13> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x213a5583928 <col:13> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|     |   `-DeclRefExpr 0x213a5583908 <col:13> 'connect_phase_t':'connect_phase_t' lvalue ParmVar 0x213a55836c8 'phase' 'connect_phase_t':'connect_phase_t'
|     `-CompoundStmt 0x213a561eff0 <col:20, line:780:5>
|       |-CaseStmt 0x213a55839b0 <line:760:5, line:761:31>
|       | |-ConstantExpr 0x213a5583998 <line:760:10> 'int'
|       | | `-DeclRefExpr 0x213a5583978 <col:10> 'int' EnumConstant 0x213a55816c0 'HANDSHAKE' 'int'
|       | `-CallExpr 0x213a5583a30 <line:761:9, col:31> 'void'
|       |   |-ImplicitCastExpr 0x213a5583a18 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x213a55839d8 <col:9> 'void (PEER *)' Function 0x213a557b838 'do_handshake_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x213a5583a58 <col:27> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x213a55839f8 <col:27> 'PEER *' lvalue ParmVar 0x213a5583650 'peer' 'PEER *'
|       |-BreakStmt 0x213a5583a70 <line:762:9>
|       |-CaseStmt 0x213a5583ab0 <line:763:5, line:764:30>
|       | |-ConstantExpr 0x213a5583a98 <line:763:10> 'int'
|       | | `-DeclRefExpr 0x213a5583a78 <col:10> 'int' EnumConstant 0x213a5581718 'RENEG_APPLICATION_DATA' 'int'
|       | `-CallExpr 0x213a5583b30 <line:764:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x213a5583b18 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x213a5583ad8 <col:9> 'void (PEER *)' Function 0x213a557f458 'do_app_data_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x213a5583b58 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x213a5583af8 <col:26> 'PEER *' lvalue ParmVar 0x213a5583650 'peer' 'PEER *'
|       |-BreakStmt 0x213a5583b70 <line:765:9>
|       |-CaseStmt 0x213a5583bb0 <line:766:5, line:767:43>
|       | |-ConstantExpr 0x213a5583b98 <line:766:10> 'int'
|       | | `-DeclRefExpr 0x213a5583b78 <col:10> 'int' EnumConstant 0x213a5581770 'RENEG_SETUP' 'int'
|       | `-CallExpr 0x213a5583cb0 <line:767:9, col:43> 'void'
|       |   |-ImplicitCastExpr 0x213a5583c98 <col:9> 'void (*)(const SSL_TEST_CTX *, PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x213a5583bd8 <col:9> 'void (const SSL_TEST_CTX *, PEER *)' Function 0x213a55843d8 'do_reneg_setup_step' 'void (const SSL_TEST_CTX *, PEER *)'
|       |   |-ImplicitCastExpr 0x213a5583ce0 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x213a5583bf8 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a55835d8 'test_ctx' 'const SSL_TEST_CTX *'
|       |   `-ImplicitCastExpr 0x213a5583cf8 <col:39> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x213a5583c18 <col:39> 'PEER *' lvalue ParmVar 0x213a5583650 'peer' 'PEER *'
|       |-BreakStmt 0x213a5583d10 <line:768:9>
|       |-CaseStmt 0x213a5583d50 <line:769:5, line:770:31>
|       | |-ConstantExpr 0x213a5583d38 <line:769:10> 'int'
|       | | `-DeclRefExpr 0x213a5583d18 <col:10> 'int' EnumConstant 0x213a55817c8 'RENEG_HANDSHAKE' 'int'
|       | `-CallExpr 0x213a5583dd0 <line:770:9, col:31> 'void'
|       |   |-ImplicitCastExpr 0x213a5583db8 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x213a5583d78 <col:9> 'void (PEER *)' Function 0x213a557b838 'do_handshake_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x213a5583df8 <col:27> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x213a5583d98 <col:27> 'PEER *' lvalue ParmVar 0x213a5583650 'peer' 'PEER *'
|       |-BreakStmt 0x213a5583e10 <line:771:9>
|       |-CaseStmt 0x213a5583e50 <line:772:5, line:773:30>
|       | |-ConstantExpr 0x213a5583e38 <line:772:10> 'int'
|       | | `-DeclRefExpr 0x213a5583e18 <col:10> 'int' EnumConstant 0x213a5581820 'APPLICATION_DATA' 'int'
|       | `-CallExpr 0x213a5583ed0 <line:773:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x213a5583eb8 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x213a5583e78 <col:9> 'void (PEER *)' Function 0x213a557f458 'do_app_data_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x213a5583ef8 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x213a5583e98 <col:26> 'PEER *' lvalue ParmVar 0x213a5583650 'peer' 'PEER *'
|       |-BreakStmt 0x213a5583f10 <line:774:9>
|       |-CaseStmt 0x213a5583f50 <line:775:5, line:776:30>
|       | |-ConstantExpr 0x213a5583f38 <line:775:10> 'int'
|       | | `-DeclRefExpr 0x213a5583f18 <col:10> 'int' EnumConstant 0x213a5581878 'SHUTDOWN' 'int'
|       | `-CallExpr 0x213a5583fd0 <line:776:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x213a5583fb8 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x213a5583f78 <col:9> 'void (PEER *)' Function 0x213a5582bf0 'do_shutdown_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x213a5583ff8 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x213a5583f98 <col:26> 'PEER *' lvalue ParmVar 0x213a5583650 'peer' 'PEER *'
|       |-BreakStmt 0x213a5584010 <line:777:9>
|       |-DefaultStmt 0x213a561efc8 <line:778:5, .//openssl//file_jk/after\test/testutil.h:111:15>
|       | `-DoStmt 0x213a561efa8 <line:106:5, line:111:15>
|       |   |-CompoundStmt 0x213a5584178 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x213a5584160 <line:107:9, line:110:9>
|       |   |   |-UnaryOperator 0x213a5584060 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|       |   |   | `-ParenExpr 0x213a5584040 <col:14, col:24> 'int'
|       |   |   |   `-IntegerLiteral 0x213a5584018 <.//openssl//file_jk/after\test\handshake_helper.c:779:20> 'int' 0
|       |   |   `-CompoundStmt 0x213a5584148 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|       |   |     `-CallExpr 0x213a5584120 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x213a5584108 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x213a5584098 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x213a55840f0 <col:28, <scratch space>:22:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x213a55840d8 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x213a55840b8 <col:1> 'char [2]' lvalue "0"
|       |   `-IntegerLiteral 0x213a561ef80 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|       `-NullStmt 0x213a561efe8 <.//openssl//file_jk/after\test\handshake_helper.c:779:22>
|-EnumDecl 0x213a561f088 <line:783:9, line:794:1> line:783:9
| |-EnumConstantDecl 0x213a561f160 <line:785:5> col:5 referenced HANDSHAKE_SUCCESS 'int'
| |-EnumConstantDecl 0x213a561f1b8 <line:787:5> col:5 referenced CLIENT_ERROR 'int'
| |-EnumConstantDecl 0x213a561f210 <line:789:5> col:5 referenced SERVER_ERROR 'int'
| |-EnumConstantDecl 0x213a561f268 <line:791:5> col:5 referenced INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x213a561f2c0 <line:793:5> col:5 referenced HANDSHAKE_RETRY 'int'
|-TypedefDecl 0x213a561f378 <line:783:1, line:794:3> col:3 referenced handshake_status_t 'enum handshake_status_t':'handshake_status_t'
| `-ElaboratedType 0x213a561f320 'enum handshake_status_t' sugar
|   `-EnumType 0x213a561f140 'handshake_status_t'
|     `-Enum 0x213a561f088 ''
|-FunctionDecl 0x213a561f688 <line:802:1, line:848:1> line:802:27 used handshake_status 'handshake_status_t (peer_status_t, peer_status_t, int)' static
| |-ParmVarDecl 0x213a561f420 <col:44, col:58> col:58 used last_status 'peer_status_t':'peer_status_t'
| |-ParmVarDecl 0x213a561f498 <line:803:44, col:58> col:58 used previous_status 'peer_status_t':'peer_status_t'
| |-ParmVarDecl 0x213a561f518 <line:804:44, col:48> col:48 used client_spoke_last 'int'
| `-CompoundStmt 0x213a5622028 <line:805:1, line:848:1>
|   |-SwitchStmt 0x213a561f7a8 <line:806:5, line:845:5>
|   | |-ImplicitCastExpr 0x213a561f790 <line:806:13> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x213a561f778 <col:13> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a561f758 <col:13> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x213a561f420 'last_status' 'peer_status_t':'peer_status_t'
|   | `-CompoundStmt 0x213a5621fb0 <col:26, line:845:5>
|   |   |-CaseStmt 0x213a561f800 <line:807:5, line:821:9>
|   |   | |-ConstantExpr 0x213a561f7e8 <line:807:10> 'int'
|   |   | | `-DeclRefExpr 0x213a561f7c8 <col:10> 'int' EnumConstant 0x213a557d8c0 'PEER_SUCCESS' 'int'
|   |   | `-SwitchStmt 0x213a561f878 <line:808:9, line:821:9>
|   |   |   |-ImplicitCastExpr 0x213a561f860 <line:808:17> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x213a561f848 <col:17> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x213a561f828 <col:17> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x213a561f498 'previous_status' 'peer_status_t':'peer_status_t'
|   |   |   `-CompoundStmt 0x213a561fa90 <col:34, line:821:9>
|   |   |     |-CaseStmt 0x213a561f8d0 <line:809:9, line:811:20>
|   |   |     | |-ConstantExpr 0x213a561f8b8 <line:809:14> 'int'
|   |   |     | | `-DeclRefExpr 0x213a561f898 <col:14> 'int' EnumConstant 0x213a557d8c0 'PEER_SUCCESS' 'int'
|   |   |     | `-ReturnStmt 0x213a561f930 <line:811:13, col:20>
|   |   |     |   `-ImplicitCastExpr 0x213a561f918 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     |     `-DeclRefExpr 0x213a561f8f8 <col:20> 'int' EnumConstant 0x213a561f160 'HANDSHAKE_SUCCESS' 'int'
|   |   |     |-CaseStmt 0x213a561f978 <line:812:9, line:814:20>
|   |   |     | |-ConstantExpr 0x213a561f960 <line:812:14> 'int'
|   |   |     | | `-DeclRefExpr 0x213a561f940 <col:14> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   |   |     | `-ReturnStmt 0x213a561f9d8 <line:814:13, col:20>
|   |   |     |   `-ImplicitCastExpr 0x213a561f9c0 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     |     `-DeclRefExpr 0x213a561f9a0 <col:20> 'int' EnumConstant 0x213a561f2c0 'HANDSHAKE_RETRY' 'int'
|   |   |     `-CaseStmt 0x213a561fa20 <line:815:9, line:820:20>
|   |   |       |-ConstantExpr 0x213a561fa08 <line:815:14> 'int'
|   |   |       | `-DeclRefExpr 0x213a561f9e8 <col:14> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   |   |       `-ReturnStmt 0x213a561fa80 <line:820:13, col:20>
|   |   |         `-ImplicitCastExpr 0x213a561fa68 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |           `-DeclRefExpr 0x213a561fa48 <col:20> 'int' EnumConstant 0x213a561f268 'INTERNAL_ERROR' 'int'
|   |   |-BreakStmt 0x213a561fab8 <line:822:9>
|   |   |-CaseStmt 0x213a561faf8 <line:824:5, line:825:16>
|   |   | |-ConstantExpr 0x213a561fae0 <line:824:10> 'int'
|   |   | | `-DeclRefExpr 0x213a561fac0 <col:10> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   |   | `-ReturnStmt 0x213a561fb58 <line:825:9, col:16>
|   |   |   `-ImplicitCastExpr 0x213a561fb40 <col:16> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     `-DeclRefExpr 0x213a561fb20 <col:16> 'int' EnumConstant 0x213a561f2c0 'HANDSHAKE_RETRY' 'int'
|   |   `-CaseStmt 0x213a561fba0 <line:827:5, line:844:9>
|   |     |-ConstantExpr 0x213a561fb88 <line:827:10> 'int'
|   |     | `-DeclRefExpr 0x213a561fb68 <col:10> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   |     `-SwitchStmt 0x213a561fc18 <line:828:9, line:844:9>
|   |       |-ImplicitCastExpr 0x213a561fc00 <line:828:17> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x213a561fbe8 <col:17> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x213a561fbc8 <col:17> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x213a561f498 'previous_status' 'peer_status_t':'peer_status_t'
|   |       `-CompoundStmt 0x213a561ff40 <col:34, line:844:9>
|   |         |-CaseStmt 0x213a561fc70 <line:829:9, line:837:55>
|   |         | |-ConstantExpr 0x213a561fc58 <line:829:14> 'int'
|   |         | | `-DeclRefExpr 0x213a561fc38 <col:14> 'int' EnumConstant 0x213a557d8c0 'PEER_SUCCESS' 'int'
|   |         | `-ReturnStmt 0x213a561fd58 <line:837:13, col:55>
|   |         |   `-ImplicitCastExpr 0x213a561fd40 <col:20, col:55> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |         |     `-ConditionalOperator 0x213a561fd10 <col:20, col:55> 'int'
|   |         |       |-ImplicitCastExpr 0x213a561fcf8 <col:20> 'int' <LValueToRValue>
|   |         |       | `-DeclRefExpr 0x213a561fc98 <col:20> 'int' lvalue ParmVar 0x213a561f518 'client_spoke_last' 'int'
|   |         |       |-DeclRefExpr 0x213a561fcb8 <col:40> 'int' EnumConstant 0x213a561f1b8 'CLIENT_ERROR' 'int'
|   |         |       `-DeclRefExpr 0x213a561fcd8 <col:55> 'int' EnumConstant 0x213a561f210 'SERVER_ERROR' 'int'
|   |         |-CaseStmt 0x213a561fda0 <line:838:9, line:840:20>
|   |         | |-ConstantExpr 0x213a561fd88 <line:838:14> 'int'
|   |         | | `-DeclRefExpr 0x213a561fd68 <col:14> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   |         | `-ReturnStmt 0x213a561fe00 <line:840:13, col:20>
|   |         |   `-ImplicitCastExpr 0x213a561fde8 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |         |     `-DeclRefExpr 0x213a561fdc8 <col:20> 'int' EnumConstant 0x213a561f2c0 'HANDSHAKE_RETRY' 'int'
|   |         `-CaseStmt 0x213a561fe48 <line:841:9, line:843:55>
|   |           |-ConstantExpr 0x213a561fe30 <line:841:14> 'int'
|   |           | `-DeclRefExpr 0x213a561fe10 <col:14> 'int' EnumConstant 0x213a557d970 'PEER_ERROR' 'int'
|   |           `-ReturnStmt 0x213a561ff30 <line:843:13, col:55>
|   |             `-ImplicitCastExpr 0x213a561ff18 <col:20, col:55> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |               `-ConditionalOperator 0x213a561fee8 <col:20, col:55> 'int'
|   |                 |-ImplicitCastExpr 0x213a561fed0 <col:20> 'int' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x213a561fe70 <col:20> 'int' lvalue ParmVar 0x213a561f518 'client_spoke_last' 'int'
|   |                 |-DeclRefExpr 0x213a561fe90 <col:40> 'int' EnumConstant 0x213a561f210 'SERVER_ERROR' 'int'
|   |                 `-DeclRefExpr 0x213a561feb0 <col:55> 'int' EnumConstant 0x213a561f1b8 'CLIENT_ERROR' 'int'
|   `-ReturnStmt 0x213a5622018 <line:847:5, col:12>
|     `-ImplicitCastExpr 0x213a5622000 <col:12> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|       `-DeclRefExpr 0x213a5621fe0 <col:12> 'int' EnumConstant 0x213a561f268 'INTERNAL_ERROR' 'int'
|-FunctionDecl 0x213a5622220 <line:851:1, line:863:1> line:851:14 used dup_str 'char *(const unsigned char *, size_t)' static
| |-ParmVarDecl 0x213a5622060 <col:22, col:43> col:43 used in 'const unsigned char *'
| |-ParmVarDecl 0x213a56220d8 <col:47, col:54> col:54 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x213a5622f38 <line:852:1, line:863:1>
|   |-DeclStmt 0x213a5622368 <line:853:5, col:14>
|   | `-VarDecl 0x213a5622300 <col:5, col:11> col:11 used ret 'char *'
|   |-IfStmt 0x213a56224c8 <line:855:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x213a56223f8 <.//openssl//file_jk/after\test\handshake_helper.c:855:8, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x213a56223c8 <col:8> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x213a5622380 <col:8> 'size_t':'unsigned long long' lvalue ParmVar 0x213a56220d8 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x213a56223e0 <col:15> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x213a56223a0 <col:15> 'int' 0
|   | `-ReturnStmt 0x213a56224b8 <line:856:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x213a56224a0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x213a5622480 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x213a5622458 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x213a5622418 <col:26> 'int' 0
|   |-DoStmt 0x213a5622970 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5622930 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5622918 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a56227b8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a5622798 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a5622778 <.//openssl//file_jk/after\test\handshake_helper.c:859:16, col:59> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x213a5622760 <col:16, col:54> 'unsigned long long' <IntegralCast>
|   | |   |     | `-CallExpr 0x213a56226e0 <col:16, col:54> 'int'
|   | |   |     |   |-ImplicitCastExpr 0x213a56226c8 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |   |     |   | `-DeclRefExpr 0x213a56225d0 <col:16> 'int ()' Function 0x213a5622508 'OPENSSL_strnlen' 'int ()'
|   | |   |     |   |-CStyleCastExpr 0x213a5622680 <col:32, col:48> 'const char *' <BitCast>
|   | |   |     |   | `-ImplicitCastExpr 0x213a5622668 <col:45, col:48> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   |     |   |   `-ParenExpr 0x213a5622648 <col:45, col:48> 'const unsigned char *' lvalue
|   | |   |     |   |     `-DeclRefExpr 0x213a56225f0 <col:46> 'const unsigned char *' lvalue ParmVar 0x213a5622060 'in' 'const unsigned char *'
|   | |   |     |   `-ImplicitCastExpr 0x213a5622710 <col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x213a56226a8 <col:51> 'size_t':'unsigned long long' lvalue ParmVar 0x213a56220d8 'len' 'size_t':'unsigned long long'
|   | |   |     `-ImplicitCastExpr 0x213a5622748 <col:59> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x213a5622728 <col:59> 'size_t':'unsigned long long' lvalue ParmVar 0x213a56220d8 'len' 'size_t':'unsigned long long'
|   | |   `-CompoundStmt 0x213a5622900 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a56228d8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a56228c0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a56227f0 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a56228a8 <col:28, <scratch space>:23:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5622890 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5622848 <col:1> 'char [47]' lvalue "OPENSSL_strnlen((const char*)(in), len) == len"
|   | `-IntegerLiteral 0x213a5622948 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5622990 <.//openssl//file_jk/after\test\handshake_helper.c:859:63>
|   |-BinaryOperator 0x213a5622c30 <line:860:5, col:49> 'char *' '='
|   | |-DeclRefExpr 0x213a5622998 <col:5> 'char *' lvalue Var 0x213a5622300 'ret' 'char *'
|   | `-ImplicitCastExpr 0x213a5622c18 <col:11, col:49> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x213a5622bd0 <col:11, col:49> 'int'
|   |     |-ImplicitCastExpr 0x213a5622bb8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x213a5622ac0 <col:11> 'int ()' Function 0x213a56229f8 'OPENSSL_strndup' 'int ()'
|   |     |-CStyleCastExpr 0x213a5622b70 <col:27, col:43> 'const char *' <BitCast>
|   |     | `-ImplicitCastExpr 0x213a5622b58 <col:40, col:43> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-ParenExpr 0x213a5622b38 <col:40, col:43> 'const unsigned char *' lvalue
|   |     |     `-DeclRefExpr 0x213a5622ae0 <col:41> 'const unsigned char *' lvalue ParmVar 0x213a5622060 'in' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x213a5622c00 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5622b98 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x213a56220d8 'len' 'size_t':'unsigned long long'
|   |-DoStmt 0x213a5622ec8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5622e88 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5622e70 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a5622d68 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a5622d48 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a5622d28 <.//openssl//file_jk/after\test\handshake_helper.c:861:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x213a5622cf8 <.//openssl//file_jk/after\test\handshake_helper.c:861:16> 'char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x213a5622c50 <col:16> 'char *' lvalue Var 0x213a5622300 'ret' 'char *'
|   | |   |     `-ImplicitCastExpr 0x213a5622d10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x213a5622cd8 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x213a5622cb0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x213a5622c70 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x213a5622e58 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5622e30 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5622e18 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5622da0 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5622e00 <col:28, <scratch space>:24:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5622de8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5622dc0 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x213a5622ea0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5622ee8 <.//openssl//file_jk/after\test\handshake_helper.c:861:28>
|   `-ReturnStmt 0x213a5622f28 <line:862:5, col:12>
|     `-ImplicitCastExpr 0x213a5622f10 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x213a5622ef0 <col:12> 'char *' lvalue Var 0x213a5622300 'ret' 'char *'
|-FunctionDecl 0x213a561d408 <line:878:1, line:1077:1> line:878:26 invalid do_handshake_internal 'HANDSHAKE_RESULT *(int *, int *, int *, const SSL_TEST_CTX *, const SSL_TEST_EXTRA_CONF *, int *, int **)' static
| |-ParmVarDecl 0x213a561cf60 <line:879:5, col:14> col:14 invalid server_ctx 'int *'
| |-ParmVarDecl 0x213a561cfe0 <col:26, col:35> col:35 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x213a561d060 <col:48, col:57> col:57 invalid client_ctx 'int *'
| |-ParmVarDecl 0x213a561d0d8 <line:880:5, col:25> col:25 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x213a561d150 <col:35, col:62> col:62 used extra 'const SSL_TEST_EXTRA_CONF *'
| |-ParmVarDecl 0x213a561d1d0 <line:881:5, col:18> col:18 invalid session_in 'int *'
| |-ParmVarDecl 0x213a561d288 <col:30, col:44> col:44 invalid session_out 'int **'
| `-CompoundStmt 0x213a5626a80 <line:882:1, line:1077:1>
|   |-DeclStmt 0x213a561d600 <line:883:5, col:24>
|   | |-VarDecl 0x213a561d508 <col:5, col:10> col:10 used server 'PEER':'struct peer_st'
|   | `-VarDecl 0x213a561d580 <col:5, col:18> col:18 used client 'PEER':'struct peer_st'
|   |-DeclStmt 0x213a561d720 <line:885:5, col:53>
|   | |-VarDecl 0x213a561d628 <col:5, col:23> col:23 used server_ex_data 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | `-VarDecl 0x213a561d6a0 <col:5, col:39> col:39 used client_ex_data 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-DeclStmt 0x213a561d8c0 <line:886:5, col:64>
|   | |-VarDecl 0x213a561d748 <col:5, col:14> col:14 used client_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   | |-VarDecl 0x213a561d7c0 <col:5, col:31> col:31 used server_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   | `-VarDecl 0x213a561d838 <col:5, col:48> col:48 used server2_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   |-DeclStmt 0x213a561da00 <line:887:5, col:51>
|   | `-VarDecl 0x213a561d8e8 <col:5, col:50> col:23 used ret 'HANDSHAKE_RESULT *' cinit
|   |   `-CallExpr 0x213a561d9e0 <col:29, col:50> 'HANDSHAKE_RESULT *'
|   |     `-ImplicitCastExpr 0x213a561d9c8 <col:29> 'HANDSHAKE_RESULT *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x213a561d950 <col:29> 'HANDSHAKE_RESULT *(void)' Function 0x213a5568588 'HANDSHAKE_RESULT_new' 'HANDSHAKE_RESULT *(void)'
|   |-DeclStmt 0x213a561db80 <line:888:5, col:47>
|   | |-VarDecl 0x213a561da30 <col:5, col:23> col:9 used client_turn 'int' cinit
|   | | `-IntegerLiteral 0x213a561da98 <col:23> 'int' 1
|   | `-VarDecl 0x213a561dad8 <col:5, col:46> col:26 used client_turn_count 'int' cinit
|   |   `-IntegerLiteral 0x213a561db40 <col:46> 'int' 0
|   |-DeclStmt 0x213a561dc48 <line:889:5, col:38>
|   | `-VarDecl 0x213a561dba8 <col:5, col:29> col:21 used phase 'connect_phase_t':'connect_phase_t' cinit
|   |   `-ImplicitCastExpr 0x213a561dc30 <col:29> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|   |     `-DeclRefExpr 0x213a561dc10 <col:29> 'int' EnumConstant 0x213a55816c0 'HANDSHAKE' 'int'
|   |-DeclStmt 0x213a561dd10 <line:890:5, col:48>
|   | `-VarDecl 0x213a561dc70 <col:5, col:33> col:24 used status 'handshake_status_t':'handshake_status_t' cinit
|   |   `-ImplicitCastExpr 0x213a561dcf8 <col:33> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |     `-DeclRefExpr 0x213a561dcd8 <col:33> 'int' EnumConstant 0x213a561f2c0 'HANDSHAKE_RETRY' 'int'
|   |-DeclStmt 0x213a561de48 <line:891:5, col:37>
|   | `-VarDecl 0x213a561dd40 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\test\handshake_helper.c:891:26 used tick 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x213a561de30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x213a561de10 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x213a561dde8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x213a561dda8 <col:26> 'int' 0
|   |-DeclStmt 0x213a561df18 <.//openssl//file_jk/after\test\handshake_helper.c:892:5, col:24>
|   | `-VarDecl 0x213a561de70 <col:5, col:23> col:12 used tick_len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x213a561df00 <col:23> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x213a561ded8 <col:23> 'int' 0
|   |-DeclStmt 0x213a5620110 <line:894:5, col:38>
|   | `-VarDecl 0x213a5620008 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\test\handshake_helper.c:894:26 used proto 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x213a56200f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x213a56200d8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x213a56200b0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x213a5620070 <col:26> 'int' 0
|   |-DeclStmt 0x213a56201e8 <.//openssl//file_jk/after\test\handshake_helper.c:896:5, col:31>
|   | `-VarDecl 0x213a5620140 <col:5, col:30> col:18 used proto_len 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x213a56201d0 <col:30> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x213a56201a8 <col:30> 'int' 0
|   |-CallExpr 0x213a5620340 <line:899:5, col:56> 'void *'
|   | |-ImplicitCastExpr 0x213a5620328 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5620200 <col:5> 'void *(void *, int, unsigned long long)' Function 0x213a5526538 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x213a5620378 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x213a5620258 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x213a5620220 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x213a561d7c0 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x213a5620270 <col:30> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x213a56202d8 <col:33, col:55> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x213a56202b8 <col:39, col:55> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x213a5620298 <col:40> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x213a561d7c0 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x213a5620508 <line:900:5, col:58> 'void *'
|   | |-ImplicitCastExpr 0x213a56204f0 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a56203f8 <col:5> 'void *(void *, int, unsigned long long)' Function 0x213a5526538 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x213a5620540 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x213a5620450 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x213a5620418 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x213a561d838 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x213a5620468 <col:31> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x213a56204d0 <col:34, col:57> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x213a56204b0 <col:40, col:57> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x213a5620490 <col:41> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x213a561d838 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x213a5620668 <line:901:5, col:56> 'void *'
|   | |-ImplicitCastExpr 0x213a5620650 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5620558 <col:5> 'void *(void *, int, unsigned long long)' Function 0x213a5526538 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x213a56206a0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x213a56205b0 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x213a5620578 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x213a561d748 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x213a56205c8 <col:30> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x213a5620630 <col:33, col:55> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x213a5620610 <col:39, col:55> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x213a56205f0 <col:40> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x213a561d748 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x213a56207c8 <line:902:5, col:38> 'void *'
|   | |-ImplicitCastExpr 0x213a56207b0 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a56206b8 <col:5> 'void *(void *, int, unsigned long long)' Function 0x213a5526538 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x213a5620800 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x213a5620710 <col:12, col:13> 'PEER *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x213a56206d8 <col:13> 'PEER':'struct peer_st' lvalue Var 0x213a561d508 'server' 'PEER':'struct peer_st'
|   | |-IntegerLiteral 0x213a5620728 <col:21> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x213a5620790 <col:24, col:37> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x213a5620770 <col:30, col:37> 'PEER':'struct peer_st' lvalue
|   |     `-DeclRefExpr 0x213a5620750 <col:31> 'PEER':'struct peer_st' lvalue Var 0x213a561d508 'server' 'PEER':'struct peer_st' non_odr_use_unevaluated
|   |-CallExpr 0x213a5620928 <line:903:5, col:38> 'void *'
|   | |-ImplicitCastExpr 0x213a5620910 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5620818 <col:5> 'void *(void *, int, unsigned long long)' Function 0x213a5526538 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x213a5620960 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x213a5620870 <col:12, col:13> 'PEER *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x213a5620838 <col:13> 'PEER':'struct peer_st' lvalue Var 0x213a561d580 'client' 'PEER':'struct peer_st'
|   | |-IntegerLiteral 0x213a5620888 <col:21> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x213a56208f0 <col:24, col:37> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x213a56208d0 <col:30, col:37> 'PEER':'struct peer_st' lvalue
|   |     `-DeclRefExpr 0x213a56208b0 <col:31> 'PEER':'struct peer_st' lvalue Var 0x213a561d580 'client' 'PEER':'struct peer_st' non_odr_use_unevaluated
|   |-BinaryOperator 0x213a5620c40 <line:912:5, col:62> 'int' '='
|   | |-MemberExpr 0x213a5620b20 <col:5, col:12> 'int' lvalue .bytes_to_write 0x213a557dd98
|   | | `-DeclRefExpr 0x213a5620b00 <col:5> 'PEER':'struct peer_st' lvalue Var 0x213a561d508 'server' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x213a5620c20 <col:29, col:62> 'int' '='
|   |   |-MemberExpr 0x213a5620b70 <col:29, col:36> 'int' lvalue .bytes_to_read 0x213a557de08
|   |   | `-DeclRefExpr 0x213a5620b50 <col:29> 'PEER':'struct peer_st' lvalue Var 0x213a561d580 'client' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x213a5620c08 <col:52, col:62> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x213a5620bd8 <col:52, col:62> 'const int' lvalue ->app_data_size 0x213a55c61c0
|   |       `-ImplicitCastExpr 0x213a5620bc0 <col:52> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x213a5620ba0 <col:52> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a561d0d8 'test_ctx' 'const SSL_TEST_CTX *'
|   |-BinaryOperator 0x213a5620da0 <line:913:5, col:62> 'int' '='
|   | |-MemberExpr 0x213a5620c80 <col:5, col:12> 'int' lvalue .bytes_to_write 0x213a557dd98
|   | | `-DeclRefExpr 0x213a5620c60 <col:5> 'PEER':'struct peer_st' lvalue Var 0x213a561d580 'client' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x213a5620d80 <col:29, col:62> 'int' '='
|   |   |-MemberExpr 0x213a5620cd0 <col:29, col:36> 'int' lvalue .bytes_to_read 0x213a557de08
|   |   | `-DeclRefExpr 0x213a5620cb0 <col:29> 'PEER':'struct peer_st' lvalue Var 0x213a561d508 'server' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x213a5620d68 <col:52, col:62> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x213a5620d38 <col:52, col:62> 'const int' lvalue ->app_data_size 0x213a55c61c0
|   |       `-ImplicitCastExpr 0x213a5620d20 <col:52> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x213a5620d00 <col:52> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a561d0d8 'test_ctx' 'const SSL_TEST_CTX *'
|   |-IfStmt 0x213a5621510 <line:916:5, line:920:5>
|   | |-OpaqueValueExpr 0x213a56214f8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x213a56214c8 <line:916:29, line:920:5>
|   |   |-DoStmt 0x213a5621198 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x213a5621158 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x213a5621140 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x213a5621128 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x213a5621110 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x213a56210e8 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x213a56210d0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x213a5620ff8 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x213a56210b8 <col:28, <scratch space>:25:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x213a56210a0 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x213a5621058 <col:1> 'char [44]' lvalue "SSL_CTX_add_session(server_ctx, session_in)"
|   |   | `-IntegerLiteral 0x213a5621170 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x213a56211b8 <.//openssl//file_jk/after\test\handshake_helper.c:918:64>
|   |   |-DoStmt 0x213a56214a0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x213a5621460 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x213a5621448 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x213a5621430 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x213a5621418 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x213a56213f0 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x213a56213d8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x213a5621310 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x213a56213c0 <col:28, <scratch space>:26:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x213a56213a8 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x213a5621368 <col:1> 'char [40]' lvalue "SSL_set_session(client.ssl, session_in)"
|   |   | `-IntegerLiteral 0x213a5621478 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x213a56214c0 <.//openssl//file_jk/after\test\handshake_helper.c:919:60>
|   |-CallExpr 0x213a5621638 <line:922:5, col:54> 'void *'
|   | |-ImplicitCastExpr 0x213a5621620 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5621528 <col:5> 'void *(void *, int, unsigned long long)' Function 0x213a5526538 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x213a5621670 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x213a5621580 <col:12, col:13> 'HANDSHAKE_EX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x213a5621548 <col:13> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d628 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | |-IntegerLiteral 0x213a5621598 <col:29> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x213a5621600 <col:32, col:53> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x213a56215e0 <col:38, col:53> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue
|   |     `-DeclRefExpr 0x213a56215c0 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d628 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x213a5621808 <line:923:5, col:54> 'void *'
|   | |-ImplicitCastExpr 0x213a56217f0 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a56216f8 <col:5> 'void *(void *, int, unsigned long long)' Function 0x213a5526538 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x213a5621840 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x213a5621750 <col:12, col:13> 'HANDSHAKE_EX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x213a5621718 <col:13> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d6a0 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | |-IntegerLiteral 0x213a5621768 <col:29> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x213a56217d0 <col:32, col:53> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x213a56217b0 <col:38, col:53> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue
|   |     `-DeclRefExpr 0x213a5621790 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d6a0 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' non_odr_use_unevaluated
|   |-BinaryOperator 0x213a5621910 <line:925:5, col:19> 'ssl_test_result_t':'ssl_test_result_t' '='
|   | |-MemberExpr 0x213a56218a8 <col:5, col:10> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x213a55c44b0
|   | | `-ImplicitCastExpr 0x213a5621890 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5621858 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x213a56218f8 <col:19> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |   `-DeclRefExpr 0x213a56218d8 <col:19> 'int' EnumConstant 0x213a55c29a8 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |-DoStmt 0x213a5621eb0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5621e70 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5621e58 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a5621e40 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a5621e28 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5621e00 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5621de8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5621d28 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5621dd0 <col:28, <scratch space>:27:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5621db8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5621d88 <col:1> 'char [25]' lvalue "client_to_server != NULL"
|   | `-IntegerLiteral 0x213a5621e88 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5621ed0 <.//openssl//file_jk/after\test\handshake_helper.c:930:41>
|   |-DoStmt 0x213a56230e8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a56230a8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5623090 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a5623078 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a5623060 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5623038 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5623020 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5621f80 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5623008 <col:28, <scratch space>:28:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5622ff0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5622fc0 <col:1> 'char [25]' lvalue "server_to_client != NULL"
|   | `-IntegerLiteral 0x213a56230c0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5623108 <.//openssl//file_jk/after\test\handshake_helper.c:931:41>
|   |-DoStmt 0x213a5623908 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a56238c8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a56238b0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a5623898 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a5623880 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5623858 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5623840 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5623778 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5623828 <col:28, <scratch space>:29:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5623810 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a56237d8 <col:1> 'char [33]' lvalue "BIO_up_ref(server_to_client) > 0"
|   | `-IntegerLiteral 0x213a56238e0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5623928 <.//openssl//file_jk/after\test\handshake_helper.c:942:49>
|   |-DoStmt 0x213a5623ae8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5623aa8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5623a90 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a5623a78 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a5623a60 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5623a38 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5623a20 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5623998 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5623a08 <col:28, <scratch space>:30:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a56239f0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a56239b8 <col:1> 'char [33]' lvalue "BIO_up_ref(client_to_server) > 0"
|   | `-IntegerLiteral 0x213a5623ac0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5623b08 <.//openssl//file_jk/after\test\handshake_helper.c:943:49>
|   |-BinaryOperator 0x213a5623ed8 <line:946:5, col:70> 'int' '='
|   | |-DeclRefExpr 0x213a5623b50 <col:5> 'int' lvalue Var 0x213a556a3d8 'ex_data_idx' 'int'
|   | `-CallExpr 0x213a5623e78 <col:19, col:70> 'int'
|   |   |-ImplicitCastExpr 0x213a5623e60 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x213a5623c60 <col:19> 'int ()' Function 0x213a5623b98 'SSL_get_ex_new_index' 'int ()'
|   |   |-IntegerLiteral 0x213a5623c80 <col:40> 'int' 0
|   |   |-ImplicitCastExpr 0x213a5623ec0 <col:43> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x213a5623ca8 <col:43> 'char [8]' lvalue "ex data"
|   |   |-ParenExpr 0x213a5623d30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x213a5623d08 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x213a5623cc8 <col:26> 'int' 0
|   |   |-ParenExpr 0x213a5623db8 <col:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x213a5623d90 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x213a5623d50 <col:26> 'int' 0
|   |   `-ParenExpr 0x213a5623e40 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x213a5623e18 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x213a5623dd8 <col:26> 'int' 0
|   |-DoStmt 0x213a5624118 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a56240d8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a56240c0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x213a5623f98 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x213a5623f78 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x213a5623f58 <.//openssl//file_jk/after\test\handshake_helper.c:947:16, col:31> 'int' '>='
|   | |   |     |-ImplicitCastExpr 0x213a5623f40 <col:16> 'int' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x213a5623ef8 <col:16> 'int' lvalue Var 0x213a556a3d8 'ex_data_idx' 'int'
|   | |   |     `-IntegerLiteral 0x213a5623f18 <col:31> 'int' 0
|   | |   `-CompoundStmt 0x213a56240a8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5624080 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5624068 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5623ff0 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5624050 <col:28, <scratch space>:31:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5624038 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5624010 <col:1> 'char [17]' lvalue "ex_data_idx >= 0"
|   | `-IntegerLiteral 0x213a56240f0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5624138 <.//openssl//file_jk/after\test\handshake_helper.c:947:33>
|   |-DoStmt 0x213a5624480 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a5624440 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a5624428 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a5624410 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a56243f8 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a56243d0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a56243b8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5624310 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a56243a0 <col:28, <scratch space>:32:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5624388 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a5624330 <col:1> 'char [63]' lvalue "SSL_set_ex_data(server.ssl, ex_data_idx, &server_ex_data) == 1"
|   | `-IntegerLiteral 0x213a5624458 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a56244a0 <.//openssl//file_jk/after\test\handshake_helper.c:949:79>
|   |-DoStmt 0x213a56246f8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x213a56246b8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x213a56246a0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x213a5624688 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x213a5624670 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x213a5624648 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x213a5624630 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x213a5624588 <col:13> 'int ()' Function 0x213a5568b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x213a5624618 <col:28, <scratch space>:33:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x213a5624600 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x213a56245a8 <col:1> 'char [63]' lvalue "SSL_set_ex_data(client.ssl, ex_data_idx, &client_ex_data) == 1"
|   | `-IntegerLiteral 0x213a56246d0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x213a5624718 <.//openssl//file_jk/after\test\handshake_helper.c:950:79>
|   |-BinaryOperator 0x213a5624988 <line:955:5, col:37> 'peer_status_t':'peer_status_t' '='
|   | |-MemberExpr 0x213a56248b0 <col:5, col:12> 'peer_status_t':'peer_status_t' lvalue .status 0x213a557de90
|   | | `-DeclRefExpr 0x213a5624890 <col:5> 'PEER':'struct peer_st' lvalue Var 0x213a561d580 'client' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x213a5624968 <col:21, col:37> 'peer_status_t':'peer_status_t' '='
|   |   |-MemberExpr 0x213a5624900 <col:21, col:28> 'peer_status_t':'peer_status_t' lvalue .status 0x213a557de90
|   |   | `-DeclRefExpr 0x213a56248e0 <col:21> 'PEER':'struct peer_st' lvalue Var 0x213a561d508 'server' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x213a5624950 <col:37> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |     `-DeclRefExpr 0x213a5624930 <col:37> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   |-ForStmt 0x213a561ed98 <line:965:5, line:1018:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x213a561ed78 <line:965:13, line:1018:5>
|   |   |-IfStmt 0x213a561e058 <line:966:9, line:974:9> has_else
|   |   | |-ImplicitCastExpr 0x213a56249e0 <line:966:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x213a56249a8 <col:13> 'int' lvalue Var 0x213a561da30 'client_turn' 'int'
|   |   | |-CompoundStmt 0x213a5624da8 <col:26, line:970:9>
|   |   | | |-CallExpr 0x213a5624b20 <line:967:13, col:53> 'void'
|   |   | | | |-ImplicitCastExpr 0x213a5624b08 <col:13> 'void (*)(const SSL_TEST_CTX *, PEER *, connect_phase_t)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x213a56249f8 <col:13> 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' Function 0x213a5583838 'do_connect_step' 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)'
|   |   | | | |-ImplicitCastExpr 0x213a5624b58 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x213a5624a18 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a561d0d8 'test_ctx' 'const SSL_TEST_CTX *'
|   |   | | | |-UnaryOperator 0x213a5624a58 <col:39, col:40> 'PEER *' prefix '&' cannot overflow
|   |   | | | | `-DeclRefExpr 0x213a5624a38 <col:40> 'PEER':'struct peer_st' lvalue Var 0x213a561d580 'client' 'PEER':'struct peer_st'
|   |   | | | `-ImplicitCastExpr 0x213a5624b70 <col:48> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x213a5624a70 <col:48> 'connect_phase_t':'connect_phase_t' lvalue Var 0x213a561dba8 'phase' 'connect_phase_t':'connect_phase_t'
|   |   | | `-BinaryOperator 0x213a5624d88 <line:968:13, line:969:63> 'handshake_status_t':'handshake_status_t' '='
|   |   | |   |-DeclRefExpr 0x213a5624b88 <line:968:13> 'handshake_status_t':'handshake_status_t' lvalue Var 0x213a561dc70 'status' 'handshake_status_t':'handshake_status_t'
|   |   | |   `-CallExpr 0x213a5624d20 <col:22, line:969:63> 'handshake_status_t':'handshake_status_t'
|   |   | |     |-ImplicitCastExpr 0x213a5624d08 <line:968:22> 'handshake_status_t (*)(peer_status_t, peer_status_t, int)' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x213a5624bc0 <col:22> 'handshake_status_t (peer_status_t, peer_status_t, int)' Function 0x213a561f688 'handshake_status' 'handshake_status_t (peer_status_t, peer_status_t, int)'
|   |   | |     |-ImplicitCastExpr 0x213a5624d58 <col:39, col:46> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   | |     | `-MemberExpr 0x213a5624c00 <col:39, col:46> 'peer_status_t':'peer_status_t' lvalue .status 0x213a557de90
|   |   | |     |   `-DeclRefExpr 0x213a5624be0 <col:39> 'PEER':'struct peer_st' lvalue Var 0x213a561d580 'client' 'PEER':'struct peer_st'
|   |   | |     |-ImplicitCastExpr 0x213a5624d70 <col:54, col:61> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   | |     | `-MemberExpr 0x213a5624c50 <col:54, col:61> 'peer_status_t':'peer_status_t' lvalue .status 0x213a557de90
|   |   | |     |   `-DeclRefExpr 0x213a5624c30 <col:54> 'PEER':'struct peer_st' lvalue Var 0x213a561d508 'server' 'PEER':'struct peer_st'
|   |   | |     `-IntegerLiteral 0x213a5624c80 <line:969:39> 'int' 1
|   |   | `-CompoundStmt 0x213a561e038 <line:970:16, line:974:9>
|   |   |   |-CallExpr 0x213a5624e78 <line:971:13, col:53> 'void'
|   |   |   | |-ImplicitCastExpr 0x213a5624e60 <col:13> 'void (*)(const SSL_TEST_CTX *, PEER *, connect_phase_t)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x213a5624dc8 <col:13> 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' Function 0x213a5583838 'do_connect_step' 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)'
|   |   |   | |-ImplicitCastExpr 0x213a5624eb0 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x213a5624de8 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a561d0d8 'test_ctx' 'const SSL_TEST_CTX *'
|   |   |   | |-UnaryOperator 0x213a5624e28 <col:39, col:40> 'PEER *' prefix '&' cannot overflow
|   |   |   | | `-DeclRefExpr 0x213a5624e08 <col:40> 'PEER':'struct peer_st' lvalue Var 0x213a561d508 'server' 'PEER':'struct peer_st'
|   |   |   | `-ImplicitCastExpr 0x213a5624ec8 <col:48> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x213a5624e40 <col:48> 'connect_phase_t':'connect_phase_t' lvalue Var 0x213a561dba8 'phase' 'connect_phase_t':'connect_phase_t'
|   |   |   `-BinaryOperator 0x213a561e018 <line:972:13, line:973:63> 'handshake_status_t':'handshake_status_t' '='
|   |   |     |-DeclRefExpr 0x213a5624ee0 <line:972:13> 'handshake_status_t':'handshake_status_t' lvalue Var 0x213a561dc70 'status' 'handshake_status_t':'handshake_status_t'
|   |   |     `-CallExpr 0x213a561dfb0 <col:22, line:973:63> 'handshake_status_t':'handshake_status_t'
|   |   |       |-ImplicitCastExpr 0x213a561df98 <line:972:22> 'handshake_status_t (*)(peer_status_t, peer_status_t, int)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x213a5624f00 <col:22> 'handshake_status_t (peer_status_t, peer_status_t, int)' Function 0x213a561f688 'handshake_status' 'handshake_status_t (peer_status_t, peer_status_t, int)'
|   |   |       |-ImplicitCastExpr 0x213a561dfe8 <col:39, col:46> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |       | `-MemberExpr 0x213a5624f40 <col:39, col:46> 'peer_status_t':'peer_status_t' lvalue .status 0x213a557de90
|   |   |       |   `-DeclRefExpr 0x213a5624f20 <col:39> 'PEER':'struct peer_st' lvalue Var 0x213a561d508 'server' 'PEER':'struct peer_st'
|   |   |       |-ImplicitCastExpr 0x213a561e000 <col:54, col:61> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |       | `-MemberExpr 0x213a5624f90 <col:54, col:61> 'peer_status_t':'peer_status_t' lvalue .status 0x213a557de90
|   |   |       |   `-DeclRefExpr 0x213a5624f70 <col:54> 'PEER':'struct peer_st' lvalue Var 0x213a561d580 'client' 'PEER':'struct peer_st'
|   |   |       `-IntegerLiteral 0x213a561df70 <line:973:39> 'int' 0
|   |   `-SwitchStmt 0x213a561e0d0 <line:976:9, line:1017:9>
|   |     |-ImplicitCastExpr 0x213a561e0b8 <line:976:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x213a561e0a0 <col:17> 'handshake_status_t':'handshake_status_t' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x213a561e080 <col:17> 'handshake_status_t':'handshake_status_t' lvalue Var 0x213a561dc70 'status' 'handshake_status_t':'handshake_status_t'
|   |     `-CompoundStmt 0x213a561ed08 <col:25, line:1017:9>
|   |       |-CaseStmt 0x213a561e128 <line:977:9, line:978:33>
|   |       | |-ConstantExpr 0x213a561e110 <line:977:14> 'int'
|   |       | | `-DeclRefExpr 0x213a561e0f0 <col:14> 'int' EnumConstant 0x213a561f160 'HANDSHAKE_SUCCESS' 'int'
|   |       | `-BinaryOperator 0x213a561e1b0 <line:978:13, col:33> 'int' '='
|   |       |   |-DeclRefExpr 0x213a561e150 <col:13> 'int' lvalue Var 0x213a561dad8 'client_turn_count' 'int'
|   |       |   `-IntegerLiteral 0x213a561e188 <col:33> 'int' 0
|   |       |-BinaryOperator 0x213a561e320 <line:979:13, col:47> 'connect_phase_t':'connect_phase_t' '='
|   |       | |-DeclRefExpr 0x213a561e1d0 <col:13> 'connect_phase_t':'connect_phase_t' lvalue Var 0x213a561dba8 'phase' 'connect_phase_t':'connect_phase_t'
|   |       | `-CallExpr 0x213a561e2c0 <col:21, col:47> 'connect_phase_t':'connect_phase_t'
|   |       |   |-ImplicitCastExpr 0x213a561e2a8 <col:21> 'connect_phase_t (*)(const SSL_TEST_CTX *, connect_phase_t)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x213a561e1f0 <col:21> 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)' Function 0x213a5581be8 'next_phase' 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)'
|   |       |   |-ImplicitCastExpr 0x213a561e2f0 <col:32> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x213a561e210 <col:32> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a561d0d8 'test_ctx' 'const SSL_TEST_CTX *'
|   |       |   `-ImplicitCastExpr 0x213a561e308 <col:42> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x213a561e230 <col:42> 'connect_phase_t':'connect_phase_t' lvalue Var 0x213a561dba8 'phase' 'connect_phase_t':'connect_phase_t'
|   |       |-IfStmt 0x213a561e6c8 <line:980:13, line:993:13> has_else
|   |       | |-BinaryOperator 0x213a561e3b0 <line:980:17, col:26> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x213a561e398 <col:17> 'int' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x213a561e380 <col:17> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x213a561e340 <col:17> 'connect_phase_t':'connect_phase_t' lvalue Var 0x213a561dba8 'phase' 'connect_phase_t':'connect_phase_t'
|   |       | | `-DeclRefExpr 0x213a561e360 <col:26> 'int' EnumConstant 0x213a55818d0 'CONNECTION_DONE' 'int'
|   |       | |-CompoundStmt 0x213a561e4f8 <col:43, line:983:13>
|   |       | | |-BinaryOperator 0x213a561e470 <line:981:17, col:31> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       | | | |-MemberExpr 0x213a561e408 <col:17, col:22> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x213a55c44b0
|   |       | | | | `-ImplicitCastExpr 0x213a561e3f0 <col:17> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       | | | |   `-DeclRefExpr 0x213a561e3d0 <col:17> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   |       | | | `-ImplicitCastExpr 0x213a561e458 <col:31> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       | | |   `-DeclRefExpr 0x213a561e438 <col:31> 'int' EnumConstant 0x213a55c28a0 'SSL_TEST_SUCCESS' 'int'
|   |       | | `-GotoStmt 0x213a561e4e0 <line:982:17, col:22> 'err' 0x213a561e490
|   |       | `-CompoundStmt 0x213a561e6a0 <line:983:20, line:993:13>
|   |       |   |-BinaryOperator 0x213a561e610 <line:984:17, col:49> 'peer_status_t':'peer_status_t' '='
|   |       |   | |-MemberExpr 0x213a561e538 <col:17, col:24> 'peer_status_t':'peer_status_t' lvalue .status 0x213a557de90
|   |       |   | | `-DeclRefExpr 0x213a561e518 <col:17> 'PEER':'struct peer_st' lvalue Var 0x213a561d580 'client' 'PEER':'struct peer_st'
|   |       |   | `-BinaryOperator 0x213a561e5f0 <col:33, col:49> 'peer_status_t':'peer_status_t' '='
|   |       |   |   |-MemberExpr 0x213a561e588 <col:33, col:40> 'peer_status_t':'peer_status_t' lvalue .status 0x213a557de90
|   |       |   |   | `-DeclRefExpr 0x213a561e568 <col:33> 'PEER':'struct peer_st' lvalue Var 0x213a561d508 'server' 'PEER':'struct peer_st'
|   |       |   |   `-ImplicitCastExpr 0x213a561e5d8 <col:49> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   |     `-DeclRefExpr 0x213a561e5b8 <col:49> 'int' EnumConstant 0x213a557d918 'PEER_RETRY' 'int'
|   |       |   |-BinaryOperator 0x213a561e678 <line:991:17, col:31> 'int' '='
|   |       |   | |-DeclRefExpr 0x213a561e630 <col:17> 'int' lvalue Var 0x213a561da30 'client_turn' 'int'
|   |       |   | `-IntegerLiteral 0x213a561e650 <col:31> 'int' 1
|   |       |   `-BreakStmt 0x213a561e698 <line:992:17>
|   |       |-CaseStmt 0x213a561e728 <line:994:9, line:995:27>
|   |       | |-ConstantExpr 0x213a561e710 <line:994:14> 'int'
|   |       | | `-DeclRefExpr 0x213a561e6f0 <col:14> 'int' EnumConstant 0x213a561f1b8 'CLIENT_ERROR' 'int'
|   |       | `-BinaryOperator 0x213a561e7f0 <line:995:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x213a561e788 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x213a55c44b0
|   |       |   | `-ImplicitCastExpr 0x213a561e770 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x213a561e750 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x213a561e7d8 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x213a561e7b8 <col:27> 'int' EnumConstant 0x213a55c2950 'SSL_TEST_CLIENT_FAIL' 'int'
|   |       |-GotoStmt 0x213a561e810 <line:996:13, col:18> 'err' 0x213a561e490
|   |       |-CaseStmt 0x213a561e860 <line:997:9, line:998:27>
|   |       | |-ConstantExpr 0x213a561e848 <line:997:14> 'int'
|   |       | | `-DeclRefExpr 0x213a561e828 <col:14> 'int' EnumConstant 0x213a561f210 'SERVER_ERROR' 'int'
|   |       | `-BinaryOperator 0x213a561e928 <line:998:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x213a561e8c0 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x213a55c44b0
|   |       |   | `-ImplicitCastExpr 0x213a561e8a8 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x213a561e888 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x213a561e910 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x213a561e8f0 <col:27> 'int' EnumConstant 0x213a55c28f8 'SSL_TEST_SERVER_FAIL' 'int'
|   |       |-GotoStmt 0x213a561e948 <line:999:13, col:18> 'err' 0x213a561e490
|   |       |-CaseStmt 0x213a561e998 <line:1000:9, line:1001:27>
|   |       | |-ConstantExpr 0x213a561e980 <line:1000:14> 'int'
|   |       | | `-DeclRefExpr 0x213a561e960 <col:14> 'int' EnumConstant 0x213a561f268 'INTERNAL_ERROR' 'int'
|   |       | `-BinaryOperator 0x213a561ea60 <line:1001:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x213a561e9f8 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x213a55c44b0
|   |       |   | `-ImplicitCastExpr 0x213a561e9e0 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x213a561e9c0 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x213a561ea48 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x213a561ea28 <col:27> 'int' EnumConstant 0x213a55c29a8 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |       |-GotoStmt 0x213a561ea80 <line:1002:13, col:18> 'err' 0x213a561e490
|   |       |-CaseStmt 0x213a561ead0 <line:1003:9, line:1012:13>
|   |       | |-ConstantExpr 0x213a561eab8 <line:1003:14> 'int'
|   |       | | `-DeclRefExpr 0x213a561ea98 <col:14> 'int' EnumConstant 0x213a561f2c0 'HANDSHAKE_RETRY' 'int'
|   |       | `-IfStmt 0x213a561ec70 <line:1004:13, line:1012:13>
|   |       |   |-BinaryOperator 0x213a561eb58 <line:1004:17, col:40> 'int' '>='
|   |       |   | |-UnaryOperator 0x213a561eb18 <col:17, col:34> 'int' postfix '++'
|   |       |   | | `-DeclRefExpr 0x213a561eaf8 <col:17> 'int' lvalue Var 0x213a561dad8 'client_turn_count' 'int'
|   |       |   | `-IntegerLiteral 0x213a561eb30 <col:40> 'int' 2000
|   |       |   `-CompoundStmt 0x213a561ec50 <col:46, line:1012:13>
|   |       |     |-BinaryOperator 0x213a561ec18 <line:1010:17, col:31> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |     | |-MemberExpr 0x213a561ebb0 <col:17, col:22> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x213a55c44b0
|   |       |     | | `-ImplicitCastExpr 0x213a561eb98 <col:17> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |     | |   `-DeclRefExpr 0x213a561eb78 <col:17> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   |       |     | `-ImplicitCastExpr 0x213a561ec00 <col:31> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     |   `-DeclRefExpr 0x213a561ebe0 <col:31> 'int' EnumConstant 0x213a55c29a8 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |       |     `-GotoStmt 0x213a561ec38 <line:1011:17, col:22> 'err' 0x213a561e490
|   |       |-CompoundAssignOperator 0x213a561ecd0 <line:1015:13, col:28> 'int' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x213a561ec88 <col:13> 'int' lvalue Var 0x213a561da30 'client_turn' 'int'
|   |       | `-IntegerLiteral 0x213a561eca8 <col:28> 'int' 1
|   |       `-BreakStmt 0x213a561ed00 <line:1016:13>
|   |-LabelStmt 0x213a561eec0 <line:1019:2, line:1020:45> 'err'
|   | `-BinaryOperator 0x213a561eea0 <col:5, col:45> 'int' '='
|   |   |-MemberExpr 0x213a561ee08 <col:5, col:10> 'int' lvalue ->server_alert_sent 0x213a55c4670
|   |   | `-ImplicitCastExpr 0x213a561edf0 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x213a561edd0 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   |   `-ImplicitCastExpr 0x213a561ee88 <col:30, col:45> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x213a561ee58 <col:30, col:45> 'int' lvalue .alert_sent 0x213a55676a8
|   |       `-DeclRefExpr 0x213a561ee38 <col:30> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d628 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x213a5627048 <line:1021:5, col:56> 'int' '='
|   | |-MemberExpr 0x213a561ef10 <col:5, col:10> 'int' lvalue ->server_num_fatal_alerts_sent 0x213a55c46e0
|   | | `-ImplicitCastExpr 0x213a561eef8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a561eed8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x213a5627030 <col:41, col:56> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x213a5627000 <col:41, col:56> 'int' lvalue .num_fatal_alerts_sent 0x213a5567718
|   |     `-DeclRefExpr 0x213a561ef40 <col:41> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d628 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x213a5627138 <line:1022:5, col:49> 'int' '='
|   | |-MemberExpr 0x213a56270a0 <col:5, col:10> 'int' lvalue ->server_alert_received 0x213a55c4750
|   | | `-ImplicitCastExpr 0x213a5627088 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5627068 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x213a5627120 <col:34, col:49> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x213a56270f0 <col:34, col:49> 'int' lvalue .alert_received 0x213a5567788
|   |     `-DeclRefExpr 0x213a56270d0 <col:34> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d6a0 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x213a5627228 <line:1023:5, col:45> 'int' '='
|   | |-MemberExpr 0x213a5627190 <col:5, col:10> 'int' lvalue ->client_alert_sent 0x213a55c4520
|   | | `-ImplicitCastExpr 0x213a5627178 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5627158 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x213a5627210 <col:30, col:45> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x213a56271e0 <col:30, col:45> 'int' lvalue .alert_sent 0x213a55676a8
|   |     `-DeclRefExpr 0x213a56271c0 <col:30> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d6a0 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x213a5627318 <line:1024:5, col:56> 'int' '='
|   | |-MemberExpr 0x213a5627280 <col:5, col:10> 'int' lvalue ->client_num_fatal_alerts_sent 0x213a55c4590
|   | | `-ImplicitCastExpr 0x213a5627268 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5627248 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x213a5627300 <col:41, col:56> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x213a56272d0 <col:41, col:56> 'int' lvalue .num_fatal_alerts_sent 0x213a5567718
|   |     `-DeclRefExpr 0x213a56272b0 <col:41> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d6a0 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x213a5627408 <line:1025:5, col:49> 'int' '='
|   | |-MemberExpr 0x213a5627370 <col:5, col:10> 'int' lvalue ->client_alert_received 0x213a55c4600
|   | | `-ImplicitCastExpr 0x213a5627358 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5627338 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x213a56273f0 <col:34, col:49> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x213a56273c0 <col:34, col:49> 'int' lvalue .alert_received 0x213a5567788
|   |     `-DeclRefExpr 0x213a56273a0 <col:34> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d628 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x213a5627738 <line:1028:5, col:38> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x213a56276a0 <col:5, col:10> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x213a55c4898
|   | | `-ImplicitCastExpr 0x213a5627688 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5627668 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x213a5627720 <col:23, col:38> 'ssl_servername_t':'ssl_servername_t' <LValueToRValue>
|   |   `-MemberExpr 0x213a56276f0 <col:23, col:38> 'ssl_servername_t':'ssl_servername_t' lvalue .servername 0x213a5567860
|   |     `-DeclRefExpr 0x213a56276d0 <col:23> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d628 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-IfStmt 0x213a5627df0 <line:1031:5, line:1034:31> has_else
|   | |-BinaryOperator 0x213a5627c50 <line:1031:9, col:37> 'int' '||'
|   | | |-BinaryOperator 0x213a5627b98 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | |-ImplicitCastExpr 0x213a5627b68 <.//openssl//file_jk/after\test\handshake_helper.c:1031:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x213a5627ac0 <col:9> 'const unsigned char *' lvalue Var 0x213a561dd40 'tick' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x213a5627b80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|   | | |   `-ParenExpr 0x213a5627b48 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x213a5627b20 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x213a5627ae0 <col:26> 'int' 0
|   | | `-BinaryOperator 0x213a5627c30 <.//openssl//file_jk/after\test\handshake_helper.c:1031:25, col:37> 'int' '=='
|   | |   |-ImplicitCastExpr 0x213a5627c00 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x213a5627bb8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x213a561de70 'tick_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x213a5627c18 <col:37> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x213a5627bd8 <col:37> 'int' 0
|   | |-BinaryOperator 0x213a5627d10 <line:1032:9, col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   | | |-MemberExpr 0x213a5627ca8 <col:9, col:14> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket 0x213a55c4900
|   | | | `-ImplicitCastExpr 0x213a5627c90 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x213a5627c70 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | | `-ImplicitCastExpr 0x213a5627cf8 <col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   | |   `-DeclRefExpr 0x213a5627cd8 <col:31> 'int' EnumConstant 0x213a55c3630 'SSL_TEST_SESSION_TICKET_NO' 'int'
|   | `-BinaryOperator 0x213a5627dd0 <line:1034:9, col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   |   |-MemberExpr 0x213a5627d68 <col:9, col:14> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket 0x213a55c4900
|   |   | `-ImplicitCastExpr 0x213a5627d50 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x213a5627d30 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   |   `-ImplicitCastExpr 0x213a5627db8 <col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   |     `-DeclRefExpr 0x213a5627d98 <col:31> 'int' EnumConstant 0x213a55c35d8 'SSL_TEST_SESSION_TICKET_YES' 'int'
|   |-BinaryOperator 0x213a5627ee8 <line:1035:5, col:54> 'int' '='
|   | |-MemberExpr 0x213a5627e50 <col:5, col:10> 'int' lvalue ->session_ticket_do_not_call 0x213a55c4970
|   | | `-ImplicitCastExpr 0x213a5627e38 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5627e18 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x213a5627ed0 <col:39, col:54> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x213a5627ea0 <col:39, col:54> 'int' lvalue .session_ticket_do_not_call 0x213a55677f8
|   |     `-DeclRefExpr 0x213a5627e80 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x213a561d628 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x213a5625278 <line:1039:5, col:58> 'char *' '='
|   | |-MemberExpr 0x213a56250f8 <col:5, col:10> 'char *' lvalue ->client_npn_negotiated 0x213a55c49e0
|   | | `-ImplicitCastExpr 0x213a56250e0 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a56250c0 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x213a5625200 <col:34, col:58> 'char *'
|   |   |-ImplicitCastExpr 0x213a56251e8 <col:34> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x213a5625128 <col:34> 'char *(const unsigned char *, size_t)' Function 0x213a5622220 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x213a5625230 <col:42> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a5625148 <col:42> 'const unsigned char *' lvalue Var 0x213a5620008 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x213a5625260 <col:49> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x213a5625248 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5625168 <col:49> 'unsigned int' lvalue Var 0x213a5620140 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x213a56254a0 <line:1042:5, col:58> 'char *' '='
|   | |-MemberExpr 0x213a5625380 <col:5, col:10> 'char *' lvalue ->server_npn_negotiated 0x213a55c4a50
|   | | `-ImplicitCastExpr 0x213a5625368 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5625348 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x213a5625428 <col:34, col:58> 'char *'
|   |   |-ImplicitCastExpr 0x213a5625410 <col:34> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x213a56253b0 <col:34> 'char *(const unsigned char *, size_t)' Function 0x213a5622220 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x213a5625458 <col:42> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a56253d0 <col:42> 'const unsigned char *' lvalue Var 0x213a5620008 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x213a5625488 <col:49> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x213a5625470 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a56253f0 <col:49> 'unsigned int' lvalue Var 0x213a5620140 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x213a56257b8 <line:1046:5, col:59> 'char *' '='
|   | |-MemberExpr 0x213a5625698 <col:5, col:10> 'char *' lvalue ->client_alpn_negotiated 0x213a55c4ac0
|   | | `-ImplicitCastExpr 0x213a5625680 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5625660 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x213a5625740 <col:35, col:59> 'char *'
|   |   |-ImplicitCastExpr 0x213a5625728 <col:35> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x213a56256c8 <col:35> 'char *(const unsigned char *, size_t)' Function 0x213a5622220 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x213a5625770 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a56256e8 <col:43> 'const unsigned char *' lvalue Var 0x213a5620008 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x213a56257a0 <col:50> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x213a5625788 <col:50> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5625708 <col:50> 'unsigned int' lvalue Var 0x213a5620140 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x213a56259e0 <line:1049:5, col:59> 'char *' '='
|   | |-MemberExpr 0x213a56258c0 <col:5, col:10> 'char *' lvalue ->server_alpn_negotiated 0x213a55c4b30
|   | | `-ImplicitCastExpr 0x213a56258a8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x213a5625888 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x213a5625968 <col:35, col:59> 'char *'
|   |   |-ImplicitCastExpr 0x213a5625950 <col:35> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x213a56258f0 <col:35> 'char *(const unsigned char *, size_t)' Function 0x213a5622220 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x213a5625998 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x213a5625910 <col:43> 'const unsigned char *' lvalue Var 0x213a5620008 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x213a56259c8 <col:50> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x213a56259b0 <col:50> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5625930 <col:50> 'unsigned int' lvalue Var 0x213a5620140 'proto_len' 'unsigned int'
|   |-IfStmt 0x213a56266c8 <line:1057:5, line:1068:5>
|   | |-OpaqueValueExpr 0x213a56266b0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x213a5626688 <line:1057:55, line:1068:5>
|   |   |-DeclStmt 0x213a56260d8 <line:1058:9, col:39>
|   |   | `-VarDecl 0x213a5625f40 <col:9, col:13> col:13 used nid 'int'
|   |   |-IfStmt 0x213a56264a0 <line:1061:9, line:1064:9>
|   |   | |-OpaqueValueExpr 0x213a5626488 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x213a5626478 <line:1061:33, line:1064:9>
|   |   `-BinaryOperator 0x213a5626668 <line:1067:9, col:29> 'int' '='
|   |     |-MemberExpr 0x213a5626600 <col:9, col:14> 'int' lvalue ->tmp_key_type 0x213a55c4c80
|   |     | `-ImplicitCastExpr 0x213a56265e8 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x213a56265c8 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
|   |     `-ImplicitCastExpr 0x213a5626650 <col:29> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x213a5626630 <col:29> 'int' lvalue Var 0x213a5625f40 'nid' 'int'
|   |-CallExpr 0x213a56267b0 <line:1070:5, col:40> 'void'
|   | |-ImplicitCastExpr 0x213a5626798 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a56266e0 <col:5> 'void (CTX_DATA *)' Function 0x213a5567e88 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x213a5626720 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x213a5626700 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x213a561d7c0 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x213a5626848 <line:1071:5, col:41> 'void'
|   | |-ImplicitCastExpr 0x213a5626830 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a56267d8 <col:5> 'void (CTX_DATA *)' Function 0x213a5567e88 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x213a5626818 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x213a56267f8 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x213a561d838 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x213a56268e0 <line:1072:5, col:40> 'void'
|   | |-ImplicitCastExpr 0x213a56268c8 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5626870 <col:5> 'void (CTX_DATA *)' Function 0x213a5567e88 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x213a56268b0 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x213a5626890 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x213a561d748 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x213a5626978 <line:1074:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x213a5626960 <col:5> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a5626908 <col:5> 'void (PEER *)' Function 0x213a557b398 'peer_free_data' 'void (PEER *)'
|   | `-UnaryOperator 0x213a5626948 <col:20, col:21> 'PEER *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x213a5626928 <col:21> 'PEER':'struct peer_st' lvalue Var 0x213a561d508 'server' 'PEER':'struct peer_st'
|   |-CallExpr 0x213a5626a10 <line:1075:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x213a56269f8 <col:5> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x213a56269a0 <col:5> 'void (PEER *)' Function 0x213a557b398 'peer_free_data' 'void (PEER *)'
|   | `-UnaryOperator 0x213a56269e0 <col:20, col:21> 'PEER *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x213a56269c0 <col:21> 'PEER':'struct peer_st' lvalue Var 0x213a561d580 'client' 'PEER':'struct peer_st'
|   `-ReturnStmt 0x213a5626a70 <line:1076:5, col:12>
|     `-ImplicitCastExpr 0x213a5626a58 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x213a5626a38 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x213a561d8e8 'ret' 'HANDSHAKE_RESULT *'
`-FunctionDecl 0x213a5628010 <line:1079:1, line:1106:1> line:1079:19 invalid do_handshake 'HANDSHAKE_RESULT *(int *, int *, int *, int *, int *, const SSL_TEST_CTX *)'
  |-ParmVarDecl 0x213a5626c80 <col:32, col:41> col:41 invalid server_ctx 'int *'
  |-ParmVarDecl 0x213a5626d00 <col:53, col:62> col:62 invalid server2_ctx 'int *'
  |-ParmVarDecl 0x213a5626d80 <line:1080:32, col:41> col:41 invalid client_ctx 'int *'
  |-ParmVarDecl 0x213a5626e00 <col:53, col:62> col:62 invalid resume_server_ctx 'int *'
  |-ParmVarDecl 0x213a5626e80 <line:1081:32, col:41> col:41 invalid resume_client_ctx 'int *'
  |-ParmVarDecl 0x213a5626ef8 <line:1082:32, col:52> col:52 used test_ctx 'const SSL_TEST_CTX *'
  `-CompoundStmt 0x213a5628b08 <line:1083:1, line:1106:1>
    |-DeclStmt 0x213a5628170 <line:1084:5, col:29>
    | `-VarDecl 0x213a5628108 <col:5, col:23> col:23 used result 'HANDSHAKE_RESULT *'
    |-IfStmt 0x213a56284c8 <line:1090:5, line:1091:14>
    | |-BinaryOperator 0x213a5628440 <line:1090:9, col:37> 'int' '!='
    | | |-ImplicitCastExpr 0x213a5628428 <col:9, col:19> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x213a5628410 <col:9, col:19> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
    | | |   `-MemberExpr 0x213a56283c0 <col:9, col:19> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x213a55c6150
    | | |     `-ImplicitCastExpr 0x213a56283a8 <col:9> 'const SSL_TEST_CTX *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x213a5628388 <col:9> 'const SSL_TEST_CTX *' lvalue ParmVar 0x213a5626ef8 'test_ctx' 'const SSL_TEST_CTX *'
    | | `-DeclRefExpr 0x213a56283f0 <col:37> 'int' EnumConstant 0x213a55c3ba8 'SSL_TEST_HANDSHAKE_RESUME' 'int'
    | `-GotoStmt 0x213a56284b0 <line:1091:9, col:14> 'end' 0x213a5628460
    |-IfStmt 0x213a56286b0 <line:1093:5, line:1096:5>
    | |-BinaryOperator 0x213a5628598 <line:1093:9, col:27> 'int' '!='
    | | |-ImplicitCastExpr 0x213a5628580 <col:9, col:17> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x213a5628568 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' <LValueToRValue>
    | | |   `-MemberExpr 0x213a5628518 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x213a55c44b0
    | | |     `-ImplicitCastExpr 0x213a5628500 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x213a56284e0 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x213a5628108 'result' 'HANDSHAKE_RESULT *'
    | | `-DeclRefExpr 0x213a5628548 <col:27> 'int' EnumConstant 0x213a55c28a0 'SSL_TEST_SUCCESS' 'int'
    | `-CompoundStmt 0x213a5628690 <col:45, line:1096:5>
    |   |-BinaryOperator 0x213a5628658 <line:1094:9, col:26> 'ssl_test_result_t':'ssl_test_result_t' '='
    |   | |-MemberExpr 0x213a56285f0 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x213a55c44b0
    |   | | `-ImplicitCastExpr 0x213a56285d8 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x213a56285b8 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x213a5628108 'result' 'HANDSHAKE_RESULT *'
    |   | `-ImplicitCastExpr 0x213a5628640 <col:26> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
    |   |   `-DeclRefExpr 0x213a5628620 <col:26> 'int' EnumConstant 0x213a55c2a00 'SSL_TEST_FIRST_HANDSHAKE_FAILED' 'int'
    |   `-GotoStmt 0x213a5628678 <line:1095:9, col:14> 'end' 0x213a5628460
    |-CallExpr 0x213a5628780 <line:1098:5, col:33> 'void'
    | |-ImplicitCastExpr 0x213a5628768 <col:5> 'void (*)(HANDSHAKE_RESULT *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x213a56286c8 <col:5> 'void (HANDSHAKE_RESULT *)' Function 0x213a5568eb8 'HANDSHAKE_RESULT_free' 'void (HANDSHAKE_RESULT *)'
    | `-ImplicitCastExpr 0x213a56287a8 <col:27> 'HANDSHAKE_RESULT *' <LValueToRValue>
    |   `-DeclRefExpr 0x213a56286e8 <col:27> 'HANDSHAKE_RESULT *' lvalue Var 0x213a5628108 'result' 'HANDSHAKE_RESULT *'
    |-LabelStmt 0x213a5628aa8 <line:1103:2, col:5> 'end'
    | `-NullStmt 0x213a5628aa0 <col:5>
    `-ReturnStmt 0x213a5628af8 <line:1105:5, col:12>
      `-ImplicitCastExpr 0x213a5628ae0 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
        `-DeclRefExpr 0x213a5628ac0 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x213a5628108 'result' 'HANDSHAKE_RESULT *'
