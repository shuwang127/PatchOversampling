TranslationUnitDecl 0x23718b90608 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x23718b90ea0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x23718b90ba0 '__int128'
|-TypedefDecl 0x23718b90f10 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x23718b90bc0 'unsigned __int128'
|-TypedefDecl 0x23718b91248 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x23718b91000 'struct __NSConstantString_tag'
|   `-Record 0x23718b90f68 '__NSConstantString_tag'
|-TypedefDecl 0x23718b912b8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x23718b907e0 'unsigned long long'
|-TypedefDecl 0x23718b91350 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x23718b91310 'char *'
|   `-BuiltinType 0x23718b906a0 'char'
|-TypedefDecl 0x23718b913c0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x23718b91310 'char *'
|   `-BuiltinType 0x23718b906a0 'char'
|-TypedefDecl 0x23718b91480 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x23718b907e0 'unsigned long long'
|-TypedefDecl 0x23718b914f0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x23718b91310 'char *'
|   `-BuiltinType 0x23718b906a0 'char'
|-FunctionDecl 0x2371a6bb410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2371a6bb4b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2371a6bb520 <col:21> Implicit
|-FunctionDecl 0x2371a6bb578 prev 0x2371a6bb410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2371a6bb2a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2371a6bb668 <col:21> Inherited Implicit
|-TypedefDecl 0x2371a6bb6a8 prev 0x23718b912b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x23718b907e0 'unsigned long long'
|-TypedefDecl 0x2371a6bb750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2371a6bb720 'size_t' sugar
|   |-Typedef 0x2371a6bb6a8 'size_t'
|   `-BuiltinType 0x23718b907e0 'unsigned long long'
|-TypedefDecl 0x2371a6bb7c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x23718b90740 'long long'
|-TypedefDecl 0x2371a6bb830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x23718b90740 'long long'
|-TypedefDecl 0x2371a6bb8a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x23718b90780 'unsigned short'
|-TypedefDecl 0x2371a6bb910 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x23718b90780 'unsigned short'
|-TypedefDecl 0x2371a6bb980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x23718b90780 'unsigned short'
|-TypedefDecl 0x2371a6bb9f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x23718b90700 'int'
|-TypedefDecl 0x2371a6bba60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x23718b90720 'long'
|-TypedefDecl 0x2371a6bbad0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x23718b90740 'long long'
|-TypedefDecl 0x2371a6bbb60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2371a6bbb30 '__time64_t' sugar
|   |-Typedef 0x2371a6bbad0 '__time64_t'
|   `-BuiltinType 0x23718b90740 'long long'
|-FunctionDecl 0x2371a6bbcd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2371a6bbef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2371a6f2620 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2371a6bc038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2371a6bc0b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2371a6bc128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2371a6bc1a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2371a6f23c0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2371a6f2700 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2371a6f27c0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2371a6f2930 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2371a6f28e0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2371a6f2880 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2371a6f27a0 'struct threadlocaleinfostruct'
|       `-Record 0x2371a7014b0 'threadlocaleinfostruct'
|-TypedefDecl 0x2371a6f2a40 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2371a6f29f0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2371a6f2990 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2371a6f2860 'struct threadmbcinfostruct'
|       `-Record 0x2371a6f27c0 'threadmbcinfostruct'
|-RecordDecl 0x2371a6f2a98 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2371a6f2b50 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2371a6f2c10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2371a6f2ca0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2371a6f2d30 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2371a6f2de8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2371a6f2d90 'struct localeinfo_struct' sugar
|   `-RecordType 0x2371a6f2bf0 'struct localeinfo_struct'
|     `-Record 0x2371a6f2b50 'localeinfo_struct'
|-TypedefDecl 0x2371a6f2ec0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2371a6f2e70 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2371a6f2d90 'struct localeinfo_struct' sugar
|     `-RecordType 0x2371a6f2bf0 'struct localeinfo_struct'
|       `-Record 0x2371a6f2b50 'localeinfo_struct'
|-RecordDecl 0x2371a6f2f38 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2371a6f2ff0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2371a6f3068 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2371a6f3128 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2371a6f31c0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2371a6f3230 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2371a6f32e8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2371a6f3290 'struct localerefcount' sugar
|   `-RecordType 0x2371a6f2fd0 'struct localerefcount'
|     `-Record 0x2371a6f2f38 'localerefcount'
|-RecordDecl 0x2371a7014b0 prev 0x2371a6f2700 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2371a701530 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2371a7015a8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2371a701618 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2371a701688 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2371a7016f8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2371a7018b8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2371a701928 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2371a701998 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2371a701a08 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2371a701a78 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2371a701ae8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2371a701b40 parent 0x23718b90608 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2371a701cd0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2371a701d40 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2371a701db0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2371a701e20 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2371a701ec0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2371a701f30 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2371a702040 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2371a702178 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2371a702228 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2371a7021d0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2371a6f27a0 'struct threadlocaleinfostruct'
|     `-Record 0x2371a7014b0 'threadlocaleinfostruct'
|-FunctionDecl 0x2371a7026d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x2371a7022b0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x2371a702360 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x2371a7023e0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x2371a7024c0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a702a98 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2371a702b38 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2371a702ba0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2371a702c08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a702c88 prev 0x2371a702a98 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2371a7027c0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x2371a702840 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x2371a7028b8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a703048 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2371a702d70 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x2371a702df0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x2371a702e68 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a6fb4a0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a703130 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x2371a7031b0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x2371a703228 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a7032c0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a6fb7a8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2371a6fb848 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2371a6fb8b0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2371a6fb918 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a6fb998 prev 0x2371a6fb7a8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2371a6fb590 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x2371a6fb610 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x2371a6fb688 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a6fbd58 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2371a6fbdf8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2371a6fbe60 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2371a6fbec8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a6fbf48 prev 0x2371a6fbd58 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2371a6fba80 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x2371a6fbb00 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x2371a6fbb78 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a7044e0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2371a6fc058 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x2371a6fc0f0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2371a6fc170 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2371a6fc1e8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2371a7048a8 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2371a704948 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2371a7049b0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2371a704a18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a704a98 prev 0x2371a7048a8 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x2371a7045d0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x2371a704650 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x2371a7046c8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a704f18 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2371a704fb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2371a705020 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2371a705088 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2371a7050f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a705178 prev 0x2371a704f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2371a704c60 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x2371a704ce0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x2371a704d60 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x2371a704dd8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a705238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x2371a7086b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2371a705400 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x2371a708520 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x2371a708598 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a708770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x2371a708b60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2371a708898 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2371a708910 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a708990 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x2371a708f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2371a708d40 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x2371a708dc0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x2371a708fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a7093f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2371a709128 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2371a7091a0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2371a709220 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x2371a7057b0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2371a705850 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2371a7058b8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2371a705930 prev 0x2371a7057b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x2371a7055c8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x2371a705648 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x2371a7059e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a705d38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2371a705b28 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2371a705ba0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2371a705c20 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x2371a706060 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2371a706100 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2371a706168 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2371a7061e0 prev 0x2371a706060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x2371a705ee0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x2371a705f60 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x2371a706290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a7035a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x2371a703640 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a7036a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2371a703720 prev 0x2371a7035a0 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x2371a7063d8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x2371a706458 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x2371a703970 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2371a703a10 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2371a703a80 prev 0x2371a703970 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x2371a703800 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x2371a703d78 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2371a703b58 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2371a703bd0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a703fc8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x2371a703e58 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x2371a703ed0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2371a7042f8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x2371a7042e8 <line:132:5, col:51>
|     `-ConditionalOperator 0x2371a7042b8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x2371a704128 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x2371a704108 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x2371a7040d8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2371a704090 <col:13> 'const char *' lvalue ParmVar 0x2371a703e58 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x2371a7040f0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x2371a7040b0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x2371a7042a0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2371a704148 <col:24> 'int' 0
|       `-CallExpr 0x2371a704240 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2371a704228 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2371a704170 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x2371a703d78 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x2371a704270 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x2371a704190 <col:36> 'const char *' lvalue ParmVar 0x2371a703e58 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x2371a704288 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2371a7041b0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x2371a703ed0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a70a678 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2371a704328 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x2371a7043a0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2371a704420 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x2371a70a540 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2371a70a980 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2371a70aa20 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2371a70aa88 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2371a70aaf0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a70ab70 prev 0x2371a70a980 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2371a70a768 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x2371a70a7e8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2371a70a860 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a70ada8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x2371a70ac58 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x2371a70b070 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2371a70b110 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a70b178 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2371a70b1f0 prev 0x2371a70b070 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2371a70ae80 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x2371a70af00 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x2371a70b450 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2371a70b2d0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2371a70b350 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2371a707690 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2371a707510 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2371a707590 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2371a707a48 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2371a707770 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2371a7077f0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2371a707868 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a707cb0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2371a707b30 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x2371a707bb0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2371a707fa8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2371a707d90 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2371a707e10 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2371a707e88 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a708210 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2371a708090 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x2371a708110 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x2371a70b550 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2371a7082f0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x2371a708370 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x2371a7083e8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a70b908 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2371a70b638 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2371a70b6b8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2371a70b730 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a70bd70 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a70b9f0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2371a70ba70 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2371a70bae8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a70bb60 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a70c078 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2371a70be60 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2371a70bee0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2371a70bf58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a70c410 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a70c160 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x2371a70c1e0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x2371a70c258 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a70c2d0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a70c788 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2371a70c828 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a70c890 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2371a70c908 prev 0x2371a70c788 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2371a70c560 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2371a70c5e0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x2371a70cbc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2371a70cae0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x2371a70cc68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a70d040 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x2371a70cdb0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x2371a70ce28 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a70cea8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x2371a70d358 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x2371a70d3f8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2371a70d468 prev 0x2371a70d358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x2371a70d220 <col:90> col:93 'int'
| `-DeprecatedAttr 0x2371a70d510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a70d880 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2371a70d670 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x2371a70d6e8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a70d768 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x2371a70db88 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2371a70d968 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2371a70d9e0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a70de78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2371a70dd28 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2371a70df20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a70e330 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a70e068 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2371a70e0e0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a70e158 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a7066b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2371a70e4d8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2371a706500 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2371a706760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a706c18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2371a7068a8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x2371a706920 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2371a7069a0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x2371a706a18 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2371a707098 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2371a707138 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2371a7071a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a707208 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a707288 prev 0x2371a707098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2371a706dc8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x2371a706e48 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x2371a706ec0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a707340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a710750 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2371a7107f0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2371a710858 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a7108c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a710940 prev 0x2371a710750 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2371a707488 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x2371a7105b8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x2371a710630 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a710c40 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2371a710a28 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x2371a710aa8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x2371a710b20 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a710fd8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a710d28 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2371a710da8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2371a710e20 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a710e98 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a711370 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2371a7110c8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2371a711140 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2371a7111c0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x2371a711238 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2371a70e718 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2371a70e7b8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2371a70e820 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a70e888 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a70e908 prev 0x2371a70e718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2371a711520 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x2371a70e580 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x2371a70e5f8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a70e9c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a70ee78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x2371a70eb08 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x2371a70eb80 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2371a70ec00 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x2371a70ec78 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a70f2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2371a70f028 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x2371a70f0a8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x2371a70f120 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a70f3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a70f700 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2371a70f7a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a70f808 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2371a70f880 prev 0x2371a70f700 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2371a70f4f8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2371a70f590 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x2371a70fae0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2371a70fb80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a70fbe8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2371a70fc60 prev 0x2371a70fae0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2371a70f960 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2371a70f9e0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x2371a70fe20 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x2371a70fd40 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x2371a710070 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2371a710110 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a710178 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2371a7101f0 prev 0x2371a710070 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2371a70fef8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x2371a70ff78 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x2371a710450 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2371a7104f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a786f70 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2371a786fe8 prev 0x2371a710450 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2371a7102d0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x2371a710350 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x2371a787308 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2371a7873a8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2371a787410 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2371a787488 prev 0x2371a787308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x2371a787188 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x2371a787208 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x2371a787538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a787918 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x2371a787680 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x2371a787700 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x2371a787780 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x2371a787b70 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2371a787a00 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2371a787a78 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a787df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2371a787d10 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2371a787e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a78a2a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a78a0a0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2371a78a118 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a78a190 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a78a5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2371a78a450 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2371a78a4c8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2371a78a678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a78aa90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2371a78ab30 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2371a78ab98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2371a78ac00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a78ac80 prev 0x2371a78aa90 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2371a78a7c0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2371a78a840 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x2371a78a8b8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a7880b8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a78ad68 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2371a78ade8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x2371a78ae60 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a78aed8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a788360 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x2371a788400 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2371a788470 prev 0x2371a788360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x2371a788280 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x2371a788518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x2371a788860 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2371a7886e0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2371a788760 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2371a788910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x2371a788c58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2371a788ad8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2371a788b58 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2371a788d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x2371a788fc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2371a788ed0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2371a789070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x2371a789488 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2371a789270 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x2371a7892f0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x2371a789368 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a789540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x2371a789920 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2371a789708 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x2371a789788 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x2371a789800 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a7899d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x2371a789c80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2371a789ba0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2371a789d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x2371a78b0b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2371a789ef0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x2371a78afb0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x2371a78b160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x2371a78b408 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2371a78b328 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2371a78b4b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x2371a78b740 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x2371a78b5d0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x2371a78bad0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2371a78b810 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2371a78b888 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2371a78b900 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x2371a78be88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a78bc70 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2371a78bce8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2371a78bf38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a784258 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x2371a7842f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2371a784360 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x2371a7843d8 prev 0x2371a784258 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x2371a784038 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2371a7840b0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2371a7846d0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x2371a784770 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2371a7847d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2371a784850 prev 0x2371a7846d0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x2371a7844b0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2371a784528 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x2371a784b30 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2371a784928 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2371a7849a0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2371a784a18 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x2371a784e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a784cd0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2371a784d48 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2371a784ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a78c2d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a78c0b8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2371a78c130 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x2371a78c520 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x2371a78c5c0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2371a78c630 prev 0x2371a78c520 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x2371a78c3b0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x2371a78c918 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x2371a78c700 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2371a78c778 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a78cb60 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x2371a78c9f0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x2371a78ca68 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2371a78cef8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x2371a78cee8 <line:307:5, col:56>
|     `-ConditionalOperator 0x2371a78ceb8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x2371a78cd20 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x2371a78cd00 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x2371a78ccd0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2371a78cc28 <col:13> 'const wchar_t *' lvalue ParmVar 0x2371a78c9f0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x2371a78cce8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x2371a78ccb0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x2371a78cc88 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x2371a78cc48 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x2371a78cea0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2371a78cd40 <col:29> 'int' 0
|       `-CallExpr 0x2371a78ce40 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2371a78ce28 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2371a78cd68 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x2371a78c918 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x2371a78ce70 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x2371a78cd88 <col:41> 'const wchar_t *' lvalue ParmVar 0x2371a78c9f0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x2371a78ce88 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2371a78cda8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x2371a78ca68 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a78d2c8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2371a78cf20 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2371a78cfd0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2371a78d048 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2371a78d0c0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2371a78d730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2371a78d470 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2371a78d4e8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2371a78d560 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a78d7e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a78dbf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x2371a78dc98 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x2371a78dd00 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2371a78dd68 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2371a78dde8 prev 0x2371a78dbf8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x2371a78d928 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a78d9a0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2371a78da18 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a786110 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2371a78dec8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2371a78df40 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2371a785f60 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2371a785fd8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2371a7864c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2371a7862b8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2371a786330 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2371a7863a8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a786578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a7868d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a7866b8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2371a786730 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x2371a786b20 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2371a7869b0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2371a786a28 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2371a786d68 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a786bf8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2371a786c70 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x2371a790060 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a786e40 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2371a786eb8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x2371a790368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a7901f8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2371a790270 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x2371a790418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a790880 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2371a790558 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x2371a7905d0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x2371a7906b0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x2371a790ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x2371a790a28 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x2371a790c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a792090 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2371a790d88 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2371a790e00 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a790e80 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x2371a792340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2371a792268 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2371a7923e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a7927b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x2371a792528 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x2371a7925a0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a792618 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2371a792a08 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a792890 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2371a792908 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x2371a792da8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2371a792ae0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a792b58 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2371a792bd0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a7930b8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2371a792e88 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a792f00 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2371a792f78 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a793510 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a793198 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a793210 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2371a793288 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a793300 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a793968 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x2371a7935f8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2371a793670 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2371a7936e8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2371a793760 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a793dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2371a793b10 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x2371a793b88 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2371a793c00 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a793e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a794150 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x2371a793fc8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x2371a7944e0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x2371a794220 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2371a794298 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a794310 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x2371a794898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2371a794680 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x2371a7946f8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2371a794948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a794ca8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2371a794a88 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x2371a794b00 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a794f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2371a794e40 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2371a794fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a795410 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a795148 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x2371a7951c0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a795238 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a7957c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2371a7955b0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2371a795628 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2371a795878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a795b28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2371a7959b8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x2371a795a30 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a795d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2371a795cc0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2371a795e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a78e170 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a795f80 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x2371a78dfe0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a78e058 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a78e480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2371a78e310 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2371a78e388 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2371a78e530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2371a78e930 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2371a78e670 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2371a78e6e8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2371a78e760 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a78ed78 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a78ea10 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2371a78ea88 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2371a78eb00 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a78eb78 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a796060 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a78ee60 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2371a78eed8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x2371a796348 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2371a796138 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a7961b0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2371a796228 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a7965a0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a796428 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2371a7964a0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x2371a796888 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2371a796678 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a7966f0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2371a796768 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a796b78 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2371a796968 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a7969e0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2371a796a58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a796f00 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a796c58 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a796cd0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2371a796d48 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a796dc0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a78f188 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2371a796fe8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a78eff0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2371a78f068 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a78f510 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2371a78f268 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a78f2e0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2371a78f358 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2371a78f3d0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2371a78f770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2371a78f698 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2371a78f818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x2371a78fb50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a78f9d8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a78fa50 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2371a78fc00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x2371a799090 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2371a78fdc0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a78fe38 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2371a78feb0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a799148 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x2371a799510 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2371a799308 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2371a799380 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2371a7993f8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2371a7995c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x2371a799860 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2371a799788 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2371a799908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x2371a799c38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2371a799ac8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x2371a799b40 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2371a799ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x2371a799f80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2371a799ea8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2371a79a028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x2371a79c310 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2371a79c238 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2371a79c3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x2371a79c6f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2371a79c578 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2371a79c5f0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2371a79c7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x2371a79c8b0 <.//openssl//file_jk/after\test/ssl_test_ctx.h:16:9, line:23:1> line:16:9
| |-EnumConstantDecl 0x2371a79c9d0 <line:17:5, col:24> col:5 referenced SSL_TEST_SUCCESS 'int'
| | `-ConstantExpr 0x2371a79c9b8 <col:24> 'int'
| |   `-IntegerLiteral 0x2371a79c990 <col:24> 'int' 0
| |-EnumConstantDecl 0x2371a79ca28 <line:18:5> col:5 referenced SSL_TEST_SERVER_FAIL 'int'
| |-EnumConstantDecl 0x2371a79ca80 <line:19:5> col:5 referenced SSL_TEST_CLIENT_FAIL 'int'
| |-EnumConstantDecl 0x2371a79cad8 <line:20:5> col:5 referenced SSL_TEST_INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x2371a79cb30 <line:22:5> col:5 referenced SSL_TEST_FIRST_HANDSHAKE_FAILED 'int'
|-TypedefDecl 0x2371a79cbe8 <line:16:1, line:23:3> col:3 referenced ssl_test_result_t 'enum ssl_test_result_t':'ssl_test_result_t'
| `-ElaboratedType 0x2371a79cb90 'enum ssl_test_result_t' sugar
|   `-EnumType 0x2371a79c970 'ssl_test_result_t'
|     `-Enum 0x2371a79c8b0 ''
|-EnumDecl 0x2371a79cc58 <line:25:9, line:29:1> line:25:9
| |-EnumConstantDecl 0x2371a79cd70 <line:26:5, col:28> col:5 SSL_TEST_VERIFY_NONE 'int'
| | `-ConstantExpr 0x2371a79cd58 <col:28> 'int'
| |   `-IntegerLiteral 0x2371a79cd30 <col:28> 'int' 0
| |-EnumConstantDecl 0x2371a79cdc8 <line:27:5> col:5 referenced SSL_TEST_VERIFY_ACCEPT_ALL 'int'
| `-EnumConstantDecl 0x2371a79ce20 <line:28:5> col:5 referenced SSL_TEST_VERIFY_REJECT_ALL 'int'
|-TypedefDecl 0x2371a79ced8 <line:25:1, line:29:3> col:3 referenced ssl_verify_callback_t 'enum ssl_verify_callback_t':'ssl_verify_callback_t'
| `-ElaboratedType 0x2371a79ce80 'enum ssl_verify_callback_t' sugar
|   `-EnumType 0x2371a79cd10 'ssl_verify_callback_t'
|     `-Enum 0x2371a79cc58 ''
|-EnumDecl 0x2371a79cf48 <line:31:9, line:36:1> line:31:9
| |-EnumConstantDecl 0x2371a79d060 <line:32:5, col:32> col:5 referenced SSL_TEST_SERVERNAME_NONE 'int'
| | `-ConstantExpr 0x2371a79d048 <col:32> 'int'
| |   `-IntegerLiteral 0x2371a79d020 <col:32> 'int' 0
| |-EnumConstantDecl 0x2371a79b0b0 <line:33:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER1 'int'
| |-EnumConstantDecl 0x2371a79b108 <line:34:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER2 'int'
| `-EnumConstantDecl 0x2371a79b160 <line:35:5> col:5 SSL_TEST_SERVERNAME_INVALID 'int'
|-TypedefDecl 0x2371a79b218 <line:31:1, line:36:3> col:3 referenced ssl_servername_t 'enum ssl_servername_t':'ssl_servername_t'
| `-ElaboratedType 0x2371a79b1c0 'enum ssl_servername_t' sugar
|   `-EnumType 0x2371a79d000 'ssl_servername_t'
|     `-Enum 0x2371a79cf48 ''
|-EnumDecl 0x2371a79b288 <line:38:9, line:42:1> line:38:9
| |-EnumConstantDecl 0x2371a79b3a0 <line:39:5, col:35> col:5 SSL_TEST_SERVERNAME_CB_NONE 'int'
| | `-ConstantExpr 0x2371a79b388 <col:35> 'int'
| |   `-IntegerLiteral 0x2371a79b360 <col:35> 'int' 0
| |-EnumConstantDecl 0x2371a79b3f8 <line:40:5> col:5 referenced SSL_TEST_SERVERNAME_IGNORE_MISMATCH 'int'
| `-EnumConstantDecl 0x2371a79b450 <line:41:5> col:5 referenced SSL_TEST_SERVERNAME_REJECT_MISMATCH 'int'
|-TypedefDecl 0x2371a79b508 <line:38:1, line:42:3> col:3 referenced ssl_servername_callback_t 'enum ssl_servername_callback_t':'ssl_servername_callback_t'
| `-ElaboratedType 0x2371a79b4b0 'enum ssl_servername_callback_t' sugar
|   `-EnumType 0x2371a79b340 'ssl_servername_callback_t'
|     `-Enum 0x2371a79b288 ''
|-EnumDecl 0x2371a79b578 <line:44:9, line:49:1> line:44:9
| |-EnumConstantDecl 0x2371a79b690 <line:45:5, col:38> col:5 SSL_TEST_SESSION_TICKET_IGNORE 'int'
| | `-ConstantExpr 0x2371a79b678 <col:38> 'int'
| |   `-IntegerLiteral 0x2371a79b650 <col:38> 'int' 0
| |-EnumConstantDecl 0x2371a79b6e8 <line:46:5> col:5 referenced SSL_TEST_SESSION_TICKET_YES 'int'
| |-EnumConstantDecl 0x2371a79b740 <line:47:5> col:5 referenced SSL_TEST_SESSION_TICKET_NO 'int'
| `-EnumConstantDecl 0x2371a79b798 <line:48:5> col:5 SSL_TEST_SESSION_TICKET_BROKEN 'int'
|-TypedefDecl 0x2371a79b848 <line:44:1, line:49:3> col:3 referenced ssl_session_ticket_t 'enum ssl_session_ticket_t':'ssl_session_ticket_t'
| `-ElaboratedType 0x2371a79b7f0 'enum ssl_session_ticket_t' sugar
|   `-EnumType 0x2371a79b630 'ssl_session_ticket_t'
|     `-Enum 0x2371a79b578 ''
|-EnumDecl 0x2371a79b8b8 <line:51:9, line:54:1> line:51:9
| |-EnumConstantDecl 0x2371a79b9d0 <line:52:5, col:27> col:5 SSL_TEST_METHOD_TLS 'int'
| | `-ConstantExpr 0x2371a79b9b8 <col:27> 'int'
| |   `-IntegerLiteral 0x2371a79b990 <col:27> 'int' 0
| `-EnumConstantDecl 0x2371a79ba28 <line:53:5> col:5 SSL_TEST_METHOD_DTLS 'int'
|-TypedefDecl 0x2371a79bad8 <line:51:1, line:54:3> col:3 referenced ssl_test_method_t 'enum ssl_test_method_t':'ssl_test_method_t'
| `-ElaboratedType 0x2371a79ba80 'enum ssl_test_method_t' sugar
|   `-EnumType 0x2371a79b970 'ssl_test_method_t'
|     `-Enum 0x2371a79b8b8 ''
|-EnumDecl 0x2371a79bb48 <line:56:9, line:61:1> line:56:9
| |-EnumConstantDecl 0x2371a79bc60 <line:57:5, col:33> col:5 SSL_TEST_HANDSHAKE_SIMPLE 'int'
| | `-ConstantExpr 0x2371a79bc48 <col:33> 'int'
| |   `-IntegerLiteral 0x2371a79bc20 <col:33> 'int' 0
| |-EnumConstantDecl 0x2371a79bcb8 <line:58:5> col:5 referenced SSL_TEST_HANDSHAKE_RESUME 'int'
| |-EnumConstantDecl 0x2371a79bd10 <line:59:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_SERVER 'int'
| `-EnumConstantDecl 0x2371a79bd68 <line:60:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_CLIENT 'int'
|-TypedefDecl 0x2371a79be18 <line:56:1, line:61:3> col:3 referenced ssl_handshake_mode_t 'enum ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-ElaboratedType 0x2371a79bdc0 'enum ssl_handshake_mode_t' sugar
|   `-EnumType 0x2371a79bc00 'ssl_handshake_mode_t'
|     `-Enum 0x2371a79bb48 ''
|-EnumDecl 0x2371a79be88 <line:63:9, line:67:1> line:63:9
| |-EnumConstantDecl 0x2371a79bfa0 <line:64:5, col:35> col:5 referenced SSL_TEST_CT_VALIDATION_NONE 'int'
| | `-ConstantExpr 0x2371a79bf88 <col:35> 'int'
| |   `-IntegerLiteral 0x2371a79bf60 <col:35> 'int' 0
| |-EnumConstantDecl 0x2371a79bff8 <line:65:5> col:5 referenced SSL_TEST_CT_VALIDATION_PERMISSIVE 'int'
| `-EnumConstantDecl 0x2371a79c050 <line:66:5> col:5 referenced SSL_TEST_CT_VALIDATION_STRICT 'int'
|-TypedefDecl 0x2371a7970c8 <line:63:1, line:67:3> col:3 referenced ssl_ct_validation_t 'enum ssl_ct_validation_t':'ssl_ct_validation_t'
| `-ElaboratedType 0x2371a797070 'enum ssl_ct_validation_t' sugar
|   `-EnumType 0x2371a79bf40 'ssl_ct_validation_t'
|     `-Enum 0x2371a79be88 ''
|-EnumDecl 0x2371a797138 <line:69:9, line:73:1> line:69:9
| |-EnumConstantDecl 0x2371a797250 <line:70:5, col:33> col:5 referenced SSL_TEST_CERT_STATUS_NONE 'int'
| | `-ConstantExpr 0x2371a797238 <col:33> 'int'
| |   `-IntegerLiteral 0x2371a797210 <col:33> 'int' 0
| |-EnumConstantDecl 0x2371a7972a8 <line:71:5> col:5 referenced SSL_TEST_CERT_STATUS_GOOD_RESPONSE 'int'
| `-EnumConstantDecl 0x2371a797300 <line:72:5> col:5 SSL_TEST_CERT_STATUS_BAD_RESPONSE 'int'
|-TypedefDecl 0x2371a7973b8 <line:69:1, line:73:3> col:3 referenced ssl_cert_status_t 'enum ssl_cert_status_t':'ssl_cert_status_t'
| `-ElaboratedType 0x2371a797360 'enum ssl_cert_status_t' sugar
|   `-EnumType 0x2371a7971f0 'ssl_cert_status_t'
|     `-Enum 0x2371a797138 ''
|-RecordDecl 0x2371a797428 <line:78:9, line:89:1> line:78:9 struct definition
| |-FieldDecl 0x2371a797510 <line:80:5, col:27> col:27 referenced verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| |-FieldDecl 0x2371a7975a0 <line:82:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x2371a797610 <line:84:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x2371a797680 <line:85:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x2371a797710 <line:86:5, col:25> col:25 referenced ct_validation 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-FieldDecl 0x2371a797780 <line:88:5, col:11> col:11 referenced reneg_ciphers 'char *'
|-TypedefDecl 0x2371a797838 <line:78:1, line:89:3> col:3 referenced SSL_TEST_CLIENT_CONF 'struct SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| `-ElaboratedType 0x2371a7977e0 'struct SSL_TEST_CLIENT_CONF' sugar
|   `-RecordType 0x2371a7974c0 'SSL_TEST_CLIENT_CONF'
|     `-Record 0x2371a797428 ''
|-RecordDecl 0x2371a7978a8 <line:91:9, line:101:1> line:91:9 struct definition
| |-FieldDecl 0x2371a797990 <line:93:5, col:31> col:31 referenced servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| |-FieldDecl 0x2371a797a00 <line:95:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x2371a797a70 <line:96:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x2371a797ae0 <line:98:5, col:9> col:9 referenced broken_session_ticket 'int'
| `-FieldDecl 0x2371a797b70 <line:100:5, col:23> col:23 referenced cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-TypedefDecl 0x2371a797c28 <line:91:1, line:101:3> col:3 referenced SSL_TEST_SERVER_CONF 'struct SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-ElaboratedType 0x2371a797bd0 'struct SSL_TEST_SERVER_CONF' sugar
|   `-RecordType 0x2371a797940 'SSL_TEST_SERVER_CONF'
|     `-Record 0x2371a7978a8 ''
|-RecordDecl 0x2371a797c98 <line:103:9, line:107:1> line:103:9 struct definition
| |-FieldDecl 0x2371a797d80 <line:104:5, col:26> col:26 referenced client 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| |-FieldDecl 0x2371a797e10 <line:105:5, col:26> col:26 referenced server 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-FieldDecl 0x2371a797e78 <line:106:5, col:26> col:26 referenced server2 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
|-TypedefDecl 0x2371a797fa8 <line:103:1, line:107:3> col:3 referenced SSL_TEST_EXTRA_CONF 'struct SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| `-ElaboratedType 0x2371a797f50 'struct SSL_TEST_EXTRA_CONF' sugar
|   `-RecordType 0x2371a797d30 'SSL_TEST_EXTRA_CONF'
|     `-Record 0x2371a797c98 ''
|-RecordDecl 0x2371a7a1110 <line:109:9, line:166:1> line:109:9 struct definition
| |-FieldDecl 0x2371a7a1200 <line:114:5, col:23> col:23 method 'ssl_test_method_t':'ssl_test_method_t'
| |-FieldDecl 0x2371a7a1290 <line:116:5, col:26> col:26 referenced handshake_mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| |-FieldDecl 0x2371a7a1300 <line:121:5, col:9> col:9 referenced app_data_size 'int'
| |-FieldDecl 0x2371a7a1370 <line:123:5, col:9> col:9 referenced max_fragment_size 'int'
| |-FieldDecl 0x2371a7a1400 <line:129:5, col:25> col:25 referenced extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x2371a7a1468 <line:131:5, col:25> col:25 referenced resume_extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x2371a7a14f0 <line:137:5, col:23> col:23 expected_result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x2371a7a1560 <line:141:5, col:9> col:9 expected_client_alert 'int'
| |-FieldDecl 0x2371a7a15d0 <line:143:5, col:9> col:9 expected_server_alert 'int'
| |-FieldDecl 0x2371a7a1640 <line:146:5, col:9> col:9 expected_protocol 'int'
| |-FieldDecl 0x2371a7a16a8 <line:157:5, col:22> col:22 expected_servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x2371a7a1730 <line:158:5, col:26> col:26 session_ticket_expected 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x2371a7a17a0 <line:160:5, col:11> col:11 expected_npn_protocol 'char *'
| |-FieldDecl 0x2371a7a1810 <line:161:5, col:11> col:11 expected_alpn_protocol 'char *'
| |-FieldDecl 0x2371a7a1880 <line:163:5, col:9> col:9 resumption_expected 'int'
| `-FieldDecl 0x2371a7a18f0 <line:165:5, col:9> col:9 expected_tmp_key_type 'int'
|-TypedefDecl 0x2371a7a19a8 <line:109:1, line:166:3> col:3 referenced SSL_TEST_CTX 'struct SSL_TEST_CTX':'SSL_TEST_CTX'
| `-ElaboratedType 0x2371a7a1950 'struct SSL_TEST_CTX' sugar
|   `-RecordType 0x2371a7a11b0 'SSL_TEST_CTX'
|     `-Record 0x2371a7a1110 ''
|-FunctionDecl 0x2371a7a1b40 <line:168:1, col:58> col:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| `-ParmVarDecl 0x2371a7a1a28 <col:34, col:52> col:52 result 'ssl_test_result_t':'ssl_test_result_t'
|-FunctionDecl 0x2371a7a1d00 <line:169:1, col:37> col:13 ssl_alert_name 'const char *(int)'
| `-ParmVarDecl 0x2371a7a1c18 <col:28, col:32> col:32 alert 'int'
|-FunctionDecl 0x2371a7a1e88 <line:170:1, col:43> col:13 ssl_protocol_name 'const char *(int)'
| `-ParmVarDecl 0x2371a7a1dd8 <col:31, col:35> col:35 protocol 'int'
|-FunctionDecl 0x2371a7a2070 <line:171:1, col:75> col:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| `-ParmVarDecl 0x2371a7a1f58 <col:38, col:60> col:60 verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-FunctionDecl 0x2371a79f230 <line:172:1, col:56> col:13 used ssl_servername_name 'const char *(ssl_servername_t)'
| `-ParmVarDecl 0x2371a79f120 <col:33, col:50> col:50 server 'ssl_servername_t':'ssl_servername_t'
|-FunctionDecl 0x2371a79f410 <line:173:1, line:174:61> line:173:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| `-ParmVarDecl 0x2371a79f300 <col:42, line:174:42> col:42 servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-FunctionDecl 0x2371a79f5f0 <line:175:1, col:64> col:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| `-ParmVarDecl 0x2371a79f4e0 <col:37, col:58> col:58 server 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-FunctionDecl 0x2371a79f7d0 <line:176:1, col:58> col:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| `-ParmVarDecl 0x2371a79f6c0 <col:34, col:52> col:52 method 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x2371a79f9b0 <line:177:1, col:62> col:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| `-ParmVarDecl 0x2371a79f8a0 <col:37, col:58> col:58 mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x2371a79fb90 <line:178:1, col:60> col:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| `-ParmVarDecl 0x2371a79fa80 <col:36, col:56> col:56 mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x2371a79fd70 <line:179:1, col:62> col:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| `-ParmVarDecl 0x2371a79fc60 <col:33, col:51> col:51 cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x2371a7a0100 <line:185:1, col:77> col:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
| |-ParmVarDecl 0x2371a79fe68 <col:35, col:47> col:47 invalid conf 'const int *'
| `-ParmVarDecl 0x2371a79fee8 <col:53, col:65> col:65 test_section 'const char *'
|-FunctionDecl 0x2371a7a02a8 <line:187:1, col:36> col:15 SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
|-FunctionDecl 0x2371a7a0478 <line:189:1, col:41> col:6 SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| `-ParmVarDecl 0x2371a7a0370 <col:24, col:38> col:38 ctx 'SSL_TEST_CTX *'
|-RecordDecl 0x2371a7a0538 <.//openssl//file_jk/after\test/handshake_helper.h:15:9, line:48:1> line:15:16 struct handshake_result definition
| |-FieldDecl 0x2371a7a0600 <line:16:5, col:23> col:23 referenced result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x2371a7a0670 <line:19:5, col:9> col:9 referenced client_alert_sent 'int'
| |-FieldDecl 0x2371a7a06e0 <line:21:5, col:9> col:9 referenced client_num_fatal_alerts_sent 'int'
| |-FieldDecl 0x2371a7a0750 <line:23:5, col:9> col:9 referenced client_alert_received 'int'
| |-FieldDecl 0x2371a7a07c0 <line:25:5, col:9> col:9 referenced server_alert_sent 'int'
| |-FieldDecl 0x2371a7a0830 <line:27:5, col:9> col:9 referenced server_num_fatal_alerts_sent 'int'
| |-FieldDecl 0x2371a7a08a0 <line:29:5, col:9> col:9 referenced server_alert_received 'int'
| |-FieldDecl 0x2371a7a0910 <line:31:5, col:9> col:9 referenced server_protocol 'int'
| |-FieldDecl 0x2371a7a0980 <line:32:5, col:9> col:9 referenced client_protocol 'int'
| |-FieldDecl 0x2371a7a09e8 <line:34:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x2371a7a0a50 <line:36:5, col:26> col:26 referenced session_ticket 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x2371a7a0ac0 <line:38:5, col:9> col:9 referenced session_ticket_do_not_call 'int'
| |-FieldDecl 0x2371a7a0b30 <line:39:5, col:11> col:11 referenced client_npn_negotiated 'char *'
| |-FieldDecl 0x2371a7a0ba0 <line:40:5, col:11> col:11 referenced server_npn_negotiated 'char *'
| |-FieldDecl 0x2371a7a0c10 <line:41:5, col:11> col:11 referenced client_alpn_negotiated 'char *'
| |-FieldDecl 0x2371a7a0c80 <line:42:5, col:11> col:11 referenced server_alpn_negotiated 'char *'
| |-FieldDecl 0x2371a7a0cf0 <line:44:5, col:9> col:9 referenced client_resumed 'int'
| |-FieldDecl 0x2371a7a0d60 <line:45:5, col:9> col:9 referenced server_resumed 'int'
| `-FieldDecl 0x2371a7a0dd0 <line:47:5, col:9> col:9 referenced tmp_key_type 'int'
|-TypedefDecl 0x2371a7a0e88 <line:15:1, line:48:3> col:3 referenced HANDSHAKE_RESULT 'struct handshake_result':'struct handshake_result'
| `-ElaboratedType 0x2371a7a0e30 'struct handshake_result' sugar
|   `-RecordType 0x2371a7a05d0 'struct handshake_result'
|     `-Record 0x2371a7a0538 'handshake_result'
|-FunctionDecl 0x2371a747f80 <line:50:1, col:44> col:19 used HANDSHAKE_RESULT_new 'HANDSHAKE_RESULT *(void)'
|-FunctionDecl 0x2371a748158 <line:51:1, col:52> col:6 used HANDSHAKE_RESULT_free 'void (HANDSHAKE_RESULT *)'
| `-ParmVarDecl 0x2371a748048 <col:28, col:46> col:46 result 'HANDSHAKE_RESULT *'
|-FunctionDecl 0x2371a748678 <line:54:1, line:57:60> line:54:19 invalid do_handshake 'HANDSHAKE_RESULT *(int *, int *, int *, int *, int *, const SSL_TEST_CTX *)'
| |-ParmVarDecl 0x2371a748230 <col:32, col:41> col:41 invalid server_ctx 'int *'
| |-ParmVarDecl 0x2371a7482b0 <col:53, col:62> col:62 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x2371a748330 <line:55:32, col:41> col:41 invalid client_ctx 'int *'
| |-ParmVarDecl 0x2371a7483b0 <col:53, col:62> col:62 invalid resume_server_ctx 'int *'
| |-ParmVarDecl 0x2371a748430 <line:56:32, col:41> col:41 invalid resume_client_ctx 'int *'
| `-ParmVarDecl 0x2371a748508 <line:57:32, col:52> col:52 test_ctx 'const SSL_TEST_CTX *'
|-FunctionDecl 0x2371a748a08 <.//openssl//file_jk/after\test/testutil.h:85:1, col:60> col:6 add_test 'void (const char *, int (*)())'
| |-ParmVarDecl 0x2371a748760 <col:15, col:27> col:27 test_case_name 'const char *'
| `-ParmVarDecl 0x2371a7488c0 <col:43, col:59> col:49 test_fn 'int (*)()'
|-FunctionDecl 0x2371a748ed8 <line:86:1, col:80> col:6 add_all_tests 'void (const char *, int (*)(int), int)'
| |-ParmVarDecl 0x2371a748ae8 <col:20, col:32> col:32 test_case_name 'const char *'
| |-ParmVarDecl 0x2371a748ce8 <col:48, col:70> col:54 test_fn 'int (*)(int)'
| `-ParmVarDecl 0x2371a748d68 <col:73, col:77> col:77 num 'int'
|-FunctionDecl 0x2371a750130 <line:87:1, col:41> col:5 run_tests 'int (const char *)'
| `-ParmVarDecl 0x2371a750048 <col:15, col:27> col:27 test_prog_name 'const char *'
|-FunctionDecl 0x2371a750440 <line:97:1, col:67> col:5 strings_equal 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x2371a750208 <col:19, col:31> col:31 desc 'const char *'
| |-ParmVarDecl 0x2371a750288 <col:37, col:49> col:49 s1 'const char *'
| `-ParmVarDecl 0x2371a750308 <col:53, col:65> col:65 s2 'const char *'
|-FunctionDecl 0x2371a750588 prev 0x2371a747f80 <.//openssl//file_jk/after\test\handshake_helper.c:19:1, line:24:1> line:19:19 used HANDSHAKE_RESULT_new 'HANDSHAKE_RESULT *(void)'
| `-CompoundStmt 0x2371a750dd0 <line:20:1, line:24:1>
|   |-DeclStmt 0x2371a750898 <line:21:5, col:57>
|   | `-VarDecl 0x2371a750638 <col:5, col:56> col:23 used ret 'HANDSHAKE_RESULT *' cinit
|   |   `-ImplicitCastExpr 0x2371a750880 <col:29, col:56> 'HANDSHAKE_RESULT *' <IntegralToPointer>
|   |     `-CallExpr 0x2371a750858 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x2371a750840 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x2371a750790 <col:29> 'int ()' Function 0x2371a7506c8 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x2371a750820 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x2371a750800 <col:50, col:55> 'HANDSHAKE_RESULT':'struct handshake_result' lvalue
|   |           `-UnaryOperator 0x2371a7507e8 <col:51, col:52> 'HANDSHAKE_RESULT':'struct handshake_result' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x2371a7507d0 <col:52> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |               `-DeclRefExpr 0x2371a7507b0 <col:52> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a750638 'ret' 'HANDSHAKE_RESULT *' non_odr_use_unevaluated
|   |-DoStmt 0x2371a750d60 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a750d20 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a750d08 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a7509e0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a7509c0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a7509a0 <.//openssl//file_jk/after\test\handshake_helper.c:22:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x2371a750970 <.//openssl//file_jk/after\test\handshake_helper.c:22:16> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x2371a7508b0 <col:16> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a750638 'ret' 'HANDSHAKE_RESULT *'
|   | |   |     `-ImplicitCastExpr 0x2371a750988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'HANDSHAKE_RESULT *' <BitCast>
|   | |   |       `-ParenExpr 0x2371a750950 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2371a750928 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2371a7508e8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2371a750cf0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a750cc8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a750cb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a750bf8 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a750c98 <col:28, <scratch space>:294:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a750c80 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a750c58 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x2371a750d38 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a750d80 <.//openssl//file_jk/after\test\handshake_helper.c:22:28>
|   `-ReturnStmt 0x2371a750dc0 <line:23:5, col:12>
|     `-ImplicitCastExpr 0x2371a750da8 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x2371a750d88 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a750638 'ret' 'HANDSHAKE_RESULT *'
|-FunctionDecl 0x2371a750eb8 prev 0x2371a748158 <line:26:1, line:35:1> line:26:6 used HANDSHAKE_RESULT_free 'void (HANDSHAKE_RESULT *)'
| |-ParmVarDecl 0x2371a750e10 <col:28, col:46> col:46 used result 'HANDSHAKE_RESULT *'
| `-CompoundStmt 0x2371a74f590 <line:27:1, line:35:1>
|   |-IfStmt 0x2371a74f070 <line:28:5, line:29:9>
|   | |-BinaryOperator 0x2371a74f040 <line:28:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2371a74f010 <.//openssl//file_jk/after\test\handshake_helper.c:28:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2371a750f60 <col:9> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x2371a750e10 'result' 'HANDSHAKE_RESULT *'
|   | | `-ImplicitCastExpr 0x2371a74f028 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'HANDSHAKE_RESULT *' <BitCast>
|   | |   `-ParenExpr 0x2371a74eff0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2371a750fc0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2371a750f80 <col:26> 'int' 0
|   | `-ReturnStmt 0x2371a74f060 <.//openssl//file_jk/after\test\handshake_helper.c:29:9>
|   |-CallExpr 0x2371a74f218 <line:30:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x2371a74f200 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a74f178 <col:5> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2371a74f240 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2371a74f1d0 <col:18, col:26> 'char *' lvalue ->client_npn_negotiated 0x2371a7a0b30
|   |     `-ImplicitCastExpr 0x2371a74f1b8 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a74f198 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x2371a750e10 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x2371a74f2f8 <line:31:5, col:47> 'int'
|   | |-ImplicitCastExpr 0x2371a74f2e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a74f258 <col:5> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2371a74f320 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2371a74f2b0 <col:18, col:26> 'char *' lvalue ->server_npn_negotiated 0x2371a7a0ba0
|   |     `-ImplicitCastExpr 0x2371a74f298 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a74f278 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x2371a750e10 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x2371a74f3d8 <line:32:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x2371a74f3c0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a74f338 <col:5> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2371a74f400 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2371a74f390 <col:18, col:26> 'char *' lvalue ->client_alpn_negotiated 0x2371a7a0c10
|   |     `-ImplicitCastExpr 0x2371a74f378 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a74f358 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x2371a750e10 'result' 'HANDSHAKE_RESULT *'
|   |-CallExpr 0x2371a74f4b8 <line:33:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x2371a74f4a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a74f418 <col:5> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2371a74f4e0 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2371a74f470 <col:18, col:26> 'char *' lvalue ->server_alpn_negotiated 0x2371a7a0c80
|   |     `-ImplicitCastExpr 0x2371a74f458 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a74f438 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x2371a750e10 'result' 'HANDSHAKE_RESULT *'
|   `-CallExpr 0x2371a74f550 <line:34:5, col:24> 'int'
|     |-ImplicitCastExpr 0x2371a74f538 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2371a74f4f8 <col:5> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x2371a74f578 <col:18> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x2371a74f518 <col:18> 'HANDSHAKE_RESULT *' lvalue ParmVar 0x2371a750e10 'result' 'HANDSHAKE_RESULT *'
|-RecordDecl 0x2371a74f5d0 <line:42:9, line:48:1> line:42:16 struct handshake_ex_data_st definition
| |-FieldDecl 0x2371a74f6a8 <line:43:5, col:9> col:9 referenced alert_sent 'int'
| |-FieldDecl 0x2371a74f718 <line:44:5, col:9> col:9 referenced num_fatal_alerts_sent 'int'
| |-FieldDecl 0x2371a74f788 <line:45:5, col:9> col:9 referenced alert_received 'int'
| |-FieldDecl 0x2371a74f7f8 <line:46:5, col:9> col:9 referenced session_ticket_do_not_call 'int'
| `-FieldDecl 0x2371a74f860 <line:47:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
|-TypedefDecl 0x2371a74f918 <line:42:1, line:48:3> col:3 referenced HANDSHAKE_EX_DATA 'struct handshake_ex_data_st':'struct handshake_ex_data_st'
| `-ElaboratedType 0x2371a74f8c0 'struct handshake_ex_data_st' sugar
|   `-RecordType 0x2371a74f670 'struct handshake_ex_data_st'
|     `-Record 0x2371a74f5d0 'handshake_ex_data_st'
|-RecordDecl 0x2371a74f988 <line:50:9, line:55:1> line:50:16 struct ctx_data_st definition
| |-FieldDecl 0x2371a74fa80 <line:51:5, col:20> col:20 referenced npn_protocols 'unsigned char *'
| |-FieldDecl 0x2371a74fae8 <line:52:5, col:12> col:12 referenced npn_protocols_len 'size_t':'unsigned long long'
| |-FieldDecl 0x2371a74fb58 <line:53:5, col:20> col:20 referenced alpn_protocols 'unsigned char *'
| `-FieldDecl 0x2371a74fbc0 <line:54:5, col:12> col:12 referenced alpn_protocols_len 'size_t':'unsigned long long'
|-TypedefDecl 0x2371a74fc78 <line:50:1, line:55:3> col:3 referenced CTX_DATA 'struct ctx_data_st':'struct ctx_data_st'
| `-ElaboratedType 0x2371a74fc20 'struct ctx_data_st' sugar
|   `-RecordType 0x2371a74fa20 'struct ctx_data_st'
|     `-Record 0x2371a74f988 'ctx_data_st'
|-FunctionDecl 0x2371a74fe88 <line:58:1, line:64:1> line:58:13 used ctx_data_free_data 'void (CTX_DATA *)' static
| |-ParmVarDecl 0x2371a74fd78 <col:32, col:42> col:42 used ctx_data 'CTX_DATA *'
| `-CompoundStmt 0x2371a749300 <line:59:1, line:64:1>
|   |-CallExpr 0x2371a748f90 <line:60:5, col:41> 'int'
|   | |-ImplicitCastExpr 0x2371a74ffd0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a74ff48 <col:5> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2371a748fb8 <col:18, col:28> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x2371a74ffa0 <col:18, col:28> 'unsigned char *' lvalue ->npn_protocols 0x2371a74fa80
|   |     `-ImplicitCastExpr 0x2371a74ff88 <col:18> 'CTX_DATA *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a74ff68 <col:18> 'CTX_DATA *' lvalue ParmVar 0x2371a74fd78 'ctx_data' 'CTX_DATA *'
|   |-BinaryOperator 0x2371a7490d8 <line:61:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|   | |-MemberExpr 0x2371a749008 <.//openssl//file_jk/after\test\handshake_helper.c:61:5, col:15> 'unsigned char *' lvalue ->npn_protocols 0x2371a74fa80
|   | | `-ImplicitCastExpr 0x2371a748ff0 <col:5> 'CTX_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a748fd0 <col:5> 'CTX_DATA *' lvalue ParmVar 0x2371a74fd78 'ctx_data' 'CTX_DATA *'
|   | `-ImplicitCastExpr 0x2371a7490c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |   `-ParenExpr 0x2371a7490a0 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x2371a749078 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x2371a749038 <col:26> 'int' 0
|   |-CallExpr 0x2371a749198 <.//openssl//file_jk/after\test\handshake_helper.c:62:5, col:42> 'int'
|   | |-ImplicitCastExpr 0x2371a749180 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7490f8 <col:5> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2371a7491c0 <col:18, col:28> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x2371a749150 <col:18, col:28> 'unsigned char *' lvalue ->alpn_protocols 0x2371a74fb58
|   |     `-ImplicitCastExpr 0x2371a749138 <col:18> 'CTX_DATA *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a749118 <col:18> 'CTX_DATA *' lvalue ParmVar 0x2371a74fd78 'ctx_data' 'CTX_DATA *'
|   `-BinaryOperator 0x2371a7492e0 <line:63:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'unsigned char *' '='
|     |-MemberExpr 0x2371a749210 <.//openssl//file_jk/after\test\handshake_helper.c:63:5, col:15> 'unsigned char *' lvalue ->alpn_protocols 0x2371a74fb58
|     | `-ImplicitCastExpr 0x2371a7491f8 <col:5> 'CTX_DATA *' <LValueToRValue>
|     |   `-DeclRefExpr 0x2371a7491d8 <col:5> 'CTX_DATA *' lvalue ParmVar 0x2371a74fd78 'ctx_data' 'CTX_DATA *'
|     `-ImplicitCastExpr 0x2371a7492c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|       `-ParenExpr 0x2371a7492a8 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x2371a749280 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x2371a749240 <col:26> 'int' 0
|-VarDecl 0x2371a749348 <.//openssl//file_jk/after\test\handshake_helper.c:66:1, col:12> col:12 used ex_data_idx 'int' static
|-FunctionDecl 0x2371a7495c8 <line:68:1, line:82:1> line:68:13 invalid info_cb 'void (const int *, int, int)' static
| |-ParmVarDecl 0x2371a7493e0 <col:21, col:32> col:32 invalid s 'const int *'
| |-ParmVarDecl 0x2371a749460 <col:35, col:39> col:39 used where 'int'
| |-ParmVarDecl 0x2371a7494e0 <col:46, col:50> col:50 used ret 'int'
| `-CompoundStmt 0x2371a74b2b0 <line:69:1, line:82:1>
|   `-IfStmt 0x2371a74b298 <line:70:5, line:81:5>
|     |-OpaqueValueExpr 0x2371a74b280 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2371a74b260 <line:70:31, line:81:5>
|       |-DeclStmt 0x2371a7498f0 <line:71:9, line:72:66>
|       | `-VarDecl 0x2371a749758 <line:71:9, col:28> col:28 used ex_data 'HANDSHAKE_EX_DATA *'
|       `-IfStmt 0x2371a74b238 <line:73:9, line:80:9> has_else
|         |-OpaqueValueExpr 0x2371a74b220 <<invalid sloc>> '_Bool'
|         |-CompoundStmt 0x2371a74b128 <line:73:35, line:78:9>
|         | |-BinaryOperator 0x2371a7499f8 <line:74:13, col:35> 'int' '='
|         | | |-MemberExpr 0x2371a749978 <col:13, col:22> 'int' lvalue ->alert_sent 0x2371a74f6a8
|         | | | `-ImplicitCastExpr 0x2371a749960 <col:13> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x2371a749928 <col:13> 'HANDSHAKE_EX_DATA *' lvalue Var 0x2371a749758 'ex_data' 'HANDSHAKE_EX_DATA *'
|         | | `-ImplicitCastExpr 0x2371a7499e0 <col:35> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x2371a7499a8 <col:35> 'int' lvalue ParmVar 0x2371a7494e0 'ret' 'int'
|         | `-IfStmt 0x2371a74b110 <line:75:13, line:77:47>
|         |   |-BinaryOperator 0x2371a74b070 <line:75:17, line:76:64> 'int' '||'
|         |   | |-BinaryOperator 0x2371a749d10 <line:75:17, col:60> 'int' '=='
|         |   | | |-CallExpr 0x2371a749c70 <col:17, col:55> 'int'
|         |   | | | |-ImplicitCastExpr 0x2371a749c58 <col:17> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|         |   | | | | `-DeclRefExpr 0x2371a749a18 <col:17> 'int (const char *, const char *)' Function 0x2371a703720 'strcmp' 'int (const char *, const char *)'
|         |   | | | |-ImplicitCastExpr 0x2371a749ca0 <col:24, col:49> 'const char *' <IntegralToPointer>
|         |   | | | | `-CallExpr 0x2371a749b80 <col:24, col:49> 'int'
|         |   | | | |   |-ImplicitCastExpr 0x2371a749b68 <col:24> 'int (*)()' <FunctionToPointerDecay>
|         |   | | | |   | `-DeclRefExpr 0x2371a749b28 <col:24> 'int ()' Function 0x2371a749a60 'SSL_alert_type_string' 'int ()'
|         |   | | | |   `-ImplicitCastExpr 0x2371a749ba8 <col:46> 'int' <LValueToRValue>
|         |   | | | |     `-DeclRefExpr 0x2371a749b48 <col:46> 'int' lvalue ParmVar 0x2371a7494e0 'ret' 'int'
|         |   | | | `-ImplicitCastExpr 0x2371a749cd0 <col:52> 'const char *' <NoOp>
|         |   | | |   `-ImplicitCastExpr 0x2371a749cb8 <col:52> 'char *' <ArrayToPointerDecay>
|         |   | | |     `-StringLiteral 0x2371a749bf8 <col:52> 'char [2]' lvalue "F"
|         |   | | `-IntegerLiteral 0x2371a749ce8 <col:60> 'int' 0
|         |   | `-BinaryOperator 0x2371a74b050 <line:76:20, col:64> 'int' '=='
|         |   |   |-CallExpr 0x2371a74afb0 <col:20, col:59> 'int'
|         |   |   | |-ImplicitCastExpr 0x2371a749f50 <col:20> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|         |   |   | | `-DeclRefExpr 0x2371a749d30 <col:20> 'int (const char *, const char *)' Function 0x2371a703720 'strcmp' 'int (const char *, const char *)'
|         |   |   | |-ImplicitCastExpr 0x2371a74afe0 <col:27, col:52> 'const char *' <IntegralToPointer>
|         |   |   | | `-CallExpr 0x2371a749e98 <col:27, col:52> 'int'
|         |   |   | |   |-ImplicitCastExpr 0x2371a749e80 <col:27> 'int (*)()' <FunctionToPointerDecay>
|         |   |   | |   | `-DeclRefExpr 0x2371a749e40 <col:27> 'int ()' Function 0x2371a749d78 'SSL_alert_desc_string' 'int ()'
|         |   |   | |   `-ImplicitCastExpr 0x2371a749ec0 <col:49> 'int' <LValueToRValue>
|         |   |   | |     `-DeclRefExpr 0x2371a749e60 <col:49> 'int' lvalue ParmVar 0x2371a7494e0 'ret' 'int'
|         |   |   | `-ImplicitCastExpr 0x2371a74b010 <col:55> 'const char *' <NoOp>
|         |   |   |   `-ImplicitCastExpr 0x2371a74aff8 <col:55> 'char *' <ArrayToPointerDecay>
|         |   |   |     `-StringLiteral 0x2371a749f18 <col:55> 'char [3]' lvalue "CN"
|         |   |   `-IntegerLiteral 0x2371a74b028 <col:64> 'int' 0
|         |   `-UnaryOperator 0x2371a74b0f8 <line:77:17, col:47> 'int' postfix '++'
|         |     `-MemberExpr 0x2371a74b0c8 <col:17, col:26> 'int' lvalue ->num_fatal_alerts_sent 0x2371a74f718
|         |       `-ImplicitCastExpr 0x2371a74b0b0 <col:17> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         |         `-DeclRefExpr 0x2371a74b090 <col:17> 'HANDSHAKE_EX_DATA *' lvalue Var 0x2371a749758 'ex_data' 'HANDSHAKE_EX_DATA *'
|         `-CompoundStmt 0x2371a74b208 <line:78:16, line:80:9>
|           `-BinaryOperator 0x2371a74b1e8 <line:79:13, col:39> 'int' '='
|             |-MemberExpr 0x2371a74b180 <col:13, col:22> 'int' lvalue ->alert_received 0x2371a74f788
|             | `-ImplicitCastExpr 0x2371a74b168 <col:13> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|             |   `-DeclRefExpr 0x2371a74b148 <col:13> 'HANDSHAKE_EX_DATA *' lvalue Var 0x2371a749758 'ex_data' 'HANDSHAKE_EX_DATA *'
|             `-ImplicitCastExpr 0x2371a74b1d0 <col:39> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x2371a74b1b0 <col:39> 'int' lvalue ParmVar 0x2371a7494e0 'ret' 'int'
|-FunctionDecl 0x2371a74b4d0 <line:90:1, line:124:1> line:90:12 invalid select_server_ctx 'int (int *, void *, int)' static
| |-ParmVarDecl 0x2371a74b2e0 <col:30, col:35> col:35 invalid s 'int *'
| |-ParmVarDecl 0x2371a74b360 <col:38, col:44> col:44 arg 'void *'
| |-ParmVarDecl 0x2371a74b3e0 <col:49, col:53> col:53 used ignore 'int'
| `-CompoundStmt 0x2371a7515c0 <line:91:1, line:124:1>
|   |-DeclStmt 0x2371a74b730 <line:92:5, col:78>
|   | `-VarDecl 0x2371a74b5b8 <col:5, col:17> col:17 used servername 'const char *'
|   |-DeclStmt 0x2371a74b800 <line:93:5, line:94:62>
|   | `-VarDecl 0x2371a74b758 <line:93:5, col:24> col:24 used ex_data 'HANDSHAKE_EX_DATA *'
|   |-IfStmt 0x2371a74ba18 <line:96:5, line:99:5>
|   | |-BinaryOperator 0x2371a74b908 <line:96:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2371a74b8d8 <.//openssl//file_jk/after\test\handshake_helper.c:96:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2371a74b818 <col:9> 'const char *' lvalue Var 0x2371a74b5b8 'servername' 'const char *'
|   | | `-ImplicitCastExpr 0x2371a74b8f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x2371a74b8b8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2371a74b890 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2371a74b850 <col:26> 'int' 0
|   | `-CompoundStmt 0x2371a74ba00 <.//openssl//file_jk/after\test\handshake_helper.c:96:29, line:99:5>
|   |   `-BinaryOperator 0x2371a74b9e0 <line:97:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|   |     |-MemberExpr 0x2371a74b978 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x2371a74f860
|   |     | `-ImplicitCastExpr 0x2371a74b960 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2371a74b928 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x2371a74b758 'ex_data' 'HANDSHAKE_EX_DATA *'
|   |     `-ImplicitCastExpr 0x2371a74b9c8 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |       `-DeclRefExpr 0x2371a74b9a8 <col:31> 'int' EnumConstant 0x2371a79b0b0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|   `-IfStmt 0x2371a751598 <line:101:5, line:123:5> has_else
|     |-BinaryOperator 0x2371a74bbb0 <line:101:9, col:42> 'int' '=='
|     | |-CallExpr 0x2371a74bb10 <col:9, col:37> 'int'
|     | | |-ImplicitCastExpr 0x2371a74baf8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|     | | | `-DeclRefExpr 0x2371a74ba30 <col:9> 'int (const char *, const char *)' Function 0x2371a703720 'strcmp' 'int (const char *, const char *)'
|     | | |-ImplicitCastExpr 0x2371a74bb40 <col:16> 'const char *' <LValueToRValue>
|     | | | `-DeclRefExpr 0x2371a74ba50 <col:16> 'const char *' lvalue Var 0x2371a74b5b8 'servername' 'const char *'
|     | | `-ImplicitCastExpr 0x2371a74bb70 <col:28> 'const char *' <NoOp>
|     | |   `-ImplicitCastExpr 0x2371a74bb58 <col:28> 'char *' <ArrayToPointerDecay>
|     | |     `-StringLiteral 0x2371a74baa8 <col:28> 'char [8]' lvalue "server2"
|     | `-IntegerLiteral 0x2371a74bb88 <col:42> 'int' 0
|     |-CompoundStmt 0x2371a7511b8 <col:45, line:114:5>
|     | `-BinaryOperator 0x2371a751198 <line:112:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|     |   |-MemberExpr 0x2371a751130 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x2371a74f860
|     |   | `-ImplicitCastExpr 0x2371a751118 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x2371a7510f8 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x2371a74b758 'ex_data' 'HANDSHAKE_EX_DATA *'
|     |   `-ImplicitCastExpr 0x2371a751180 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|     |     `-DeclRefExpr 0x2371a751160 <col:31> 'int' EnumConstant 0x2371a79b108 'SSL_TEST_SERVERNAME_SERVER2' 'int'
|     `-IfStmt 0x2371a751570 <line:114:12, line:123:5> has_else
|       |-BinaryOperator 0x2371a751318 <line:114:16, col:49> 'int' '=='
|       | |-CallExpr 0x2371a751278 <col:16, col:44> 'int'
|       | | |-ImplicitCastExpr 0x2371a751260 <col:16> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x2371a7511d0 <col:16> 'int (const char *, const char *)' Function 0x2371a703720 'strcmp' 'int (const char *, const char *)'
|       | | |-ImplicitCastExpr 0x2371a7512a8 <col:23> 'const char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x2371a7511f0 <col:23> 'const char *' lvalue Var 0x2371a74b5b8 'servername' 'const char *'
|       | | `-ImplicitCastExpr 0x2371a7512d8 <col:35> 'const char *' <NoOp>
|       | |   `-ImplicitCastExpr 0x2371a7512c0 <col:35> 'char *' <ArrayToPointerDecay>
|       | |     `-StringLiteral 0x2371a751210 <col:35> 'char [8]' lvalue "server1"
|       | `-IntegerLiteral 0x2371a7512f0 <col:49> 'int' 0
|       |-CompoundStmt 0x2371a7513f8 <col:52, line:117:5>
|       | `-BinaryOperator 0x2371a7513d8 <line:115:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|       |   |-MemberExpr 0x2371a751370 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x2371a74f860
|       |   | `-ImplicitCastExpr 0x2371a751358 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x2371a751338 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x2371a74b758 'ex_data' 'HANDSHAKE_EX_DATA *'
|       |   `-ImplicitCastExpr 0x2371a7513c0 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|       |     `-DeclRefExpr 0x2371a7513a0 <col:31> 'int' EnumConstant 0x2371a79b0b0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|       `-IfStmt 0x2371a751548 <line:117:12, line:123:5> has_else
|         |-ImplicitCastExpr 0x2371a751448 <line:117:16> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x2371a751410 <col:16> 'int' lvalue ParmVar 0x2371a74b3e0 'ignore' 'int'
|         |-CompoundStmt 0x2371a751520 <col:24, line:120:5>
|         | `-BinaryOperator 0x2371a751500 <line:118:9, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|         |   |-MemberExpr 0x2371a751498 <col:9, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x2371a74f860
|         |   | `-ImplicitCastExpr 0x2371a751480 <col:9> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|         |   |   `-DeclRefExpr 0x2371a751460 <col:9> 'HANDSHAKE_EX_DATA *' lvalue Var 0x2371a74b758 'ex_data' 'HANDSHAKE_EX_DATA *'
|         |   `-ImplicitCastExpr 0x2371a7514e8 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|         |     `-DeclRefExpr 0x2371a7514c8 <col:31> 'int' EnumConstant 0x2371a79b0b0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|         `-CompoundStmt 0x2371a751538 <line:120:12, line:123:5>
|-FunctionDecl 0x2371a7517f0 <line:137:1, line:140:1> line:137:12 invalid servername_ignore_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x2371a751608 <col:33, col:38> col:38 invalid s 'int *'
| |-ParmVarDecl 0x2371a751688 <col:41, col:46> col:46 ad 'int *'
| |-ParmVarDecl 0x2371a751708 <col:50, col:56> col:56 used arg 'void *'
| `-CompoundStmt 0x2371a751920 <line:138:1, line:140:1>
|-FunctionDecl 0x2371a751b08 <line:142:1, line:145:1> line:142:12 invalid servername_reject_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x2371a751960 <col:33, col:38> col:38 invalid s 'int *'
| |-ParmVarDecl 0x2371a7519e0 <col:41, col:46> col:46 ad 'int *'
| |-ParmVarDecl 0x2371a751a60 <col:50, col:56> col:56 used arg 'void *'
| `-CompoundStmt 0x2371a751c38 <line:143:1, line:145:1>
|-VarDecl 0x2371a751c78 <line:147:1, col:49> col:22 used dummy_ocsp_resp_good_val 'unsigned char' static cinit
| `-ImplicitCastExpr 0x2371a751d20 <col:49> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x2371a751ce0 <col:49> 'int' 255
|-VarDecl 0x2371a751d50 <line:148:1, col:48> col:22 used dummy_ocsp_resp_bad_val 'unsigned char' static cinit
| `-ImplicitCastExpr 0x2371a751df8 <col:48> 'unsigned char' <IntegralCast>
|   `-IntegerLiteral 0x2371a751db8 <col:48> 'int' 254
|-FunctionDecl 0x2371a74cfd0 <line:150:1, line:165:1> line:150:12 invalid server_ocsp_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x2371a751e28 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x2371a751ea8 <col:35, col:41> col:41 used arg 'void *'
| `-CompoundStmt 0x2371a74d698 <line:151:1, line:165:1>
|   |-DeclStmt 0x2371a74d118 <line:152:5, col:24>
|   | `-VarDecl 0x2371a74d0b0 <col:5, col:20> col:20 used resp 'unsigned char *'
|   |-BinaryOperator 0x2371a74d2f8 <line:154:5, col:28> 'unsigned char *' '='
|   | |-DeclRefExpr 0x2371a74d130 <col:5> 'unsigned char *' lvalue Var 0x2371a74d0b0 'resp' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2371a74d2e0 <col:12, col:28> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x2371a74d2b8 <col:12, col:28> 'int'
|   |     |-ImplicitCastExpr 0x2371a74d2a0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a74d258 <col:12> 'int ()' Function 0x2371a74d190 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x2371a74d278 <col:27> 'int' 1
|   `-BinaryOperator 0x2371a74d520 <line:160:5, col:31> 'unsigned char' '='
|     |-UnaryOperator 0x2371a74d448 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x2371a74d430 <col:6> 'unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x2371a74d410 <col:6> 'unsigned char *' lvalue Var 0x2371a74d0b0 'resp' 'unsigned char *'
|     `-ImplicitCastExpr 0x2371a74d508 <col:13, col:31> 'unsigned char' <LValueToRValue>
|       `-UnaryOperator 0x2371a74d4f0 <col:13, col:31> 'unsigned char' lvalue prefix '*' cannot overflow
|         `-CStyleCastExpr 0x2371a74d4c8 <col:14, col:31> 'unsigned char *' <BitCast>
|           `-ImplicitCastExpr 0x2371a74d4b0 <col:31> 'void *' <LValueToRValue> part_of_explicit_cast
|             `-DeclRefExpr 0x2371a74d460 <col:31> 'void *' lvalue ParmVar 0x2371a751ea8 'arg' 'void *'
|-FunctionDecl 0x2371a74d7f8 <line:167:1, line:177:1> line:167:12 invalid client_ocsp_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x2371a74d6d8 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x2371a74d758 <col:35, col:41> col:41 arg 'void *'
| `-CompoundStmt 0x2371a74ddf0 <line:168:1, line:177:1>
|   |-DeclStmt 0x2371a74d940 <line:169:5, col:30>
|   | `-VarDecl 0x2371a74d8d8 <col:5, col:26> col:26 used resp 'const unsigned char *'
|   |-DeclStmt 0x2371a74d9d8 <line:170:5, col:12>
|   | `-VarDecl 0x2371a74d970 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x2371a74dda0 <line:173:5, line:174:16>
|   | |-BinaryOperator 0x2371a74dd48 <line:173:9, col:30> 'int' '||'
|   | | |-BinaryOperator 0x2371a74dc10 <col:9, col:16> 'int' '!='
|   | | | |-ImplicitCastExpr 0x2371a74dbf8 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2371a74dbb0 <col:9> 'int' lvalue Var 0x2371a74d970 'len' 'int'
|   | | | `-IntegerLiteral 0x2371a74dbd0 <col:16> 'int' 1
|   | | `-BinaryOperator 0x2371a74dd28 <col:21, col:30> 'int' '!='
|   | |   |-ImplicitCastExpr 0x2371a74dcf8 <col:21, col:22> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x2371a74dcc8 <col:21, col:22> 'unsigned char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x2371a74dc90 <col:21, col:22> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x2371a74dc78 <col:22> 'const unsigned char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x2371a74dc58 <col:22> 'const unsigned char *' lvalue Var 0x2371a74d8d8 'resp' 'const unsigned char *'
|   | |   `-ImplicitCastExpr 0x2371a74dd10 <col:30> 'int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x2371a74dce0 <col:30> 'unsigned char' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2371a74dca8 <col:30> 'unsigned char' lvalue Var 0x2371a751c78 'dummy_ocsp_resp_good_val' 'unsigned char'
|   | `-ReturnStmt 0x2371a74dd90 <line:174:9, col:16>
|   |   `-IntegerLiteral 0x2371a74dd68 <col:16> 'int' 0
|   `-ReturnStmt 0x2371a74dde0 <line:176:5, col:12>
|     `-IntegerLiteral 0x2371a74ddb8 <col:12> 'int' 1
|-FunctionDecl 0x2371a749fa0 <line:179:1, line:182:1> line:179:12 invalid verify_reject_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x2371a74de50 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x2371a74ded0 <col:50, col:56> col:56 arg 'void *'
| `-CompoundStmt 0x2371a74a1b0 <col:61, line:182:1>
|   `-ReturnStmt 0x2371a74a1a0 <line:181:5, col:12>
|     `-IntegerLiteral 0x2371a74a178 <col:12> 'int' 0
|-FunctionDecl 0x2371a74a300 <line:184:1, line:186:1> line:184:12 invalid verify_accept_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x2371a74a1e0 <col:29, col:45> col:45 invalid ctx 'int *'
| |-ParmVarDecl 0x2371a74a260 <col:50, col:56> col:56 arg 'void *'
| `-CompoundStmt 0x2371a74a400 <col:61, line:186:1>
|   `-ReturnStmt 0x2371a74a3f0 <line:185:5, col:12>
|     `-IntegerLiteral 0x2371a74a3c8 <col:12> 'int' 1
|-FunctionDecl 0x2371a74a7e0 <line:188:1, line:192:1> line:188:12 invalid broken_session_ticket_cb 'int (int *, unsigned char *, unsigned char *, int *, int *, int)' static
| |-ParmVarDecl 0x2371a74a448 <col:37, col:42> col:42 invalid s 'int *'
| |-ParmVarDecl 0x2371a74a4c8 <col:45, col:60> col:60 key_name 'unsigned char *'
| |-ParmVarDecl 0x2371a74a548 <col:70, col:85> col:85 iv 'unsigned char *'
| |-ParmVarDecl 0x2371a74a5c8 <line:189:37, col:53> col:53 invalid ctx 'int *'
| |-ParmVarDecl 0x2371a74a648 <col:58, col:68> col:68 invalid hctx 'int *'
| |-ParmVarDecl 0x2371a74a6c8 <col:74, col:78> col:78 enc 'int'
| `-CompoundStmt 0x2371a74a900 <line:190:1, line:192:1>
|   `-ReturnStmt 0x2371a74a8f0 <line:191:5, col:12>
|     `-IntegerLiteral 0x2371a74a8c8 <col:12> 'int' 0
|-FunctionDecl 0x2371a74acb8 <line:194:1, line:203:1> line:194:12 invalid do_not_call_session_ticket_cb 'int (int *, unsigned char *, unsigned char *, int *, int *, int)' static
| |-ParmVarDecl 0x2371a74a978 <col:42, col:47> col:47 invalid s 'int *'
| |-ParmVarDecl 0x2371a74a9f8 <col:50, col:65> col:65 key_name 'unsigned char *'
| |-ParmVarDecl 0x2371a74aa78 <line:195:42, col:57> col:57 iv 'unsigned char *'
| |-ParmVarDecl 0x2371a74aaf8 <line:196:42, col:58> col:58 invalid ctx 'int *'
| |-ParmVarDecl 0x2371a74ab78 <line:197:42, col:52> col:52 invalid hctx 'int *'
| |-ParmVarDecl 0x2371a74abf8 <col:58, col:62> col:62 enc 'int'
| `-CompoundStmt 0x2371a74af70 <line:198:1, line:203:1>
|   |-DeclStmt 0x2371a74ae58 <line:199:5, line:200:62>
|   | `-VarDecl 0x2371a74adb0 <line:199:5, col:24> col:24 used ex_data 'HANDSHAKE_EX_DATA *'
|   |-BinaryOperator 0x2371a74af18 <line:201:5, col:43> 'int' '='
|   | |-MemberExpr 0x2371a74aec0 <col:5, col:14> 'int' lvalue ->session_ticket_do_not_call 0x2371a74f7f8
|   | | `-ImplicitCastExpr 0x2371a74aea8 <col:5> 'HANDSHAKE_EX_DATA *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a74ae70 <col:5> 'HANDSHAKE_EX_DATA *' lvalue Var 0x2371a74adb0 'ex_data' 'HANDSHAKE_EX_DATA *'
|   | `-IntegerLiteral 0x2371a74aef0 <col:43> 'int' 1
|   `-ReturnStmt 0x2371a74af60 <line:202:5, col:12>
|     `-IntegerLiteral 0x2371a74af38 <col:12> 'int' 0
|-FunctionDecl 0x2371a753388 <line:206:1, line:238:1> line:206:13 used parse_protos 'void (const char *, unsigned char **, size_t *)' static
| |-ParmVarDecl 0x2371a753090 <col:26, col:38> col:38 used protos 'const char *'
| |-ParmVarDecl 0x2371a753148 <col:46, col:62> col:62 used out 'unsigned char **'
| |-ParmVarDecl 0x2371a753218 <col:67, col:75> col:75 used outlen 'size_t *'
| `-CompoundStmt 0x2371a74bfc0 <line:207:1, line:238:1>
|   |-DeclStmt 0x2371a7535e0 <line:208:5, col:26>
|   | |-VarDecl 0x2371a753468 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   | |-VarDecl 0x2371a7534e0 <col:5, col:17> col:17 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x2371a753558 <col:5, col:20> col:20 used prefix 'size_t':'unsigned long long'
|   |-BinaryOperator 0x2371a753710 <line:210:5, col:24> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2371a7535f8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2371a753468 'len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x2371a7536d0 <col:11, col:24> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x2371a7536b8 <col:11> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2371a753630 <col:11> 'unsigned long long (const char *)' Function 0x2371a703a80 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x2371a7536f8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2371a753650 <col:18> 'const char *' lvalue ParmVar 0x2371a753090 'protos' 'const char *'
|   |-DoStmt 0x2371a753a10 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a7539d0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a7539b8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a753878 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a753858 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a753838 <.//openssl//file_jk/after\test\handshake_helper.c:213:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x2371a753808 <.//openssl//file_jk/after\test\handshake_helper.c:213:16, col:17> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-UnaryOperator 0x2371a753768 <col:16, col:17> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |     |   `-ImplicitCastExpr 0x2371a753750 <col:17> 'unsigned char **' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x2371a753730 <col:17> 'unsigned char **' lvalue ParmVar 0x2371a753148 'out' 'unsigned char **'
|   | |   |     `-ImplicitCastExpr 0x2371a753820 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x2371a7537e8 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2371a7537c0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2371a753780 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2371a7539a0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a753978 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a753960 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a7538b0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a753948 <col:28, <scratch space>:295:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a753930 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a753908 <col:1> 'char [13]' lvalue "*out == NULL"
|   | `-IntegerLiteral 0x2371a7539e8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a753a30 <.//openssl//file_jk/after\test\handshake_helper.c:213:29>
|   |-BinaryOperator 0x2371a753b98 <line:216:5, col:34> 'unsigned char *' '='
|   | |-UnaryOperator 0x2371a753a70 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2371a753a58 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a753a38 <col:6> 'unsigned char **' lvalue ParmVar 0x2371a753148 'out' 'unsigned char **'
|   | `-ImplicitCastExpr 0x2371a753b80 <col:12, col:34> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x2371a753b58 <col:12, col:34> 'int'
|   |     |-ImplicitCastExpr 0x2371a753b40 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a753a88 <col:12> 'int ()' Function 0x2371a74d190 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x2371a753b20 <col:27, col:33> 'unsigned long long' '+'
|   |       |-ImplicitCastExpr 0x2371a753af0 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2371a753aa8 <col:27> 'size_t':'unsigned long long' lvalue Var 0x2371a753468 'len' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x2371a753b08 <col:33> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x2371a753ac8 <col:33> 'int' 1
|   |-DoStmt 0x2371a753e60 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a753e20 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a753e08 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a753d00 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a753ce0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a753cc0 <.//openssl//file_jk/after\test\handshake_helper.c:217:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x2371a753c90 <.//openssl//file_jk/after\test\handshake_helper.c:217:16, col:17> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-UnaryOperator 0x2371a753bf0 <col:16, col:17> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |     |   `-ImplicitCastExpr 0x2371a753bd8 <col:17> 'unsigned char **' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x2371a753bb8 <col:17> 'unsigned char **' lvalue ParmVar 0x2371a753148 'out' 'unsigned char **'
|   | |   |     `-ImplicitCastExpr 0x2371a753ca8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x2371a753c70 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2371a753c48 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2371a753c08 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2371a753df0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a753dc8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a753db0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a753d38 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a753d98 <col:28, <scratch space>:296:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a753d80 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a753d58 <col:1> 'char [13]' lvalue "*out != NULL"
|   | `-IntegerLiteral 0x2371a753e38 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a753e80 <.//openssl//file_jk/after\test\handshake_helper.c:217:29>
|   |-BinaryOperator 0x2371a753f70 <line:218:5, col:21> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x2371a753ec0 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2371a753ea8 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a753e88 <col:6> 'size_t *' lvalue ParmVar 0x2371a753218 'outlen' 'size_t *'
|   | `-BinaryOperator 0x2371a753f50 <col:15, col:21> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x2371a753f20 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a753ed8 <col:15> 'size_t':'unsigned long long' lvalue Var 0x2371a753468 'len' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x2371a753f38 <col:21> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x2371a753ef8 <col:21> 'int' 1
|   |-CallExpr 0x2371a752110 <line:224:5, col:33> 'void *'
|   | |-ImplicitCastExpr 0x2371a7520f8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a753f90 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x2371a6fbf48 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x2371a752148 <col:12, col:19> 'void *' <BitCast>
|   | | `-BinaryOperator 0x2371a752038 <col:12, col:19> 'unsigned char *' '+'
|   | |   |-ImplicitCastExpr 0x2371a752020 <col:12, col:13> 'unsigned char *' <LValueToRValue>
|   | |   | `-UnaryOperator 0x2371a753fe8 <col:12, col:13> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |   `-ImplicitCastExpr 0x2371a753fd0 <col:13> 'unsigned char **' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x2371a753fb0 <col:13> 'unsigned char **' lvalue ParmVar 0x2371a753148 'out' 'unsigned char **'
|   | |   `-IntegerLiteral 0x2371a754000 <col:19> 'int' 1
|   | |-ImplicitCastExpr 0x2371a752178 <col:22> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x2371a752160 <col:22> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a752058 <col:22> 'const char *' lvalue ParmVar 0x2371a753090 'protos' 'const char *'
|   | `-ImplicitCastExpr 0x2371a752190 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x2371a752078 <col:30> 'size_t':'unsigned long long' lvalue Var 0x2371a753468 'len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x2371a752220 <line:226:5, col:14> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2371a7521a8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2371a753558 'prefix' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x2371a752208 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x2371a7521e0 <col:14> 'int' 0
|   |-BinaryOperator 0x2371a752310 <line:227:5, col:18> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2371a752240 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2371a7534e0 'i' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x2371a7522f0 <col:9, col:18> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x2371a7522c0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a752278 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2371a753558 'prefix' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x2371a7522d8 <col:18> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x2371a752298 <col:18> 'int' 1
|   |-WhileStmt 0x2371a752b60 <line:228:5, line:235:5>
|   | |-BinaryOperator 0x2371a7523a0 <line:228:12, col:17> 'int' '<='
|   | | |-ImplicitCastExpr 0x2371a752370 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2371a752330 <col:12> 'size_t':'unsigned long long' lvalue Var 0x2371a7534e0 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2371a752388 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a752350 <col:17> 'size_t':'unsigned long long' lvalue Var 0x2371a753468 'len' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x2371a752b40 <col:22, line:235:5>
|   |   |-IfStmt 0x2371a752af0 <line:229:9, line:233:9>
|   |   | |-BinaryOperator 0x2371a7524e8 <line:229:13, col:26> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x2371a7524d0 <col:13, col:21> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x2371a7524b8 <col:13, col:21> 'unsigned char' <LValueToRValue>
|   |   | | |   `-ArraySubscriptExpr 0x2371a752480 <col:13, col:21> 'unsigned char' lvalue
|   |   | | |     |-ImplicitCastExpr 0x2371a752450 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   | | |     | `-ParenExpr 0x2371a752410 <col:13, col:18> 'unsigned char *' lvalue
|   |   | | |     |   `-UnaryOperator 0x2371a7523f8 <col:14, col:15> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | |     |     `-ImplicitCastExpr 0x2371a7523e0 <col:15> 'unsigned char **' <LValueToRValue>
|   |   | | |     |       `-DeclRefExpr 0x2371a7523c0 <col:15> 'unsigned char **' lvalue ParmVar 0x2371a753148 'out' 'unsigned char **'
|   |   | | |     `-ImplicitCastExpr 0x2371a752468 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x2371a752430 <col:20> 'size_t':'unsigned long long' lvalue Var 0x2371a7534e0 'i' 'size_t':'unsigned long long'
|   |   | | `-CharacterLiteral 0x2371a7524a0 <col:26> 'int' 44
|   |   | `-CompoundStmt 0x2371a752ac0 <col:31, line:233:9>
|   |   |   |-DoStmt 0x2371a752818 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   |   | |-CompoundStmt 0x2371a7527d8 <line:106:8, line:111:5>
|   |   |   | | `-IfStmt 0x2371a7527c0 <line:107:9, line:110:9>
|   |   |   | |   |-UnaryOperator 0x2371a752678 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |   |   | |   | `-ParenExpr 0x2371a752658 <col:14, col:24> 'int'
|   |   |   | |   |   `-BinaryOperator 0x2371a752638 <.//openssl//file_jk/after\test\handshake_helper.c:230:24, col:41> 'int' '>'
|   |   |   | |   |     |-BinaryOperator 0x2371a7525d8 <col:24, col:32> 'unsigned long long' '-'
|   |   |   | |   |     | |-BinaryOperator 0x2371a752580 <col:24, col:28> 'unsigned long long' '-'
|   |   |   | |   |     | | |-ImplicitCastExpr 0x2371a752550 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   |     | | | `-DeclRefExpr 0x2371a752508 <col:24> 'size_t':'unsigned long long' lvalue Var 0x2371a7534e0 'i' 'size_t':'unsigned long long'
|   |   |   | |   |     | | `-ImplicitCastExpr 0x2371a752568 <col:28> 'unsigned long long' <IntegralCast>
|   |   |   | |   |     | |   `-IntegerLiteral 0x2371a752528 <col:28> 'int' 1
|   |   |   | |   |     | `-ImplicitCastExpr 0x2371a7525c0 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   |     |   `-DeclRefExpr 0x2371a7525a0 <col:32> 'size_t':'unsigned long long' lvalue Var 0x2371a753558 'prefix' 'size_t':'unsigned long long'
|   |   |   | |   |     `-ImplicitCastExpr 0x2371a752620 <col:41> 'unsigned long long' <IntegralCast>
|   |   |   | |   |       `-IntegerLiteral 0x2371a7525f8 <col:41> 'int' 0
|   |   |   | |   `-CompoundStmt 0x2371a7527a8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   |   |   | |     `-CallExpr 0x2371a752780 <line:109:13, col:39> 'int'
|   |   |   | |       |-ImplicitCastExpr 0x2371a752768 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | |       | `-DeclRefExpr 0x2371a7526b0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   |   |   | |       `-UnaryOperator 0x2371a752750 <col:28, <scratch space>:297:1> 'int' prefix '!' cannot overflow
|   |   |   | |         `-ImplicitCastExpr 0x2371a752738 <col:1> 'char *' <ArrayToPointerDecay>
|   |   |   | |           `-StringLiteral 0x2371a752708 <col:1> 'char [19]' lvalue "i - 1 - prefix > 0"
|   |   |   | `-IntegerLiteral 0x2371a7527f0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   |   |-NullStmt 0x2371a752838 <.//openssl//file_jk/after\test\handshake_helper.c:230:43>
|   |   |   |-BinaryOperator 0x2371a752a28 <line:231:13, col:38> 'unsigned char' '='
|   |   |   | |-ArraySubscriptExpr 0x2371a752900 <col:13, col:26> 'unsigned char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x2371a7528d0 <col:13, col:18> 'unsigned char *' <LValueToRValue>
|   |   |   | | | `-ParenExpr 0x2371a752890 <col:13, col:18> 'unsigned char *' lvalue
|   |   |   | | |   `-UnaryOperator 0x2371a752878 <col:14, col:15> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   | | |     `-ImplicitCastExpr 0x2371a752860 <col:15> 'unsigned char **' <LValueToRValue>
|   |   |   | | |       `-DeclRefExpr 0x2371a752840 <col:15> 'unsigned char **' lvalue ParmVar 0x2371a753148 'out' 'unsigned char **'
|   |   |   | | `-ImplicitCastExpr 0x2371a7528e8 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2371a7528b0 <col:20> 'size_t':'unsigned long long' lvalue Var 0x2371a753558 'prefix' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x2371a752a10 <col:30, col:38> 'unsigned char' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x2371a7529f0 <col:30, col:38> 'unsigned long long' '-'
|   |   |   |     |-BinaryOperator 0x2371a752998 <col:30, col:34> 'unsigned long long' '-'
|   |   |   |     | |-ImplicitCastExpr 0x2371a752968 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |     | | `-DeclRefExpr 0x2371a752920 <col:30> 'size_t':'unsigned long long' lvalue Var 0x2371a7534e0 'i' 'size_t':'unsigned long long'
|   |   |   |     | `-ImplicitCastExpr 0x2371a752980 <col:34> 'unsigned long long' <IntegralCast>
|   |   |   |     |   `-IntegerLiteral 0x2371a752940 <col:34> 'int' 1
|   |   |   |     `-ImplicitCastExpr 0x2371a7529d8 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x2371a7529b8 <col:38> 'size_t':'unsigned long long' lvalue Var 0x2371a753558 'prefix' 'size_t':'unsigned long long'
|   |   |   `-BinaryOperator 0x2371a752aa0 <line:232:13, col:22> 'size_t':'unsigned long long' '='
|   |   |     |-DeclRefExpr 0x2371a752a48 <col:13> 'size_t':'unsigned long long' lvalue Var 0x2371a753558 'prefix' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x2371a752a88 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2371a752a68 <col:22> 'size_t':'unsigned long long' lvalue Var 0x2371a7534e0 'i' 'size_t':'unsigned long long'
|   |   `-UnaryOperator 0x2371a752b28 <line:234:9, col:10> 'size_t':'unsigned long long' postfix '++'
|   |     `-DeclRefExpr 0x2371a752b08 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2371a7534e0 'i' 'size_t':'unsigned long long'
|   |-DoStmt 0x2371a752e20 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a752de0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a752dc8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a752c88 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a752c68 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a752c48 <.//openssl//file_jk/after\test\handshake_helper.c:236:16, col:31> 'int' '>'
|   | |   |     |-BinaryOperator 0x2371a752be8 <col:16, col:22> 'unsigned long long' '-'
|   | |   |     | |-ImplicitCastExpr 0x2371a752bb8 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     | | `-DeclRefExpr 0x2371a752b78 <col:16> 'size_t':'unsigned long long' lvalue Var 0x2371a753468 'len' 'size_t':'unsigned long long'
|   | |   |     | `-ImplicitCastExpr 0x2371a752bd0 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     |   `-DeclRefExpr 0x2371a752b98 <col:22> 'size_t':'unsigned long long' lvalue Var 0x2371a753558 'prefix' 'size_t':'unsigned long long'
|   | |   |     `-ImplicitCastExpr 0x2371a752c30 <col:31> 'unsigned long long' <IntegralCast>
|   | |   |       `-IntegerLiteral 0x2371a752c08 <col:31> 'int' 0
|   | |   `-CompoundStmt 0x2371a752db0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a752d88 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a752d70 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a752cc0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a752d58 <col:28, <scratch space>:298:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a752d40 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a752d18 <col:1> 'char [17]' lvalue "len - prefix > 0"
|   | `-IntegerLiteral 0x2371a752df8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a752e40 <.//openssl//file_jk/after\test\handshake_helper.c:236:33>
|   `-BinaryOperator 0x2371a752fd0 <line:237:5, col:28> 'unsigned char' '='
|     |-ArraySubscriptExpr 0x2371a752f08 <col:5, col:18> 'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x2371a752ed8 <col:5, col:10> 'unsigned char *' <LValueToRValue>
|     | | `-ParenExpr 0x2371a752e98 <col:5, col:10> 'unsigned char *' lvalue
|     | |   `-UnaryOperator 0x2371a752e80 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
|     | |     `-ImplicitCastExpr 0x2371a752e68 <col:7> 'unsigned char **' <LValueToRValue>
|     | |       `-DeclRefExpr 0x2371a752e48 <col:7> 'unsigned char **' lvalue ParmVar 0x2371a753148 'out' 'unsigned char **'
|     | `-ImplicitCastExpr 0x2371a752ef0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|     |   `-DeclRefExpr 0x2371a752eb8 <col:12> 'size_t':'unsigned long long' lvalue Var 0x2371a753558 'prefix' 'size_t':'unsigned long long'
|     `-ImplicitCastExpr 0x2371a752fb8 <col:22, col:28> 'unsigned char' <IntegralCast>
|       `-BinaryOperator 0x2371a752f98 <col:22, col:28> 'unsigned long long' '-'
|         |-ImplicitCastExpr 0x2371a752f68 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|         | `-DeclRefExpr 0x2371a752f28 <col:22> 'size_t':'unsigned long long' lvalue Var 0x2371a753468 'len' 'size_t':'unsigned long long'
|         `-ImplicitCastExpr 0x2371a752f80 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2371a752f48 <col:28> 'size_t':'unsigned long long' lvalue Var 0x2371a753558 'prefix' 'size_t':'unsigned long long'
|-FunctionDecl 0x2371a74c400 <line:247:1, line:260:1> line:247:12 invalid client_npn_cb 'int (int *, unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x2371a74c060 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x2371a74c0e8 <col:34, col:50> col:50 used out 'unsigned char **'
| |-ParmVarDecl 0x2371a74c168 <col:55, col:70> col:70 used outlen 'unsigned char *'
| |-ParmVarDecl 0x2371a74c1e8 <line:248:26, col:47> col:47 used in 'const unsigned char *'
| |-ParmVarDecl 0x2371a74c268 <col:51, col:64> col:64 used inlen 'unsigned int'
| |-ParmVarDecl 0x2371a74c2e8 <line:249:26, col:32> col:32 used arg 'void *'
| `-CompoundStmt 0x2371a74cd30 <line:250:1, line:260:1>
|   |-DeclStmt 0x2371a74c628 <line:251:5, col:42>
|   | `-VarDecl 0x2371a74c4f8 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x2371a74c600 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x2371a74c5e8 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x2371a74c5c8 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x2371a74c560 <col:38> 'void *' lvalue ParmVar 0x2371a74c2e8 'arg' 'void *'
|   |-DeclStmt 0x2371a74c6c0 <line:252:5, col:12>
|   | `-VarDecl 0x2371a74c658 <col:5, col:9> col:9 used ret 'int'
|   |-BinaryOperator 0x2371a74cae0 <line:254:5, line:256:60> 'int' '='
|   | |-DeclRefExpr 0x2371a74c6d8 <line:254:5> 'int' lvalue Var 0x2371a74c658 'ret' 'int'
|   | `-CallExpr 0x2371a74ca00 <col:11, line:256:60> 'int'
|   |   |-ImplicitCastExpr 0x2371a74c9e8 <line:254:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2371a74c800 <col:11> 'int ()' Function 0x2371a74c738 'SSL_select_next_proto' 'int ()'
|   |   |-ImplicitCastExpr 0x2371a74ca50 <col:33> 'unsigned char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a74c820 <col:33> 'unsigned char **' lvalue ParmVar 0x2371a74c0e8 'out' 'unsigned char **'
|   |   |-ImplicitCastExpr 0x2371a74ca68 <col:38> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a74c858 <col:38> 'unsigned char *' lvalue ParmVar 0x2371a74c168 'outlen' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x2371a74ca80 <col:46> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a74c890 <col:46> 'const unsigned char *' lvalue ParmVar 0x2371a74c1e8 'in' 'const unsigned char *'
|   |   |-ImplicitCastExpr 0x2371a74ca98 <col:50> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a74c8c8 <col:50> 'unsigned int' lvalue ParmVar 0x2371a74c268 'inlen' 'unsigned int'
|   |   |-ImplicitCastExpr 0x2371a74cab0 <line:255:33, col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-MemberExpr 0x2371a74c950 <col:33, col:43> 'unsigned char *' lvalue ->npn_protocols 0x2371a74fa80
|   |   |   `-ImplicitCastExpr 0x2371a74c938 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2371a74c900 <col:33> 'CTX_DATA *' lvalue Var 0x2371a74c4f8 'ctx_data' 'CTX_DATA *'
|   |   `-ImplicitCastExpr 0x2371a74cac8 <line:256:33, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-MemberExpr 0x2371a74c9b8 <col:33, col:43> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x2371a74fae8
|   |       `-ImplicitCastExpr 0x2371a74c9a0 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2371a74c980 <col:33> 'CTX_DATA *' lvalue Var 0x2371a74c4f8 'ctx_data' 'CTX_DATA *'
|   |-DoStmt 0x2371a74cd08 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a74ccc8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a74ccb0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a74cc98 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a74cc80 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a74cc58 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a74cc40 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a74cb60 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a74cc28 <col:28, <scratch space>:299:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a74cc10 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a74cbb8 <col:1> 'char [63]' lvalue "ret == OPENSSL_NPN_NEGOTIATED || ret == OPENSSL_NPN_NO_OVERLAP"
|   | `-IntegerLiteral 0x2371a74cce0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   `-NullStmt 0x2371a74cd28 <.//openssl//file_jk/after\test\handshake_helper.c:258:79>
|-FunctionDecl 0x2371a75a130 <line:262:1, line:269:1> line:262:12 invalid server_npn_cb 'int (int *, const unsigned char **, unsigned int *, void *)' static
| |-ParmVarDecl 0x2371a74cd80 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x2371a74ce08 <col:34, col:56> col:56 used data 'const unsigned char **'
| |-ParmVarDecl 0x2371a74ceb0 <line:263:26, col:40> col:40 used len 'unsigned int *'
| |-ParmVarDecl 0x2371a74cf30 <col:45, col:51> col:51 used arg 'void *'
| `-CompoundStmt 0x2371a75a5b8 <line:264:1, line:269:1>
|   |-DeclStmt 0x2371a75a348 <line:265:5, col:42>
|   | `-VarDecl 0x2371a75a218 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x2371a75a320 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x2371a75a308 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x2371a75a2e8 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x2371a75a280 <col:38> 'void *' lvalue ParmVar 0x2371a74cf30 'arg' 'void *'
|   |-BinaryOperator 0x2371a75a478 <line:266:5, col:23> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2371a75a3b0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2371a75a398 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a75a360 <col:6> 'const unsigned char **' lvalue ParmVar 0x2371a74ce08 'data' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2371a75a460 <col:13, col:23> 'const unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x2371a75a448 <col:13, col:23> 'unsigned char *' <LValueToRValue>
|   |     `-MemberExpr 0x2371a75a418 <col:13, col:23> 'unsigned char *' lvalue ->npn_protocols 0x2371a74fa80
|   |       `-ImplicitCastExpr 0x2371a75a400 <col:13> 'CTX_DATA *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2371a75a3c8 <col:13> 'CTX_DATA *' lvalue Var 0x2371a75a218 'ctx_data' 'CTX_DATA *'
|   `-BinaryOperator 0x2371a75a598 <line:267:5, col:22> 'unsigned int' '='
|     |-UnaryOperator 0x2371a75a4e8 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x2371a75a4d0 <col:6> 'unsigned int *' <LValueToRValue>
|     |   `-DeclRefExpr 0x2371a75a498 <col:6> 'unsigned int *' lvalue ParmVar 0x2371a74ceb0 'len' 'unsigned int *'
|     `-ImplicitCastExpr 0x2371a75a580 <col:12, col:22> 'unsigned int' <IntegralCast>
|       `-ImplicitCastExpr 0x2371a75a568 <col:12, col:22> 'size_t':'unsigned long long' <LValueToRValue>
|         `-MemberExpr 0x2371a75a538 <col:12, col:22> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x2371a74fae8
|           `-ImplicitCastExpr 0x2371a75a520 <col:12> 'CTX_DATA *' <LValueToRValue>
|             `-DeclRefExpr 0x2371a75a500 <col:12> 'CTX_DATA *' lvalue Var 0x2371a75a218 'ctx_data' 'CTX_DATA *'
|-FunctionDecl 0x2371a75a9a0 <line:278:1, line:301:1> line:278:12 invalid server_alpn_cb 'int (int *, const unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x2371a75a5f8 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x2371a75a680 <col:35, col:57> col:57 used out 'const unsigned char **'
| |-ParmVarDecl 0x2371a75a700 <line:279:27, col:42> col:42 used outlen 'unsigned char *'
| |-ParmVarDecl 0x2371a75a780 <col:50, col:71> col:71 used in 'const unsigned char *'
| |-ParmVarDecl 0x2371a75a800 <line:280:27, col:40> col:40 used inlen 'unsigned int'
| |-ParmVarDecl 0x2371a75a880 <col:47, col:53> col:53 used arg 'void *'
| `-CompoundStmt 0x2371a757118 <line:281:1, line:301:1>
|   |-DeclStmt 0x2371a75abc8 <line:282:5, col:42>
|   | `-VarDecl 0x2371a75aa98 <col:5, col:41> col:15 used ctx_data 'CTX_DATA *' cinit
|   |   `-CStyleCastExpr 0x2371a75aba0 <col:26, col:41> 'CTX_DATA *' <BitCast>
|   |     `-ImplicitCastExpr 0x2371a75ab88 <col:37, col:41> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-ParenExpr 0x2371a75ab68 <col:37, col:41> 'void *' lvalue
|   |         `-DeclRefExpr 0x2371a75ab00 <col:38> 'void *' lvalue ParmVar 0x2371a75a880 'arg' 'void *'
|   |-DeclStmt 0x2371a75ac60 <line:283:5, col:12>
|   | `-VarDecl 0x2371a75abf8 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x2371a75acf8 <line:286:5, col:27>
|   | `-VarDecl 0x2371a75ac90 <col:5, col:20> col:20 used tmp_out 'unsigned char *'
|   |-BinaryOperator 0x2371a75b028 <line:293:5, line:295:72> 'int' '='
|   | |-DeclRefExpr 0x2371a75ad10 <line:293:5> 'int' lvalue Var 0x2371a75abf8 'ret' 'int'
|   | `-CallExpr 0x2371a75af60 <col:11, line:295:72> 'int'
|   |   |-ImplicitCastExpr 0x2371a75af48 <line:293:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2371a75ad48 <col:11> 'int ()' Function 0x2371a74c738 'SSL_select_next_proto' 'int ()'
|   |   |-UnaryOperator 0x2371a75ada0 <col:33, col:34> 'unsigned char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x2371a75ad68 <col:34> 'unsigned char *' lvalue Var 0x2371a75ac90 'tmp_out' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x2371a75afb0 <col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a75adb8 <col:43> 'unsigned char *' lvalue ParmVar 0x2371a75a700 'outlen' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x2371a75afc8 <line:294:33, col:43> 'unsigned char *' <LValueToRValue>
|   |   | `-MemberExpr 0x2371a75ae40 <col:33, col:43> 'unsigned char *' lvalue ->alpn_protocols 0x2371a74fb58
|   |   |   `-ImplicitCastExpr 0x2371a75ae28 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2371a75adf0 <col:33> 'CTX_DATA *' lvalue Var 0x2371a75aa98 'ctx_data' 'CTX_DATA *'
|   |   |-ImplicitCastExpr 0x2371a75afe0 <line:295:33, col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-MemberExpr 0x2371a75aea8 <col:33, col:43> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x2371a74fbc0
|   |   |   `-ImplicitCastExpr 0x2371a75ae90 <col:33> 'CTX_DATA *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2371a75ae70 <col:33> 'CTX_DATA *' lvalue Var 0x2371a75aa98 'ctx_data' 'CTX_DATA *'
|   |   |-ImplicitCastExpr 0x2371a75aff8 <col:63> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a75aed8 <col:63> 'const unsigned char *' lvalue ParmVar 0x2371a75a780 'in' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x2371a75b010 <col:67> 'unsigned int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2371a75af10 <col:67> 'unsigned int' lvalue ParmVar 0x2371a75a800 'inlen' 'unsigned int'
|   `-BinaryOperator 0x2371a7570d8 <line:297:5, col:12> 'const unsigned char *' '='
|     |-UnaryOperator 0x2371a757070 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x2371a75b080 <col:6> 'const unsigned char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x2371a75b048 <col:6> 'const unsigned char **' lvalue ParmVar 0x2371a75a680 'out' 'const unsigned char **'
|     `-ImplicitCastExpr 0x2371a7570c0 <col:12> 'const unsigned char *' <NoOp>
|       `-ImplicitCastExpr 0x2371a7570a8 <col:12> 'unsigned char *' <LValueToRValue>
|         `-DeclRefExpr 0x2371a757088 <col:12> 'unsigned char *' lvalue Var 0x2371a75ac90 'tmp_out' 'unsigned char *'
|-FunctionDecl 0x2371a7576c8 <line:307:1, line:449:1> line:307:13 invalid configure_handshake_ctx 'void (int *, int *, int *, const SSL_TEST_CTX *, const SSL_TEST_EXTRA_CONF *, CTX_DATA *, CTX_DATA *, CTX_DATA *)' static
| |-ParmVarDecl 0x2371a757168 <col:37, col:46> col:46 invalid server_ctx 'int *'
| |-ParmVarDecl 0x2371a7571e8 <col:58, col:67> col:67 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x2371a757268 <line:308:37, col:46> col:46 invalid client_ctx 'int *'
| |-ParmVarDecl 0x2371a7572e0 <line:309:37, col:57> col:57 used test 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x2371a7573b8 <line:310:37, col:64> col:64 used extra 'const SSL_TEST_EXTRA_CONF *'
| |-ParmVarDecl 0x2371a757430 <line:311:37, col:47> col:47 used server_ctx_data 'CTX_DATA *'
| |-ParmVarDecl 0x2371a7574a8 <line:312:37, col:47> col:47 used server2_ctx_data 'CTX_DATA *'
| |-ParmVarDecl 0x2371a757520 <line:313:37, col:47> col:47 used client_ctx_data 'CTX_DATA *'
| `-CompoundStmt 0x2371a75cfb0 <line:314:1, line:449:1>
|   |-DeclStmt 0x2371a757840 <line:315:5, col:31>
|   | `-VarDecl 0x2371a7577d8 <col:5, col:20> col:20 used ticket_keys 'unsigned char *'
|   |-DeclStmt 0x2371a7578d0 <line:316:5, col:26>
|   | `-VarDecl 0x2371a757868 <col:5, col:12> col:12 used ticket_key_len 'size_t':'unsigned long long'
|   |-DoStmt 0x2371a757c70 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a757c30 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a757c18 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a757c00 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a757be8 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a757bc0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a757ba8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a757ac0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a757b90 <col:28, <scratch space>:300:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a757b78 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a757b18 <col:1> 'char [72]' lvalue "SSL_CTX_set_max_send_fragment(server_ctx, test->max_fragment_size) == 1"
|   | `-IntegerLiteral 0x2371a757c48 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a757c90 <.//openssl//file_jk/after\test\handshake_helper.c:319:76>
|   |-IfStmt 0x2371a758000 <line:320:5, line:323:5>
|   | |-OpaqueValueExpr 0x2371a757fe8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2371a757fc8 <line:320:30, line:323:5>
|   |   |-DoStmt 0x2371a757fa0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x2371a757f60 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x2371a757f48 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x2371a757f30 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x2371a757f18 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x2371a757ef0 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x2371a757ed8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x2371a757df0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x2371a757ec0 <col:28, <scratch space>:2:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x2371a757ea8 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x2371a757e48 <col:1> 'char [73]' lvalue "SSL_CTX_set_max_send_fragment(server2_ctx, test->max_fragment_size) == 1"
|   |   | `-IntegerLiteral 0x2371a757f78 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x2371a757fc0 <.//openssl//file_jk/after\test\handshake_helper.c:322:80>
|   |-DoStmt 0x2371a75b2a0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a75b260 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a75b248 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a75b230 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a75b218 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a75b1f0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a75b1d8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a75b128 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a75b1c0 <col:28, <scratch space>:3:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a75b1a8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a75b148 <col:1> 'char [72]' lvalue "SSL_CTX_set_max_send_fragment(client_ctx, test->max_fragment_size) == 1"
|   | `-IntegerLiteral 0x2371a75b278 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a75b2c0 <.//openssl//file_jk/after\test\handshake_helper.c:325:76>
|   |-SwitchStmt 0x2371a75b3a8 <line:327:5, line:338:5>
|   | |-ImplicitCastExpr 0x2371a75b390 <line:327:13, col:27> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x2371a75b378 <col:13, col:27> 'ssl_verify_callback_t':'ssl_verify_callback_t' <LValueToRValue>
|   | |   `-MemberExpr 0x2371a75b348 <col:13, col:27> 'const ssl_verify_callback_t':'const ssl_verify_callback_t' lvalue .verify_callback 0x2371a797510
|   | |     `-MemberExpr 0x2371a75b318 <col:13, col:20> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x2371a797d80
|   | |       `-ImplicitCastExpr 0x2371a75b300 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x2371a75b2c8 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x2371a75b710 <col:44, line:338:5>
|   |   |-CaseStmt 0x2371a75b400 <line:328:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x2371a75b3e8 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x2371a75b3c8 <col:10> 'int' EnumConstant 0x2371a79cdc8 'SSL_TEST_VERIFY_ACCEPT_ALL' 'int'
|   |   | `-NullStmt 0x2371a75b5c0 <<invalid sloc>>
|   |   |-BreakStmt 0x2371a75b5c8 <line:331:9>
|   |   |-CaseStmt 0x2371a75b608 <line:332:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x2371a75b5f0 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x2371a75b5d0 <col:10> 'int' EnumConstant 0x2371a79ce20 'SSL_TEST_VERIFY_REJECT_ALL' 'int'
|   |   | `-NullStmt 0x2371a75b6d8 <<invalid sloc>>
|   |   |-BreakStmt 0x2371a75b6e0 <line:335:9>
|   |   `-DefaultStmt 0x2371a75b6f0 <line:336:5, line:337:9>
|   |     `-BreakStmt 0x2371a75b6e8 <col:9>
|   |-SwitchStmt 0x2371a75b810 <line:341:5, line:352:5>
|   | |-ImplicitCastExpr 0x2371a75b7f8 <line:341:13, col:27> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x2371a75b7e0 <col:13, col:27> 'ssl_servername_callback_t':'ssl_servername_callback_t' <LValueToRValue>
|   | |   `-MemberExpr 0x2371a75b7b0 <col:13, col:27> 'const ssl_servername_callback_t':'const ssl_servername_callback_t' lvalue .servername_callback 0x2371a797990
|   | |     `-MemberExpr 0x2371a75b780 <col:13, col:20> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x2371a797e10
|   | |       `-ImplicitCastExpr 0x2371a75b768 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |         `-DeclRefExpr 0x2371a75b748 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x2371a75bb98 <col:48, line:352:5>
|   |   |-CaseStmt 0x2371a75b868 <line:342:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x2371a75b850 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x2371a75b830 <col:10> 'int' EnumConstant 0x2371a79b3f8 'SSL_TEST_SERVERNAME_IGNORE_MISMATCH' 'int'
|   |   | `-NullStmt 0x2371a75b9a0 <<invalid sloc>>
|   |   |-BreakStmt 0x2371a75bab8 <line:345:9>
|   |   |-CaseStmt 0x2371a75baf8 <line:346:5, <invalid sloc>>
|   |   | |-ConstantExpr 0x2371a75bae0 <col:10> 'int'
|   |   | | `-DeclRefExpr 0x2371a75bac0 <col:10> 'int' EnumConstant 0x2371a79b450 'SSL_TEST_SERVERNAME_REJECT_MISMATCH' 'int'
|   |   | `-NullStmt 0x2371a75bb40 <<invalid sloc>>
|   |   |-BreakStmt 0x2371a75bb68 <line:349:9>
|   |   `-DefaultStmt 0x2371a75bb78 <line:350:5, line:351:9>
|   |     `-BreakStmt 0x2371a75bb70 <col:9>
|   |-IfStmt 0x2371a754320 <line:354:5, line:362:5>
|   | |-BinaryOperator 0x2371a75bcb8 <line:354:9, col:38> 'int' '!='
|   | | |-ImplicitCastExpr 0x2371a75bca0 <col:9, col:23> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2371a75bc88 <col:9, col:23> 'ssl_cert_status_t':'ssl_cert_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x2371a75bc38 <col:9, col:23> 'const ssl_cert_status_t':'const ssl_cert_status_t' lvalue .cert_status 0x2371a797b70
|   | | |     `-MemberExpr 0x2371a75bc08 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x2371a797e10
|   | | |       `-ImplicitCastExpr 0x2371a75bbf0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x2371a75bbd0 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-DeclRefExpr 0x2371a75bc68 <col:38> 'int' EnumConstant 0x2371a797250 'SSL_TEST_CERT_STATUS_NONE' 'int'
|   | `-CompoundStmt 0x2371a754310 <col:65, line:362:5>
|   |-IfStmt 0x2371a7545b0 <line:373:5, line:375:5>
|   | |-ImplicitCastExpr 0x2371a754568 <line:373:9, col:23> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x2371a754538 <col:9, col:23> 'const int' lvalue .broken_session_ticket 0x2371a797ae0
|   | |   `-MemberExpr 0x2371a754508 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x2371a797e10
|   | |     `-ImplicitCastExpr 0x2371a7544f0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2371a7544d0 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | `-CompoundStmt 0x2371a7545a0 <col:46, line:375:5>
|   |-IfStmt 0x2371a754b30 <line:377:5, line:383:5>
|   | |-BinaryOperator 0x2371a754718 <line:377:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x2371a7546e8 <.//openssl//file_jk/after\test\handshake_helper.c:377:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x2371a754630 <col:9, col:23> 'char *const' lvalue .npn_protocols 0x2371a797a00
|   | | |   `-MemberExpr 0x2371a754600 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x2371a797e10
|   | | |     `-ImplicitCastExpr 0x2371a7545e8 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2371a7545c8 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x2371a754700 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x2371a7546c8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2371a7546a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2371a754660 <col:26> 'int' 0
|   | `-CompoundStmt 0x2371a754b18 <.//openssl//file_jk/after\test\handshake_helper.c:377:46, line:383:5>
|   |   `-CallExpr 0x2371a754980 <line:378:9, line:380:57> 'void'
|   |     |-ImplicitCastExpr 0x2371a754968 <line:378:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a754738 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x2371a753388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x2371a7549d0 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x2371a7549b8 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x2371a7547c0 <col:22, col:36> 'char *const' lvalue .npn_protocols 0x2371a797a00
|   |     |     `-MemberExpr 0x2371a754790 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x2371a797e10
|   |     |       `-ImplicitCastExpr 0x2371a754778 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x2371a754758 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x2371a754870 <line:379:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x2371a754840 <col:23, col:40> 'unsigned char *' lvalue ->npn_protocols 0x2371a74fa80
|   |     |   `-ImplicitCastExpr 0x2371a754828 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2371a7547f0 <col:23> 'CTX_DATA *' lvalue ParmVar 0x2371a757430 'server_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x2371a7548f0 <line:380:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x2371a7548c0 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x2371a74fae8
|   |         `-ImplicitCastExpr 0x2371a7548a8 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x2371a754888 <col:23> 'CTX_DATA *' lvalue ParmVar 0x2371a757430 'server_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x2371a75d258 <line:384:5, line:391:5>
|   | |-BinaryOperator 0x2371a754c98 <line:384:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x2371a754c68 <.//openssl//file_jk/after\test\handshake_helper.c:384:9, col:24> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x2371a754bb0 <col:9, col:24> 'char *const' lvalue .npn_protocols 0x2371a797a00
|   | | |   `-MemberExpr 0x2371a754b80 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x2371a797e78
|   | | |     `-ImplicitCastExpr 0x2371a754b68 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2371a754b48 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x2371a754c80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x2371a754c48 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2371a754c20 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2371a754be0 <col:26> 'int' 0
|   | `-CompoundStmt 0x2371a75d230 <.//openssl//file_jk/after\test\handshake_helper.c:384:47, line:391:5>
|   |   |-CallExpr 0x2371a754ea0 <line:385:9, line:387:58> 'void'
|   |   | |-ImplicitCastExpr 0x2371a754e88 <line:385:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2371a754cb8 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x2371a753388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |   | |-ImplicitCastExpr 0x2371a754ef0 <col:22, col:37> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2371a754ed8 <col:22, col:37> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x2371a754d40 <col:22, col:37> 'char *const' lvalue .npn_protocols 0x2371a797a00
|   |   | |     `-MemberExpr 0x2371a754d10 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x2371a797e78
|   |   | |       `-ImplicitCastExpr 0x2371a754cf8 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x2371a754cd8 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |   | |-UnaryOperator 0x2371a754df0 <line:386:22, col:41> 'unsigned char **' prefix '&' cannot overflow
|   |   | | `-MemberExpr 0x2371a754dc0 <col:23, col:41> 'unsigned char *' lvalue ->npn_protocols 0x2371a74fa80
|   |   | |   `-ImplicitCastExpr 0x2371a754da8 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x2371a754d70 <col:23> 'CTX_DATA *' lvalue ParmVar 0x2371a7574a8 'server2_ctx_data' 'CTX_DATA *'
|   |   | `-UnaryOperator 0x2371a754e70 <line:387:22, col:41> 'size_t *' prefix '&' cannot overflow
|   |   |   `-MemberExpr 0x2371a754e40 <col:23, col:41> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x2371a74fae8
|   |   |     `-ImplicitCastExpr 0x2371a754e28 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2371a754e08 <col:23> 'CTX_DATA *' lvalue ParmVar 0x2371a7574a8 'server2_ctx_data' 'CTX_DATA *'
|   |   |-DoStmt 0x2371a75d1c8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x2371a75d188 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x2371a75d170 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x2371a75d158 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x2371a75d140 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x2371a75d118 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x2371a75d100 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x2371a754fb0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x2371a75d0e8 <col:28, <scratch space>:4:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x2371a75d0d0 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x2371a755008 <col:1> 'char [20]' lvalue "server2_ctx != NULL"
|   |   | `-IntegerLiteral 0x2371a75d1a0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x2371a75d1e8 <.//openssl//file_jk/after\test\handshake_helper.c:388:40>
|   |-IfStmt 0x2371a75d778 <line:392:5, line:398:5>
|   | |-BinaryOperator 0x2371a75d3c0 <line:392:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x2371a75d390 <.//openssl//file_jk/after\test\handshake_helper.c:392:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x2371a75d2d8 <col:9, col:23> 'char *const' lvalue .npn_protocols 0x2371a797610
|   | | |   `-MemberExpr 0x2371a75d2a8 <col:9, col:16> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x2371a797d80
|   | | |     `-ImplicitCastExpr 0x2371a75d290 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2371a75d270 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x2371a75d3a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x2371a75d370 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2371a75d348 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2371a75d308 <col:26> 'int' 0
|   | `-CompoundStmt 0x2371a75d760 <.//openssl//file_jk/after\test\handshake_helper.c:392:46, line:398:5>
|   |   `-CallExpr 0x2371a75d5c8 <line:393:9, line:395:57> 'void'
|   |     |-ImplicitCastExpr 0x2371a75d5b0 <line:393:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a75d3e0 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x2371a753388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x2371a75d618 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x2371a75d600 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x2371a75d468 <col:22, col:36> 'char *const' lvalue .npn_protocols 0x2371a797610
|   |     |     `-MemberExpr 0x2371a75d438 <col:22, col:29> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x2371a797d80
|   |     |       `-ImplicitCastExpr 0x2371a75d420 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x2371a75d400 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x2371a75d518 <line:394:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x2371a75d4e8 <col:23, col:40> 'unsigned char *' lvalue ->npn_protocols 0x2371a74fa80
|   |     |   `-ImplicitCastExpr 0x2371a75d4d0 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2371a75d498 <col:23> 'CTX_DATA *' lvalue ParmVar 0x2371a757520 'client_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x2371a75d598 <line:395:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x2371a75d568 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->npn_protocols_len 0x2371a74fae8
|   |         `-ImplicitCastExpr 0x2371a75d550 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x2371a75d530 <col:23> 'CTX_DATA *' lvalue ParmVar 0x2371a757520 'client_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x2371a75dc80 <line:400:5, line:405:5>
|   | |-BinaryOperator 0x2371a75d8e0 <line:400:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x2371a75d8b0 <.//openssl//file_jk/after\test\handshake_helper.c:400:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x2371a75d7f8 <col:9, col:23> 'char *const' lvalue .alpn_protocols 0x2371a797a70
|   | | |   `-MemberExpr 0x2371a75d7c8 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x2371a797e10
|   | | |     `-ImplicitCastExpr 0x2371a75d7b0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2371a75d790 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x2371a75d8c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x2371a75d890 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2371a75d868 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2371a75d828 <col:26> 'int' 0
|   | `-CompoundStmt 0x2371a75dc68 <.//openssl//file_jk/after\test\handshake_helper.c:400:47, line:405:5>
|   |   `-CallExpr 0x2371a75dad0 <line:401:9, line:403:58> 'void'
|   |     |-ImplicitCastExpr 0x2371a75dab8 <line:401:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a75d900 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x2371a753388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x2371a75db20 <col:22, col:36> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x2371a75db08 <col:22, col:36> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x2371a75d988 <col:22, col:36> 'char *const' lvalue .alpn_protocols 0x2371a797a70
|   |     |     `-MemberExpr 0x2371a75d958 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server 0x2371a797e10
|   |     |       `-ImplicitCastExpr 0x2371a75d940 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x2371a75d920 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x2371a75da20 <line:402:22, col:40> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x2371a75d9f0 <col:23, col:40> 'unsigned char *' lvalue ->alpn_protocols 0x2371a74fb58
|   |     |   `-ImplicitCastExpr 0x2371a75d9d8 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2371a75d9b8 <col:23> 'CTX_DATA *' lvalue ParmVar 0x2371a757430 'server_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x2371a75daa0 <line:403:22, col:40> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x2371a75da70 <col:23, col:40> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x2371a74fbc0
|   |         `-ImplicitCastExpr 0x2371a75da58 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x2371a75da38 <col:23> 'CTX_DATA *' lvalue ParmVar 0x2371a757430 'server_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x2371a756278 <line:406:5, line:412:5>
|   | |-BinaryOperator 0x2371a75dde8 <line:406:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x2371a75ddb8 <.//openssl//file_jk/after\test\handshake_helper.c:406:9, col:24> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x2371a75dd00 <col:9, col:24> 'char *const' lvalue .alpn_protocols 0x2371a797a70
|   | | |   `-MemberExpr 0x2371a75dcd0 <col:9, col:16> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x2371a797e78
|   | | |     `-ImplicitCastExpr 0x2371a75dcb8 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2371a75dc98 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x2371a75ddd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x2371a75dd98 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2371a75dd70 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2371a75dd30 <col:26> 'int' 0
|   | `-CompoundStmt 0x2371a756250 <.//openssl//file_jk/after\test\handshake_helper.c:406:48, line:412:5>
|   |   |-DoStmt 0x2371a75dff8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x2371a75dfb8 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x2371a75dfa0 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x2371a75df88 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x2371a75df70 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x2371a75df48 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x2371a75df30 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x2371a75deb0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x2371a75df18 <col:28, <scratch space>:5:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x2371a75df00 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x2371a75ded0 <col:1> 'char [20]' lvalue "server2_ctx != NULL"
|   |   | `-IntegerLiteral 0x2371a75dfd0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x2371a75e018 <.//openssl//file_jk/after\test\handshake_helper.c:407:40>
|   |   `-CallExpr 0x2371a7561a8 <line:408:9, line:410:59> 'void'
|   |     |-ImplicitCastExpr 0x2371a756190 <line:408:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a75e020 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x2371a753388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |     |-ImplicitCastExpr 0x2371a7561f8 <col:22, col:37> 'const char *' <NoOp>
|   |     | `-ImplicitCastExpr 0x2371a7561e0 <col:22, col:37> 'char *' <LValueToRValue>
|   |     |   `-MemberExpr 0x2371a756060 <col:22, col:37> 'char *const' lvalue .alpn_protocols 0x2371a797a70
|   |     |     `-MemberExpr 0x2371a75e078 <col:22, col:29> 'const SSL_TEST_SERVER_CONF':'const SSL_TEST_SERVER_CONF' lvalue ->server2 0x2371a797e78
|   |     |       `-ImplicitCastExpr 0x2371a75e060 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x2371a75e040 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |     |-UnaryOperator 0x2371a7560f8 <line:409:22, col:41> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-MemberExpr 0x2371a7560c8 <col:23, col:41> 'unsigned char *' lvalue ->alpn_protocols 0x2371a74fb58
|   |     |   `-ImplicitCastExpr 0x2371a7560b0 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2371a756090 <col:23> 'CTX_DATA *' lvalue ParmVar 0x2371a7574a8 'server2_ctx_data' 'CTX_DATA *'
|   |     `-UnaryOperator 0x2371a756178 <line:410:22, col:41> 'size_t *' prefix '&' cannot overflow
|   |       `-MemberExpr 0x2371a756148 <col:23, col:41> 'size_t':'unsigned long long' lvalue ->alpn_protocols_len 0x2371a74fbc0
|   |         `-ImplicitCastExpr 0x2371a756130 <col:23> 'CTX_DATA *' <LValueToRValue>
|   |           `-DeclRefExpr 0x2371a756110 <col:23> 'CTX_DATA *' lvalue ParmVar 0x2371a7574a8 'server2_ctx_data' 'CTX_DATA *'
|   |-IfStmt 0x2371a756bf0 <line:413:5, line:422:5>
|   | |-BinaryOperator 0x2371a7563e0 <line:413:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x2371a7563b0 <.//openssl//file_jk/after\test\handshake_helper.c:413:9, col:23> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x2371a7562f8 <col:9, col:23> 'char *const' lvalue .alpn_protocols 0x2371a797680
|   | | |   `-MemberExpr 0x2371a7562c8 <col:9, col:16> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x2371a797d80
|   | | |     `-ImplicitCastExpr 0x2371a7562b0 <col:9> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2371a756290 <col:9> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   | | `-ImplicitCastExpr 0x2371a7563c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x2371a756390 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2371a756368 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2371a756328 <col:26> 'int' 0
|   | `-CompoundStmt 0x2371a756bb0 <.//openssl//file_jk/after\test\handshake_helper.c:413:47, line:422:5>
|   |   |-DeclStmt 0x2371a756520 <line:414:9, col:42>
|   |   | `-VarDecl 0x2371a756418 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\test\handshake_helper.c:414:24 used alpn_protos 'unsigned char *' cinit
|   |   |   `-ImplicitCastExpr 0x2371a756508 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |   |     `-ParenExpr 0x2371a7564e8 <col:17, col:27> 'void *'
|   |   |       `-CStyleCastExpr 0x2371a7564c0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |         `-IntegerLiteral 0x2371a756480 <col:26> 'int' 0
|   |   |-DeclStmt 0x2371a7565b0 <.//openssl//file_jk/after\test\handshake_helper.c:415:9, col:31>
|   |   | `-VarDecl 0x2371a756548 <col:9, col:16> col:16 used alpn_protos_len 'size_t':'unsigned long long'
|   |   |-CallExpr 0x2371a756738 <line:416:9, line:417:52> 'void'
|   |   | |-ImplicitCastExpr 0x2371a756720 <line:416:9> 'void (*)(const char *, unsigned char **, size_t *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2371a7565c8 <col:9> 'void (const char *, unsigned char **, size_t *)' Function 0x2371a753388 'parse_protos' 'void (const char *, unsigned char **, size_t *)'
|   |   | |-ImplicitCastExpr 0x2371a756788 <col:22, col:36> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x2371a756770 <col:22, col:36> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x2371a756650 <col:22, col:36> 'char *const' lvalue .alpn_protocols 0x2371a797680
|   |   | |     `-MemberExpr 0x2371a756620 <col:22, col:29> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x2371a797d80
|   |   | |       `-ImplicitCastExpr 0x2371a756608 <col:22> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x2371a7565e8 <col:22> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|   |   | |-UnaryOperator 0x2371a7566b8 <line:417:22, col:23> 'unsigned char **' prefix '&' cannot overflow
|   |   | | `-DeclRefExpr 0x2371a756680 <col:23> 'unsigned char *' lvalue Var 0x2371a756418 'alpn_protos' 'unsigned char *'
|   |   | `-UnaryOperator 0x2371a756708 <col:36, col:37> 'size_t *' prefix '&' cannot overflow
|   |   |   `-DeclRefExpr 0x2371a7566d0 <col:37> 'size_t':'unsigned long long' lvalue Var 0x2371a756548 'alpn_protos_len' 'size_t':'unsigned long long'
|   |   |-DoStmt 0x2371a756af0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x2371a756ab0 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x2371a756a98 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x2371a756a80 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x2371a756a68 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x2371a756a40 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x2371a756a28 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x2371a756938 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x2371a756a10 <col:28, <scratch space>:6:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x2371a7569f8 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x2371a756998 <col:1> 'char [71]' lvalue "SSL_CTX_set_alpn_protos(client_ctx, alpn_protos, alpn_protos_len) == 0"
|   |   | `-IntegerLiteral 0x2371a756ac8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x2371a756b10 <.//openssl//file_jk/after\test\handshake_helper.c:420:66>
|   |   `-CallExpr 0x2371a756b70 <line:421:9, col:33> 'int'
|   |     |-ImplicitCastExpr 0x2371a756b58 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a756b18 <col:9> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x2371a756b98 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a756b38 <col:22> 'unsigned char *' lvalue Var 0x2371a756418 'alpn_protos' 'unsigned char *'
|   |-BinaryOperator 0x2371a756ee8 <line:429:5, col:48> 'unsigned char *' '='
|   | |-DeclRefExpr 0x2371a756e00 <col:5> 'unsigned char *' lvalue Var 0x2371a7577d8 'ticket_keys' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2371a756ed0 <col:19, col:48> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x2371a756e90 <col:19, col:48> 'int'
|   |     |-ImplicitCastExpr 0x2371a756e78 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a756e38 <col:19> 'int ()' Function 0x2371a7506c8 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x2371a756eb8 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a756e58 <col:34> 'size_t':'unsigned long long' lvalue Var 0x2371a757868 'ticket_key_len' 'size_t':'unsigned long long'
|   |-DoStmt 0x2371a75c1f0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a75c1b0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a75c198 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a757020 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a757000 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a756fe0 <.//openssl//file_jk/after\test\handshake_helper.c:430:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x2371a756fb0 <.//openssl//file_jk/after\test\handshake_helper.c:430:16> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x2371a756f08 <col:16> 'unsigned char *' lvalue Var 0x2371a7577d8 'ticket_keys' 'unsigned char *'
|   | |   |     `-ImplicitCastExpr 0x2371a756fc8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x2371a756f90 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2371a756f68 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2371a756f28 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2371a75c180 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a75c158 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a75c140 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a75c0c0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a75c128 <col:28, <scratch space>:7:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a75c110 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a75c0e0 <col:1> 'char [20]' lvalue "ticket_keys != NULL"
|   | `-IntegerLiteral 0x2371a75c1c8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a75c210 <.//openssl//file_jk/after\test\handshake_helper.c:430:36>
|   |-DoStmt 0x2371a75c478 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a75c438 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a75c420 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a75c408 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a75c3f0 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a75c3c8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a75c3b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a75c2c0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a75c398 <col:28, <scratch space>:8:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a75c380 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a75c318 <col:1> 'char [77]' lvalue "SSL_CTX_set_tlsext_ticket_keys(server_ctx, ticket_keys, ticket_key_len) == 1"
|   | `-IntegerLiteral 0x2371a75c450 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a75c498 <.//openssl//file_jk/after\test\handshake_helper.c:432:68>
|   |-CallExpr 0x2371a75c4f8 <line:433:5, col:29> 'int'
|   | |-ImplicitCastExpr 0x2371a75c4e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a75c4a0 <col:5> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2371a75c520 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2371a75c4c0 <col:18> 'unsigned char *' lvalue Var 0x2371a7577d8 'ticket_keys' 'unsigned char *'
|   |-DoStmt 0x2371a75c808 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a75c7c8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a75c7b0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a75c798 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a75c780 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a75c758 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a75c740 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a75c668 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a75c728 <col:28, <scratch space>:9:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a75c710 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a75c6c8 <col:1> 'char [48]' lvalue "SSL_CTX_set_default_ctlog_list_file(client_ctx)"
|   | `-IntegerLiteral 0x2371a75c7e0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a75c828 <.//openssl//file_jk/after\test\handshake_helper.c:437:64>
|   `-SwitchStmt 0x2371a75c8f8 <line:438:5, line:447:5>
|     |-ImplicitCastExpr 0x2371a75c8e0 <line:438:13, col:27> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x2371a75c8c8 <col:13, col:27> 'ssl_ct_validation_t':'ssl_ct_validation_t' <LValueToRValue>
|     |   `-MemberExpr 0x2371a75c898 <col:13, col:27> 'const ssl_ct_validation_t':'const ssl_ct_validation_t' lvalue .ct_validation 0x2371a797710
|     |     `-MemberExpr 0x2371a75c868 <col:13, col:20> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue ->client 0x2371a797d80
|     |       `-ImplicitCastExpr 0x2371a75c850 <col:13> 'const SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|     |         `-DeclRefExpr 0x2371a75c830 <col:13> 'const SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x2371a7573b8 'extra' 'const SSL_TEST_EXTRA_CONF *'
|     `-CompoundStmt 0x2371a75cf68 <col:42, line:447:5>
|       |-CaseStmt 0x2371a75c950 <line:439:5, .//openssl//file_jk/after\test/testutil.h:111:15>
|       | |-ConstantExpr 0x2371a75c938 <.//openssl//file_jk/after\test\handshake_helper.c:439:10> 'int'
|       | | `-DeclRefExpr 0x2371a75c918 <col:10> 'int' EnumConstant 0x2371a79bff8 'SSL_TEST_CT_VALIDATION_PERMISSIVE' 'int'
|       | `-DoStmt 0x2371a75cc58 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|       |   |-CompoundStmt 0x2371a75cc18 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x2371a75cc00 <line:107:9, line:110:9>
|       |   |   |-OpaqueValueExpr 0x2371a75cbe8 <<invalid sloc>> '_Bool'
|       |   |   `-CompoundStmt 0x2371a75cbd0 <line:107:27, line:110:9>
|       |   |     `-CallExpr 0x2371a75cba8 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x2371a75cb90 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x2371a75caa8 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x2371a75cb78 <col:28, <scratch space>:10:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x2371a75cb60 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x2371a75cb08 <col:1> 'char [60]' lvalue "SSL_CTX_enable_ct(client_ctx, SSL_CT_VALIDATION_PERMISSIVE)"
|       |   `-IntegerLiteral 0x2371a75cc30 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|       |-NullStmt 0x2371a75cc78 <.//openssl//file_jk/after\test\handshake_helper.c:440:80>
|       |-BreakStmt 0x2371a75cc80 <line:441:9>
|       |-CaseStmt 0x2371a75ccc0 <line:442:5, .//openssl//file_jk/after\test/testutil.h:111:15>
|       | |-ConstantExpr 0x2371a75cca8 <.//openssl//file_jk/after\test\handshake_helper.c:442:10> 'int'
|       | | `-DeclRefExpr 0x2371a75cc88 <col:10> 'int' EnumConstant 0x2371a79c050 'SSL_TEST_CT_VALIDATION_STRICT' 'int'
|       | `-DoStmt 0x2371a75ced0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|       |   |-CompoundStmt 0x2371a75ce90 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x2371a75ce78 <line:107:9, line:110:9>
|       |   |   |-OpaqueValueExpr 0x2371a75ce60 <<invalid sloc>> '_Bool'
|       |   |   `-CompoundStmt 0x2371a75ce48 <line:107:27, line:110:9>
|       |   |     `-CallExpr 0x2371a75ce20 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x2371a75ce08 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x2371a75cd28 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x2371a75cdf0 <col:28, <scratch space>:11:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x2371a75cdd8 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x2371a75cd88 <col:1> 'char [56]' lvalue "SSL_CTX_enable_ct(client_ctx, SSL_CT_VALIDATION_STRICT)"
|       |   `-IntegerLiteral 0x2371a75cea8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|       |-NullStmt 0x2371a75cef0 <.//openssl//file_jk/after\test\handshake_helper.c:443:76>
|       |-BreakStmt 0x2371a75cef8 <line:444:9>
|       `-CaseStmt 0x2371a75cf38 <line:445:5, line:446:9>
|         |-ConstantExpr 0x2371a75cf20 <line:445:10> 'int'
|         | `-DeclRefExpr 0x2371a75cf00 <col:10> 'int' EnumConstant 0x2371a79bfa0 'SSL_TEST_CT_VALIDATION_NONE' 'int'
|         `-BreakStmt 0x2371a75cf60 <line:446:9>
|-FunctionDecl 0x2371a758298 <line:452:1, line:458:1> line:452:13 invalid configure_handshake_ssl 'void (int *, int *, const SSL_TEST_EXTRA_CONF *)' static
| |-ParmVarDecl 0x2371a758080 <col:37, col:42> col:42 invalid server 'int *'
| |-ParmVarDecl 0x2371a758100 <col:50, col:55> col:55 invalid client 'int *'
| |-ParmVarDecl 0x2371a758178 <line:453:37, col:64> col:64 used extra 'const SSL_TEST_EXTRA_CONF *'
| `-CompoundStmt 0x2371a758700 <line:454:1, line:458:1>
|-EnumDecl 0x2371a758710 <line:461:9, line:465:1> line:461:9
| |-EnumConstantDecl 0x2371a7587f0 <line:462:5> col:5 referenced PEER_SUCCESS 'int'
| |-EnumConstantDecl 0x2371a758848 <line:463:5> col:5 referenced PEER_RETRY 'int'
| `-EnumConstantDecl 0x2371a7588a0 <line:464:5> col:5 referenced PEER_ERROR 'int'
|-TypedefDecl 0x2371a758958 <line:461:1, line:465:3> col:3 referenced peer_status_t 'enum peer_status_t':'peer_status_t'
| `-ElaboratedType 0x2371a758900 'enum peer_status_t' sugar
|   `-EnumType 0x2371a7587d0 'peer_status_t'
|     `-Enum 0x2371a758710 ''
|-RecordDecl 0x2371a7589c8 <line:468:9, line:478:1> line:468:16 invalid struct peer_st definition
| |-FieldDecl 0x2371a758a98 <line:469:5, col:10> col:10 invalid ssl 'int *'
| |-FieldDecl 0x2371a758b08 <line:471:5, col:20> col:20 referenced write_buf 'unsigned char *'
| |-FieldDecl 0x2371a758b78 <line:472:5, col:9> col:9 referenced write_buf_len 'int'
| |-FieldDecl 0x2371a758be8 <line:473:5, col:20> col:20 referenced read_buf 'unsigned char *'
| |-FieldDecl 0x2371a758c58 <line:474:5, col:9> col:9 referenced read_buf_len 'int'
| |-FieldDecl 0x2371a758cc8 <line:475:5, col:9> col:9 referenced bytes_to_write 'int'
| |-FieldDecl 0x2371a758d38 <line:476:5, col:9> col:9 referenced bytes_to_read 'int'
| `-FieldDecl 0x2371a758dc0 <line:477:5, col:19> col:19 referenced status 'peer_status_t':'peer_status_t'
|-TypedefDecl 0x2371a758e78 <line:468:1, line:478:3> col:3 referenced PEER 'struct peer_st':'struct peer_st'
| `-ElaboratedType 0x2371a758e20 'struct peer_st' sugar
|   `-RecordType 0x2371a758a60 'struct peer_st'
|     `-Record 0x2371a7589c8 'peer_st'
|-FunctionDecl 0x2371a75e188 <line:480:1, line:491:1> line:480:13 invalid create_peer 'void (PEER *, int *)' static
| |-ParmVarDecl 0x2371a758f78 <col:25, col:31> col:31 used peer 'PEER *'
| |-ParmVarDecl 0x2371a758ff8 <col:37, col:46> col:46 invalid ctx 'int *'
| `-CompoundStmt 0x2371a75f1e0 <line:481:1, line:491:1>
|   |-DeclStmt 0x2371a75e340 <line:482:5, col:50>
|   | `-VarDecl 0x2371a75e268 <col:5, col:46> col:22 used peer_buffer_size 'const int' static cinit
|   |   `-BinaryOperator 0x2371a75e320 <col:41, col:46> 'int' '*'
|   |     |-IntegerLiteral 0x2371a75e2d0 <col:41> 'int' 64
|   |     `-IntegerLiteral 0x2371a75e2f8 <col:46> 'int' 1024
|   |-DoStmt 0x2371a75e720 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a75e6e0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a75e6c8 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a75e6b0 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a75e698 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a75e670 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a75e658 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a75e598 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a75e640 <col:28, <scratch space>:12:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a75e628 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a75e5f8 <col:1> 'char [18]' lvalue "peer->ssl != NULL"
|   | `-IntegerLiteral 0x2371a75e6f8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a75e740 <.//openssl//file_jk/after\test\handshake_helper.c:485:34>
|   |-BinaryOperator 0x2371a75e878 <line:486:5, col:54> 'unsigned char *' '='
|   | |-MemberExpr 0x2371a75e780 <col:5, col:11> 'unsigned char *' lvalue ->write_buf 0x2371a758b08
|   | | `-ImplicitCastExpr 0x2371a75e768 <col:5> 'PEER *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a75e748 <col:5> 'PEER *' lvalue ParmVar 0x2371a758f78 'peer' 'PEER *'
|   | `-ImplicitCastExpr 0x2371a75e860 <col:23, col:54> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x2371a75e820 <col:23, col:54> 'int'
|   |     |-ImplicitCastExpr 0x2371a75e808 <col:23> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a75e7b0 <col:23> 'int ()' Function 0x2371a7506c8 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x2371a75e848 <col:38> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a75e7d0 <col:38> 'const int' lvalue Var 0x2371a75e268 'peer_buffer_size' 'const int'
|   |-DoStmt 0x2371a75eb98 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a75eb58 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a75eb40 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a75e9f8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a75e9d8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a75e9b8 <.//openssl//file_jk/after\test\handshake_helper.c:487:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x2371a75e988 <.//openssl//file_jk/after\test\handshake_helper.c:487:16, col:22> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x2371a75e8d0 <col:16, col:22> 'unsigned char *' lvalue ->write_buf 0x2371a758b08
|   | |   |     |   `-ImplicitCastExpr 0x2371a75e8b8 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x2371a75e898 <col:16> 'PEER *' lvalue ParmVar 0x2371a758f78 'peer' 'PEER *'
|   | |   |     `-ImplicitCastExpr 0x2371a75e9a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x2371a75e968 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2371a75e940 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2371a75e900 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2371a75eb28 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a75eb00 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a75eae8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a75ea30 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a75ead0 <col:28, <scratch space>:13:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a75eab8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a75ea88 <col:1> 'char [24]' lvalue "peer->write_buf != NULL"
|   | `-IntegerLiteral 0x2371a75eb70 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a75ebb8 <.//openssl//file_jk/after\test\handshake_helper.c:487:40>
|   |-BinaryOperator 0x2371a75ecd8 <line:488:5, col:53> 'unsigned char *' '='
|   | |-MemberExpr 0x2371a75ebf8 <col:5, col:11> 'unsigned char *' lvalue ->read_buf 0x2371a758be8
|   | | `-ImplicitCastExpr 0x2371a75ebe0 <col:5> 'PEER *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a75ebc0 <col:5> 'PEER *' lvalue ParmVar 0x2371a758f78 'peer' 'PEER *'
|   | `-ImplicitCastExpr 0x2371a75ecc0 <col:22, col:53> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x2371a75ec80 <col:22, col:53> 'int'
|   |     |-ImplicitCastExpr 0x2371a75ec68 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a75ec28 <col:22> 'int ()' Function 0x2371a7506c8 'OPENSSL_zalloc' 'int ()'
|   |     `-ImplicitCastExpr 0x2371a75eca8 <col:37> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a75ec48 <col:37> 'const int' lvalue Var 0x2371a75e268 'peer_buffer_size' 'const int'
|   |-DoStmt 0x2371a75eff8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a75efb8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a75efa0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a75ee58 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a75ee38 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a75ee18 <.//openssl//file_jk/after\test\handshake_helper.c:489:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x2371a75ede8 <.//openssl//file_jk/after\test\handshake_helper.c:489:16, col:22> 'unsigned char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x2371a75ed30 <col:16, col:22> 'unsigned char *' lvalue ->read_buf 0x2371a758be8
|   | |   |     |   `-ImplicitCastExpr 0x2371a75ed18 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x2371a75ecf8 <col:16> 'PEER *' lvalue ParmVar 0x2371a758f78 'peer' 'PEER *'
|   | |   |     `-ImplicitCastExpr 0x2371a75ee00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   |       `-ParenExpr 0x2371a75edc8 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2371a75eda0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2371a75ed60 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2371a75ef88 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a75ef60 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a75ef48 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a75ee90 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a75ef30 <col:28, <scratch space>:14:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a75ef18 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a75eee8 <col:1> 'char [23]' lvalue "peer->read_buf != NULL"
|   | `-IntegerLiteral 0x2371a75efd0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a75f018 <.//openssl//file_jk/after\test\handshake_helper.c:489:39>
|   `-BinaryOperator 0x2371a75f178 <line:490:5, col:48> 'int' '='
|     |-MemberExpr 0x2371a75f058 <col:5, col:11> 'int' lvalue ->write_buf_len 0x2371a758b78
|     | `-ImplicitCastExpr 0x2371a75f040 <col:5> 'PEER *' <LValueToRValue>
|     |   `-DeclRefExpr 0x2371a75f020 <col:5> 'PEER *' lvalue ParmVar 0x2371a758f78 'peer' 'PEER *'
|     `-BinaryOperator 0x2371a75f158 <col:27, col:48> 'int' '='
|       |-MemberExpr 0x2371a75f0f0 <col:27, col:33> 'int' lvalue ->read_buf_len 0x2371a758c58
|       | `-ImplicitCastExpr 0x2371a75f0a8 <col:27> 'PEER *' <LValueToRValue>
|       |   `-DeclRefExpr 0x2371a75f088 <col:27> 'PEER *' lvalue ParmVar 0x2371a758f78 'peer' 'PEER *'
|       `-ImplicitCastExpr 0x2371a75f140 <col:48> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x2371a75f120 <col:48> 'const int' lvalue Var 0x2371a75e268 'peer_buffer_size' 'const int'
|-FunctionDecl 0x2371a75f358 <line:493:1, line:498:1> line:493:13 used peer_free_data 'void (PEER *)' static
| |-ParmVarDecl 0x2371a75f250 <col:28, col:34> col:34 used peer 'PEER *'
| `-CompoundStmt 0x2371a75f720 <line:494:1, line:498:1>
|   |-CallExpr 0x2371a75f600 <line:496:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x2371a75f5e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a75f560 <col:5> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2371a75f628 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x2371a75f5b8 <col:18, col:24> 'unsigned char *' lvalue ->write_buf 0x2371a758b08
|   |     `-ImplicitCastExpr 0x2371a75f5a0 <col:18> 'PEER *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a75f580 <col:18> 'PEER *' lvalue ParmVar 0x2371a75f250 'peer' 'PEER *'
|   `-CallExpr 0x2371a75f6e0 <line:497:5, col:32> 'int'
|     |-ImplicitCastExpr 0x2371a75f6c8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2371a75f640 <col:5> 'int ()' Function 0x2371a74f0b0 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x2371a75f708 <col:18, col:24> 'unsigned char *' <LValueToRValue>
|       `-MemberExpr 0x2371a75f698 <col:18, col:24> 'unsigned char *' lvalue ->read_buf 0x2371a758be8
|         `-ImplicitCastExpr 0x2371a75f680 <col:18> 'PEER *' <LValueToRValue>
|           `-DeclRefExpr 0x2371a75f660 <col:18> 'PEER *' lvalue ParmVar 0x2371a75f250 'peer' 'PEER *'
|-FunctionDecl 0x2371a75f7f8 <line:504:1, line:525:1> line:504:13 used do_handshake_step 'void (PEER *)' static
| |-ParmVarDecl 0x2371a75f750 <col:31, col:37> col:37 used peer 'PEER *'
| `-CompoundStmt 0x2371a760308 <line:505:1, line:525:1>
|   |-DeclStmt 0x2371a75f938 <line:506:5, col:12>
|   | `-VarDecl 0x2371a75f8d0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x2371a75fb18 <line:508:5, line:511:5>
|   | |-BinaryOperator 0x2371a75fa08 <line:508:9, col:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x2371a75f9f0 <col:9, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2371a75f9d8 <col:9, col:15> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x2371a75f988 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   | | |     `-ImplicitCastExpr 0x2371a75f970 <col:9> 'PEER *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2371a75f950 <col:9> 'PEER *' lvalue ParmVar 0x2371a75f750 'peer' 'PEER *'
|   | | `-DeclRefExpr 0x2371a75f9b8 <col:25> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   | `-CompoundStmt 0x2371a75faf8 <col:37, line:511:5>
|   |   |-BinaryOperator 0x2371a75fac8 <line:509:9, col:24> 'peer_status_t':'peer_status_t' '='
|   |   | |-MemberExpr 0x2371a75fa60 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |   | | `-ImplicitCastExpr 0x2371a75fa48 <col:9> 'PEER *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2371a75fa28 <col:9> 'PEER *' lvalue ParmVar 0x2371a75f750 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x2371a75fab0 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   `-DeclRefExpr 0x2371a75fa90 <col:24> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   |   `-ReturnStmt 0x2371a75fae8 <line:510:9>
|   `-IfStmt 0x2371a7602e0 <line:515:5, line:524:5> has_else
|     |-BinaryOperator 0x2371a75fd10 <line:515:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x2371a75fcf8 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x2371a75fcb0 <col:9> 'int' lvalue Var 0x2371a75f8d0 'ret' 'int'
|     | `-IntegerLiteral 0x2371a75fcd0 <col:16> 'int' 1
|     |-CompoundStmt 0x2371a75fdf0 <col:19, line:517:5>
|     | `-BinaryOperator 0x2371a75fdd0 <line:516:9, col:24> 'peer_status_t':'peer_status_t' '='
|     |   |-MemberExpr 0x2371a75fd68 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|     |   | `-ImplicitCastExpr 0x2371a75fd50 <col:9> 'PEER *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x2371a75fd30 <col:9> 'PEER *' lvalue ParmVar 0x2371a75f750 'peer' 'PEER *'
|     |   `-ImplicitCastExpr 0x2371a75fdb8 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|     |     `-DeclRefExpr 0x2371a75fd98 <col:24> 'int' EnumConstant 0x2371a7587f0 'PEER_SUCCESS' 'int'
|     `-IfStmt 0x2371a7602b8 <line:517:12, line:524:5> has_else
|       |-BinaryOperator 0x2371a75fe68 <line:517:16, col:23> 'int' '=='
|       | |-ImplicitCastExpr 0x2371a75fe50 <col:16> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x2371a75fe08 <col:16> 'int' lvalue Var 0x2371a75f8d0 'ret' 'int'
|       | `-IntegerLiteral 0x2371a75fe28 <col:23> 'int' 0
|       |-CompoundStmt 0x2371a75ff48 <col:26, line:519:5>
|       | `-BinaryOperator 0x2371a75ff28 <line:518:9, col:24> 'peer_status_t':'peer_status_t' '='
|       |   |-MemberExpr 0x2371a75fec0 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|       |   | `-ImplicitCastExpr 0x2371a75fea8 <col:9> 'PEER *' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x2371a75fe88 <col:9> 'PEER *' lvalue ParmVar 0x2371a75f750 'peer' 'PEER *'
|       |   `-ImplicitCastExpr 0x2371a75ff10 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|       |     `-DeclRefExpr 0x2371a75fef0 <col:24> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|       `-CompoundStmt 0x2371a760298 <line:519:12, line:524:5>
|         |-DeclStmt 0x2371a760158 <line:520:9, col:50>
|         | `-VarDecl 0x2371a75ff78 <col:9, col:13> col:13 used error 'int'
|         `-IfStmt 0x2371a760280 <line:522:9, line:523:28>
|           |-OpaqueValueExpr 0x2371a760268 <<invalid sloc>> '_Bool'
|           `-BinaryOperator 0x2371a760248 <col:13, col:28> 'peer_status_t':'peer_status_t' '='
|             |-MemberExpr 0x2371a7601e0 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|             | `-ImplicitCastExpr 0x2371a7601c8 <col:13> 'PEER *' <LValueToRValue>
|             |   `-DeclRefExpr 0x2371a7601a8 <col:13> 'PEER *' lvalue ParmVar 0x2371a75f750 'peer' 'PEER *'
|             `-ImplicitCastExpr 0x2371a760230 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|               `-DeclRefExpr 0x2371a760210 <col:28> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|-FunctionDecl 0x2371a7603e8 <line:536:1, line:588:1> line:536:13 used do_app_data_step 'void (PEER *)' static
| |-ParmVarDecl 0x2371a760340 <col:30, col:36> col:36 used peer 'PEER *'
| `-CompoundStmt 0x2371a765150 <line:537:1, line:588:1>
|   |-DeclStmt 0x2371a7605e8 <line:538:5, col:29>
|   | |-VarDecl 0x2371a7604c0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x2371a760528 <col:15> 'int' 1
|   | `-VarDecl 0x2371a760568 <col:5, col:18> col:18 used write_bytes 'int'
|   |-DoStmt 0x2371a7608a0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a760860 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a760848 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a7606f8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a7606d8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a7606b8 <.//openssl//file_jk/after\test\handshake_helper.c:540:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x2371a7606a0 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x2371a760688 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x2371a760638 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   | |   |     |     `-ImplicitCastExpr 0x2371a760620 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x2371a760600 <col:16> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x2371a760668 <col:32> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x2371a760830 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a760808 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a7607f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a760730 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a7607d8 <col:28, <scratch space>:15:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a7607c0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a760788 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x2371a760878 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a7608c0 <.//openssl//file_jk/after\test\handshake_helper.c:540:43>
|   |-WhileStmt 0x2371a759438 <line:543:5, line:558:5>
|   | |-BinaryOperator 0x2371a7609e0 <line:543:12, col:29> 'int' '&&'
|   | | |-BinaryOperator 0x2371a760940 <col:12, col:18> 'int' '>'
|   | | | |-ImplicitCastExpr 0x2371a760928 <col:12> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2371a7608c8 <col:12> 'int' lvalue Var 0x2371a7604c0 'ret' 'int'
|   | | | `-IntegerLiteral 0x2371a760900 <col:18> 'int' 0
|   | | `-ImplicitCastExpr 0x2371a7609c8 <col:23, col:29> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x2371a760998 <col:23, col:29> 'int' lvalue ->bytes_to_read 0x2371a758d38
|   | |     `-ImplicitCastExpr 0x2371a760980 <col:23> 'PEER *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2371a760960 <col:23> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   | `-CompoundStmt 0x2371a759420 <col:44, line:558:5>
|   |   `-IfStmt 0x2371a7593f8 <line:545:9, line:557:9> has_else
|   |     |-BinaryOperator 0x2371a760c98 <line:545:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x2371a760c80 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2371a760c38 <col:13> 'int' lvalue Var 0x2371a7604c0 'ret' 'int'
|   |     | `-IntegerLiteral 0x2371a760c58 <col:19> 'int' 0
|   |     |-CompoundStmt 0x2371a761018 <col:22, line:548:9>
|   |     | |-DoStmt 0x2371a760f20 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |     | | |-CompoundStmt 0x2371a760ee0 <line:106:8, line:111:5>
|   |     | | | `-IfStmt 0x2371a760ec8 <line:107:9, line:110:9>
|   |     | | |   |-UnaryOperator 0x2371a760db0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |     | | |   | `-ParenExpr 0x2371a760d90 <col:14, col:24> 'int'
|   |     | | |   |   `-BinaryOperator 0x2371a760d70 <.//openssl//file_jk/after\test\handshake_helper.c:546:24, col:37> 'int' '<='
|   |     | | |   |     |-ImplicitCastExpr 0x2371a760d40 <col:24> 'int' <LValueToRValue>
|   |     | | |   |     | `-DeclRefExpr 0x2371a760cb8 <col:24> 'int' lvalue Var 0x2371a7604c0 'ret' 'int'
|   |     | | |   |     `-ImplicitCastExpr 0x2371a760d58 <col:31, col:37> 'int' <LValueToRValue>
|   |     | | |   |       `-MemberExpr 0x2371a760d10 <col:31, col:37> 'int' lvalue ->bytes_to_read 0x2371a758d38
|   |     | | |   |         `-ImplicitCastExpr 0x2371a760cf8 <col:31> 'PEER *' <LValueToRValue>
|   |     | | |   |           `-DeclRefExpr 0x2371a760cd8 <col:31> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   |     | | |   `-CompoundStmt 0x2371a760eb0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   |     | | |     `-CallExpr 0x2371a760e88 <line:109:13, col:39> 'int'
|   |     | | |       |-ImplicitCastExpr 0x2371a760e70 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | |       | `-DeclRefExpr 0x2371a760de8 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   |     | | |       `-UnaryOperator 0x2371a760e58 <col:28, <scratch space>:16:1> 'int' prefix '!' cannot overflow
|   |     | | |         `-ImplicitCastExpr 0x2371a760e40 <col:1> 'char *' <ArrayToPointerDecay>
|   |     | | |           `-StringLiteral 0x2371a760e08 <col:1> 'char [27]' lvalue "ret <= peer->bytes_to_read"
|   |     | | `-IntegerLiteral 0x2371a760ef8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |     | |-NullStmt 0x2371a760f40 <.//openssl//file_jk/after\test\handshake_helper.c:546:51>
|   |     | `-CompoundAssignOperator 0x2371a760fe8 <line:547:13, col:36> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x2371a760f80 <col:13, col:19> 'int' lvalue ->bytes_to_read 0x2371a758d38
|   |     |   | `-ImplicitCastExpr 0x2371a760f68 <col:13> 'PEER *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x2371a760f48 <col:13> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   |     |   `-ImplicitCastExpr 0x2371a760fd0 <col:36> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2371a760fb0 <col:36> 'int' lvalue Var 0x2371a7604c0 'ret' 'int'
|   |     `-IfStmt 0x2371a7593d0 <line:548:16, line:557:9> has_else
|   |       |-BinaryOperator 0x2371a7610a0 <line:548:20, col:27> 'int' '=='
|   |       | |-ImplicitCastExpr 0x2371a761088 <col:20> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x2371a761040 <col:20> 'int' lvalue Var 0x2371a7604c0 'ret' 'int'
|   |       | `-IntegerLiteral 0x2371a761060 <col:27> 'int' 0
|   |       |-CompoundStmt 0x2371a759128 <col:30, line:551:9>
|   |       | |-BinaryOperator 0x2371a7590f8 <line:549:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |       | | |-MemberExpr 0x2371a759090 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |       | | | `-ImplicitCastExpr 0x2371a7610e0 <col:13> 'PEER *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x2371a7610c0 <col:13> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   |       | | `-ImplicitCastExpr 0x2371a7590e0 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       | |   `-DeclRefExpr 0x2371a7590c0 <col:28> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   |       | `-ReturnStmt 0x2371a759118 <line:550:13>
|   |       `-CompoundStmt 0x2371a7593b0 <line:551:16, line:557:9>
|   |         |-DeclStmt 0x2371a759240 <line:552:13, col:54>
|   |         | `-VarDecl 0x2371a759160 <col:13, col:17> col:17 used error 'int'
|   |         `-IfStmt 0x2371a759398 <line:553:13, line:556:13>
|   |           |-OpaqueValueExpr 0x2371a759380 <<invalid sloc>> '_Bool'
|   |           `-CompoundStmt 0x2371a759360 <line:553:47, line:556:13>
|   |             |-BinaryOperator 0x2371a759330 <line:554:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |             | |-MemberExpr 0x2371a7592c8 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |             | | `-ImplicitCastExpr 0x2371a7592b0 <col:17> 'PEER *' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x2371a759290 <col:17> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   |             | `-ImplicitCastExpr 0x2371a759318 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |             |   `-DeclRefExpr 0x2371a7592f8 <col:32> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   |             `-ReturnStmt 0x2371a759350 <line:555:17>
|   |-BinaryOperator 0x2371a7596d8 <line:561:5, line:562:15> 'int' '='
|   | |-DeclRefExpr 0x2371a759450 <line:561:5> 'int' lvalue Var 0x2371a760568 'write_bytes' 'int'
|   | `-ConditionalOperator 0x2371a7596a8 <col:19, line:562:15> 'int'
|   |   |-BinaryOperator 0x2371a759588 <line:561:19, col:48> 'int' '<'
|   |   | |-ImplicitCastExpr 0x2371a759558 <col:19, col:25> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x2371a7594c0 <col:19, col:25> 'int' lvalue ->bytes_to_write 0x2371a758cc8
|   |   | |   `-ImplicitCastExpr 0x2371a7594a8 <col:19> 'PEER *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x2371a759488 <col:19> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x2371a759570 <col:42, col:48> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x2371a759528 <col:42, col:48> 'int' lvalue ->write_buf_len 0x2371a758b78
|   |   |     `-ImplicitCastExpr 0x2371a759510 <col:42> 'PEER *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2371a7594f0 <col:42> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   |   |-ImplicitCastExpr 0x2371a759678 <col:64, col:70> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x2371a7595e0 <col:64, col:70> 'int' lvalue ->bytes_to_write 0x2371a758cc8
|   |   |   `-ImplicitCastExpr 0x2371a7595c8 <col:64> 'PEER *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2371a7595a8 <col:64> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   |   `-ImplicitCastExpr 0x2371a759690 <line:562:9, col:15> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x2371a759648 <col:9, col:15> 'int' lvalue ->write_buf_len 0x2371a758b78
|   |       `-ImplicitCastExpr 0x2371a759630 <col:9> 'PEER *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2371a759610 <col:9> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   |-IfStmt 0x2371a759e08 <line:563:5, line:577:5>
|   | |-ImplicitCastExpr 0x2371a759718 <line:563:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2371a7596f8 <col:9> 'int' lvalue Var 0x2371a760568 'write_bytes' 'int'
|   | `-CompoundStmt 0x2371a759df0 <col:22, line:577:5>
|   |   `-IfStmt 0x2371a759dc8 <line:565:9, line:576:9> has_else
|   |     |-BinaryOperator 0x2371a759980 <line:565:13, col:19> 'int' '>'
|   |     | |-ImplicitCastExpr 0x2371a759968 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2371a759920 <col:13> 'int' lvalue Var 0x2371a7604c0 'ret' 'int'
|   |     | `-IntegerLiteral 0x2371a759940 <col:19> 'int' 0
|   |     |-CompoundStmt 0x2371a759cb0 <col:22, line:569:9>
|   |     | |-DoStmt 0x2371a759bb8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |     | | |-CompoundStmt 0x2371a759b78 <line:106:8, line:111:5>
|   |     | | | `-IfStmt 0x2371a759b60 <line:107:9, line:110:9>
|   |     | | |   |-UnaryOperator 0x2371a759a50 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   |     | | |   | `-ParenExpr 0x2371a759a30 <col:14, col:24> 'int'
|   |     | | |   |   `-BinaryOperator 0x2371a759a10 <.//openssl//file_jk/after\test\handshake_helper.c:567:24, col:31> 'int' '=='
|   |     | | |   |     |-ImplicitCastExpr 0x2371a7599e0 <col:24> 'int' <LValueToRValue>
|   |     | | |   |     | `-DeclRefExpr 0x2371a7599a0 <col:24> 'int' lvalue Var 0x2371a7604c0 'ret' 'int'
|   |     | | |   |     `-ImplicitCastExpr 0x2371a7599f8 <col:31> 'int' <LValueToRValue>
|   |     | | |   |       `-DeclRefExpr 0x2371a7599c0 <col:31> 'int' lvalue Var 0x2371a760568 'write_bytes' 'int'
|   |     | | |   `-CompoundStmt 0x2371a759b48 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   |     | | |     `-CallExpr 0x2371a759b20 <line:109:13, col:39> 'int'
|   |     | | |       |-ImplicitCastExpr 0x2371a759b08 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | |       | `-DeclRefExpr 0x2371a759a88 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   |     | | |       `-UnaryOperator 0x2371a759af0 <col:28, <scratch space>:17:1> 'int' prefix '!' cannot overflow
|   |     | | |         `-ImplicitCastExpr 0x2371a759ad8 <col:1> 'char *' <ArrayToPointerDecay>
|   |     | | |           `-StringLiteral 0x2371a759aa8 <col:1> 'char [19]' lvalue "ret == write_bytes"
|   |     | | `-IntegerLiteral 0x2371a759b90 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |     | |-NullStmt 0x2371a759bd8 <.//openssl//file_jk/after\test\handshake_helper.c:567:43>
|   |     | `-CompoundAssignOperator 0x2371a759c80 <line:568:13, col:37> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-MemberExpr 0x2371a759c18 <col:13, col:19> 'int' lvalue ->bytes_to_write 0x2371a758cc8
|   |     |   | `-ImplicitCastExpr 0x2371a759c00 <col:13> 'PEER *' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x2371a759be0 <col:13> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   |     |   `-ImplicitCastExpr 0x2371a759c68 <col:37> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x2371a759c48 <col:37> 'int' lvalue Var 0x2371a7604c0 'ret' 'int'
|   |     `-CompoundStmt 0x2371a759da8 <line:569:16, line:576:9>
|   |       |-BinaryOperator 0x2371a759d78 <line:574:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |       | |-MemberExpr 0x2371a759d10 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |       | | `-ImplicitCastExpr 0x2371a759cf8 <col:13> 'PEER *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2371a759cd8 <col:13> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|   |       | `-ImplicitCastExpr 0x2371a759d60 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   `-DeclRefExpr 0x2371a759d40 <col:28> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   |       `-ReturnStmt 0x2371a759d98 <line:575:13>
|   `-IfStmt 0x2371a75a048 <line:585:5, line:587:5>
|     |-BinaryOperator 0x2371a759f50 <line:585:9, col:41> 'int' '&&'
|     | |-UnaryOperator 0x2371a759ea0 <col:9, col:16> 'int' prefix '!' cannot overflow
|     | | `-ImplicitCastExpr 0x2371a759e88 <col:10, col:16> 'int' <LValueToRValue>
|     | |   `-MemberExpr 0x2371a759e58 <col:10, col:16> 'int' lvalue ->bytes_to_write 0x2371a758cc8
|     | |     `-ImplicitCastExpr 0x2371a759e40 <col:10> 'PEER *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x2371a759e20 <col:10> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|     | `-UnaryOperator 0x2371a759f38 <col:34, col:41> 'int' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x2371a759f20 <col:35, col:41> 'int' <LValueToRValue>
|     |     `-MemberExpr 0x2371a759ef0 <col:35, col:41> 'int' lvalue ->bytes_to_read 0x2371a758d38
|     |       `-ImplicitCastExpr 0x2371a759ed8 <col:35> 'PEER *' <LValueToRValue>
|     |         `-DeclRefExpr 0x2371a759eb8 <col:35> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|     `-CompoundStmt 0x2371a75a030 <col:56, line:587:5>
|       `-BinaryOperator 0x2371a75a010 <line:586:9, col:24> 'peer_status_t':'peer_status_t' '='
|         |-MemberExpr 0x2371a759fa8 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|         | `-ImplicitCastExpr 0x2371a759f90 <col:9> 'PEER *' <LValueToRValue>
|         |   `-DeclRefExpr 0x2371a759f70 <col:9> 'PEER *' lvalue ParmVar 0x2371a760340 'peer' 'PEER *'
|         `-ImplicitCastExpr 0x2371a759ff8 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|           `-DeclRefExpr 0x2371a759fd8 <col:24> 'int' EnumConstant 0x2371a7587f0 'PEER_SUCCESS' 'int'
|-FunctionDecl 0x2371a765368 <line:590:1, line:687:1> line:590:13 used do_reneg_setup_step 'void (const SSL_TEST_CTX *, PEER *)' static
| |-ParmVarDecl 0x2371a7651a8 <col:33, col:53> col:53 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x2371a765220 <col:63, col:69> col:69 used peer 'PEER *'
| `-CompoundStmt 0x2371a763a68 <line:591:1, line:687:1>
|   |-DeclStmt 0x2371a7654b0 <line:592:5, col:12>
|   | `-VarDecl 0x2371a765448 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x2371a765540 <line:593:5, col:13>
|   | `-VarDecl 0x2371a7654d8 <col:5, col:10> col:10 used buf 'char'
|   |-IfStmt 0x2371a765818 <line:595:5, line:604:5>
|   | |-BinaryOperator 0x2371a765610 <line:595:9, col:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x2371a7655f8 <col:9, col:15> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2371a7655e0 <col:9, col:15> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | | |   `-MemberExpr 0x2371a765590 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   | | |     `-ImplicitCastExpr 0x2371a765578 <col:9> 'PEER *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2371a765558 <col:9> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   | | `-DeclRefExpr 0x2371a7655c0 <col:25> 'int' EnumConstant 0x2371a7587f0 'PEER_SUCCESS' 'int'
|   | `-CompoundStmt 0x2371a7657f0 <col:39, line:604:5>
|   |   |-BinaryOperator 0x2371a7656d0 <line:601:9, col:24> 'peer_status_t':'peer_status_t' '='
|   |   | |-MemberExpr 0x2371a765668 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |   | | `-ImplicitCastExpr 0x2371a765650 <col:9> 'PEER *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2371a765630 <col:9> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   |   | `-ImplicitCastExpr 0x2371a7656b8 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   `-DeclRefExpr 0x2371a765698 <col:24> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   |   |-CallExpr 0x2371a7657a0 <line:602:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x2371a765788 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2371a7656f0 <col:9> 'void (PEER *)' Function 0x2371a75f7f8 'do_handshake_step' 'void (PEER *)'
|   |   | `-ImplicitCastExpr 0x2371a7657c8 <col:27> 'PEER *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2371a765710 <col:27> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   |   `-ReturnStmt 0x2371a7657e0 <line:603:9>
|   |-DoStmt 0x2371a765a98 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a765a58 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a765a40 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a765928 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a765908 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a7658e8 <.//openssl//file_jk/after\test\handshake_helper.c:606:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x2371a7658d0 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x2371a7658b8 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x2371a765868 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   | |   |     |     `-ImplicitCastExpr 0x2371a765850 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x2371a765830 <col:16> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x2371a765898 <col:32> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x2371a765a28 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a765a00 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a7659e8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a765960 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a7659d0 <col:28, <scratch space>:18:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a7659b8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a765980 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x2371a765a70 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a765ab8 <.//openssl//file_jk/after\test\handshake_helper.c:606:43>
|   |-DoStmt 0x2371a765ec0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a765e80 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a765e68 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a765cb0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a765c90 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a765c70 <.//openssl//file_jk/after\test\handshake_helper.c:607:16, line:608:48> 'int' '||'
|   | |   |     |-BinaryOperator 0x2371a765b78 <line:607:16, col:44> 'int' '=='
|   | |   |     | |-ImplicitCastExpr 0x2371a765b60 <col:16, col:26> 'int' <IntegralCast>
|   | |   |     | | `-ImplicitCastExpr 0x2371a765b48 <col:16, col:26> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|   | |   |     | |   `-MemberExpr 0x2371a765af8 <col:16, col:26> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x2371a7a1290
|   | |   |     | |     `-ImplicitCastExpr 0x2371a765ae0 <col:16> 'const SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     | |       `-DeclRefExpr 0x2371a765ac0 <col:16> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7651a8 'test_ctx' 'const SSL_TEST_CTX *'
|   | |   |     | `-DeclRefExpr 0x2371a765b28 <col:44> 'int' EnumConstant 0x2371a79bd10 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|   | |   |     `-BinaryOperator 0x2371a765c50 <line:608:20, col:48> 'int' '=='
|   | |   |       |-ImplicitCastExpr 0x2371a765c38 <col:20, col:30> 'int' <IntegralCast>
|   | |   |       | `-ImplicitCastExpr 0x2371a765c20 <col:20, col:30> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|   | |   |       |   `-MemberExpr 0x2371a765bd0 <col:20, col:30> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x2371a7a1290
|   | |   |       |     `-ImplicitCastExpr 0x2371a765bb8 <col:20> 'const SSL_TEST_CTX *' <LValueToRValue>
|   | |   |       |       `-DeclRefExpr 0x2371a765b98 <col:20> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7651a8 'test_ctx' 'const SSL_TEST_CTX *'
|   | |   |       `-DeclRefExpr 0x2371a765c00 <col:48> 'int' EnumConstant 0x2371a79bd68 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|   | |   `-CompoundStmt 0x2371a765e50 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a765e28 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a765e10 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a765ce8 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a765df8 <col:28, <scratch space>:19:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a765de0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a765d48 <col:1> 'char [123]' lvalue "test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEG_SERVER || test_ctx->handshake_mode == SSL_TEST_HANDSHAKE_RENEG_CLIENT"
|   | `-IntegerLiteral 0x2371a765e98 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a765ee0 <.//openssl//file_jk/after\test\handshake_helper.c:608:80>
|   |-IfStmt 0x2371a7632b8 <line:611:5, line:660:5>
|   | |-OpaqueValueExpr 0x2371a7632a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2371a763288 <line:614:48, line:660:5>
|   |   `-IfStmt 0x2371a763270 <line:619:9, line:659:9>
|   |     |-OpaqueValueExpr 0x2371a763258 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x2371a763220 <line:619:50, line:659:9>
|   |       |-IfStmt 0x2371a761c68 <line:625:13, line:638:13> has_else
|   |       | |-OpaqueValueExpr 0x2371a761c50 <<invalid sloc>> '_Bool'
|   |       | |-CompoundStmt 0x2371a761528 <line:625:43, line:627:13>
|   |       | `-CompoundStmt 0x2371a761c38 <col:20, line:638:13>
|   |       |   `-IfStmt 0x2371a761c10 <line:628:17, line:637:17> has_else
|   |       |     |-BinaryOperator 0x2371a7616b8 <line:628:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |       |     | |-ImplicitCastExpr 0x2371a761688 <.//openssl//file_jk/after\test\handshake_helper.c:628:21, col:44> 'char *' <LValueToRValue>
|   |       |     | | `-MemberExpr 0x2371a7615d0 <col:21, col:44> 'char *const' lvalue .reneg_ciphers 0x2371a797780
|   |       |     | |   `-MemberExpr 0x2371a7615a0 <col:21, col:37> 'const SSL_TEST_CLIENT_CONF':'const SSL_TEST_CLIENT_CONF' lvalue .client 0x2371a797d80
|   |       |     | |     `-MemberExpr 0x2371a761570 <col:21, col:31> 'const SSL_TEST_EXTRA_CONF':'const SSL_TEST_EXTRA_CONF' lvalue ->extra 0x2371a7a1400
|   |       |     | |       `-ImplicitCastExpr 0x2371a761558 <col:21> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |       |     | |         `-DeclRefExpr 0x2371a761538 <col:21> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7651a8 'test_ctx' 'const SSL_TEST_CTX *'
|   |       |     | `-ImplicitCastExpr 0x2371a7616a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |       |     |   `-ParenExpr 0x2371a761668 <col:17, col:27> 'void *'
|   |       |     |     `-CStyleCastExpr 0x2371a761640 <col:18, col:26> 'void *' <NullToPointer>
|   |       |     |       `-IntegerLiteral 0x2371a761600 <col:26> 'int' 0
|   |       |     |-CompoundStmt 0x2371a761a80 <.//openssl//file_jk/after\test\handshake_helper.c:628:67, line:635:17>
|   |       |     | `-IfStmt 0x2371a7619f0 <line:629:21, line:633:21>
|   |       |     |   |-OpaqueValueExpr 0x2371a7619d8 <<invalid sloc>> '_Bool'
|   |       |     |   `-CompoundStmt 0x2371a7619b8 <line:630:72, line:633:21>
|   |       |     |     |-BinaryOperator 0x2371a761988 <line:631:25, col:40> 'peer_status_t':'peer_status_t' '='
|   |       |     |     | |-MemberExpr 0x2371a761920 <col:25, col:31> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |       |     |     | | `-ImplicitCastExpr 0x2371a761908 <col:25> 'PEER *' <LValueToRValue>
|   |       |     |     | |   `-DeclRefExpr 0x2371a7618e8 <col:25> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   |       |     |     | `-ImplicitCastExpr 0x2371a761970 <col:40> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |     |     |   `-DeclRefExpr 0x2371a761950 <col:40> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   |       |     |     `-ReturnStmt 0x2371a7619a8 <line:632:25>
|   |       |     `-CompoundStmt 0x2371a761c00 <line:635:24, line:637:17>
|   |       |-IfStmt 0x2371a761dd0 <line:639:13, line:642:13>
|   |       | |-UnaryOperator 0x2371a761cc8 <line:639:17, col:18> 'int' prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x2371a761cb0 <col:18> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2371a761c90 <col:18> 'int' lvalue Var 0x2371a765448 'ret' 'int'
|   |       | `-CompoundStmt 0x2371a761db0 <col:23, line:642:13>
|   |       |   |-BinaryOperator 0x2371a761d80 <line:640:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       |   | |-MemberExpr 0x2371a761d18 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |       |   | | `-ImplicitCastExpr 0x2371a761d00 <col:17> 'PEER *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x2371a761ce0 <col:17> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   |       |   | `-ImplicitCastExpr 0x2371a761d68 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   |   `-DeclRefExpr 0x2371a761d48 <col:32> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   |       |   `-ReturnStmt 0x2371a761da0 <line:641:17>
|   |       |-CallExpr 0x2371a761e40 <line:643:13, col:35> 'void'
|   |       | |-ImplicitCastExpr 0x2371a761e28 <col:13> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x2371a761de8 <col:13> 'void (PEER *)' Function 0x2371a75f7f8 'do_handshake_step' 'void (PEER *)'
|   |       | `-ImplicitCastExpr 0x2371a761e68 <col:31> 'PEER *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2371a761e08 <col:31> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   |       |-IfStmt 0x2371a7631e8 <line:654:13, line:657:32> has_else
|   |       | |-BinaryOperator 0x2371a761f38 <line:654:17, col:33> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x2371a761f20 <col:17, col:23> 'int' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x2371a761f08 <col:17, col:23> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       | | |   `-MemberExpr 0x2371a761eb8 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |       | | |     `-ImplicitCastExpr 0x2371a761ea0 <col:17> 'PEER *' <LValueToRValue>
|   |       | | |       `-DeclRefExpr 0x2371a761e80 <col:17> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   |       | | `-DeclRefExpr 0x2371a761ee8 <col:33> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   |       | |-BinaryOperator 0x2371a761ff8 <line:655:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       | | |-MemberExpr 0x2371a761f90 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |       | | | `-ImplicitCastExpr 0x2371a761f78 <col:17> 'PEER *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x2371a761f58 <col:17> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   |       | | `-ImplicitCastExpr 0x2371a761fe0 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       | |   `-DeclRefExpr 0x2371a761fc0 <col:32> 'int' EnumConstant 0x2371a7587f0 'PEER_SUCCESS' 'int'
|   |       | `-IfStmt 0x2371a7631d0 <line:656:18, line:657:32>
|   |       |   |-BinaryOperator 0x2371a7620d0 <line:656:22, col:38> 'int' '=='
|   |       |   | |-ImplicitCastExpr 0x2371a7620b8 <col:22, col:28> 'int' <IntegralCast>
|   |       |   | | `-ImplicitCastExpr 0x2371a7620a0 <col:22, col:28> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       |   | |   `-MemberExpr 0x2371a762050 <col:22, col:28> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |       |   | |     `-ImplicitCastExpr 0x2371a762038 <col:22> 'PEER *' <LValueToRValue>
|   |       |   | |       `-DeclRefExpr 0x2371a762018 <col:22> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   |       |   | `-DeclRefExpr 0x2371a762080 <col:38> 'int' EnumConstant 0x2371a7587f0 'PEER_SUCCESS' 'int'
|   |       |   `-BinaryOperator 0x2371a7631b0 <line:657:17, col:32> 'peer_status_t':'peer_status_t' '='
|   |       |     |-MemberExpr 0x2371a763148 <col:17, col:23> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |       |     | `-ImplicitCastExpr 0x2371a763130 <col:17> 'PEER *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x2371a7620f0 <col:17> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   |       |     `-ImplicitCastExpr 0x2371a763198 <col:32> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |       `-DeclRefExpr 0x2371a763178 <col:32> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   |       `-ReturnStmt 0x2371a763210 <line:658:13>
|   |-IfStmt 0x2371a763980 <line:668:5, line:684:5> has_else
|   | |-BinaryOperator 0x2371a763458 <line:668:9, col:16> 'int' '>='
|   | | |-ImplicitCastExpr 0x2371a763440 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2371a7633f8 <col:9> 'int' lvalue Var 0x2371a765448 'ret' 'int'
|   | | `-IntegerLiteral 0x2371a763418 <col:16> 'int' 0
|   | |-CompoundStmt 0x2371a763548 <col:19, line:675:5>
|   | | |-BinaryOperator 0x2371a763518 <line:673:9, col:24> 'peer_status_t':'peer_status_t' '='
|   | | | |-MemberExpr 0x2371a7634b0 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   | | | | `-ImplicitCastExpr 0x2371a763498 <col:9> 'PEER *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2371a763478 <col:9> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   | | | `-ImplicitCastExpr 0x2371a763500 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|   | | |   `-DeclRefExpr 0x2371a7634e0 <col:24> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   | | `-ReturnStmt 0x2371a763538 <line:674:9>
|   | `-CompoundStmt 0x2371a763958 <line:675:12, line:684:5>
|   |   |-DeclStmt 0x2371a763660 <line:676:9, col:50>
|   |   | `-VarDecl 0x2371a763580 <col:9, col:13> col:13 used error 'int'
|   |   |-IfStmt 0x2371a7637b8 <line:677:9, line:680:9>
|   |   | |-OpaqueValueExpr 0x2371a7637a0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2371a763780 <line:677:43, line:680:9>
|   |   |   |-BinaryOperator 0x2371a763750 <line:678:13, col:28> 'peer_status_t':'peer_status_t' '='
|   |   |   | |-MemberExpr 0x2371a7636e8 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   |   |   | | `-ImplicitCastExpr 0x2371a7636d0 <col:13> 'PEER *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2371a7636b0 <col:13> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|   |   |   | `-ImplicitCastExpr 0x2371a763738 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |   |   |   `-DeclRefExpr 0x2371a763718 <col:28> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   |   |   `-ReturnStmt 0x2371a763770 <line:679:13>
|   |   `-IfStmt 0x2371a763940 <line:682:9, line:683:13>
|   |     |-OpaqueValueExpr 0x2371a763928 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x2371a763918 <col:13>
|   `-BinaryOperator 0x2371a763a48 <line:686:5, col:20> 'peer_status_t':'peer_status_t' '='
|     |-MemberExpr 0x2371a7639e0 <col:5, col:11> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|     | `-ImplicitCastExpr 0x2371a7639c8 <col:5> 'PEER *' <LValueToRValue>
|     |   `-DeclRefExpr 0x2371a7639a8 <col:5> 'PEER *' lvalue ParmVar 0x2371a765220 'peer' 'PEER *'
|     `-ImplicitCastExpr 0x2371a763a30 <col:20> 'peer_status_t':'peer_status_t' <IntegralCast>
|       `-DeclRefExpr 0x2371a763a10 <col:20> 'int' EnumConstant 0x2371a7587f0 'PEER_SUCCESS' 'int'
|-FunctionDecl 0x2371a763b80 <line:705:1, line:720:1> line:705:13 used do_shutdown_step 'void (PEER *)' static
| |-ParmVarDecl 0x2371a763ad8 <col:30, col:36> col:36 used peer 'PEER *'
| `-CompoundStmt 0x2371a764568 <line:706:1, line:720:1>
|   |-DeclStmt 0x2371a763cc0 <line:707:5, col:12>
|   | `-VarDecl 0x2371a763c58 <col:5, col:9> col:9 used ret 'int'
|   |-DoStmt 0x2371a763f40 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a763f00 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a763ee8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a763dd0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a763db0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a763d90 <.//openssl//file_jk/after\test\handshake_helper.c:709:16, col:32> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x2371a763d78 <col:16, col:22> 'int' <IntegralCast>
|   | |   |     | `-ImplicitCastExpr 0x2371a763d60 <col:16, col:22> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   |     |   `-MemberExpr 0x2371a763d10 <col:16, col:22> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|   | |   |     |     `-ImplicitCastExpr 0x2371a763cf8 <col:16> 'PEER *' <LValueToRValue>
|   | |   |     |       `-DeclRefExpr 0x2371a763cd8 <col:16> 'PEER *' lvalue ParmVar 0x2371a763ad8 'peer' 'PEER *'
|   | |   |     `-DeclRefExpr 0x2371a763d40 <col:32> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   | |   `-CompoundStmt 0x2371a763ed0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a763ea8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a763e90 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a763e08 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a763e78 <col:28, <scratch space>:20:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a763e60 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a763e28 <col:1> 'char [27]' lvalue "peer->status == PEER_RETRY"
|   | `-IntegerLiteral 0x2371a763f18 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a763f60 <.//openssl//file_jk/after\test\handshake_helper.c:709:43>
|   `-IfStmt 0x2371a764540 <line:712:5, line:719:5> has_else
|     |-BinaryOperator 0x2371a764158 <line:712:9, col:16> 'int' '=='
|     | |-ImplicitCastExpr 0x2371a764140 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x2371a7640e8 <col:9> 'int' lvalue Var 0x2371a763c58 'ret' 'int'
|     | `-IntegerLiteral 0x2371a764108 <col:16> 'int' 1
|     |-CompoundStmt 0x2371a764238 <col:19, line:714:5>
|     | `-BinaryOperator 0x2371a764218 <line:713:9, col:24> 'peer_status_t':'peer_status_t' '='
|     |   |-MemberExpr 0x2371a7641b0 <col:9, col:15> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|     |   | `-ImplicitCastExpr 0x2371a764198 <col:9> 'PEER *' <LValueToRValue>
|     |   |   `-DeclRefExpr 0x2371a764178 <col:9> 'PEER *' lvalue ParmVar 0x2371a763ad8 'peer' 'PEER *'
|     |   `-ImplicitCastExpr 0x2371a764200 <col:24> 'peer_status_t':'peer_status_t' <IntegralCast>
|     |     `-DeclRefExpr 0x2371a7641e0 <col:24> 'int' EnumConstant 0x2371a7587f0 'PEER_SUCCESS' 'int'
|     `-IfStmt 0x2371a764528 <line:714:12, line:719:5>
|       |-BinaryOperator 0x2371a7642b0 <line:714:16, col:22> 'int' '<'
|       | |-ImplicitCastExpr 0x2371a764298 <col:16> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x2371a764250 <col:16> 'int' lvalue Var 0x2371a763c58 'ret' 'int'
|       | `-IntegerLiteral 0x2371a764270 <col:22> 'int' 0
|       `-CompoundStmt 0x2371a764508 <col:25, line:719:5>
|         |-DeclStmt 0x2371a7643c8 <line:715:9, col:50>
|         | `-VarDecl 0x2371a7642e8 <col:9, col:13> col:13 used error 'int'
|         `-IfStmt 0x2371a7644f0 <line:717:9, line:718:28>
|           |-OpaqueValueExpr 0x2371a7644d8 <<invalid sloc>> '_Bool'
|           `-BinaryOperator 0x2371a7644b8 <col:13, col:28> 'peer_status_t':'peer_status_t' '='
|             |-MemberExpr 0x2371a764450 <col:13, col:19> 'peer_status_t':'peer_status_t' lvalue ->status 0x2371a758dc0
|             | `-ImplicitCastExpr 0x2371a764438 <col:13> 'PEER *' <LValueToRValue>
|             |   `-DeclRefExpr 0x2371a764418 <col:13> 'PEER *' lvalue ParmVar 0x2371a763ad8 'peer' 'PEER *'
|             `-ImplicitCastExpr 0x2371a7644a0 <col:28> 'peer_status_t':'peer_status_t' <IntegralCast>
|               `-DeclRefExpr 0x2371a764480 <col:28> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|-EnumDecl 0x2371a764598 <line:722:9, line:730:1> line:722:9
| |-EnumConstantDecl 0x2371a764670 <line:723:5> col:5 referenced HANDSHAKE 'int'
| |-EnumConstantDecl 0x2371a7646c8 <line:724:5> col:5 referenced RENEG_APPLICATION_DATA 'int'
| |-EnumConstantDecl 0x2371a764720 <line:725:5> col:5 referenced RENEG_SETUP 'int'
| |-EnumConstantDecl 0x2371a764778 <line:726:5> col:5 referenced RENEG_HANDSHAKE 'int'
| |-EnumConstantDecl 0x2371a7647d0 <line:727:5> col:5 referenced APPLICATION_DATA 'int'
| |-EnumConstantDecl 0x2371a764828 <line:728:5> col:5 referenced SHUTDOWN 'int'
| `-EnumConstantDecl 0x2371a764880 <line:729:5> col:5 referenced CONNECTION_DONE 'int'
|-TypedefDecl 0x2371a764938 <line:722:1, line:730:3> col:3 referenced connect_phase_t 'enum connect_phase_t':'connect_phase_t'
| `-ElaboratedType 0x2371a7648e0 'enum connect_phase_t' sugar
|   `-EnumType 0x2371a764650 'connect_phase_t'
|     `-Enum 0x2371a764598 ''
|-FunctionDecl 0x2371a764b98 <line:732:1, line:754:1> line:732:24 used next_phase 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)' static
| |-ParmVarDecl 0x2371a7649e0 <col:35, col:55> col:55 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x2371a764a58 <line:733:35, col:51> col:51 used phase 'connect_phase_t':'connect_phase_t'
| `-CompoundStmt 0x2371a762520 <line:734:1, line:754:1>
|   `-SwitchStmt 0x2371a764cb0 <line:735:5, line:753:5>
|     |-ImplicitCastExpr 0x2371a764c98 <line:735:13> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x2371a764c80 <col:13> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|     |   `-DeclRefExpr 0x2371a764c60 <col:13> 'connect_phase_t':'connect_phase_t' lvalue ParmVar 0x2371a764a58 'phase' 'connect_phase_t':'connect_phase_t'
|     `-CompoundStmt 0x2371a7624c8 <col:20, line:753:5>
|       |-CaseStmt 0x2371a764d08 <line:736:5, line:739:20>
|       | |-ConstantExpr 0x2371a764cf0 <line:736:10> 'int'
|       | | `-DeclRefExpr 0x2371a764cd0 <col:10> 'int' EnumConstant 0x2371a764670 'HANDSHAKE' 'int'
|       | `-IfStmt 0x2371a764f48 <line:737:9, line:739:20>
|       |   |-BinaryOperator 0x2371a764ee0 <line:737:13, line:738:48> 'int' '||'
|       |   | |-BinaryOperator 0x2371a764de8 <line:737:13, col:41> 'int' '=='
|       |   | | |-ImplicitCastExpr 0x2371a764dd0 <col:13, col:23> 'int' <IntegralCast>
|       |   | | | `-ImplicitCastExpr 0x2371a764db8 <col:13, col:23> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|       |   | | |   `-MemberExpr 0x2371a764d68 <col:13, col:23> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x2371a7a1290
|       |   | | |     `-ImplicitCastExpr 0x2371a764d50 <col:13> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   | | |       `-DeclRefExpr 0x2371a764d30 <col:13> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7649e0 'test_ctx' 'const SSL_TEST_CTX *'
|       |   | | `-DeclRefExpr 0x2371a764d98 <col:41> 'int' EnumConstant 0x2371a79bd10 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|       |   | `-BinaryOperator 0x2371a764ec0 <line:738:20, col:48> 'int' '=='
|       |   |   |-ImplicitCastExpr 0x2371a764ea8 <col:20, col:30> 'int' <IntegralCast>
|       |   |   | `-ImplicitCastExpr 0x2371a764e90 <col:20, col:30> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|       |   |   |   `-MemberExpr 0x2371a764e40 <col:20, col:30> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x2371a7a1290
|       |   |   |     `-ImplicitCastExpr 0x2371a764e28 <col:20> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   |   |       `-DeclRefExpr 0x2371a764e08 <col:20> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7649e0 'test_ctx' 'const SSL_TEST_CTX *'
|       |   |   `-DeclRefExpr 0x2371a764e70 <col:48> 'int' EnumConstant 0x2371a79bd68 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|       |   `-ReturnStmt 0x2371a764f38 <line:739:13, col:20>
|       |     `-ImplicitCastExpr 0x2371a764f20 <col:20> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |       `-DeclRefExpr 0x2371a764f00 <col:20> 'int' EnumConstant 0x2371a7646c8 'RENEG_APPLICATION_DATA' 'int'
|       |-ReturnStmt 0x2371a764f98 <line:740:9, col:16>
|       | `-ImplicitCastExpr 0x2371a764f80 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |   `-DeclRefExpr 0x2371a764f60 <col:16> 'int' EnumConstant 0x2371a7647d0 'APPLICATION_DATA' 'int'
|       |-CaseStmt 0x2371a764fe0 <line:741:5, line:742:16>
|       | |-ConstantExpr 0x2371a764fc8 <line:741:10> 'int'
|       | | `-DeclRefExpr 0x2371a764fa8 <col:10> 'int' EnumConstant 0x2371a7646c8 'RENEG_APPLICATION_DATA' 'int'
|       | `-ReturnStmt 0x2371a765040 <line:742:9, col:16>
|       |   `-ImplicitCastExpr 0x2371a765028 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x2371a765008 <col:16> 'int' EnumConstant 0x2371a764720 'RENEG_SETUP' 'int'
|       |-CaseStmt 0x2371a765088 <line:743:5, line:744:16>
|       | |-ConstantExpr 0x2371a765070 <line:743:10> 'int'
|       | | `-DeclRefExpr 0x2371a765050 <col:10> 'int' EnumConstant 0x2371a764720 'RENEG_SETUP' 'int'
|       | `-ReturnStmt 0x2371a7650e8 <line:744:9, col:16>
|       |   `-ImplicitCastExpr 0x2371a7650d0 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x2371a7650b0 <col:16> 'int' EnumConstant 0x2371a764778 'RENEG_HANDSHAKE' 'int'
|       |-CaseStmt 0x2371a762120 <line:745:5, line:746:16>
|       | |-ConstantExpr 0x2371a765118 <line:745:10> 'int'
|       | | `-DeclRefExpr 0x2371a7650f8 <col:10> 'int' EnumConstant 0x2371a764778 'RENEG_HANDSHAKE' 'int'
|       | `-ReturnStmt 0x2371a762180 <line:746:9, col:16>
|       |   `-ImplicitCastExpr 0x2371a762168 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x2371a762148 <col:16> 'int' EnumConstant 0x2371a7647d0 'APPLICATION_DATA' 'int'
|       |-CaseStmt 0x2371a7621c8 <line:747:5, line:748:16>
|       | |-ConstantExpr 0x2371a7621b0 <line:747:10> 'int'
|       | | `-DeclRefExpr 0x2371a762190 <col:10> 'int' EnumConstant 0x2371a7647d0 'APPLICATION_DATA' 'int'
|       | `-ReturnStmt 0x2371a762228 <line:748:9, col:16>
|       |   `-ImplicitCastExpr 0x2371a762210 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x2371a7621f0 <col:16> 'int' EnumConstant 0x2371a764828 'SHUTDOWN' 'int'
|       |-CaseStmt 0x2371a762270 <line:749:5, line:750:16>
|       | |-ConstantExpr 0x2371a762258 <line:749:10> 'int'
|       | | `-DeclRefExpr 0x2371a762238 <col:10> 'int' EnumConstant 0x2371a764828 'SHUTDOWN' 'int'
|       | `-ReturnStmt 0x2371a7622d0 <line:750:9, col:16>
|       |   `-ImplicitCastExpr 0x2371a7622b8 <col:16> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|       |     `-DeclRefExpr 0x2371a762298 <col:16> 'int' EnumConstant 0x2371a764880 'CONNECTION_DONE' 'int'
|       |-DefaultStmt 0x2371a7624a0 <line:751:5, .//openssl//file_jk/after\test/testutil.h:111:15>
|       | `-DoStmt 0x2371a762480 <line:106:5, line:111:15>
|       |   |-CompoundStmt 0x2371a762440 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x2371a762428 <line:107:9, line:110:9>
|       |   |   |-UnaryOperator 0x2371a762328 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|       |   |   | `-ParenExpr 0x2371a762308 <col:14, col:24> 'int'
|       |   |   |   `-IntegerLiteral 0x2371a7622e0 <.//openssl//file_jk/after\test\handshake_helper.c:752:20> 'int' 0
|       |   |   `-CompoundStmt 0x2371a762410 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|       |   |     `-CallExpr 0x2371a7623e8 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x2371a7623d0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x2371a762360 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x2371a7623b8 <col:28, <scratch space>:21:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x2371a7623a0 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x2371a762380 <col:1> 'char [2]' lvalue "0"
|       |   `-IntegerLiteral 0x2371a762458 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|       `-NullStmt 0x2371a7624c0 <.//openssl//file_jk/after\test\handshake_helper.c:752:22>
|-FunctionDecl 0x2371a7627a8 <line:756:1, line:781:1> line:756:13 used do_connect_step 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' static
| |-ParmVarDecl 0x2371a762548 <col:29, col:49> col:49 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x2371a7625c0 <col:59, col:65> col:65 used peer 'PEER *'
| |-ParmVarDecl 0x2371a762638 <line:757:29, col:45> col:45 used phase 'connect_phase_t':'connect_phase_t'
| `-CompoundStmt 0x2371a7fc070 <line:758:1, line:781:1>
|   `-SwitchStmt 0x2371a7628c8 <line:759:5, line:780:5>
|     |-ImplicitCastExpr 0x2371a7628b0 <line:759:13> 'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x2371a762898 <col:13> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|     |   `-DeclRefExpr 0x2371a762878 <col:13> 'connect_phase_t':'connect_phase_t' lvalue ParmVar 0x2371a762638 'phase' 'connect_phase_t':'connect_phase_t'
|     `-CompoundStmt 0x2371a7fbff0 <col:20, line:780:5>
|       |-CaseStmt 0x2371a762920 <line:760:5, line:761:31>
|       | |-ConstantExpr 0x2371a762908 <line:760:10> 'int'
|       | | `-DeclRefExpr 0x2371a7628e8 <col:10> 'int' EnumConstant 0x2371a764670 'HANDSHAKE' 'int'
|       | `-CallExpr 0x2371a7629a0 <line:761:9, col:31> 'void'
|       |   |-ImplicitCastExpr 0x2371a762988 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x2371a762948 <col:9> 'void (PEER *)' Function 0x2371a75f7f8 'do_handshake_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x2371a7629c8 <col:27> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x2371a762968 <col:27> 'PEER *' lvalue ParmVar 0x2371a7625c0 'peer' 'PEER *'
|       |-BreakStmt 0x2371a7629e0 <line:762:9>
|       |-CaseStmt 0x2371a762a20 <line:763:5, line:764:30>
|       | |-ConstantExpr 0x2371a762a08 <line:763:10> 'int'
|       | | `-DeclRefExpr 0x2371a7629e8 <col:10> 'int' EnumConstant 0x2371a7646c8 'RENEG_APPLICATION_DATA' 'int'
|       | `-CallExpr 0x2371a762aa0 <line:764:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x2371a762a88 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x2371a762a48 <col:9> 'void (PEER *)' Function 0x2371a7603e8 'do_app_data_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x2371a762ac8 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x2371a762a68 <col:26> 'PEER *' lvalue ParmVar 0x2371a7625c0 'peer' 'PEER *'
|       |-BreakStmt 0x2371a762ae0 <line:765:9>
|       |-CaseStmt 0x2371a762b20 <line:766:5, line:767:43>
|       | |-ConstantExpr 0x2371a762b08 <line:766:10> 'int'
|       | | `-DeclRefExpr 0x2371a762ae8 <col:10> 'int' EnumConstant 0x2371a764720 'RENEG_SETUP' 'int'
|       | `-CallExpr 0x2371a762c20 <line:767:9, col:43> 'void'
|       |   |-ImplicitCastExpr 0x2371a762c08 <col:9> 'void (*)(const SSL_TEST_CTX *, PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x2371a762b48 <col:9> 'void (const SSL_TEST_CTX *, PEER *)' Function 0x2371a765368 'do_reneg_setup_step' 'void (const SSL_TEST_CTX *, PEER *)'
|       |   |-ImplicitCastExpr 0x2371a762c50 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2371a762b68 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a762548 'test_ctx' 'const SSL_TEST_CTX *'
|       |   `-ImplicitCastExpr 0x2371a762c68 <col:39> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x2371a762b88 <col:39> 'PEER *' lvalue ParmVar 0x2371a7625c0 'peer' 'PEER *'
|       |-BreakStmt 0x2371a762c80 <line:768:9>
|       |-CaseStmt 0x2371a762cc0 <line:769:5, line:770:31>
|       | |-ConstantExpr 0x2371a762ca8 <line:769:10> 'int'
|       | | `-DeclRefExpr 0x2371a762c88 <col:10> 'int' EnumConstant 0x2371a764778 'RENEG_HANDSHAKE' 'int'
|       | `-CallExpr 0x2371a762d40 <line:770:9, col:31> 'void'
|       |   |-ImplicitCastExpr 0x2371a762d28 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x2371a762ce8 <col:9> 'void (PEER *)' Function 0x2371a75f7f8 'do_handshake_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x2371a762d68 <col:27> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x2371a762d08 <col:27> 'PEER *' lvalue ParmVar 0x2371a7625c0 'peer' 'PEER *'
|       |-BreakStmt 0x2371a762d80 <line:771:9>
|       |-CaseStmt 0x2371a762dc0 <line:772:5, line:773:30>
|       | |-ConstantExpr 0x2371a762da8 <line:772:10> 'int'
|       | | `-DeclRefExpr 0x2371a762d88 <col:10> 'int' EnumConstant 0x2371a7647d0 'APPLICATION_DATA' 'int'
|       | `-CallExpr 0x2371a762e40 <line:773:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x2371a762e28 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x2371a762de8 <col:9> 'void (PEER *)' Function 0x2371a7603e8 'do_app_data_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x2371a762e68 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x2371a762e08 <col:26> 'PEER *' lvalue ParmVar 0x2371a7625c0 'peer' 'PEER *'
|       |-BreakStmt 0x2371a762e80 <line:774:9>
|       |-CaseStmt 0x2371a762ec0 <line:775:5, line:776:30>
|       | |-ConstantExpr 0x2371a762ea8 <line:775:10> 'int'
|       | | `-DeclRefExpr 0x2371a762e88 <col:10> 'int' EnumConstant 0x2371a764828 'SHUTDOWN' 'int'
|       | `-CallExpr 0x2371a762f40 <line:776:9, col:30> 'void'
|       |   |-ImplicitCastExpr 0x2371a762f28 <col:9> 'void (*)(PEER *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x2371a762ee8 <col:9> 'void (PEER *)' Function 0x2371a763b80 'do_shutdown_step' 'void (PEER *)'
|       |   `-ImplicitCastExpr 0x2371a762f68 <col:26> 'PEER *' <LValueToRValue>
|       |     `-DeclRefExpr 0x2371a762f08 <col:26> 'PEER *' lvalue ParmVar 0x2371a7625c0 'peer' 'PEER *'
|       |-BreakStmt 0x2371a762f80 <line:777:9>
|       |-DefaultStmt 0x2371a7fbfc8 <line:778:5, .//openssl//file_jk/after\test/testutil.h:111:15>
|       | `-DoStmt 0x2371a7fbfa8 <line:106:5, line:111:15>
|       |   |-CompoundStmt 0x2371a7630e8 <line:106:8, line:111:5>
|       |   | `-IfStmt 0x2371a7630d0 <line:107:9, line:110:9>
|       |   |   |-UnaryOperator 0x2371a762fd0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|       |   |   | `-ParenExpr 0x2371a762fb0 <col:14, col:24> 'int'
|       |   |   |   `-IntegerLiteral 0x2371a762f88 <.//openssl//file_jk/after\test\handshake_helper.c:779:20> 'int' 0
|       |   |   `-CompoundStmt 0x2371a7630b8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|       |   |     `-CallExpr 0x2371a763090 <line:109:13, col:39> 'int'
|       |   |       |-ImplicitCastExpr 0x2371a763078 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   |       | `-DeclRefExpr 0x2371a763008 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|       |   |       `-UnaryOperator 0x2371a763060 <col:28, <scratch space>:22:1> 'int' prefix '!' cannot overflow
|       |   |         `-ImplicitCastExpr 0x2371a763048 <col:1> 'char *' <ArrayToPointerDecay>
|       |   |           `-StringLiteral 0x2371a763028 <col:1> 'char [2]' lvalue "0"
|       |   `-IntegerLiteral 0x2371a7fbf80 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|       `-NullStmt 0x2371a7fbfe8 <.//openssl//file_jk/after\test\handshake_helper.c:779:22>
|-EnumDecl 0x2371a7fc088 <line:783:9, line:794:1> line:783:9
| |-EnumConstantDecl 0x2371a7fc160 <line:785:5> col:5 referenced HANDSHAKE_SUCCESS 'int'
| |-EnumConstantDecl 0x2371a7fc1b8 <line:787:5> col:5 referenced CLIENT_ERROR 'int'
| |-EnumConstantDecl 0x2371a7fc210 <line:789:5> col:5 referenced SERVER_ERROR 'int'
| |-EnumConstantDecl 0x2371a7fc268 <line:791:5> col:5 referenced INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x2371a7fc2c0 <line:793:5> col:5 referenced HANDSHAKE_RETRY 'int'
|-TypedefDecl 0x2371a7fc378 <line:783:1, line:794:3> col:3 referenced handshake_status_t 'enum handshake_status_t':'handshake_status_t'
| `-ElaboratedType 0x2371a7fc320 'enum handshake_status_t' sugar
|   `-EnumType 0x2371a7fc140 'handshake_status_t'
|     `-Enum 0x2371a7fc088 ''
|-FunctionDecl 0x2371a7fc688 <line:802:1, line:848:1> line:802:27 used handshake_status 'handshake_status_t (peer_status_t, peer_status_t, int)' static
| |-ParmVarDecl 0x2371a7fc420 <col:44, col:58> col:58 used last_status 'peer_status_t':'peer_status_t'
| |-ParmVarDecl 0x2371a7fc498 <line:803:44, col:58> col:58 used previous_status 'peer_status_t':'peer_status_t'
| |-ParmVarDecl 0x2371a7fc518 <line:804:44, col:48> col:48 used client_spoke_last 'int'
| `-CompoundStmt 0x2371a7f7fb8 <line:805:1, line:848:1>
|   |-SwitchStmt 0x2371a7fc7a8 <line:806:5, line:845:5>
|   | |-ImplicitCastExpr 0x2371a7fc790 <line:806:13> 'int' <IntegralCast>
|   | | `-ImplicitCastExpr 0x2371a7fc778 <col:13> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a7fc758 <col:13> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x2371a7fc420 'last_status' 'peer_status_t':'peer_status_t'
|   | `-CompoundStmt 0x2371a7f7f40 <col:26, line:845:5>
|   |   |-CaseStmt 0x2371a7fc800 <line:807:5, line:821:9>
|   |   | |-ConstantExpr 0x2371a7fc7e8 <line:807:10> 'int'
|   |   | | `-DeclRefExpr 0x2371a7fc7c8 <col:10> 'int' EnumConstant 0x2371a7587f0 'PEER_SUCCESS' 'int'
|   |   | `-SwitchStmt 0x2371a7fc878 <line:808:9, line:821:9>
|   |   |   |-ImplicitCastExpr 0x2371a7fc860 <line:808:17> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x2371a7fc848 <col:17> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2371a7fc828 <col:17> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x2371a7fc498 'previous_status' 'peer_status_t':'peer_status_t'
|   |   |   `-CompoundStmt 0x2371a7fca90 <col:34, line:821:9>
|   |   |     |-CaseStmt 0x2371a7fc8d0 <line:809:9, line:811:20>
|   |   |     | |-ConstantExpr 0x2371a7fc8b8 <line:809:14> 'int'
|   |   |     | | `-DeclRefExpr 0x2371a7fc898 <col:14> 'int' EnumConstant 0x2371a7587f0 'PEER_SUCCESS' 'int'
|   |   |     | `-ReturnStmt 0x2371a7fc930 <line:811:13, col:20>
|   |   |     |   `-ImplicitCastExpr 0x2371a7fc918 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     |     `-DeclRefExpr 0x2371a7fc8f8 <col:20> 'int' EnumConstant 0x2371a7fc160 'HANDSHAKE_SUCCESS' 'int'
|   |   |     |-CaseStmt 0x2371a7fc978 <line:812:9, line:814:20>
|   |   |     | |-ConstantExpr 0x2371a7fc960 <line:812:14> 'int'
|   |   |     | | `-DeclRefExpr 0x2371a7fc940 <col:14> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   |   |     | `-ReturnStmt 0x2371a7fc9d8 <line:814:13, col:20>
|   |   |     |   `-ImplicitCastExpr 0x2371a7fc9c0 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     |     `-DeclRefExpr 0x2371a7fc9a0 <col:20> 'int' EnumConstant 0x2371a7fc2c0 'HANDSHAKE_RETRY' 'int'
|   |   |     `-CaseStmt 0x2371a7fca20 <line:815:9, line:820:20>
|   |   |       |-ConstantExpr 0x2371a7fca08 <line:815:14> 'int'
|   |   |       | `-DeclRefExpr 0x2371a7fc9e8 <col:14> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   |   |       `-ReturnStmt 0x2371a7fca80 <line:820:13, col:20>
|   |   |         `-ImplicitCastExpr 0x2371a7fca68 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |           `-DeclRefExpr 0x2371a7fca48 <col:20> 'int' EnumConstant 0x2371a7fc268 'INTERNAL_ERROR' 'int'
|   |   |-BreakStmt 0x2371a7fcab8 <line:822:9>
|   |   |-CaseStmt 0x2371a7fcaf8 <line:824:5, line:825:16>
|   |   | |-ConstantExpr 0x2371a7fcae0 <line:824:10> 'int'
|   |   | | `-DeclRefExpr 0x2371a7fcac0 <col:10> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   |   | `-ReturnStmt 0x2371a7fcb58 <line:825:9, col:16>
|   |   |   `-ImplicitCastExpr 0x2371a7fcb40 <col:16> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |   |     `-DeclRefExpr 0x2371a7fcb20 <col:16> 'int' EnumConstant 0x2371a7fc2c0 'HANDSHAKE_RETRY' 'int'
|   |   `-CaseStmt 0x2371a7fcba0 <line:827:5, line:844:9>
|   |     |-ConstantExpr 0x2371a7fcb88 <line:827:10> 'int'
|   |     | `-DeclRefExpr 0x2371a7fcb68 <col:10> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   |     `-SwitchStmt 0x2371a7fcc18 <line:828:9, line:844:9>
|   |       |-ImplicitCastExpr 0x2371a7fcc00 <line:828:17> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x2371a7fcbe8 <col:17> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2371a7fcbc8 <col:17> 'peer_status_t':'peer_status_t' lvalue ParmVar 0x2371a7fc498 'previous_status' 'peer_status_t':'peer_status_t'
|   |       `-CompoundStmt 0x2371a7fcf40 <col:34, line:844:9>
|   |         |-CaseStmt 0x2371a7fcc70 <line:829:9, line:837:55>
|   |         | |-ConstantExpr 0x2371a7fcc58 <line:829:14> 'int'
|   |         | | `-DeclRefExpr 0x2371a7fcc38 <col:14> 'int' EnumConstant 0x2371a7587f0 'PEER_SUCCESS' 'int'
|   |         | `-ReturnStmt 0x2371a7fcd58 <line:837:13, col:55>
|   |         |   `-ImplicitCastExpr 0x2371a7fcd40 <col:20, col:55> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |         |     `-ConditionalOperator 0x2371a7fcd10 <col:20, col:55> 'int'
|   |         |       |-ImplicitCastExpr 0x2371a7fccf8 <col:20> 'int' <LValueToRValue>
|   |         |       | `-DeclRefExpr 0x2371a7fcc98 <col:20> 'int' lvalue ParmVar 0x2371a7fc518 'client_spoke_last' 'int'
|   |         |       |-DeclRefExpr 0x2371a7fccb8 <col:40> 'int' EnumConstant 0x2371a7fc1b8 'CLIENT_ERROR' 'int'
|   |         |       `-DeclRefExpr 0x2371a7fccd8 <col:55> 'int' EnumConstant 0x2371a7fc210 'SERVER_ERROR' 'int'
|   |         |-CaseStmt 0x2371a7fcda0 <line:838:9, line:840:20>
|   |         | |-ConstantExpr 0x2371a7fcd88 <line:838:14> 'int'
|   |         | | `-DeclRefExpr 0x2371a7fcd68 <col:14> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   |         | `-ReturnStmt 0x2371a7fce00 <line:840:13, col:20>
|   |         |   `-ImplicitCastExpr 0x2371a7fcde8 <col:20> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |         |     `-DeclRefExpr 0x2371a7fcdc8 <col:20> 'int' EnumConstant 0x2371a7fc2c0 'HANDSHAKE_RETRY' 'int'
|   |         `-CaseStmt 0x2371a7fce48 <line:841:9, line:843:55>
|   |           |-ConstantExpr 0x2371a7fce30 <line:841:14> 'int'
|   |           | `-DeclRefExpr 0x2371a7fce10 <col:14> 'int' EnumConstant 0x2371a7588a0 'PEER_ERROR' 'int'
|   |           `-ReturnStmt 0x2371a7fcf30 <line:843:13, col:55>
|   |             `-ImplicitCastExpr 0x2371a7fcf18 <col:20, col:55> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |               `-ConditionalOperator 0x2371a7fcee8 <col:20, col:55> 'int'
|   |                 |-ImplicitCastExpr 0x2371a7fced0 <col:20> 'int' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x2371a7fce70 <col:20> 'int' lvalue ParmVar 0x2371a7fc518 'client_spoke_last' 'int'
|   |                 |-DeclRefExpr 0x2371a7fce90 <col:40> 'int' EnumConstant 0x2371a7fc210 'SERVER_ERROR' 'int'
|   |                 `-DeclRefExpr 0x2371a7fceb0 <col:55> 'int' EnumConstant 0x2371a7fc1b8 'CLIENT_ERROR' 'int'
|   `-ReturnStmt 0x2371a7f7fa8 <line:847:5, col:12>
|     `-ImplicitCastExpr 0x2371a7f7f90 <col:12> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|       `-DeclRefExpr 0x2371a7f7f70 <col:12> 'int' EnumConstant 0x2371a7fc268 'INTERNAL_ERROR' 'int'
|-FunctionDecl 0x2371a7f81b0 <line:851:1, line:863:1> line:851:14 used dup_str 'char *(const unsigned char *, size_t)' static
| |-ParmVarDecl 0x2371a7f7ff0 <col:22, col:43> col:43 used in 'const unsigned char *'
| |-ParmVarDecl 0x2371a7f8068 <col:47, col:54> col:54 used len 'size_t':'unsigned long long'
| `-CompoundStmt 0x2371a7f8ec8 <line:852:1, line:863:1>
|   |-DeclStmt 0x2371a7f82f8 <line:853:5, col:14>
|   | `-VarDecl 0x2371a7f8290 <col:5, col:11> col:11 used ret 'char *'
|   |-IfStmt 0x2371a7f8458 <line:855:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x2371a7f8388 <.//openssl//file_jk/after\test\handshake_helper.c:855:8, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x2371a7f8358 <col:8> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2371a7f8310 <col:8> 'size_t':'unsigned long long' lvalue ParmVar 0x2371a7f8068 'len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2371a7f8370 <col:15> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2371a7f8330 <col:15> 'int' 0
|   | `-ReturnStmt 0x2371a7f8448 <line:856:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x2371a7f8430 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x2371a7f8410 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2371a7f83e8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2371a7f83a8 <col:26> 'int' 0
|   |-DoStmt 0x2371a7f8900 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a7f88c0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a7f88a8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a7f8748 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a7f8728 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a7f8708 <.//openssl//file_jk/after\test\handshake_helper.c:859:16, col:59> 'int' '=='
|   | |   |     |-ImplicitCastExpr 0x2371a7f86f0 <col:16, col:54> 'unsigned long long' <IntegralCast>
|   | |   |     | `-CallExpr 0x2371a7f8670 <col:16, col:54> 'int'
|   | |   |     |   |-ImplicitCastExpr 0x2371a7f8658 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |   |     |   | `-DeclRefExpr 0x2371a7f8560 <col:16> 'int ()' Function 0x2371a7f8498 'OPENSSL_strnlen' 'int ()'
|   | |   |     |   |-CStyleCastExpr 0x2371a7f8610 <col:32, col:48> 'const char *' <BitCast>
|   | |   |     |   | `-ImplicitCastExpr 0x2371a7f85f8 <col:45, col:48> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   | |   |     |   |   `-ParenExpr 0x2371a7f85d8 <col:45, col:48> 'const unsigned char *' lvalue
|   | |   |     |   |     `-DeclRefExpr 0x2371a7f8580 <col:46> 'const unsigned char *' lvalue ParmVar 0x2371a7f7ff0 'in' 'const unsigned char *'
|   | |   |     |   `-ImplicitCastExpr 0x2371a7f86a0 <col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x2371a7f8638 <col:51> 'size_t':'unsigned long long' lvalue ParmVar 0x2371a7f8068 'len' 'size_t':'unsigned long long'
|   | |   |     `-ImplicitCastExpr 0x2371a7f86d8 <col:59> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x2371a7f86b8 <col:59> 'size_t':'unsigned long long' lvalue ParmVar 0x2371a7f8068 'len' 'size_t':'unsigned long long'
|   | |   `-CompoundStmt 0x2371a7f8890 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a7f8868 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a7f8850 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a7f8780 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a7f8838 <col:28, <scratch space>:23:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a7f8820 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a7f87d8 <col:1> 'char [47]' lvalue "OPENSSL_strnlen((const char*)(in), len) == len"
|   | `-IntegerLiteral 0x2371a7f88d8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a7f8920 <.//openssl//file_jk/after\test\handshake_helper.c:859:63>
|   |-BinaryOperator 0x2371a7f8bc0 <line:860:5, col:49> 'char *' '='
|   | |-DeclRefExpr 0x2371a7f8928 <col:5> 'char *' lvalue Var 0x2371a7f8290 'ret' 'char *'
|   | `-ImplicitCastExpr 0x2371a7f8ba8 <col:11, col:49> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x2371a7f8b60 <col:11, col:49> 'int'
|   |     |-ImplicitCastExpr 0x2371a7f8b48 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2371a7f8a50 <col:11> 'int ()' Function 0x2371a7f8988 'OPENSSL_strndup' 'int ()'
|   |     |-CStyleCastExpr 0x2371a7f8b00 <col:27, col:43> 'const char *' <BitCast>
|   |     | `-ImplicitCastExpr 0x2371a7f8ae8 <col:40, col:43> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |     |   `-ParenExpr 0x2371a7f8ac8 <col:40, col:43> 'const unsigned char *' lvalue
|   |     |     `-DeclRefExpr 0x2371a7f8a70 <col:41> 'const unsigned char *' lvalue ParmVar 0x2371a7f7ff0 'in' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x2371a7f8b90 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a7f8b28 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x2371a7f8068 'len' 'size_t':'unsigned long long'
|   |-DoStmt 0x2371a7f8e58 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a7f8e18 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a7f8e00 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a7f8cf8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a7f8cd8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a7f8cb8 <.//openssl//file_jk/after\test\handshake_helper.c:861:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x2371a7f8c88 <.//openssl//file_jk/after\test\handshake_helper.c:861:16> 'char *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x2371a7f8be0 <col:16> 'char *' lvalue Var 0x2371a7f8290 'ret' 'char *'
|   | |   |     `-ImplicitCastExpr 0x2371a7f8ca0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x2371a7f8c68 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2371a7f8c40 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2371a7f8c00 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2371a7f8de8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a7f8dc0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a7f8da8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a7f8d30 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a7f8d90 <col:28, <scratch space>:24:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a7f8d78 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a7f8d50 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x2371a7f8e30 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a7f8e78 <.//openssl//file_jk/after\test\handshake_helper.c:861:28>
|   `-ReturnStmt 0x2371a7f8eb8 <line:862:5, col:12>
|     `-ImplicitCastExpr 0x2371a7f8ea0 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x2371a7f8e80 <col:12> 'char *' lvalue Var 0x2371a7f8290 'ret' 'char *'
|-FunctionDecl 0x2371a7f63c8 <line:878:1, line:1077:1> line:878:26 invalid do_handshake_internal 'HANDSHAKE_RESULT *(int *, int *, int *, const SSL_TEST_CTX *, const SSL_TEST_EXTRA_CONF *, int *, int **)' static
| |-ParmVarDecl 0x2371a7f5f20 <line:879:5, col:14> col:14 invalid server_ctx 'int *'
| |-ParmVarDecl 0x2371a7f5fa0 <col:26, col:35> col:35 invalid server2_ctx 'int *'
| |-ParmVarDecl 0x2371a7f6020 <col:48, col:57> col:57 invalid client_ctx 'int *'
| |-ParmVarDecl 0x2371a7f6098 <line:880:5, col:25> col:25 used test_ctx 'const SSL_TEST_CTX *'
| |-ParmVarDecl 0x2371a7f6110 <col:35, col:62> col:62 used extra 'const SSL_TEST_EXTRA_CONF *'
| |-ParmVarDecl 0x2371a7f6190 <line:881:5, col:18> col:18 invalid session_in 'int *'
| |-ParmVarDecl 0x2371a7f6248 <col:30, col:44> col:44 invalid session_out 'int **'
| `-CompoundStmt 0x2371a7fda20 <line:882:1, line:1077:1>
|   |-DeclStmt 0x2371a7f65c0 <line:883:5, col:24>
|   | |-VarDecl 0x2371a7f64c8 <col:5, col:10> col:10 used server 'PEER':'struct peer_st'
|   | `-VarDecl 0x2371a7f6540 <col:5, col:18> col:18 used client 'PEER':'struct peer_st'
|   |-DeclStmt 0x2371a7f66e0 <line:885:5, col:53>
|   | |-VarDecl 0x2371a7f65e8 <col:5, col:23> col:23 used server_ex_data 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | `-VarDecl 0x2371a7f6660 <col:5, col:39> col:39 used client_ex_data 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-DeclStmt 0x2371a7f6880 <line:886:5, col:64>
|   | |-VarDecl 0x2371a7f6708 <col:5, col:14> col:14 used client_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   | |-VarDecl 0x2371a7f6780 <col:5, col:31> col:31 used server_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   | `-VarDecl 0x2371a7f67f8 <col:5, col:48> col:48 used server2_ctx_data 'CTX_DATA':'struct ctx_data_st'
|   |-DeclStmt 0x2371a7f69c0 <line:887:5, col:51>
|   | `-VarDecl 0x2371a7f68a8 <col:5, col:50> col:23 used ret 'HANDSHAKE_RESULT *' cinit
|   |   `-CallExpr 0x2371a7f69a0 <col:29, col:50> 'HANDSHAKE_RESULT *'
|   |     `-ImplicitCastExpr 0x2371a7f6988 <col:29> 'HANDSHAKE_RESULT *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x2371a7f6910 <col:29> 'HANDSHAKE_RESULT *(void)' Function 0x2371a750588 'HANDSHAKE_RESULT_new' 'HANDSHAKE_RESULT *(void)'
|   |-DeclStmt 0x2371a7f6b40 <line:888:5, col:47>
|   | |-VarDecl 0x2371a7f69f0 <col:5, col:23> col:9 used client_turn 'int' cinit
|   | | `-IntegerLiteral 0x2371a7f6a58 <col:23> 'int' 1
|   | `-VarDecl 0x2371a7f6a98 <col:5, col:46> col:26 used client_turn_count 'int' cinit
|   |   `-IntegerLiteral 0x2371a7f6b00 <col:46> 'int' 0
|   |-DeclStmt 0x2371a7f6c08 <line:889:5, col:38>
|   | `-VarDecl 0x2371a7f6b68 <col:5, col:29> col:21 used phase 'connect_phase_t':'connect_phase_t' cinit
|   |   `-ImplicitCastExpr 0x2371a7f6bf0 <col:29> 'connect_phase_t':'connect_phase_t' <IntegralCast>
|   |     `-DeclRefExpr 0x2371a7f6bd0 <col:29> 'int' EnumConstant 0x2371a764670 'HANDSHAKE' 'int'
|   |-DeclStmt 0x2371a7f6cd0 <line:890:5, col:48>
|   | `-VarDecl 0x2371a7f6c30 <col:5, col:33> col:24 used status 'handshake_status_t':'handshake_status_t' cinit
|   |   `-ImplicitCastExpr 0x2371a7f6cb8 <col:33> 'handshake_status_t':'handshake_status_t' <IntegralCast>
|   |     `-DeclRefExpr 0x2371a7f6c98 <col:33> 'int' EnumConstant 0x2371a7fc2c0 'HANDSHAKE_RETRY' 'int'
|   |-DeclStmt 0x2371a7f6e08 <line:891:5, col:37>
|   | `-VarDecl 0x2371a7f6d00 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\test\handshake_helper.c:891:26 used tick 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2371a7f6df0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x2371a7f6dd0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2371a7f6da8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2371a7f6d68 <col:26> 'int' 0
|   |-DeclStmt 0x2371a7f6ed8 <.//openssl//file_jk/after\test\handshake_helper.c:892:5, col:24>
|   | `-VarDecl 0x2371a7f6e30 <col:5, col:23> col:12 used tick_len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x2371a7f6ec0 <col:23> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x2371a7f6e98 <col:23> 'int' 0
|   |-DeclStmt 0x2371a7f70b0 <line:894:5, col:38>
|   | `-VarDecl 0x2371a7f6fa8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\test\handshake_helper.c:894:26 used proto 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2371a7f7098 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x2371a7f7078 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2371a7f7050 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2371a7f7010 <col:26> 'int' 0
|   |-DeclStmt 0x2371a7f7188 <.//openssl//file_jk/after\test\handshake_helper.c:896:5, col:31>
|   | `-VarDecl 0x2371a7f70e0 <col:5, col:30> col:18 used proto_len 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x2371a7f7170 <col:30> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x2371a7f7148 <col:30> 'int' 0
|   |-CallExpr 0x2371a7f72e0 <line:899:5, col:56> 'void *'
|   | |-ImplicitCastExpr 0x2371a7f72c8 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7f71a0 <col:5> 'void *(void *, int, unsigned long long)' Function 0x2371a704a98 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x2371a7f7318 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x2371a7f71f8 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x2371a7f71c0 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x2371a7f6780 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x2371a7f7210 <col:30> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x2371a7f7278 <col:33, col:55> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x2371a7f7258 <col:39, col:55> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x2371a7f7238 <col:40> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x2371a7f6780 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x2371a7f74a8 <line:900:5, col:58> 'void *'
|   | |-ImplicitCastExpr 0x2371a7f7490 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7f7398 <col:5> 'void *(void *, int, unsigned long long)' Function 0x2371a704a98 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x2371a7f74e0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x2371a7f73f0 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x2371a7f73b8 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x2371a7f67f8 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x2371a7f7408 <col:31> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x2371a7f7470 <col:34, col:57> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x2371a7f7450 <col:40, col:57> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x2371a7f7430 <col:41> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x2371a7f67f8 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x2371a7f7608 <line:901:5, col:56> 'void *'
|   | |-ImplicitCastExpr 0x2371a7f75f0 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7f74f8 <col:5> 'void *(void *, int, unsigned long long)' Function 0x2371a704a98 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x2371a7f7640 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x2371a7f7550 <col:12, col:13> 'CTX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x2371a7f7518 <col:13> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x2371a7f6708 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   | |-IntegerLiteral 0x2371a7f7568 <col:30> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x2371a7f75d0 <col:33, col:55> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x2371a7f75b0 <col:39, col:55> 'CTX_DATA':'struct ctx_data_st' lvalue
|   |     `-DeclRefExpr 0x2371a7f7590 <col:40> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x2371a7f6708 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x2371a7f7768 <line:902:5, col:38> 'void *'
|   | |-ImplicitCastExpr 0x2371a7f7750 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7f7658 <col:5> 'void *(void *, int, unsigned long long)' Function 0x2371a704a98 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x2371a7f77a0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x2371a7f76b0 <col:12, col:13> 'PEER *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x2371a7f7678 <col:13> 'PEER':'struct peer_st' lvalue Var 0x2371a7f64c8 'server' 'PEER':'struct peer_st'
|   | |-IntegerLiteral 0x2371a7f76c8 <col:21> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x2371a7f7730 <col:24, col:37> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x2371a7f7710 <col:30, col:37> 'PEER':'struct peer_st' lvalue
|   |     `-DeclRefExpr 0x2371a7f76f0 <col:31> 'PEER':'struct peer_st' lvalue Var 0x2371a7f64c8 'server' 'PEER':'struct peer_st' non_odr_use_unevaluated
|   |-CallExpr 0x2371a7f78c8 <line:903:5, col:38> 'void *'
|   | |-ImplicitCastExpr 0x2371a7f78b0 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7f77b8 <col:5> 'void *(void *, int, unsigned long long)' Function 0x2371a704a98 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x2371a7f7900 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x2371a7f7810 <col:12, col:13> 'PEER *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x2371a7f77d8 <col:13> 'PEER':'struct peer_st' lvalue Var 0x2371a7f6540 'client' 'PEER':'struct peer_st'
|   | |-IntegerLiteral 0x2371a7f7828 <col:21> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x2371a7f7890 <col:24, col:37> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x2371a7f7870 <col:30, col:37> 'PEER':'struct peer_st' lvalue
|   |     `-DeclRefExpr 0x2371a7f7850 <col:31> 'PEER':'struct peer_st' lvalue Var 0x2371a7f6540 'client' 'PEER':'struct peer_st' non_odr_use_unevaluated
|   |-BinaryOperator 0x2371a7f7be0 <line:912:5, col:62> 'int' '='
|   | |-MemberExpr 0x2371a7f7ac0 <col:5, col:12> 'int' lvalue .bytes_to_write 0x2371a758cc8
|   | | `-DeclRefExpr 0x2371a7f7aa0 <col:5> 'PEER':'struct peer_st' lvalue Var 0x2371a7f64c8 'server' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x2371a7f7bc0 <col:29, col:62> 'int' '='
|   |   |-MemberExpr 0x2371a7f7b10 <col:29, col:36> 'int' lvalue .bytes_to_read 0x2371a758d38
|   |   | `-DeclRefExpr 0x2371a7f7af0 <col:29> 'PEER':'struct peer_st' lvalue Var 0x2371a7f6540 'client' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x2371a7f7ba8 <col:52, col:62> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x2371a7f7b78 <col:52, col:62> 'const int' lvalue ->app_data_size 0x2371a7a1300
|   |       `-ImplicitCastExpr 0x2371a7f7b60 <col:52> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2371a7f7b40 <col:52> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7f6098 'test_ctx' 'const SSL_TEST_CTX *'
|   |-BinaryOperator 0x2371a7f7d40 <line:913:5, col:62> 'int' '='
|   | |-MemberExpr 0x2371a7f7c20 <col:5, col:12> 'int' lvalue .bytes_to_write 0x2371a758cc8
|   | | `-DeclRefExpr 0x2371a7f7c00 <col:5> 'PEER':'struct peer_st' lvalue Var 0x2371a7f6540 'client' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x2371a7f7d20 <col:29, col:62> 'int' '='
|   |   |-MemberExpr 0x2371a7f7c70 <col:29, col:36> 'int' lvalue .bytes_to_read 0x2371a758d38
|   |   | `-DeclRefExpr 0x2371a7f7c50 <col:29> 'PEER':'struct peer_st' lvalue Var 0x2371a7f64c8 'server' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x2371a7f7d08 <col:52, col:62> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x2371a7f7cd8 <col:52, col:62> 'const int' lvalue ->app_data_size 0x2371a7a1300
|   |       `-ImplicitCastExpr 0x2371a7f7cc0 <col:52> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2371a7f7ca0 <col:52> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7f6098 'test_ctx' 'const SSL_TEST_CTX *'
|   |-IfStmt 0x2371a7f5480 <line:916:5, line:920:5>
|   | |-OpaqueValueExpr 0x2371a7f5468 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2371a7f5438 <line:916:29, line:920:5>
|   |   |-DoStmt 0x2371a7f5108 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x2371a7f50c8 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x2371a7f50b0 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x2371a7f5098 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x2371a7f5080 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x2371a7f5058 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x2371a7f5040 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x2371a7f4f68 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x2371a7f5028 <col:28, <scratch space>:25:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x2371a7f5010 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x2371a7f4fc8 <col:1> 'char [44]' lvalue "SSL_CTX_add_session(server_ctx, session_in)"
|   |   | `-IntegerLiteral 0x2371a7f50e0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   |-NullStmt 0x2371a7f5128 <.//openssl//file_jk/after\test\handshake_helper.c:918:64>
|   |   |-DoStmt 0x2371a7f5410 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   |   | |-CompoundStmt 0x2371a7f53d0 <line:106:8, line:111:5>
|   |   | | `-IfStmt 0x2371a7f53b8 <line:107:9, line:110:9>
|   |   | |   |-OpaqueValueExpr 0x2371a7f53a0 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x2371a7f5388 <line:107:27, line:110:9>
|   |   | |     `-CallExpr 0x2371a7f5360 <line:109:13, col:39> 'int'
|   |   | |       |-ImplicitCastExpr 0x2371a7f5348 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   | |       | `-DeclRefExpr 0x2371a7f5280 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   |   | |       `-UnaryOperator 0x2371a7f5330 <col:28, <scratch space>:26:1> 'int' prefix '!' cannot overflow
|   |   | |         `-ImplicitCastExpr 0x2371a7f5318 <col:1> 'char *' <ArrayToPointerDecay>
|   |   | |           `-StringLiteral 0x2371a7f52d8 <col:1> 'char [40]' lvalue "SSL_set_session(client.ssl, session_in)"
|   |   | `-IntegerLiteral 0x2371a7f53e8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |   `-NullStmt 0x2371a7f5430 <.//openssl//file_jk/after\test\handshake_helper.c:919:60>
|   |-CallExpr 0x2371a7f55a8 <line:922:5, col:54> 'void *'
|   | |-ImplicitCastExpr 0x2371a7f5590 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7f5498 <col:5> 'void *(void *, int, unsigned long long)' Function 0x2371a704a98 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x2371a7f55e0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x2371a7f54f0 <col:12, col:13> 'HANDSHAKE_EX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x2371a7f54b8 <col:13> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f65e8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | |-IntegerLiteral 0x2371a7f5508 <col:29> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x2371a7f5570 <col:32, col:53> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x2371a7f5550 <col:38, col:53> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue
|   |     `-DeclRefExpr 0x2371a7f5530 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f65e8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' non_odr_use_unevaluated
|   |-CallExpr 0x2371a7f5778 <line:923:5, col:54> 'void *'
|   | |-ImplicitCastExpr 0x2371a7f5760 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7f5668 <col:5> 'void *(void *, int, unsigned long long)' Function 0x2371a704a98 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x2371a7f57b0 <col:12, col:13> 'void *' <BitCast>
|   | | `-UnaryOperator 0x2371a7f56c0 <col:12, col:13> 'HANDSHAKE_EX_DATA *' prefix '&' cannot overflow
|   | |   `-DeclRefExpr 0x2371a7f5688 <col:13> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f6660 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   | |-IntegerLiteral 0x2371a7f56d8 <col:29> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x2371a7f5740 <col:32, col:53> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x2371a7f5720 <col:38, col:53> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue
|   |     `-DeclRefExpr 0x2371a7f5700 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f6660 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' non_odr_use_unevaluated
|   |-BinaryOperator 0x2371a7f5880 <line:925:5, col:19> 'ssl_test_result_t':'ssl_test_result_t' '='
|   | |-MemberExpr 0x2371a7f5818 <col:5, col:10> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x2371a7a0600
|   | | `-ImplicitCastExpr 0x2371a7f5800 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a7f57c8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x2371a7f5868 <col:19> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |   `-DeclRefExpr 0x2371a7f5848 <col:19> 'int' EnumConstant 0x2371a79cad8 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |-DoStmt 0x2371a7f5e20 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a7f5de0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a7f5dc8 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a7f5db0 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a7f5d98 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a7f5d70 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a7f5d58 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a7f5c98 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a7f5d40 <col:28, <scratch space>:27:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a7f5d28 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a7f5cf8 <col:1> 'char [25]' lvalue "client_to_server != NULL"
|   | `-IntegerLiteral 0x2371a7f5df8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a7f5e40 <.//openssl//file_jk/after\test\handshake_helper.c:930:41>
|   |-DoStmt 0x2371a7ff0d8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a7ff098 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a7ff080 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a7ff068 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a7ff050 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a7ff028 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a7ff010 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a7f5ef0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a7feff8 <col:28, <scratch space>:28:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a7fefe0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a7fefb0 <col:1> 'char [25]' lvalue "server_to_client != NULL"
|   | `-IntegerLiteral 0x2371a7ff0b0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a7ff0f8 <.//openssl//file_jk/after\test\handshake_helper.c:931:41>
|   |-DoStmt 0x2371a7ff8f8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a7ff8b8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a7ff8a0 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a7ff888 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a7ff870 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a7ff848 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a7ff830 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a7ff768 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a7ff818 <col:28, <scratch space>:29:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a7ff800 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a7ff7c8 <col:1> 'char [33]' lvalue "BIO_up_ref(server_to_client) > 0"
|   | `-IntegerLiteral 0x2371a7ff8d0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a7ff918 <.//openssl//file_jk/after\test\handshake_helper.c:942:49>
|   |-DoStmt 0x2371a7ffad8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a7ffa98 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a7ffa80 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a7ffa68 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a7ffa50 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a7ffa28 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a7ffa10 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a7ff988 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a7ff9f8 <col:28, <scratch space>:30:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a7ff9e0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a7ff9a8 <col:1> 'char [33]' lvalue "BIO_up_ref(client_to_server) > 0"
|   | `-IntegerLiteral 0x2371a7ffab0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a7ffaf8 <.//openssl//file_jk/after\test\handshake_helper.c:943:49>
|   |-BinaryOperator 0x2371a7ffec8 <line:946:5, col:70> 'int' '='
|   | |-DeclRefExpr 0x2371a7ffb40 <col:5> 'int' lvalue Var 0x2371a749348 'ex_data_idx' 'int'
|   | `-CallExpr 0x2371a7ffe68 <col:19, col:70> 'int'
|   |   |-ImplicitCastExpr 0x2371a7ffe50 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2371a7ffc50 <col:19> 'int ()' Function 0x2371a7ffb88 'SSL_get_ex_new_index' 'int ()'
|   |   |-IntegerLiteral 0x2371a7ffc70 <col:40> 'int' 0
|   |   |-ImplicitCastExpr 0x2371a7ffeb0 <col:43> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x2371a7ffc98 <col:43> 'char [8]' lvalue "ex data"
|   |   |-ParenExpr 0x2371a7ffd20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x2371a7ffcf8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x2371a7ffcb8 <col:26> 'int' 0
|   |   |-ParenExpr 0x2371a7ffda8 <col:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x2371a7ffd80 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x2371a7ffd40 <col:26> 'int' 0
|   |   `-ParenExpr 0x2371a7ffe30 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x2371a7ffe08 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x2371a7ffdc8 <col:26> 'int' 0
|   |-DoStmt 0x2371a800108 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a8000c8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a8000b0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2371a7fff88 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2371a7fff68 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2371a7fff48 <.//openssl//file_jk/after\test\handshake_helper.c:947:16, col:31> 'int' '>='
|   | |   |     |-ImplicitCastExpr 0x2371a7fff30 <col:16> 'int' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x2371a7ffee8 <col:16> 'int' lvalue Var 0x2371a749348 'ex_data_idx' 'int'
|   | |   |     `-IntegerLiteral 0x2371a7fff08 <col:31> 'int' 0
|   | |   `-CompoundStmt 0x2371a800098 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a800070 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a800058 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a7fffe0 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a800040 <col:28, <scratch space>:31:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a800028 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a800000 <col:1> 'char [17]' lvalue "ex_data_idx >= 0"
|   | `-IntegerLiteral 0x2371a8000e0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a800128 <.//openssl//file_jk/after\test\handshake_helper.c:947:33>
|   |-DoStmt 0x2371a800470 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a800430 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a800418 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a800400 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a8003e8 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a8003c0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a8003a8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a800300 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a800390 <col:28, <scratch space>:32:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a800378 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a800320 <col:1> 'char [63]' lvalue "SSL_set_ex_data(server.ssl, ex_data_idx, &server_ex_data) == 1"
|   | `-IntegerLiteral 0x2371a800448 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a800490 <.//openssl//file_jk/after\test\handshake_helper.c:949:79>
|   |-DoStmt 0x2371a8006e8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2371a8006a8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2371a800690 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2371a800678 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2371a800660 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2371a800638 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2371a800620 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2371a800578 <col:13> 'int ()' Function 0x2371a750b30 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2371a800608 <col:28, <scratch space>:33:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2371a8005f0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2371a800598 <col:1> 'char [63]' lvalue "SSL_set_ex_data(client.ssl, ex_data_idx, &client_ex_data) == 1"
|   | `-IntegerLiteral 0x2371a8006c0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2371a800708 <.//openssl//file_jk/after\test\handshake_helper.c:950:79>
|   |-BinaryOperator 0x2371a800978 <line:955:5, col:37> 'peer_status_t':'peer_status_t' '='
|   | |-MemberExpr 0x2371a8008a0 <col:5, col:12> 'peer_status_t':'peer_status_t' lvalue .status 0x2371a758dc0
|   | | `-DeclRefExpr 0x2371a800880 <col:5> 'PEER':'struct peer_st' lvalue Var 0x2371a7f6540 'client' 'PEER':'struct peer_st'
|   | `-BinaryOperator 0x2371a800958 <col:21, col:37> 'peer_status_t':'peer_status_t' '='
|   |   |-MemberExpr 0x2371a8008f0 <col:21, col:28> 'peer_status_t':'peer_status_t' lvalue .status 0x2371a758dc0
|   |   | `-DeclRefExpr 0x2371a8008d0 <col:21> 'PEER':'struct peer_st' lvalue Var 0x2371a7f64c8 'server' 'PEER':'struct peer_st'
|   |   `-ImplicitCastExpr 0x2371a800940 <col:37> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |     `-DeclRefExpr 0x2371a800920 <col:37> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   |-ForStmt 0x2371a7f9d78 <line:965:5, line:1018:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x2371a7f9d58 <line:965:13, line:1018:5>
|   |   |-IfStmt 0x2371a7f9038 <line:966:9, line:974:9> has_else
|   |   | |-ImplicitCastExpr 0x2371a8009d0 <line:966:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2371a800998 <col:13> 'int' lvalue Var 0x2371a7f69f0 'client_turn' 'int'
|   |   | |-CompoundStmt 0x2371a800d98 <col:26, line:970:9>
|   |   | | |-CallExpr 0x2371a800b10 <line:967:13, col:53> 'void'
|   |   | | | |-ImplicitCastExpr 0x2371a800af8 <col:13> 'void (*)(const SSL_TEST_CTX *, PEER *, connect_phase_t)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x2371a8009e8 <col:13> 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' Function 0x2371a7627a8 'do_connect_step' 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)'
|   |   | | | |-ImplicitCastExpr 0x2371a800b48 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x2371a800a08 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7f6098 'test_ctx' 'const SSL_TEST_CTX *'
|   |   | | | |-UnaryOperator 0x2371a800a48 <col:39, col:40> 'PEER *' prefix '&' cannot overflow
|   |   | | | | `-DeclRefExpr 0x2371a800a28 <col:40> 'PEER':'struct peer_st' lvalue Var 0x2371a7f6540 'client' 'PEER':'struct peer_st'
|   |   | | | `-ImplicitCastExpr 0x2371a800b60 <col:48> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x2371a800a60 <col:48> 'connect_phase_t':'connect_phase_t' lvalue Var 0x2371a7f6b68 'phase' 'connect_phase_t':'connect_phase_t'
|   |   | | `-BinaryOperator 0x2371a800d78 <line:968:13, line:969:63> 'handshake_status_t':'handshake_status_t' '='
|   |   | |   |-DeclRefExpr 0x2371a800b78 <line:968:13> 'handshake_status_t':'handshake_status_t' lvalue Var 0x2371a7f6c30 'status' 'handshake_status_t':'handshake_status_t'
|   |   | |   `-CallExpr 0x2371a800d10 <col:22, line:969:63> 'handshake_status_t':'handshake_status_t'
|   |   | |     |-ImplicitCastExpr 0x2371a800cf8 <line:968:22> 'handshake_status_t (*)(peer_status_t, peer_status_t, int)' <FunctionToPointerDecay>
|   |   | |     | `-DeclRefExpr 0x2371a800bb0 <col:22> 'handshake_status_t (peer_status_t, peer_status_t, int)' Function 0x2371a7fc688 'handshake_status' 'handshake_status_t (peer_status_t, peer_status_t, int)'
|   |   | |     |-ImplicitCastExpr 0x2371a800d48 <col:39, col:46> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   | |     | `-MemberExpr 0x2371a800bf0 <col:39, col:46> 'peer_status_t':'peer_status_t' lvalue .status 0x2371a758dc0
|   |   | |     |   `-DeclRefExpr 0x2371a800bd0 <col:39> 'PEER':'struct peer_st' lvalue Var 0x2371a7f6540 'client' 'PEER':'struct peer_st'
|   |   | |     |-ImplicitCastExpr 0x2371a800d60 <col:54, col:61> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   | |     | `-MemberExpr 0x2371a800c40 <col:54, col:61> 'peer_status_t':'peer_status_t' lvalue .status 0x2371a758dc0
|   |   | |     |   `-DeclRefExpr 0x2371a800c20 <col:54> 'PEER':'struct peer_st' lvalue Var 0x2371a7f64c8 'server' 'PEER':'struct peer_st'
|   |   | |     `-IntegerLiteral 0x2371a800c70 <line:969:39> 'int' 1
|   |   | `-CompoundStmt 0x2371a7f9018 <line:970:16, line:974:9>
|   |   |   |-CallExpr 0x2371a800e68 <line:971:13, col:53> 'void'
|   |   |   | |-ImplicitCastExpr 0x2371a800e50 <col:13> 'void (*)(const SSL_TEST_CTX *, PEER *, connect_phase_t)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x2371a800db8 <col:13> 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)' Function 0x2371a7627a8 'do_connect_step' 'void (const SSL_TEST_CTX *, PEER *, connect_phase_t)'
|   |   |   | |-ImplicitCastExpr 0x2371a800ea0 <col:29> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x2371a800dd8 <col:29> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7f6098 'test_ctx' 'const SSL_TEST_CTX *'
|   |   |   | |-UnaryOperator 0x2371a800e18 <col:39, col:40> 'PEER *' prefix '&' cannot overflow
|   |   |   | | `-DeclRefExpr 0x2371a800df8 <col:40> 'PEER':'struct peer_st' lvalue Var 0x2371a7f64c8 'server' 'PEER':'struct peer_st'
|   |   |   | `-ImplicitCastExpr 0x2371a800eb8 <col:48> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2371a800e30 <col:48> 'connect_phase_t':'connect_phase_t' lvalue Var 0x2371a7f6b68 'phase' 'connect_phase_t':'connect_phase_t'
|   |   |   `-BinaryOperator 0x2371a7f8ff8 <line:972:13, line:973:63> 'handshake_status_t':'handshake_status_t' '='
|   |   |     |-DeclRefExpr 0x2371a800ed0 <line:972:13> 'handshake_status_t':'handshake_status_t' lvalue Var 0x2371a7f6c30 'status' 'handshake_status_t':'handshake_status_t'
|   |   |     `-CallExpr 0x2371a7f8f90 <col:22, line:973:63> 'handshake_status_t':'handshake_status_t'
|   |   |       |-ImplicitCastExpr 0x2371a7f8f78 <line:972:22> 'handshake_status_t (*)(peer_status_t, peer_status_t, int)' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x2371a800ef0 <col:22> 'handshake_status_t (peer_status_t, peer_status_t, int)' Function 0x2371a7fc688 'handshake_status' 'handshake_status_t (peer_status_t, peer_status_t, int)'
|   |   |       |-ImplicitCastExpr 0x2371a7f8fc8 <col:39, col:46> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |       | `-MemberExpr 0x2371a800f30 <col:39, col:46> 'peer_status_t':'peer_status_t' lvalue .status 0x2371a758dc0
|   |   |       |   `-DeclRefExpr 0x2371a800f10 <col:39> 'PEER':'struct peer_st' lvalue Var 0x2371a7f64c8 'server' 'PEER':'struct peer_st'
|   |   |       |-ImplicitCastExpr 0x2371a7f8fe0 <col:54, col:61> 'peer_status_t':'peer_status_t' <LValueToRValue>
|   |   |       | `-MemberExpr 0x2371a800f80 <col:54, col:61> 'peer_status_t':'peer_status_t' lvalue .status 0x2371a758dc0
|   |   |       |   `-DeclRefExpr 0x2371a800f60 <col:54> 'PEER':'struct peer_st' lvalue Var 0x2371a7f6540 'client' 'PEER':'struct peer_st'
|   |   |       `-IntegerLiteral 0x2371a7f8f50 <line:973:39> 'int' 0
|   |   `-SwitchStmt 0x2371a7f90b0 <line:976:9, line:1017:9>
|   |     |-ImplicitCastExpr 0x2371a7f9098 <line:976:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x2371a7f9080 <col:17> 'handshake_status_t':'handshake_status_t' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2371a7f9060 <col:17> 'handshake_status_t':'handshake_status_t' lvalue Var 0x2371a7f6c30 'status' 'handshake_status_t':'handshake_status_t'
|   |     `-CompoundStmt 0x2371a7f9ce8 <col:25, line:1017:9>
|   |       |-CaseStmt 0x2371a7f9108 <line:977:9, line:978:33>
|   |       | |-ConstantExpr 0x2371a7f90f0 <line:977:14> 'int'
|   |       | | `-DeclRefExpr 0x2371a7f90d0 <col:14> 'int' EnumConstant 0x2371a7fc160 'HANDSHAKE_SUCCESS' 'int'
|   |       | `-BinaryOperator 0x2371a7f9190 <line:978:13, col:33> 'int' '='
|   |       |   |-DeclRefExpr 0x2371a7f9130 <col:13> 'int' lvalue Var 0x2371a7f6a98 'client_turn_count' 'int'
|   |       |   `-IntegerLiteral 0x2371a7f9168 <col:33> 'int' 0
|   |       |-BinaryOperator 0x2371a7f9300 <line:979:13, col:47> 'connect_phase_t':'connect_phase_t' '='
|   |       | |-DeclRefExpr 0x2371a7f91b0 <col:13> 'connect_phase_t':'connect_phase_t' lvalue Var 0x2371a7f6b68 'phase' 'connect_phase_t':'connect_phase_t'
|   |       | `-CallExpr 0x2371a7f92a0 <col:21, col:47> 'connect_phase_t':'connect_phase_t'
|   |       |   |-ImplicitCastExpr 0x2371a7f9288 <col:21> 'connect_phase_t (*)(const SSL_TEST_CTX *, connect_phase_t)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x2371a7f91d0 <col:21> 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)' Function 0x2371a764b98 'next_phase' 'connect_phase_t (const SSL_TEST_CTX *, connect_phase_t)'
|   |       |   |-ImplicitCastExpr 0x2371a7f92d0 <col:32> 'const SSL_TEST_CTX *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x2371a7f91f0 <col:32> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7f6098 'test_ctx' 'const SSL_TEST_CTX *'
|   |       |   `-ImplicitCastExpr 0x2371a7f92e8 <col:42> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2371a7f9210 <col:42> 'connect_phase_t':'connect_phase_t' lvalue Var 0x2371a7f6b68 'phase' 'connect_phase_t':'connect_phase_t'
|   |       |-IfStmt 0x2371a7f96a8 <line:980:13, line:993:13> has_else
|   |       | |-BinaryOperator 0x2371a7f9390 <line:980:17, col:26> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x2371a7f9378 <col:17> 'int' <IntegralCast>
|   |       | | | `-ImplicitCastExpr 0x2371a7f9360 <col:17> 'connect_phase_t':'connect_phase_t' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x2371a7f9320 <col:17> 'connect_phase_t':'connect_phase_t' lvalue Var 0x2371a7f6b68 'phase' 'connect_phase_t':'connect_phase_t'
|   |       | | `-DeclRefExpr 0x2371a7f9340 <col:26> 'int' EnumConstant 0x2371a764880 'CONNECTION_DONE' 'int'
|   |       | |-CompoundStmt 0x2371a7f94d8 <col:43, line:983:13>
|   |       | | |-BinaryOperator 0x2371a7f9450 <line:981:17, col:31> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       | | | |-MemberExpr 0x2371a7f93e8 <col:17, col:22> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x2371a7a0600
|   |       | | | | `-ImplicitCastExpr 0x2371a7f93d0 <col:17> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       | | | |   `-DeclRefExpr 0x2371a7f93b0 <col:17> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   |       | | | `-ImplicitCastExpr 0x2371a7f9438 <col:31> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       | | |   `-DeclRefExpr 0x2371a7f9418 <col:31> 'int' EnumConstant 0x2371a79c9d0 'SSL_TEST_SUCCESS' 'int'
|   |       | | `-GotoStmt 0x2371a7f94c0 <line:982:17, col:22> 'err' 0x2371a7f9470
|   |       | `-CompoundStmt 0x2371a7f9680 <line:983:20, line:993:13>
|   |       |   |-BinaryOperator 0x2371a7f95f0 <line:984:17, col:49> 'peer_status_t':'peer_status_t' '='
|   |       |   | |-MemberExpr 0x2371a7f9518 <col:17, col:24> 'peer_status_t':'peer_status_t' lvalue .status 0x2371a758dc0
|   |       |   | | `-DeclRefExpr 0x2371a7f94f8 <col:17> 'PEER':'struct peer_st' lvalue Var 0x2371a7f6540 'client' 'PEER':'struct peer_st'
|   |       |   | `-BinaryOperator 0x2371a7f95d0 <col:33, col:49> 'peer_status_t':'peer_status_t' '='
|   |       |   |   |-MemberExpr 0x2371a7f9568 <col:33, col:40> 'peer_status_t':'peer_status_t' lvalue .status 0x2371a758dc0
|   |       |   |   | `-DeclRefExpr 0x2371a7f9548 <col:33> 'PEER':'struct peer_st' lvalue Var 0x2371a7f64c8 'server' 'PEER':'struct peer_st'
|   |       |   |   `-ImplicitCastExpr 0x2371a7f95b8 <col:49> 'peer_status_t':'peer_status_t' <IntegralCast>
|   |       |   |     `-DeclRefExpr 0x2371a7f9598 <col:49> 'int' EnumConstant 0x2371a758848 'PEER_RETRY' 'int'
|   |       |   |-BinaryOperator 0x2371a7f9658 <line:991:17, col:31> 'int' '='
|   |       |   | |-DeclRefExpr 0x2371a7f9610 <col:17> 'int' lvalue Var 0x2371a7f69f0 'client_turn' 'int'
|   |       |   | `-IntegerLiteral 0x2371a7f9630 <col:31> 'int' 1
|   |       |   `-BreakStmt 0x2371a7f9678 <line:992:17>
|   |       |-CaseStmt 0x2371a7f9708 <line:994:9, line:995:27>
|   |       | |-ConstantExpr 0x2371a7f96f0 <line:994:14> 'int'
|   |       | | `-DeclRefExpr 0x2371a7f96d0 <col:14> 'int' EnumConstant 0x2371a7fc1b8 'CLIENT_ERROR' 'int'
|   |       | `-BinaryOperator 0x2371a7f97d0 <line:995:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x2371a7f9768 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x2371a7a0600
|   |       |   | `-ImplicitCastExpr 0x2371a7f9750 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x2371a7f9730 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x2371a7f97b8 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x2371a7f9798 <col:27> 'int' EnumConstant 0x2371a79ca80 'SSL_TEST_CLIENT_FAIL' 'int'
|   |       |-GotoStmt 0x2371a7f97f0 <line:996:13, col:18> 'err' 0x2371a7f9470
|   |       |-CaseStmt 0x2371a7f9840 <line:997:9, line:998:27>
|   |       | |-ConstantExpr 0x2371a7f9828 <line:997:14> 'int'
|   |       | | `-DeclRefExpr 0x2371a7f9808 <col:14> 'int' EnumConstant 0x2371a7fc210 'SERVER_ERROR' 'int'
|   |       | `-BinaryOperator 0x2371a7f9908 <line:998:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x2371a7f98a0 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x2371a7a0600
|   |       |   | `-ImplicitCastExpr 0x2371a7f9888 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x2371a7f9868 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x2371a7f98f0 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x2371a7f98d0 <col:27> 'int' EnumConstant 0x2371a79ca28 'SSL_TEST_SERVER_FAIL' 'int'
|   |       |-GotoStmt 0x2371a7f9928 <line:999:13, col:18> 'err' 0x2371a7f9470
|   |       |-CaseStmt 0x2371a7f9978 <line:1000:9, line:1001:27>
|   |       | |-ConstantExpr 0x2371a7f9960 <line:1000:14> 'int'
|   |       | | `-DeclRefExpr 0x2371a7f9940 <col:14> 'int' EnumConstant 0x2371a7fc268 'INTERNAL_ERROR' 'int'
|   |       | `-BinaryOperator 0x2371a7f9a40 <line:1001:13, col:27> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |   |-MemberExpr 0x2371a7f99d8 <col:13, col:18> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x2371a7a0600
|   |       |   | `-ImplicitCastExpr 0x2371a7f99c0 <col:13> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x2371a7f99a0 <col:13> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   |       |   `-ImplicitCastExpr 0x2371a7f9a28 <col:27> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x2371a7f9a08 <col:27> 'int' EnumConstant 0x2371a79cad8 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |       |-GotoStmt 0x2371a7f9a60 <line:1002:13, col:18> 'err' 0x2371a7f9470
|   |       |-CaseStmt 0x2371a7f9ab0 <line:1003:9, line:1012:13>
|   |       | |-ConstantExpr 0x2371a7f9a98 <line:1003:14> 'int'
|   |       | | `-DeclRefExpr 0x2371a7f9a78 <col:14> 'int' EnumConstant 0x2371a7fc2c0 'HANDSHAKE_RETRY' 'int'
|   |       | `-IfStmt 0x2371a7f9c50 <line:1004:13, line:1012:13>
|   |       |   |-BinaryOperator 0x2371a7f9b38 <line:1004:17, col:40> 'int' '>='
|   |       |   | |-UnaryOperator 0x2371a7f9af8 <col:17, col:34> 'int' postfix '++'
|   |       |   | | `-DeclRefExpr 0x2371a7f9ad8 <col:17> 'int' lvalue Var 0x2371a7f6a98 'client_turn_count' 'int'
|   |       |   | `-IntegerLiteral 0x2371a7f9b10 <col:40> 'int' 2000
|   |       |   `-CompoundStmt 0x2371a7f9c30 <col:46, line:1012:13>
|   |       |     |-BinaryOperator 0x2371a7f9bf8 <line:1010:17, col:31> 'ssl_test_result_t':'ssl_test_result_t' '='
|   |       |     | |-MemberExpr 0x2371a7f9b90 <col:17, col:22> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x2371a7a0600
|   |       |     | | `-ImplicitCastExpr 0x2371a7f9b78 <col:17> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |       |     | |   `-DeclRefExpr 0x2371a7f9b58 <col:17> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   |       |     | `-ImplicitCastExpr 0x2371a7f9be0 <col:31> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |       |     |   `-DeclRefExpr 0x2371a7f9bc0 <col:31> 'int' EnumConstant 0x2371a79cad8 'SSL_TEST_INTERNAL_ERROR' 'int'
|   |       |     `-GotoStmt 0x2371a7f9c18 <line:1011:17, col:22> 'err' 0x2371a7f9470
|   |       |-CompoundAssignOperator 0x2371a7f9cb0 <line:1015:13, col:28> 'int' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x2371a7f9c68 <col:13> 'int' lvalue Var 0x2371a7f69f0 'client_turn' 'int'
|   |       | `-IntegerLiteral 0x2371a7f9c88 <col:28> 'int' 1
|   |       `-BreakStmt 0x2371a7f9ce0 <line:1016:13>
|   |-LabelStmt 0x2371a7f9ea0 <line:1019:2, line:1020:45> 'err'
|   | `-BinaryOperator 0x2371a7f9e80 <col:5, col:45> 'int' '='
|   |   |-MemberExpr 0x2371a7f9de8 <col:5, col:10> 'int' lvalue ->server_alert_sent 0x2371a7a07c0
|   |   | `-ImplicitCastExpr 0x2371a7f9dd0 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2371a7f9db0 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   |   `-ImplicitCastExpr 0x2371a7f9e68 <col:30, col:45> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x2371a7f9e38 <col:30, col:45> 'int' lvalue .alert_sent 0x2371a74f6a8
|   |       `-DeclRefExpr 0x2371a7f9e18 <col:30> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f65e8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x2371a801018 <line:1021:5, col:56> 'int' '='
|   | |-MemberExpr 0x2371a7f9ef0 <col:5, col:10> 'int' lvalue ->server_num_fatal_alerts_sent 0x2371a7a0830
|   | | `-ImplicitCastExpr 0x2371a7f9ed8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a7f9eb8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x2371a801000 <col:41, col:56> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x2371a800fd0 <col:41, col:56> 'int' lvalue .num_fatal_alerts_sent 0x2371a74f718
|   |     `-DeclRefExpr 0x2371a7f9f20 <col:41> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f65e8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x2371a801108 <line:1022:5, col:49> 'int' '='
|   | |-MemberExpr 0x2371a801070 <col:5, col:10> 'int' lvalue ->server_alert_received 0x2371a7a08a0
|   | | `-ImplicitCastExpr 0x2371a801058 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a801038 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x2371a8010f0 <col:34, col:49> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x2371a8010c0 <col:34, col:49> 'int' lvalue .alert_received 0x2371a74f788
|   |     `-DeclRefExpr 0x2371a8010a0 <col:34> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f6660 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x2371a8011f8 <line:1023:5, col:45> 'int' '='
|   | |-MemberExpr 0x2371a801160 <col:5, col:10> 'int' lvalue ->client_alert_sent 0x2371a7a0670
|   | | `-ImplicitCastExpr 0x2371a801148 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a801128 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x2371a8011e0 <col:30, col:45> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x2371a8011b0 <col:30, col:45> 'int' lvalue .alert_sent 0x2371a74f6a8
|   |     `-DeclRefExpr 0x2371a801190 <col:30> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f6660 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x2371a8012e8 <line:1024:5, col:56> 'int' '='
|   | |-MemberExpr 0x2371a801250 <col:5, col:10> 'int' lvalue ->client_num_fatal_alerts_sent 0x2371a7a06e0
|   | | `-ImplicitCastExpr 0x2371a801238 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a801218 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x2371a8012d0 <col:41, col:56> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x2371a8012a0 <col:41, col:56> 'int' lvalue .num_fatal_alerts_sent 0x2371a74f718
|   |     `-DeclRefExpr 0x2371a801280 <col:41> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f6660 'client_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x2371a8013d8 <line:1025:5, col:49> 'int' '='
|   | |-MemberExpr 0x2371a801340 <col:5, col:10> 'int' lvalue ->client_alert_received 0x2371a7a0750
|   | | `-ImplicitCastExpr 0x2371a801328 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a801308 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x2371a8013c0 <col:34, col:49> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x2371a801390 <col:34, col:49> 'int' lvalue .alert_received 0x2371a74f788
|   |     `-DeclRefExpr 0x2371a801370 <col:34> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f65e8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x2371a801708 <line:1028:5, col:38> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x2371a801670 <col:5, col:10> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x2371a7a09e8
|   | | `-ImplicitCastExpr 0x2371a801658 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a801638 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x2371a8016f0 <col:23, col:38> 'ssl_servername_t':'ssl_servername_t' <LValueToRValue>
|   |   `-MemberExpr 0x2371a8016c0 <col:23, col:38> 'ssl_servername_t':'ssl_servername_t' lvalue .servername 0x2371a74f860
|   |     `-DeclRefExpr 0x2371a8016a0 <col:23> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f65e8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-IfStmt 0x2371a801dc0 <line:1031:5, line:1034:31> has_else
|   | |-BinaryOperator 0x2371a801c20 <line:1031:9, col:37> 'int' '||'
|   | | |-BinaryOperator 0x2371a801b68 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2371a801b38 <.//openssl//file_jk/after\test\handshake_helper.c:1031:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2371a801a90 <col:9> 'const unsigned char *' lvalue Var 0x2371a7f6d00 'tick' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x2371a801b50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const unsigned char *' <BitCast>
|   | | |   `-ParenExpr 0x2371a801b18 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x2371a801af0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x2371a801ab0 <col:26> 'int' 0
|   | | `-BinaryOperator 0x2371a801c00 <.//openssl//file_jk/after\test\handshake_helper.c:1031:25, col:37> 'int' '=='
|   | |   |-ImplicitCastExpr 0x2371a801bd0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2371a801b88 <col:25> 'size_t':'unsigned long long' lvalue Var 0x2371a7f6e30 'tick_len' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x2371a801be8 <col:37> 'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x2371a801ba8 <col:37> 'int' 0
|   | |-BinaryOperator 0x2371a801ce0 <line:1032:9, col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   | | |-MemberExpr 0x2371a801c78 <col:9, col:14> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket 0x2371a7a0a50
|   | | | `-ImplicitCastExpr 0x2371a801c60 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2371a801c40 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | | `-ImplicitCastExpr 0x2371a801cc8 <col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   | |   `-DeclRefExpr 0x2371a801ca8 <col:31> 'int' EnumConstant 0x2371a79b740 'SSL_TEST_SESSION_TICKET_NO' 'int'
|   | `-BinaryOperator 0x2371a801da0 <line:1034:9, col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   |   |-MemberExpr 0x2371a801d38 <col:9, col:14> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket 0x2371a7a0a50
|   |   | `-ImplicitCastExpr 0x2371a801d20 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2371a801d00 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   |   `-ImplicitCastExpr 0x2371a801d88 <col:31> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   |     `-DeclRefExpr 0x2371a801d68 <col:31> 'int' EnumConstant 0x2371a79b6e8 'SSL_TEST_SESSION_TICKET_YES' 'int'
|   |-BinaryOperator 0x2371a801eb8 <line:1035:5, col:54> 'int' '='
|   | |-MemberExpr 0x2371a801e20 <col:5, col:10> 'int' lvalue ->session_ticket_do_not_call 0x2371a7a0ac0
|   | | `-ImplicitCastExpr 0x2371a801e08 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a801de8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-ImplicitCastExpr 0x2371a801ea0 <col:39, col:54> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x2371a801e70 <col:39, col:54> 'int' lvalue .session_ticket_do_not_call 0x2371a74f7f8
|   |     `-DeclRefExpr 0x2371a801e50 <col:39> 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st' lvalue Var 0x2371a7f65e8 'server_ex_data' 'HANDSHAKE_EX_DATA':'struct handshake_ex_data_st'
|   |-BinaryOperator 0x2371a7fa1f8 <line:1039:5, col:58> 'char *' '='
|   | |-MemberExpr 0x2371a7fa078 <col:5, col:10> 'char *' lvalue ->client_npn_negotiated 0x2371a7a0b30
|   | | `-ImplicitCastExpr 0x2371a7fa060 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a7fa040 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x2371a7fa180 <col:34, col:58> 'char *'
|   |   |-ImplicitCastExpr 0x2371a7fa168 <col:34> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2371a7fa0a8 <col:34> 'char *(const unsigned char *, size_t)' Function 0x2371a7f81b0 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x2371a7fa1b0 <col:42> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a7fa0c8 <col:42> 'const unsigned char *' lvalue Var 0x2371a7f6fa8 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x2371a7fa1e0 <col:49> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x2371a7fa1c8 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a7fa0e8 <col:49> 'unsigned int' lvalue Var 0x2371a7f70e0 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x2371a7fa420 <line:1042:5, col:58> 'char *' '='
|   | |-MemberExpr 0x2371a7fa300 <col:5, col:10> 'char *' lvalue ->server_npn_negotiated 0x2371a7a0ba0
|   | | `-ImplicitCastExpr 0x2371a7fa2e8 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a7fa2c8 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x2371a7fa3a8 <col:34, col:58> 'char *'
|   |   |-ImplicitCastExpr 0x2371a7fa390 <col:34> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2371a7fa330 <col:34> 'char *(const unsigned char *, size_t)' Function 0x2371a7f81b0 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x2371a7fa3d8 <col:42> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a7fa350 <col:42> 'const unsigned char *' lvalue Var 0x2371a7f6fa8 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x2371a7fa408 <col:49> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x2371a7fa3f0 <col:49> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a7fa370 <col:49> 'unsigned int' lvalue Var 0x2371a7f70e0 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x2371a7fa738 <line:1046:5, col:59> 'char *' '='
|   | |-MemberExpr 0x2371a7fa618 <col:5, col:10> 'char *' lvalue ->client_alpn_negotiated 0x2371a7a0c10
|   | | `-ImplicitCastExpr 0x2371a7fa600 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a7fa5e0 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x2371a7fa6c0 <col:35, col:59> 'char *'
|   |   |-ImplicitCastExpr 0x2371a7fa6a8 <col:35> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2371a7fa648 <col:35> 'char *(const unsigned char *, size_t)' Function 0x2371a7f81b0 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x2371a7fa6f0 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a7fa668 <col:43> 'const unsigned char *' lvalue Var 0x2371a7f6fa8 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x2371a7fa720 <col:50> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x2371a7fa708 <col:50> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a7fa688 <col:50> 'unsigned int' lvalue Var 0x2371a7f70e0 'proto_len' 'unsigned int'
|   |-BinaryOperator 0x2371a7fa960 <line:1049:5, col:59> 'char *' '='
|   | |-MemberExpr 0x2371a7fa840 <col:5, col:10> 'char *' lvalue ->server_alpn_negotiated 0x2371a7a0c80
|   | | `-ImplicitCastExpr 0x2371a7fa828 <col:5> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2371a7fa808 <col:5> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   | `-CallExpr 0x2371a7fa8e8 <col:35, col:59> 'char *'
|   |   |-ImplicitCastExpr 0x2371a7fa8d0 <col:35> 'char *(*)(const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2371a7fa870 <col:35> 'char *(const unsigned char *, size_t)' Function 0x2371a7f81b0 'dup_str' 'char *(const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x2371a7fa918 <col:43> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2371a7fa890 <col:43> 'const unsigned char *' lvalue Var 0x2371a7f6fa8 'proto' 'const unsigned char *'
|   |   `-ImplicitCastExpr 0x2371a7fa948 <col:50> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x2371a7fa930 <col:50> 'unsigned int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a7fa8b0 <col:50> 'unsigned int' lvalue Var 0x2371a7f70e0 'proto_len' 'unsigned int'
|   |-IfStmt 0x2371a7fd668 <line:1057:5, line:1068:5>
|   | |-OpaqueValueExpr 0x2371a7fd650 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2371a7fd628 <line:1057:55, line:1068:5>
|   |   |-DeclStmt 0x2371a7fd078 <line:1058:9, col:39>
|   |   | `-VarDecl 0x2371a7faec0 <col:9, col:13> col:13 used nid 'int'
|   |   |-IfStmt 0x2371a7fd440 <line:1061:9, line:1064:9>
|   |   | |-OpaqueValueExpr 0x2371a7fd428 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2371a7fd418 <line:1061:33, line:1064:9>
|   |   `-BinaryOperator 0x2371a7fd608 <line:1067:9, col:29> 'int' '='
|   |     |-MemberExpr 0x2371a7fd5a0 <col:9, col:14> 'int' lvalue ->tmp_key_type 0x2371a7a0dd0
|   |     | `-ImplicitCastExpr 0x2371a7fd588 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2371a7fd568 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
|   |     `-ImplicitCastExpr 0x2371a7fd5f0 <col:29> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2371a7fd5d0 <col:29> 'int' lvalue Var 0x2371a7faec0 'nid' 'int'
|   |-CallExpr 0x2371a7fd750 <line:1070:5, col:40> 'void'
|   | |-ImplicitCastExpr 0x2371a7fd738 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7fd680 <col:5> 'void (CTX_DATA *)' Function 0x2371a74fe88 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x2371a7fd6c0 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x2371a7fd6a0 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x2371a7f6780 'server_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x2371a7fd7e8 <line:1071:5, col:41> 'void'
|   | |-ImplicitCastExpr 0x2371a7fd7d0 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7fd778 <col:5> 'void (CTX_DATA *)' Function 0x2371a74fe88 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x2371a7fd7b8 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x2371a7fd798 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x2371a7f67f8 'server2_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x2371a7fd880 <line:1072:5, col:40> 'void'
|   | |-ImplicitCastExpr 0x2371a7fd868 <col:5> 'void (*)(CTX_DATA *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7fd810 <col:5> 'void (CTX_DATA *)' Function 0x2371a74fe88 'ctx_data_free_data' 'void (CTX_DATA *)'
|   | `-UnaryOperator 0x2371a7fd850 <col:24, col:25> 'CTX_DATA *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x2371a7fd830 <col:25> 'CTX_DATA':'struct ctx_data_st' lvalue Var 0x2371a7f6708 'client_ctx_data' 'CTX_DATA':'struct ctx_data_st'
|   |-CallExpr 0x2371a7fd918 <line:1074:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x2371a7fd900 <col:5> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7fd8a8 <col:5> 'void (PEER *)' Function 0x2371a75f358 'peer_free_data' 'void (PEER *)'
|   | `-UnaryOperator 0x2371a7fd8e8 <col:20, col:21> 'PEER *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x2371a7fd8c8 <col:21> 'PEER':'struct peer_st' lvalue Var 0x2371a7f64c8 'server' 'PEER':'struct peer_st'
|   |-CallExpr 0x2371a7fd9b0 <line:1075:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x2371a7fd998 <col:5> 'void (*)(PEER *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2371a7fd940 <col:5> 'void (PEER *)' Function 0x2371a75f358 'peer_free_data' 'void (PEER *)'
|   | `-UnaryOperator 0x2371a7fd980 <col:20, col:21> 'PEER *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x2371a7fd960 <col:21> 'PEER':'struct peer_st' lvalue Var 0x2371a7f6540 'client' 'PEER':'struct peer_st'
|   `-ReturnStmt 0x2371a7fda10 <line:1076:5, col:12>
|     `-ImplicitCastExpr 0x2371a7fd9f8 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
|       `-DeclRefExpr 0x2371a7fd9d8 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7f68a8 'ret' 'HANDSHAKE_RESULT *'
`-FunctionDecl 0x2371a7faf70 <line:1079:1, line:1106:1> line:1079:19 invalid do_handshake 'HANDSHAKE_RESULT *(int *, int *, int *, int *, int *, const SSL_TEST_CTX *)'
  |-ParmVarDecl 0x2371a7fdc20 <col:32, col:41> col:41 invalid server_ctx 'int *'
  |-ParmVarDecl 0x2371a7fdca0 <col:53, col:62> col:62 invalid server2_ctx 'int *'
  |-ParmVarDecl 0x2371a7fdd20 <line:1080:32, col:41> col:41 invalid client_ctx 'int *'
  |-ParmVarDecl 0x2371a7fdda0 <col:53, col:62> col:62 invalid resume_server_ctx 'int *'
  |-ParmVarDecl 0x2371a7fde20 <line:1081:32, col:41> col:41 invalid resume_client_ctx 'int *'
  |-ParmVarDecl 0x2371a7fde98 <line:1082:32, col:52> col:52 used test_ctx 'const SSL_TEST_CTX *'
  `-CompoundStmt 0x2371a7fba68 <line:1083:1, line:1106:1>
    |-DeclStmt 0x2371a7fb0d0 <line:1084:5, col:29>
    | `-VarDecl 0x2371a7fb068 <col:5, col:23> col:23 used result 'HANDSHAKE_RESULT *'
    |-IfStmt 0x2371a7fb428 <line:1090:5, line:1091:14>
    | |-BinaryOperator 0x2371a7fb3a0 <line:1090:9, col:37> 'int' '!='
    | | |-ImplicitCastExpr 0x2371a7fb388 <col:9, col:19> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x2371a7fb370 <col:9, col:19> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
    | | |   `-MemberExpr 0x2371a7fb320 <col:9, col:19> 'const ssl_handshake_mode_t':'const ssl_handshake_mode_t' lvalue ->handshake_mode 0x2371a7a1290
    | | |     `-ImplicitCastExpr 0x2371a7fb308 <col:9> 'const SSL_TEST_CTX *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x2371a7fb2e8 <col:9> 'const SSL_TEST_CTX *' lvalue ParmVar 0x2371a7fde98 'test_ctx' 'const SSL_TEST_CTX *'
    | | `-DeclRefExpr 0x2371a7fb350 <col:37> 'int' EnumConstant 0x2371a79bcb8 'SSL_TEST_HANDSHAKE_RESUME' 'int'
    | `-GotoStmt 0x2371a7fb410 <line:1091:9, col:14> 'end' 0x2371a7fb3c0
    |-IfStmt 0x2371a7fb610 <line:1093:5, line:1096:5>
    | |-BinaryOperator 0x2371a7fb4f8 <line:1093:9, col:27> 'int' '!='
    | | |-ImplicitCastExpr 0x2371a7fb4e0 <col:9, col:17> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x2371a7fb4c8 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' <LValueToRValue>
    | | |   `-MemberExpr 0x2371a7fb478 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x2371a7a0600
    | | |     `-ImplicitCastExpr 0x2371a7fb460 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
    | | |       `-DeclRefExpr 0x2371a7fb440 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7fb068 'result' 'HANDSHAKE_RESULT *'
    | | `-DeclRefExpr 0x2371a7fb4a8 <col:27> 'int' EnumConstant 0x2371a79c9d0 'SSL_TEST_SUCCESS' 'int'
    | `-CompoundStmt 0x2371a7fb5f0 <col:45, line:1096:5>
    |   |-BinaryOperator 0x2371a7fb5b8 <line:1094:9, col:26> 'ssl_test_result_t':'ssl_test_result_t' '='
    |   | |-MemberExpr 0x2371a7fb550 <col:9, col:17> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->result 0x2371a7a0600
    |   | | `-ImplicitCastExpr 0x2371a7fb538 <col:9> 'HANDSHAKE_RESULT *' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x2371a7fb518 <col:9> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7fb068 'result' 'HANDSHAKE_RESULT *'
    |   | `-ImplicitCastExpr 0x2371a7fb5a0 <col:26> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
    |   |   `-DeclRefExpr 0x2371a7fb580 <col:26> 'int' EnumConstant 0x2371a79cb30 'SSL_TEST_FIRST_HANDSHAKE_FAILED' 'int'
    |   `-GotoStmt 0x2371a7fb5d8 <line:1095:9, col:14> 'end' 0x2371a7fb3c0
    |-CallExpr 0x2371a7fb6e0 <line:1098:5, col:33> 'void'
    | |-ImplicitCastExpr 0x2371a7fb6c8 <col:5> 'void (*)(HANDSHAKE_RESULT *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x2371a7fb628 <col:5> 'void (HANDSHAKE_RESULT *)' Function 0x2371a750eb8 'HANDSHAKE_RESULT_free' 'void (HANDSHAKE_RESULT *)'
    | `-ImplicitCastExpr 0x2371a7fb708 <col:27> 'HANDSHAKE_RESULT *' <LValueToRValue>
    |   `-DeclRefExpr 0x2371a7fb648 <col:27> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7fb068 'result' 'HANDSHAKE_RESULT *'
    |-LabelStmt 0x2371a7fba08 <line:1103:2, col:5> 'end'
    | `-NullStmt 0x2371a7fba00 <col:5>
    `-ReturnStmt 0x2371a7fba58 <line:1105:5, col:12>
      `-ImplicitCastExpr 0x2371a7fba40 <col:12> 'HANDSHAKE_RESULT *' <LValueToRValue>
        `-DeclRefExpr 0x2371a7fba20 <col:12> 'HANDSHAKE_RESULT *' lvalue Var 0x2371a7fb068 'result' 'HANDSHAKE_RESULT *'
