TranslationUnitDecl 0x29387a24a68 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x29387a25300 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x29387a25000 '__int128'
|-TypedefDecl 0x29387a25370 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x29387a25020 'unsigned __int128'
|-TypedefDecl 0x29387a256a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x29387a25460 'struct __NSConstantString_tag'
|   `-Record 0x29387a253c8 '__NSConstantString_tag'
|-TypedefDecl 0x29387a25718 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x29387a24c40 'unsigned long long'
|-TypedefDecl 0x29387a257b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x29387a25770 'char *'
|   `-BuiltinType 0x29387a24b00 'char'
|-TypedefDecl 0x29387a25820 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x29387a25770 'char *'
|   `-BuiltinType 0x29387a24b00 'char'
|-TypedefDecl 0x29387a258e0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x29387a24c40 'unsigned long long'
|-TypedefDecl 0x29387a25950 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x29387a25770 'char *'
|   `-BuiltinType 0x29387a24b00 'char'
|-FunctionDecl 0x293894ef420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x293894ef4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x293894ef530 <col:21> Implicit
|-FunctionDecl 0x293894ef588 prev 0x293894ef420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x293894ef2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x293894ef678 <col:21> Inherited Implicit
|-TypedefDecl 0x293894ef6b8 prev 0x29387a25718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x29387a24c40 'unsigned long long'
|-TypedefDecl 0x293894ef760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x293894ef730 'size_t' sugar
|   |-Typedef 0x293894ef6b8 'size_t'
|   `-BuiltinType 0x29387a24c40 'unsigned long long'
|-TypedefDecl 0x293894ef7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x29387a24ba0 'long long'
|-TypedefDecl 0x293894ef840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x29387a24ba0 'long long'
|-TypedefDecl 0x293894ef8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x29387a24be0 'unsigned short'
|-TypedefDecl 0x293894ef920 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x29387a24be0 'unsigned short'
|-TypedefDecl 0x293894ef990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x29387a24be0 'unsigned short'
|-TypedefDecl 0x293894efa00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x29387a24b60 'int'
|-TypedefDecl 0x293894efa70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x29387a24b80 'long'
|-TypedefDecl 0x293894efae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x29387a24ba0 'long long'
|-TypedefDecl 0x293894efb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x293894efb40 '__time64_t' sugar
|   |-Typedef 0x293894efae0 '__time64_t'
|   `-BuiltinType 0x29387a24ba0 'long long'
|-FunctionDecl 0x293894efce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x293894eff08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x29389528c70 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x293894f0048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x293894f00c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x293894f0138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x293894f01b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x29389528a10 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x29389528d50 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x29389528e10 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x29389528f80 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x29389528f30 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x29389528ed0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x29389528df0 'struct threadlocaleinfostruct'
|       `-Record 0x29389536af0 'threadlocaleinfostruct'
|-TypedefDecl 0x29389529090 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x29389529040 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x29389528fe0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x29389528eb0 'struct threadmbcinfostruct'
|       `-Record 0x29389528e10 'threadmbcinfostruct'
|-RecordDecl 0x293895290e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x293895291a0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x29389529260 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x293895292f0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x29389529380 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x29389529438 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x293895293e0 'struct localeinfo_struct' sugar
|   `-RecordType 0x29389529240 'struct localeinfo_struct'
|     `-Record 0x293895291a0 'localeinfo_struct'
|-TypedefDecl 0x29389529510 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x293895294c0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x293895293e0 'struct localeinfo_struct' sugar
|     `-RecordType 0x29389529240 'struct localeinfo_struct'
|       `-Record 0x293895291a0 'localeinfo_struct'
|-RecordDecl 0x29389529588 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x29389529640 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x293895296b8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x29389529778 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x29389529810 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x29389529880 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x29389529938 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x293895298e0 'struct localerefcount' sugar
|   `-RecordType 0x29389529620 'struct localerefcount'
|     `-Record 0x29389529588 'localerefcount'
|-RecordDecl 0x29389536af0 prev 0x29389528d50 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x29389536b70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x29389536be8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x29389536c58 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x29389536cc8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x29389536d38 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x29389536ef8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x29389536f68 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x29389536fd8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x29389537048 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x293895370b8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x29389537128 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x29389537180 parent 0x29387a24a68 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x29389537310 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x29389537380 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x293895373f0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x29389537460 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x29389537500 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x29389537570 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x29389537680 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x293895377b8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x29389537868 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x29389537810 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x29389528df0 'struct threadlocaleinfostruct'
|     `-Record 0x29389536af0 'threadlocaleinfostruct'
|-FunctionDecl 0x29389535cf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x293895378f0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x293895379a0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x29389537a20 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x29389535ae0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895360b8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x29389536158 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x293895361c0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x29389536228 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x293895362a8 prev 0x293895360b8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x29389535de0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x29389535e60 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x29389535ed8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29389536668 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x29389536390 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x29389536410 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x29389536488 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29389537b50 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x29389536750 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x293895367d0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x29389536848 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895368e0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29389537e58 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x29389537ef8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x29389537f60 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x29389537fc8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29389538048 prev 0x29389537e58 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x29389537c40 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x29389537cc0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x29389537d38 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29389538408 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x293895384a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x29389538510 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x29389538578 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x293895385f8 prev 0x29389538408 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x29389538130 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x293895381b0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x29389538228 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x29389530a90 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x29389538708 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x293895387a0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x29389538820 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x29389538898 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x29389530e58 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x29389530ef8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x29389530f60 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x29389530fc8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29389531048 prev 0x29389530e58 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x29389530b80 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x29389530c00 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x29389530c78 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x293895314c8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x29389531568 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x293895315d0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x29389531638 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x293895316a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29389531728 prev 0x293895314c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x29389531210 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x29389531290 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x29389531310 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x29389531388 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x293895317e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x29389538ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x293895319b0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x29389538b10 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x29389538b88 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x29389538d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x29389539150 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x29389538e88 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x29389538f00 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29389538f80 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x29389539520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x29389539330 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x293895393b0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x293895395d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895399e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x29389539718 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x29389539790 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x29389539810 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x29389531d60 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x29389531e00 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x29389531e68 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29389531ee0 prev 0x29389531d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x29389531b78 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x29389531bf8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x29389531f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895322e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x293895320d8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x29389532150 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x293895321d0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x29389532610 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x293895326b0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x29389532718 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29389532790 prev 0x29389532610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x29389532490 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x29389532510 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x29389532840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29389539bf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x29389539c90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29389539cf8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x29389539d70 prev 0x29389539bf0 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x29389532988 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x29389532a08 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x29389539fc0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2938953a060 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2938953a0d0 prev 0x29389539fc0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x29389539e50 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x2938953a3c8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2938953a1a8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2938953a220 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2938953a618 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x2938953a4a8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x2938953a520 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2938953a948 <line:131:1, line:133:1>
|   `-ReturnStmt 0x2938953a938 <line:132:5, col:51>
|     `-ConditionalOperator 0x2938953a908 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x2938953a778 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x2938953a758 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x2938953a728 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2938953a6e0 <col:13> 'const char *' lvalue ParmVar 0x2938953a4a8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x2938953a740 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x2938953a700 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x2938953a8f0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2938953a798 <col:24> 'int' 0
|       `-CallExpr 0x2938953a890 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2938953a878 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2938953a7c0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x2938953a3c8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x2938953a8c0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x2938953a7e0 <col:36> 'const char *' lvalue ParmVar 0x2938953a4a8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x2938953a8d8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2938953a800 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x2938953a520 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x29389540cc8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2938953a978 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x2938953a9f0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2938953aa70 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x29389540b90 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x29389540fd0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x29389541070 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x293895410d8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x29389541140 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x293895411c0 prev 0x29389540fd0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x29389540db8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x29389540e38 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x29389540eb0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x293895413f8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x293895412a8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x293895416c0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x29389541760 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x293895417c8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x29389541840 prev 0x293895416c0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x293895414d0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x29389541550 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x29389541aa0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x29389541920 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x293895419a0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2938953acb0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2938953ab30 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2938953abb0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2938953b068 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2938953ad90 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2938953ae10 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2938953ae88 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2938953b2d0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2938953b150 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x2938953b1d0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2938953b5c8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2938953b3b0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2938953b430 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2938953b4a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2938953b830 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2938953b6b0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x2938953b730 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x2938953db60 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2938953b910 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x2938953b990 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x2938953ba08 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2938953df18 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2938953dc48 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2938953dcc8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2938953dd40 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2938953e380 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2938953e000 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2938953e080 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2938953e0f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2938953e170 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2938953e688 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2938953e470 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2938953e4f0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2938953e568 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2938953ea20 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2938953e770 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x2938953e7f0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x2938953e868 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2938953e8e0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2938953ed98 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2938953ee38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2938953eea0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2938953ef18 prev 0x2938953ed98 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2938953eb70 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2938953ebf0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x2938953f1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2938953f0f0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x2938953f278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2938953f650 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x2938953f3c0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x2938953f438 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2938953f4b8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x2938953f968 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x2938953fa08 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2938953fa78 prev 0x2938953f968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x2938953f830 <col:90> col:93 'int'
| `-DeprecatedAttr 0x2938953fb20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29389541eb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x29389541ca0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x29389541d18 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29389541d98 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x293895421b8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x29389541f98 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x29389542010 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x293895424a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x29389542358 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x29389542550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29389542960 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x29389542698 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x29389542710 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x29389542788 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29389542d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x29389542b08 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x29389542bb0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x29389542e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895432c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x29389542f58 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x29389542fd0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x29389543050 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x293895430c8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x29389543748 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x293895437e8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x29389543850 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x293895438b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29389543938 prev 0x29389543748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x29389543478 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x293895434f8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x29389543570 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x293895439f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29389543d70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x29389543e10 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x29389543e78 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29389543ee0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x29389543f60 prev 0x29389543d70 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x29389543b38 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x29389543bd8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x29389543c50 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x29389544260 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x29389544048 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x293895440c8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x29389544140 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895445f8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x29389544348 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x293895443c8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x29389544440 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895444b8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x29389544990 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x293895446e8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x29389544760 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x293895447e0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x29389544858 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2938953fd18 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2938953fdb8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2938953fe20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2938953fe88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2938953ff08 prev 0x2938953fd18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x29389544b40 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x2938953fb80 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x2938953fbf8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2938953ffc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x29389540478 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x29389540108 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x29389540180 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x29389540200 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x29389540278 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895408f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x29389540628 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x293895406a8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x29389540720 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x293895409b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2938953ccc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2938953cd60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2938953cdc8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2938953ce40 prev 0x2938953ccc0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x29389540af8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2938953cb50 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x2938953d0a0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2938953d140 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2938953d1a8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2938953d220 prev 0x2938953d0a0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2938953cf20 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2938953cfa0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x2938953d3e0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x2938953d300 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x2938953d630 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2938953d6d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2938953d738 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2938953d7b0 prev 0x2938953d630 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2938953d4b8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x2938953d538 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x2938953da10 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2938953dab0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x293895b6fc0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x293895b7038 prev 0x2938953da10 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2938953d890 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x2938953d910 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x293895b7358 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x293895b73f8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x293895b7460 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x293895b74d8 prev 0x293895b7358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x293895b71d8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x293895b7258 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x293895b7588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895b7968 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x293895b76d0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x293895b7750 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x293895b77d0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x293895b7bc0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x293895b7a50 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x293895b7ac8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x293895b7e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x293895b7d60 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x293895b7ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895b92e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x293895b90e0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x293895b9158 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895b91d0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895b9608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x293895b9490 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x293895b9508 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x293895b96b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895b9ad0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x293895b9b70 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x293895b9bd8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x293895b9c40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x293895b9cc0 prev 0x293895b9ad0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x293895b9800 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x293895b9880 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x293895b98f8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895bf178 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x293895b9da8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x293895b9e28 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x293895b9ea0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895b9f18 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895bf420 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x293895bf4c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x293895bf530 prev 0x293895bf420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x293895bf340 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x293895bf5d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x293895bf920 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x293895bf7a0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x293895bf820 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x293895bf9d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x293895bfd18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x293895bfb98 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x293895bfc18 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x293895bfdc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x293895b8008 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x293895bff90 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x293895b80b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x293895b84c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x293895b82b0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x293895b8330 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x293895b83a8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x293895b8580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x293895b8960 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x293895b8748 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x293895b87c8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x293895b8840 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x293895b8a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x293895b8cc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x293895b8be0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x293895b8d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x293895c0150 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x293895b8f30 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x293895c0050 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x293895c0200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x293895c04a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x293895c03c8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x293895c0550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x293895c07e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x293895c0670 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x293895c0b70 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x293895c08b0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x293895c0928 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x293895c09a0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x293895c0f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895c0d10 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x293895c0d88 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x293895c0fd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895bd338 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x293895bd3d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x293895bd440 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x293895bd4b8 prev 0x293895bd338 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x293895bd118 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x293895bd190 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x293895bd7b0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x293895bd850 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x293895bd8b8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x293895bd930 prev 0x293895bd7b0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x293895bd590 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x293895bd608 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x293895bdc10 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x293895bda08 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x293895bda80 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x293895bdaf8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x293895bdf20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895bddb0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x293895bde28 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x293895bdfd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895be348 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895be128 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x293895be1a0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x293895be590 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x293895be630 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x293895be6a0 prev 0x293895be590 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x293895be420 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x293895be988 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x293895be770 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x293895be7e8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895bebd0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x293895bea60 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x293895bead8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x293895bef68 <line:306:1, line:308:1>
|   `-ReturnStmt 0x293895bef58 <line:307:5, col:56>
|     `-ConditionalOperator 0x293895bef28 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x293895bed90 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x293895bed70 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x293895bed40 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x293895bec98 <col:13> 'const wchar_t *' lvalue ParmVar 0x293895bea60 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x293895bed58 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x293895bed20 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x293895becf8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x293895becb8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x293895bef10 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x293895bedb0 <col:29> 'int' 0
|       `-CallExpr 0x293895beeb0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x293895bee98 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x293895bedd8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x293895be988 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x293895beee0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x293895bedf8 <col:41> 'const wchar_t *' lvalue ParmVar 0x293895bea60 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x293895beef8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x293895bee18 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x293895bead8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x293895bc308 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x293895bef90 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x293895bc010 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x293895bc088 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x293895bc100 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x293895bc770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x293895bc4b0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x293895bc528 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x293895bc5a0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x293895bc828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895bcc38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x293895bccd8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x293895bcd40 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x293895bcda8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x293895bce28 prev 0x293895bcc38 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x293895bc968 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895bc9e0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x293895bca58 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895c1210 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x293895bcf08 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x293895bcf80 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x293895c1060 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x293895c10d8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x293895c15c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x293895c13b8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x293895c1430 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x293895c14a8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x293895c1678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895c19d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895c17b8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x293895c1830 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x293895c1c20 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x293895c1ab0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x293895c1b28 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x293895c1e68 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895c1cf8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x293895c1d70 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x293895ba050 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895c1f40 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x293895c1fb8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x293895ba358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895ba1e8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x293895ba260 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x293895ba408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895ba870 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x293895ba548 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x293895ba5c0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x293895ba6a0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x293895bab90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x293895baa18 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x293895bac38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895c6120 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x293895bad78 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x293895badf0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895bae70 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x293895c63d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x293895c62f8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x293895c6478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895c6840 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x293895c65b8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x293895c6630 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895c66a8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x293895c6a98 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895c6920 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x293895c6998 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x293895c6e38 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x293895c6b70 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895c6be8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x293895c6c60 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895c7148 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x293895c6f18 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895c6f90 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x293895c7008 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895c75a0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x293895c7228 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895c72a0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x293895c7318 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895c7390 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895c79f8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x293895c7688 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x293895c7700 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x293895c7778 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x293895c77f0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895c7e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x293895c7ba0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x293895c7c18 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x293895c7c90 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x293895c7f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895c81e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x293895c8058 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x293895c8570 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x293895c82b0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x293895c8328 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895c83a0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x293895c8928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x293895c8710 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x293895c8788 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x293895c89d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895c8d38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x293895c8b18 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x293895c8b90 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x293895c8fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x293895c8ed0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x293895c9050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895c94a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x293895c91d8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x293895c9250 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895c92c8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895c9858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x293895c9640 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x293895c96b8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x293895c9908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895c9bb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x293895c9a48 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x293895c9ac0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x293895c9e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x293895c9d50 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x293895c9ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895c2200 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x293895ca010 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x293895c2070 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895c20e8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895c2510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x293895c23a0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x293895c2418 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x293895c25c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x293895c29c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x293895c2700 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x293895c2778 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x293895c27f0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895c2e08 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x293895c2aa0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x293895c2b18 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x293895c2b90 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895c2c08 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895ca0f0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895c2ef0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x293895c2f68 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x293895ca3d8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x293895ca1c8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895ca240 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x293895ca2b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895ca630 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895ca4b8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x293895ca530 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x293895ca918 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x293895ca708 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895ca780 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x293895ca7f8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895cac08 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x293895ca9f8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895caa70 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x293895caae8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895caf90 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x293895cace8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895cad60 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x293895cadd8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895cae50 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895c3218 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x293895cb078 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895c3080 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x293895c30f8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x293895c35a0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x293895c32f8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895c3370 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x293895c33e8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x293895c3460 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x293895c3800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x293895c3728 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x293895c38a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x293895c3be0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895c3a68 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895c3ae0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x293895c3c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x293895c4090 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x293895c3e50 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895c3ec8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x293895c3f40 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x293895c4148 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x293895c4510 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x293895c4308 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x293895c4380 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x293895c43f8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x293895c45c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x293895c4860 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x293895c4788 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x293895c4908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x293895c4c38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x293895c4ac8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x293895c4b40 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x293895c4ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x293895c4f80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x293895c4ea8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x293895c5028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x293895d03a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x293895d02c8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x293895d0448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x293895d0780 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x293895d0608 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x293895d0680 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x293895d0830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x293895d0940 <.//openssl//file_jk/after\test/ssl_test_ctx.h:16:9, line:23:1> line:16:9
| |-EnumConstantDecl 0x293895d0a60 <line:17:5, col:24> col:5 referenced SSL_TEST_SUCCESS 'int'
| | `-ConstantExpr 0x293895d0a48 <col:24> 'int'
| |   `-IntegerLiteral 0x293895d0a20 <col:24> 'int' 0
| |-EnumConstantDecl 0x293895d0ab8 <line:18:5> col:5 referenced SSL_TEST_SERVER_FAIL 'int'
| |-EnumConstantDecl 0x293895d0b10 <line:19:5> col:5 referenced SSL_TEST_CLIENT_FAIL 'int'
| |-EnumConstantDecl 0x293895d0b68 <line:20:5> col:5 referenced SSL_TEST_INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x293895d0bc0 <line:22:5> col:5 SSL_TEST_FIRST_HANDSHAKE_FAILED 'int'
|-TypedefDecl 0x293895d0c78 <line:16:1, line:23:3> col:3 referenced ssl_test_result_t 'enum ssl_test_result_t':'ssl_test_result_t'
| `-ElaboratedType 0x293895d0c20 'enum ssl_test_result_t' sugar
|   `-EnumType 0x293895d0a00 'ssl_test_result_t'
|     `-Enum 0x293895d0940 ''
|-EnumDecl 0x293895d0ce8 <line:25:9, line:29:1> line:25:9
| |-EnumConstantDecl 0x293895d0e00 <line:26:5, col:28> col:5 referenced SSL_TEST_VERIFY_NONE 'int'
| | `-ConstantExpr 0x293895d0de8 <col:28> 'int'
| |   `-IntegerLiteral 0x293895d0dc0 <col:28> 'int' 0
| |-EnumConstantDecl 0x293895d0e58 <line:27:5> col:5 referenced SSL_TEST_VERIFY_ACCEPT_ALL 'int'
| `-EnumConstantDecl 0x293895d0eb0 <line:28:5> col:5 referenced SSL_TEST_VERIFY_REJECT_ALL 'int'
|-TypedefDecl 0x293895d0f68 <line:25:1, line:29:3> col:3 referenced ssl_verify_callback_t 'enum ssl_verify_callback_t':'ssl_verify_callback_t'
| `-ElaboratedType 0x293895d0f10 'enum ssl_verify_callback_t' sugar
|   `-EnumType 0x293895d0da0 'ssl_verify_callback_t'
|     `-Enum 0x293895d0ce8 ''
|-EnumDecl 0x293895d0fd8 <line:31:9, line:36:1> line:31:9
| |-EnumConstantDecl 0x293895d10f0 <line:32:5, col:32> col:5 referenced SSL_TEST_SERVERNAME_NONE 'int'
| | `-ConstantExpr 0x293895d10d8 <col:32> 'int'
| |   `-IntegerLiteral 0x293895d10b0 <col:32> 'int' 0
| |-EnumConstantDecl 0x293895cd120 <line:33:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER1 'int'
| |-EnumConstantDecl 0x293895cd178 <line:34:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER2 'int'
| `-EnumConstantDecl 0x293895cd1d0 <line:35:5> col:5 referenced SSL_TEST_SERVERNAME_INVALID 'int'
|-TypedefDecl 0x293895cd288 <line:31:1, line:36:3> col:3 referenced ssl_servername_t 'enum ssl_servername_t':'ssl_servername_t'
| `-ElaboratedType 0x293895cd230 'enum ssl_servername_t' sugar
|   `-EnumType 0x293895d1090 'ssl_servername_t'
|     `-Enum 0x293895d0fd8 ''
|-EnumDecl 0x293895cd2f8 <line:38:9, line:42:1> line:38:9
| |-EnumConstantDecl 0x293895cd410 <line:39:5, col:35> col:5 referenced SSL_TEST_SERVERNAME_CB_NONE 'int'
| | `-ConstantExpr 0x293895cd3f8 <col:35> 'int'
| |   `-IntegerLiteral 0x293895cd3d0 <col:35> 'int' 0
| |-EnumConstantDecl 0x293895cd468 <line:40:5> col:5 referenced SSL_TEST_SERVERNAME_IGNORE_MISMATCH 'int'
| `-EnumConstantDecl 0x293895cd4c0 <line:41:5> col:5 referenced SSL_TEST_SERVERNAME_REJECT_MISMATCH 'int'
|-TypedefDecl 0x293895cd578 <line:38:1, line:42:3> col:3 referenced ssl_servername_callback_t 'enum ssl_servername_callback_t':'ssl_servername_callback_t'
| `-ElaboratedType 0x293895cd520 'enum ssl_servername_callback_t' sugar
|   `-EnumType 0x293895cd3b0 'ssl_servername_callback_t'
|     `-Enum 0x293895cd2f8 ''
|-EnumDecl 0x293895cd5e8 <line:44:9, line:49:1> line:44:9
| |-EnumConstantDecl 0x293895cd700 <line:45:5, col:38> col:5 referenced SSL_TEST_SESSION_TICKET_IGNORE 'int'
| | `-ConstantExpr 0x293895cd6e8 <col:38> 'int'
| |   `-IntegerLiteral 0x293895cd6c0 <col:38> 'int' 0
| |-EnumConstantDecl 0x293895cd758 <line:46:5> col:5 referenced SSL_TEST_SESSION_TICKET_YES 'int'
| |-EnumConstantDecl 0x293895cd7b0 <line:47:5> col:5 referenced SSL_TEST_SESSION_TICKET_NO 'int'
| `-EnumConstantDecl 0x293895cd808 <line:48:5> col:5 SSL_TEST_SESSION_TICKET_BROKEN 'int'
|-TypedefDecl 0x293895cd8b8 <line:44:1, line:49:3> col:3 referenced ssl_session_ticket_t 'enum ssl_session_ticket_t':'ssl_session_ticket_t'
| `-ElaboratedType 0x293895cd860 'enum ssl_session_ticket_t' sugar
|   `-EnumType 0x293895cd6a0 'ssl_session_ticket_t'
|     `-Enum 0x293895cd5e8 ''
|-EnumDecl 0x293895cd928 <line:51:9, line:54:1> line:51:9
| |-EnumConstantDecl 0x293895cda40 <line:52:5, col:27> col:5 referenced SSL_TEST_METHOD_TLS 'int'
| | `-ConstantExpr 0x293895cda28 <col:27> 'int'
| |   `-IntegerLiteral 0x293895cda00 <col:27> 'int' 0
| `-EnumConstantDecl 0x293895cda98 <line:53:5> col:5 referenced SSL_TEST_METHOD_DTLS 'int'
|-TypedefDecl 0x293895cdb48 <line:51:1, line:54:3> col:3 referenced ssl_test_method_t 'enum ssl_test_method_t':'ssl_test_method_t'
| `-ElaboratedType 0x293895cdaf0 'enum ssl_test_method_t' sugar
|   `-EnumType 0x293895cd9e0 'ssl_test_method_t'
|     `-Enum 0x293895cd928 ''
|-EnumDecl 0x293895cdbb8 <line:56:9, line:61:1> line:56:9
| |-EnumConstantDecl 0x293895cdcd0 <line:57:5, col:33> col:5 referenced SSL_TEST_HANDSHAKE_SIMPLE 'int'
| | `-ConstantExpr 0x293895cdcb8 <col:33> 'int'
| |   `-IntegerLiteral 0x293895cdc90 <col:33> 'int' 0
| |-EnumConstantDecl 0x293895cdd28 <line:58:5> col:5 referenced SSL_TEST_HANDSHAKE_RESUME 'int'
| |-EnumConstantDecl 0x293895cdd80 <line:59:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_SERVER 'int'
| `-EnumConstantDecl 0x293895cddd8 <line:60:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_CLIENT 'int'
|-TypedefDecl 0x293895cde88 <line:56:1, line:61:3> col:3 referenced ssl_handshake_mode_t 'enum ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-ElaboratedType 0x293895cde30 'enum ssl_handshake_mode_t' sugar
|   `-EnumType 0x293895cdc70 'ssl_handshake_mode_t'
|     `-Enum 0x293895cdbb8 ''
|-EnumDecl 0x293895cdef8 <line:63:9, line:67:1> line:63:9
| |-EnumConstantDecl 0x293895ce010 <line:64:5, col:35> col:5 referenced SSL_TEST_CT_VALIDATION_NONE 'int'
| | `-ConstantExpr 0x293895cdff8 <col:35> 'int'
| |   `-IntegerLiteral 0x293895cdfd0 <col:35> 'int' 0
| |-EnumConstantDecl 0x293895ce068 <line:65:5> col:5 referenced SSL_TEST_CT_VALIDATION_PERMISSIVE 'int'
| `-EnumConstantDecl 0x293895ce0c0 <line:66:5> col:5 referenced SSL_TEST_CT_VALIDATION_STRICT 'int'
|-TypedefDecl 0x293895ce188 <line:63:1, line:67:3> col:3 referenced ssl_ct_validation_t 'enum ssl_ct_validation_t':'ssl_ct_validation_t'
| `-ElaboratedType 0x293895ce130 'enum ssl_ct_validation_t' sugar
|   `-EnumType 0x293895cdfb0 'ssl_ct_validation_t'
|     `-Enum 0x293895cdef8 ''
|-EnumDecl 0x293895ce1f8 <line:69:9, line:73:1> line:69:9
| |-EnumConstantDecl 0x293895ce310 <line:70:5, col:33> col:5 referenced SSL_TEST_CERT_STATUS_NONE 'int'
| | `-ConstantExpr 0x293895ce2f8 <col:33> 'int'
| |   `-IntegerLiteral 0x293895ce2d0 <col:33> 'int' 0
| |-EnumConstantDecl 0x293895ce368 <line:71:5> col:5 referenced SSL_TEST_CERT_STATUS_GOOD_RESPONSE 'int'
| `-EnumConstantDecl 0x293895ce3c0 <line:72:5> col:5 referenced SSL_TEST_CERT_STATUS_BAD_RESPONSE 'int'
|-TypedefDecl 0x293895ce478 <line:69:1, line:73:3> col:3 referenced ssl_cert_status_t 'enum ssl_cert_status_t':'ssl_cert_status_t'
| `-ElaboratedType 0x293895ce420 'enum ssl_cert_status_t' sugar
|   `-EnumType 0x293895ce2b0 'ssl_cert_status_t'
|     `-Enum 0x293895ce1f8 ''
|-RecordDecl 0x293895ce4e8 <line:78:9, line:89:1> line:78:9 struct definition
| |-FieldDecl 0x293895ce5d0 <line:80:5, col:27> col:27 referenced verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| |-FieldDecl 0x293895ce660 <line:82:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x293895ce6d0 <line:84:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x293895ce740 <line:85:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x293895ce7d0 <line:86:5, col:25> col:25 referenced ct_validation 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-FieldDecl 0x293895ce840 <line:88:5, col:11> col:11 referenced reneg_ciphers 'char *'
|-TypedefDecl 0x293895ce8f8 <line:78:1, line:89:3> col:3 referenced SSL_TEST_CLIENT_CONF 'struct SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| `-ElaboratedType 0x293895ce8a0 'struct SSL_TEST_CLIENT_CONF' sugar
|   `-RecordType 0x293895ce580 'SSL_TEST_CLIENT_CONF'
|     `-Record 0x293895ce4e8 ''
|-RecordDecl 0x293895ce968 <line:91:9, line:101:1> line:91:9 struct definition
| |-FieldDecl 0x293895cea50 <line:93:5, col:31> col:31 referenced servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| |-FieldDecl 0x293895ceac0 <line:95:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x293895ceb30 <line:96:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x293895ceba0 <line:98:5, col:9> col:9 referenced broken_session_ticket 'int'
| `-FieldDecl 0x293895cec30 <line:100:5, col:23> col:23 referenced cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-TypedefDecl 0x293895cece8 <line:91:1, line:101:3> col:3 referenced SSL_TEST_SERVER_CONF 'struct SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-ElaboratedType 0x293895cec90 'struct SSL_TEST_SERVER_CONF' sugar
|   `-RecordType 0x293895cea00 'SSL_TEST_SERVER_CONF'
|     `-Record 0x293895ce968 ''
|-RecordDecl 0x293895ced58 <line:103:9, line:107:1> line:103:9 struct definition
| |-FieldDecl 0x293895cee40 <line:104:5, col:26> col:26 referenced client 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| |-FieldDecl 0x293895ceed0 <line:105:5, col:26> col:26 referenced server 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-FieldDecl 0x293895cef38 <line:106:5, col:26> col:26 referenced server2 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
|-TypedefDecl 0x293895cf068 <line:103:1, line:107:3> col:3 referenced SSL_TEST_EXTRA_CONF 'struct SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| `-ElaboratedType 0x293895cf010 'struct SSL_TEST_EXTRA_CONF' sugar
|   `-RecordType 0x293895cedf0 'SSL_TEST_EXTRA_CONF'
|     `-Record 0x293895ced58 ''
|-RecordDecl 0x293895cf140 <line:109:9, line:166:1> line:109:9 struct definition
| |-FieldDecl 0x293895cf230 <line:114:5, col:23> col:23 referenced method 'ssl_test_method_t':'ssl_test_method_t'
| |-FieldDecl 0x293895cf2c0 <line:116:5, col:26> col:26 referenced handshake_mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| |-FieldDecl 0x293895cf330 <line:121:5, col:9> col:9 referenced app_data_size 'int'
| |-FieldDecl 0x293895cf3a0 <line:123:5, col:9> col:9 referenced max_fragment_size 'int'
| |-FieldDecl 0x293895cf430 <line:129:5, col:25> col:25 referenced extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x293895cf498 <line:131:5, col:25> col:25 referenced resume_extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x293895cf520 <line:137:5, col:23> col:23 referenced expected_result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x293895cf590 <line:141:5, col:9> col:9 referenced expected_client_alert 'int'
| |-FieldDecl 0x293895cf600 <line:143:5, col:9> col:9 referenced expected_server_alert 'int'
| |-FieldDecl 0x293895cf670 <line:146:5, col:9> col:9 referenced expected_protocol 'int'
| |-FieldDecl 0x293895cf6d8 <line:157:5, col:22> col:22 referenced expected_servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x293895cf760 <line:158:5, col:26> col:26 referenced session_ticket_expected 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x293895cf7d0 <line:160:5, col:11> col:11 referenced expected_npn_protocol 'char *'
| |-FieldDecl 0x293895cf840 <line:161:5, col:11> col:11 referenced expected_alpn_protocol 'char *'
| |-FieldDecl 0x293895cf8b0 <line:163:5, col:9> col:9 referenced resumption_expected 'int'
| `-FieldDecl 0x293895cf920 <line:165:5, col:9> col:9 referenced expected_tmp_key_type 'int'
|-TypedefDecl 0x293895cf9d8 <line:109:1, line:166:3> col:3 referenced SSL_TEST_CTX 'struct SSL_TEST_CTX':'SSL_TEST_CTX'
| `-ElaboratedType 0x293895cf980 'struct SSL_TEST_CTX' sugar
|   `-RecordType 0x293895cf1e0 'SSL_TEST_CTX'
|     `-Record 0x293895cf140 ''
|-FunctionDecl 0x293895cfb70 <line:168:1, col:58> col:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| `-ParmVarDecl 0x293895cfa58 <col:34, col:52> col:52 result 'ssl_test_result_t':'ssl_test_result_t'
|-FunctionDecl 0x293895cfd30 <line:169:1, col:37> col:13 ssl_alert_name 'const char *(int)'
| `-ParmVarDecl 0x293895cfc48 <col:28, col:32> col:32 alert 'int'
|-FunctionDecl 0x293895cfeb8 <line:170:1, col:43> col:13 ssl_protocol_name 'const char *(int)'
| `-ParmVarDecl 0x293895cfe08 <col:31, col:35> col:35 protocol 'int'
|-FunctionDecl 0x293895d00a0 <line:171:1, col:75> col:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| `-ParmVarDecl 0x293895cff88 <col:38, col:60> col:60 verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-FunctionDecl 0x293895d12a0 <line:172:1, col:56> col:13 ssl_servername_name 'const char *(ssl_servername_t)'
| `-ParmVarDecl 0x293895d1190 <col:33, col:50> col:50 server 'ssl_servername_t':'ssl_servername_t'
|-FunctionDecl 0x293895d1480 <line:173:1, line:174:61> line:173:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| `-ParmVarDecl 0x293895d1370 <col:42, line:174:42> col:42 servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-FunctionDecl 0x293895d1660 <line:175:1, col:64> col:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| `-ParmVarDecl 0x293895d1550 <col:37, col:58> col:58 server 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-FunctionDecl 0x293895d1840 <line:176:1, col:58> col:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| `-ParmVarDecl 0x293895d1730 <col:34, col:52> col:52 method 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x293895d1a20 <line:177:1, col:62> col:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| `-ParmVarDecl 0x293895d1910 <col:37, col:58> col:58 mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x293895d1c00 <line:178:1, col:60> col:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| `-ParmVarDecl 0x293895d1af0 <col:36, col:56> col:56 mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x293895d1de0 <line:179:1, col:62> col:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| `-ParmVarDecl 0x293895d1cd0 <col:33, col:51> col:51 cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x293895d2170 <line:185:1, col:77> col:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
| |-ParmVarDecl 0x293895d1ed8 <col:35, col:47> col:47 invalid conf 'const int *'
| `-ParmVarDecl 0x293895d1f58 <col:53, col:65> col:65 test_section 'const char *'
|-FunctionDecl 0x293895d2318 <line:187:1, col:36> col:15 used SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
|-FunctionDecl 0x293895d24e8 <line:189:1, col:41> col:6 used SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| `-ParmVarDecl 0x293895d23e0 <col:24, col:38> col:38 ctx 'SSL_TEST_CTX *'
|-FunctionDecl 0x293895d2868 <.//openssl//file_jk/after\test/testutil.h:85:1, col:60> col:6 add_test 'void (const char *, int (*)())'
| |-ParmVarDecl 0x293895d25c0 <col:15, col:27> col:27 test_case_name 'const char *'
| `-ParmVarDecl 0x293895d2720 <col:43, col:59> col:49 test_fn 'int (*)()'
|-FunctionDecl 0x293895d2d38 <line:86:1, col:80> col:6 add_all_tests 'void (const char *, int (*)(int), int)'
| |-ParmVarDecl 0x293895d2948 <col:20, col:32> col:32 test_case_name 'const char *'
| |-ParmVarDecl 0x293895d2b48 <col:48, col:70> col:54 test_fn 'int (*)(int)'
| `-ParmVarDecl 0x293895d2bc8 <col:73, col:77> col:77 num 'int'
|-FunctionDecl 0x293895d2f00 <line:87:1, col:41> col:5 run_tests 'int (const char *)'
| `-ParmVarDecl 0x293895d2e20 <col:15, col:27> col:27 test_prog_name 'const char *'
|-FunctionDecl 0x293895720d0 <line:97:1, col:67> col:5 strings_equal 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x293895d2fd8 <col:19, col:31> col:31 desc 'const char *'
| |-ParmVarDecl 0x293895d3058 <col:37, col:49> col:49 s1 'const char *'
| `-ParmVarDecl 0x293895d30d8 <col:53, col:65> col:65 s2 'const char *'
|-VarDecl 0x293895721b8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:19:1, col:42> col:18 used default_app_data_size 'const int' static cinit
| `-IntegerLiteral 0x29389572220 <col:42> 'int' 256
|-VarDecl 0x29389572278 <line:21:1, col:46> col:18 used default_max_fragment_size 'const int' static cinit
| `-IntegerLiteral 0x293895722e0 <col:46> 'int' 512
|-FunctionDecl 0x293895724c0 <line:23:1, line:34:1> line:23:12 used parse_boolean 'int (const char *, int *)' static
| |-ParmVarDecl 0x29389572338 <col:26, col:38> col:38 used value 'const char *'
| |-ParmVarDecl 0x293895723b8 <col:45, col:50> col:50 used result 'int *'
| `-CompoundStmt 0x29389572ce8 <line:24:1, line:34:1>
|   |-IfStmt 0x29389572c88 <line:25:5, line:32:5> has_else
|   | |-BinaryOperator 0x293895728d0 <line:25:9, col:37> 'int' '=='
|   | | |-CallExpr 0x29389572830 <col:9, col:32> 'int'
|   | | | |-ImplicitCastExpr 0x29389572818 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x29389572708 <col:9> 'int (const char *, const char *)' Function 0x29389572588 'strcasecmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x29389572860 <col:20> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x29389572740 <col:20> 'const char *' lvalue ParmVar 0x29389572338 'value' 'const char *'
|   | | | `-ImplicitCastExpr 0x29389572890 <col:27> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x29389572878 <col:27> 'char *' <ArrayToPointerDecay>
|   | | |     `-StringLiteral 0x29389572798 <col:27> 'char [4]' lvalue "Yes"
|   | | `-IntegerLiteral 0x293895728a8 <col:37> 'int' 0
|   | |-CompoundStmt 0x293895729c0 <col:40, line:28:5>
|   | | |-BinaryOperator 0x29389572968 <line:26:9, col:19> 'int' '='
|   | | | |-UnaryOperator 0x29389572928 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x29389572910 <col:10> 'int *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x293895728f0 <col:10> 'int *' lvalue ParmVar 0x293895723b8 'result' 'int *'
|   | | | `-IntegerLiteral 0x29389572940 <col:19> 'int' 1
|   | | `-ReturnStmt 0x293895729b0 <line:27:9, col:16>
|   | |   `-IntegerLiteral 0x29389572988 <col:16> 'int' 1
|   | `-IfStmt 0x29389572c70 <line:29:10, line:32:5>
|   |   |-BinaryOperator 0x29389572b60 <line:29:14, col:41> 'int' '=='
|   |   | |-CallExpr 0x29389572ac0 <col:14, col:36> 'int'
|   |   | | |-ImplicitCastExpr 0x29389572aa8 <col:14> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x293895729e0 <col:14> 'int (const char *, const char *)' Function 0x29389572588 'strcasecmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x29389572af0 <col:25> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x29389572a00 <col:25> 'const char *' lvalue ParmVar 0x29389572338 'value' 'const char *'
|   |   | | `-ImplicitCastExpr 0x29389572b20 <col:32> 'const char *' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x29389572b08 <col:32> 'char *' <ArrayToPointerDecay>
|   |   | |     `-StringLiteral 0x29389572a58 <col:32> 'char [3]' lvalue "No"
|   |   | `-IntegerLiteral 0x29389572b38 <col:41> 'int' 0
|   |   `-CompoundStmt 0x29389572c50 <col:44, line:32:5>
|   |     |-BinaryOperator 0x29389572bf8 <line:30:9, col:19> 'int' '='
|   |     | |-UnaryOperator 0x29389572bb8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |     | | `-ImplicitCastExpr 0x29389572ba0 <col:10> 'int *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x29389572b80 <col:10> 'int *' lvalue ParmVar 0x293895723b8 'result' 'int *'
|   |     | `-IntegerLiteral 0x29389572bd0 <col:19> 'int' 0
|   |     `-ReturnStmt 0x29389572c40 <line:31:9, col:16>
|   |       `-IntegerLiteral 0x29389572c18 <col:16> 'int' 1
|   `-ReturnStmt 0x29389572cd8 <line:33:5, col:12>
|     `-IntegerLiteral 0x29389572cb0 <col:12> 'int' 0
|-FunctionDecl 0x29389572588 <line:25:9> col:9 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x29389572628 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x29389572690 <<invalid sloc>> <invalid sloc> 'const char *'
|-RecordDecl 0x29389572d08 <line:59:9, line:62:1> line:59:9 struct definition
| |-FieldDecl 0x29389572dd8 <line:60:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x29389572e48 <line:61:5, col:9> col:9 referenced value 'int'
|-TypedefDecl 0x29389572ef8 <line:59:1, line:62:3> col:3 referenced test_enum 'struct test_enum':'test_enum'
| `-ElaboratedType 0x29389572ea0 'struct test_enum' sugar
|   `-RecordType 0x29389572da0 'test_enum'
|     `-Record 0x29389572d08 ''
|-FunctionDecl 0x2938957a3d0 <line:65:1, line:76:1> line:65:19 invalid parse_enum 'int (const test_enum *, size_t, int *, const char *)' static
| |-ParmVarDecl 0x2938957a0b0 <col:30, col:47> col:47 used enums 'const test_enum *'
| |-ParmVarDecl 0x2938957a128 <col:54, col:61> col:61 used num_enums 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2938957a1a8 <line:66:30, col:35> col:35 used value 'int *'
| |-ParmVarDecl 0x2938957a228 <col:42, col:54> col:54 used name 'const char *'
| `-CompoundStmt 0x2938957aac8 <line:67:1, line:76:1>
|   |-DeclStmt 0x2938957a520 <line:68:5, col:13>
|   | `-VarDecl 0x2938957a4b8 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-ForStmt 0x2938957aa58 <line:69:5, line:74:5>
|   | |-BinaryOperator 0x2938957a5b0 <line:69:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x2938957a538 <col:10> 'size_t':'unsigned long long' lvalue Var 0x2938957a4b8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2938957a598 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2938957a570 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2938957a640 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x2938957a610 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2938957a5d0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x2938957a4b8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2938957a628 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2938957a5f0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x2938957a128 'num_enums' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x2938957a680 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x2938957a660 <col:32> 'size_t':'unsigned long long' lvalue Var 0x2938957a4b8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x2938957aa40 <col:37, line:74:5>
|   |   `-IfStmt 0x2938957aa28 <line:70:9, line:73:9>
|   |     |-BinaryOperator 0x2938957a868 <line:70:13, col:44> 'int' '=='
|   |     | |-CallExpr 0x2938957a7e0 <col:13, col:39> 'int'
|   |     | | |-ImplicitCastExpr 0x2938957a7c8 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x2938957a698 <col:13> 'int (const char *, const char *)' Function 0x29389539d70 'strcmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x2938957a810 <col:20, col:29> 'const char *' <LValueToRValue>
|   |     | | | `-MemberExpr 0x2938957a748 <col:20, col:29> 'const char *const' lvalue .name 0x29389572dd8
|   |     | | |   `-ArraySubscriptExpr 0x2938957a728 <col:20, col:27> 'const test_enum':'const test_enum' lvalue
|   |     | | |     |-ImplicitCastExpr 0x2938957a6f8 <col:20> 'const test_enum *' <LValueToRValue>
|   |     | | |     | `-DeclRefExpr 0x2938957a6b8 <col:20> 'const test_enum *' lvalue ParmVar 0x2938957a0b0 'enums' 'const test_enum *'
|   |     | | |     `-ImplicitCastExpr 0x2938957a710 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x2938957a6d8 <col:26> 'size_t':'unsigned long long' lvalue Var 0x2938957a4b8 'i' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x2938957a828 <col:35> 'const char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x2938957a778 <col:35> 'const char *' lvalue ParmVar 0x2938957a228 'name' 'const char *'
|   |     | `-IntegerLiteral 0x2938957a840 <col:44> 'int' 0
|   |     `-CompoundStmt 0x2938957aa08 <col:47, line:73:9>
|   |       |-BinaryOperator 0x2938957a9b0 <line:71:13, col:31> 'int' '='
|   |       | |-UnaryOperator 0x2938957a8c0 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |       | | `-ImplicitCastExpr 0x2938957a8a8 <col:14> 'int *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x2938957a888 <col:14> 'int *' lvalue ParmVar 0x2938957a1a8 'value' 'int *'
|   |       | `-ImplicitCastExpr 0x2938957a998 <col:22, col:31> 'int' <LValueToRValue>
|   |       |   `-MemberExpr 0x2938957a968 <col:22, col:31> 'const int' lvalue .value 0x29389572e48
|   |       |     `-ArraySubscriptExpr 0x2938957a948 <col:22, col:29> 'const test_enum':'const test_enum' lvalue
|   |       |       |-ImplicitCastExpr 0x2938957a918 <col:22> 'const test_enum *' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x2938957a8d8 <col:22> 'const test_enum *' lvalue ParmVar 0x2938957a0b0 'enums' 'const test_enum *'
|   |       |       `-ImplicitCastExpr 0x2938957a930 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x2938957a8f8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x2938957a4b8 'i' 'size_t':'unsigned long long'
|   |       `-ReturnStmt 0x2938957a9f8 <line:72:13, col:20>
|   |         `-IntegerLiteral 0x2938957a9d0 <col:20> 'int' 1
|   `-ReturnStmt 0x2938957aab8 <line:75:5, col:12>
|     `-IntegerLiteral 0x2938957aa90 <col:12> 'int' 0
|-FunctionDecl 0x2938957ad70 <line:78:1, line:88:1> line:78:20 used enum_name 'const char *(const test_enum *, size_t, int)' static
| |-ParmVarDecl 0x2938957ab00 <col:30, col:47> col:47 used enums 'const test_enum *'
| |-ParmVarDecl 0x2938957ab78 <col:54, col:61> col:61 used num_enums 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2938957abf8 <line:79:30, col:34> col:34 used value 'int'
| `-CompoundStmt 0x29389579370 <line:80:1, line:88:1>
|   |-DeclStmt 0x2938957aeb8 <line:81:5, col:13>
|   | `-VarDecl 0x2938957ae50 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-ForStmt 0x29389579290 <line:82:5, line:86:5>
|   | |-BinaryOperator 0x2938957af48 <line:82:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x2938957aed0 <col:10> 'size_t':'unsigned long long' lvalue Var 0x2938957ae50 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2938957af30 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2938957af08 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2938957afd8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x2938957afa8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2938957af68 <col:17> 'size_t':'unsigned long long' lvalue Var 0x2938957ae50 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2938957afc0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2938957af88 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x2938957ab78 'num_enums' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x2938957b018 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x2938957aff8 <col:32> 'size_t':'unsigned long long' lvalue Var 0x2938957ae50 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x29389579278 <col:37, line:86:5>
|   |   `-IfStmt 0x29389579260 <line:83:9, line:85:9>
|   |     |-BinaryOperator 0x29389579140 <line:83:13, col:31> 'int' '=='
|   |     | |-ImplicitCastExpr 0x29389579110 <col:13, col:22> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x293895790c0 <col:13, col:22> 'const int' lvalue .value 0x29389572e48
|   |     | |   `-ArraySubscriptExpr 0x293895790a0 <col:13, col:20> 'const test_enum':'const test_enum' lvalue
|   |     | |     |-ImplicitCastExpr 0x2938957b070 <col:13> 'const test_enum *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x2938957b030 <col:13> 'const test_enum *' lvalue ParmVar 0x2938957ab00 'enums' 'const test_enum *'
|   |     | |     `-ImplicitCastExpr 0x2938957b088 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x2938957b050 <col:19> 'size_t':'unsigned long long' lvalue Var 0x2938957ae50 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x29389579128 <col:31> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x293895790f0 <col:31> 'int' lvalue ParmVar 0x2938957abf8 'value' 'int'
|   |     `-CompoundStmt 0x29389579248 <col:38, line:85:9>
|   |       `-ReturnStmt 0x29389579238 <line:84:13, col:29>
|   |         `-ImplicitCastExpr 0x29389579220 <col:20, col:29> 'const char *' <LValueToRValue>
|   |           `-MemberExpr 0x293895791f0 <col:20, col:29> 'const char *const' lvalue .name 0x29389572dd8
|   |             `-ArraySubscriptExpr 0x293895791d0 <col:20, col:27> 'const test_enum':'const test_enum' lvalue
|   |               |-ImplicitCastExpr 0x293895791a0 <col:20> 'const test_enum *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x29389579160 <col:20> 'const test_enum *' lvalue ParmVar 0x2938957ab00 'enums' 'const test_enum *'
|   |               `-ImplicitCastExpr 0x293895791b8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |                 `-DeclRefExpr 0x29389579180 <col:26> 'size_t':'unsigned long long' lvalue Var 0x2938957ae50 'i' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x29389579360 <line:87:5, col:12>
|     `-ImplicitCastExpr 0x29389579348 <col:12> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x29389579330 <col:12> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x29389579308 <col:12> 'char [13]' lvalue "InvalidValue"
|-VarDecl 0x29389579418 <line:93:1, line:98:1> line:93:24 used ssl_test_results 'const test_enum [4]' static cinit
| `-InitListExpr 0x29389579848 <col:45, line:98:1> 'const test_enum [4]'
|   |-InitListExpr 0x29389579898 <line:94:5, col:33> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x29389579900 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x293895798e8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x293895794b8 <col:6> 'char [8]' lvalue "Success"
|   | `-DeclRefExpr 0x293895794d8 <col:17> 'int' EnumConstant 0x293895d0a60 'SSL_TEST_SUCCESS' 'int'
|   |-InitListExpr 0x29389579930 <line:95:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x29389579998 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x29389579980 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389579588 <col:6> 'char [11]' lvalue "ServerFail"
|   | `-DeclRefExpr 0x293895795b0 <col:20> 'int' EnumConstant 0x293895d0ab8 'SSL_TEST_SERVER_FAIL' 'int'
|   |-InitListExpr 0x293895799d0 <line:96:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x29389579a38 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x29389579a20 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389579620 <col:6> 'char [11]' lvalue "ClientFail"
|   | `-DeclRefExpr 0x29389579648 <col:20> 'int' EnumConstant 0x293895d0b10 'SSL_TEST_CLIENT_FAIL' 'int'
|   `-InitListExpr 0x29389579a80 <line:97:5, col:46> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x29389579ae8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x29389579ad0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x293895796f8 <col:6> 'char [14]' lvalue "InternalError"
|     `-DeclRefExpr 0x29389579720 <col:23> 'int' EnumConstant 0x293895d0b68 'SSL_TEST_INTERNAL_ERROR' 'int'
|-FunctionDecl 0x29389579d50 <line:100:1, line:109:1> line:100:19 invalid parse_expected_result 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x29389579b88 <col:41, col:55> col:55 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x29389579c08 <col:65, col:77> col:77 used value 'const char *'
| `-CompoundStmt 0x29389573208 <line:101:1, line:109:1>
|   |-DeclStmt 0x29389579e98 <line:102:5, col:18>
|   | `-VarDecl 0x29389579e30 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x293895730e0 <line:103:5, line:106:5>
|   | |-OpaqueValueExpr 0x293895730c8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x293895730b0 <line:104:41, line:106:5>
|   |   `-ReturnStmt 0x293895730a0 <line:105:9, col:16>
|   |     `-IntegerLiteral 0x29389573078 <col:16> 'int' 0
|   |-BinaryOperator 0x293895731b0 <line:107:5, col:33> 'ssl_test_result_t':'ssl_test_result_t' '='
|   | |-MemberExpr 0x29389573130 <col:5, col:15> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->expected_result 0x293895cf520
|   | | `-ImplicitCastExpr 0x29389573118 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x293895730f8 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389579b88 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x29389573198 <col:33> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x29389573180 <col:33> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389573160 <col:33> 'int' lvalue Var 0x29389579e30 'ret_value' 'int'
|   `-ReturnStmt 0x293895731f8 <line:108:5, col:12>
|     `-IntegerLiteral 0x293895731d0 <col:12> 'int' 1
|-FunctionDecl 0x293895732f8 prev 0x293895cfb70 <line:111:1, line:114:1> line:111:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| |-ParmVarDecl 0x29389573248 <col:34, col:52> col:52 used result 'ssl_test_result_t':'ssl_test_result_t'
| `-CompoundStmt 0x293895735b8 <line:112:1, line:114:1>
|   `-ReturnStmt 0x293895735a8 <line:113:5, col:76>
|     `-CallExpr 0x29389573510 <col:12, col:76> 'const char *'
|       |-ImplicitCastExpr 0x293895734f8 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x293895733a0 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x29389573548 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x293895733c0 <col:22> 'const test_enum [4]' lvalue Var 0x29389579418 'ssl_test_results' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x29389573560 <col:40, col:67> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x29389573438 <col:40, col:67> 'int'
|       |   |-ImplicitCastExpr 0x29389573420 <col:40> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x293895733e0 <col:40> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x29389573460 <col:51> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x29389573400 <col:51> 'const test_enum [4]' lvalue Var 0x29389579418 'ssl_test_results' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x29389573590 <col:70> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x29389573578 <col:70> 'ssl_test_result_t':'ssl_test_result_t' <LValueToRValue>
|           `-DeclRefExpr 0x29389573478 <col:70> 'ssl_test_result_t':'ssl_test_result_t' lvalue ParmVar 0x29389573248 'result' 'ssl_test_result_t':'ssl_test_result_t'
|-VarDecl 0x293895735f0 <line:118:1, col:35> col:24 used ssl_alerts 'const test_enum []' static
|-FunctionDecl 0x293895739d0 <line:126:1, line:129:1> line:126:19 invalid parse_alert 'int (int *, const char *)' static
| |-ParmVarDecl 0x29389573848 <col:31, col:36> col:36 used alert 'int *'
| |-ParmVarDecl 0x293895738c8 <col:43, col:55> col:55 used value 'const char *'
| `-CompoundStmt 0x29389573b90 <line:127:1, line:129:1>
|-FunctionDecl 0x29389573d00 <line:131:1, line:134:1> line:131:19 invalid parse_client_alert 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x29389573bb0 <col:38, col:52> col:52 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x29389573c30 <col:62, col:74> col:74 used value 'const char *'
| `-CompoundStmt 0x29389573e68 <line:132:1, line:134:1>
|-FunctionDecl 0x2938957b0c0 <line:136:1, line:139:1> line:136:19 invalid parse_server_alert 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x29389573e88 <col:38, col:52> col:52 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x29389573f08 <col:62, col:74> col:74 used value 'const char *'
| `-CompoundStmt 0x2938957b228 <line:137:1, line:139:1>
|-FunctionDecl 0x2938957b300 prev 0x293895cfd30 <line:141:1, line:144:1> line:141:13 ssl_alert_name 'const char *(int)'
| |-ParmVarDecl 0x2938957b250 <col:28, col:32> col:32 used alert 'int'
| `-CompoundStmt 0x2938957b548 <line:142:1, line:144:1>
|   `-ReturnStmt 0x2938957b538 <line:143:5, col:63>
|     `-CallExpr 0x2938957b4b8 <col:12, col:63> 'const char *'
|       |-ImplicitCastExpr 0x2938957b4a0 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2938957b3a8 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x2938957b4f0 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x2938957b3c8 <col:22> 'const test_enum []' lvalue Var 0x293895735f0 'ssl_alerts' 'const test_enum []'
|       |-ImplicitCastExpr 0x2938957b508 <col:34, col:55> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x2938957b440 <col:34, col:55> 'int'
|       |   |-ImplicitCastExpr 0x2938957b428 <col:34> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x2938957b3e8 <col:34> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x2938957b468 <col:45> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x2938957b408 <col:45> 'const test_enum []' lvalue Var 0x293895735f0 'ssl_alerts' 'const test_enum []'
|       `-ImplicitCastExpr 0x2938957b520 <col:58> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x2938957b480 <col:58> 'int' lvalue ParmVar 0x2938957b250 'alert' 'int'
|-VarDecl 0x2938957b580 <line:148:1, col:38> col:24 used ssl_protocols 'const test_enum []' static
|-FunctionDecl 0x2938957b8e0 <line:157:1, line:161:1> line:157:19 invalid parse_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x2938957b790 <col:34, col:48> col:48 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x2938957b810 <col:58, col:70> col:70 used value 'const char *'
| `-CompoundStmt 0x2938957bb00 <line:158:1, line:161:1>
|-FunctionDecl 0x2938957bbd8 prev 0x293895cfeb8 <line:163:1, line:166:1> line:163:13 ssl_protocol_name 'const char *(int)'
| |-ParmVarDecl 0x2938957bb28 <col:31, col:35> col:35 used protocol 'int'
| `-CompoundStmt 0x2938957be20 <line:164:1, line:166:1>
|   `-ReturnStmt 0x2938957be10 <line:165:5, col:72>
|     `-CallExpr 0x2938957bd90 <col:12, col:72> 'const char *'
|       |-ImplicitCastExpr 0x2938957bd78 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2938957bc80 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x2938957bdc8 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x2938957bca0 <col:22> 'const test_enum []' lvalue Var 0x2938957b580 'ssl_protocols' 'const test_enum []'
|       |-ImplicitCastExpr 0x2938957bde0 <col:37, col:61> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x2938957bd18 <col:37, col:61> 'int'
|       |   |-ImplicitCastExpr 0x2938957bd00 <col:37> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x2938957bcc0 <col:37> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x2938957bd40 <col:48> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x2938957bce0 <col:48> 'const test_enum []' lvalue Var 0x2938957b580 'ssl_protocols' 'const test_enum []'
|       `-ImplicitCastExpr 0x2938957bdf8 <col:64> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x2938957bd58 <col:64> 'int' lvalue ParmVar 0x2938957bb28 'protocol' 'int'
|-VarDecl 0x2938957be58 <line:170:1, line:174:1> line:170:24 used ssl_verify_callbacks 'const test_enum [3]' static cinit
| `-InitListExpr 0x29389577120 <col:49, line:174:1> 'const test_enum [3]'
|   |-InitListExpr 0x29389577170 <line:171:5, col:34> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x293895771d8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x293895771c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2938957bef8 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x2938957bf18 <col:14> 'int' EnumConstant 0x293895d0e00 'SSL_TEST_VERIFY_NONE' 'int'
|   |-InitListExpr 0x29389577208 <line:172:5, col:45> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x29389577270 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x29389577258 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2938957bf88 <col:6> 'char [10]' lvalue "AcceptAll"
|   | `-DeclRefExpr 0x2938957bfb0 <col:19> 'int' EnumConstant 0x293895d0e58 'SSL_TEST_VERIFY_ACCEPT_ALL' 'int'
|   `-InitListExpr 0x293895772a8 <line:173:5, col:45> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x29389577310 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x293895772f8 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x2938957c020 <col:6> 'char [10]' lvalue "RejectAll"
|     `-DeclRefExpr 0x2938957c048 <col:19> 'int' EnumConstant 0x293895d0eb0 'SSL_TEST_VERIFY_REJECT_ALL' 'int'
|-FunctionDecl 0x29389577600 <line:176:1, line:186:1> line:176:19 invalid parse_client_verify_callback 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x29389577438 <col:48, col:70> col:70 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x293895774b8 <line:177:48, col:60> col:60 used value 'const char *'
| `-CompoundStmt 0x29389577a18 <line:178:1, line:186:1>
|   |-DeclStmt 0x29389577748 <line:179:5, col:18>
|   | `-VarDecl 0x293895776e0 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x293895778f0 <line:180:5, line:183:5>
|   | |-OpaqueValueExpr 0x293895778d8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x293895778c0 <line:181:41, line:183:5>
|   |   `-ReturnStmt 0x293895778b0 <line:182:9, col:16>
|   |     `-IntegerLiteral 0x29389577888 <col:16> 'int' 0
|   |-BinaryOperator 0x293895779c0 <line:184:5, col:36> 'ssl_verify_callback_t':'ssl_verify_callback_t' '='
|   | |-MemberExpr 0x29389577940 <col:5, col:18> 'ssl_verify_callback_t':'ssl_verify_callback_t' lvalue ->verify_callback 0x293895ce5d0
|   | | `-ImplicitCastExpr 0x29389577928 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389577908 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x29389577438 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x293895779a8 <col:36> 'ssl_verify_callback_t':'ssl_verify_callback_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x29389577990 <col:36> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389577970 <col:36> 'int' lvalue Var 0x293895776e0 'ret_value' 'int'
|   `-ReturnStmt 0x29389577a08 <line:185:5, col:12>
|     `-IntegerLiteral 0x293895779e0 <col:12> 'int' 1
|-FunctionDecl 0x29389577b08 prev 0x293895d00a0 <line:188:1, line:192:1> line:188:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| |-ParmVarDecl 0x29389577a58 <col:38, col:60> col:60 used callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| `-CompoundStmt 0x29389577d68 <line:189:1, line:192:1>
|   `-ReturnStmt 0x29389577d58 <line:190:5, line:191:30>
|     `-CallExpr 0x29389577cc0 <line:190:12, line:191:30> 'const char *'
|       |-ImplicitCastExpr 0x29389577ca8 <line:190:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x29389577bb0 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x29389577cf8 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x29389577bd0 <col:22> 'const test_enum [3]' lvalue Var 0x2938957be58 'ssl_verify_callbacks' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x29389577d10 <col:44, col:75> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x29389577c48 <col:44, col:75> 'int'
|       |   |-ImplicitCastExpr 0x29389577c30 <col:44> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x29389577bf0 <col:44> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x29389577c70 <col:55> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x29389577c10 <col:55> 'const test_enum [3]' lvalue Var 0x2938957be58 'ssl_verify_callbacks' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x29389577d40 <line:191:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x29389577d28 <col:22> 'ssl_verify_callback_t':'ssl_verify_callback_t' <LValueToRValue>
|           `-DeclRefExpr 0x29389577c88 <col:22> 'ssl_verify_callback_t':'ssl_verify_callback_t' lvalue ParmVar 0x29389577a58 'callback' 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-VarDecl 0x29389577da0 <line:196:1, line:201:1> line:196:24 used ssl_servername 'const test_enum [4]' static cinit
| `-InitListExpr 0x29389574108 <col:43, line:201:1> 'const test_enum [4]'
|   |-InitListExpr 0x29389574158 <line:197:5, col:38> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x293895741c0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x293895741a8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389577e08 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x29389577e28 <col:14> 'int' EnumConstant 0x293895d10f0 'SSL_TEST_SERVERNAME_NONE' 'int'
|   |-InitListExpr 0x293895741f0 <line:198:5, col:44> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x29389574258 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x29389574240 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389577e98 <col:6> 'char [8]' lvalue "server1"
|   | `-DeclRefExpr 0x29389577eb8 <col:17> 'int' EnumConstant 0x293895cd120 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|   |-InitListExpr 0x29389574290 <line:199:5, col:44> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x293895742f8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x293895742e0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389577f28 <col:6> 'char [8]' lvalue "server2"
|   | `-DeclRefExpr 0x29389577f48 <col:17> 'int' EnumConstant 0x293895cd178 'SSL_TEST_SERVERNAME_SERVER2' 'int'
|   `-InitListExpr 0x29389574340 <line:200:5, col:44> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x293895743a8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x29389574390 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x29389577fb8 <col:6> 'char [8]' lvalue "invalid"
|     `-DeclRefExpr 0x29389577fd8 <col:17> 'int' EnumConstant 0x293895cd1d0 'SSL_TEST_SERVERNAME_INVALID' 'int'
|-FunctionDecl 0x29389574520 <line:203:1, line:213:1> line:203:19 invalid parse_servername 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x293895743d0 <col:36, col:58> col:58 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x29389574450 <line:204:36, col:48> col:48 used value 'const char *'
| `-CompoundStmt 0x29389574938 <line:205:1, line:213:1>
|   |-DeclStmt 0x29389574668 <line:206:5, col:18>
|   | `-VarDecl 0x29389574600 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x29389574810 <line:207:5, line:210:5>
|   | |-OpaqueValueExpr 0x293895747f8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x293895747e0 <line:208:41, line:210:5>
|   |   `-ReturnStmt 0x293895747d0 <line:209:9, col:16>
|   |     `-IntegerLiteral 0x293895747a8 <col:16> 'int' 0
|   |-BinaryOperator 0x293895748e0 <line:211:5, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x29389574860 <col:5, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x293895ce660
|   | | `-ImplicitCastExpr 0x29389574848 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389574828 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x293895743d0 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x293895748c8 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x293895748b0 <col:31> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389574890 <col:31> 'int' lvalue Var 0x29389574600 'ret_value' 'int'
|   `-ReturnStmt 0x29389574928 <line:212:5, col:12>
|     `-IntegerLiteral 0x29389574900 <col:12> 'int' 1
|-FunctionDecl 0x29389574ac8 <line:215:1, line:225:1> line:215:19 invalid parse_expected_servername 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x29389574978 <col:45, col:59> col:59 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x293895749f8 <line:216:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x29389574ee0 <line:217:1, line:225:1>
|   |-DeclStmt 0x29389574c10 <line:218:5, col:18>
|   | `-VarDecl 0x29389574ba8 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x29389574db8 <line:219:5, line:222:5>
|   | |-OpaqueValueExpr 0x29389574da0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x29389574d88 <line:220:41, line:222:5>
|   |   `-ReturnStmt 0x29389574d78 <line:221:9, col:16>
|   |     `-IntegerLiteral 0x29389574d50 <col:16> 'int' 0
|   |-BinaryOperator 0x29389574e88 <line:223:5, col:37> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x29389574e08 <col:5, col:15> 'ssl_servername_t':'ssl_servername_t' lvalue ->expected_servername 0x293895cf6d8
|   | | `-ImplicitCastExpr 0x29389574df0 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389574dd0 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389574978 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x29389574e70 <col:37> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x29389574e58 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389574e38 <col:37> 'int' lvalue Var 0x29389574ba8 'ret_value' 'int'
|   `-ReturnStmt 0x29389574ed0 <line:224:5, col:12>
|     `-IntegerLiteral 0x29389574ea8 <col:12> 'int' 1
|-FunctionDecl 0x29389578090 prev 0x293895d12a0 <line:227:1, line:231:1> line:227:13 ssl_servername_name 'const char *(ssl_servername_t)'
| |-ParmVarDecl 0x29389574f20 <col:33, col:50> col:50 used server 'ssl_servername_t':'ssl_servername_t'
| `-CompoundStmt 0x293895782f0 <line:228:1, line:231:1>
|   `-ReturnStmt 0x293895782e0 <line:229:5, line:230:28>
|     `-CallExpr 0x29389578248 <line:229:12, line:230:28> 'const char *'
|       |-ImplicitCastExpr 0x29389578230 <line:229:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x29389578138 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x29389578280 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x29389578158 <col:22> 'const test_enum [4]' lvalue Var 0x29389577da0 'ssl_servername' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x29389578298 <col:38, col:63> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x293895781d0 <col:38, col:63> 'int'
|       |   |-ImplicitCastExpr 0x293895781b8 <col:38> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x29389578178 <col:38> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x293895781f8 <col:49> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x29389578198 <col:49> 'const test_enum [4]' lvalue Var 0x29389577da0 'ssl_servername' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x293895782c8 <line:230:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x293895782b0 <col:22> 'ssl_servername_t':'ssl_servername_t' <LValueToRValue>
|           `-DeclRefExpr 0x29389578210 <col:22> 'ssl_servername_t':'ssl_servername_t' lvalue ParmVar 0x29389574f20 'server' 'ssl_servername_t':'ssl_servername_t'
|-VarDecl 0x29389578328 <line:235:1, line:239:1> line:235:24 used ssl_servername_callbacks 'const test_enum [3]' static cinit
| `-InitListExpr 0x293895785f0 <col:53, line:239:1> 'const test_enum [3]'
|   |-InitListExpr 0x29389578640 <line:236:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x293895786a8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x29389578690 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389578390 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x293895783b0 <col:14> 'int' EnumConstant 0x293895cd410 'SSL_TEST_SERVERNAME_CB_NONE' 'int'
|   |-InitListExpr 0x293895786d8 <line:237:5, col:59> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x29389578740 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x29389578728 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389578420 <col:6> 'char [15]' lvalue "IgnoreMismatch"
|   | `-DeclRefExpr 0x29389578448 <col:24> 'int' EnumConstant 0x293895cd468 'SSL_TEST_SERVERNAME_IGNORE_MISMATCH' 'int'
|   `-InitListExpr 0x29389578778 <line:238:5, col:59> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x293895787e0 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x293895787c8 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x293895784b8 <col:6> 'char [15]' lvalue "RejectMismatch"
|     `-DeclRefExpr 0x293895784e0 <col:24> 'int' EnumConstant 0x293895cd4c0 'SSL_TEST_SERVERNAME_REJECT_MISMATCH' 'int'
|-FunctionDecl 0x29389578a50 <line:241:1, line:251:1> line:241:19 invalid parse_servername_callback 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x29389578888 <col:45, col:67> col:67 used server_conf 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x29389578908 <line:242:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x29389578e68 <line:243:1, line:251:1>
|   |-DeclStmt 0x29389578b98 <line:244:5, col:18>
|   | `-VarDecl 0x29389578b30 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x29389578d40 <line:245:5, line:248:5>
|   | |-OpaqueValueExpr 0x29389578d28 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x29389578d10 <line:246:79, line:248:5>
|   |   `-ReturnStmt 0x29389578d00 <line:247:9, col:16>
|   |     `-IntegerLiteral 0x29389578cd8 <col:16> 'int' 0
|   |-BinaryOperator 0x29389578e10 <line:249:5, col:40> 'ssl_servername_callback_t':'ssl_servername_callback_t' '='
|   | |-MemberExpr 0x29389578d90 <col:5, col:18> 'ssl_servername_callback_t':'ssl_servername_callback_t' lvalue ->servername_callback 0x293895cea50
|   | | `-ImplicitCastExpr 0x29389578d78 <col:5> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389578d58 <col:5> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x29389578888 'server_conf' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x29389578df8 <col:40> 'ssl_servername_callback_t':'ssl_servername_callback_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x29389578de0 <col:40> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389578dc0 <col:40> 'int' lvalue Var 0x29389578b30 'ret_value' 'int'
|   `-ReturnStmt 0x29389578e58 <line:250:5, col:12>
|     `-IntegerLiteral 0x29389578e30 <col:12> 'int' 1
|-FunctionDecl 0x29389578f58 prev 0x293895d1480 <line:253:1, line:257:1> line:253:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| |-ParmVarDecl 0x29389578ea8 <col:42, col:68> col:68 used callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| `-CompoundStmt 0x2938957c208 <line:254:1, line:257:1>
|   `-ReturnStmt 0x2938957c1f8 <line:255:5, line:256:68>
|     `-CallExpr 0x2938957c160 <line:255:12, line:256:68> 'const char *'
|       |-ImplicitCastExpr 0x2938957c148 <line:255:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x29389579000 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x2938957c198 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x29389579020 <col:22> 'const test_enum [3]' lvalue Var 0x29389578328 'ssl_servername_callbacks' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x2938957c1b0 <line:256:22, col:57> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x2938957c0e8 <col:22, col:57> 'int'
|       |   |-ImplicitCastExpr 0x2938957c0d0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x29389579040 <col:22> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x2938957c110 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x29389579060 <col:33> 'const test_enum [3]' lvalue Var 0x29389578328 'ssl_servername_callbacks' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x2938957c1e0 <col:60> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x2938957c1c8 <col:60> 'ssl_servername_callback_t':'ssl_servername_callback_t' <LValueToRValue>
|           `-DeclRefExpr 0x2938957c128 <col:60> 'ssl_servername_callback_t':'ssl_servername_callback_t' lvalue ParmVar 0x29389578ea8 'callback' 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-VarDecl 0x2938957c240 <line:261:1, line:265:1> line:261:24 used ssl_session_ticket 'const test_enum [3]' static cinit
| `-InitListExpr 0x2938957c4f8 <col:47, line:265:1> 'const test_enum [3]'
|   |-InitListExpr 0x2938957c548 <line:262:5, col:46> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x2938957c5b0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2938957c598 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2938957c2a8 <col:6> 'char [7]' lvalue "Ignore"
|   | `-DeclRefExpr 0x2938957c2c8 <col:16> 'int' EnumConstant 0x293895cd700 'SSL_TEST_SESSION_TICKET_IGNORE' 'int'
|   |-InitListExpr 0x2938957c5e0 <line:263:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x2938957c648 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2938957c630 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2938957c338 <col:6> 'char [4]' lvalue "Yes"
|   | `-DeclRefExpr 0x2938957c358 <col:13> 'int' EnumConstant 0x293895cd758 'SSL_TEST_SESSION_TICKET_YES' 'int'
|   `-InitListExpr 0x2938957c680 <line:264:5, col:38> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x2938957c6e8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x2938957c6d0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x2938957c3c8 <col:6> 'char [3]' lvalue "No"
|     `-DeclRefExpr 0x2938957c3e8 <col:12> 'int' EnumConstant 0x293895cd7b0 'SSL_TEST_SESSION_TICKET_NO' 'int'
|-FunctionDecl 0x2938957c880 <line:267:1, line:276:1> line:267:19 invalid parse_session_ticket 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x2938957c730 <col:40, col:54> col:54 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x2938957c7b0 <col:64, col:76> col:76 used value 'const char *'
| `-CompoundStmt 0x2938957cc98 <line:268:1, line:276:1>
|   |-DeclStmt 0x2938957c9c8 <line:269:5, col:18>
|   | `-VarDecl 0x2938957c960 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x2938957cb70 <line:270:5, line:273:5>
|   | |-OpaqueValueExpr 0x2938957cb58 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2938957cb40 <line:271:41, line:273:5>
|   |   `-ReturnStmt 0x2938957cb30 <line:272:9, col:16>
|   |     `-IntegerLiteral 0x2938957cb08 <col:16> 'int' 0
|   |-BinaryOperator 0x2938957cc40 <line:274:5, col:41> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   | |-MemberExpr 0x2938957cbc0 <col:5, col:15> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket_expected 0x293895cf760
|   | | `-ImplicitCastExpr 0x2938957cba8 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2938957cb88 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x2938957c730 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x2938957cc28 <col:41> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2938957cc10 <col:41> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2938957cbf0 <col:41> 'int' lvalue Var 0x2938957c960 'ret_value' 'int'
|   `-ReturnStmt 0x2938957cc88 <line:275:5, col:12>
|     `-IntegerLiteral 0x2938957cc60 <col:12> 'int' 1
|-FunctionDecl 0x2938957cd88 prev 0x293895d1660 <line:278:1, line:283:1> line:278:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| |-ParmVarDecl 0x2938957ccd8 <col:37, col:58> col:58 used server 'ssl_session_ticket_t':'ssl_session_ticket_t'
| `-CompoundStmt 0x2938957cfe8 <line:279:1, line:283:1>
|   `-ReturnStmt 0x2938957cfd8 <line:280:5, line:282:28>
|     `-CallExpr 0x2938957cf40 <line:280:12, line:282:28> 'const char *'
|       |-ImplicitCastExpr 0x2938957cf28 <line:280:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2938957ce30 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x2938957cf78 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x2938957ce50 <col:22> 'const test_enum [3]' lvalue Var 0x2938957c240 'ssl_session_ticket' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x2938957cf90 <line:281:22, col:51> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x2938957cec8 <col:22, col:51> 'int'
|       |   |-ImplicitCastExpr 0x2938957ceb0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x2938957ce70 <col:22> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x2938957cef0 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x2938957ce90 <col:33> 'const test_enum [3]' lvalue Var 0x2938957c240 'ssl_session_ticket' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x2938957cfc0 <line:282:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x2938957cfa8 <col:22> 'ssl_session_ticket_t':'ssl_session_ticket_t' <LValueToRValue>
|           `-DeclRefExpr 0x2938957cf08 <col:22> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ParmVar 0x2938957ccd8 'server' 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-VarDecl 0x2938957d020 <line:287:1, line:290:1> line:287:24 used ssl_test_methods 'const test_enum [2]' static cinit
| `-InitListExpr 0x293895751c8 <col:45, line:290:1> 'const test_enum [2]'
|   |-InitListExpr 0x29389575218 <line:288:5, col:32> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x29389575280 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x29389575268 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2938957d088 <col:6> 'char [4]' lvalue "TLS"
|   | `-DeclRefExpr 0x2938957d0a8 <col:13> 'int' EnumConstant 0x293895cda40 'SSL_TEST_METHOD_TLS' 'int'
|   `-InitListExpr 0x293895752b0 <line:289:5, col:34> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x29389575318 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x29389575300 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x293895750b0 <col:6> 'char [5]' lvalue "DTLS"
|     `-DeclRefExpr 0x293895750d0 <col:14> 'int' EnumConstant 0x293895cda98 'SSL_TEST_METHOD_DTLS' 'int'
|-FunctionDecl 0x29389575518 <line:292:1, line:301:1> line:292:19 invalid parse_test_method 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x293895753c8 <col:37, col:51> col:51 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x29389575448 <col:61, col:73> col:73 used value 'const char *'
| `-CompoundStmt 0x29389575930 <line:293:1, line:301:1>
|   |-DeclStmt 0x29389575660 <line:294:5, col:18>
|   | `-VarDecl 0x293895755f8 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x29389575808 <line:295:5, line:298:5>
|   | |-OpaqueValueExpr 0x293895757f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x293895757d8 <line:296:41, line:298:5>
|   |   `-ReturnStmt 0x293895757c8 <line:297:9, col:16>
|   |     `-IntegerLiteral 0x293895757a0 <col:16> 'int' 0
|   |-BinaryOperator 0x293895758d8 <line:299:5, col:24> 'ssl_test_method_t':'ssl_test_method_t' '='
|   | |-MemberExpr 0x29389575858 <col:5, col:15> 'ssl_test_method_t':'ssl_test_method_t' lvalue ->method 0x293895cf230
|   | | `-ImplicitCastExpr 0x29389575840 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389575820 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x293895753c8 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x293895758c0 <col:24> 'ssl_test_method_t':'ssl_test_method_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x293895758a8 <col:24> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389575888 <col:24> 'int' lvalue Var 0x293895755f8 'ret_value' 'int'
|   `-ReturnStmt 0x29389575920 <line:300:5, col:12>
|     `-IntegerLiteral 0x293895758f8 <col:12> 'int' 1
|-FunctionDecl 0x29389575a20 prev 0x293895d1840 <line:303:1, line:306:1> line:303:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| |-ParmVarDecl 0x29389575970 <col:34, col:52> col:52 used method 'ssl_test_method_t':'ssl_test_method_t'
| `-CompoundStmt 0x29389575c80 <line:304:1, line:306:1>
|   `-ReturnStmt 0x29389575c70 <line:305:5, col:76>
|     `-CallExpr 0x29389575bd8 <col:12, col:76> 'const char *'
|       |-ImplicitCastExpr 0x29389575bc0 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x29389575ac8 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x29389575c10 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x29389575ae8 <col:22> 'const test_enum [2]' lvalue Var 0x2938957d020 'ssl_test_methods' 'const test_enum [2]'
|       |-ImplicitCastExpr 0x29389575c28 <col:40, col:67> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x29389575b60 <col:40, col:67> 'int'
|       |   |-ImplicitCastExpr 0x29389575b48 <col:40> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x29389575b08 <col:40> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x29389575b88 <col:51> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x29389575b28 <col:51> 'const test_enum [2]' lvalue Var 0x2938957d020 'ssl_test_methods' 'const test_enum [2]'
|       `-ImplicitCastExpr 0x29389575c58 <col:70> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x29389575c40 <col:70> 'ssl_test_method_t':'ssl_test_method_t' <LValueToRValue>
|           `-DeclRefExpr 0x29389575ba0 <col:70> 'ssl_test_method_t':'ssl_test_method_t' lvalue ParmVar 0x29389575970 'method' 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x29389575df8 <line:43:5, line:49:5> <scratch space>:296:1 used parse_client_npn_protocols 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x29389575ca8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:310:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x29389575d28 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x293895838f0 <line:44:5, line:49:5>
|   |-CallExpr 0x29389583140 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x29389576038 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29389575fb0 <col:9> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x29389583168 <col:22, line:310:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x29389576008 <line:45:22, line:310:64> 'char *' lvalue ->npn_protocols 0x293895ce6d0
|   |     `-ImplicitCastExpr 0x29389575ff0 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x29389575fd0 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x29389575ca8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x29389583388 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x293895831b8 <col:9, line:310:64> 'char *' lvalue ->npn_protocols 0x293895ce6d0
|   | | `-ImplicitCastExpr 0x293895831a0 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389583180 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x29389575ca8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x29389583370 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x29389583330 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x29389583318 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x293895832d8 <col:22> 'int ()' Function 0x29389583210 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x29389583358 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x293895832f8 <col:37> 'const char *' lvalue ParmVar 0x29389575d28 'value' 'const char *'
|   |-DoStmt 0x29389583890 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x29389583850 <line:106:8, line:111:5>
|   | | `-IfStmt 0x29389583838 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x29389583508 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x293895834e8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x293895834c8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x29389583498 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:310:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x293895833e0 <line:47:20, line:310:64> 'char *' lvalue ->npn_protocols 0x293895ce6d0
|   | |   |     |   `-ImplicitCastExpr 0x293895833c8 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x293895833a8 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x29389575ca8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x293895834b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x29389583478 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x29389583450 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x29389583410 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x29389583820 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x293895837f8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x293895837e0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x29389583720 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x293895837c8 <col:28, <scratch space>:297:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x293895837b0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x29389583778 <col:1> 'char [27]' lvalue "ctx->npn_protocols != NULL"
|   | `-IntegerLiteral 0x29389583868 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x293895838b0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x293895838e0 <line:48:9, col:16>
|     `-IntegerLiteral 0x293895838b8 <col:16> 'int' 1
|-FunctionDecl 0x29389583a88 <line:43:5, line:49:5> <scratch space>:300:1 used parse_server_npn_protocols 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x29389583938 <.//openssl//file_jk/after\test\ssl_test_ctx.c:311:34, line:43:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x293895839b8 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x29389584098 <line:44:5, line:49:5>
|   |-CallExpr 0x29389583bf0 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x29389583bd8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29389583b50 <col:9> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x29389583c18 <col:22, line:311:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x29389583ba8 <line:45:22, line:311:64> 'char *' lvalue ->npn_protocols 0x293895ceac0
|   |     `-ImplicitCastExpr 0x29389583b90 <line:45:22> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x29389583b70 <col:22> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x29389583938 'ctx' 'SSL_TEST_SERVER_CONF *'
|   |-BinaryOperator 0x29389583d48 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x29389583c68 <col:9, line:311:64> 'char *' lvalue ->npn_protocols 0x293895ceac0
|   | | `-ImplicitCastExpr 0x29389583c50 <line:46:9> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389583c30 <col:9> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x29389583938 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x29389583d30 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x29389583cf0 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x29389583cd8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x29389583c98 <col:22> 'int ()' Function 0x29389583210 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x29389583d18 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x29389583cb8 <col:37> 'const char *' lvalue ParmVar 0x293895839b8 'value' 'const char *'
|   |-DoStmt 0x29389584038 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x29389583ff8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x29389583fe0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x29389583ec8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x29389583ea8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x29389583e88 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x29389583e58 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:311:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x29389583da0 <line:47:20, line:311:64> 'char *' lvalue ->npn_protocols 0x293895ceac0
|   | |   |     |   `-ImplicitCastExpr 0x29389583d88 <line:47:20> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x29389583d68 <col:20> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x29389583938 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | |   |     `-ImplicitCastExpr 0x29389583e70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x29389583e38 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x29389583e10 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x29389583dd0 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x29389583fc8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x29389583fa0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x29389583f88 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x29389583f00 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x29389583f70 <col:28, <scratch space>:301:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x29389583f58 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x29389583f20 <col:1> 'char [27]' lvalue "ctx->npn_protocols != NULL"
|   | `-IntegerLiteral 0x29389584010 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x29389584058 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x29389584088 <line:48:9, col:16>
|     `-IntegerLiteral 0x29389584060 <col:16> 'int' 1
|-FunctionDecl 0x29389582280 <line:43:5, line:49:5> <scratch space>:304:1 used parse_test_expected_npn_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x29389582130 <.//openssl//file_jk/after\test\ssl_test_ctx.c:312:34, line:43:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x293895821b0 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x293895828d8 <line:44:5, line:49:5>
|   |-CallExpr 0x293895823e8 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x293895823d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29389582348 <col:9> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x29389582410 <col:22, line:312:54> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x293895823a0 <line:45:22, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x293895cf7d0
|   |     `-ImplicitCastExpr 0x29389582388 <line:45:22> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x29389582368 <col:22> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389582130 'ctx' 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x29389582540 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x29389582460 <col:9, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x293895cf7d0
|   | | `-ImplicitCastExpr 0x29389582448 <line:46:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389582428 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389582130 'ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x29389582528 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x293895824e8 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x293895824d0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x29389582490 <col:22> 'int ()' Function 0x29389583210 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x29389582510 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x293895824b0 <col:37> 'const char *' lvalue ParmVar 0x293895821b0 'value' 'const char *'
|   |-DoStmt 0x29389582878 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x29389582838 <line:106:8, line:111:5>
|   | | `-IfStmt 0x29389582820 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x293895826c0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x293895826a0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x29389582680 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x29389582650 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:312:54> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x29389582598 <line:47:20, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x293895cf7d0
|   | |   |     |   `-ImplicitCastExpr 0x29389582580 <line:47:20> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x29389582560 <col:20> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389582130 'ctx' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x29389582668 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x29389582630 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x29389582608 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x293895825c8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x29389582808 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x293895827e0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x293895827c8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x293895826f8 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x293895827b0 <col:28, <scratch space>:2:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x29389582798 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x29389582758 <col:1> 'char [35]' lvalue "ctx->expected_npn_protocol != NULL"
|   | `-IntegerLiteral 0x29389582850 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x29389582898 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x293895828c8 <line:48:9, col:16>
|     `-IntegerLiteral 0x293895828a0 <col:16> 'int' 1
|-FunctionDecl 0x29389582a70 <line:43:5, line:49:5> <scratch space>:5:1 used parse_client_alpn_protocols 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x29389582920 <.//openssl//file_jk/after\test\ssl_test_ctx.c:313:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x293895829a0 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x293895830c0 <line:44:5, line:49:5>
|   |-CallExpr 0x29389582bd8 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x29389582bc0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29389582b38 <col:9> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x29389582c00 <col:22, line:313:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x29389582b90 <line:45:22, line:313:64> 'char *' lvalue ->alpn_protocols 0x293895ce740
|   |     `-ImplicitCastExpr 0x29389582b78 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x29389582b58 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x29389582920 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x29389582d30 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x29389582c50 <col:9, line:313:64> 'char *' lvalue ->alpn_protocols 0x293895ce740
|   | | `-ImplicitCastExpr 0x29389582c38 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389582c18 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x29389582920 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x29389582d18 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x29389582cd8 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x29389582cc0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x29389582c80 <col:22> 'int ()' Function 0x29389583210 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x29389582d00 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x29389582ca0 <col:37> 'const char *' lvalue ParmVar 0x293895829a0 'value' 'const char *'
|   |-DoStmt 0x29389583060 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x29389583020 <line:106:8, line:111:5>
|   | | `-IfStmt 0x29389583008 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x29389582eb0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x29389582e90 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x29389582e70 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x29389582e40 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:313:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x29389582d88 <line:47:20, line:313:64> 'char *' lvalue ->alpn_protocols 0x293895ce740
|   | |   |     |   `-ImplicitCastExpr 0x29389582d70 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x29389582d50 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x29389582920 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x29389582e58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x29389582e20 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x29389582df8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x29389582db8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x29389582ff0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x29389582fc8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x29389582fb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x29389582ee8 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x29389582f98 <col:28, <scratch space>:6:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x29389582f80 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x29389582f48 <col:1> 'char [28]' lvalue "ctx->alpn_protocols != NULL"
|   | `-IntegerLiteral 0x29389583038 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x29389583080 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x293895830b0 <line:48:9, col:16>
|     `-IntegerLiteral 0x29389583088 <col:16> 'int' 1
|-FunctionDecl 0x2938957e240 <line:43:5, line:49:5> <scratch space>:9:1 used parse_server_alpn_protocols 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x2938957e0f0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:314:34, line:43:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x2938957e170 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x2938957e850 <line:44:5, line:49:5>
|   |-CallExpr 0x2938957e3a8 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x2938957e390 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2938957e308 <col:9> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2938957e3d0 <col:22, line:314:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2938957e360 <line:45:22, line:314:64> 'char *' lvalue ->alpn_protocols 0x293895ceb30
|   |     `-ImplicitCastExpr 0x2938957e348 <line:45:22> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2938957e328 <col:22> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x2938957e0f0 'ctx' 'SSL_TEST_SERVER_CONF *'
|   |-BinaryOperator 0x2938957e500 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x2938957e420 <col:9, line:314:64> 'char *' lvalue ->alpn_protocols 0x293895ceb30
|   | | `-ImplicitCastExpr 0x2938957e408 <line:46:9> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2938957e3e8 <col:9> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x2938957e0f0 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x2938957e4e8 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x2938957e4a8 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x2938957e490 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2938957e450 <col:22> 'int ()' Function 0x29389583210 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x2938957e4d0 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2938957e470 <col:37> 'const char *' lvalue ParmVar 0x2938957e170 'value' 'const char *'
|   |-DoStmt 0x2938957e7f0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2938957e7b0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2938957e798 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2938957e680 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2938957e660 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2938957e640 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x2938957e610 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:314:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x2938957e558 <line:47:20, line:314:64> 'char *' lvalue ->alpn_protocols 0x293895ceb30
|   | |   |     |   `-ImplicitCastExpr 0x2938957e540 <line:47:20> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x2938957e520 <col:20> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x2938957e0f0 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | |   |     `-ImplicitCastExpr 0x2938957e628 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x2938957e5f0 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2938957e5c8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2938957e588 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2938957e780 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2938957e758 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2938957e740 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2938957e6b8 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2938957e728 <col:28, <scratch space>:10:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2938957e710 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2938957e6d8 <col:1> 'char [28]' lvalue "ctx->alpn_protocols != NULL"
|   | `-IntegerLiteral 0x2938957e7c8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2938957e810 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x2938957e840 <line:48:9, col:16>
|     `-IntegerLiteral 0x2938957e818 <col:16> 'int' 1
|-FunctionDecl 0x2938957e9e8 <line:43:5, line:49:5> <scratch space>:13:1 used parse_test_expected_alpn_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x2938957e898 <.//openssl//file_jk/after\test\ssl_test_ctx.c:315:34, line:43:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x2938957e918 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x2938957f038 <line:44:5, line:49:5>
|   |-CallExpr 0x2938957eb50 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x2938957eb38 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2938957eab0 <col:9> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2938957eb78 <col:22, line:315:54> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2938957eb08 <line:45:22, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x293895cf840
|   |     `-ImplicitCastExpr 0x2938957eaf0 <line:45:22> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2938957ead0 <col:22> 'SSL_TEST_CTX *' lvalue ParmVar 0x2938957e898 'ctx' 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x2938957eca8 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x2938957ebc8 <col:9, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x293895cf840
|   | | `-ImplicitCastExpr 0x2938957ebb0 <line:46:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2938957eb90 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x2938957e898 'ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x2938957ec90 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x2938957ec50 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x2938957ec38 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2938957ebf8 <col:22> 'int ()' Function 0x29389583210 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x2938957ec78 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2938957ec18 <col:37> 'const char *' lvalue ParmVar 0x2938957e918 'value' 'const char *'
|   |-DoStmt 0x2938957efd8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2938957ef98 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2938957ef80 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2938957ee28 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2938957ee08 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2938957ede8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x2938957edb8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:315:54> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x2938957ed00 <line:47:20, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x293895cf840
|   | |   |     |   `-ImplicitCastExpr 0x2938957ece8 <line:47:20> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x2938957ecc8 <col:20> 'SSL_TEST_CTX *' lvalue ParmVar 0x2938957e898 'ctx' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x2938957edd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x2938957ed98 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2938957ed70 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2938957ed30 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2938957ef68 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2938957ef40 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2938957ef28 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2938957ee60 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2938957ef10 <col:28, <scratch space>:14:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2938957eef8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2938957eeb8 <col:1> 'char [36]' lvalue "ctx->expected_alpn_protocol != NULL"
|   | `-IntegerLiteral 0x2938957efb0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2938957eff8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x2938957f028 <line:48:9, col:16>
|     `-IntegerLiteral 0x2938957f000 <col:16> 'int' 1
|-VarDecl 0x29389580110 <line:319:1, line:324:1> line:319:24 used ssl_handshake_modes 'const test_enum [4]' static cinit
| `-InitListExpr 0x293895804d0 <col:48, line:324:1> 'const test_enum [4]'
|   |-InitListExpr 0x29389580520 <line:320:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x29389580588 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x29389580570 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389580178 <col:6> 'char [7]' lvalue "Simple"
|   | `-DeclRefExpr 0x29389580198 <col:16> 'int' EnumConstant 0x293895cdcd0 'SSL_TEST_HANDSHAKE_SIMPLE' 'int'
|   |-InitListExpr 0x293895805b8 <line:321:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x29389580620 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x29389580608 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389580208 <col:6> 'char [7]' lvalue "Resume"
|   | `-DeclRefExpr 0x29389580228 <col:16> 'int' EnumConstant 0x293895cdd28 'SSL_TEST_HANDSHAKE_RESUME' 'int'
|   |-InitListExpr 0x29389580658 <line:322:5, col:58> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x293895806c0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x293895806a8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x293895802d8 <col:6> 'char [18]' lvalue "RenegotiateServer"
|   | `-DeclRefExpr 0x29389580308 <col:27> 'int' EnumConstant 0x293895cdd80 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|   `-InitListExpr 0x29389580708 <line:323:5, col:58> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x29389580770 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x29389580758 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x29389580378 <col:6> 'char [18]' lvalue "RenegotiateClient"
|     `-DeclRefExpr 0x293895803a8 <col:27> 'int' EnumConstant 0x293895cddd8 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|-FunctionDecl 0x293895808e8 <line:326:1, line:335:1> line:326:19 invalid parse_handshake_mode 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x29389580798 <col:40, col:54> col:54 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x29389580818 <col:64, col:76> col:76 used value 'const char *'
| `-CompoundStmt 0x29389580d00 <line:327:1, line:335:1>
|   |-DeclStmt 0x29389580a30 <line:328:5, col:18>
|   | `-VarDecl 0x293895809c8 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x29389580bd8 <line:329:5, line:332:5>
|   | |-OpaqueValueExpr 0x29389580bc0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x29389580ba8 <line:330:41, line:332:5>
|   |   `-ReturnStmt 0x29389580b98 <line:331:9, col:16>
|   |     `-IntegerLiteral 0x29389580b70 <col:16> 'int' 0
|   |-BinaryOperator 0x29389580ca8 <line:333:5, col:32> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' '='
|   | |-MemberExpr 0x29389580c28 <col:5, col:15> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' lvalue ->handshake_mode 0x293895cf2c0
|   | | `-ImplicitCastExpr 0x29389580c10 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389580bf0 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389580798 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x29389580c90 <col:32> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x29389580c78 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389580c58 <col:32> 'int' lvalue Var 0x293895809c8 'ret_value' 'int'
|   `-ReturnStmt 0x29389580cf0 <line:334:5, col:12>
|     `-IntegerLiteral 0x29389580cc8 <col:12> 'int' 1
|-FunctionDecl 0x29389580df0 prev 0x293895d1a20 <line:337:1, line:341:1> line:337:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| |-ParmVarDecl 0x29389580d40 <col:37, col:58> col:58 used mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-CompoundStmt 0x29389581050 <line:338:1, line:341:1>
|   `-ReturnStmt 0x29389581040 <line:339:5, line:340:26>
|     `-CallExpr 0x29389580fa8 <line:339:12, line:340:26> 'const char *'
|       |-ImplicitCastExpr 0x29389580f90 <line:339:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x29389580e98 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x29389580fe0 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x29389580eb8 <col:22> 'const test_enum [4]' lvalue Var 0x29389580110 'ssl_handshake_modes' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x29389580ff8 <col:43, col:73> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x29389580f30 <col:43, col:73> 'int'
|       |   |-ImplicitCastExpr 0x29389580f18 <col:43> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x29389580ed8 <col:43> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x29389580f58 <col:54> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x29389580ef8 <col:54> 'const test_enum [4]' lvalue Var 0x29389580110 'ssl_handshake_modes' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x29389581028 <line:340:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x29389581010 <col:22> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|           `-DeclRefExpr 0x29389580f70 <col:22> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' lvalue ParmVar 0x29389580d40 'mode' 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x2938957d1b0 <line:43:5, line:49:5> <scratch space>:17:1 used parse_client_reneg_ciphers 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x29389581078 <.//openssl//file_jk/after\test\ssl_test_ctx.c:345:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x2938957d0e0 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x2938957d7c0 <line:44:5, line:49:5>
|   |-CallExpr 0x2938957d318 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x2938957d300 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2938957d278 <col:9> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2938957d340 <col:22, line:345:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2938957d2d0 <line:45:22, line:345:64> 'char *' lvalue ->reneg_ciphers 0x293895ce840
|   |     `-ImplicitCastExpr 0x2938957d2b8 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2938957d298 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x29389581078 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x2938957d470 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x2938957d390 <col:9, line:345:64> 'char *' lvalue ->reneg_ciphers 0x293895ce840
|   | | `-ImplicitCastExpr 0x2938957d378 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2938957d358 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x29389581078 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x2938957d458 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x2938957d418 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x2938957d400 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2938957d3c0 <col:22> 'int ()' Function 0x29389583210 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x2938957d440 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2938957d3e0 <col:37> 'const char *' lvalue ParmVar 0x2938957d0e0 'value' 'const char *'
|   |-DoStmt 0x2938957d760 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2938957d720 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2938957d708 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2938957d5f0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2938957d5d0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2938957d5b0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x2938957d580 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:345:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x2938957d4c8 <line:47:20, line:345:64> 'char *' lvalue ->reneg_ciphers 0x293895ce840
|   | |   |     |   `-ImplicitCastExpr 0x2938957d4b0 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x2938957d490 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x29389581078 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x2938957d598 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x2938957d560 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2938957d538 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2938957d4f8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x2938957d6f0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x2938957d6c8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2938957d6b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2938957d628 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2938957d698 <col:28, <scratch space>:18:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2938957d680 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2938957d648 <col:1> 'char [27]' lvalue "ctx->reneg_ciphers != NULL"
|   | `-IntegerLiteral 0x2938957d738 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2938957d780 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x2938957d7b0 <line:48:9, col:16>
|     `-IntegerLiteral 0x2938957d788 <col:16> 'int' 1
|-VarDecl 0x2938957d818 <line:349:1, line:353:1> line:349:24 used ssl_ct_validation_modes 'const test_enum [3]' static cinit
| `-InitListExpr 0x2938957dad8 <col:52, line:353:1> 'const test_enum [3]'
|   |-InitListExpr 0x2938957db28 <line:350:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x2938957db90 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2938957db78 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2938957d880 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x2938957d8a0 <col:14> 'int' EnumConstant 0x293895ce010 'SSL_TEST_CT_VALIDATION_NONE' 'int'
|   |-InitListExpr 0x2938957dbc0 <line:351:5, col:53> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x2938957dc28 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x2938957dc10 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x2938957d910 <col:6> 'char [11]' lvalue "Permissive"
|   | `-DeclRefExpr 0x2938957d938 <col:20> 'int' EnumConstant 0x293895ce068 'SSL_TEST_CT_VALIDATION_PERMISSIVE' 'int'
|   `-InitListExpr 0x2938957dc60 <line:352:5, col:45> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x2938957dcc8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x2938957dcb0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x2938957d9a8 <col:6> 'char [7]' lvalue "Strict"
|     `-DeclRefExpr 0x2938957d9c8 <col:16> 'int' EnumConstant 0x293895ce0c0 'SSL_TEST_CT_VALIDATION_STRICT' 'int'
|-FunctionDecl 0x2938957de60 <line:355:1, line:365:1> line:355:19 invalid parse_ct_validation 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x2938957dd10 <col:39, col:61> col:61 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x2938957dd90 <line:356:39, col:51> col:51 used value 'const char *'
| `-CompoundStmt 0x29389584300 <line:357:1, line:365:1>
|   |-DeclStmt 0x2938957dfa8 <line:358:5, col:18>
|   | `-VarDecl 0x2938957df40 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x293895841d8 <line:359:5, line:362:5>
|   | |-OpaqueValueExpr 0x293895841c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x293895841a8 <line:360:41, line:362:5>
|   |   `-ReturnStmt 0x29389584198 <line:361:9, col:16>
|   |     `-IntegerLiteral 0x29389584170 <col:16> 'int' 0
|   |-BinaryOperator 0x293895842a8 <line:363:5, col:34> 'ssl_ct_validation_t':'ssl_ct_validation_t' '='
|   | |-MemberExpr 0x29389584228 <col:5, col:18> 'ssl_ct_validation_t':'ssl_ct_validation_t' lvalue ->ct_validation 0x293895ce7d0
|   | | `-ImplicitCastExpr 0x29389584210 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x293895841f0 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x2938957dd10 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x29389584290 <col:34> 'ssl_ct_validation_t':'ssl_ct_validation_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x29389584278 <col:34> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389584258 <col:34> 'int' lvalue Var 0x2938957df40 'ret_value' 'int'
|   `-ReturnStmt 0x293895842f0 <line:364:5, col:12>
|     `-IntegerLiteral 0x293895842c8 <col:12> 'int' 1
|-FunctionDecl 0x293895843f0 prev 0x293895d1c00 <line:367:1, line:371:1> line:367:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| |-ParmVarDecl 0x29389584340 <col:36, col:56> col:56 used mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-CompoundStmt 0x29389584650 <line:368:1, line:371:1>
|   `-ReturnStmt 0x29389584640 <line:369:5, line:370:26>
|     `-CallExpr 0x293895845a8 <line:369:12, line:370:26> 'const char *'
|       |-ImplicitCastExpr 0x29389584590 <line:369:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x29389584498 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x293895845e0 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x293895844b8 <col:22> 'const test_enum [3]' lvalue Var 0x2938957d818 'ssl_ct_validation_modes' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x293895845f8 <col:47, col:81> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x29389584530 <col:47, col:81> 'int'
|       |   |-ImplicitCastExpr 0x29389584518 <col:47> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x293895844d8 <col:47> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x29389584558 <col:58> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x293895844f8 <col:58> 'const test_enum [3]' lvalue Var 0x2938957d818 'ssl_ct_validation_modes' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x29389584628 <line:370:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x29389584610 <col:22> 'ssl_ct_validation_t':'ssl_ct_validation_t' <LValueToRValue>
|           `-DeclRefExpr 0x29389584570 <col:22> 'ssl_ct_validation_t':'ssl_ct_validation_t' lvalue ParmVar 0x29389584340 'mode' 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x293895847c8 <line:37:5, line:40:5> <scratch space>:21:1 used parse_test_resumption_expected 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x29389584678 <.//openssl//file_jk/after\test\ssl_test_ctx.c:373:32, line:37:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x293895846f8 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x293895849e8 <line:38:5, line:40:5>
|   `-ReturnStmt 0x293895849d8 <line:39:9, col:48>
|     `-CallExpr 0x29389584990 <col:16, col:48> 'int'
|       |-ImplicitCastExpr 0x29389584978 <col:16> 'int (*)(const char *, int *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x29389584890 <col:16> 'int (const char *, int *)' Function 0x293895724c0 'parse_boolean' 'int (const char *, int *)'
|       |-ImplicitCastExpr 0x293895849c0 <col:30> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x293895848b0 <col:30> 'const char *' lvalue ParmVar 0x293895846f8 'value' 'const char *'
|       `-UnaryOperator 0x29389584938 <col:37, line:373:52> 'int *' prefix '&' cannot overflow
|         `-MemberExpr 0x29389584908 <line:39:38, line:373:52> 'int' lvalue ->resumption_expected 0x293895cf8b0
|           `-ImplicitCastExpr 0x293895848f0 <line:39:38> 'SSL_TEST_CTX *' <LValueToRValue>
|             `-DeclRefExpr 0x293895848d0 <col:38> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389584678 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x29389584b60 <line:37:5, line:40:5> <scratch space>:24:1 used parse_server_broken_session_ticket 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x29389584a10 <.//openssl//file_jk/after\test\ssl_test_ctx.c:374:32, line:37:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x29389584a90 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x29389584d58 <line:38:5, line:40:5>
|   `-ReturnStmt 0x29389584d48 <line:39:9, col:48>
|     `-CallExpr 0x29389584d00 <col:16, col:48> 'int'
|       |-ImplicitCastExpr 0x29389584ce8 <col:16> 'int (*)(const char *, int *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x29389584c28 <col:16> 'int (const char *, int *)' Function 0x293895724c0 'parse_boolean' 'int (const char *, int *)'
|       |-ImplicitCastExpr 0x29389584d30 <col:30> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x29389584c48 <col:30> 'const char *' lvalue ParmVar 0x29389584a90 'value' 'const char *'
|       `-UnaryOperator 0x29389584cd0 <col:37, line:374:62> 'int *' prefix '&' cannot overflow
|         `-MemberExpr 0x29389584ca0 <line:39:38, line:374:62> 'int' lvalue ->broken_session_ticket 0x293895ceba0
|           `-ImplicitCastExpr 0x29389584c88 <line:39:38> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|             `-DeclRefExpr 0x29389584c68 <col:38> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x29389584a10 'ctx' 'SSL_TEST_SERVER_CONF *'
|-VarDecl 0x29389584d90 <line:378:1, line:382:1> line:378:24 used ssl_certstatus 'const test_enum [3]' static cinit
| `-InitListExpr 0x29389585090 <col:43, line:382:1> 'const test_enum [3]'
|   |-InitListExpr 0x293895850e0 <line:379:5, col:39> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x29389581120 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x29389585130 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389584df8 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x29389584e18 <col:14> 'int' EnumConstant 0x293895ce310 'SSL_TEST_CERT_STATUS_NONE' 'int'
|   |-InitListExpr 0x29389581150 <line:380:5, col:56> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x293895811b8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x293895811a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x29389584e88 <col:6> 'char [13]' lvalue "GoodResponse"
|   | `-DeclRefExpr 0x29389584eb0 <col:22> 'int' EnumConstant 0x293895ce368 'SSL_TEST_CERT_STATUS_GOOD_RESPONSE' 'int'
|   `-InitListExpr 0x293895811f0 <line:381:5, col:54> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x29389581258 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x29389581240 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x29389584f58 <col:6> 'char [12]' lvalue "BadResponse"
|     `-DeclRefExpr 0x29389584f80 <col:21> 'int' EnumConstant 0x293895ce3c0 'SSL_TEST_CERT_STATUS_BAD_RESPONSE' 'int'
|-FunctionDecl 0x293895813f0 <line:384:1, line:394:1> line:384:19 invalid parse_certstatus 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x293895812a0 <col:36, col:58> col:58 used server_conf 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x29389581320 <line:385:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x29389581808 <line:386:1, line:394:1>
|   |-DeclStmt 0x29389581538 <line:387:5, col:18>
|   | `-VarDecl 0x293895814d0 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x293895816e0 <line:388:5, line:391:5>
|   | |-OpaqueValueExpr 0x293895816c8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x293895816b0 <line:389:29, line:391:5>
|   |   `-ReturnStmt 0x293895816a0 <line:390:9, col:16>
|   |     `-IntegerLiteral 0x29389581678 <col:16> 'int' 0
|   |-BinaryOperator 0x293895817b0 <line:392:5, col:32> 'ssl_cert_status_t':'ssl_cert_status_t' '='
|   | |-MemberExpr 0x29389581730 <col:5, col:18> 'ssl_cert_status_t':'ssl_cert_status_t' lvalue ->cert_status 0x293895cec30
|   | | `-ImplicitCastExpr 0x29389581718 <col:5> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x293895816f8 <col:5> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x293895812a0 'server_conf' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x29389581798 <col:32> 'ssl_cert_status_t':'ssl_cert_status_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x29389581780 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389581760 <col:32> 'int' lvalue Var 0x293895814d0 'ret_value' 'int'
|   `-ReturnStmt 0x293895817f8 <line:393:5, col:12>
|     `-IntegerLiteral 0x293895817d0 <col:12> 'int' 1
|-FunctionDecl 0x293895818f8 prev 0x293895d1de0 <line:396:1, line:400:1> line:396:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| |-ParmVarDecl 0x29389581848 <col:33, col:51> col:51 used cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
| `-CompoundStmt 0x29389581b58 <line:397:1, line:400:1>
|   `-ReturnStmt 0x29389581b48 <line:398:5, line:399:61>
|     `-CallExpr 0x29389581ab0 <line:398:12, line:399:61> 'const char *'
|       |-ImplicitCastExpr 0x29389581a98 <line:398:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x293895819a0 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x2938957ad70 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x29389581ae8 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x293895819c0 <col:22> 'const test_enum [3]' lvalue Var 0x29389584d90 'ssl_certstatus' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x29389581b00 <line:399:22, col:47> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x29389581a38 <col:22, col:47> 'int'
|       |   |-ImplicitCastExpr 0x29389581a20 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x293895819e0 <col:22> 'int ()' Function 0x29389579ef8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x29389581a60 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x29389581a00 <col:33> 'const test_enum [3]' lvalue Var 0x29389584d90 'ssl_certstatus' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x29389581b30 <col:50> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x29389581b18 <col:50> 'ssl_cert_status_t':'ssl_cert_status_t' <LValueToRValue>
|           `-DeclRefExpr 0x29389581a78 <col:50> 'ssl_cert_status_t':'ssl_cert_status_t' lvalue ParmVar 0x29389581848 'cert_status' 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x29389581cd0 <line:52:5, line:56:5> <scratch space>:27:1 used parse_test_app_data_size 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x29389581b80 <.//openssl//file_jk/after\test\ssl_test_ctx.c:404:31, line:52:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x29389581c00 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x29389581fe0 <line:53:5, line:56:5>
|   |-BinaryOperator 0x29389581f88 <line:54:9, col:32> 'int' '='
|   | |-MemberExpr 0x29389581dd0 <col:9, line:404:51> 'int' lvalue ->app_data_size 0x293895cf330
|   | | `-ImplicitCastExpr 0x29389581db8 <line:54:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389581d98 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389581b80 'ctx' 'SSL_TEST_CTX *'
|   | `-CallExpr 0x29389581f48 <col:22, col:32> 'int'
|   |   |-ImplicitCastExpr 0x29389581f30 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x29389581ef0 <col:22> 'int ()' Function 0x29389581e28 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x29389581f70 <col:27> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389581f10 <col:27> 'const char *' lvalue ParmVar 0x29389581c00 'value' 'const char *'
|   `-ReturnStmt 0x29389581fd0 <line:55:9, col:16>
|     `-IntegerLiteral 0x29389581fa8 <col:16> 'int' 1
|-FunctionDecl 0x293895851b0 <line:52:5, line:56:5> <scratch space>:30:1 used parse_test_max_fragment_size 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x29389582010 <.//openssl//file_jk/after\test\ssl_test_ctx.c:409:31, line:52:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x29389582090 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x293895853d0 <line:53:5, line:56:5>
|   |-BinaryOperator 0x29389585378 <line:54:9, col:32> 'int' '='
|   | |-MemberExpr 0x293895852b0 <col:9, line:409:51> 'int' lvalue ->max_fragment_size 0x293895cf3a0
|   | | `-ImplicitCastExpr 0x29389585298 <line:54:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389585278 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389582010 'ctx' 'SSL_TEST_CTX *'
|   | `-CallExpr 0x29389585338 <col:22, col:32> 'int'
|   |   |-ImplicitCastExpr 0x29389585320 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x293895852e0 <col:22> 'int ()' Function 0x29389581e28 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x29389585360 <col:27> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389585300 <col:27> 'const char *' lvalue ParmVar 0x29389582090 'value' 'const char *'
|   `-ReturnStmt 0x293895853c0 <line:55:9, col:16>
|     `-IntegerLiteral 0x29389585398 <col:16> 'int' 1
|-FunctionDecl 0x29389585550 <line:414:1, line:432:1> line:414:19 invalid parse_expected_tmp_key_type 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x29389585400 <col:47, col:61> col:61 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x29389585480 <line:415:47, col:59> col:59 used value 'const char *'
| `-CompoundStmt 0x29389585f88 <line:416:1, line:432:1>
|   |-DeclStmt 0x29389585698 <line:417:5, col:12>
|   | `-VarDecl 0x29389585630 <col:5, col:9> col:9 used nid 'int'
|   |-IfStmt 0x293895857e0 <line:419:5, line:420:16>
|   | |-BinaryOperator 0x29389585788 <line:419:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x29389585758 <.//openssl//file_jk/after\test\ssl_test_ctx.c:419:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x293895856b0 <col:9> 'const char *' lvalue ParmVar 0x29389585480 'value' 'const char *'
|   | | `-ImplicitCastExpr 0x29389585770 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x29389585738 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x29389585710 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x293895856d0 <col:26> 'int' 0
|   | `-ReturnStmt 0x293895857d0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:420:9, col:16>
|   |   `-IntegerLiteral 0x293895857a8 <col:16> 'int' 0
|   |-BinaryOperator 0x293895859b8 <line:421:5, col:27> 'int' '='
|   | |-DeclRefExpr 0x293895857f8 <col:5> 'int' lvalue Var 0x29389585630 'nid' 'int'
|   | `-CallExpr 0x29389585978 <col:11, col:27> 'int'
|   |   |-ImplicitCastExpr 0x29389585960 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x29389585920 <col:11> 'int ()' Function 0x29389585858 'OBJ_sn2nid' 'int ()'
|   |   `-ImplicitCastExpr 0x293895859a0 <col:22> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x29389585940 <col:22> 'const char *' lvalue ParmVar 0x29389585480 'value' 'const char *'
|   |-IfStmt 0x29389585bd8 <line:422:5, line:423:31>
|   | |-OpaqueValueExpr 0x29389585bc0 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x29389585ba0 <col:9, col:31> 'int' '='
|   |   |-DeclRefExpr 0x293895859f8 <col:9> 'int' lvalue Var 0x29389585630 'nid' 'int'
|   |   `-CallExpr 0x29389585b60 <col:15, col:31> 'int'
|   |     |-ImplicitCastExpr 0x29389585b48 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x29389585b08 <col:15> 'int ()' Function 0x29389585a40 'OBJ_ln2nid' 'int ()'
|   |     `-ImplicitCastExpr 0x29389585b88 <col:26> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x29389585b28 <col:26> 'const char *' lvalue ParmVar 0x29389585480 'value' 'const char *'
|   |-IfStmt 0x29389585df0 <line:425:5, line:426:38>
|   | |-OpaqueValueExpr 0x29389585dd8 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x29389585db8 <col:9, col:38> 'int' '='
|   |   |-DeclRefExpr 0x29389585c10 <col:9> 'int' lvalue Var 0x29389585630 'nid' 'int'
|   |   `-CallExpr 0x29389585d78 <col:15, col:38> 'int'
|   |     |-ImplicitCastExpr 0x29389585d60 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x29389585d20 <col:15> 'int ()' Function 0x29389585c58 'EC_curve_nist2nid' 'int ()'
|   |     `-ImplicitCastExpr 0x29389585da0 <col:33> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x29389585d40 <col:33> 'const char *' lvalue ParmVar 0x29389585480 'value' 'const char *'
|   |-IfStmt 0x29389585e78 <line:428:5, line:429:16>
|   | |-OpaqueValueExpr 0x29389585e60 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x29389585e50 <col:9, col:16>
|   |   `-IntegerLiteral 0x29389585e28 <col:16> 'int' 0
|   |-BinaryOperator 0x29389585f30 <line:430:5, col:39> 'int' '='
|   | |-MemberExpr 0x29389585ec8 <col:5, col:15> 'int' lvalue ->expected_tmp_key_type 0x293895cf920
|   | | `-ImplicitCastExpr 0x29389585eb0 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389585e90 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389585400 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x29389585f18 <col:39> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x29389585ef8 <col:39> 'int' lvalue Var 0x29389585630 'nid' 'int'
|   `-ReturnStmt 0x29389585f78 <line:431:5, col:12>
|     `-IntegerLiteral 0x29389585f50 <col:12> 'int' 1
|-RecordDecl 0x29389585fd8 <line:437:9, line:440:1> line:437:9 struct definition
| |-FieldDecl 0x293895860a8 <line:438:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x2938957f2f0 <line:439:5, col:59> col:11 referenced parse 'int (*)(SSL_TEST_CTX *, const char *)'
|-TypedefDecl 0x2938957f3a8 <line:437:1, line:440:3> col:3 referenced ssl_test_ctx_option 'struct ssl_test_ctx_option':'ssl_test_ctx_option'
| `-ElaboratedType 0x2938957f350 'struct ssl_test_ctx_option' sugar
|   `-RecordType 0x29389586070 'ssl_test_ctx_option'
|     `-Record 0x29389585fd8 ''
|-VarDecl 0x2938957f4b8 <line:442:1, col:55> col:34 used ssl_test_ctx_options 'const ssl_test_ctx_option []' static
|-RecordDecl 0x2938957fb60 <line:460:9, line:463:1> line:460:9 struct definition
| |-FieldDecl 0x2938957fc38 <line:461:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x2938957fe90 <line:462:5, col:63> col:11 referenced parse 'int (*)(SSL_TEST_CLIENT_CONF *, const char *)'
|-TypedefDecl 0x2938957ff48 <line:460:1, line:463:3> col:3 referenced ssl_test_client_option 'struct ssl_test_client_option':'ssl_test_client_option'
| `-ElaboratedType 0x2938957fef0 'struct ssl_test_client_option' sugar
|   `-RecordType 0x2938957fc00 'ssl_test_client_option'
|     `-Record 0x2938957fb60 ''
|-VarDecl 0x29389580058 <line:465:1, col:61> col:37 used ssl_test_client_options 'const ssl_test_client_option []' static
|-RecordDecl 0x2938958c478 <line:475:9, line:478:1> line:475:9 struct definition
| |-FieldDecl 0x2938958c548 <line:476:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x2938958c7a0 <line:477:5, col:63> col:11 referenced parse 'int (*)(SSL_TEST_SERVER_CONF *, const char *)'
|-TypedefDecl 0x2938958c858 <line:475:1, line:478:3> col:3 referenced ssl_test_server_option 'struct ssl_test_server_option':'ssl_test_server_option'
| `-ElaboratedType 0x2938958c800 'struct ssl_test_server_option' sugar
|   `-RecordType 0x2938958c510 'ssl_test_server_option'
|     `-Record 0x2938958c478 ''
|-VarDecl 0x2938958c968 <line:480:1, col:61> col:37 used ssl_test_server_options 'const ssl_test_server_option []' static
|-FunctionDecl 0x2938958cd08 prev 0x293895d2318 <line:492:1, line:500:1> line:492:15 used SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
| `-CompoundStmt 0x29389588558 <line:493:1, line:500:1>
|   |-DeclStmt 0x2938958ce20 <line:494:5, col:22>
|   | `-VarDecl 0x2938958cdb8 <col:5, col:19> col:19 used ret 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x2938958d068 <line:495:5, col:38> 'SSL_TEST_CTX *' '='
|   | |-DeclRefExpr 0x2938958ce38 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x2938958cdb8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x2938958d050 <col:11, col:38> 'SSL_TEST_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x2938958d028 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x2938958d010 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2938958cf60 <col:11> 'int ()' Function 0x2938958ce98 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x2938958cff0 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x2938958cfd0 <col:32, col:37> 'SSL_TEST_CTX':'SSL_TEST_CTX' lvalue
|   |         `-UnaryOperator 0x2938958cfb8 <col:33, col:34> 'SSL_TEST_CTX':'SSL_TEST_CTX' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x2938958cfa0 <col:34> 'SSL_TEST_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x2938958cf80 <col:34> 'SSL_TEST_CTX *' lvalue Var 0x2938958cdb8 'ret' 'SSL_TEST_CTX *' non_odr_use_unevaluated
|   |-DoStmt 0x293895882d8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x29389588298 <line:106:8, line:111:5>
|   | | `-IfStmt 0x29389588280 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x2938958d1a0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x2938958d180 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x2938958d160 <.//openssl//file_jk/after\test\ssl_test_ctx.c:496:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x2938958d130 <.//openssl//file_jk/after\test\ssl_test_ctx.c:496:16> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x2938958d088 <col:16> 'SSL_TEST_CTX *' lvalue Var 0x2938958cdb8 'ret' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x2938958d148 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <BitCast>
|   | |   |       `-ParenExpr 0x2938958d110 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x2938958d0e8 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x2938958d0a8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x29389588268 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x29389588240 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x29389588228 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x293895881b0 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x29389588210 <col:28, <scratch space>:31:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x293895881f8 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x293895881d0 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x293895882b0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x293895882f8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:496:28>
|   |-BinaryOperator 0x293895883a0 <line:497:5, col:26> 'int' '='
|   | |-MemberExpr 0x29389588338 <col:5, col:10> 'int' lvalue ->app_data_size 0x293895cf330
|   | | `-ImplicitCastExpr 0x29389588320 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389588300 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x2938958cdb8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x29389588388 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x29389588368 <col:26> 'const int' lvalue Var 0x293895721b8 'default_app_data_size' 'const int'
|   |-BinaryOperator 0x293895884a8 <line:498:5, col:30> 'int' '='
|   | |-MemberExpr 0x29389588440 <col:5, col:10> 'int' lvalue ->max_fragment_size 0x293895cf3a0
|   | | `-ImplicitCastExpr 0x29389588428 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x29389588408 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x2938958cdb8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x29389588490 <col:30> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x29389588470 <col:30> 'const int' lvalue Var 0x29389572278 'default_max_fragment_size' 'const int'
|   `-ReturnStmt 0x29389588548 <line:499:5, col:12>
|     `-ImplicitCastExpr 0x29389588530 <col:12> 'SSL_TEST_CTX *' <LValueToRValue>
|       `-DeclRefExpr 0x29389588510 <col:12> 'SSL_TEST_CTX *' lvalue Var 0x2938958cdb8 'ret' 'SSL_TEST_CTX *'
|-FunctionDecl 0x29389588718 <line:502:1, line:511:1> line:502:13 used ssl_test_extra_conf_free_data 'void (SSL_TEST_EXTRA_CONF *)' static
| |-ParmVarDecl 0x29389588608 <col:43, col:64> col:64 used conf 'SSL_TEST_EXTRA_CONF *'
| `-CompoundStmt 0x29389588f48 <line:503:1, line:511:1>
|   |-CallExpr 0x293895888a8 <line:504:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x29389588890 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x293895887d8 <col:5> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x293895888d0 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x29389588860 <col:18, col:31> 'char *' lvalue .npn_protocols 0x293895ce6d0
|   |     `-MemberExpr 0x29389588830 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x293895cee40
|   |       `-ImplicitCastExpr 0x29389588818 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x293895887f8 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x29389588608 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x293895889b8 <line:505:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x293895889a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x293895888e8 <col:5> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x293895889e0 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x29389588970 <col:18, col:31> 'char *' lvalue .npn_protocols 0x293895ceac0
|   |     `-MemberExpr 0x29389588940 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server 0x293895ceed0
|   |       `-ImplicitCastExpr 0x29389588928 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x29389588908 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x29389588608 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x29389588ac8 <line:506:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x29389588ab0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x293895889f8 <col:5> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x29389588af0 <col:18, col:32> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x29389588a80 <col:18, col:32> 'char *' lvalue .npn_protocols 0x293895ceac0
|   |     `-MemberExpr 0x29389588a50 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server2 0x293895cef38
|   |       `-ImplicitCastExpr 0x29389588a38 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x29389588a18 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x29389588608 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x29389588bd8 <line:507:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x29389588bc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29389588b08 <col:5> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x29389588c00 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x29389588b90 <col:18, col:31> 'char *' lvalue .alpn_protocols 0x293895ce740
|   |     `-MemberExpr 0x29389588b60 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x293895cee40
|   |       `-ImplicitCastExpr 0x29389588b48 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x29389588b28 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x29389588608 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x29389588ce8 <line:508:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x29389588cd0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29389588c18 <col:5> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x29389588d10 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x29389588ca0 <col:18, col:31> 'char *' lvalue .alpn_protocols 0x293895ceb30
|   |     `-MemberExpr 0x29389588c70 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server 0x293895ceed0
|   |       `-ImplicitCastExpr 0x29389588c58 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x29389588c38 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x29389588608 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x29389588df8 <line:509:5, col:46> 'int'
|   | |-ImplicitCastExpr 0x29389588de0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29389588d28 <col:5> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x29389588e20 <col:18, col:32> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x29389588db0 <col:18, col:32> 'char *' lvalue .alpn_protocols 0x293895ceb30
|   |     `-MemberExpr 0x29389588d80 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server2 0x293895cef38
|   |       `-ImplicitCastExpr 0x29389588d68 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x29389588d48 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x29389588608 'conf' 'SSL_TEST_EXTRA_CONF *'
|   `-CallExpr 0x29389588f08 <line:510:5, col:44> 'int'
|     |-ImplicitCastExpr 0x29389588ef0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x29389588e38 <col:5> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x29389588f30 <col:18, col:31> 'char *' <LValueToRValue>
|       `-MemberExpr 0x29389588ec0 <col:18, col:31> 'char *' lvalue .reneg_ciphers 0x293895ce840
|         `-MemberExpr 0x29389588e90 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x293895cee40
|           `-ImplicitCastExpr 0x29389588e78 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|             `-DeclRefExpr 0x29389588e58 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x29389588608 'conf' 'SSL_TEST_EXTRA_CONF *'
|-FunctionDecl 0x29389589048 <line:513:1, line:517:1> line:513:13 used ssl_test_ctx_free_extra_data 'void (SSL_TEST_CTX *)' static
| |-ParmVarDecl 0x29389588fa0 <col:42, col:56> col:56 used ctx 'SSL_TEST_CTX *'
| `-CompoundStmt 0x2938958b358 <line:514:1, line:517:1>
|   |-CallExpr 0x2938958b250 <line:515:5, col:46> 'void'
|   | |-ImplicitCastExpr 0x2938958b238 <col:5> 'void (*)(SSL_TEST_EXTRA_CONF *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x29389589108 <col:5> 'void (SSL_TEST_EXTRA_CONF *)' Function 0x29389588718 'ssl_test_extra_conf_free_data' 'void (SSL_TEST_EXTRA_CONF *)'
|   | `-UnaryOperator 0x2938958b1c0 <col:35, col:41> 'SSL_TEST_EXTRA_CONF *' prefix '&' cannot overflow
|   |   `-MemberExpr 0x29389589160 <col:36, col:41> 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF' lvalue ->extra 0x293895cf430
|   |     `-ImplicitCastExpr 0x29389589148 <col:36> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x29389589128 <col:36> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389588fa0 'ctx' 'SSL_TEST_CTX *'
|   `-CallExpr 0x2938958b330 <line:516:5, col:53> 'void'
|     |-ImplicitCastExpr 0x2938958b318 <col:5> 'void (*)(SSL_TEST_EXTRA_CONF *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2938958b278 <col:5> 'void (SSL_TEST_EXTRA_CONF *)' Function 0x29389588718 'ssl_test_extra_conf_free_data' 'void (SSL_TEST_EXTRA_CONF *)'
|     `-UnaryOperator 0x2938958b300 <col:35, col:41> 'SSL_TEST_EXTRA_CONF *' prefix '&' cannot overflow
|       `-MemberExpr 0x2938958b2d0 <col:36, col:41> 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF' lvalue ->resume_extra 0x293895cf498
|         `-ImplicitCastExpr 0x2938958b2b8 <col:36> 'SSL_TEST_CTX *' <LValueToRValue>
|           `-DeclRefExpr 0x2938958b298 <col:36> 'SSL_TEST_CTX *' lvalue ParmVar 0x29389588fa0 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x2938958b430 prev 0x293895d24e8 <line:519:1, line:525:1> line:519:6 used SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| |-ParmVarDecl 0x2938958b388 <col:24, col:38> col:38 used ctx 'SSL_TEST_CTX *'
| `-CompoundStmt 0x2938958b828 <line:520:1, line:525:1>
|   |-CallExpr 0x2938958b590 <line:521:5, col:37> 'void'
|   | |-ImplicitCastExpr 0x2938958b578 <col:5> 'void (*)(SSL_TEST_CTX *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2938958b4d8 <col:5> 'void (SSL_TEST_CTX *)' Function 0x29389589048 'ssl_test_ctx_free_extra_data' 'void (SSL_TEST_CTX *)'
|   | `-ImplicitCastExpr 0x2938958b5b8 <col:34> 'SSL_TEST_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2938958b4f8 <col:34> 'SSL_TEST_CTX *' lvalue ParmVar 0x2938958b388 'ctx' 'SSL_TEST_CTX *'
|   |-CallExpr 0x2938958b670 <line:522:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x2938958b658 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2938958b5d0 <col:5> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2938958b698 <col:18, col:23> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2938958b628 <col:18, col:23> 'char *' lvalue ->expected_npn_protocol 0x293895cf7d0
|   |     `-ImplicitCastExpr 0x2938958b610 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2938958b5f0 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x2938958b388 'ctx' 'SSL_TEST_CTX *'
|   |-CallExpr 0x2938958b750 <line:523:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x2938958b738 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2938958b6b0 <col:5> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x2938958b778 <col:18, col:23> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x2938958b708 <col:18, col:23> 'char *' lvalue ->expected_alpn_protocol 0x293895cf840
|   |     `-ImplicitCastExpr 0x2938958b6f0 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2938958b6d0 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x2938958b388 'ctx' 'SSL_TEST_CTX *'
|   `-CallExpr 0x2938958b7e8 <line:524:5, col:21> 'int'
|     |-ImplicitCastExpr 0x2938958b7d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x2938958b790 <col:5> 'int ()' Function 0x29389575ee8 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x2938958b810 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|       `-DeclRefExpr 0x2938958b7b0 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x2938958b388 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x2938958ba90 <line:527:1, line:558:1> line:527:12 invalid parse_client_options 'int (SSL_TEST_CLIENT_CONF *, const int *, const char *)' static
| |-ParmVarDecl 0x2938958b868 <col:33, col:55> col:55 used client 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x2938958b8e8 <col:63, col:75> col:75 invalid conf 'const int *'
| |-ParmVarDecl 0x2938958b968 <line:528:33, col:45> col:45 used client_section 'const char *'
| `-CompoundStmt 0x2938958dec8 <line:529:1, line:558:1>
|   |-DeclStmt 0x2938958bcf0 <line:531:5, col:10>
|   | `-VarDecl 0x2938958bc88 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x2938958bd80 <line:532:5, col:13>
|   | `-VarDecl 0x2938958bd18 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
|   |-DoStmt 0x2938958c0c8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x2938958c088 <line:106:8, line:111:5>
|   | | `-IfStmt 0x2938958c070 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x2938958c058 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x2938958c040 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x2938958c018 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x2938958c000 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x2938958bf88 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x2938958bfe8 <col:28, <scratch space>:32:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x2938958bfd0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x2938958bfa8 <col:1> 'char [16]' lvalue "sk_conf != NULL"
|   | `-IntegerLiteral 0x2938958c0a0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x2938958c0e8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:535:32>
|   `-ReturnStmt 0x2938958deb8 <line:557:5, col:12>
|     `-IntegerLiteral 0x2938958de90 <col:12> 'int' 1
|-FunctionDecl 0x2938958e140 <line:560:1, line:591:1> line:560:12 invalid parse_server_options 'int (SSL_TEST_SERVER_CONF *, const int *, const char *)' static
| |-ParmVarDecl 0x2938958df10 <col:33, col:55> col:55 used server 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x2938958df90 <col:63, col:75> col:75 invalid conf 'const int *'
| |-ParmVarDecl 0x2938958e010 <line:561:33, col:45> col:45 used server_section 'const char *'
| `-CompoundStmt 0x29389589fc0 <line:562:1, line:591:1>
|   |-DeclStmt 0x29389589270 <line:564:5, col:10>
|   | `-VarDecl 0x29389589208 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x29389589300 <line:565:5, col:13>
|   | `-VarDecl 0x29389589298 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
|   |-DoStmt 0x29389589558 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x29389589518 <line:106:8, line:111:5>
|   | | `-IfStmt 0x29389589500 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x293895894e8 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x293895894d0 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x293895894a8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x29389589490 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x29389589418 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x29389589478 <col:28, <scratch space>:33:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x29389589460 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x29389589438 <col:1> 'char [16]' lvalue "sk_conf != NULL"
|   | `-IntegerLiteral 0x29389589530 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x29389589578 <.//openssl//file_jk/after\test\ssl_test_ctx.c:568:32>
|   `-ReturnStmt 0x29389589fb0 <line:590:5, col:12>
|     `-IntegerLiteral 0x29389589f88 <col:12> 'int' 1
`-FunctionDecl 0x29389586170 <line:593:1, line:662:1> line:593:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
  |-ParmVarDecl 0x2938958a010 <col:35, col:47> col:47 invalid conf 'const int *'
  |-ParmVarDecl 0x2938958a090 <col:53, col:65> col:65 used test_section 'const char *'
  `-CompoundStmt 0x29389588110 <line:594:1, line:662:1>
    |-DeclStmt 0x293895862d0 <line:596:5, col:22>
    | `-VarDecl 0x29389586268 <col:5, col:19> col:19 used ctx 'SSL_TEST_CTX *'
    |-DeclStmt 0x29389586368 <line:597:5, col:10>
    | `-VarDecl 0x29389586300 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x293895863f8 <line:598:5, col:13>
    | `-VarDecl 0x29389586390 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
    |-DoStmt 0x29389586650 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
    | |-CompoundStmt 0x29389586610 <line:106:8, line:111:5>
    | | `-IfStmt 0x293895865f8 <line:107:9, line:110:9>
    | |   |-OpaqueValueExpr 0x293895865e0 <<invalid sloc>> '_Bool'
    | |   `-CompoundStmt 0x293895865c8 <line:107:27, line:110:9>
    | |     `-CallExpr 0x293895865a0 <line:109:13, col:39> 'int'
    | |       |-ImplicitCastExpr 0x29389586588 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x29389586510 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
    | |       `-UnaryOperator 0x29389586570 <col:28, <scratch space>:34:1> 'int' prefix '!' cannot overflow
    | |         `-ImplicitCastExpr 0x29389586558 <col:1> 'char *' <ArrayToPointerDecay>
    | |           `-StringLiteral 0x29389586530 <col:1> 'char [16]' lvalue "sk_conf != NULL"
    | `-IntegerLiteral 0x29389586628 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
    |-NullStmt 0x29389586670 <.//openssl//file_jk/after\test\ssl_test_ctx.c:601:32>
    |-BinaryOperator 0x29389586760 <line:603:5, col:28> 'SSL_TEST_CTX *' '='
    | |-DeclRefExpr 0x29389586678 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x29389586268 'ctx' 'SSL_TEST_CTX *'
    | `-CallExpr 0x29389586740 <col:11, col:28> 'SSL_TEST_CTX *'
    |   `-ImplicitCastExpr 0x29389586728 <col:11> 'SSL_TEST_CTX *(*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x293895866b0 <col:11> 'SSL_TEST_CTX *(void)' Function 0x2938958cd08 'SSL_TEST_CTX_new' 'SSL_TEST_CTX *(void)'
    |-DoStmt 0x293895869f8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
    | |-CompoundStmt 0x293895869b8 <line:106:8, line:111:5>
    | | `-IfStmt 0x293895869a0 <line:107:9, line:110:9>
    | |   |-UnaryOperator 0x29389586898 <line:107:13, col:24> 'int' prefix '!' cannot overflow
    | |   | `-ParenExpr 0x29389586878 <col:14, col:24> 'int'
    | |   |   `-BinaryOperator 0x29389586858 <.//openssl//file_jk/after\test\ssl_test_ctx.c:604:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    | |   |     |-ImplicitCastExpr 0x29389586828 <.//openssl//file_jk/after\test\ssl_test_ctx.c:604:16> 'SSL_TEST_CTX *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x29389586780 <col:16> 'SSL_TEST_CTX *' lvalue Var 0x29389586268 'ctx' 'SSL_TEST_CTX *'
    | |   |     `-ImplicitCastExpr 0x29389586840 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <BitCast>
    | |   |       `-ParenExpr 0x29389586808 <col:17, col:27> 'void *'
    | |   |         `-CStyleCastExpr 0x293895867e0 <col:18, col:26> 'void *' <NullToPointer>
    | |   |           `-IntegerLiteral 0x293895867a0 <col:26> 'int' 0
    | |   `-CompoundStmt 0x29389586988 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
    | |     `-CallExpr 0x29389586960 <line:109:13, col:39> 'int'
    | |       |-ImplicitCastExpr 0x29389586948 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x293895868d0 <col:13> 'int ()' Function 0x29389583658 'OPENSSL_assert' 'int ()'
    | |       `-UnaryOperator 0x29389586930 <col:28, <scratch space>:35:1> 'int' prefix '!' cannot overflow
    | |         `-ImplicitCastExpr 0x29389586918 <col:1> 'char *' <ArrayToPointerDecay>
    | |           `-StringLiteral 0x293895868f0 <col:1> 'char [12]' lvalue "ctx != NULL"
    | `-IntegerLiteral 0x293895869d0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
    |-NullStmt 0x29389586a18 <.//openssl//file_jk/after\test\ssl_test_ctx.c:604:28>
    |-GotoStmt 0x29389587f08 <line:655:5, col:10> 'done' 0x29389587eb8
    |-LabelStmt 0x29389587fb8 <line:657:2, line:658:26> 'err'
    | `-CallExpr 0x29389587f78 <col:5, col:26> 'void'
    |   |-ImplicitCastExpr 0x29389587f60 <col:5> 'void (*)(SSL_TEST_CTX *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x29389587f20 <col:5> 'void (SSL_TEST_CTX *)' Function 0x2938958b430 'SSL_TEST_CTX_free' 'void (SSL_TEST_CTX *)'
    |   `-ImplicitCastExpr 0x29389587fa0 <col:23> 'SSL_TEST_CTX *' <LValueToRValue>
    |     `-DeclRefExpr 0x29389587f40 <col:23> 'SSL_TEST_CTX *' lvalue Var 0x29389586268 'ctx' 'SSL_TEST_CTX *'
    |-BinaryOperator 0x29389588090 <line:659:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'SSL_TEST_CTX *' '='
    | |-DeclRefExpr 0x29389587fd0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:659:5> 'SSL_TEST_CTX *' lvalue Var 0x29389586268 'ctx' 'SSL_TEST_CTX *'
    | `-ImplicitCastExpr 0x29389588078 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <NullToPointer>
    |   `-ParenExpr 0x29389588058 <col:17, col:27> 'void *'
    |     `-CStyleCastExpr 0x29389588030 <col:18, col:26> 'void *' <NullToPointer>
    |       `-IntegerLiteral 0x29389587ff0 <col:26> 'int' 0
    `-LabelStmt 0x293895880f8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:660:2, line:661:12> 'done'
      `-ReturnStmt 0x293895880e8 <col:5, col:12>
        `-ImplicitCastExpr 0x293895880d0 <col:12> 'SSL_TEST_CTX *' <LValueToRValue>
          `-DeclRefExpr 0x293895880b0 <col:12> 'SSL_TEST_CTX *' lvalue Var 0x29389586268 'ctx' 'SSL_TEST_CTX *'
