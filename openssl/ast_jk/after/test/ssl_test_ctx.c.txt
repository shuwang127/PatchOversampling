TranslationUnitDecl 0x299c85a40f8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x299c85a4990 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x299c85a4690 '__int128'
|-TypedefDecl 0x299c85a4a00 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x299c85a46b0 'unsigned __int128'
|-TypedefDecl 0x299c85a4d38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x299c85a4af0 'struct __NSConstantString_tag'
|   `-Record 0x299c85a4a58 '__NSConstantString_tag'
|-TypedefDecl 0x299c85a4da8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x299c85a42d0 'unsigned long long'
|-TypedefDecl 0x299c85a4e40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x299c85a4e00 'char *'
|   `-BuiltinType 0x299c85a4190 'char'
|-TypedefDecl 0x299c85a4eb0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x299c85a4e00 'char *'
|   `-BuiltinType 0x299c85a4190 'char'
|-TypedefDecl 0x299c85a4f70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x299c85a42d0 'unsigned long long'
|-TypedefDecl 0x299c85a4fe0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x299c85a4e00 'char *'
|   `-BuiltinType 0x299c85a4190 'char'
|-FunctionDecl 0x299ca1693f0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x299ca169490 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x299ca169500 <col:21> Implicit
|-FunctionDecl 0x299ca169558 prev 0x299ca1693f0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x299ca169280 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x299ca169648 <col:21> Inherited Implicit
|-TypedefDecl 0x299ca169688 prev 0x299c85a4da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x299c85a42d0 'unsigned long long'
|-TypedefDecl 0x299ca169730 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x299ca169700 'size_t' sugar
|   |-Typedef 0x299ca169688 'size_t'
|   `-BuiltinType 0x299c85a42d0 'unsigned long long'
|-TypedefDecl 0x299ca1697a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x299c85a4230 'long long'
|-TypedefDecl 0x299ca169810 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x299c85a4230 'long long'
|-TypedefDecl 0x299ca169880 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x299c85a4270 'unsigned short'
|-TypedefDecl 0x299ca1698f0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x299c85a4270 'unsigned short'
|-TypedefDecl 0x299ca169960 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x299c85a4270 'unsigned short'
|-TypedefDecl 0x299ca1699d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x299c85a41f0 'int'
|-TypedefDecl 0x299ca169a40 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x299c85a4210 'long'
|-TypedefDecl 0x299ca169ab0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x299c85a4230 'long long'
|-TypedefDecl 0x299ca169b40 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x299ca169b10 '__time64_t' sugar
|   |-Typedef 0x299ca169ab0 '__time64_t'
|   `-BuiltinType 0x299c85a4230 'long long'
|-FunctionDecl 0x299ca169cb8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x299ca169ed8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x299ca1a8e90 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x299ca16a018 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x299ca16a090 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x299ca16a108 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x299ca16a188 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x299ca1a8c30 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x299ca1a8f70 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x299ca1a9030 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x299ca1a91a0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x299ca1a9150 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x299ca1a90f0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x299ca1a9010 'struct threadlocaleinfostruct'
|       `-Record 0x299ca1b0cb0 'threadlocaleinfostruct'
|-TypedefDecl 0x299ca1a92b0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x299ca1a9260 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x299ca1a9200 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x299ca1a90d0 'struct threadmbcinfostruct'
|       `-Record 0x299ca1a9030 'threadmbcinfostruct'
|-RecordDecl 0x299ca1a9308 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x299ca1a93c0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x299ca1a9480 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x299ca1a9510 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x299ca1a95a0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x299ca1a9658 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x299ca1a9600 'struct localeinfo_struct' sugar
|   `-RecordType 0x299ca1a9460 'struct localeinfo_struct'
|     `-Record 0x299ca1a93c0 'localeinfo_struct'
|-TypedefDecl 0x299ca1a9730 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x299ca1a96e0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x299ca1a9600 'struct localeinfo_struct' sugar
|     `-RecordType 0x299ca1a9460 'struct localeinfo_struct'
|       `-Record 0x299ca1a93c0 'localeinfo_struct'
|-RecordDecl 0x299ca1a97a8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x299ca1a9860 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x299ca1a98d8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x299ca1a9998 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x299ca1a9a30 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x299ca1a9aa0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x299ca1a9b58 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x299ca1a9b00 'struct localerefcount' sugar
|   `-RecordType 0x299ca1a9840 'struct localerefcount'
|     `-Record 0x299ca1a97a8 'localerefcount'
|-RecordDecl 0x299ca1b0cb0 prev 0x299ca1a8f70 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x299ca1b0d30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x299ca1b0da8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x299ca1b0e18 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x299ca1b0e88 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x299ca1b0ef8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x299ca1b10b8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x299ca1b1128 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x299ca1b1198 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x299ca1b1208 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x299ca1b1278 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x299ca1b12e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x299ca1b1340 parent 0x299c85a40f8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x299ca1b14d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x299ca1b1540 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x299ca1b15b0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x299ca1b1620 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x299ca1b16c0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x299ca1b1730 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x299ca1b1840 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x299ca1b1978 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x299ca1b1a28 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x299ca1b19d0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x299ca1a9010 'struct threadlocaleinfostruct'
|     `-Record 0x299ca1b0cb0 'threadlocaleinfostruct'
|-FunctionDecl 0x299ca1b6f20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x299ca1b1ab0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x299ca1b1b60 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x299ca1b1be0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x299ca1b6d10 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1b72e8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1b7388 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x299ca1b73f0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x299ca1b7458 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1b74d8 prev 0x299ca1b72e8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x299ca1b7010 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x299ca1b7090 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x299ca1b7108 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1b7898 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x299ca1b75c0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x299ca1b7640 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x299ca1b76b8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1b7d70 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1b7980 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x299ca1b7a00 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x299ca1b7a78 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1b7b10 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1b8078 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1b8118 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x299ca1b8180 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x299ca1b81e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1b8268 prev 0x299ca1b8078 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x299ca1b7e60 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x299ca1b7ee0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x299ca1b7f58 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1b8628 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1b86c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x299ca1b8730 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x299ca1b8798 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1b8818 prev 0x299ca1b8628 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x299ca1b8350 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x299ca1b83d0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x299ca1b8448 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1b4cf0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x299ca1b8928 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x299ca1b89c0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ca1b8a40 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x299ca1b8ab8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ca1b50b8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1b5158 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x299ca1b51c0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x299ca1b5228 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1b52a8 prev 0x299ca1b50b8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x299ca1b4de0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x299ca1b4e60 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x299ca1b4ed8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1b5728 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1b57c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x299ca1b5830 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x299ca1b5898 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x299ca1b5900 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1b5988 prev 0x299ca1b5728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x299ca1b5470 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x299ca1b54f0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x299ca1b5570 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x299ca1b55e8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca1b5a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x299ca1b2e68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x299ca1b5c10 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x299ca1b2cd0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x299ca1b2d48 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca1b2f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x299ca1b3310 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x299ca1b3048 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x299ca1b30c0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1b3140 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x299ca1b36e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x299ca1b34f0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x299ca1b3570 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x299ca1b3790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1b3ba0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x299ca1b38d8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x299ca1b3950 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1b39d0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x299ca1b8ff0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x299ca1b9090 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x299ca1b90f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ca1b9170 prev 0x299ca1b8ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x299ca1b8e08 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x299ca1b8e88 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x299ca1b9220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1b9578 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x299ca1b9368 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x299ca1b93e0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1b9460 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x299ca1b98a0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x299ca1b9940 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x299ca1b99a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ca1b9a20 prev 0x299ca1b98a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x299ca1b9720 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x299ca1b97a0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x299ca1b9ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1b1d90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit used strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x299ca1b1e30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1b1e98 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ca1b1f10 prev 0x299ca1b1d90 <col:16, col:91> col:32 used strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x299ca1b9c18 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x299ca1b9c98 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x299ca1b2160 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x299ca1b2200 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ca1b2270 prev 0x299ca1b2160 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x299ca1b1ff0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x299ca1b2568 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x299ca1b2348 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x299ca1b23c0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1b27b8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x299ca1b2648 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x299ca1b26c0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x299ca1b2ae8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x299ca1b2ad8 <line:132:5, col:51>
|     `-ConditionalOperator 0x299ca1b2aa8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x299ca1b2918 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x299ca1b28f8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x299ca1b28c8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x299ca1b2880 <col:13> 'const char *' lvalue ParmVar 0x299ca1b2648 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x299ca1b28e0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x299ca1b28a0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x299ca1b2a90 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x299ca1b2938 <col:24> 'int' 0
|       `-CallExpr 0x299ca1b2a30 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x299ca1b2a18 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x299ca1b2960 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x299ca1b2568 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x299ca1b2a60 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x299ca1b2980 <col:36> 'const char *' lvalue ParmVar 0x299ca1b2648 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x299ca1b2a78 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x299ca1b29a0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x299ca1b26c0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1bae88 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x299ca1b2b18 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x299ca1b2b90 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ca1b2c10 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x299ca1bad50 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ca1bb190 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1bb230 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x299ca1bb298 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x299ca1bb300 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1bb380 prev 0x299ca1bb190 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x299ca1baf78 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x299ca1baff8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x299ca1bb070 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1bb5b8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x299ca1bb468 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x299ca1bb880 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x299ca1bb920 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1bb988 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x299ca1bba00 prev 0x299ca1bb880 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x299ca1bb690 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x299ca1bb710 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x299ca1bbc60 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ca1bbae0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x299ca1bbb60 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x299ca1b9ec0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ca1b9d40 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x299ca1b9dc0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x299ca1ba278 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x299ca1b9fa0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1ba020 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x299ca1ba098 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1ba4e0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ca1ba360 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x299ca1ba3e0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x299ca1ba7d8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x299ca1ba5c0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1ba640 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x299ca1ba6b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1baa40 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ca1ba8c0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x299ca1ba940 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x299ca1b3ce0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x299ca1bab20 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1baba0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x299ca1bac18 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1b4098 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x299ca1b3dc8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1b3e48 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x299ca1b3ec0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1b4500 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1b4180 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1b4200 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x299ca1b4278 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1b42f0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1b4808 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x299ca1b45f0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1b4670 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x299ca1b46e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1b4ba0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1b48f0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1b4970 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x299ca1b49e8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1b4a60 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1bbf88 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x299ca1bc028 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1bc090 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ca1bc108 prev 0x299ca1bbf88 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x299ca1bbd60 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x299ca1bbde0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x299ca1bc3c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x299ca1bc2e0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x299ca1bc468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1bc840 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x299ca1bc5b0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x299ca1bc628 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1bc6a8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x299ca1bcb58 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x299ca1bcbf8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x299ca1bcc68 prev 0x299ca1bcb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x299ca1bca20 <col:90> col:93 'int'
| `-DeprecatedAttr 0x299ca1bcd10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1c10c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x299ca1c0eb0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x299ca1c0f28 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1c0fa8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x299ca1c13c8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x299ca1c11a8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x299ca1c1220 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1c16b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x299ca1c1568 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x299ca1c1760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1c1b70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1c18a8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x299ca1c1920 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1c1998 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1bef40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x299ca1c1d18 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x299ca1bed90 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x299ca1beff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1bf4a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x299ca1bf138 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x299ca1bf1b0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ca1bf230 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x299ca1bf2a8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ca1bf928 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1bf9c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x299ca1bfa30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1bfa98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1bfb18 prev 0x299ca1bf928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x299ca1bf658 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x299ca1bf6d8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x299ca1bf750 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca1bfbd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1bff50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1bfff0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x299ca1c0058 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1c00c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1c0140 prev 0x299ca1bff50 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x299ca1bfd18 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1bfdb8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x299ca1bfe30 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1c0440 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x299ca1c0228 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1c02a8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x299ca1c0320 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1c07d8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1c0528 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1c05a8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x299ca1c0620 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1c0698 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1c0b70 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x299ca1c08c8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x299ca1c0940 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ca1c09c0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x299ca1c0a38 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ca1bcf08 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1bcfa8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x299ca1bd010 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1bd078 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1bd0f8 prev 0x299ca1bcf08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x299ca1c0d20 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x299ca1bcd70 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x299ca1bcde8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca1bd1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1bd668 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x299ca1bd2f8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x299ca1bd370 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x299ca1bd3f0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x299ca1bd468 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1bdae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x299ca1bd818 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x299ca1bd898 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x299ca1bd910 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca1bdba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1bdef0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x299ca1bdf90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1bdff8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ca1be070 prev 0x299ca1bdef0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x299ca1bdce8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x299ca1bdd80 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x299ca1be2d0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x299ca1be370 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1be3d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x299ca1be450 prev 0x299ca1be2d0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x299ca1be150 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x299ca1be1d0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x299ca1be610 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x299ca1be530 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x299ca1be860 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x299ca1be900 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1be968 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ca1be9e0 prev 0x299ca1be860 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x299ca1be6e8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x299ca1be768 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x299ca1bec40 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x299ca1bece0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1f0020 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ca1f0098 prev 0x299ca1bec40 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x299ca1beac0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x299ca1beb40 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x299ca1f03b8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x299ca1f0458 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x299ca1f04c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ca1f0538 prev 0x299ca1f03b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x299ca1f0238 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x299ca1f02b8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x299ca1f05e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1f09c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x299ca1f0730 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x299ca1f07b0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x299ca1f0830 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x299ca1f0c20 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x299ca1f0ab0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x299ca1f0b28 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1f0ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x299ca1f0dc0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x299ca1f0f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1e92b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1e90b0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x299ca1e9128 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1e91a0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1e95d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x299ca1e9460 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x299ca1e94d8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x299ca1e9688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1e9aa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1e9b40 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x299ca1e9ba8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca1e9c10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1e9c90 prev 0x299ca1e9aa0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x299ca1e97d0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x299ca1e9850 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x299ca1e98c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1ec118 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1e9d78 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x299ca1e9df8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x299ca1e9e70 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1e9ee8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1ec3c0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x299ca1ec460 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x299ca1ec4d0 prev 0x299ca1ec3c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x299ca1ec2e0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x299ca1ec578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x299ca1ec8c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ca1ec740 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1ec7c0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x299ca1ec970 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x299ca1eccb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x299ca1ecb38 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1ecbb8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x299ca1ecd68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x299ca1f1068 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x299ca1ecf30 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x299ca1f1110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x299ca1f1528 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x299ca1f1310 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x299ca1f1390 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x299ca1f1408 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca1f15e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x299ca1f19c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x299ca1f17a8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x299ca1f1828 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x299ca1f18a0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca1f1a78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x299ca1f1d20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x299ca1f1c40 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x299ca1f1dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x299ca1ef110 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x299ca1f1f90 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x299ca1ef010 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x299ca1ef1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x299ca1ef468 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x299ca1ef388 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x299ca1ef510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x299ca1ef7a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x299ca1ef630 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x299ca1efb30 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x299ca1ef870 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ca1ef8e8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1ef960 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x299ca1efee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1efcd0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x299ca1efd48 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x299ca1eff98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1eb2e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x299ca1eb388 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x299ca1eb3f0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x299ca1eb468 prev 0x299ca1eb2e8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x299ca1eb0c8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ca1eb140 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x299ca1eb760 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x299ca1eb800 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x299ca1eb868 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x299ca1eb8e0 prev 0x299ca1eb760 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x299ca1eb540 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x299ca1eb5b8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x299ca1ebbc0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x299ca1eb9b8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ca1eba30 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1ebaa8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x299ca1ebed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1ebd60 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x299ca1ebdd8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x299ca1ebf80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1ea2d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1ea0b8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ca1ea130 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x299ca1ea520 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x299ca1ea5c0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x299ca1ea630 prev 0x299ca1ea520 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x299ca1ea3b0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x299ca1ea918 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ca1ea700 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x299ca1ea778 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1eab60 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x299ca1ea9f0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x299ca1eaa68 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x299ca1eaef8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x299ca1eaee8 <line:307:5, col:56>
|     `-ConditionalOperator 0x299ca1eaeb8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x299ca1ead20 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x299ca1ead00 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x299ca1eacd0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x299ca1eac28 <col:13> 'const wchar_t *' lvalue ParmVar 0x299ca1ea9f0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x299ca1eace8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x299ca1eacb0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x299ca1eac88 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x299ca1eac48 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x299ca1eaea0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x299ca1ead40 <col:29> 'int' 0
|       `-CallExpr 0x299ca1eae40 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x299ca1eae28 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x299ca1ead68 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x299ca1ea918 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x299ca1eae70 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x299ca1ead88 <col:41> 'const wchar_t *' lvalue ParmVar 0x299ca1ea9f0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x299ca1eae88 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x299ca1eada8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x299ca1eaa68 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1ed2e8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x299ca1eaf20 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ca1ecff0 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ca1ed068 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x299ca1ed0e0 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ca1ed750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ca1ed490 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x299ca1ed508 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x299ca1ed580 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca1ed808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1edc18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x299ca1edcb8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x299ca1edd20 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x299ca1edd88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x299ca1ede08 prev 0x299ca1edc18 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x299ca1ed948 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca1ed9c0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ca1eda38 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1f5220 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x299ca1edee8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ca1edf60 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x299ca1f5070 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f50e8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x299ca1f55d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ca1f53c8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x299ca1f5440 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x299ca1f54b8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca1f5688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1f59e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1f57c8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f5840 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x299ca1f5c30 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x299ca1f5ac0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f5b38 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x299ca1f5e78 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1f5d08 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f5d80 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x299ca1ee060 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1f5f50 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f5fc8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x299ca1ee368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1ee1f8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ca1ee270 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x299ca1ee418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1ee880 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x299ca1ee558 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ca1ee5d0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x299ca1ee6b0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x299ca1eeba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x299ca1eea28 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x299ca1eec48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1f20b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x299ca1eed88 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x299ca1eee00 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1eee80 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x299ca1f2360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x299ca1f2288 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x299ca1f2408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1f27d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x299ca1f2548 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x299ca1f25c0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1f2638 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x299ca1f2a28 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1f28b0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f2928 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x299ca1f2dc8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x299ca1f2b00 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca1f2b78 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f2bf0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1f9138 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ca1f2ea8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca1f2f20 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f2f98 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1f9590 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1f9218 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca1f9290 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x299ca1f9308 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1f9380 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1f99e8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x299ca1f9678 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ca1f96f0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x299ca1f9768 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x299ca1f97e0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1f9e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x299ca1f9b90 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ca1f9c08 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x299ca1f9c80 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca1f9f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1f71a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x299ca1fa048 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x299ca1f7530 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x299ca1f7270 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ca1f72e8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1f7360 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x299ca1f78e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x299ca1f76d0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ca1f7748 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x299ca1f7998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1f7cf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x299ca1f7ad8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x299ca1f7b50 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1f7f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x299ca1f7e90 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x299ca1f8010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1f8460 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1f8198 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ca1f8210 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1f8288 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1f8818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x299ca1f8600 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x299ca1f8678 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x299ca1f88c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1f8b78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x299ca1f8a08 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x299ca1f8a80 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1f8de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x299ca1f8d10 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x299ca1f8e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1fa250 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1f8fd0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ca1fa0c0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1fa138 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1fa560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x299ca1fa3f0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x299ca1fa468 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x299ca1fa610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x299ca1faa10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ca1fa750 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ca1fa7c8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x299ca1fa840 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1fae58 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1faaf0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x299ca1fab68 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x299ca1fabe0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1fac58 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1f3050 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1faf40 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x299ca1fafb8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x299ca1f3338 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x299ca1f3128 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca1f31a0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f3218 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1f3590 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1f3418 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f3490 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x299ca1f3878 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x299ca1f3668 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca1f36e0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f3758 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca1f3b68 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ca1f3958 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca1f39d0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ca1f3a48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca1f3ef0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca1f3c48 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca1f3cc0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x299ca1f3d38 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca1f3db0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca2012c8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ca1f3fd8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca201130 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x299ca2011a8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x299ca201650 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x299ca2013a8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca201420 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x299ca201498 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x299ca201510 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x299ca2018b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x299ca2017d8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x299ca201958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x299ca201c90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca201b18 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca201b90 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x299ca201d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x299ca202140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x299ca201f00 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca201f78 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x299ca201ff0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca2021f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x299ca2025c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x299ca2023b8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ca202430 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x299ca2024a8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x299ca202678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x299ca202910 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x299ca202838 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x299ca2029b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x299ca202ce8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x299ca202b78 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x299ca202bf0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x299ca202d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x299ca203030 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x299ca202f58 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x299ca2030d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x299ca1fc330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x299ca1fc258 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x299ca1fc3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x299ca1fc710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x299ca1fc598 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x299ca1fc610 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x299ca1fc7c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x299ca1fc8d0 <.//openssl//file_jk/after\test/ssl_test_ctx.h:16:9, line:23:1> line:16:9
| |-EnumConstantDecl 0x299ca1fc9f0 <line:17:5, col:24> col:5 referenced SSL_TEST_SUCCESS 'int'
| | `-ConstantExpr 0x299ca1fc9d8 <col:24> 'int'
| |   `-IntegerLiteral 0x299ca1fc9b0 <col:24> 'int' 0
| |-EnumConstantDecl 0x299ca1fca48 <line:18:5> col:5 referenced SSL_TEST_SERVER_FAIL 'int'
| |-EnumConstantDecl 0x299ca1fcaa0 <line:19:5> col:5 referenced SSL_TEST_CLIENT_FAIL 'int'
| |-EnumConstantDecl 0x299ca1fcaf8 <line:20:5> col:5 referenced SSL_TEST_INTERNAL_ERROR 'int'
| `-EnumConstantDecl 0x299ca1fcb50 <line:22:5> col:5 SSL_TEST_FIRST_HANDSHAKE_FAILED 'int'
|-TypedefDecl 0x299ca1fcc08 <line:16:1, line:23:3> col:3 referenced ssl_test_result_t 'enum ssl_test_result_t':'ssl_test_result_t'
| `-ElaboratedType 0x299ca1fcbb0 'enum ssl_test_result_t' sugar
|   `-EnumType 0x299ca1fc990 'ssl_test_result_t'
|     `-Enum 0x299ca1fc8d0 ''
|-EnumDecl 0x299ca1fcc78 <line:25:9, line:29:1> line:25:9
| |-EnumConstantDecl 0x299ca1fcd90 <line:26:5, col:28> col:5 referenced SSL_TEST_VERIFY_NONE 'int'
| | `-ConstantExpr 0x299ca1fcd78 <col:28> 'int'
| |   `-IntegerLiteral 0x299ca1fcd50 <col:28> 'int' 0
| |-EnumConstantDecl 0x299ca1fcde8 <line:27:5> col:5 referenced SSL_TEST_VERIFY_ACCEPT_ALL 'int'
| `-EnumConstantDecl 0x299ca1fce40 <line:28:5> col:5 referenced SSL_TEST_VERIFY_REJECT_ALL 'int'
|-TypedefDecl 0x299ca1fcef8 <line:25:1, line:29:3> col:3 referenced ssl_verify_callback_t 'enum ssl_verify_callback_t':'ssl_verify_callback_t'
| `-ElaboratedType 0x299ca1fcea0 'enum ssl_verify_callback_t' sugar
|   `-EnumType 0x299ca1fcd30 'ssl_verify_callback_t'
|     `-Enum 0x299ca1fcc78 ''
|-EnumDecl 0x299ca1fcf68 <line:31:9, line:36:1> line:31:9
| |-EnumConstantDecl 0x299ca1fd080 <line:32:5, col:32> col:5 referenced SSL_TEST_SERVERNAME_NONE 'int'
| | `-ConstantExpr 0x299ca1fd068 <col:32> 'int'
| |   `-IntegerLiteral 0x299ca1fd040 <col:32> 'int' 0
| |-EnumConstantDecl 0x299ca1fd0f0 <line:33:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER1 'int'
| |-EnumConstantDecl 0x299ca1fd148 <line:34:5> col:5 referenced SSL_TEST_SERVERNAME_SERVER2 'int'
| `-EnumConstantDecl 0x299ca1fd1a0 <line:35:5> col:5 referenced SSL_TEST_SERVERNAME_INVALID 'int'
|-TypedefDecl 0x299ca1fd258 <line:31:1, line:36:3> col:3 referenced ssl_servername_t 'enum ssl_servername_t':'ssl_servername_t'
| `-ElaboratedType 0x299ca1fd200 'enum ssl_servername_t' sugar
|   `-EnumType 0x299ca1fd020 'ssl_servername_t'
|     `-Enum 0x299ca1fcf68 ''
|-EnumDecl 0x299ca1fd2c8 <line:38:9, line:42:1> line:38:9
| |-EnumConstantDecl 0x299ca1fd3e0 <line:39:5, col:35> col:5 referenced SSL_TEST_SERVERNAME_CB_NONE 'int'
| | `-ConstantExpr 0x299ca1fd3c8 <col:35> 'int'
| |   `-IntegerLiteral 0x299ca1fd3a0 <col:35> 'int' 0
| |-EnumConstantDecl 0x299ca1fd438 <line:40:5> col:5 referenced SSL_TEST_SERVERNAME_IGNORE_MISMATCH 'int'
| `-EnumConstantDecl 0x299ca1fd490 <line:41:5> col:5 referenced SSL_TEST_SERVERNAME_REJECT_MISMATCH 'int'
|-TypedefDecl 0x299ca1fd548 <line:38:1, line:42:3> col:3 referenced ssl_servername_callback_t 'enum ssl_servername_callback_t':'ssl_servername_callback_t'
| `-ElaboratedType 0x299ca1fd4f0 'enum ssl_servername_callback_t' sugar
|   `-EnumType 0x299ca1fd380 'ssl_servername_callback_t'
|     `-Enum 0x299ca1fd2c8 ''
|-EnumDecl 0x299ca1fd5b8 <line:44:9, line:49:1> line:44:9
| |-EnumConstantDecl 0x299ca1fd6d0 <line:45:5, col:38> col:5 referenced SSL_TEST_SESSION_TICKET_IGNORE 'int'
| | `-ConstantExpr 0x299ca1fd6b8 <col:38> 'int'
| |   `-IntegerLiteral 0x299ca1fd690 <col:38> 'int' 0
| |-EnumConstantDecl 0x299ca1fd728 <line:46:5> col:5 referenced SSL_TEST_SESSION_TICKET_YES 'int'
| |-EnumConstantDecl 0x299ca1fd780 <line:47:5> col:5 referenced SSL_TEST_SESSION_TICKET_NO 'int'
| `-EnumConstantDecl 0x299ca1fd7d8 <line:48:5> col:5 SSL_TEST_SESSION_TICKET_BROKEN 'int'
|-TypedefDecl 0x299ca1fd888 <line:44:1, line:49:3> col:3 referenced ssl_session_ticket_t 'enum ssl_session_ticket_t':'ssl_session_ticket_t'
| `-ElaboratedType 0x299ca1fd830 'enum ssl_session_ticket_t' sugar
|   `-EnumType 0x299ca1fd670 'ssl_session_ticket_t'
|     `-Enum 0x299ca1fd5b8 ''
|-EnumDecl 0x299ca1fd8f8 <line:51:9, line:54:1> line:51:9
| |-EnumConstantDecl 0x299ca1fda10 <line:52:5, col:27> col:5 referenced SSL_TEST_METHOD_TLS 'int'
| | `-ConstantExpr 0x299ca1fd9f8 <col:27> 'int'
| |   `-IntegerLiteral 0x299ca1fd9d0 <col:27> 'int' 0
| `-EnumConstantDecl 0x299ca1fda68 <line:53:5> col:5 referenced SSL_TEST_METHOD_DTLS 'int'
|-TypedefDecl 0x299ca1fdb18 <line:51:1, line:54:3> col:3 referenced ssl_test_method_t 'enum ssl_test_method_t':'ssl_test_method_t'
| `-ElaboratedType 0x299ca1fdac0 'enum ssl_test_method_t' sugar
|   `-EnumType 0x299ca1fd9b0 'ssl_test_method_t'
|     `-Enum 0x299ca1fd8f8 ''
|-EnumDecl 0x299ca1fdb88 <line:56:9, line:61:1> line:56:9
| |-EnumConstantDecl 0x299ca1fdca0 <line:57:5, col:33> col:5 referenced SSL_TEST_HANDSHAKE_SIMPLE 'int'
| | `-ConstantExpr 0x299ca1fdc88 <col:33> 'int'
| |   `-IntegerLiteral 0x299ca1fdc60 <col:33> 'int' 0
| |-EnumConstantDecl 0x299ca1fdcf8 <line:58:5> col:5 referenced SSL_TEST_HANDSHAKE_RESUME 'int'
| |-EnumConstantDecl 0x299ca1fdd50 <line:59:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_SERVER 'int'
| `-EnumConstantDecl 0x299ca1fdda8 <line:60:5> col:5 referenced SSL_TEST_HANDSHAKE_RENEG_CLIENT 'int'
|-TypedefDecl 0x299ca1fde58 <line:56:1, line:61:3> col:3 referenced ssl_handshake_mode_t 'enum ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-ElaboratedType 0x299ca1fde00 'enum ssl_handshake_mode_t' sugar
|   `-EnumType 0x299ca1fdc40 'ssl_handshake_mode_t'
|     `-Enum 0x299ca1fdb88 ''
|-EnumDecl 0x299ca1fdec8 <line:63:9, line:67:1> line:63:9
| |-EnumConstantDecl 0x299ca1fdfe0 <line:64:5, col:35> col:5 referenced SSL_TEST_CT_VALIDATION_NONE 'int'
| | `-ConstantExpr 0x299ca1fdfc8 <col:35> 'int'
| |   `-IntegerLiteral 0x299ca1fdfa0 <col:35> 'int' 0
| |-EnumConstantDecl 0x299ca1fe038 <line:65:5> col:5 referenced SSL_TEST_CT_VALIDATION_PERMISSIVE 'int'
| `-EnumConstantDecl 0x299ca1fe090 <line:66:5> col:5 referenced SSL_TEST_CT_VALIDATION_STRICT 'int'
|-TypedefDecl 0x299ca2051c8 <line:63:1, line:67:3> col:3 referenced ssl_ct_validation_t 'enum ssl_ct_validation_t':'ssl_ct_validation_t'
| `-ElaboratedType 0x299ca205170 'enum ssl_ct_validation_t' sugar
|   `-EnumType 0x299ca1fdf80 'ssl_ct_validation_t'
|     `-Enum 0x299ca1fdec8 ''
|-EnumDecl 0x299ca205238 <line:69:9, line:73:1> line:69:9
| |-EnumConstantDecl 0x299ca205350 <line:70:5, col:33> col:5 referenced SSL_TEST_CERT_STATUS_NONE 'int'
| | `-ConstantExpr 0x299ca205338 <col:33> 'int'
| |   `-IntegerLiteral 0x299ca205310 <col:33> 'int' 0
| |-EnumConstantDecl 0x299ca2053a8 <line:71:5> col:5 referenced SSL_TEST_CERT_STATUS_GOOD_RESPONSE 'int'
| `-EnumConstantDecl 0x299ca205400 <line:72:5> col:5 referenced SSL_TEST_CERT_STATUS_BAD_RESPONSE 'int'
|-TypedefDecl 0x299ca2054b8 <line:69:1, line:73:3> col:3 referenced ssl_cert_status_t 'enum ssl_cert_status_t':'ssl_cert_status_t'
| `-ElaboratedType 0x299ca205460 'enum ssl_cert_status_t' sugar
|   `-EnumType 0x299ca2052f0 'ssl_cert_status_t'
|     `-Enum 0x299ca205238 ''
|-RecordDecl 0x299ca205528 <line:78:9, line:89:1> line:78:9 struct definition
| |-FieldDecl 0x299ca205610 <line:80:5, col:27> col:27 referenced verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| |-FieldDecl 0x299ca2056a0 <line:82:5, col:22> col:22 referenced servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x299ca205710 <line:84:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x299ca205780 <line:85:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x299ca205810 <line:86:5, col:25> col:25 referenced ct_validation 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-FieldDecl 0x299ca205880 <line:88:5, col:11> col:11 referenced reneg_ciphers 'char *'
|-TypedefDecl 0x299ca205938 <line:78:1, line:89:3> col:3 referenced SSL_TEST_CLIENT_CONF 'struct SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| `-ElaboratedType 0x299ca2058e0 'struct SSL_TEST_CLIENT_CONF' sugar
|   `-RecordType 0x299ca2055c0 'SSL_TEST_CLIENT_CONF'
|     `-Record 0x299ca205528 ''
|-RecordDecl 0x299ca2059a8 <line:91:9, line:101:1> line:91:9 struct definition
| |-FieldDecl 0x299ca205a90 <line:93:5, col:31> col:31 referenced servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| |-FieldDecl 0x299ca205b00 <line:95:5, col:11> col:11 referenced npn_protocols 'char *'
| |-FieldDecl 0x299ca205b70 <line:96:5, col:11> col:11 referenced alpn_protocols 'char *'
| |-FieldDecl 0x299ca205be0 <line:98:5, col:9> col:9 referenced broken_session_ticket 'int'
| `-FieldDecl 0x299ca205c70 <line:100:5, col:23> col:23 referenced cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-TypedefDecl 0x299ca205d28 <line:91:1, line:101:3> col:3 referenced SSL_TEST_SERVER_CONF 'struct SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-ElaboratedType 0x299ca205cd0 'struct SSL_TEST_SERVER_CONF' sugar
|   `-RecordType 0x299ca205a40 'SSL_TEST_SERVER_CONF'
|     `-Record 0x299ca2059a8 ''
|-RecordDecl 0x299ca205d98 <line:103:9, line:107:1> line:103:9 struct definition
| |-FieldDecl 0x299ca205e80 <line:104:5, col:26> col:26 referenced client 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF'
| |-FieldDecl 0x299ca205f10 <line:105:5, col:26> col:26 referenced server 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
| `-FieldDecl 0x299ca205f78 <line:106:5, col:26> col:26 referenced server2 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF'
|-TypedefDecl 0x299ca2060a8 <line:103:1, line:107:3> col:3 referenced SSL_TEST_EXTRA_CONF 'struct SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| `-ElaboratedType 0x299ca206050 'struct SSL_TEST_EXTRA_CONF' sugar
|   `-RecordType 0x299ca205e30 'SSL_TEST_EXTRA_CONF'
|     `-Record 0x299ca205d98 ''
|-RecordDecl 0x299ca1fe100 <line:109:9, line:166:1> line:109:9 struct definition
| |-FieldDecl 0x299ca1fe1f0 <line:114:5, col:23> col:23 referenced method 'ssl_test_method_t':'ssl_test_method_t'
| |-FieldDecl 0x299ca1fe280 <line:116:5, col:26> col:26 referenced handshake_mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| |-FieldDecl 0x299ca1fe2f0 <line:121:5, col:9> col:9 referenced app_data_size 'int'
| |-FieldDecl 0x299ca1fe360 <line:123:5, col:9> col:9 referenced max_fragment_size 'int'
| |-FieldDecl 0x299ca1fe3f0 <line:129:5, col:25> col:25 referenced extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x299ca1fe458 <line:131:5, col:25> col:25 referenced resume_extra 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF'
| |-FieldDecl 0x299ca1fe4e0 <line:137:5, col:23> col:23 referenced expected_result 'ssl_test_result_t':'ssl_test_result_t'
| |-FieldDecl 0x299ca1fe550 <line:141:5, col:9> col:9 referenced expected_client_alert 'int'
| |-FieldDecl 0x299ca1fe5c0 <line:143:5, col:9> col:9 referenced expected_server_alert 'int'
| |-FieldDecl 0x299ca1fe630 <line:146:5, col:9> col:9 referenced expected_protocol 'int'
| |-FieldDecl 0x299ca1fe698 <line:157:5, col:22> col:22 referenced expected_servername 'ssl_servername_t':'ssl_servername_t'
| |-FieldDecl 0x299ca1fe720 <line:158:5, col:26> col:26 referenced session_ticket_expected 'ssl_session_ticket_t':'ssl_session_ticket_t'
| |-FieldDecl 0x299ca1fe790 <line:160:5, col:11> col:11 referenced expected_npn_protocol 'char *'
| |-FieldDecl 0x299ca1fe800 <line:161:5, col:11> col:11 referenced expected_alpn_protocol 'char *'
| |-FieldDecl 0x299ca1fe870 <line:163:5, col:9> col:9 referenced resumption_expected 'int'
| `-FieldDecl 0x299ca1fe8e0 <line:165:5, col:9> col:9 referenced expected_tmp_key_type 'int'
|-TypedefDecl 0x299ca1fe998 <line:109:1, line:166:3> col:3 referenced SSL_TEST_CTX 'struct SSL_TEST_CTX':'SSL_TEST_CTX'
| `-ElaboratedType 0x299ca1fe940 'struct SSL_TEST_CTX' sugar
|   `-RecordType 0x299ca1fe1a0 'SSL_TEST_CTX'
|     `-Record 0x299ca1fe100 ''
|-FunctionDecl 0x299ca1feb30 <line:168:1, col:58> col:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| `-ParmVarDecl 0x299ca1fea18 <col:34, col:52> col:52 result 'ssl_test_result_t':'ssl_test_result_t'
|-FunctionDecl 0x299ca1fecf0 <line:169:1, col:37> col:13 ssl_alert_name 'const char *(int)'
| `-ParmVarDecl 0x299ca1fec08 <col:28, col:32> col:32 alert 'int'
|-FunctionDecl 0x299ca1fee78 <line:170:1, col:43> col:13 ssl_protocol_name 'const char *(int)'
| `-ParmVarDecl 0x299ca1fedc8 <col:31, col:35> col:35 protocol 'int'
|-FunctionDecl 0x299ca1ff060 <line:171:1, col:75> col:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| `-ParmVarDecl 0x299ca1fef48 <col:38, col:60> col:60 verify_callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-FunctionDecl 0x299ca2062c0 <line:172:1, col:56> col:13 ssl_servername_name 'const char *(ssl_servername_t)'
| `-ParmVarDecl 0x299ca2061b0 <col:33, col:50> col:50 server 'ssl_servername_t':'ssl_servername_t'
|-FunctionDecl 0x299ca2064a0 <line:173:1, line:174:61> line:173:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| `-ParmVarDecl 0x299ca206390 <col:42, line:174:42> col:42 servername_callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-FunctionDecl 0x299ca206680 <line:175:1, col:64> col:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| `-ParmVarDecl 0x299ca206570 <col:37, col:58> col:58 server 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-FunctionDecl 0x299ca206860 <line:176:1, col:58> col:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| `-ParmVarDecl 0x299ca206750 <col:34, col:52> col:52 method 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x299ca206a40 <line:177:1, col:62> col:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| `-ParmVarDecl 0x299ca206930 <col:37, col:58> col:58 mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x299ca206c20 <line:178:1, col:60> col:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| `-ParmVarDecl 0x299ca206b10 <col:36, col:56> col:56 mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x299ca206e00 <line:179:1, col:62> col:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| `-ParmVarDecl 0x299ca206cf0 <col:33, col:51> col:51 cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x299ca207190 <line:185:1, col:77> col:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
| |-ParmVarDecl 0x299ca206ef8 <col:35, col:47> col:47 invalid conf 'const int *'
| `-ParmVarDecl 0x299ca206f78 <col:53, col:65> col:65 test_section 'const char *'
|-FunctionDecl 0x299ca207338 <line:187:1, col:36> col:15 used SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
|-FunctionDecl 0x299ca207508 <line:189:1, col:41> col:6 used SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| `-ParmVarDecl 0x299ca207400 <col:24, col:38> col:38 ctx 'SSL_TEST_CTX *'
|-FunctionDecl 0x299ca207888 <.//openssl//file_jk/after\test/testutil.h:85:1, col:60> col:6 add_test 'void (const char *, int (*)())'
| |-ParmVarDecl 0x299ca2075e0 <col:15, col:27> col:27 test_case_name 'const char *'
| `-ParmVarDecl 0x299ca207740 <col:43, col:59> col:49 test_fn 'int (*)()'
|-FunctionDecl 0x299ca207d58 <line:86:1, col:80> col:6 add_all_tests 'void (const char *, int (*)(int), int)'
| |-ParmVarDecl 0x299ca207968 <col:20, col:32> col:32 test_case_name 'const char *'
| |-ParmVarDecl 0x299ca207b68 <col:48, col:70> col:54 test_fn 'int (*)(int)'
| `-ParmVarDecl 0x299ca207be8 <col:73, col:77> col:77 num 'int'
|-FunctionDecl 0x299ca207f20 <line:87:1, col:41> col:5 run_tests 'int (const char *)'
| `-ParmVarDecl 0x299ca207e40 <col:15, col:27> col:27 test_prog_name 'const char *'
|-FunctionDecl 0x299ca2104a0 <line:97:1, col:67> col:5 strings_equal 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x299ca207ff8 <col:19, col:31> col:31 desc 'const char *'
| |-ParmVarDecl 0x299ca208078 <col:37, col:49> col:49 s1 'const char *'
| `-ParmVarDecl 0x299ca2080f8 <col:53, col:65> col:65 s2 'const char *'
|-VarDecl 0x299ca210588 <.//openssl//file_jk/after\test\ssl_test_ctx.c:19:1, col:42> col:18 used default_app_data_size 'const int' static cinit
| `-IntegerLiteral 0x299ca2105f0 <col:42> 'int' 256
|-VarDecl 0x299ca210648 <line:21:1, col:46> col:18 used default_max_fragment_size 'const int' static cinit
| `-IntegerLiteral 0x299ca2106b0 <col:46> 'int' 512
|-FunctionDecl 0x299ca210890 <line:23:1, line:34:1> line:23:12 used parse_boolean 'int (const char *, int *)' static
| |-ParmVarDecl 0x299ca210708 <col:26, col:38> col:38 used value 'const char *'
| |-ParmVarDecl 0x299ca210788 <col:45, col:50> col:50 used result 'int *'
| `-CompoundStmt 0x299ca2110b8 <line:24:1, line:34:1>
|   |-IfStmt 0x299ca211058 <line:25:5, line:32:5> has_else
|   | |-BinaryOperator 0x299ca210ca0 <line:25:9, col:37> 'int' '=='
|   | | |-CallExpr 0x299ca210c00 <col:9, col:32> 'int'
|   | | | |-ImplicitCastExpr 0x299ca210be8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x299ca210ad8 <col:9> 'int (const char *, const char *)' Function 0x299ca210958 'strcasecmp' 'int (const char *, const char *)'
|   | | | |-ImplicitCastExpr 0x299ca210c30 <col:20> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x299ca210b10 <col:20> 'const char *' lvalue ParmVar 0x299ca210708 'value' 'const char *'
|   | | | `-ImplicitCastExpr 0x299ca210c60 <col:27> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x299ca210c48 <col:27> 'char *' <ArrayToPointerDecay>
|   | | |     `-StringLiteral 0x299ca210b68 <col:27> 'char [4]' lvalue "Yes"
|   | | `-IntegerLiteral 0x299ca210c78 <col:37> 'int' 0
|   | |-CompoundStmt 0x299ca210d90 <col:40, line:28:5>
|   | | |-BinaryOperator 0x299ca210d38 <line:26:9, col:19> 'int' '='
|   | | | |-UnaryOperator 0x299ca210cf8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x299ca210ce0 <col:10> 'int *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x299ca210cc0 <col:10> 'int *' lvalue ParmVar 0x299ca210788 'result' 'int *'
|   | | | `-IntegerLiteral 0x299ca210d10 <col:19> 'int' 1
|   | | `-ReturnStmt 0x299ca210d80 <line:27:9, col:16>
|   | |   `-IntegerLiteral 0x299ca210d58 <col:16> 'int' 1
|   | `-IfStmt 0x299ca211040 <line:29:10, line:32:5>
|   |   |-BinaryOperator 0x299ca210f30 <line:29:14, col:41> 'int' '=='
|   |   | |-CallExpr 0x299ca210e90 <col:14, col:36> 'int'
|   |   | | |-ImplicitCastExpr 0x299ca210e78 <col:14> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x299ca210db0 <col:14> 'int (const char *, const char *)' Function 0x299ca210958 'strcasecmp' 'int (const char *, const char *)'
|   |   | | |-ImplicitCastExpr 0x299ca210ec0 <col:25> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x299ca210dd0 <col:25> 'const char *' lvalue ParmVar 0x299ca210708 'value' 'const char *'
|   |   | | `-ImplicitCastExpr 0x299ca210ef0 <col:32> 'const char *' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x299ca210ed8 <col:32> 'char *' <ArrayToPointerDecay>
|   |   | |     `-StringLiteral 0x299ca210e28 <col:32> 'char [3]' lvalue "No"
|   |   | `-IntegerLiteral 0x299ca210f08 <col:41> 'int' 0
|   |   `-CompoundStmt 0x299ca211020 <col:44, line:32:5>
|   |     |-BinaryOperator 0x299ca210fc8 <line:30:9, col:19> 'int' '='
|   |     | |-UnaryOperator 0x299ca210f88 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |     | | `-ImplicitCastExpr 0x299ca210f70 <col:10> 'int *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x299ca210f50 <col:10> 'int *' lvalue ParmVar 0x299ca210788 'result' 'int *'
|   |     | `-IntegerLiteral 0x299ca210fa0 <col:19> 'int' 0
|   |     `-ReturnStmt 0x299ca211010 <line:31:9, col:16>
|   |       `-IntegerLiteral 0x299ca210fe8 <col:16> 'int' 1
|   `-ReturnStmt 0x299ca2110a8 <line:33:5, col:12>
|     `-IntegerLiteral 0x299ca211080 <col:12> 'int' 0
|-FunctionDecl 0x299ca210958 <line:25:9> col:9 implicit used strcasecmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x299ca2109f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x299ca210a60 <<invalid sloc>> <invalid sloc> 'const char *'
|-RecordDecl 0x299ca2110d8 <line:59:9, line:62:1> line:59:9 struct definition
| |-FieldDecl 0x299ca2111a8 <line:60:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x299ca211218 <line:61:5, col:9> col:9 referenced value 'int'
|-TypedefDecl 0x299ca2112c8 <line:59:1, line:62:3> col:3 referenced test_enum 'struct test_enum':'test_enum'
| `-ElaboratedType 0x299ca211270 'struct test_enum' sugar
|   `-RecordType 0x299ca211170 'test_enum'
|     `-Record 0x299ca2110d8 ''
|-FunctionDecl 0x299ca215770 <line:65:1, line:76:1> line:65:19 invalid parse_enum 'int (const test_enum *, size_t, int *, const char *)' static
| |-ParmVarDecl 0x299ca215450 <col:30, col:47> col:47 used enums 'const test_enum *'
| |-ParmVarDecl 0x299ca2154c8 <col:54, col:61> col:61 used num_enums 'size_t':'unsigned long long'
| |-ParmVarDecl 0x299ca215548 <line:66:30, col:35> col:35 used value 'int *'
| |-ParmVarDecl 0x299ca2155c8 <col:42, col:54> col:54 used name 'const char *'
| `-CompoundStmt 0x299ca215e68 <line:67:1, line:76:1>
|   |-DeclStmt 0x299ca2158c0 <line:68:5, col:13>
|   | `-VarDecl 0x299ca215858 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-ForStmt 0x299ca215df8 <line:69:5, line:74:5>
|   | |-BinaryOperator 0x299ca215950 <line:69:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x299ca2158d8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x299ca215858 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x299ca215938 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x299ca215910 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x299ca2159e0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x299ca2159b0 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x299ca215970 <col:17> 'size_t':'unsigned long long' lvalue Var 0x299ca215858 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x299ca2159c8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca215990 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x299ca2154c8 'num_enums' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x299ca215a20 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x299ca215a00 <col:32> 'size_t':'unsigned long long' lvalue Var 0x299ca215858 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x299ca215de0 <col:37, line:74:5>
|   |   `-IfStmt 0x299ca215dc8 <line:70:9, line:73:9>
|   |     |-BinaryOperator 0x299ca215c08 <line:70:13, col:44> 'int' '=='
|   |     | |-CallExpr 0x299ca215b80 <col:13, col:39> 'int'
|   |     | | |-ImplicitCastExpr 0x299ca215b68 <col:13> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
|   |     | | | `-DeclRefExpr 0x299ca215a38 <col:13> 'int (const char *, const char *)' Function 0x299ca1b1f10 'strcmp' 'int (const char *, const char *)'
|   |     | | |-ImplicitCastExpr 0x299ca215bb0 <col:20, col:29> 'const char *' <LValueToRValue>
|   |     | | | `-MemberExpr 0x299ca215ae8 <col:20, col:29> 'const char *const' lvalue .name 0x299ca2111a8
|   |     | | |   `-ArraySubscriptExpr 0x299ca215ac8 <col:20, col:27> 'const test_enum':'const test_enum' lvalue
|   |     | | |     |-ImplicitCastExpr 0x299ca215a98 <col:20> 'const test_enum *' <LValueToRValue>
|   |     | | |     | `-DeclRefExpr 0x299ca215a58 <col:20> 'const test_enum *' lvalue ParmVar 0x299ca215450 'enums' 'const test_enum *'
|   |     | | |     `-ImplicitCastExpr 0x299ca215ab0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x299ca215a78 <col:26> 'size_t':'unsigned long long' lvalue Var 0x299ca215858 'i' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x299ca215bc8 <col:35> 'const char *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x299ca215b18 <col:35> 'const char *' lvalue ParmVar 0x299ca2155c8 'name' 'const char *'
|   |     | `-IntegerLiteral 0x299ca215be0 <col:44> 'int' 0
|   |     `-CompoundStmt 0x299ca215da8 <col:47, line:73:9>
|   |       |-BinaryOperator 0x299ca215d50 <line:71:13, col:31> 'int' '='
|   |       | |-UnaryOperator 0x299ca215c60 <col:13, col:14> 'int' lvalue prefix '*' cannot overflow
|   |       | | `-ImplicitCastExpr 0x299ca215c48 <col:14> 'int *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x299ca215c28 <col:14> 'int *' lvalue ParmVar 0x299ca215548 'value' 'int *'
|   |       | `-ImplicitCastExpr 0x299ca215d38 <col:22, col:31> 'int' <LValueToRValue>
|   |       |   `-MemberExpr 0x299ca215d08 <col:22, col:31> 'const int' lvalue .value 0x299ca211218
|   |       |     `-ArraySubscriptExpr 0x299ca215ce8 <col:22, col:29> 'const test_enum':'const test_enum' lvalue
|   |       |       |-ImplicitCastExpr 0x299ca215cb8 <col:22> 'const test_enum *' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x299ca215c78 <col:22> 'const test_enum *' lvalue ParmVar 0x299ca215450 'enums' 'const test_enum *'
|   |       |       `-ImplicitCastExpr 0x299ca215cd0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x299ca215c98 <col:28> 'size_t':'unsigned long long' lvalue Var 0x299ca215858 'i' 'size_t':'unsigned long long'
|   |       `-ReturnStmt 0x299ca215d98 <line:72:13, col:20>
|   |         `-IntegerLiteral 0x299ca215d70 <col:20> 'int' 1
|   `-ReturnStmt 0x299ca215e58 <line:75:5, col:12>
|     `-IntegerLiteral 0x299ca215e30 <col:12> 'int' 0
|-FunctionDecl 0x299ca216110 <line:78:1, line:88:1> line:78:20 used enum_name 'const char *(const test_enum *, size_t, int)' static
| |-ParmVarDecl 0x299ca215ea0 <col:30, col:47> col:47 used enums 'const test_enum *'
| |-ParmVarDecl 0x299ca215f18 <col:54, col:61> col:61 used num_enums 'size_t':'unsigned long long'
| |-ParmVarDecl 0x299ca215f98 <line:79:30, col:34> col:34 used value 'int'
| `-CompoundStmt 0x299ca216730 <line:80:1, line:88:1>
|   |-DeclStmt 0x299ca216258 <line:81:5, col:13>
|   | `-VarDecl 0x299ca2161f0 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-ForStmt 0x299ca216650 <line:82:5, line:86:5>
|   | |-BinaryOperator 0x299ca2162e8 <line:82:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x299ca216270 <col:10> 'size_t':'unsigned long long' lvalue Var 0x299ca2161f0 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x299ca2162d0 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x299ca2162a8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x299ca216378 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x299ca216348 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x299ca216308 <col:17> 'size_t':'unsigned long long' lvalue Var 0x299ca2161f0 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x299ca216360 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca216328 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x299ca215f18 'num_enums' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x299ca2163b8 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x299ca216398 <col:32> 'size_t':'unsigned long long' lvalue Var 0x299ca2161f0 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x299ca216638 <col:37, line:86:5>
|   |   `-IfStmt 0x299ca216620 <line:83:9, line:85:9>
|   |     |-BinaryOperator 0x299ca216500 <line:83:13, col:31> 'int' '=='
|   |     | |-ImplicitCastExpr 0x299ca2164d0 <col:13, col:22> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x299ca216480 <col:13, col:22> 'const int' lvalue .value 0x299ca211218
|   |     | |   `-ArraySubscriptExpr 0x299ca216460 <col:13, col:20> 'const test_enum':'const test_enum' lvalue
|   |     | |     |-ImplicitCastExpr 0x299ca216410 <col:13> 'const test_enum *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x299ca2163d0 <col:13> 'const test_enum *' lvalue ParmVar 0x299ca215ea0 'enums' 'const test_enum *'
|   |     | |     `-ImplicitCastExpr 0x299ca216428 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x299ca2163f0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x299ca2161f0 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x299ca2164e8 <col:31> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x299ca2164b0 <col:31> 'int' lvalue ParmVar 0x299ca215f98 'value' 'int'
|   |     `-CompoundStmt 0x299ca216608 <col:38, line:85:9>
|   |       `-ReturnStmt 0x299ca2165f8 <line:84:13, col:29>
|   |         `-ImplicitCastExpr 0x299ca2165e0 <col:20, col:29> 'const char *' <LValueToRValue>
|   |           `-MemberExpr 0x299ca2165b0 <col:20, col:29> 'const char *const' lvalue .name 0x299ca2111a8
|   |             `-ArraySubscriptExpr 0x299ca216590 <col:20, col:27> 'const test_enum':'const test_enum' lvalue
|   |               |-ImplicitCastExpr 0x299ca216560 <col:20> 'const test_enum *' <LValueToRValue>
|   |               | `-DeclRefExpr 0x299ca216520 <col:20> 'const test_enum *' lvalue ParmVar 0x299ca215ea0 'enums' 'const test_enum *'
|   |               `-ImplicitCastExpr 0x299ca216578 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |                 `-DeclRefExpr 0x299ca216540 <col:26> 'size_t':'unsigned long long' lvalue Var 0x299ca2161f0 'i' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x299ca216720 <line:87:5, col:12>
|     `-ImplicitCastExpr 0x299ca216708 <col:12> 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x299ca2166f0 <col:12> 'char *' <ArrayToPointerDecay>
|         `-StringLiteral 0x299ca2166c8 <col:12> 'char [13]' lvalue "InvalidValue"
|-VarDecl 0x299ca2167d8 <line:93:1, line:98:1> line:93:24 used ssl_test_results 'const test_enum [4]' static cinit
| `-InitListExpr 0x299ca216c08 <col:45, line:98:1> 'const test_enum [4]'
|   |-InitListExpr 0x299ca216c58 <line:94:5, col:33> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca216cc0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca216ca8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca216878 <col:6> 'char [8]' lvalue "Success"
|   | `-DeclRefExpr 0x299ca216898 <col:17> 'int' EnumConstant 0x299ca1fc9f0 'SSL_TEST_SUCCESS' 'int'
|   |-InitListExpr 0x299ca216cf0 <line:95:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca216d58 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca216d40 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca216948 <col:6> 'char [11]' lvalue "ServerFail"
|   | `-DeclRefExpr 0x299ca216970 <col:20> 'int' EnumConstant 0x299ca1fca48 'SSL_TEST_SERVER_FAIL' 'int'
|   |-InitListExpr 0x299ca216d90 <line:96:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca216df8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca216de0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca2169e0 <col:6> 'char [11]' lvalue "ClientFail"
|   | `-DeclRefExpr 0x299ca216a08 <col:20> 'int' EnumConstant 0x299ca1fcaa0 'SSL_TEST_CLIENT_FAIL' 'int'
|   `-InitListExpr 0x299ca216e40 <line:97:5, col:46> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x299ca216ea8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x299ca216e90 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x299ca216ab8 <col:6> 'char [14]' lvalue "InternalError"
|     `-DeclRefExpr 0x299ca216ae0 <col:23> 'int' EnumConstant 0x299ca1fcaf8 'SSL_TEST_INTERNAL_ERROR' 'int'
|-FunctionDecl 0x299ca217110 <line:100:1, line:109:1> line:100:19 invalid parse_expected_result 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca216f48 <col:41, col:55> col:55 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca216fc8 <col:65, col:77> col:77 used value 'const char *'
| `-CompoundStmt 0x299ca20f5b8 <line:101:1, line:109:1>
|   |-DeclStmt 0x299ca217258 <line:102:5, col:18>
|   | `-VarDecl 0x299ca2171f0 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x299ca20f490 <line:103:5, line:106:5>
|   | |-OpaqueValueExpr 0x299ca20f478 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ca20f460 <line:104:41, line:106:5>
|   |   `-ReturnStmt 0x299ca20f450 <line:105:9, col:16>
|   |     `-IntegerLiteral 0x299ca20f428 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca20f560 <line:107:5, col:33> 'ssl_test_result_t':'ssl_test_result_t' '='
|   | |-MemberExpr 0x299ca20f4e0 <col:5, col:15> 'ssl_test_result_t':'ssl_test_result_t' lvalue ->expected_result 0x299ca1fe4e0
|   | | `-ImplicitCastExpr 0x299ca20f4c8 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca20f4a8 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca216f48 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca20f548 <col:33> 'ssl_test_result_t':'ssl_test_result_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x299ca20f530 <col:33> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca20f510 <col:33> 'int' lvalue Var 0x299ca2171f0 'ret_value' 'int'
|   `-ReturnStmt 0x299ca20f5a8 <line:108:5, col:12>
|     `-IntegerLiteral 0x299ca20f580 <col:12> 'int' 1
|-FunctionDecl 0x299ca20f6a8 prev 0x299ca1feb30 <line:111:1, line:114:1> line:111:13 ssl_test_result_name 'const char *(ssl_test_result_t)'
| |-ParmVarDecl 0x299ca20f5f8 <col:34, col:52> col:52 used result 'ssl_test_result_t':'ssl_test_result_t'
| `-CompoundStmt 0x299ca20f968 <line:112:1, line:114:1>
|   `-ReturnStmt 0x299ca20f958 <line:113:5, col:76>
|     `-CallExpr 0x299ca20f8c0 <col:12, col:76> 'const char *'
|       |-ImplicitCastExpr 0x299ca20f8a8 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca20f750 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca20f8f8 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca20f770 <col:22> 'const test_enum [4]' lvalue Var 0x299ca2167d8 'ssl_test_results' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x299ca20f910 <col:40, col:67> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca20f7e8 <col:40, col:67> 'int'
|       |   |-ImplicitCastExpr 0x299ca20f7d0 <col:40> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca20f790 <col:40> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca20f810 <col:51> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca20f7b0 <col:51> 'const test_enum [4]' lvalue Var 0x299ca2167d8 'ssl_test_results' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x299ca20f940 <col:70> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x299ca20f928 <col:70> 'ssl_test_result_t':'ssl_test_result_t' <LValueToRValue>
|           `-DeclRefExpr 0x299ca20f828 <col:70> 'ssl_test_result_t':'ssl_test_result_t' lvalue ParmVar 0x299ca20f5f8 'result' 'ssl_test_result_t':'ssl_test_result_t'
|-VarDecl 0x299ca20f9a0 <line:118:1, col:35> col:24 used ssl_alerts 'const test_enum []' static
|-FunctionDecl 0x299ca20fd80 <line:126:1, line:129:1> line:126:19 invalid parse_alert 'int (int *, const char *)' static
| |-ParmVarDecl 0x299ca20fbf8 <col:31, col:36> col:36 used alert 'int *'
| |-ParmVarDecl 0x299ca20fc78 <col:43, col:55> col:55 used value 'const char *'
| `-CompoundStmt 0x299ca20ff40 <line:127:1, line:129:1>
|-FunctionDecl 0x299ca2100b0 <line:131:1, line:134:1> line:131:19 invalid parse_client_alert 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca20ff60 <col:38, col:52> col:52 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca20ffe0 <col:62, col:74> col:74 used value 'const char *'
| `-CompoundStmt 0x299ca210218 <line:132:1, line:134:1>
|-FunctionDecl 0x299ca217470 <line:136:1, line:139:1> line:136:19 invalid parse_server_alert 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca210238 <col:38, col:52> col:52 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca2102b8 <col:62, col:74> col:74 used value 'const char *'
| `-CompoundStmt 0x299ca2175d8 <line:137:1, line:139:1>
|-FunctionDecl 0x299ca2176b0 prev 0x299ca1fecf0 <line:141:1, line:144:1> line:141:13 ssl_alert_name 'const char *(int)'
| |-ParmVarDecl 0x299ca217600 <col:28, col:32> col:32 used alert 'int'
| `-CompoundStmt 0x299ca2178f8 <line:142:1, line:144:1>
|   `-ReturnStmt 0x299ca2178e8 <line:143:5, col:63>
|     `-CallExpr 0x299ca217868 <col:12, col:63> 'const char *'
|       |-ImplicitCastExpr 0x299ca217850 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca217758 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca2178a0 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca217778 <col:22> 'const test_enum []' lvalue Var 0x299ca20f9a0 'ssl_alerts' 'const test_enum []'
|       |-ImplicitCastExpr 0x299ca2178b8 <col:34, col:55> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca2177f0 <col:34, col:55> 'int'
|       |   |-ImplicitCastExpr 0x299ca2177d8 <col:34> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca217798 <col:34> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca217818 <col:45> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca2177b8 <col:45> 'const test_enum []' lvalue Var 0x299ca20f9a0 'ssl_alerts' 'const test_enum []'
|       `-ImplicitCastExpr 0x299ca2178d0 <col:58> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x299ca217830 <col:58> 'int' lvalue ParmVar 0x299ca217600 'alert' 'int'
|-VarDecl 0x299ca217930 <line:148:1, col:38> col:24 used ssl_protocols 'const test_enum []' static
|-FunctionDecl 0x299ca217c90 <line:157:1, line:161:1> line:157:19 invalid parse_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca217b40 <col:34, col:48> col:48 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca217bc0 <col:58, col:70> col:70 used value 'const char *'
| `-CompoundStmt 0x299ca217eb0 <line:158:1, line:161:1>
|-FunctionDecl 0x299ca217f88 prev 0x299ca1fee78 <line:163:1, line:166:1> line:163:13 ssl_protocol_name 'const char *(int)'
| |-ParmVarDecl 0x299ca217ed8 <col:31, col:35> col:35 used protocol 'int'
| `-CompoundStmt 0x299ca2181d0 <line:164:1, line:166:1>
|   `-ReturnStmt 0x299ca2181c0 <line:165:5, col:72>
|     `-CallExpr 0x299ca218140 <col:12, col:72> 'const char *'
|       |-ImplicitCastExpr 0x299ca218128 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca218030 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca218178 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca218050 <col:22> 'const test_enum []' lvalue Var 0x299ca217930 'ssl_protocols' 'const test_enum []'
|       |-ImplicitCastExpr 0x299ca218190 <col:37, col:61> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca2180c8 <col:37, col:61> 'int'
|       |   |-ImplicitCastExpr 0x299ca2180b0 <col:37> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca218070 <col:37> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca2180f0 <col:48> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca218090 <col:48> 'const test_enum []' lvalue Var 0x299ca217930 'ssl_protocols' 'const test_enum []'
|       `-ImplicitCastExpr 0x299ca2181a8 <col:64> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x299ca218108 <col:64> 'int' lvalue ParmVar 0x299ca217ed8 'protocol' 'int'
|-VarDecl 0x299ca218208 <line:170:1, line:174:1> line:170:24 used ssl_verify_callbacks 'const test_enum [3]' static cinit
| `-InitListExpr 0x299ca218520 <col:49, line:174:1> 'const test_enum [3]'
|   |-InitListExpr 0x299ca218570 <line:171:5, col:34> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca2185d8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca2185c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca2182a8 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x299ca2182c8 <col:14> 'int' EnumConstant 0x299ca1fcd90 'SSL_TEST_VERIFY_NONE' 'int'
|   |-InitListExpr 0x299ca218608 <line:172:5, col:45> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca218670 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca218658 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca218338 <col:6> 'char [10]' lvalue "AcceptAll"
|   | `-DeclRefExpr 0x299ca218360 <col:19> 'int' EnumConstant 0x299ca1fcde8 'SSL_TEST_VERIFY_ACCEPT_ALL' 'int'
|   `-InitListExpr 0x299ca2186a8 <line:173:5, col:45> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x299ca218710 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x299ca2186f8 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x299ca2183d0 <col:6> 'char [10]' lvalue "RejectAll"
|     `-DeclRefExpr 0x299ca2183f8 <col:19> 'int' EnumConstant 0x299ca1fce40 'SSL_TEST_VERIFY_REJECT_ALL' 'int'
|-FunctionDecl 0x299ca218a00 <line:176:1, line:186:1> line:176:19 invalid parse_client_verify_callback 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca218838 <col:48, col:70> col:70 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x299ca2188b8 <line:177:48, col:60> col:60 used value 'const char *'
| `-CompoundStmt 0x299ca218e18 <line:178:1, line:186:1>
|   |-DeclStmt 0x299ca218b48 <line:179:5, col:18>
|   | `-VarDecl 0x299ca218ae0 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x299ca218cf0 <line:180:5, line:183:5>
|   | |-OpaqueValueExpr 0x299ca218cd8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ca218cc0 <line:181:41, line:183:5>
|   |   `-ReturnStmt 0x299ca218cb0 <line:182:9, col:16>
|   |     `-IntegerLiteral 0x299ca218c88 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca218dc0 <line:184:5, col:36> 'ssl_verify_callback_t':'ssl_verify_callback_t' '='
|   | |-MemberExpr 0x299ca218d40 <col:5, col:18> 'ssl_verify_callback_t':'ssl_verify_callback_t' lvalue ->verify_callback 0x299ca205610
|   | | `-ImplicitCastExpr 0x299ca218d28 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca218d08 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca218838 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x299ca218da8 <col:36> 'ssl_verify_callback_t':'ssl_verify_callback_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x299ca218d90 <col:36> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca218d70 <col:36> 'int' lvalue Var 0x299ca218ae0 'ret_value' 'int'
|   `-ReturnStmt 0x299ca218e08 <line:185:5, col:12>
|     `-IntegerLiteral 0x299ca218de0 <col:12> 'int' 1
|-FunctionDecl 0x299ca218f08 prev 0x299ca1ff060 <line:188:1, line:192:1> line:188:13 ssl_verify_callback_name 'const char *(ssl_verify_callback_t)'
| |-ParmVarDecl 0x299ca218e58 <col:38, col:60> col:60 used callback 'ssl_verify_callback_t':'ssl_verify_callback_t'
| `-CompoundStmt 0x299ca219168 <line:189:1, line:192:1>
|   `-ReturnStmt 0x299ca219158 <line:190:5, line:191:30>
|     `-CallExpr 0x299ca2190c0 <line:190:12, line:191:30> 'const char *'
|       |-ImplicitCastExpr 0x299ca2190a8 <line:190:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca218fb0 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca2190f8 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca218fd0 <col:22> 'const test_enum [3]' lvalue Var 0x299ca218208 'ssl_verify_callbacks' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x299ca219110 <col:44, col:75> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca219048 <col:44, col:75> 'int'
|       |   |-ImplicitCastExpr 0x299ca219030 <col:44> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca218ff0 <col:44> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca219070 <col:55> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca219010 <col:55> 'const test_enum [3]' lvalue Var 0x299ca218208 'ssl_verify_callbacks' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x299ca219140 <line:191:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x299ca219128 <col:22> 'ssl_verify_callback_t':'ssl_verify_callback_t' <LValueToRValue>
|           `-DeclRefExpr 0x299ca219088 <col:22> 'ssl_verify_callback_t':'ssl_verify_callback_t' lvalue ParmVar 0x299ca218e58 'callback' 'ssl_verify_callback_t':'ssl_verify_callback_t'
|-VarDecl 0x299ca2191a0 <line:196:1, line:201:1> line:196:24 used ssl_servername 'const test_enum [4]' static cinit
| `-InitListExpr 0x299ca2114c8 <col:43, line:201:1> 'const test_enum [4]'
|   |-InitListExpr 0x299ca211518 <line:197:5, col:38> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca211580 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca211568 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca219208 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x299ca219228 <col:14> 'int' EnumConstant 0x299ca1fd080 'SSL_TEST_SERVERNAME_NONE' 'int'
|   |-InitListExpr 0x299ca2115b0 <line:198:5, col:44> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca211618 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca211600 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca219298 <col:6> 'char [8]' lvalue "server1"
|   | `-DeclRefExpr 0x299ca2192b8 <col:17> 'int' EnumConstant 0x299ca1fd0f0 'SSL_TEST_SERVERNAME_SERVER1' 'int'
|   |-InitListExpr 0x299ca211650 <line:199:5, col:44> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca2116b8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca2116a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca219328 <col:6> 'char [8]' lvalue "server2"
|   | `-DeclRefExpr 0x299ca219348 <col:17> 'int' EnumConstant 0x299ca1fd148 'SSL_TEST_SERVERNAME_SERVER2' 'int'
|   `-InitListExpr 0x299ca211700 <line:200:5, col:44> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x299ca211768 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x299ca211750 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x299ca2193b8 <col:6> 'char [8]' lvalue "invalid"
|     `-DeclRefExpr 0x299ca2193d8 <col:17> 'int' EnumConstant 0x299ca1fd1a0 'SSL_TEST_SERVERNAME_INVALID' 'int'
|-FunctionDecl 0x299ca2118e0 <line:203:1, line:213:1> line:203:19 invalid parse_servername 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca211790 <col:36, col:58> col:58 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x299ca211810 <line:204:36, col:48> col:48 used value 'const char *'
| `-CompoundStmt 0x299ca211cf8 <line:205:1, line:213:1>
|   |-DeclStmt 0x299ca211a28 <line:206:5, col:18>
|   | `-VarDecl 0x299ca2119c0 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x299ca211bd0 <line:207:5, line:210:5>
|   | |-OpaqueValueExpr 0x299ca211bb8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ca211ba0 <line:208:41, line:210:5>
|   |   `-ReturnStmt 0x299ca211b90 <line:209:9, col:16>
|   |     `-IntegerLiteral 0x299ca211b68 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca211ca0 <line:211:5, col:31> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x299ca211c20 <col:5, col:18> 'ssl_servername_t':'ssl_servername_t' lvalue ->servername 0x299ca2056a0
|   | | `-ImplicitCastExpr 0x299ca211c08 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca211be8 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca211790 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x299ca211c88 <col:31> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x299ca211c70 <col:31> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca211c50 <col:31> 'int' lvalue Var 0x299ca2119c0 'ret_value' 'int'
|   `-ReturnStmt 0x299ca211ce8 <line:212:5, col:12>
|     `-IntegerLiteral 0x299ca211cc0 <col:12> 'int' 1
|-FunctionDecl 0x299ca211e88 <line:215:1, line:225:1> line:215:19 invalid parse_expected_servername 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca211d38 <col:45, col:59> col:59 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca211db8 <line:216:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x299ca2122a0 <line:217:1, line:225:1>
|   |-DeclStmt 0x299ca211fd0 <line:218:5, col:18>
|   | `-VarDecl 0x299ca211f68 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x299ca212178 <line:219:5, line:222:5>
|   | |-OpaqueValueExpr 0x299ca212160 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ca212148 <line:220:41, line:222:5>
|   |   `-ReturnStmt 0x299ca212138 <line:221:9, col:16>
|   |     `-IntegerLiteral 0x299ca212110 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca212248 <line:223:5, col:37> 'ssl_servername_t':'ssl_servername_t' '='
|   | |-MemberExpr 0x299ca2121c8 <col:5, col:15> 'ssl_servername_t':'ssl_servername_t' lvalue ->expected_servername 0x299ca1fe698
|   | | `-ImplicitCastExpr 0x299ca2121b0 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca212190 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca211d38 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca212230 <col:37> 'ssl_servername_t':'ssl_servername_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x299ca212218 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca2121f8 <col:37> 'int' lvalue Var 0x299ca211f68 'ret_value' 'int'
|   `-ReturnStmt 0x299ca212290 <line:224:5, col:12>
|     `-IntegerLiteral 0x299ca212268 <col:12> 'int' 1
|-FunctionDecl 0x299ca219490 prev 0x299ca2062c0 <line:227:1, line:231:1> line:227:13 ssl_servername_name 'const char *(ssl_servername_t)'
| |-ParmVarDecl 0x299ca2122e0 <col:33, col:50> col:50 used server 'ssl_servername_t':'ssl_servername_t'
| `-CompoundStmt 0x299ca2196f0 <line:228:1, line:231:1>
|   `-ReturnStmt 0x299ca2196e0 <line:229:5, line:230:28>
|     `-CallExpr 0x299ca219648 <line:229:12, line:230:28> 'const char *'
|       |-ImplicitCastExpr 0x299ca219630 <line:229:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca219538 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca219680 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca219558 <col:22> 'const test_enum [4]' lvalue Var 0x299ca2191a0 'ssl_servername' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x299ca219698 <col:38, col:63> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca2195d0 <col:38, col:63> 'int'
|       |   |-ImplicitCastExpr 0x299ca2195b8 <col:38> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca219578 <col:38> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca2195f8 <col:49> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca219598 <col:49> 'const test_enum [4]' lvalue Var 0x299ca2191a0 'ssl_servername' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x299ca2196c8 <line:230:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x299ca2196b0 <col:22> 'ssl_servername_t':'ssl_servername_t' <LValueToRValue>
|           `-DeclRefExpr 0x299ca219610 <col:22> 'ssl_servername_t':'ssl_servername_t' lvalue ParmVar 0x299ca2122e0 'server' 'ssl_servername_t':'ssl_servername_t'
|-VarDecl 0x299ca219728 <line:235:1, line:239:1> line:235:24 used ssl_servername_callbacks 'const test_enum [3]' static cinit
| `-InitListExpr 0x299ca2199f0 <col:53, line:239:1> 'const test_enum [3]'
|   |-InitListExpr 0x299ca219a40 <line:236:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca219aa8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca219a90 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca219790 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x299ca2197b0 <col:14> 'int' EnumConstant 0x299ca1fd3e0 'SSL_TEST_SERVERNAME_CB_NONE' 'int'
|   |-InitListExpr 0x299ca219ad8 <line:237:5, col:59> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca219b40 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca219b28 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca219820 <col:6> 'char [15]' lvalue "IgnoreMismatch"
|   | `-DeclRefExpr 0x299ca219848 <col:24> 'int' EnumConstant 0x299ca1fd438 'SSL_TEST_SERVERNAME_IGNORE_MISMATCH' 'int'
|   `-InitListExpr 0x299ca219b78 <line:238:5, col:59> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x299ca219be0 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x299ca219bc8 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x299ca2198b8 <col:6> 'char [15]' lvalue "RejectMismatch"
|     `-DeclRefExpr 0x299ca2198e0 <col:24> 'int' EnumConstant 0x299ca1fd490 'SSL_TEST_SERVERNAME_REJECT_MISMATCH' 'int'
|-FunctionDecl 0x299ca219e50 <line:241:1, line:251:1> line:241:19 invalid parse_servername_callback 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca219c88 <col:45, col:67> col:67 used server_conf 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x299ca219d08 <line:242:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x299ca21a268 <line:243:1, line:251:1>
|   |-DeclStmt 0x299ca219f98 <line:244:5, col:18>
|   | `-VarDecl 0x299ca219f30 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x299ca21a140 <line:245:5, line:248:5>
|   | |-OpaqueValueExpr 0x299ca21a128 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ca21a110 <line:246:79, line:248:5>
|   |   `-ReturnStmt 0x299ca21a100 <line:247:9, col:16>
|   |     `-IntegerLiteral 0x299ca21a0d8 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca21a210 <line:249:5, col:40> 'ssl_servername_callback_t':'ssl_servername_callback_t' '='
|   | |-MemberExpr 0x299ca21a190 <col:5, col:18> 'ssl_servername_callback_t':'ssl_servername_callback_t' lvalue ->servername_callback 0x299ca205a90
|   | | `-ImplicitCastExpr 0x299ca21a178 <col:5> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca21a158 <col:5> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x299ca219c88 'server_conf' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x299ca21a1f8 <col:40> 'ssl_servername_callback_t':'ssl_servername_callback_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x299ca21a1e0 <col:40> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca21a1c0 <col:40> 'int' lvalue Var 0x299ca219f30 'ret_value' 'int'
|   `-ReturnStmt 0x299ca21a258 <line:250:5, col:12>
|     `-IntegerLiteral 0x299ca21a230 <col:12> 'int' 1
|-FunctionDecl 0x299ca21a358 prev 0x299ca2064a0 <line:253:1, line:257:1> line:253:13 ssl_servername_callback_name 'const char *(ssl_servername_callback_t)'
| |-ParmVarDecl 0x299ca21a2a8 <col:42, col:68> col:68 used callback 'ssl_servername_callback_t':'ssl_servername_callback_t'
| `-CompoundStmt 0x299ca21a5d8 <line:254:1, line:257:1>
|   `-ReturnStmt 0x299ca21a5c8 <line:255:5, line:256:68>
|     `-CallExpr 0x299ca21a530 <line:255:12, line:256:68> 'const char *'
|       |-ImplicitCastExpr 0x299ca21a518 <line:255:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca21a400 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca21a568 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca21a420 <col:22> 'const test_enum [3]' lvalue Var 0x299ca219728 'ssl_servername_callbacks' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x299ca21a580 <line:256:22, col:57> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca21a4b8 <col:22, col:57> 'int'
|       |   |-ImplicitCastExpr 0x299ca21a4a0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca21a440 <col:22> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca21a4e0 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca21a460 <col:33> 'const test_enum [3]' lvalue Var 0x299ca219728 'ssl_servername_callbacks' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x299ca21a5b0 <col:60> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x299ca21a598 <col:60> 'ssl_servername_callback_t':'ssl_servername_callback_t' <LValueToRValue>
|           `-DeclRefExpr 0x299ca21a4f8 <col:60> 'ssl_servername_callback_t':'ssl_servername_callback_t' lvalue ParmVar 0x299ca21a2a8 'callback' 'ssl_servername_callback_t':'ssl_servername_callback_t'
|-VarDecl 0x299ca21a610 <line:261:1, line:265:1> line:261:24 used ssl_session_ticket 'const test_enum [3]' static cinit
| `-InitListExpr 0x299ca21a8c8 <col:47, line:265:1> 'const test_enum [3]'
|   |-InitListExpr 0x299ca21a918 <line:262:5, col:46> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca21a980 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca21a968 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca21a678 <col:6> 'char [7]' lvalue "Ignore"
|   | `-DeclRefExpr 0x299ca21a698 <col:16> 'int' EnumConstant 0x299ca1fd6d0 'SSL_TEST_SESSION_TICKET_IGNORE' 'int'
|   |-InitListExpr 0x299ca21a9b0 <line:263:5, col:40> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca21aa18 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca21aa00 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca21a708 <col:6> 'char [4]' lvalue "Yes"
|   | `-DeclRefExpr 0x299ca21a728 <col:13> 'int' EnumConstant 0x299ca1fd728 'SSL_TEST_SESSION_TICKET_YES' 'int'
|   `-InitListExpr 0x299ca21aa50 <line:264:5, col:38> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x299ca21aab8 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x299ca21aaa0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x299ca21a798 <col:6> 'char [3]' lvalue "No"
|     `-DeclRefExpr 0x299ca21a7b8 <col:12> 'int' EnumConstant 0x299ca1fd780 'SSL_TEST_SESSION_TICKET_NO' 'int'
|-FunctionDecl 0x299ca21ac50 <line:267:1, line:276:1> line:267:19 invalid parse_session_ticket 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca21ab00 <col:40, col:54> col:54 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca21ab80 <col:64, col:76> col:76 used value 'const char *'
| `-CompoundStmt 0x299ca21b068 <line:268:1, line:276:1>
|   |-DeclStmt 0x299ca21ad98 <line:269:5, col:18>
|   | `-VarDecl 0x299ca21ad30 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x299ca21af40 <line:270:5, line:273:5>
|   | |-OpaqueValueExpr 0x299ca21af28 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ca21af10 <line:271:41, line:273:5>
|   |   `-ReturnStmt 0x299ca21af00 <line:272:9, col:16>
|   |     `-IntegerLiteral 0x299ca21aed8 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca21b010 <line:274:5, col:41> 'ssl_session_ticket_t':'ssl_session_ticket_t' '='
|   | |-MemberExpr 0x299ca21af90 <col:5, col:15> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ->session_ticket_expected 0x299ca1fe720
|   | | `-ImplicitCastExpr 0x299ca21af78 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca21af58 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca21ab00 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca21aff8 <col:41> 'ssl_session_ticket_t':'ssl_session_ticket_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x299ca21afe0 <col:41> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca21afc0 <col:41> 'int' lvalue Var 0x299ca21ad30 'ret_value' 'int'
|   `-ReturnStmt 0x299ca21b058 <line:275:5, col:12>
|     `-IntegerLiteral 0x299ca21b030 <col:12> 'int' 1
|-FunctionDecl 0x299ca21b158 prev 0x299ca206680 <line:278:1, line:283:1> line:278:13 ssl_session_ticket_name 'const char *(ssl_session_ticket_t)'
| |-ParmVarDecl 0x299ca21b0a8 <col:37, col:58> col:58 used server 'ssl_session_ticket_t':'ssl_session_ticket_t'
| `-CompoundStmt 0x299ca21b3b8 <line:279:1, line:283:1>
|   `-ReturnStmt 0x299ca21b3a8 <line:280:5, line:282:28>
|     `-CallExpr 0x299ca21b310 <line:280:12, line:282:28> 'const char *'
|       |-ImplicitCastExpr 0x299ca21b2f8 <line:280:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca21b200 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca21b348 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca21b220 <col:22> 'const test_enum [3]' lvalue Var 0x299ca21a610 'ssl_session_ticket' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x299ca21b360 <line:281:22, col:51> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca21b298 <col:22, col:51> 'int'
|       |   |-ImplicitCastExpr 0x299ca21b280 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca21b240 <col:22> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca21b2c0 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca21b260 <col:33> 'const test_enum [3]' lvalue Var 0x299ca21a610 'ssl_session_ticket' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x299ca21b390 <line:282:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x299ca21b378 <col:22> 'ssl_session_ticket_t':'ssl_session_ticket_t' <LValueToRValue>
|           `-DeclRefExpr 0x299ca21b2d8 <col:22> 'ssl_session_ticket_t':'ssl_session_ticket_t' lvalue ParmVar 0x299ca21b0a8 'server' 'ssl_session_ticket_t':'ssl_session_ticket_t'
|-VarDecl 0x299ca21b3f0 <line:287:1, line:290:1> line:287:24 used ssl_test_methods 'const test_enum [2]' static cinit
| `-InitListExpr 0x299ca21b618 <col:45, line:290:1> 'const test_enum [2]'
|   |-InitListExpr 0x299ca21b668 <line:288:5, col:32> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca21b6d0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca21b6b8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca21b458 <col:6> 'char [4]' lvalue "TLS"
|   | `-DeclRefExpr 0x299ca21b478 <col:13> 'int' EnumConstant 0x299ca1fda10 'SSL_TEST_METHOD_TLS' 'int'
|   `-InitListExpr 0x299ca21b700 <line:289:5, col:34> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x299ca21b768 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x299ca21b750 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x299ca21b500 <col:6> 'char [5]' lvalue "DTLS"
|     `-DeclRefExpr 0x299ca21b520 <col:14> 'int' EnumConstant 0x299ca1fda68 'SSL_TEST_METHOD_DTLS' 'int'
|-FunctionDecl 0x299ca21b968 <line:292:1, line:301:1> line:292:19 invalid parse_test_method 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca21b818 <col:37, col:51> col:51 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca21b898 <col:61, col:73> col:73 used value 'const char *'
| `-CompoundStmt 0x299ca21bd80 <line:293:1, line:301:1>
|   |-DeclStmt 0x299ca21bab0 <line:294:5, col:18>
|   | `-VarDecl 0x299ca21ba48 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x299ca21bc58 <line:295:5, line:298:5>
|   | |-OpaqueValueExpr 0x299ca21bc40 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ca21bc28 <line:296:41, line:298:5>
|   |   `-ReturnStmt 0x299ca21bc18 <line:297:9, col:16>
|   |     `-IntegerLiteral 0x299ca21bbf0 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca21bd28 <line:299:5, col:24> 'ssl_test_method_t':'ssl_test_method_t' '='
|   | |-MemberExpr 0x299ca21bca8 <col:5, col:15> 'ssl_test_method_t':'ssl_test_method_t' lvalue ->method 0x299ca1fe1f0
|   | | `-ImplicitCastExpr 0x299ca21bc90 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca21bc70 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca21b818 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca21bd10 <col:24> 'ssl_test_method_t':'ssl_test_method_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x299ca21bcf8 <col:24> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca21bcd8 <col:24> 'int' lvalue Var 0x299ca21ba48 'ret_value' 'int'
|   `-ReturnStmt 0x299ca21bd70 <line:300:5, col:12>
|     `-IntegerLiteral 0x299ca21bd48 <col:12> 'int' 1
|-FunctionDecl 0x299ca21be70 prev 0x299ca206860 <line:303:1, line:306:1> line:303:13 ssl_test_method_name 'const char *(ssl_test_method_t)'
| |-ParmVarDecl 0x299ca21bdc0 <col:34, col:52> col:52 used method 'ssl_test_method_t':'ssl_test_method_t'
| `-CompoundStmt 0x299ca21c0d0 <line:304:1, line:306:1>
|   `-ReturnStmt 0x299ca21c0c0 <line:305:5, col:76>
|     `-CallExpr 0x299ca21c028 <col:12, col:76> 'const char *'
|       |-ImplicitCastExpr 0x299ca21c010 <col:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca21bf18 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca21c060 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca21bf38 <col:22> 'const test_enum [2]' lvalue Var 0x299ca21b3f0 'ssl_test_methods' 'const test_enum [2]'
|       |-ImplicitCastExpr 0x299ca21c078 <col:40, col:67> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca21bfb0 <col:40, col:67> 'int'
|       |   |-ImplicitCastExpr 0x299ca21bf98 <col:40> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca21bf58 <col:40> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca21bfd8 <col:51> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca21bf78 <col:51> 'const test_enum [2]' lvalue Var 0x299ca21b3f0 'ssl_test_methods' 'const test_enum [2]'
|       `-ImplicitCastExpr 0x299ca21c0a8 <col:70> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x299ca21c090 <col:70> 'ssl_test_method_t':'ssl_test_method_t' <LValueToRValue>
|           `-DeclRefExpr 0x299ca21bff0 <col:70> 'ssl_test_method_t':'ssl_test_method_t' lvalue ParmVar 0x299ca21bdc0 'method' 'ssl_test_method_t':'ssl_test_method_t'
|-FunctionDecl 0x299ca21c248 <line:43:5, line:49:5> <scratch space>:296:1 used parse_client_npn_protocols 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca21c0f8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:310:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x299ca21c178 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca214bf0 <line:44:5, line:49:5>
|   |-CallExpr 0x299ca214440 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x299ca21c488 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca21c400 <col:9> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca214468 <col:22, line:310:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca21c458 <line:45:22, line:310:64> 'char *' lvalue ->npn_protocols 0x299ca205710
|   |     `-ImplicitCastExpr 0x299ca21c440 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca21c420 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca21c0f8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x299ca214688 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x299ca2144b8 <col:9, line:310:64> 'char *' lvalue ->npn_protocols 0x299ca205710
|   | | `-ImplicitCastExpr 0x299ca2144a0 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca214480 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca21c0f8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x299ca214670 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x299ca214630 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x299ca214618 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ca2145d8 <col:22> 'int ()' Function 0x299ca214510 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x299ca214658 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca2145f8 <col:37> 'const char *' lvalue ParmVar 0x299ca21c178 'value' 'const char *'
|   |-DoStmt 0x299ca214b90 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x299ca214b50 <line:106:8, line:111:5>
|   | | `-IfStmt 0x299ca214b38 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x299ca214808 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x299ca2147e8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x299ca2147c8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x299ca214798 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:310:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x299ca2146e0 <line:47:20, line:310:64> 'char *' lvalue ->npn_protocols 0x299ca205710
|   | |   |     |   `-ImplicitCastExpr 0x299ca2146c8 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x299ca2146a8 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca21c0f8 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x299ca2147b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x299ca214778 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x299ca214750 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x299ca214710 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x299ca214b20 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x299ca214af8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x299ca214ae0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x299ca214a20 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x299ca214ac8 <col:28, <scratch space>:297:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x299ca214ab0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x299ca214a78 <col:1> 'char [27]' lvalue "ctx->npn_protocols != NULL"
|   | `-IntegerLiteral 0x299ca214b68 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x299ca214bb0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x299ca214be0 <line:48:9, col:16>
|     `-IntegerLiteral 0x299ca214bb8 <col:16> 'int' 1
|-FunctionDecl 0x299ca214d88 <line:43:5, line:49:5> <scratch space>:300:1 used parse_server_npn_protocols 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca214c38 <.//openssl//file_jk/after\test\ssl_test_ctx.c:311:34, line:43:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x299ca214cb8 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca215398 <line:44:5, line:49:5>
|   |-CallExpr 0x299ca214ef0 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x299ca214ed8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca214e50 <col:9> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca214f18 <col:22, line:311:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca214ea8 <line:45:22, line:311:64> 'char *' lvalue ->npn_protocols 0x299ca205b00
|   |     `-ImplicitCastExpr 0x299ca214e90 <line:45:22> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca214e70 <col:22> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x299ca214c38 'ctx' 'SSL_TEST_SERVER_CONF *'
|   |-BinaryOperator 0x299ca215048 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x299ca214f68 <col:9, line:311:64> 'char *' lvalue ->npn_protocols 0x299ca205b00
|   | | `-ImplicitCastExpr 0x299ca214f50 <line:46:9> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca214f30 <col:9> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x299ca214c38 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x299ca215030 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x299ca214ff0 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x299ca214fd8 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ca214f98 <col:22> 'int ()' Function 0x299ca214510 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x299ca215018 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca214fb8 <col:37> 'const char *' lvalue ParmVar 0x299ca214cb8 'value' 'const char *'
|   |-DoStmt 0x299ca215338 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x299ca2152f8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x299ca2152e0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x299ca2151c8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x299ca2151a8 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x299ca215188 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x299ca215158 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:311:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x299ca2150a0 <line:47:20, line:311:64> 'char *' lvalue ->npn_protocols 0x299ca205b00
|   | |   |     |   `-ImplicitCastExpr 0x299ca215088 <line:47:20> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x299ca215068 <col:20> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x299ca214c38 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | |   |     `-ImplicitCastExpr 0x299ca215170 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x299ca215138 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x299ca215110 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x299ca2150d0 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x299ca2152c8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x299ca2152a0 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x299ca215288 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x299ca215200 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x299ca215270 <col:28, <scratch space>:301:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x299ca215258 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x299ca215220 <col:1> 'char [27]' lvalue "ctx->npn_protocols != NULL"
|   | `-IntegerLiteral 0x299ca215310 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x299ca215358 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x299ca215388 <line:48:9, col:16>
|     `-IntegerLiteral 0x299ca215360 <col:16> 'int' 1
|-FunctionDecl 0x299ca21c610 <line:43:5, line:49:5> <scratch space>:304:1 used parse_test_expected_npn_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca21c4c0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:312:34, line:43:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca21c540 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca21cc68 <line:44:5, line:49:5>
|   |-CallExpr 0x299ca21c778 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x299ca21c760 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca21c6d8 <col:9> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca21c7a0 <col:22, line:312:54> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca21c730 <line:45:22, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x299ca1fe790
|   |     `-ImplicitCastExpr 0x299ca21c718 <line:45:22> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca21c6f8 <col:22> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca21c4c0 'ctx' 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x299ca21c8d0 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x299ca21c7f0 <col:9, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x299ca1fe790
|   | | `-ImplicitCastExpr 0x299ca21c7d8 <line:46:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca21c7b8 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca21c4c0 'ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca21c8b8 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x299ca21c878 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x299ca21c860 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ca21c820 <col:22> 'int ()' Function 0x299ca214510 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x299ca21c8a0 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca21c840 <col:37> 'const char *' lvalue ParmVar 0x299ca21c540 'value' 'const char *'
|   |-DoStmt 0x299ca21cc08 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x299ca21cbc8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x299ca21cbb0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x299ca21ca50 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x299ca21ca30 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x299ca21ca10 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x299ca21c9e0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:312:54> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x299ca21c928 <line:47:20, line:312:54> 'char *' lvalue ->expected_npn_protocol 0x299ca1fe790
|   | |   |     |   `-ImplicitCastExpr 0x299ca21c910 <line:47:20> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x299ca21c8f0 <col:20> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca21c4c0 'ctx' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x299ca21c9f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x299ca21c9c0 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x299ca21c998 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x299ca21c958 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x299ca21cb98 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x299ca21cb70 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x299ca21cb58 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x299ca21ca88 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x299ca21cb40 <col:28, <scratch space>:2:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x299ca21cb28 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x299ca21cae8 <col:1> 'char [35]' lvalue "ctx->expected_npn_protocol != NULL"
|   | `-IntegerLiteral 0x299ca21cbe0 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x299ca21cc28 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x299ca21cc58 <line:48:9, col:16>
|     `-IntegerLiteral 0x299ca21cc30 <col:16> 'int' 1
|-FunctionDecl 0x299ca21ce00 <line:43:5, line:49:5> <scratch space>:5:1 used parse_client_alpn_protocols 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca21ccb0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:313:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x299ca21cd30 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca21d450 <line:44:5, line:49:5>
|   |-CallExpr 0x299ca21cf68 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x299ca21cf50 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca21cec8 <col:9> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca21cf90 <col:22, line:313:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca21cf20 <line:45:22, line:313:64> 'char *' lvalue ->alpn_protocols 0x299ca205780
|   |     `-ImplicitCastExpr 0x299ca21cf08 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca21cee8 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca21ccb0 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x299ca21d0c0 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x299ca21cfe0 <col:9, line:313:64> 'char *' lvalue ->alpn_protocols 0x299ca205780
|   | | `-ImplicitCastExpr 0x299ca21cfc8 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca21cfa8 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca21ccb0 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x299ca21d0a8 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x299ca21d068 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x299ca21d050 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ca21d010 <col:22> 'int ()' Function 0x299ca214510 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x299ca21d090 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca21d030 <col:37> 'const char *' lvalue ParmVar 0x299ca21cd30 'value' 'const char *'
|   |-DoStmt 0x299ca21d3f0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x299ca21d3b0 <line:106:8, line:111:5>
|   | | `-IfStmt 0x299ca21d398 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x299ca21d240 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x299ca21d220 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x299ca21d200 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x299ca21d1d0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:313:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x299ca21d118 <line:47:20, line:313:64> 'char *' lvalue ->alpn_protocols 0x299ca205780
|   | |   |     |   `-ImplicitCastExpr 0x299ca21d100 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x299ca21d0e0 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca21ccb0 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x299ca21d1e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x299ca21d1b0 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x299ca21d188 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x299ca21d148 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x299ca21d380 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x299ca21d358 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x299ca21d340 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x299ca21d278 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x299ca21d328 <col:28, <scratch space>:6:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x299ca21d310 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x299ca21d2d8 <col:1> 'char [28]' lvalue "ctx->alpn_protocols != NULL"
|   | `-IntegerLiteral 0x299ca21d3c8 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x299ca21d410 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x299ca21d440 <line:48:9, col:16>
|     `-IntegerLiteral 0x299ca21d418 <col:16> 'int' 1
|-FunctionDecl 0x299ca224690 <line:43:5, line:49:5> <scratch space>:9:1 used parse_server_alpn_protocols 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca224540 <.//openssl//file_jk/after\test\ssl_test_ctx.c:314:34, line:43:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x299ca2245c0 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca224ca0 <line:44:5, line:49:5>
|   |-CallExpr 0x299ca2247f8 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x299ca2247e0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca224758 <col:9> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca224820 <col:22, line:314:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca2247b0 <line:45:22, line:314:64> 'char *' lvalue ->alpn_protocols 0x299ca205b70
|   |     `-ImplicitCastExpr 0x299ca224798 <line:45:22> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca224778 <col:22> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x299ca224540 'ctx' 'SSL_TEST_SERVER_CONF *'
|   |-BinaryOperator 0x299ca224950 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x299ca224870 <col:9, line:314:64> 'char *' lvalue ->alpn_protocols 0x299ca205b70
|   | | `-ImplicitCastExpr 0x299ca224858 <line:46:9> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca224838 <col:9> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x299ca224540 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x299ca224938 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x299ca2248f8 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x299ca2248e0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ca2248a0 <col:22> 'int ()' Function 0x299ca214510 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x299ca224920 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca2248c0 <col:37> 'const char *' lvalue ParmVar 0x299ca2245c0 'value' 'const char *'
|   |-DoStmt 0x299ca224c40 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x299ca224c00 <line:106:8, line:111:5>
|   | | `-IfStmt 0x299ca224be8 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x299ca224ad0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x299ca224ab0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x299ca224a90 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x299ca224a60 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:314:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x299ca2249a8 <line:47:20, line:314:64> 'char *' lvalue ->alpn_protocols 0x299ca205b70
|   | |   |     |   `-ImplicitCastExpr 0x299ca224990 <line:47:20> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x299ca224970 <col:20> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x299ca224540 'ctx' 'SSL_TEST_SERVER_CONF *'
|   | |   |     `-ImplicitCastExpr 0x299ca224a78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x299ca224a40 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x299ca224a18 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x299ca2249d8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x299ca224bd0 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x299ca224ba8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x299ca224b90 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x299ca224b08 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x299ca224b78 <col:28, <scratch space>:10:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x299ca224b60 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x299ca224b28 <col:1> 'char [28]' lvalue "ctx->alpn_protocols != NULL"
|   | `-IntegerLiteral 0x299ca224c18 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x299ca224c60 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x299ca224c90 <line:48:9, col:16>
|     `-IntegerLiteral 0x299ca224c68 <col:16> 'int' 1
|-FunctionDecl 0x299ca224e38 <line:43:5, line:49:5> <scratch space>:13:1 used parse_test_expected_alpn_protocol 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca224ce8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:315:34, line:43:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca224d68 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca225488 <line:44:5, line:49:5>
|   |-CallExpr 0x299ca224fa0 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x299ca224f88 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca224f00 <col:9> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca224fc8 <col:22, line:315:54> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca224f58 <line:45:22, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x299ca1fe800
|   |     `-ImplicitCastExpr 0x299ca224f40 <line:45:22> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca224f20 <col:22> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca224ce8 'ctx' 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x299ca2250f8 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x299ca225018 <col:9, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x299ca1fe800
|   | | `-ImplicitCastExpr 0x299ca225000 <line:46:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca224fe0 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca224ce8 'ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca2250e0 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x299ca2250a0 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x299ca225088 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ca225048 <col:22> 'int ()' Function 0x299ca214510 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x299ca2250c8 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca225068 <col:37> 'const char *' lvalue ParmVar 0x299ca224d68 'value' 'const char *'
|   |-DoStmt 0x299ca225428 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x299ca2253e8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x299ca2253d0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x299ca225278 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x299ca225258 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x299ca225238 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x299ca225208 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:315:54> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x299ca225150 <line:47:20, line:315:54> 'char *' lvalue ->expected_alpn_protocol 0x299ca1fe800
|   | |   |     |   `-ImplicitCastExpr 0x299ca225138 <line:47:20> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x299ca225118 <col:20> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca224ce8 'ctx' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x299ca225220 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x299ca2251e8 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x299ca2251c0 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x299ca225180 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x299ca2253b8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x299ca225390 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x299ca225378 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x299ca2252b0 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x299ca225360 <col:28, <scratch space>:14:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x299ca225348 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x299ca225308 <col:1> 'char [36]' lvalue "ctx->expected_alpn_protocol != NULL"
|   | `-IntegerLiteral 0x299ca225400 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x299ca225448 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x299ca225478 <line:48:9, col:16>
|     `-IntegerLiteral 0x299ca225450 <col:16> 'int' 1
|-VarDecl 0x299ca220500 <line:319:1, line:324:1> line:319:24 used ssl_handshake_modes 'const test_enum [4]' static cinit
| `-InitListExpr 0x299ca2208c0 <col:48, line:324:1> 'const test_enum [4]'
|   |-InitListExpr 0x299ca220910 <line:320:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca220978 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca220960 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca220568 <col:6> 'char [7]' lvalue "Simple"
|   | `-DeclRefExpr 0x299ca220588 <col:16> 'int' EnumConstant 0x299ca1fdca0 'SSL_TEST_HANDSHAKE_SIMPLE' 'int'
|   |-InitListExpr 0x299ca2209a8 <line:321:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca220a10 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca2209f8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca2205f8 <col:6> 'char [7]' lvalue "Resume"
|   | `-DeclRefExpr 0x299ca220618 <col:16> 'int' EnumConstant 0x299ca1fdcf8 'SSL_TEST_HANDSHAKE_RESUME' 'int'
|   |-InitListExpr 0x299ca220a48 <line:322:5, col:58> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca220ab0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca220a98 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca2206c8 <col:6> 'char [18]' lvalue "RenegotiateServer"
|   | `-DeclRefExpr 0x299ca2206f8 <col:27> 'int' EnumConstant 0x299ca1fdd50 'SSL_TEST_HANDSHAKE_RENEG_SERVER' 'int'
|   `-InitListExpr 0x299ca220af8 <line:323:5, col:58> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x299ca220b60 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x299ca220b48 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x299ca220768 <col:6> 'char [18]' lvalue "RenegotiateClient"
|     `-DeclRefExpr 0x299ca220798 <col:27> 'int' EnumConstant 0x299ca1fdda8 'SSL_TEST_HANDSHAKE_RENEG_CLIENT' 'int'
|-FunctionDecl 0x299ca220cd8 <line:326:1, line:335:1> line:326:19 invalid parse_handshake_mode 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca220b88 <col:40, col:54> col:54 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca220c08 <col:64, col:76> col:76 used value 'const char *'
| `-CompoundStmt 0x299ca2210f0 <line:327:1, line:335:1>
|   |-DeclStmt 0x299ca220e20 <line:328:5, col:18>
|   | `-VarDecl 0x299ca220db8 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x299ca220fc8 <line:329:5, line:332:5>
|   | |-OpaqueValueExpr 0x299ca220fb0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ca220f98 <line:330:41, line:332:5>
|   |   `-ReturnStmt 0x299ca220f88 <line:331:9, col:16>
|   |     `-IntegerLiteral 0x299ca220f60 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca221098 <line:333:5, col:32> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' '='
|   | |-MemberExpr 0x299ca221018 <col:5, col:15> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' lvalue ->handshake_mode 0x299ca1fe280
|   | | `-ImplicitCastExpr 0x299ca221000 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca220fe0 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca220b88 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca221080 <col:32> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x299ca221068 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca221048 <col:32> 'int' lvalue Var 0x299ca220db8 'ret_value' 'int'
|   `-ReturnStmt 0x299ca2210e0 <line:334:5, col:12>
|     `-IntegerLiteral 0x299ca2210b8 <col:12> 'int' 1
|-FunctionDecl 0x299ca2211e0 prev 0x299ca206a40 <line:337:1, line:341:1> line:337:13 ssl_handshake_mode_name 'const char *(ssl_handshake_mode_t)'
| |-ParmVarDecl 0x299ca221130 <col:37, col:58> col:58 used mode 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
| `-CompoundStmt 0x299ca221440 <line:338:1, line:341:1>
|   `-ReturnStmt 0x299ca221430 <line:339:5, line:340:26>
|     `-CallExpr 0x299ca221398 <line:339:12, line:340:26> 'const char *'
|       |-ImplicitCastExpr 0x299ca221380 <line:339:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca221288 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca2213d0 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca2212a8 <col:22> 'const test_enum [4]' lvalue Var 0x299ca220500 'ssl_handshake_modes' 'const test_enum [4]'
|       |-ImplicitCastExpr 0x299ca2213e8 <col:43, col:73> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca221320 <col:43, col:73> 'int'
|       |   |-ImplicitCastExpr 0x299ca221308 <col:43> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca2212c8 <col:43> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca221348 <col:54> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca2212e8 <col:54> 'const test_enum [4]' lvalue Var 0x299ca220500 'ssl_handshake_modes' 'const test_enum [4]'
|       `-ImplicitCastExpr 0x299ca221418 <line:340:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x299ca221400 <col:22> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' <LValueToRValue>
|           `-DeclRefExpr 0x299ca221360 <col:22> 'ssl_handshake_mode_t':'ssl_handshake_mode_t' lvalue ParmVar 0x299ca221130 'mode' 'ssl_handshake_mode_t':'ssl_handshake_mode_t'
|-FunctionDecl 0x299ca223600 <line:43:5, line:49:5> <scratch space>:17:1 used parse_client_reneg_ciphers 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca221468 <.//openssl//file_jk/after\test\ssl_test_ctx.c:345:34, line:43:52> col:52 used ctx 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x299ca223530 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca223c10 <line:44:5, line:49:5>
|   |-CallExpr 0x299ca223768 <line:45:9, col:32> 'int'
|   | |-ImplicitCastExpr 0x299ca223750 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca2236c8 <col:9> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca223790 <col:22, line:345:64> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca223720 <line:45:22, line:345:64> 'char *' lvalue ->reneg_ciphers 0x299ca205880
|   |     `-ImplicitCastExpr 0x299ca223708 <line:45:22> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca2236e8 <col:22> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca221468 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   |-BinaryOperator 0x299ca2238c0 <line:46:9, col:42> 'char *' '='
|   | |-MemberExpr 0x299ca2237e0 <col:9, line:345:64> 'char *' lvalue ->reneg_ciphers 0x299ca205880
|   | | `-ImplicitCastExpr 0x299ca2237c8 <line:46:9> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca2237a8 <col:9> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca221468 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x299ca2238a8 <col:22, col:42> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x299ca223868 <col:22, col:42> 'int'
|   |     |-ImplicitCastExpr 0x299ca223850 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ca223810 <col:22> 'int ()' Function 0x299ca214510 'OPENSSL_strdup' 'int ()'
|   |     `-ImplicitCastExpr 0x299ca223890 <col:37> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca223830 <col:37> 'const char *' lvalue ParmVar 0x299ca223530 'value' 'const char *'
|   |-DoStmt 0x299ca223bb0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x299ca223b70 <line:106:8, line:111:5>
|   | | `-IfStmt 0x299ca223b58 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x299ca223a40 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x299ca223a20 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x299ca223a00 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x299ca2239d0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:20, line:345:64> 'char *' <LValueToRValue>
|   | |   |     | `-MemberExpr 0x299ca223918 <line:47:20, line:345:64> 'char *' lvalue ->reneg_ciphers 0x299ca205880
|   | |   |     |   `-ImplicitCastExpr 0x299ca223900 <line:47:20> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   |     |     `-DeclRefExpr 0x299ca2238e0 <col:20> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca221468 'ctx' 'SSL_TEST_CLIENT_CONF *'
|   | |   |     `-ImplicitCastExpr 0x299ca2239e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |   |       `-ParenExpr 0x299ca2239b0 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x299ca223988 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x299ca223948 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x299ca223b40 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x299ca223b18 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x299ca223b00 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x299ca223a78 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x299ca223ae8 <col:28, <scratch space>:18:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x299ca223ad0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x299ca223a98 <col:1> 'char [27]' lvalue "ctx->reneg_ciphers != NULL"
|   | `-IntegerLiteral 0x299ca223b88 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x299ca223bd0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:47:39>
|   `-ReturnStmt 0x299ca223c00 <line:48:9, col:16>
|     `-IntegerLiteral 0x299ca223bd8 <col:16> 'int' 1
|-VarDecl 0x299ca223c68 <line:349:1, line:353:1> line:349:24 used ssl_ct_validation_modes 'const test_enum [3]' static cinit
| `-InitListExpr 0x299ca223f28 <col:52, line:353:1> 'const test_enum [3]'
|   |-InitListExpr 0x299ca223f78 <line:350:5, col:41> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca223fe0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca223fc8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca223cd0 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x299ca223cf0 <col:14> 'int' EnumConstant 0x299ca1fdfe0 'SSL_TEST_CT_VALIDATION_NONE' 'int'
|   |-InitListExpr 0x299ca224010 <line:351:5, col:53> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca224078 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca224060 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca223d60 <col:6> 'char [11]' lvalue "Permissive"
|   | `-DeclRefExpr 0x299ca223d88 <col:20> 'int' EnumConstant 0x299ca1fe038 'SSL_TEST_CT_VALIDATION_PERMISSIVE' 'int'
|   `-InitListExpr 0x299ca2240b0 <line:352:5, col:45> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x299ca224118 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x299ca224100 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x299ca223df8 <col:6> 'char [7]' lvalue "Strict"
|     `-DeclRefExpr 0x299ca223e18 <col:16> 'int' EnumConstant 0x299ca1fe090 'SSL_TEST_CT_VALIDATION_STRICT' 'int'
|-FunctionDecl 0x299ca2242b0 <line:355:1, line:365:1> line:355:19 invalid parse_ct_validation 'int (SSL_TEST_CLIENT_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca224160 <col:39, col:61> col:61 used client_conf 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x299ca2241e0 <line:356:39, col:51> col:51 used value 'const char *'
| `-CompoundStmt 0x299ca2226d0 <line:357:1, line:365:1>
|   |-DeclStmt 0x299ca2243f8 <line:358:5, col:18>
|   | `-VarDecl 0x299ca224390 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x299ca2225a8 <line:359:5, line:362:5>
|   | |-OpaqueValueExpr 0x299ca222590 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ca222578 <line:360:41, line:362:5>
|   |   `-ReturnStmt 0x299ca222568 <line:361:9, col:16>
|   |     `-IntegerLiteral 0x299ca222540 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca222678 <line:363:5, col:34> 'ssl_ct_validation_t':'ssl_ct_validation_t' '='
|   | |-MemberExpr 0x299ca2225f8 <col:5, col:18> 'ssl_ct_validation_t':'ssl_ct_validation_t' lvalue ->ct_validation 0x299ca205810
|   | | `-ImplicitCastExpr 0x299ca2225e0 <col:5> 'SSL_TEST_CLIENT_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca2225c0 <col:5> 'SSL_TEST_CLIENT_CONF *' lvalue ParmVar 0x299ca224160 'client_conf' 'SSL_TEST_CLIENT_CONF *'
|   | `-ImplicitCastExpr 0x299ca222660 <col:34> 'ssl_ct_validation_t':'ssl_ct_validation_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x299ca222648 <col:34> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca222628 <col:34> 'int' lvalue Var 0x299ca224390 'ret_value' 'int'
|   `-ReturnStmt 0x299ca2226c0 <line:364:5, col:12>
|     `-IntegerLiteral 0x299ca222698 <col:12> 'int' 1
|-FunctionDecl 0x299ca2227c0 prev 0x299ca206c20 <line:367:1, line:371:1> line:367:13 ssl_ct_validation_name 'const char *(ssl_ct_validation_t)'
| |-ParmVarDecl 0x299ca222710 <col:36, col:56> col:56 used mode 'ssl_ct_validation_t':'ssl_ct_validation_t'
| `-CompoundStmt 0x299ca222a20 <line:368:1, line:371:1>
|   `-ReturnStmt 0x299ca222a10 <line:369:5, line:370:26>
|     `-CallExpr 0x299ca222978 <line:369:12, line:370:26> 'const char *'
|       |-ImplicitCastExpr 0x299ca222960 <line:369:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca222868 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca2229b0 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca222888 <col:22> 'const test_enum [3]' lvalue Var 0x299ca223c68 'ssl_ct_validation_modes' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x299ca2229c8 <col:47, col:81> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca222900 <col:47, col:81> 'int'
|       |   |-ImplicitCastExpr 0x299ca2228e8 <col:47> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca2228a8 <col:47> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca222928 <col:58> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca2228c8 <col:58> 'const test_enum [3]' lvalue Var 0x299ca223c68 'ssl_ct_validation_modes' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x299ca2229f8 <line:370:22> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x299ca2229e0 <col:22> 'ssl_ct_validation_t':'ssl_ct_validation_t' <LValueToRValue>
|           `-DeclRefExpr 0x299ca222940 <col:22> 'ssl_ct_validation_t':'ssl_ct_validation_t' lvalue ParmVar 0x299ca222710 'mode' 'ssl_ct_validation_t':'ssl_ct_validation_t'
|-FunctionDecl 0x299ca222b98 <line:37:5, line:40:5> <scratch space>:21:1 used parse_test_resumption_expected 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca222a48 <.//openssl//file_jk/after\test\ssl_test_ctx.c:373:32, line:37:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca222ac8 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca222db8 <line:38:5, line:40:5>
|   `-ReturnStmt 0x299ca222da8 <line:39:9, col:48>
|     `-CallExpr 0x299ca222d60 <col:16, col:48> 'int'
|       |-ImplicitCastExpr 0x299ca222d48 <col:16> 'int (*)(const char *, int *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca222c60 <col:16> 'int (const char *, int *)' Function 0x299ca210890 'parse_boolean' 'int (const char *, int *)'
|       |-ImplicitCastExpr 0x299ca222d90 <col:30> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x299ca222c80 <col:30> 'const char *' lvalue ParmVar 0x299ca222ac8 'value' 'const char *'
|       `-UnaryOperator 0x299ca222d08 <col:37, line:373:52> 'int *' prefix '&' cannot overflow
|         `-MemberExpr 0x299ca222cd8 <line:39:38, line:373:52> 'int' lvalue ->resumption_expected 0x299ca1fe870
|           `-ImplicitCastExpr 0x299ca222cc0 <line:39:38> 'SSL_TEST_CTX *' <LValueToRValue>
|             `-DeclRefExpr 0x299ca222ca0 <col:38> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca222a48 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x299ca222f30 <line:37:5, line:40:5> <scratch space>:24:1 used parse_server_broken_session_ticket 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca222de0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:374:32, line:37:52> col:52 used ctx 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x299ca222e60 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca223128 <line:38:5, line:40:5>
|   `-ReturnStmt 0x299ca223118 <line:39:9, col:48>
|     `-CallExpr 0x299ca2230d0 <col:16, col:48> 'int'
|       |-ImplicitCastExpr 0x299ca2230b8 <col:16> 'int (*)(const char *, int *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca222ff8 <col:16> 'int (const char *, int *)' Function 0x299ca210890 'parse_boolean' 'int (const char *, int *)'
|       |-ImplicitCastExpr 0x299ca223100 <col:30> 'const char *' <LValueToRValue>
|       | `-DeclRefExpr 0x299ca223018 <col:30> 'const char *' lvalue ParmVar 0x299ca222e60 'value' 'const char *'
|       `-UnaryOperator 0x299ca2230a0 <col:37, line:374:62> 'int *' prefix '&' cannot overflow
|         `-MemberExpr 0x299ca223070 <line:39:38, line:374:62> 'int' lvalue ->broken_session_ticket 0x299ca205be0
|           `-ImplicitCastExpr 0x299ca223058 <line:39:38> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|             `-DeclRefExpr 0x299ca223038 <col:38> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x299ca222de0 'ctx' 'SSL_TEST_SERVER_CONF *'
|-VarDecl 0x299ca223160 <line:378:1, line:382:1> line:378:24 used ssl_certstatus 'const test_enum [3]' static cinit
| `-InitListExpr 0x299ca223460 <col:43, line:382:1> 'const test_enum [3]'
|   |-InitListExpr 0x299ca2234b0 <line:379:5, col:39> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca21d4d0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca223500 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca2231c8 <col:6> 'char [5]' lvalue "None"
|   | `-DeclRefExpr 0x299ca2231e8 <col:14> 'int' EnumConstant 0x299ca205350 'SSL_TEST_CERT_STATUS_NONE' 'int'
|   |-InitListExpr 0x299ca21d500 <line:380:5, col:56> 'test_enum':'test_enum'
|   | |-ImplicitCastExpr 0x299ca21d568 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x299ca21d550 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x299ca223258 <col:6> 'char [13]' lvalue "GoodResponse"
|   | `-DeclRefExpr 0x299ca223280 <col:22> 'int' EnumConstant 0x299ca2053a8 'SSL_TEST_CERT_STATUS_GOOD_RESPONSE' 'int'
|   `-InitListExpr 0x299ca21d5a0 <line:381:5, col:54> 'test_enum':'test_enum'
|     |-ImplicitCastExpr 0x299ca21d608 <col:6> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x299ca21d5f0 <col:6> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x299ca223328 <col:6> 'char [12]' lvalue "BadResponse"
|     `-DeclRefExpr 0x299ca223350 <col:21> 'int' EnumConstant 0x299ca205400 'SSL_TEST_CERT_STATUS_BAD_RESPONSE' 'int'
|-FunctionDecl 0x299ca21d7a0 <line:384:1, line:394:1> line:384:19 invalid parse_certstatus 'int (SSL_TEST_SERVER_CONF *, const char *)' static
| |-ParmVarDecl 0x299ca21d650 <col:36, col:58> col:58 used server_conf 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x299ca21d6d0 <line:385:45, col:57> col:57 used value 'const char *'
| `-CompoundStmt 0x299ca21dbb8 <line:386:1, line:394:1>
|   |-DeclStmt 0x299ca21d8e8 <line:387:5, col:18>
|   | `-VarDecl 0x299ca21d880 <col:5, col:9> col:9 used ret_value 'int'
|   |-IfStmt 0x299ca21da90 <line:388:5, line:391:5>
|   | |-OpaqueValueExpr 0x299ca21da78 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x299ca21da60 <line:389:29, line:391:5>
|   |   `-ReturnStmt 0x299ca21da50 <line:390:9, col:16>
|   |     `-IntegerLiteral 0x299ca21da28 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca21db60 <line:392:5, col:32> 'ssl_cert_status_t':'ssl_cert_status_t' '='
|   | |-MemberExpr 0x299ca21dae0 <col:5, col:18> 'ssl_cert_status_t':'ssl_cert_status_t' lvalue ->cert_status 0x299ca205c70
|   | | `-ImplicitCastExpr 0x299ca21dac8 <col:5> 'SSL_TEST_SERVER_CONF *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca21daa8 <col:5> 'SSL_TEST_SERVER_CONF *' lvalue ParmVar 0x299ca21d650 'server_conf' 'SSL_TEST_SERVER_CONF *'
|   | `-ImplicitCastExpr 0x299ca21db48 <col:32> 'ssl_cert_status_t':'ssl_cert_status_t' <IntegralCast>
|   |   `-ImplicitCastExpr 0x299ca21db30 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca21db10 <col:32> 'int' lvalue Var 0x299ca21d880 'ret_value' 'int'
|   `-ReturnStmt 0x299ca21dba8 <line:393:5, col:12>
|     `-IntegerLiteral 0x299ca21db80 <col:12> 'int' 1
|-FunctionDecl 0x299ca21dca8 prev 0x299ca206e00 <line:396:1, line:400:1> line:396:13 ssl_certstatus_name 'const char *(ssl_cert_status_t)'
| |-ParmVarDecl 0x299ca21dbf8 <col:33, col:51> col:51 used cert_status 'ssl_cert_status_t':'ssl_cert_status_t'
| `-CompoundStmt 0x299ca21df08 <line:397:1, line:400:1>
|   `-ReturnStmt 0x299ca21def8 <line:398:5, line:399:61>
|     `-CallExpr 0x299ca21de60 <line:398:12, line:399:61> 'const char *'
|       |-ImplicitCastExpr 0x299ca21de48 <line:398:12> 'const char *(*)(const test_enum *, size_t, int)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x299ca21dd50 <col:12> 'const char *(const test_enum *, size_t, int)' Function 0x299ca216110 'enum_name' 'const char *(const test_enum *, size_t, int)'
|       |-ImplicitCastExpr 0x299ca21de98 <col:22> 'const test_enum *' <ArrayToPointerDecay>
|       | `-DeclRefExpr 0x299ca21dd70 <col:22> 'const test_enum [3]' lvalue Var 0x299ca223160 'ssl_certstatus' 'const test_enum [3]'
|       |-ImplicitCastExpr 0x299ca21deb0 <line:399:22, col:47> 'size_t':'unsigned long long' <IntegralCast>
|       | `-CallExpr 0x299ca21dde8 <col:22, col:47> 'int'
|       |   |-ImplicitCastExpr 0x299ca21ddd0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x299ca21dd90 <col:22> 'int ()' Function 0x299ca2172b8 'OSSL_NELEM' 'int ()'
|       |   `-ImplicitCastExpr 0x299ca21de10 <col:33> 'const test_enum *' <ArrayToPointerDecay>
|       |     `-DeclRefExpr 0x299ca21ddb0 <col:33> 'const test_enum [3]' lvalue Var 0x299ca223160 'ssl_certstatus' 'const test_enum [3]'
|       `-ImplicitCastExpr 0x299ca21dee0 <col:50> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x299ca21dec8 <col:50> 'ssl_cert_status_t':'ssl_cert_status_t' <LValueToRValue>
|           `-DeclRefExpr 0x299ca21de28 <col:50> 'ssl_cert_status_t':'ssl_cert_status_t' lvalue ParmVar 0x299ca21dbf8 'cert_status' 'ssl_cert_status_t':'ssl_cert_status_t'
|-FunctionDecl 0x299ca21e080 <line:52:5, line:56:5> <scratch space>:27:1 used parse_test_app_data_size 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca21df30 <.//openssl//file_jk/after\test\ssl_test_ctx.c:404:31, line:52:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca21dfb0 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca21e390 <line:53:5, line:56:5>
|   |-BinaryOperator 0x299ca21e338 <line:54:9, col:32> 'int' '='
|   | |-MemberExpr 0x299ca21e180 <col:9, line:404:51> 'int' lvalue ->app_data_size 0x299ca1fe2f0
|   | | `-ImplicitCastExpr 0x299ca21e168 <line:54:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca21e148 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca21df30 'ctx' 'SSL_TEST_CTX *'
|   | `-CallExpr 0x299ca21e2f8 <col:22, col:32> 'int'
|   |   |-ImplicitCastExpr 0x299ca21e2e0 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x299ca21e2a0 <col:22> 'int ()' Function 0x299ca21e1d8 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x299ca21e320 <col:27> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca21e2c0 <col:27> 'const char *' lvalue ParmVar 0x299ca21dfb0 'value' 'const char *'
|   `-ReturnStmt 0x299ca21e380 <line:55:9, col:16>
|     `-IntegerLiteral 0x299ca21e358 <col:16> 'int' 1
|-FunctionDecl 0x299ca2255a0 <line:52:5, line:56:5> <scratch space>:30:1 used parse_test_max_fragment_size 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca21e3c0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:409:31, line:52:52> col:52 used ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca21e440 <col:57, col:69> col:69 used value 'const char *'
| `-CompoundStmt 0x299ca2257c0 <line:53:5, line:56:5>
|   |-BinaryOperator 0x299ca225768 <line:54:9, col:32> 'int' '='
|   | |-MemberExpr 0x299ca2256a0 <col:9, line:409:51> 'int' lvalue ->max_fragment_size 0x299ca1fe360
|   | | `-ImplicitCastExpr 0x299ca225688 <line:54:9> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca225668 <col:9> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca21e3c0 'ctx' 'SSL_TEST_CTX *'
|   | `-CallExpr 0x299ca225728 <col:22, col:32> 'int'
|   |   |-ImplicitCastExpr 0x299ca225710 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x299ca2256d0 <col:22> 'int ()' Function 0x299ca21e1d8 'atoi' 'int ()'
|   |   `-ImplicitCastExpr 0x299ca225750 <col:27> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca2256f0 <col:27> 'const char *' lvalue ParmVar 0x299ca21e440 'value' 'const char *'
|   `-ReturnStmt 0x299ca2257b0 <line:55:9, col:16>
|     `-IntegerLiteral 0x299ca225788 <col:16> 'int' 1
|-FunctionDecl 0x299ca225940 <line:414:1, line:432:1> line:414:19 invalid parse_expected_tmp_key_type 'int (SSL_TEST_CTX *, const char *)' static
| |-ParmVarDecl 0x299ca2257f0 <col:47, col:61> col:61 used test_ctx 'SSL_TEST_CTX *'
| |-ParmVarDecl 0x299ca225870 <line:415:47, col:59> col:59 used value 'const char *'
| `-CompoundStmt 0x299ca226378 <line:416:1, line:432:1>
|   |-DeclStmt 0x299ca225a88 <line:417:5, col:12>
|   | `-VarDecl 0x299ca225a20 <col:5, col:9> col:9 used nid 'int'
|   |-IfStmt 0x299ca225bd0 <line:419:5, line:420:16>
|   | |-BinaryOperator 0x299ca225b78 <line:419:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x299ca225b48 <.//openssl//file_jk/after\test\ssl_test_ctx.c:419:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x299ca225aa0 <col:9> 'const char *' lvalue ParmVar 0x299ca225870 'value' 'const char *'
|   | | `-ImplicitCastExpr 0x299ca225b60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x299ca225b28 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x299ca225b00 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x299ca225ac0 <col:26> 'int' 0
|   | `-ReturnStmt 0x299ca225bc0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:420:9, col:16>
|   |   `-IntegerLiteral 0x299ca225b98 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca225da8 <line:421:5, col:27> 'int' '='
|   | |-DeclRefExpr 0x299ca225be8 <col:5> 'int' lvalue Var 0x299ca225a20 'nid' 'int'
|   | `-CallExpr 0x299ca225d68 <col:11, col:27> 'int'
|   |   |-ImplicitCastExpr 0x299ca225d50 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x299ca225d10 <col:11> 'int ()' Function 0x299ca225c48 'OBJ_sn2nid' 'int ()'
|   |   `-ImplicitCastExpr 0x299ca225d90 <col:22> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x299ca225d30 <col:22> 'const char *' lvalue ParmVar 0x299ca225870 'value' 'const char *'
|   |-IfStmt 0x299ca225fc8 <line:422:5, line:423:31>
|   | |-OpaqueValueExpr 0x299ca225fb0 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x299ca225f90 <col:9, col:31> 'int' '='
|   |   |-DeclRefExpr 0x299ca225de8 <col:9> 'int' lvalue Var 0x299ca225a20 'nid' 'int'
|   |   `-CallExpr 0x299ca225f50 <col:15, col:31> 'int'
|   |     |-ImplicitCastExpr 0x299ca225f38 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ca225ef8 <col:15> 'int ()' Function 0x299ca225e30 'OBJ_ln2nid' 'int ()'
|   |     `-ImplicitCastExpr 0x299ca225f78 <col:26> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca225f18 <col:26> 'const char *' lvalue ParmVar 0x299ca225870 'value' 'const char *'
|   |-IfStmt 0x299ca2261e0 <line:425:5, line:426:38>
|   | |-OpaqueValueExpr 0x299ca2261c8 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x299ca2261a8 <col:9, col:38> 'int' '='
|   |   |-DeclRefExpr 0x299ca226000 <col:9> 'int' lvalue Var 0x299ca225a20 'nid' 'int'
|   |   `-CallExpr 0x299ca226168 <col:15, col:38> 'int'
|   |     |-ImplicitCastExpr 0x299ca226150 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ca226110 <col:15> 'int ()' Function 0x299ca226048 'EC_curve_nist2nid' 'int ()'
|   |     `-ImplicitCastExpr 0x299ca226190 <col:33> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca226130 <col:33> 'const char *' lvalue ParmVar 0x299ca225870 'value' 'const char *'
|   |-IfStmt 0x299ca226268 <line:428:5, line:429:16>
|   | |-OpaqueValueExpr 0x299ca226250 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x299ca226240 <col:9, col:16>
|   |   `-IntegerLiteral 0x299ca226218 <col:16> 'int' 0
|   |-BinaryOperator 0x299ca226320 <line:430:5, col:39> 'int' '='
|   | |-MemberExpr 0x299ca2262b8 <col:5, col:15> 'int' lvalue ->expected_tmp_key_type 0x299ca1fe8e0
|   | | `-ImplicitCastExpr 0x299ca2262a0 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca226280 <col:5> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca2257f0 'test_ctx' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca226308 <col:39> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x299ca2262e8 <col:39> 'int' lvalue Var 0x299ca225a20 'nid' 'int'
|   `-ReturnStmt 0x299ca226368 <line:431:5, col:12>
|     `-IntegerLiteral 0x299ca226340 <col:12> 'int' 1
|-RecordDecl 0x299ca2263c8 <line:437:9, line:440:1> line:437:9 struct definition
| |-FieldDecl 0x299ca226498 <line:438:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x299ca21f6e0 <line:439:5, col:59> col:11 referenced parse 'int (*)(SSL_TEST_CTX *, const char *)'
|-TypedefDecl 0x299ca21f798 <line:437:1, line:440:3> col:3 referenced ssl_test_ctx_option 'struct ssl_test_ctx_option':'ssl_test_ctx_option'
| `-ElaboratedType 0x299ca21f740 'struct ssl_test_ctx_option' sugar
|   `-RecordType 0x299ca226460 'ssl_test_ctx_option'
|     `-Record 0x299ca2263c8 ''
|-VarDecl 0x299ca21f8a8 <line:442:1, col:55> col:34 used ssl_test_ctx_options 'const ssl_test_ctx_option []' static
|-RecordDecl 0x299ca21ff50 <line:460:9, line:463:1> line:460:9 struct definition
| |-FieldDecl 0x299ca220028 <line:461:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x299ca220280 <line:462:5, col:63> col:11 referenced parse 'int (*)(SSL_TEST_CLIENT_CONF *, const char *)'
|-TypedefDecl 0x299ca220338 <line:460:1, line:463:3> col:3 referenced ssl_test_client_option 'struct ssl_test_client_option':'ssl_test_client_option'
| `-ElaboratedType 0x299ca2202e0 'struct ssl_test_client_option' sugar
|   `-RecordType 0x299ca21fff0 'ssl_test_client_option'
|     `-Record 0x299ca21ff50 ''
|-VarDecl 0x299ca220448 <line:465:1, col:61> col:37 used ssl_test_client_options 'const ssl_test_client_option []' static
|-RecordDecl 0x299ca2217b8 <line:475:9, line:478:1> line:475:9 struct definition
| |-FieldDecl 0x299ca221888 <line:476:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x299ca221ae0 <line:477:5, col:63> col:11 referenced parse 'int (*)(SSL_TEST_SERVER_CONF *, const char *)'
|-TypedefDecl 0x299ca221b98 <line:475:1, line:478:3> col:3 referenced ssl_test_server_option 'struct ssl_test_server_option':'ssl_test_server_option'
| `-ElaboratedType 0x299ca221b40 'struct ssl_test_server_option' sugar
|   `-RecordType 0x299ca221850 'ssl_test_server_option'
|     `-Record 0x299ca2217b8 ''
|-VarDecl 0x299ca221ca8 <line:480:1, col:61> col:37 used ssl_test_server_options 'const ssl_test_server_option []' static
|-FunctionDecl 0x299ca222048 prev 0x299ca207338 <line:492:1, line:500:1> line:492:15 used SSL_TEST_CTX_new 'SSL_TEST_CTX *(void)'
| `-CompoundStmt 0x299ca21e8a8 <line:493:1, line:500:1>
|   |-DeclStmt 0x299ca222160 <line:494:5, col:22>
|   | `-VarDecl 0x299ca2220f8 <col:5, col:19> col:19 used ret 'SSL_TEST_CTX *'
|   |-BinaryOperator 0x299ca2223a8 <line:495:5, col:38> 'SSL_TEST_CTX *' '='
|   | |-DeclRefExpr 0x299ca222178 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x299ca2220f8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca222390 <col:11, col:38> 'SSL_TEST_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x299ca222368 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x299ca222350 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x299ca2222a0 <col:11> 'int ()' Function 0x299ca2221d8 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x299ca222330 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x299ca222310 <col:32, col:37> 'SSL_TEST_CTX':'SSL_TEST_CTX' lvalue
|   |         `-UnaryOperator 0x299ca2222f8 <col:33, col:34> 'SSL_TEST_CTX':'SSL_TEST_CTX' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x299ca2222e0 <col:34> 'SSL_TEST_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x299ca2222c0 <col:34> 'SSL_TEST_CTX *' lvalue Var 0x299ca2220f8 'ret' 'SSL_TEST_CTX *' non_odr_use_unevaluated
|   |-DoStmt 0x299ca21e628 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x299ca21e5e8 <line:106:8, line:111:5>
|   | | `-IfStmt 0x299ca21e5d0 <line:107:9, line:110:9>
|   | |   |-UnaryOperator 0x299ca2224e0 <line:107:13, col:24> 'int' prefix '!' cannot overflow
|   | |   | `-ParenExpr 0x299ca2224c0 <col:14, col:24> 'int'
|   | |   |   `-BinaryOperator 0x299ca2224a0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:496:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |   |     |-ImplicitCastExpr 0x299ca222470 <.//openssl//file_jk/after\test\ssl_test_ctx.c:496:16> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   |     | `-DeclRefExpr 0x299ca2223c8 <col:16> 'SSL_TEST_CTX *' lvalue Var 0x299ca2220f8 'ret' 'SSL_TEST_CTX *'
|   | |   |     `-ImplicitCastExpr 0x299ca222488 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <BitCast>
|   | |   |       `-ParenExpr 0x299ca222450 <col:17, col:27> 'void *'
|   | |   |         `-CStyleCastExpr 0x299ca222428 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |           `-IntegerLiteral 0x299ca2223e8 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x299ca21e5b8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
|   | |     `-CallExpr 0x299ca21e590 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x299ca21e578 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x299ca21e500 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x299ca21e560 <col:28, <scratch space>:31:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x299ca21e548 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x299ca21e520 <col:1> 'char [12]' lvalue "ret != NULL"
|   | `-IntegerLiteral 0x299ca21e600 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x299ca21e648 <.//openssl//file_jk/after\test\ssl_test_ctx.c:496:28>
|   |-BinaryOperator 0x299ca21e6f0 <line:497:5, col:26> 'int' '='
|   | |-MemberExpr 0x299ca21e688 <col:5, col:10> 'int' lvalue ->app_data_size 0x299ca1fe2f0
|   | | `-ImplicitCastExpr 0x299ca21e670 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca21e650 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x299ca2220f8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca21e6d8 <col:26> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x299ca21e6b8 <col:26> 'const int' lvalue Var 0x299ca210588 'default_app_data_size' 'const int'
|   |-BinaryOperator 0x299ca21e7f8 <line:498:5, col:30> 'int' '='
|   | |-MemberExpr 0x299ca21e790 <col:5, col:10> 'int' lvalue ->max_fragment_size 0x299ca1fe360
|   | | `-ImplicitCastExpr 0x299ca21e778 <col:5> 'SSL_TEST_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x299ca21e758 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x299ca2220f8 'ret' 'SSL_TEST_CTX *'
|   | `-ImplicitCastExpr 0x299ca21e7e0 <col:30> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x299ca21e7c0 <col:30> 'const int' lvalue Var 0x299ca210648 'default_max_fragment_size' 'const int'
|   `-ReturnStmt 0x299ca21e898 <line:499:5, col:12>
|     `-ImplicitCastExpr 0x299ca21e880 <col:12> 'SSL_TEST_CTX *' <LValueToRValue>
|       `-DeclRefExpr 0x299ca21e860 <col:12> 'SSL_TEST_CTX *' lvalue Var 0x299ca2220f8 'ret' 'SSL_TEST_CTX *'
|-FunctionDecl 0x299ca21ea68 <line:502:1, line:511:1> line:502:13 used ssl_test_extra_conf_free_data 'void (SSL_TEST_EXTRA_CONF *)' static
| |-ParmVarDecl 0x299ca21e958 <col:43, col:64> col:64 used conf 'SSL_TEST_EXTRA_CONF *'
| `-CompoundStmt 0x299ca21f298 <line:503:1, line:511:1>
|   |-CallExpr 0x299ca21ebf8 <line:504:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x299ca21ebe0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca21eb28 <col:5> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca21ec20 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca21ebb0 <col:18, col:31> 'char *' lvalue .npn_protocols 0x299ca205710
|   |     `-MemberExpr 0x299ca21eb80 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x299ca205e80
|   |       `-ImplicitCastExpr 0x299ca21eb68 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x299ca21eb48 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x299ca21e958 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x299ca21ed08 <line:505:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x299ca21ecf0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca21ec38 <col:5> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca21ed30 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca21ecc0 <col:18, col:31> 'char *' lvalue .npn_protocols 0x299ca205b00
|   |     `-MemberExpr 0x299ca21ec90 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server 0x299ca205f10
|   |       `-ImplicitCastExpr 0x299ca21ec78 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x299ca21ec58 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x299ca21e958 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x299ca21ee18 <line:506:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x299ca21ee00 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca21ed48 <col:5> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca21ee40 <col:18, col:32> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca21edd0 <col:18, col:32> 'char *' lvalue .npn_protocols 0x299ca205b00
|   |     `-MemberExpr 0x299ca21eda0 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server2 0x299ca205f78
|   |       `-ImplicitCastExpr 0x299ca21ed88 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x299ca21ed68 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x299ca21e958 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x299ca21ef28 <line:507:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x299ca21ef10 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca21ee58 <col:5> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca21ef50 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca21eee0 <col:18, col:31> 'char *' lvalue .alpn_protocols 0x299ca205780
|   |     `-MemberExpr 0x299ca21eeb0 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x299ca205e80
|   |       `-ImplicitCastExpr 0x299ca21ee98 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x299ca21ee78 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x299ca21e958 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x299ca21f038 <line:508:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x299ca21f020 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca21ef68 <col:5> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca21f060 <col:18, col:31> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca21eff0 <col:18, col:31> 'char *' lvalue .alpn_protocols 0x299ca205b70
|   |     `-MemberExpr 0x299ca21efc0 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server 0x299ca205f10
|   |       `-ImplicitCastExpr 0x299ca21efa8 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x299ca21ef88 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x299ca21e958 'conf' 'SSL_TEST_EXTRA_CONF *'
|   |-CallExpr 0x299ca21f148 <line:509:5, col:46> 'int'
|   | |-ImplicitCastExpr 0x299ca21f130 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca21f078 <col:5> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca21f170 <col:18, col:32> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca21f100 <col:18, col:32> 'char *' lvalue .alpn_protocols 0x299ca205b70
|   |     `-MemberExpr 0x299ca21f0d0 <col:18, col:24> 'SSL_TEST_SERVER_CONF':'SSL_TEST_SERVER_CONF' lvalue ->server2 0x299ca205f78
|   |       `-ImplicitCastExpr 0x299ca21f0b8 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|   |         `-DeclRefExpr 0x299ca21f098 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x299ca21e958 'conf' 'SSL_TEST_EXTRA_CONF *'
|   `-CallExpr 0x299ca21f258 <line:510:5, col:44> 'int'
|     |-ImplicitCastExpr 0x299ca21f240 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x299ca21f188 <col:5> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x299ca21f280 <col:18, col:31> 'char *' <LValueToRValue>
|       `-MemberExpr 0x299ca21f210 <col:18, col:31> 'char *' lvalue .reneg_ciphers 0x299ca205880
|         `-MemberExpr 0x299ca21f1e0 <col:18, col:24> 'SSL_TEST_CLIENT_CONF':'SSL_TEST_CLIENT_CONF' lvalue ->client 0x299ca205e80
|           `-ImplicitCastExpr 0x299ca21f1c8 <col:18> 'SSL_TEST_EXTRA_CONF *' <LValueToRValue>
|             `-DeclRefExpr 0x299ca21f1a8 <col:18> 'SSL_TEST_EXTRA_CONF *' lvalue ParmVar 0x299ca21e958 'conf' 'SSL_TEST_EXTRA_CONF *'
|-FunctionDecl 0x299ca21f398 <line:513:1, line:517:1> line:513:13 used ssl_test_ctx_free_extra_data 'void (SSL_TEST_CTX *)' static
| |-ParmVarDecl 0x299ca21f2f0 <col:42, col:56> col:56 used ctx 'SSL_TEST_CTX *'
| `-CompoundStmt 0x299ca22b748 <line:514:1, line:517:1>
|   |-CallExpr 0x299ca22b640 <line:515:5, col:46> 'void'
|   | |-ImplicitCastExpr 0x299ca22b628 <col:5> 'void (*)(SSL_TEST_EXTRA_CONF *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca21f458 <col:5> 'void (SSL_TEST_EXTRA_CONF *)' Function 0x299ca21ea68 'ssl_test_extra_conf_free_data' 'void (SSL_TEST_EXTRA_CONF *)'
|   | `-UnaryOperator 0x299ca22b5b0 <col:35, col:41> 'SSL_TEST_EXTRA_CONF *' prefix '&' cannot overflow
|   |   `-MemberExpr 0x299ca21f4b0 <col:36, col:41> 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF' lvalue ->extra 0x299ca1fe3f0
|   |     `-ImplicitCastExpr 0x299ca21f498 <col:36> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca21f478 <col:36> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca21f2f0 'ctx' 'SSL_TEST_CTX *'
|   `-CallExpr 0x299ca22b720 <line:516:5, col:53> 'void'
|     |-ImplicitCastExpr 0x299ca22b708 <col:5> 'void (*)(SSL_TEST_EXTRA_CONF *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x299ca22b668 <col:5> 'void (SSL_TEST_EXTRA_CONF *)' Function 0x299ca21ea68 'ssl_test_extra_conf_free_data' 'void (SSL_TEST_EXTRA_CONF *)'
|     `-UnaryOperator 0x299ca22b6f0 <col:35, col:41> 'SSL_TEST_EXTRA_CONF *' prefix '&' cannot overflow
|       `-MemberExpr 0x299ca22b6c0 <col:36, col:41> 'SSL_TEST_EXTRA_CONF':'SSL_TEST_EXTRA_CONF' lvalue ->resume_extra 0x299ca1fe458
|         `-ImplicitCastExpr 0x299ca22b6a8 <col:36> 'SSL_TEST_CTX *' <LValueToRValue>
|           `-DeclRefExpr 0x299ca22b688 <col:36> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca21f2f0 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x299ca22b820 prev 0x299ca207508 <line:519:1, line:525:1> line:519:6 used SSL_TEST_CTX_free 'void (SSL_TEST_CTX *)'
| |-ParmVarDecl 0x299ca22b778 <col:24, col:38> col:38 used ctx 'SSL_TEST_CTX *'
| `-CompoundStmt 0x299ca22bc18 <line:520:1, line:525:1>
|   |-CallExpr 0x299ca22b980 <line:521:5, col:37> 'void'
|   | |-ImplicitCastExpr 0x299ca22b968 <col:5> 'void (*)(SSL_TEST_CTX *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca22b8c8 <col:5> 'void (SSL_TEST_CTX *)' Function 0x299ca21f398 'ssl_test_ctx_free_extra_data' 'void (SSL_TEST_CTX *)'
|   | `-ImplicitCastExpr 0x299ca22b9a8 <col:34> 'SSL_TEST_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x299ca22b8e8 <col:34> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca22b778 'ctx' 'SSL_TEST_CTX *'
|   |-CallExpr 0x299ca22ba60 <line:522:5, col:44> 'int'
|   | |-ImplicitCastExpr 0x299ca22ba48 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca22b9c0 <col:5> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca22ba88 <col:18, col:23> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca22ba18 <col:18, col:23> 'char *' lvalue ->expected_npn_protocol 0x299ca1fe790
|   |     `-ImplicitCastExpr 0x299ca22ba00 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca22b9e0 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca22b778 'ctx' 'SSL_TEST_CTX *'
|   |-CallExpr 0x299ca22bb40 <line:523:5, col:45> 'int'
|   | |-ImplicitCastExpr 0x299ca22bb28 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x299ca22baa0 <col:5> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x299ca22bb68 <col:18, col:23> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x299ca22baf8 <col:18, col:23> 'char *' lvalue ->expected_alpn_protocol 0x299ca1fe800
|   |     `-ImplicitCastExpr 0x299ca22bae0 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x299ca22bac0 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca22b778 'ctx' 'SSL_TEST_CTX *'
|   `-CallExpr 0x299ca22bbd8 <line:524:5, col:21> 'int'
|     |-ImplicitCastExpr 0x299ca22bbc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x299ca22bb80 <col:5> 'int ()' Function 0x299ca21c338 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x299ca22bc00 <col:18> 'SSL_TEST_CTX *' <LValueToRValue>
|       `-DeclRefExpr 0x299ca22bba0 <col:18> 'SSL_TEST_CTX *' lvalue ParmVar 0x299ca22b778 'ctx' 'SSL_TEST_CTX *'
|-FunctionDecl 0x299ca22be80 <line:527:1, line:558:1> line:527:12 invalid parse_client_options 'int (SSL_TEST_CLIENT_CONF *, const int *, const char *)' static
| |-ParmVarDecl 0x299ca22bc58 <col:33, col:55> col:55 used client 'SSL_TEST_CLIENT_CONF *'
| |-ParmVarDecl 0x299ca22bcd8 <col:63, col:75> col:75 invalid conf 'const int *'
| |-ParmVarDecl 0x299ca22bd58 <line:528:33, col:45> col:45 used client_section 'const char *'
| `-CompoundStmt 0x299ca227248 <line:529:1, line:558:1>
|   |-DeclStmt 0x299ca22c0e0 <line:531:5, col:10>
|   | `-VarDecl 0x299ca22c078 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x299ca22c170 <line:532:5, col:13>
|   | `-VarDecl 0x299ca22c108 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
|   |-DoStmt 0x299ca22c4b8 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x299ca22c478 <line:106:8, line:111:5>
|   | | `-IfStmt 0x299ca22c460 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x299ca22c448 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x299ca22c430 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x299ca22c408 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x299ca22c3f0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x299ca22c378 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x299ca22c3d8 <col:28, <scratch space>:32:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x299ca22c3c0 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x299ca22c398 <col:1> 'char [16]' lvalue "sk_conf != NULL"
|   | `-IntegerLiteral 0x299ca22c490 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x299ca22c4d8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:535:32>
|   `-ReturnStmt 0x299ca227238 <line:557:5, col:12>
|     `-IntegerLiteral 0x299ca227210 <col:12> 'int' 1
|-FunctionDecl 0x299ca2274c0 <line:560:1, line:591:1> line:560:12 invalid parse_server_options 'int (SSL_TEST_SERVER_CONF *, const int *, const char *)' static
| |-ParmVarDecl 0x299ca227290 <col:33, col:55> col:55 used server 'SSL_TEST_SERVER_CONF *'
| |-ParmVarDecl 0x299ca227310 <col:63, col:75> col:75 invalid conf 'const int *'
| |-ParmVarDecl 0x299ca227390 <line:561:33, col:45> col:45 used server_section 'const char *'
| `-CompoundStmt 0x299ca22d3e0 <line:562:1, line:591:1>
|   |-DeclStmt 0x299ca22c690 <line:564:5, col:10>
|   | `-VarDecl 0x299ca22c628 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x299ca22c720 <line:565:5, col:13>
|   | `-VarDecl 0x299ca22c6b8 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
|   |-DoStmt 0x299ca22c978 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
|   | |-CompoundStmt 0x299ca22c938 <line:106:8, line:111:5>
|   | | `-IfStmt 0x299ca22c920 <line:107:9, line:110:9>
|   | |   |-OpaqueValueExpr 0x299ca22c908 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x299ca22c8f0 <line:107:27, line:110:9>
|   | |     `-CallExpr 0x299ca22c8c8 <line:109:13, col:39> 'int'
|   | |       |-ImplicitCastExpr 0x299ca22c8b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x299ca22c838 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
|   | |       `-UnaryOperator 0x299ca22c898 <col:28, <scratch space>:33:1> 'int' prefix '!' cannot overflow
|   | |         `-ImplicitCastExpr 0x299ca22c880 <col:1> 'char *' <ArrayToPointerDecay>
|   | |           `-StringLiteral 0x299ca22c858 <col:1> 'char [16]' lvalue "sk_conf != NULL"
|   | `-IntegerLiteral 0x299ca22c950 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
|   |-NullStmt 0x299ca22c998 <.//openssl//file_jk/after\test\ssl_test_ctx.c:568:32>
|   `-ReturnStmt 0x299ca22d3d0 <line:590:5, col:12>
|     `-IntegerLiteral 0x299ca22d3a8 <col:12> 'int' 1
`-FunctionDecl 0x299ca22d5d0 <line:593:1, line:662:1> line:593:15 invalid SSL_TEST_CTX_create 'SSL_TEST_CTX *(const int *, const char *)'
  |-ParmVarDecl 0x299ca22d430 <col:35, col:47> col:47 invalid conf 'const int *'
  |-ParmVarDecl 0x299ca22d4b0 <col:53, col:65> col:65 used test_section 'const char *'
  `-CompoundStmt 0x299ca229510 <line:594:1, line:662:1>
    |-DeclStmt 0x299ca22d730 <line:596:5, col:22>
    | `-VarDecl 0x299ca22d6c8 <col:5, col:19> col:19 used ctx 'SSL_TEST_CTX *'
    |-DeclStmt 0x299ca22d7c8 <line:597:5, col:10>
    | `-VarDecl 0x299ca22d760 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x299ca22d858 <line:598:5, col:13>
    | `-VarDecl 0x299ca22d7f0 <col:5, col:12> col:12 used j 'size_t':'unsigned long long'
    |-DoStmt 0x299ca22dab0 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
    | |-CompoundStmt 0x299ca22da70 <line:106:8, line:111:5>
    | | `-IfStmt 0x299ca22da58 <line:107:9, line:110:9>
    | |   |-OpaqueValueExpr 0x299ca22da40 <<invalid sloc>> '_Bool'
    | |   `-CompoundStmt 0x299ca22da28 <line:107:27, line:110:9>
    | |     `-CallExpr 0x299ca22da00 <line:109:13, col:39> 'int'
    | |       |-ImplicitCastExpr 0x299ca22d9e8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x299ca22d970 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
    | |       `-UnaryOperator 0x299ca22d9d0 <col:28, <scratch space>:34:1> 'int' prefix '!' cannot overflow
    | |         `-ImplicitCastExpr 0x299ca22d9b8 <col:1> 'char *' <ArrayToPointerDecay>
    | |           `-StringLiteral 0x299ca22d990 <col:1> 'char [16]' lvalue "sk_conf != NULL"
    | `-IntegerLiteral 0x299ca22da88 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
    |-NullStmt 0x299ca22dad0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:601:32>
    |-BinaryOperator 0x299ca22dbc0 <line:603:5, col:28> 'SSL_TEST_CTX *' '='
    | |-DeclRefExpr 0x299ca22dad8 <col:5> 'SSL_TEST_CTX *' lvalue Var 0x299ca22d6c8 'ctx' 'SSL_TEST_CTX *'
    | `-CallExpr 0x299ca22dba0 <col:11, col:28> 'SSL_TEST_CTX *'
    |   `-ImplicitCastExpr 0x299ca22db88 <col:11> 'SSL_TEST_CTX *(*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x299ca22db10 <col:11> 'SSL_TEST_CTX *(void)' Function 0x299ca222048 'SSL_TEST_CTX_new' 'SSL_TEST_CTX *(void)'
    |-DoStmt 0x299ca22de58 <.//openssl//file_jk/after\test/testutil.h:106:5, line:111:15>
    | |-CompoundStmt 0x299ca22de18 <line:106:8, line:111:5>
    | | `-IfStmt 0x299ca22de00 <line:107:9, line:110:9>
    | |   |-UnaryOperator 0x299ca22dcf8 <line:107:13, col:24> 'int' prefix '!' cannot overflow
    | |   | `-ParenExpr 0x299ca22dcd8 <col:14, col:24> 'int'
    | |   |   `-BinaryOperator 0x299ca22dcb8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:604:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    | |   |     |-ImplicitCastExpr 0x299ca22dc88 <.//openssl//file_jk/after\test\ssl_test_ctx.c:604:16> 'SSL_TEST_CTX *' <LValueToRValue>
    | |   |     | `-DeclRefExpr 0x299ca22dbe0 <col:16> 'SSL_TEST_CTX *' lvalue Var 0x299ca22d6c8 'ctx' 'SSL_TEST_CTX *'
    | |   |     `-ImplicitCastExpr 0x299ca22dca0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <BitCast>
    | |   |       `-ParenExpr 0x299ca22dc68 <col:17, col:27> 'void *'
    | |   |         `-CStyleCastExpr 0x299ca22dc40 <col:18, col:26> 'void *' <NullToPointer>
    | |   |           `-IntegerLiteral 0x299ca22dc00 <col:26> 'int' 0
    | |   `-CompoundStmt 0x299ca22dde8 <.//openssl//file_jk/after\test/testutil.h:107:27, line:110:9>
    | |     `-CallExpr 0x299ca22ddc0 <line:109:13, col:39> 'int'
    | |       |-ImplicitCastExpr 0x299ca22dda8 <col:13> 'int (*)()' <FunctionToPointerDecay>
    | |       | `-DeclRefExpr 0x299ca22dd30 <col:13> 'int ()' Function 0x299ca214958 'OPENSSL_assert' 'int ()'
    | |       `-UnaryOperator 0x299ca22dd90 <col:28, <scratch space>:35:1> 'int' prefix '!' cannot overflow
    | |         `-ImplicitCastExpr 0x299ca22dd78 <col:1> 'char *' <ArrayToPointerDecay>
    | |           `-StringLiteral 0x299ca22dd50 <col:1> 'char [12]' lvalue "ctx != NULL"
    | `-IntegerLiteral 0x299ca22de30 <.//openssl//file_jk/after\test/testutil.h:111:14> 'int' 0
    |-NullStmt 0x299ca22de78 <.//openssl//file_jk/after\test\ssl_test_ctx.c:604:28>
    |-GotoStmt 0x299ca229308 <line:655:5, col:10> 'done' 0x299ca2292b8
    |-LabelStmt 0x299ca2293b8 <line:657:2, line:658:26> 'err'
    | `-CallExpr 0x299ca229378 <col:5, col:26> 'void'
    |   |-ImplicitCastExpr 0x299ca229360 <col:5> 'void (*)(SSL_TEST_CTX *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x299ca229320 <col:5> 'void (SSL_TEST_CTX *)' Function 0x299ca22b820 'SSL_TEST_CTX_free' 'void (SSL_TEST_CTX *)'
    |   `-ImplicitCastExpr 0x299ca2293a0 <col:23> 'SSL_TEST_CTX *' <LValueToRValue>
    |     `-DeclRefExpr 0x299ca229340 <col:23> 'SSL_TEST_CTX *' lvalue Var 0x299ca22d6c8 'ctx' 'SSL_TEST_CTX *'
    |-BinaryOperator 0x299ca229490 <line:659:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'SSL_TEST_CTX *' '='
    | |-DeclRefExpr 0x299ca2293d0 <.//openssl//file_jk/after\test\ssl_test_ctx.c:659:5> 'SSL_TEST_CTX *' lvalue Var 0x299ca22d6c8 'ctx' 'SSL_TEST_CTX *'
    | `-ImplicitCastExpr 0x299ca229478 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'SSL_TEST_CTX *' <NullToPointer>
    |   `-ParenExpr 0x299ca229458 <col:17, col:27> 'void *'
    |     `-CStyleCastExpr 0x299ca229430 <col:18, col:26> 'void *' <NullToPointer>
    |       `-IntegerLiteral 0x299ca2293f0 <col:26> 'int' 0
    `-LabelStmt 0x299ca2294f8 <.//openssl//file_jk/after\test\ssl_test_ctx.c:660:2, line:661:12> 'done'
      `-ReturnStmt 0x299ca2294e8 <col:5, col:12>
        `-ImplicitCastExpr 0x299ca2294d0 <col:12> 'SSL_TEST_CTX *' <LValueToRValue>
          `-DeclRefExpr 0x299ca2294b0 <col:12> 'SSL_TEST_CTX *' lvalue Var 0x299ca22d6c8 'ctx' 'SSL_TEST_CTX *'
