TranslationUnitDecl 0x251f9d51e18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x251f9d526b0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x251f9d523b0 '__int128'
|-TypedefDecl 0x251f9d52720 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x251f9d523d0 'unsigned __int128'
|-TypedefDecl 0x251f9d52a58 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x251f9d52810 'struct __NSConstantString_tag'
|   `-Record 0x251f9d52778 '__NSConstantString_tag'
|-TypedefDecl 0x251f9d52ac8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x251f9d51ff0 'unsigned long long'
|-TypedefDecl 0x251f9d52b60 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x251f9d52b20 'char *'
|   `-BuiltinType 0x251f9d51eb0 'char'
|-TypedefDecl 0x251f9d52bd0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x251f9d52b20 'char *'
|   `-BuiltinType 0x251f9d51eb0 'char'
|-TypedefDecl 0x251f9d52c90 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x251f9d51ff0 'unsigned long long'
|-TypedefDecl 0x251f9d52d00 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x251f9d52b20 'char *'
|   `-BuiltinType 0x251f9d51eb0 'char'
|-FunctionDecl 0x251fb733db0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x251fb733e50 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x251fb733ec0 <col:21> Implicit
|-FunctionDecl 0x251fb733f18 prev 0x251fb733db0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x251fb733c40 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x251fb734008 <col:21> Inherited Implicit
|-TypedefDecl 0x251fb734048 prev 0x251f9d52ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x251f9d51ff0 'unsigned long long'
|-TypedefDecl 0x251fb7340f0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x251fb7340c0 'size_t' sugar
|   |-Typedef 0x251fb734048 'size_t'
|   `-BuiltinType 0x251f9d51ff0 'unsigned long long'
|-TypedefDecl 0x251fb734160 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x251f9d51f50 'long long'
|-TypedefDecl 0x251fb7341d0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x251f9d51f50 'long long'
|-TypedefDecl 0x251fb734240 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x251f9d51f90 'unsigned short'
|-TypedefDecl 0x251fb7342b0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x251f9d51f90 'unsigned short'
|-TypedefDecl 0x251fb734320 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x251f9d51f90 'unsigned short'
|-TypedefDecl 0x251fb734390 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x251f9d51f10 'int'
|-TypedefDecl 0x251fb734400 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x251f9d51f30 'long'
|-TypedefDecl 0x251fb734470 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x251f9d51f50 'long long'
|-TypedefDecl 0x251fb734500 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x251fb7344d0 '__time64_t' sugar
|   |-Typedef 0x251fb734470 '__time64_t'
|   `-BuiltinType 0x251f9d51f50 'long long'
|-FunctionDecl 0x251fb734678 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x251fb734898 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x251fb76ed50 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x251fb7349d8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x251fb734a50 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x251fb734ac8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x251fb734b48 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x251fb76eaf0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x251fb76ee30 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x251fb76eef0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x251fb76f060 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x251fb76f010 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x251fb76efb0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x251fb76eed0 'struct threadlocaleinfostruct'
|       `-Record 0x251fb77abb0 'threadlocaleinfostruct'
|-TypedefDecl 0x251fb76f170 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x251fb76f120 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x251fb76f0c0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x251fb76ef90 'struct threadmbcinfostruct'
|       `-Record 0x251fb76eef0 'threadmbcinfostruct'
|-RecordDecl 0x251fb76f1c8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x251fb76f280 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x251fb76f340 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x251fb76f3d0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x251fb76f460 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x251fb76f518 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x251fb76f4c0 'struct localeinfo_struct' sugar
|   `-RecordType 0x251fb76f320 'struct localeinfo_struct'
|     `-Record 0x251fb76f280 'localeinfo_struct'
|-TypedefDecl 0x251fb76f5f0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x251fb76f5a0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x251fb76f4c0 'struct localeinfo_struct' sugar
|     `-RecordType 0x251fb76f320 'struct localeinfo_struct'
|       `-Record 0x251fb76f280 'localeinfo_struct'
|-RecordDecl 0x251fb76f668 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x251fb76f720 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x251fb76f798 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x251fb76f858 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x251fb76f8f0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x251fb76f960 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x251fb76fa18 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x251fb76f9c0 'struct localerefcount' sugar
|   `-RecordType 0x251fb76f700 'struct localerefcount'
|     `-Record 0x251fb76f668 'localerefcount'
|-RecordDecl 0x251fb77abb0 prev 0x251fb76ee30 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x251fb77ac30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x251fb77aca8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x251fb77ad18 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x251fb77ad88 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x251fb77adf8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x251fb77afb8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x251fb77b028 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x251fb77b098 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x251fb77b108 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x251fb77b178 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x251fb77b1e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x251fb77b240 parent 0x251f9d51e18 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x251fb77b3d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x251fb77b440 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x251fb77b4b0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x251fb77b520 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x251fb77b5c0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x251fb77b630 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x251fb77b740 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x251fb77b878 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x251fb77b928 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x251fb77b8d0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x251fb76eed0 'struct threadlocaleinfostruct'
|     `-Record 0x251fb77abb0 'threadlocaleinfostruct'
|-FunctionDecl 0x251fb782e40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x251fb77b9b0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x251fb77ba60 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x251fb77bae0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x251fb782c30 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb783208 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x251fb7832a8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x251fb783310 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x251fb783378 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb7833f8 prev 0x251fb783208 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x251fb782f30 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x251fb782fb0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x251fb783028 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb7837b8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x251fb7834e0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x251fb783560 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x251fb7835d8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb77bc10 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb7838a0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x251fb783920 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x251fb783998 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb783a30 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb77bf18 <line:51:32> col:32 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x251fb77bfb8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x251fb77c020 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x251fb77c088 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb77c108 prev 0x251fb77bf18 <col:16, col:144> col:32 used memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x251fb77bd00 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x251fb77bd80 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x251fb77bdf8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb77c4c8 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x251fb77c568 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x251fb77c5d0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x251fb77c638 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb77c6b8 prev 0x251fb77c4c8 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x251fb77c1f0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x251fb77c270 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x251fb77c2e8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb77ebf0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x251fb77c7c8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x251fb77c860 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x251fb77c8e0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x251fb77c958 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x251fb77efb8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x251fb77f058 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x251fb77f0c0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x251fb77f128 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb77f1a8 prev 0x251fb77efb8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x251fb77ece0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x251fb77ed60 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x251fb77edd8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb77f628 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x251fb77f6c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x251fb77f730 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x251fb77f798 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x251fb77f800 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb77f888 prev 0x251fb77f628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x251fb77f370 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x251fb77f3f0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x251fb77f470 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x251fb77f4e8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb77f948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x251fb77fd98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x251fb77fb10 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x251fb77fc00 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x251fb77fc78 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb77fe50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x251fb780240 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x251fb77ff78 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x251fb77fff0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb780070 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x251fb780610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x251fb780420 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x251fb7804a0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x251fb7806c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb780ad0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x251fb780808 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x251fb780880 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x251fb780900 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x251fb780ed0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x251fb780f70 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x251fb780fd8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x251fb781050 prev 0x251fb780ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x251fb780ce8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x251fb780d68 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x251fb781100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb781458 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x251fb781248 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x251fb7812c0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x251fb781340 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x251fb781780 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x251fb781820 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x251fb781888 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x251fb781900 prev 0x251fb781780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x251fb781600 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x251fb781680 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x251fb7819b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb77cca0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x251fb77cd40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb77cda8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x251fb77ce20 prev 0x251fb77cca0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x251fb781af8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x251fb781b78 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x251fb77d070 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x251fb77d110 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x251fb77d180 prev 0x251fb77d070 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x251fb77cf00 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x251fb77d478 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x251fb77d258 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x251fb77d2d0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb77d6c8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x251fb77d558 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x251fb77d5d0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x251fb77d9f8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x251fb77d9e8 <line:132:5, col:51>
|     `-ConditionalOperator 0x251fb77d9b8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x251fb77d828 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x251fb77d808 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x251fb77d7d8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x251fb77d790 <col:13> 'const char *' lvalue ParmVar 0x251fb77d558 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x251fb77d7f0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x251fb77d7b0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x251fb77d9a0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x251fb77d848 <col:24> 'int' 0
|       `-CallExpr 0x251fb77d940 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x251fb77d928 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x251fb77d870 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x251fb77d478 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x251fb77d970 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x251fb77d890 <col:36> 'const char *' lvalue ParmVar 0x251fb77d558 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x251fb77d988 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x251fb77d8b0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x251fb77d5d0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb784d88 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x251fb77da28 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x251fb77daa0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x251fb77db20 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x251fb784c50 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x251fb785090 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x251fb785130 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x251fb785198 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x251fb785200 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb785280 prev 0x251fb785090 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x251fb784e78 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x251fb784ef8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x251fb784f70 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb7854b8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x251fb785368 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x251fb785780 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x251fb785820 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb785888 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x251fb785900 prev 0x251fb785780 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x251fb785590 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x251fb785610 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x251fb785b60 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x251fb7859e0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x251fb785a60 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x251fb77dd60 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x251fb77dbe0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x251fb77dc60 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x251fb77e118 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x251fb77de40 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x251fb77dec0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x251fb77df38 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb77e380 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x251fb77e200 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x251fb77e280 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x251fb77e678 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x251fb77e460 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x251fb77e4e0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x251fb77e558 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb77e8e0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x251fb77e760 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x251fb77e7e0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x251fb787c80 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x251fb77e9c0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x251fb77ea40 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x251fb77eab8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb788038 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x251fb787d68 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x251fb787de8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x251fb787e60 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb7884a0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb788120 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x251fb7881a0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x251fb788218 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb788290 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb7887a8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x251fb788590 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x251fb788610 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x251fb788688 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb788b40 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb788890 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x251fb788910 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x251fb788988 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb788a00 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb78aed8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x251fb78af78 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb78afe0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x251fb78b058 prev 0x251fb78aed8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x251fb78acb0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x251fb78ad30 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x251fb78b310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x251fb78b230 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x251fb78b3b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb78b790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x251fb78b500 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x251fb78b578 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb78b5f8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x251fb78baa8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x251fb78bb48 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x251fb78bbb8 prev 0x251fb78baa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x251fb78b970 <col:90> col:93 'int'
| `-DeprecatedAttr 0x251fb78bc60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb788fa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x251fb788d90 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x251fb788e08 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb788e88 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x251fb7892a8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x251fb789088 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x251fb789100 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb789598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x251fb789448 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x251fb789640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb789a50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb789788 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x251fb789800 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb789878 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb785e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x251fb789bf8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x251fb785c60 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x251fb785ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb786378 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x251fb786008 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x251fb786080 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x251fb786100 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x251fb786178 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x251fb7867f8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x251fb786898 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x251fb786900 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb786968 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb7869e8 prev 0x251fb7867f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x251fb786528 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x251fb7865a8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x251fb786620 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb786aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb789e50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x251fb789ef0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x251fb789f58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb789fc0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb78a040 prev 0x251fb789e50 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x251fb786be8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x251fb789cb8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x251fb789d30 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb78a340 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x251fb78a128 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x251fb78a1a8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x251fb78a220 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb78a6d8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb78a428 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x251fb78a4a8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x251fb78a520 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb78a598 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb78aa70 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x251fb78a7c8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x251fb78a840 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x251fb78a8c0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x251fb78a938 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x251fb786e08 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x251fb786ea8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x251fb786f10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb786f78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb786ff8 prev 0x251fb786e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x251fb78ac20 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x251fb786c70 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x251fb786ce8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb7870b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb787568 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x251fb7871f8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x251fb787270 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x251fb7872f0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x251fb787368 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb7879e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x251fb787718 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x251fb787798 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x251fb787810 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb787aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb78be30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x251fb78bed0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb78bf38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x251fb78bfb0 prev 0x251fb78be30 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x251fb787be8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x251fb78bcc0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x251fb78c210 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x251fb78c2b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb78c318 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x251fb78c390 prev 0x251fb78c210 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x251fb78c090 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x251fb78c110 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x251fb78c550 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x251fb78c470 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x251fb78c7a0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x251fb78c840 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb78c8a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x251fb78c920 prev 0x251fb78c7a0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x251fb78c628 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x251fb78c6a8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x251fb78cb80 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x251fb78cc20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb800fb0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x251fb801028 prev 0x251fb78cb80 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x251fb78ca00 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x251fb78ca80 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x251fb801348 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x251fb8013e8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x251fb801450 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x251fb8014c8 prev 0x251fb801348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x251fb8011c8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x251fb801248 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x251fb801578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb801958 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x251fb8016c0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x251fb801740 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x251fb8017c0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x251fb801bb0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x251fb801a40 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x251fb801ab8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb801e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x251fb801d50 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x251fb801ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb8022c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb8020c0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x251fb802138 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb8021b0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb8025e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x251fb802470 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x251fb8024e8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x251fb802698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb802ab0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x251fb802b50 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x251fb802bb8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x251fb802c20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb802ca0 prev 0x251fb802ab0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x251fb8027e0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x251fb802860 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x251fb8028d8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb803108 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb802d88 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x251fb802e08 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x251fb802e80 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb802ef8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb8033b0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x251fb803450 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x251fb8034c0 prev 0x251fb8033b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x251fb8032d0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x251fb803568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x251fb8038b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x251fb803730 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x251fb8037b0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x251fb803960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x251fb803ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x251fb803b28 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x251fb803ba8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x251fb803d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x251fb7fffd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x251fb803f20 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x251fb800080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x251fb800498 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x251fb800280 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x251fb800300 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x251fb800378 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb800550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x251fb800930 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x251fb800718 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x251fb800798 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x251fb800810 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb8009e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x251fb800c90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x251fb800bb0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x251fb800d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x251fb8050f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x251fb800f00 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x251fb804ff0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x251fb8051a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x251fb805448 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x251fb805368 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x251fb8054f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x251fb805780 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x251fb805610 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x251fb805b10 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x251fb805850 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x251fb8058c8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x251fb805940 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x251fb805ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb805cb0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x251fb805d28 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x251fb805f78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb8042f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x251fb804398 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x251fb804400 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x251fb804478 prev 0x251fb8042f8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x251fb8040d8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x251fb804150 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x251fb804770 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x251fb804810 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x251fb804878 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x251fb8048f0 prev 0x251fb804770 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x251fb804550 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x251fb8045c8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x251fb804bd0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x251fb8049c8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x251fb804a40 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x251fb804ab8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x251fb804ee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb804d70 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x251fb804de8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x251fb804f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb80d388 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb80d168 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x251fb80d1e0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x251fb80d5d0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x251fb80d670 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x251fb80d6e0 prev 0x251fb80d5d0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x251fb80d460 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x251fb80d9c8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x251fb80d7b0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x251fb80d828 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb80dc10 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x251fb80daa0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x251fb80db18 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x251fb80dfa8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x251fb80df98 <line:307:5, col:56>
|     `-ConditionalOperator 0x251fb80df68 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x251fb80ddd0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x251fb80ddb0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x251fb80dd80 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x251fb80dcd8 <col:13> 'const wchar_t *' lvalue ParmVar 0x251fb80daa0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x251fb80dd98 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x251fb80dd60 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x251fb80dd38 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x251fb80dcf8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x251fb80df50 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x251fb80ddf0 <col:29> 'int' 0
|       `-CallExpr 0x251fb80def0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x251fb80ded8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x251fb80de18 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x251fb80d9c8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x251fb80df20 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x251fb80de38 <col:41> 'const wchar_t *' lvalue ParmVar 0x251fb80daa0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x251fb80df38 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x251fb80de58 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x251fb80db18 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb807308 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x251fb80dfd0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x251fb807010 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x251fb807088 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x251fb807100 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x251fb807770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x251fb8074b0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x251fb807528 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x251fb8075a0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb807828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb807c38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x251fb807cd8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x251fb807d40 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x251fb807da8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x251fb807e28 prev 0x251fb807c38 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x251fb807968 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb8079e0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x251fb807a58 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb8061b0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x251fb807f08 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x251fb807f80 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x251fb806000 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x251fb806078 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x251fb806560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x251fb806358 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x251fb8063d0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x251fb806448 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb806618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb806978 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb806758 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x251fb8067d0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x251fb806bc0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x251fb806a50 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x251fb806ac8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x251fb806e08 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb806c98 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x251fb806d10 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x251fb80f0f0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb806ee0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x251fb806f58 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x251fb80f3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb80f288 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x251fb80f300 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x251fb80f4a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb80f910 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x251fb80f5e8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x251fb80f660 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x251fb80f740 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x251fb80fc30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x251fb80fab8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x251fb80fcd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb8090a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x251fb80fe18 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x251fb80fe90 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb80ff10 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x251fb809350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x251fb809278 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x251fb8093f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb8097c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x251fb809538 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x251fb8095b0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb809628 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x251fb809a18 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb8098a0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x251fb809918 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x251fb809db8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x251fb809af0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb809b68 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x251fb809be0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb8080a8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x251fb809e98 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb809f10 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x251fb809f88 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb808500 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb808188 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb808200 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x251fb808278 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb8082f0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb808958 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x251fb8085e8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x251fb808660 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x251fb8086d8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x251fb808750 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb808dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x251fb808b00 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x251fb808b78 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x251fb808bf0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb808e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb8101b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x251fb808fb8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x251fb810540 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x251fb810280 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x251fb8102f8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb810370 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x251fb8108f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x251fb8106e0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x251fb810758 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x251fb8109a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb810d08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x251fb810ae8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x251fb810b60 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb810f78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x251fb810ea0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x251fb811020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb80e440 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb80e178 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x251fb80e1f0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb80e268 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb80e7f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x251fb80e5e0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x251fb80e658 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x251fb80e8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb80eb58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x251fb80e9e8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x251fb80ea60 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb80edc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x251fb80ecf0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x251fb80ee70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb80a1d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb80efb0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x251fb80a040 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb80a0b8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb80a4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x251fb80a370 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x251fb80a3e8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x251fb80a590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x251fb80a990 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x251fb80a6d0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x251fb80a748 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x251fb80a7c0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb80add8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb80aa70 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x251fb80aae8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x251fb80ab60 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb80abd8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb8130d0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb80aec0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x251fb80af38 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x251fb8133b8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x251fb8131a8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb813220 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x251fb813298 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb813610 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb813498 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x251fb813510 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x251fb8138f8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x251fb8136e8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb813760 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x251fb8137d8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb813be8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x251fb8139d8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb813a50 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x251fb813ac8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb813f70 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb813cc8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb813d40 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x251fb813db8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb813e30 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb8182b8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x251fb814058 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb818120 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x251fb818198 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x251fb818640 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x251fb818398 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb818410 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x251fb818488 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x251fb818500 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x251fb8188a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x251fb8187c8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x251fb818948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x251fb818c80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb818b08 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb818b80 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x251fb818d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x251fb8120c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x251fb818ef0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb818f68 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x251fb818fe0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb812178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x251fb812540 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x251fb812338 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x251fb8123b0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x251fb812428 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x251fb8125f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x251fb812890 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x251fb8127b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x251fb812938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x251fb812c68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x251fb812af8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x251fb812b70 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x251fb812d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x251fb812fb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x251fb812ed8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x251fb813058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x251fb811300 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x251fb811228 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x251fb8113a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x251fb8116e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x251fb811568 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x251fb8115e0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x251fb811790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x251fb811db0 <.//openssl//file_jk/after\test/ssltestlib.h:15:1, line:18:42> line:15:5 invalid create_ssl_ctx_pair 'int (const int *, const int *, int, int, int **, int **, char *, char *)'
| |-ParmVarDecl 0x251fb8118b8 <col:25, col:43> col:43 invalid sm 'const int *'
| |-ParmVarDecl 0x251fb811938 <col:47, col:65> col:65 invalid cm 'const int *'
| |-ParmVarDecl 0x251fb8119b8 <line:16:25, col:29> col:29 min_proto_version 'int'
| |-ParmVarDecl 0x251fb811a38 <col:48, col:52> col:52 max_proto_version 'int'
| |-ParmVarDecl 0x251fb811ae8 <line:17:25, col:35> col:35 invalid sctx 'int **'
| |-ParmVarDecl 0x251fb811b70 <col:41, col:51> col:51 invalid cctx 'int **'
| |-ParmVarDecl 0x251fb811bf0 <col:57, col:63> col:63 certfile 'char *'
| `-ParmVarDecl 0x251fb811c70 <line:18:25, col:31> col:31 privkeyfile 'char *'
|-FunctionDecl 0x251fb8192e0 <line:19:1, line:20:70> line:19:5 invalid create_ssl_objects 'int (int *, int *, int **, int **, int *, int *)'
| |-ParmVarDecl 0x251fb811ea8 <col:24, col:33> col:33 invalid serverctx 'int *'
| |-ParmVarDecl 0x251fb811f28 <col:44, col:53> col:53 invalid clientctx 'int *'
| |-ParmVarDecl 0x251fb811fb0 <col:64, col:70> col:70 invalid sssl 'int **'
| |-ParmVarDecl 0x251fb812038 <line:20:24, col:30> col:30 invalid cssl 'int **'
| |-ParmVarDecl 0x251fb819148 <col:36, col:41> col:41 invalid s_to_c_fbio 'int *'
| `-ParmVarDecl 0x251fb8191c8 <col:54, col:59> col:59 invalid c_to_s_fbio 'int *'
|-FunctionDecl 0x251fb819520 <line:21:1, col:57> col:5 invalid create_ssl_connection 'int (int *, int *)'
| |-ParmVarDecl 0x251fb8193c8 <col:27, col:32> col:32 invalid serverssl 'int *'
| `-ParmVarDecl 0x251fb819448 <col:43, col:48> col:48 invalid clientssl 'int *'
|-FunctionDecl 0x251fb8196a0 <line:24:1, col:45> col:19 invalid bio_f_tls_dump_filter 'const int *(void)'
|-FunctionDecl 0x251fb8197d8 <line:25:1, col:37> col:6 bio_f_tls_dump_filter_free 'void (void)'
|-FunctionDecl 0x251fb819930 <line:27:1, col:44> col:19 invalid bio_s_mempacket_test 'const int *(void)'
|-FunctionDecl 0x251fb819a68 <line:28:1, col:36> col:6 used bio_s_mempacket_test_free 'void (void)'
|-FunctionDecl 0x251fb819e40 <line:34:1, line:35:35> line:34:5 invalid mempacket_test_inject 'int (int *, const char *, int, int, int)'
| |-ParmVarDecl 0x251fb819b38 <col:27, col:32> col:32 invalid bio 'int *'
| |-ParmVarDecl 0x251fb819bb8 <col:37, col:49> col:49 in 'const char *'
| |-ParmVarDecl 0x251fb819c38 <col:53, col:57> col:57 inl 'int'
| |-ParmVarDecl 0x251fb819cb8 <col:62, col:66> col:66 pktnum 'int'
| `-ParmVarDecl 0x251fb819d38 <line:35:27, col:31> col:31 type 'int'
|-RecordDecl 0x251fb819f08 <line:37:9, col:16> col:16 struct mempacket_st
|-TypedefDecl 0x251fb81a018 <col:1, col:29> col:29 referenced MEMPACKET 'struct mempacket_st':'struct mempacket_st'
| `-ElaboratedType 0x251fb819fc0 'struct mempacket_st' sugar
|   `-RecordType 0x251fb819fa0 'struct mempacket_st'
|     `-Record 0x251fb819f08 'mempacket_st'
|-FunctionDecl 0x251fb81b1e0 <line:39:1, col:26> col:1 DEFINE_STACK_OF 'int (MEMPACKET)'
| `-ParmVarDecl 0x251fb81a0c0 <col:17> col:26 'MEMPACKET':'struct mempacket_st'
|-FunctionDecl 0x251fb81b558 <.//openssl//file_jk/after\test/testutil.h:85:1, col:60> col:6 used add_test 'void (const char *, int (*)())'
| |-ParmVarDecl 0x251fb81b2b8 <col:15, col:27> col:27 test_case_name 'const char *'
| `-ParmVarDecl 0x251fb81b410 <col:43, col:59> col:49 test_fn 'int (*)()'
|-FunctionDecl 0x251fb81ba28 <line:86:1, col:80> col:6 used add_all_tests 'void (const char *, int (*)(int), int)'
| |-ParmVarDecl 0x251fb81b638 <col:20, col:32> col:32 test_case_name 'const char *'
| |-ParmVarDecl 0x251fb81b838 <col:48, col:70> col:54 test_fn 'int (*)(int)'
| `-ParmVarDecl 0x251fb81b8b8 <col:73, col:77> col:77 num 'int'
|-FunctionDecl 0x251fb81bbf0 <line:87:1, col:41> col:5 used run_tests 'int (const char *)'
| `-ParmVarDecl 0x251fb81bb10 <col:15, col:27> col:27 test_prog_name 'const char *'
|-FunctionDecl 0x251fb81bf00 <line:97:1, col:67> col:5 strings_equal 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x251fb81bcc8 <col:19, col:31> col:31 desc 'const char *'
| |-ParmVarDecl 0x251fb81bd48 <col:37, col:49> col:49 s1 'const char *'
| `-ParmVarDecl 0x251fb81bdc8 <col:53, col:65> col:65 s2 'const char *'
|-VarDecl 0x251fb81bfe8 <.//openssl//file_jk/after\test\sslapitest.c:22:1, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\test\sslapitest.c:22:14 used cert 'char *' static cinit
| `-ImplicitCastExpr 0x251fb81c0f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x251fb81c0b8 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x251fb81c090 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x251fb81c050 <col:26> 'int' 0
|-VarDecl 0x251fb81a140 <.//openssl//file_jk/after\test\sslapitest.c:23:1, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\test\sslapitest.c:23:14 used privkey 'char *' static cinit
| `-ImplicitCastExpr 0x251fb81a248 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x251fb81a210 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x251fb81a1e8 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x251fb81a1a8 <col:26> 'int' 0
|-VarDecl 0x251fb81a2e0 <.//openssl//file_jk/after\test\sslapitest.c:26:1, col:41> col:28 used orespder 'const unsigned char [20]' static cinit
| `-StringLiteral 0x251fb81a388 <col:41> 'const unsigned char [20]' "Dummy OCSP Response"
|-VarDecl 0x251fb81a460 <line:27:1, col:33> col:12 used ocsp_server_called 'int' static cinit
| `-IntegerLiteral 0x251fb81a4c8 <col:33> 'int' 0
|-VarDecl 0x251fb81a520 <line:28:1, col:33> col:12 used ocsp_client_called 'int' static cinit
| `-IntegerLiteral 0x251fb81a588 <col:33> 'int' 0
|-VarDecl 0x251fb81a5e0 <line:30:1, col:24> col:12 used cdummyarg 'int' static cinit
| `-IntegerLiteral 0x251fb81a648 <col:24> 'int' 1
|-VarDecl 0x251fb81a6a0 <line:31:1, col:14> col:14 invalid ocspcert 'int *' static
|-FunctionDecl 0x251fb81aab0 <line:36:1, line:125:1> line:36:12 invalid execute_test_large_message 'int (const int *, const int *, int, int, int)' static
| |-ParmVarDecl 0x251fb81a7a8 <col:39, col:57> col:57 invalid smeth 'const int *'
| |-ParmVarDecl 0x251fb81a828 <line:37:39, col:57> col:57 invalid cmeth 'const int *'
| |-ParmVarDecl 0x251fb81a8a8 <line:38:39, col:43> col:43 used min_version 'int'
| |-ParmVarDecl 0x251fb81a928 <col:56, col:60> col:60 used max_version 'int'
| |-ParmVarDecl 0x251fb81a9a8 <line:39:39, col:43> col:43 used read_ahead 'int'
| `-CompoundStmt 0x251fb81d750 <line:40:1, line:125:1>
|   |-DeclStmt 0x251fb81ae58 <line:43:5, col:23>
|   | `-VarDecl 0x251fb81adc8 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x251fb81ae30 <col:22> 'int' 0
|   |-DeclStmt 0x251fb81aef0 <line:44:5, col:10>
|   | `-VarDecl 0x251fb81ae88 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x251fb81e260 <line:47:5, col:16>
|   | `-VarDecl 0x251fb81e1f8 <col:5, col:9> col:9 used certlen 'int'
|   |-IfStmt 0x251fb81e6b8 <line:49:5, line:52:5>
|   | |-OpaqueValueExpr 0x251fb81e6a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb81e680 <line:49:26, line:52:5>
|   |   |-CallExpr 0x251fb81e5c0 <line:50:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x251fb81e5a8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb81e4b0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb81e600 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb81e5e8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb81e528 <col:16> 'char [33]' lvalue "Can't load the certificate file\n"
|   |   `-GotoStmt 0x251fb81e668 <line:51:9, col:14> 'end' 0x251fb81e618
|   |-IfStmt 0x251fb81ed10 <line:56:5, line:59:5>
|   | |-OpaqueValueExpr 0x251fb81ecf8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb81ecd8 <line:56:28, line:59:5>
|   |   |-CallExpr 0x251fb81ec68 <line:57:9, col:56> 'int'
|   |   | |-ImplicitCastExpr 0x251fb81ec50 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb81eb98 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb81eca8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb81ec90 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb81ebf8 <col:16> 'char [38]' lvalue "Unable to load certificate for chain\n"
|   |   `-GotoStmt 0x251fb81ecc0 <line:58:9, col:14> 'end' 0x251fb81e618
|   |-IfStmt 0x251fb81ef48 <line:61:5, line:65:5>
|   | |-OpaqueValueExpr 0x251fb81ef30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb81ef10 <line:62:53, line:65:5>
|   |   |-CallExpr 0x251fb81eea0 <line:63:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x251fb81ee88 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb81edd8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb81eee0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb81eec8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb81ee38 <col:16> 'char [31]' lvalue "Unable to create SSL_CTX pair\n"
|   |   `-GotoStmt 0x251fb81eef8 <line:64:9, col:14> 'end' 0x251fb81e618
|   |-IfStmt 0x251fb81f0f8 <line:67:5, line:73:5>
|   | |-ImplicitCastExpr 0x251fb81ef98 <line:67:8> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x251fb81ef60 <col:8> 'int' lvalue ParmVar 0x251fb81a9a8 'read_ahead' 'int'
|   | `-CompoundStmt 0x251fb81f0e8 <col:20, line:73:5>
|   |-ForStmt 0x251fb81cca8 <line:85:5, line:95:5>
|   | |-BinaryOperator 0x251fb81c530 <line:85:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x251fb81c4d0 <col:10> 'int' lvalue Var 0x251fb81ae88 'i' 'int'
|   | | `-IntegerLiteral 0x251fb81c508 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x251fb81c5b0 <col:17, line:34:25> 'int' '<'
|   | | |-ImplicitCastExpr 0x251fb81c598 <line:85:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x251fb81c550 <col:17> 'int' lvalue Var 0x251fb81ae88 'i' 'int'
|   | | `-IntegerLiteral 0x251fb81c570 <line:34:25> 'int' 40
|   | |-UnaryOperator 0x251fb81c5f0 <line:85:38, col:39> 'int' postfix '++'
|   | | `-DeclRefExpr 0x251fb81c5d0 <col:38> 'int' lvalue Var 0x251fb81ae88 'i' 'int'
|   | `-CompoundStmt 0x251fb81cc88 <col:43, line:95:5>
|   |   |-IfStmt 0x251fb81c880 <line:86:9, line:89:9>
|   |   | |-OpaqueValueExpr 0x251fb81c868 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x251fb81c848 <line:86:38, line:89:9>
|   |   |   |-CallExpr 0x251fb81c7d8 <line:87:13, col:45> 'int'
|   |   |   | |-ImplicitCastExpr 0x251fb81c7c0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x251fb81c718 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x251fb81c818 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x251fb81c800 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x251fb81c778 <col:20> 'char [23]' lvalue "Unable to up ref cert\n"
|   |   |   `-GotoStmt 0x251fb81c830 <line:88:13, col:18> 'end' 0x251fb81e618
|   |   `-IfStmt 0x251fb81cc70 <line:90:9, line:94:9>
|   |     |-OpaqueValueExpr 0x251fb81cc58 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x251fb81cc38 <line:90:61, line:94:9>
|   |       |-CallExpr 0x251fb81ca98 <line:91:13, col:60> 'int'
|   |       | |-ImplicitCastExpr 0x251fb81ca80 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x251fb81c9a8 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |       | |-ImplicitCastExpr 0x251fb81cae0 <col:20> 'const char *' <NoOp>
|   |       | | `-ImplicitCastExpr 0x251fb81cac8 <col:20> 'char *' <ArrayToPointerDecay>
|   |       | |   `-StringLiteral 0x251fb81ca08 <col:20> 'char [35]' lvalue "Unable to add extra chain cert %d\n"
|   |       | `-ImplicitCastExpr 0x251fb81caf8 <col:59> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x251fb81ca48 <col:59> 'int' lvalue Var 0x251fb81ae88 'i' 'int'
|   |       `-GotoStmt 0x251fb81cc20 <line:93:13, col:18> 'end' 0x251fb81e618
|   |-IfStmt 0x251fb81cf58 <line:97:5, line:100:5>
|   | |-OpaqueValueExpr 0x251fb81cf40 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb81cf20 <line:97:78, line:100:5>
|   |   |-CallExpr 0x251fb81ceb0 <line:98:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x251fb81ce98 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb81cdf0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb81cef0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb81ced8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb81ce48 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x251fb81cf08 <line:99:9, col:14> 'end' 0x251fb81e618
|   |-IfStmt 0x251fb81d0a0 <line:102:5, line:105:5>
|   | |-OpaqueValueExpr 0x251fb81d088 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb81d068 <line:102:55, line:105:5>
|   |   |-CallExpr 0x251fb81cff8 <line:103:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x251fb81cfe0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb81cf70 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb81d038 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb81d020 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb81cf90 <col:16> 'char [33]' lvalue "Unable to create SSL connection\n"
|   |   `-GotoStmt 0x251fb81d050 <line:104:9, col:14> 'end' 0x251fb81e618
|   |-IfStmt 0x251fb81d3d0 <line:111:5, line:114:5>
|   | |-OpaqueValueExpr 0x251fb81d3b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb81d398 <line:111:32, line:114:5>
|   |   |-CallExpr 0x251fb81d328 <line:112:9, col:55> 'int'
|   |   | |-ImplicitCastExpr 0x251fb81d310 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb81d258 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb81d368 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb81d350 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb81d2b8 <col:16> 'char [37]' lvalue "Unexpected failure from SSL_clear()\n"
|   |   `-GotoStmt 0x251fb81d380 <line:113:9, col:14> 'end' 0x251fb81e618
|   |-BinaryOperator 0x251fb81d448 <line:116:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x251fb81d3e8 <col:5> 'int' lvalue Var 0x251fb81adc8 'testresult' 'int'
|   | `-IntegerLiteral 0x251fb81d420 <col:18> 'int' 1
|   |-LabelStmt 0x251fb81d490 <line:117:2, col:5> 'end'
|   | `-NullStmt 0x251fb81d488 <col:5>
|   `-ReturnStmt 0x251fb81d740 <line:124:5, col:12>
|     `-ImplicitCastExpr 0x251fb81d728 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb81d708 <col:12> 'int' lvalue Var 0x251fb81adc8 'testresult' 'int'
|-FunctionDecl 0x251fb81e338 <line:50:9> col:9 implicit used printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x251fb81e3d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x251fb81e448 <col:9> Implicit printf 1 2
|-FunctionDecl 0x251fb81d8a0 <line:127:1, line:132:1> line:127:12 used test_large_message_tls 'int (void)' static
| `-CompoundStmt 0x251fb81dc10 <line:128:1, line:132:1>
|-FunctionDecl 0x251fb81dcc0 <line:134:1, line:139:1> line:134:12 used test_large_message_tls_read_ahead 'int (void)' static
| `-CompoundStmt 0x251fb81de50 <line:135:1, line:139:1>
|-FunctionDecl 0x251fb81df00 <line:142:1, line:152:1> line:142:12 used test_large_message_dtls 'int (void)' static
| `-CompoundStmt 0x251fb7c6128 <line:143:1, line:152:1>
|-FunctionDecl 0x251fb7c62b0 <line:156:1, line:186:1> line:156:12 invalid ocsp_server_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x251fb7c6150 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x251fb7c61d0 <col:35, col:41> col:41 used arg 'void *'
| `-CompoundStmt 0x251fb7c34c8 <line:157:1, line:186:1>
|   |-DeclStmt 0x251fb7c6488 <line:158:5, col:27>
|   | `-VarDecl 0x251fb7c6390 <col:5, col:24> col:10 used argi 'int *' cinit
|   |   `-CStyleCastExpr 0x251fb7c6460 <col:17, col:24> 'int *' <BitCast>
|   |     `-ImplicitCastExpr 0x251fb7c6448 <col:24> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x251fb7c63f8 <col:24> 'void *' lvalue ParmVar 0x251fb7c61d0 'arg' 'void *'
|   |-DeclStmt 0x251fb7c65e8 <line:159:5, col:39>
|   | `-VarDecl 0x251fb7c64e0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\test\sslapitest.c:159:20 used orespdercopy 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x251fb7c65d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x251fb7c65b0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x251fb7c6588 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x251fb7c6548 <col:26> 'int' 0
|   |-IfStmt 0x251fb7c6f70 <.//openssl//file_jk/after\test\sslapitest.c:163:5, line:174:5> has_else
|   | |-BinaryOperator 0x251fb7c68c8 <line:163:9, col:18> 'int' '=='
|   | | |-ImplicitCastExpr 0x251fb7c68b0 <col:9, col:10> 'int' <LValueToRValue>
|   | | | `-UnaryOperator 0x251fb7c6870 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | |   `-ImplicitCastExpr 0x251fb7c6858 <col:10> 'int *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x251fb7c6820 <col:10> 'int *' lvalue Var 0x251fb7c6390 'argi' 'int *'
|   | | `-IntegerLiteral 0x251fb7c6888 <col:18> 'int' 2
|   | |-CompoundStmt 0x251fb7c6e88 <col:21, line:172:5>
|   | `-IfStmt 0x251fb7c6f58 <col:12, line:174:5>
|   |   |-BinaryOperator 0x251fb7c6f28 <line:172:16, col:25> 'int' '!='
|   |   | |-ImplicitCastExpr 0x251fb7c6f10 <col:16, col:17> 'int' <LValueToRValue>
|   |   | | `-UnaryOperator 0x251fb7c6ed0 <col:16, col:17> 'int' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x251fb7c6eb8 <col:17> 'int *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x251fb7c6e98 <col:17> 'int *' lvalue Var 0x251fb7c6390 'argi' 'int *'
|   |   | `-IntegerLiteral 0x251fb7c6ee8 <col:25> 'int' 1
|   |   `-CompoundStmt 0x251fb7c6f48 <col:28, line:174:5>
|   |-BinaryOperator 0x251fb7c31b8 <line:177:5, col:61> 'unsigned char *' '='
|   | |-DeclRefExpr 0x251fb7c6f98 <col:5> 'unsigned char *' lvalue Var 0x251fb7c64e0 'orespdercopy' 'unsigned char *'
|   | `-ImplicitCastExpr 0x251fb7c31a0 <col:20, col:61> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x251fb7c3158 <col:20, col:61> 'int'
|   |     |-ImplicitCastExpr 0x251fb7c3140 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x251fb7c30a0 <col:20> 'int ()' Function 0x251fb7c2fd8 'OPENSSL_memdup' 'int ()'
|   |     |-ImplicitCastExpr 0x251fb7c3188 <col:35> 'const unsigned char *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x251fb7c30c0 <col:35> 'const unsigned char [20]' lvalue Var 0x251fb81a2e0 'orespder' 'const unsigned char [20]'
|   |     `-UnaryExprOrTypeTraitExpr 0x251fb7c3120 <col:45, col:60> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x251fb7c3100 <col:51, col:60> 'const unsigned char [20]' lvalue
|   |         `-DeclRefExpr 0x251fb7c30e0 <col:52> 'const unsigned char [20]' lvalue Var 0x251fb81a2e0 'orespder' 'const unsigned char [20]' non_odr_use_unevaluated
|   `-BinaryOperator 0x251fb7c34a8 <line:183:5, col:26> 'int' '='
|     |-DeclRefExpr 0x251fb7c3460 <col:5> 'int' lvalue Var 0x251fb81a460 'ocsp_server_called' 'int'
|     `-IntegerLiteral 0x251fb7c3480 <col:26> 'int' 1
|-FunctionDecl 0x251fb7c3638 <line:188:1, line:205:1> line:188:12 invalid ocsp_client_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x251fb7c3518 <col:27, col:32> col:32 invalid s 'int *'
| |-ParmVarDecl 0x251fb7c3598 <col:35, col:41> col:41 used arg 'void *'
| `-CompoundStmt 0x251fb7c7070 <line:189:1, line:205:1>
|   |-DeclStmt 0x251fb7c3810 <line:190:5, col:27>
|   | `-VarDecl 0x251fb7c3718 <col:5, col:24> col:10 used argi 'int *' cinit
|   |   `-CStyleCastExpr 0x251fb7c37e8 <col:17, col:24> 'int *' <BitCast>
|   |     `-ImplicitCastExpr 0x251fb7c37d0 <col:24> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x251fb7c3780 <col:24> 'void *' lvalue ParmVar 0x251fb7c3598 'arg' 'void *'
|   |-DeclStmt 0x251fb7c38a8 <line:191:5, col:35>
|   | `-VarDecl 0x251fb7c3840 <col:5, col:26> col:26 used respderin 'const unsigned char *'
|   |-DeclStmt 0x251fb7c3938 <line:192:5, col:15>
|   | `-VarDecl 0x251fb7c38d0 <col:5, col:12> col:12 used len 'size_t':'unsigned long long'
|   |-IfStmt 0x251fb7c3b50 <line:194:5, line:195:16>
|   | |-BinaryOperator 0x251fb7c3af8 <line:194:9, col:32> 'int' '&&'
|   | | |-BinaryOperator 0x251fb7c39f8 <col:9, col:18> 'int' '!='
|   | | | |-ImplicitCastExpr 0x251fb7c39e0 <col:9, col:10> 'int' <LValueToRValue>
|   | | | | `-UnaryOperator 0x251fb7c39a0 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | | |   `-ImplicitCastExpr 0x251fb7c3988 <col:10> 'int *' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x251fb7c3950 <col:10> 'int *' lvalue Var 0x251fb7c3718 'argi' 'int *'
|   | | | `-IntegerLiteral 0x251fb7c39b8 <col:18> 'int' 1
|   | | `-BinaryOperator 0x251fb7c3ad8 <col:23, col:32> 'int' '!='
|   | |   |-ImplicitCastExpr 0x251fb7c3ac0 <col:23, col:24> 'int' <LValueToRValue>
|   | |   | `-UnaryOperator 0x251fb7c3a80 <col:23, col:24> 'int' lvalue prefix '*' cannot overflow
|   | |   |   `-ImplicitCastExpr 0x251fb7c3a68 <col:24> 'int *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x251fb7c3a48 <col:24> 'int *' lvalue Var 0x251fb7c3718 'argi' 'int *'
|   | |   `-IntegerLiteral 0x251fb7c3a98 <col:32> 'int' 2
|   | `-ReturnStmt 0x251fb7c3b40 <line:195:9, col:16>
|   |   `-IntegerLiteral 0x251fb7c3b18 <col:16> 'int' 0
|   |-IfStmt 0x251fb7c3f70 <line:199:5, line:200:16>
|   | |-BinaryOperator 0x251fb7c3f18 <line:199:9, col:45> 'int' '!='
|   | | |-CallExpr 0x251fb7c3e40 <col:9, col:40> 'int'
|   | | | |-ImplicitCastExpr 0x251fb7c3e28 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x251fb7c3d30 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x251fb77c108 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x251fb7c3e90 <col:16> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x251fb7c3e78 <col:16> 'const unsigned char *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x251fb7c3d50 <col:16> 'const unsigned char [20]' lvalue Var 0x251fb81a2e0 'orespder' 'const unsigned char [20]'
|   | | | |-ImplicitCastExpr 0x251fb7c3ec0 <col:26> 'const void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x251fb7c3ea8 <col:26> 'const unsigned char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x251fb7c3d70 <col:26> 'const unsigned char *' lvalue Var 0x251fb7c3840 'respderin' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x251fb7c3ed8 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x251fb7c3d90 <col:37> 'size_t':'unsigned long long' lvalue Var 0x251fb7c38d0 'len' 'size_t':'unsigned long long'
|   | | `-IntegerLiteral 0x251fb7c3ef0 <col:45> 'int' 0
|   | `-ReturnStmt 0x251fb7c3f60 <line:200:9, col:16>
|   |   `-IntegerLiteral 0x251fb7c3f38 <col:16> 'int' 0
|   |-BinaryOperator 0x251fb7c7018 <line:202:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x251fb7c3f88 <col:5> 'int' lvalue Var 0x251fb81a520 'ocsp_client_called' 'int'
|   | `-IntegerLiteral 0x251fb7c6ff0 <col:26> 'int' 1
|   `-ReturnStmt 0x251fb7c7060 <line:204:5, col:12>
|     `-IntegerLiteral 0x251fb7c7038 <col:12> 'int' 1
|-FunctionDecl 0x251fb7c7158 <line:207:1, line:389:1> line:207:12 used test_tlsext_status_type 'int (void)' static
| `-CompoundStmt 0x251fb7c48b0 <line:208:1, line:389:1>
|   |-DeclStmt 0x251fb7c74d8 <line:211:5, col:23>
|   | `-VarDecl 0x251fb7c7448 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x251fb7c74b0 <col:22> 'int' 0
|   |-IfStmt 0x251fb7c78e8 <line:216:5, line:221:5>
|   | |-OpaqueValueExpr 0x251fb7c78d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c78b0 <line:218:46, line:221:5>
|   |   |-CallExpr 0x251fb7c7820 <line:219:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c7808 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c7798 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c7860 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c7848 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c77b8 <col:16> 'char [31]' lvalue "Unable to create SSL_CTX pair\n"
|   |   `-ReturnStmt 0x251fb7c78a0 <line:220:9, col:16>
|   |     `-IntegerLiteral 0x251fb7c7878 <col:16> 'int' 0
|   |-IfStmt 0x251fb7c7c30 <line:223:5, line:227:5>
|   | |-OpaqueValueExpr 0x251fb7c7c18 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c7bf8 <line:223:53, line:227:5>
|   |   |-CallExpr 0x251fb7c7b38 <line:224:9, line:225:52> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c7b20 <line:224:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c7a50 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c7b78 <col:16, line:225:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c7b60 <line:224:16, line:225:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c7aa8 <line:224:16, line:225:16> 'char [63]' lvalue "Unexpected initial value for SSL_CTX_get_tlsext_status_type()\n"
|   |   `-GotoStmt 0x251fb7c7be0 <line:226:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7bffd0 <line:232:5, line:235:5>
|   | |-OpaqueValueExpr 0x251fb7bffb8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7bff98 <line:232:54, line:235:5>
|   |   |-CallExpr 0x251fb7c7f90 <line:233:9, col:77> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c7f78 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c7ea8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c7fd0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c7fb8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c7f08 <col:16> 'char [59]' lvalue "Unexpected initial value for SSL_get_tlsext_status_type()\n"
|   |   `-GotoStmt 0x251fb7bff80 <line:234:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c0280 <line:237:5, line:240:5>
|   | |-OpaqueValueExpr 0x251fb7c0268 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c0248 <line:237:73, line:240:5>
|   |   |-CallExpr 0x251fb7c01d8 <line:238:9, col:68> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c01c0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c00f8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c0218 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c0200 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c0158 <col:16> 'char [50]' lvalue "Unexpected fail for SSL_set_tlsext_status_type()\n"
|   |   `-GotoStmt 0x251fb7c0230 <line:239:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c0440 <line:242:5, line:245:5>
|   | |-OpaqueValueExpr 0x251fb7c0428 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c0408 <line:242:74, line:245:5>
|   |   |-CallExpr 0x251fb7c0398 <line:243:9, col:70> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c0380 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c02b8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c03d8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c03c0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c0318 <col:16> 'char [52]' lvalue "Unexpected result for SSL_get_tlsext_status_type()\n"
|   |   `-GotoStmt 0x251fb7c03f0 <line:244:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c0790 <line:250:5, line:253:5>
|   | |-OpaqueValueExpr 0x251fb7c0778 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c0758 <line:250:72, line:253:5>
|   |   |-CallExpr 0x251fb7c06e8 <line:251:9, col:72> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c06d0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c0610 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c0728 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c0710 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c0668 <col:16> 'char [54]' lvalue "Unexpected fail for SSL_CTX_set_tlsext_status_type()\n"
|   |   `-GotoStmt 0x251fb7c0740 <line:252:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c0950 <line:255:5, line:258:5>
|   | |-OpaqueValueExpr 0x251fb7c0938 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c0918 <line:255:73, line:258:5>
|   |   |-CallExpr 0x251fb7c08a8 <line:256:9, col:74> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c0890 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c07c8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c08e8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c08d0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c0828 <col:16> 'char [56]' lvalue "Unexpected result for SSL_CTX_get_tlsext_status_type()\n"
|   |   `-GotoStmt 0x251fb7c0900 <line:257:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c0b38 <line:262:5, line:265:5>
|   | |-OpaqueValueExpr 0x251fb7c0b20 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c0b00 <line:262:74, line:265:5>
|   |   |-CallExpr 0x251fb7c0a90 <line:263:9, col:79> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c0a78 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c09a8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c0ad0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c0ab8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c0a08 <col:16> 'char [61]' lvalue "Unexpected result for SSL_get_tlsext_status_type() (test 2)\n"
|   |   `-GotoStmt 0x251fb7c0ae8 <line:264:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c8190 <line:280:5, line:283:5>
|   | |-OpaqueValueExpr 0x251fb7c8178 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c8158 <line:280:78, line:283:5>
|   |   |-CallExpr 0x251fb7c80e8 <line:281:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c80d0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c8060 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c8128 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c8110 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c8080 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x251fb7c8140 <line:282:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c82d8 <line:285:5, line:288:5>
|   | |-OpaqueValueExpr 0x251fb7c82c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c82a0 <line:285:55, line:288:5>
|   |   |-CallExpr 0x251fb7c8230 <line:286:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c8218 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c81a8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c8270 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c8258 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c81c8 <col:16> 'char [33]' lvalue "Unable to create SSL connection\n"
|   |   `-GotoStmt 0x251fb7c8288 <line:287:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c8500 <line:290:5, line:293:5>
|   | |-BinaryOperator 0x251fb7c8390 <line:290:9, col:33> 'int' '||'
|   | | |-UnaryOperator 0x251fb7c8328 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x251fb7c8310 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x251fb7c82f0 <col:10> 'int' lvalue Var 0x251fb81a520 'ocsp_client_called' 'int'
|   | | `-UnaryOperator 0x251fb7c8378 <col:32, col:33> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x251fb7c8360 <col:33> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x251fb7c8340 <col:33> 'int' lvalue Var 0x251fb81a460 'ocsp_server_called' 'int'
|   | `-CompoundStmt 0x251fb7c84e0 <col:53, line:293:5>
|   |   |-CallExpr 0x251fb7c8470 <line:291:9, col:45> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c8458 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c83b0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c84b0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c8498 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c8408 <col:16> 'char [27]' lvalue "OCSP callbacks not called\n"
|   |   `-GotoStmt 0x251fb7c84c8 <line:292:9, col:14> 'end' 0x251fb7c7b90
|   |-BinaryOperator 0x251fb7c86b0 <line:301:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x251fb7c8668 <col:5> 'int' lvalue Var 0x251fb81a520 'ocsp_client_called' 'int'
|   | `-IntegerLiteral 0x251fb7c8688 <col:26> 'int' 0
|   |-BinaryOperator 0x251fb7c8718 <line:302:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x251fb7c86d0 <col:5> 'int' lvalue Var 0x251fb81a460 'ocsp_server_called' 'int'
|   | `-IntegerLiteral 0x251fb7c86f0 <col:26> 'int' 0
|   |-BinaryOperator 0x251fb7c8780 <line:303:5, col:17> 'int' '='
|   | |-DeclRefExpr 0x251fb7c8738 <col:5> 'int' lvalue Var 0x251fb81a5e0 'cdummyarg' 'int'
|   | `-IntegerLiteral 0x251fb7c8758 <col:17> 'int' 0
|   |-IfStmt 0x251fb7c89e0 <line:305:5, line:308:5>
|   | |-OpaqueValueExpr 0x251fb7c89c8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c89a8 <line:305:78, line:308:5>
|   |   |-CallExpr 0x251fb7c8938 <line:306:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c8920 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c88b0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c8978 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c8960 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c88d0 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x251fb7c8990 <line:307:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c8b78 <line:311:5, line:314:5>
|   | |-OpaqueValueExpr 0x251fb7c8b60 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c8b40 <line:311:54, line:314:5>
|   |   |-CallExpr 0x251fb7c8ad0 <line:312:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c8ab8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c89f8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c8b10 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c8af8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c8a58 <col:16> 'char [44]' lvalue "Unexpected success creating the connection\n"
|   |   `-GotoStmt 0x251fb7c8b28 <line:313:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c8d80 <line:316:5, line:319:5>
|   | |-BinaryOperator 0x251fb7c8c00 <line:316:9, col:31> 'int' '||'
|   | | |-ImplicitCastExpr 0x251fb7c8bd0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x251fb7c8b90 <col:9> 'int' lvalue Var 0x251fb81a520 'ocsp_client_called' 'int'
|   | | `-ImplicitCastExpr 0x251fb7c8be8 <col:31> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x251fb7c8bb0 <col:31> 'int' lvalue Var 0x251fb81a460 'ocsp_server_called' 'int'
|   | `-CompoundStmt 0x251fb7c8d60 <col:51, line:319:5>
|   |   |-CallExpr 0x251fb7c8cf0 <line:317:9, col:67> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c8cd8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c8c20 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c8d30 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c8d18 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c8c78 <col:16> 'char [49]' lvalue "OCSP callbacks successfully called unexpectedly\n"
|   |   `-GotoStmt 0x251fb7c8d48 <line:318:9, col:14> 'end' 0x251fb7c7b90
|   |-BinaryOperator 0x251fb7c8f30 <line:330:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x251fb7c8ee8 <col:5> 'int' lvalue Var 0x251fb81a520 'ocsp_client_called' 'int'
|   | `-IntegerLiteral 0x251fb7c8f08 <col:26> 'int' 0
|   |-BinaryOperator 0x251fb7c8f98 <line:331:5, col:26> 'int' '='
|   | |-DeclRefExpr 0x251fb7c8f50 <col:5> 'int' lvalue Var 0x251fb81a460 'ocsp_server_called' 'int'
|   | `-IntegerLiteral 0x251fb7c8f70 <col:26> 'int' 0
|   |-BinaryOperator 0x251fb7c0f90 <line:332:5, col:17> 'int' '='
|   | |-DeclRefExpr 0x251fb7c8fb8 <col:5> 'int' lvalue Var 0x251fb81a5e0 'cdummyarg' 'int'
|   | `-IntegerLiteral 0x251fb7c8fd8 <col:17> 'int' 2
|   |-IfStmt 0x251fb7c11f0 <line:334:5, line:337:5>
|   | |-OpaqueValueExpr 0x251fb7c11d8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c11b8 <line:334:78, line:337:5>
|   |   |-CallExpr 0x251fb7c1148 <line:335:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c1130 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c10c0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c1188 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c1170 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c10e0 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x251fb7c11a0 <line:336:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c1498 <line:344:5, line:347:5>
|   | |-OpaqueValueExpr 0x251fb7c1480 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c1460 <line:344:26, line:347:5>
|   |   |-CallExpr 0x251fb7c13f0 <line:345:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c13d8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c1368 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c1430 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c1418 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c1388 <col:16> 'char [33]' lvalue "Can't load the certificate file\n"
|   |   `-GotoStmt 0x251fb7c1448 <line:346:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c1e18 <line:351:5, line:356:5>
|   | |-OpaqueValueExpr 0x251fb7c1e00 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c1de0 <line:353:47, line:356:5>
|   |   |-CallExpr 0x251fb7c1d70 <line:354:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c1d58 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c1cb0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c1db0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c1d98 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c1d08 <col:16> 'char [28]' lvalue "Unable to set OCSP_RESPIDs\n"
|   |   `-GotoStmt 0x251fb7c1dc8 <line:355:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c4258 <line:365:5, line:368:5>
|   | |-OpaqueValueExpr 0x251fb7c4240 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c4220 <line:365:55, line:368:5>
|   |   |-CallExpr 0x251fb7c41b0 <line:366:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c4198 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c4128 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c41f0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c41d8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c4148 <col:16> 'char [33]' lvalue "Unable to create SSL connection\n"
|   |   `-GotoStmt 0x251fb7c4208 <line:367:9, col:14> 'end' 0x251fb7c7b90
|   |-IfStmt 0x251fb7c4448 <line:370:5, line:373:5>
|   | |-BinaryOperator 0x251fb7c4310 <line:370:9, col:33> 'int' '||'
|   | | |-UnaryOperator 0x251fb7c42a8 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x251fb7c4290 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x251fb7c4270 <col:10> 'int' lvalue Var 0x251fb81a520 'ocsp_client_called' 'int'
|   | | `-UnaryOperator 0x251fb7c42f8 <col:32, col:33> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x251fb7c42e0 <col:33> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x251fb7c42c0 <col:33> 'int' lvalue Var 0x251fb81a460 'ocsp_server_called' 'int'
|   | `-CompoundStmt 0x251fb7c4428 <col:53, line:373:5>
|   |   |-CallExpr 0x251fb7c43b8 <line:371:9, col:45> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c43a0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c4330 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c43f8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c43e0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c4350 <col:16> 'char [27]' lvalue "OCSP callbacks not called\n"
|   |   `-GotoStmt 0x251fb7c4410 <line:372:9, col:14> 'end' 0x251fb7c7b90
|   |-BinaryOperator 0x251fb7c44c0 <line:375:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x251fb7c4460 <col:5> 'int' lvalue Var 0x251fb7c7448 'testresult' 'int'
|   | `-IntegerLiteral 0x251fb7c4498 <col:18> 'int' 1
|   |-LabelStmt 0x251fb7c4508 <line:377:2, col:5> 'end'
|   | `-NullStmt 0x251fb7c4500 <col:5>
|   `-ReturnStmt 0x251fb7c48a0 <line:388:5, col:12>
|     `-ImplicitCastExpr 0x251fb7c4888 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7c4868 <col:12> 'int' lvalue Var 0x251fb7c7448 'testresult' 'int'
|-RecordDecl 0x251fb7c49a8 <line:392:9, line:396:1> line:392:16 struct ssl_session_test_fixture definition
| |-FieldDecl 0x251fb7c4a78 <line:393:5, col:17> col:17 referenced test_case_name 'const char *'
| |-FieldDecl 0x251fb7c4ae8 <line:394:5, col:9> col:9 referenced use_ext_cache 'int'
| `-FieldDecl 0x251fb7c4b58 <line:395:5, col:9> col:9 referenced use_int_cache 'int'
|-TypedefDecl 0x251fb7c4c08 <line:392:1, line:396:3> col:3 referenced SSL_SESSION_TEST_FIXTURE 'struct ssl_session_test_fixture':'struct ssl_session_test_fixture'
| `-ElaboratedType 0x251fb7c4bb0 'struct ssl_session_test_fixture' sugar
|   `-RecordType 0x251fb7c4a40 'struct ssl_session_test_fixture'
|     `-Record 0x251fb7c49a8 'ssl_session_test_fixture'
|-VarDecl 0x251fb7c4c90 <line:398:1, col:25> col:12 used new_called 'int' static cinit
| `-IntegerLiteral 0x251fb7c4cf8 <col:25> 'int' 0
|-VarDecl 0x251fb7c4d50 <col:1, col:44> col:28 used remove_called 'int' static cinit
| `-IntegerLiteral 0x251fb7c4db8 <col:44> 'int' 0
|-FunctionDecl 0x251fb7c9010 <line:400:1, line:412:1> line:401:1 used ssl_session_set_up 'SSL_SESSION_TEST_FIXTURE (const char *const)' static
| |-ParmVarDecl 0x251fb7c4e48 <col:20, col:38> col:38 used test_case_name 'const char *const'
| `-CompoundStmt 0x251fb7c94a8 <line:402:1, line:412:1>
|   |-DeclStmt 0x251fb7c9148 <line:403:5, col:37>
|   | `-VarDecl 0x251fb7c90e0 <col:5, col:30> col:30 used fixture 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' nrvo
|   |-BinaryOperator 0x251fb7c9200 <line:405:5, col:30> 'const char *' '='
|   | |-MemberExpr 0x251fb7c9198 <col:5, col:13> 'const char *' lvalue .test_case_name 0x251fb7c4a78
|   | | `-DeclRefExpr 0x251fb7c9160 <col:5> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7c90e0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-ImplicitCastExpr 0x251fb7c91e8 <col:30> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x251fb7c91c8 <col:30> 'const char *const' lvalue ParmVar 0x251fb7c4e48 'test_case_name' 'const char *const'
|   |-BinaryOperator 0x251fb7c9298 <line:406:5, col:29> 'int' '='
|   | |-MemberExpr 0x251fb7c9240 <col:5, col:13> 'int' lvalue .use_ext_cache 0x251fb7c4ae8
|   | | `-DeclRefExpr 0x251fb7c9220 <col:5> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7c90e0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-IntegerLiteral 0x251fb7c9270 <col:29> 'int' 1
|   |-BinaryOperator 0x251fb7c9390 <line:407:5, col:29> 'int' '='
|   | |-MemberExpr 0x251fb7c9338 <col:5, col:13> 'int' lvalue .use_int_cache 0x251fb7c4b58
|   | | `-DeclRefExpr 0x251fb7c9318 <col:5> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7c90e0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-IntegerLiteral 0x251fb7c9368 <col:29> 'int' 1
|   |-BinaryOperator 0x251fb7c9438 <line:409:5, col:34> 'int' '='
|   | |-DeclRefExpr 0x251fb7c93b0 <col:5> 'int' lvalue Var 0x251fb7c4c90 'new_called' 'int'
|   | `-BinaryOperator 0x251fb7c9418 <col:18, col:34> 'int' '='
|   |   |-DeclRefExpr 0x251fb7c93d0 <col:18> 'int' lvalue Var 0x251fb7c4d50 'remove_called' 'int'
|   |   `-IntegerLiteral 0x251fb7c93f0 <col:34> 'int' 0
|   `-ReturnStmt 0x251fb7c9490 <line:411:5, col:12>
|     `-ImplicitCastExpr 0x251fb7c9478 <col:12> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7c9458 <col:12> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7c90e0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|-FunctionDecl 0x251fb7c9608 <line:414:1, line:416:1> line:414:13 used ssl_session_tear_down 'void (SSL_SESSION_TEST_FIXTURE)' static
| |-ParmVarDecl 0x251fb7c94f8 <col:35, col:60> col:60 fixture 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
| `-CompoundStmt 0x251fb7c96c8 <line:415:1, line:416:1>
|-FunctionDecl 0x251fb7c9810 <line:418:1, line:423:1> line:418:12 invalid new_session_cb 'int (int *, int *)' static
| |-ParmVarDecl 0x251fb7c96f0 <col:27, col:32> col:32 invalid ssl 'int *'
| |-ParmVarDecl 0x251fb7c9770 <col:37, col:50> col:50 invalid sess 'int *'
| `-CompoundStmt 0x251fb7c9948 <line:419:1, line:423:1>
|   |-UnaryOperator 0x251fb7c98f8 <line:420:5, col:15> 'int' postfix '++'
|   | `-DeclRefExpr 0x251fb7c98d8 <col:5> 'int' lvalue Var 0x251fb7c4c90 'new_called' 'int'
|   `-ReturnStmt 0x251fb7c9938 <line:422:5, col:12>
|     `-IntegerLiteral 0x251fb7c9910 <col:12> 'int' 1
|-FunctionDecl 0x251fb7c9ad8 <line:425:1, line:428:1> line:425:13 invalid remove_session_cb 'void (int *, int *)' static
| |-ParmVarDecl 0x251fb7c9980 <col:31, col:40> col:40 invalid ctx 'int *'
| |-ParmVarDecl 0x251fb7c9a00 <col:45, col:58> col:58 invalid sess 'int *'
| `-CompoundStmt 0x251fb7c9bd8 <line:426:1, line:428:1>
|   `-UnaryOperator 0x251fb7c9bc0 <line:427:5, col:18> 'int' postfix '++'
|     `-DeclRefExpr 0x251fb7c9ba0 <col:5> 'int' lvalue Var 0x251fb7c4d50 'remove_called' 'int'
|-FunctionDecl 0x251fb7c9d10 <line:430:1, line:627:1> line:430:12 used execute_test_session 'int (SSL_SESSION_TEST_FIXTURE)' static
| |-ParmVarDecl 0x251fb7c9c00 <col:33, col:58> col:58 used fix 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
| `-CompoundStmt 0x251fb7cc4e8 <line:431:1, line:627:1>
|   |-DeclStmt 0x251fb7c2378 <line:439:5, col:23>
|   | `-VarDecl 0x251fb7c22e8 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x251fb7c2350 <col:22> 'int' 0
|   |-IfStmt 0x251fb7c25d0 <line:441:5, line:446:5>
|   | |-OpaqueValueExpr 0x251fb7c25b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c2598 <line:443:46, line:446:5>
|   |   |-CallExpr 0x251fb7c2508 <line:444:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c24f0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c2480 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c2548 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c2530 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c24a0 <col:16> 'char [31]' lvalue "Unable to create SSL_CTX pair\n"
|   |   `-ReturnStmt 0x251fb7c2588 <line:445:9, col:16>
|   |     `-IntegerLiteral 0x251fb7c2560 <col:16> 'int' 0
|   |-IfStmt 0x251fb7c2990 <line:454:5, line:457:5>
|   | |-ImplicitCastExpr 0x251fb7c2748 <line:454:9, col:13> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x251fb7c2718 <col:9, col:13> 'int' lvalue .use_ext_cache 0x251fb7c4ae8
|   | |   `-DeclRefExpr 0x251fb7c26f8 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x251fb7c9c00 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-CompoundStmt 0x251fb7c2980 <col:28, line:457:5>
|   |-IfStmt 0x251fb7c2b60 <line:458:5, line:465:5> has_else
|   | |-ImplicitCastExpr 0x251fb7c29f8 <line:458:9, col:13> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x251fb7c29c8 <col:9, col:13> 'int' lvalue .use_int_cache 0x251fb7c4b58
|   | |   `-DeclRefExpr 0x251fb7c29a8 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x251fb7c9c00 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | |-CompoundStmt 0x251fb7c2b20 <col:28, line:461:5>
|   | `-CompoundStmt 0x251fb7c2b50 <col:12, line:465:5>
|   |-IfStmt 0x251fb7c2e18 <line:467:5, line:471:5>
|   | |-OpaqueValueExpr 0x251fb7c2e00 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c2de0 <line:468:39, line:471:5>
|   |   |-CallExpr 0x251fb7c2d20 <line:469:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c2d08 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c2c98 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c2d60 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c2d48 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c2cb8 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x251fb7c2dc8 <line:470:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7c2f60 <line:473:5, line:476:5>
|   | |-OpaqueValueExpr 0x251fb7c2f48 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7c2f28 <line:473:57, line:476:5>
|   |   |-CallExpr 0x251fb7c2eb8 <line:474:9, col:51> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7c2ea0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7c2e30 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7c2ef8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7c2ee0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7c2e50 <col:16> 'char [33]' lvalue "Unable to create SSL connection\n"
|   |   `-GotoStmt 0x251fb7c2f10 <line:475:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cb300 <line:478:5, line:481:5>
|   | |-OpaqueValueExpr 0x251fb7cb2e8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cb2c8 <line:478:24, line:481:5>
|   |   |-CallExpr 0x251fb7cb258 <line:479:9, col:43> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cb240 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cb1a0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cb298 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cb280 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cb1f8 <col:16> 'char [25]' lvalue "Unexpected NULL session\n"
|   |   `-GotoStmt 0x251fb7cb2b0 <line:480:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cb5b8 <line:483:5, line:487:5>
|   | |-OpaqueValueExpr 0x251fb7cb5a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cb580 <line:483:64, line:487:5>
|   |   |-CallExpr 0x251fb7cb510 <line:485:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cb4f8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cb478 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cb550 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cb538 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cb498 <col:16> 'char [44]' lvalue "Unexpected success adding session to cache\n"
|   |   `-GotoStmt 0x251fb7cb568 <line:486:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cb8b0 <line:489:5, line:492:5>
|   | |-BinaryOperator 0x251fb7cb778 <line:489:9, col:68> 'int' '&&'
|   | | |-ImplicitCastExpr 0x251fb7cb760 <col:9, col:13> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x251fb7cb5f0 <col:9, col:13> 'int' lvalue .use_ext_cache 0x251fb7c4ae8
|   | | |   `-DeclRefExpr 0x251fb7cb5d0 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x251fb7c9c00 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | | `-ParenExpr 0x251fb7cb740 <col:30, col:68> 'int'
|   | |   `-BinaryOperator 0x251fb7cb720 <col:31, col:67> 'int' '||'
|   | |     |-BinaryOperator 0x251fb7cb680 <col:31, col:45> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x251fb7cb668 <col:31> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x251fb7cb620 <col:31> 'int' lvalue Var 0x251fb7c4c90 'new_called' 'int'
|   | |     | `-IntegerLiteral 0x251fb7cb640 <col:45> 'int' 1
|   | |     `-BinaryOperator 0x251fb7cb700 <col:50, col:67> 'int' '!='
|   | |       |-ImplicitCastExpr 0x251fb7cb6e8 <col:50> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x251fb7cb6a0 <col:50> 'int' lvalue Var 0x251fb7c4d50 'remove_called' 'int'
|   | |       `-IntegerLiteral 0x251fb7cb6c0 <col:67> 'int' 0
|   | `-CompoundStmt 0x251fb7cb890 <col:71, line:492:5>
|   |   |-CallExpr 0x251fb7cb820 <line:490:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cb808 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cb798 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cb860 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cb848 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cb7b8 <col:16> 'char [28]' lvalue "Session not added to cache\n"
|   |   `-GotoStmt 0x251fb7cb878 <line:491:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cbb10 <line:494:5, line:497:5>
|   | |-OpaqueValueExpr 0x251fb7cbaf8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cbad8 <line:494:80, line:497:5>
|   |   |-CallExpr 0x251fb7cba68 <line:495:9, col:55> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cba50 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cb9d8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cbaa8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cba90 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cb9f8 <col:16> 'char [37]' lvalue "Unable to create second SSL objects\n"
|   |   `-GotoStmt 0x251fb7cbac0 <line:496:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cbca0 <line:499:5, line:502:5>
|   | |-OpaqueValueExpr 0x251fb7cbc88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cbc68 <line:499:57, line:502:5>
|   |   |-CallExpr 0x251fb7cbbf8 <line:500:9, col:58> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cbbe0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cbb28 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cbc38 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cbc20 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cbb88 <col:16> 'char [40]' lvalue "Unable to create second SSL connection\n"
|   |   `-GotoStmt 0x251fb7cbc50 <line:501:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cbed0 <line:505:5, line:508:5>
|   | |-OpaqueValueExpr 0x251fb7cbeb8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cbe98 <line:505:24, line:508:5>
|   |   |-CallExpr 0x251fb7cbe28 <line:506:9, col:59> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cbe10 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cbd60 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cbe68 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cbe50 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cbdb8 <col:16> 'char [41]' lvalue "Unexpected NULL session from clientssl2\n"
|   |   `-GotoStmt 0x251fb7cbe80 <line:507:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7d1290 <line:510:5, line:513:5>
|   | |-BinaryOperator 0x251fb7d1108 <line:510:9, col:68> 'int' '&&'
|   | | |-ImplicitCastExpr 0x251fb7d10f0 <col:9, col:13> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x251fb7cbf08 <col:9, col:13> 'int' lvalue .use_ext_cache 0x251fb7c4ae8
|   | | |   `-DeclRefExpr 0x251fb7cbee8 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x251fb7c9c00 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | | `-ParenExpr 0x251fb7d10d0 <col:30, col:68> 'int'
|   | |   `-BinaryOperator 0x251fb7d10b0 <col:31, col:67> 'int' '||'
|   | |     |-BinaryOperator 0x251fb7cbf98 <col:31, col:45> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x251fb7cbf80 <col:31> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x251fb7cbf38 <col:31> 'int' lvalue Var 0x251fb7c4c90 'new_called' 'int'
|   | |     | `-IntegerLiteral 0x251fb7cbf58 <col:45> 'int' 2
|   | |     `-BinaryOperator 0x251fb7d1090 <col:50, col:67> 'int' '!='
|   | |       |-ImplicitCastExpr 0x251fb7cc000 <col:50> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x251fb7cbfb8 <col:50> 'int' lvalue Var 0x251fb7c4d50 'remove_called' 'int'
|   | |       `-IntegerLiteral 0x251fb7cbfd8 <col:67> 'int' 0
|   | `-CompoundStmt 0x251fb7d1270 <col:71, line:513:5>
|   |   |-CallExpr 0x251fb7d1200 <line:511:9, col:63> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7d11e8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7d1128 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7d1240 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7d1228 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7d1188 <col:16> 'char [45]' lvalue "Remove session callback unexpectedly called\n"
|   |   `-GotoStmt 0x251fb7d1258 <line:512:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7d1530 <line:519:5, line:522:5>
|   | |-OpaqueValueExpr 0x251fb7d1518 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7d14f8 <line:519:46, line:522:5>
|   |   |-CallExpr 0x251fb7d1488 <line:520:9, col:54> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7d1470 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7d13b8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7d14c8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7d14b0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7d1418 <col:16> 'char [36]' lvalue "Unexpected failure setting session\n"
|   |   `-GotoStmt 0x251fb7d14e0 <line:521:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7d1870 <line:524:5, line:527:5>
|   | |-BinaryOperator 0x251fb7d16f0 <line:524:9, col:68> 'int' '&&'
|   | | |-ImplicitCastExpr 0x251fb7d16d8 <col:9, col:13> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x251fb7d1568 <col:9, col:13> 'int' lvalue .use_ext_cache 0x251fb7c4ae8
|   | | |   `-DeclRefExpr 0x251fb7d1548 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x251fb7c9c00 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | | `-ParenExpr 0x251fb7d16b8 <col:30, col:68> 'int'
|   | |   `-BinaryOperator 0x251fb7d1698 <col:31, col:67> 'int' '||'
|   | |     |-BinaryOperator 0x251fb7d15f8 <col:31, col:45> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x251fb7d15e0 <col:31> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x251fb7d1598 <col:31> 'int' lvalue Var 0x251fb7c4c90 'new_called' 'int'
|   | |     | `-IntegerLiteral 0x251fb7d15b8 <col:45> 'int' 2
|   | |     `-BinaryOperator 0x251fb7d1678 <col:50, col:67> 'int' '!='
|   | |       |-ImplicitCastExpr 0x251fb7d1660 <col:50> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x251fb7d1618 <col:50> 'int' lvalue Var 0x251fb7c4d50 'remove_called' 'int'
|   | |       `-IntegerLiteral 0x251fb7d1638 <col:67> 'int' 1
|   | `-CompoundStmt 0x251fb7d1850 <col:71, line:527:5>
|   |   |-CallExpr 0x251fb7d17e0 <line:525:9, col:61> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7d17c8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7d1710 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7d1820 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7d1808 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7d1768 <col:16> 'char [43]' lvalue "Failed to call callback to remove session\n"
|   |   `-GotoStmt 0x251fb7d1838 <line:526:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7d1b08 <line:530:5, line:533:5>
|   | |-OpaqueValueExpr 0x251fb7d1af0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7d1ad0 <line:530:47, line:533:5>
|   |   |-CallExpr 0x251fb7d1a60 <line:531:9, col:44> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7d1a48 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7d1998 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7d1aa0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7d1a88 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7d19f8 <col:16> 'char [26]' lvalue "Unexpected session found\n"
|   |   `-GotoStmt 0x251fb7d1ab8 <line:532:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cf070 <line:535:5, line:554:5>
|   | |-ImplicitCastExpr 0x251fb7d1b70 <line:535:9, col:13> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x251fb7d1b40 <col:9, col:13> 'int' lvalue .use_int_cache 0x251fb7c4b58
|   | |   `-DeclRefExpr 0x251fb7d1b20 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x251fb7c9c00 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-CompoundStmt 0x251fb7d2058 <col:28, line:554:5>
|   |   |-IfStmt 0x251fb7d1ce8 <line:536:9, line:542:9>
|   |   | |-OpaqueValueExpr 0x251fb7d1cd0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x251fb7d1cb0 <line:536:48, line:542:9>
|   |   |   |-CallExpr 0x251fb7d1c40 <line:540:13, col:66> 'int'
|   |   |   | |-ImplicitCastExpr 0x251fb7d1c28 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x251fb7d1ba8 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x251fb7d1c80 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x251fb7d1c68 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x251fb7d1bc8 <col:20> 'char [44]' lvalue "Unexpected failure adding session to cache\n"
|   |   |   `-GotoStmt 0x251fb7d1c98 <line:541:13, col:18> 'end' 0x251fb7c2d78
|   |   |-IfStmt 0x251fb7d1f88 <line:544:9, line:547:9>
|   |   | |-OpaqueValueExpr 0x251fb7d1f70 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x251fb7d1f50 <line:544:51, line:547:9>
|   |   |   |-CallExpr 0x251fb7d1ee0 <line:545:13, col:70> 'int'
|   |   |   | |-ImplicitCastExpr 0x251fb7d1ec8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x251fb7d1e10 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   |   | `-ImplicitCastExpr 0x251fb7d1f20 <col:20> 'const char *' <NoOp>
|   |   |   |   `-ImplicitCastExpr 0x251fb7d1f08 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |   |     `-StringLiteral 0x251fb7d1e68 <col:20> 'char [48]' lvalue "Unexpected failure removing session from cache\n"
|   |   |   `-GotoStmt 0x251fb7d1f38 <line:546:13, col:18> 'end' 0x251fb7c2d78
|   |   `-IfStmt 0x251fb7d2040 <line:552:9, line:553:26>
|   |     |-ImplicitCastExpr 0x251fb7d1ff0 <line:552:13, col:17> 'int' <LValueToRValue>
|   |     | `-MemberExpr 0x251fb7d1fc0 <col:13, col:17> 'int' lvalue .use_ext_cache 0x251fb7c4ae8
|   |     |   `-DeclRefExpr 0x251fb7d1fa0 <col:13> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x251fb7c9c00 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |     `-UnaryOperator 0x251fb7d2028 <line:553:13, col:26> 'int' postfix '--'
|   |       `-DeclRefExpr 0x251fb7d2008 <col:13> 'int' lvalue Var 0x251fb7c4d50 'remove_called' 'int'
|   |-IfStmt 0x251fb7cf1e8 <line:557:5, line:560:5>
|   | |-OpaqueValueExpr 0x251fb7cf1d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cf1b0 <line:557:46, line:560:5>
|   |   |-CallExpr 0x251fb7cf140 <line:558:9, col:66> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cf128 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cf0a8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cf180 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cf168 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cf0c8 <col:16> 'char [48]' lvalue "Unexpected success removing session from cache\n"
|   |   `-GotoStmt 0x251fb7cf198 <line:559:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cf530 <line:562:5, line:565:5>
|   | |-BinaryOperator 0x251fb7cf3a8 <line:562:9, col:68> 'int' '&&'
|   | | |-ImplicitCastExpr 0x251fb7cf390 <col:9, col:13> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x251fb7cf220 <col:9, col:13> 'int' lvalue .use_ext_cache 0x251fb7c4ae8
|   | | |   `-DeclRefExpr 0x251fb7cf200 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x251fb7c9c00 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | | `-ParenExpr 0x251fb7cf370 <col:30, col:68> 'int'
|   | |   `-BinaryOperator 0x251fb7cf350 <col:31, col:67> 'int' '||'
|   | |     |-BinaryOperator 0x251fb7cf2b0 <col:31, col:45> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x251fb7cf298 <col:31> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x251fb7cf250 <col:31> 'int' lvalue Var 0x251fb7c4c90 'new_called' 'int'
|   | |     | `-IntegerLiteral 0x251fb7cf270 <col:45> 'int' 2
|   | |     `-BinaryOperator 0x251fb7cf330 <col:50, col:67> 'int' '!='
|   | |       |-ImplicitCastExpr 0x251fb7cf318 <col:50> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x251fb7cf2d0 <col:50> 'int' lvalue Var 0x251fb7c4d50 'remove_called' 'int'
|   | |       `-IntegerLiteral 0x251fb7cf2f0 <col:67> 'int' 2
|   | `-CompoundStmt 0x251fb7cf510 <col:71, line:565:5>
|   |   |-CallExpr 0x251fb7cf4a0 <line:563:9, col:64> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cf488 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cf3c8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cf4e0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cf4c8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cf428 <col:16> 'char [46]' lvalue "Failed to call callback to remove session #2\n"
|   |   `-GotoStmt 0x251fb7cf4f8 <line:564:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cf8a0 <line:571:5, line:574:5>
|   | |-OpaqueValueExpr 0x251fb7cf888 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cf868 <line:571:80, line:574:5>
|   |   |-CallExpr 0x251fb7cf7f8 <line:572:9, col:54> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cf7e0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cf768 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cf838 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cf820 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cf788 <col:16> 'char [36]' lvalue "Unable to create third SSL objects\n"
|   |   `-GotoStmt 0x251fb7cf850 <line:573:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cfa18 <line:576:5, line:579:5>
|   | |-OpaqueValueExpr 0x251fb7cfa00 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cf9e0 <line:576:46, line:579:5>
|   |   |-CallExpr 0x251fb7cf970 <line:577:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cf958 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cf8d8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cf9b0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cf998 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cf8f8 <col:16> 'char [44]' lvalue "Unable to set session for third connection\n"
|   |   `-GotoStmt 0x251fb7cf9c8 <line:578:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cfba0 <line:582:5, line:585:5>
|   | |-OpaqueValueExpr 0x251fb7cfb88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cfb68 <line:582:56, line:585:5>
|   |   |-CallExpr 0x251fb7cfaf8 <line:583:9, col:57> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cfae0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cfa30 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cfb38 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cfb20 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cfa88 <col:16> 'char [39]' lvalue "Unable to create third SSL connection\n"
|   |   `-GotoStmt 0x251fb7cfb50 <line:584:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cfea8 <line:589:5, line:592:5>
|   | |-BinaryOperator 0x251fb7cfd60 <line:589:9, col:68> 'int' '&&'
|   | | |-ImplicitCastExpr 0x251fb7cfd48 <col:9, col:13> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x251fb7cfbd8 <col:9, col:13> 'int' lvalue .use_ext_cache 0x251fb7c4ae8
|   | | |   `-DeclRefExpr 0x251fb7cfbb8 <col:9> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue ParmVar 0x251fb7c9c00 'fix' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | | `-ParenExpr 0x251fb7cfd28 <col:30, col:68> 'int'
|   | |   `-BinaryOperator 0x251fb7cfd08 <col:31, col:67> 'int' '||'
|   | |     |-BinaryOperator 0x251fb7cfc68 <col:31, col:45> 'int' '!='
|   | |     | |-ImplicitCastExpr 0x251fb7cfc50 <col:31> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x251fb7cfc08 <col:31> 'int' lvalue Var 0x251fb7c4c90 'new_called' 'int'
|   | |     | `-IntegerLiteral 0x251fb7cfc28 <col:45> 'int' 2
|   | |     `-BinaryOperator 0x251fb7cfce8 <col:50, col:67> 'int' '!='
|   | |       |-ImplicitCastExpr 0x251fb7cfcd0 <col:50> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x251fb7cfc88 <col:50> 'int' lvalue Var 0x251fb7c4d50 'remove_called' 'int'
|   | |       `-IntegerLiteral 0x251fb7cfca8 <col:67> 'int' 3
|   | `-CompoundStmt 0x251fb7cfe88 <col:71, line:592:5>
|   |   |-CallExpr 0x251fb7cfe18 <line:590:9, col:64> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cfe00 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cfd80 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cfe58 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cfe40 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cfda0 <col:16> 'char [46]' lvalue "Failed to call callback to remove session #2\n"
|   |   `-GotoStmt 0x251fb7cfe70 <line:591:9, col:14> 'end' 0x251fb7c2d78
|   |-IfStmt 0x251fb7cc078 <line:594:5, line:600:5>
|   | |-OpaqueValueExpr 0x251fb7cc060 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cc040 <line:594:65, line:600:5>
|   |   |-CallExpr 0x251fb7d0000 <line:598:9, col:65> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cffe8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cff30 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7d0040 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7d0028 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cff88 <col:16> 'char [47]' lvalue "Unexpected failure adding session to cache #2\n"
|   |   `-GotoStmt 0x251fb7d0058 <line:599:9, col:14> 'end' 0x251fb7c2d78
|   |-BinaryOperator 0x251fb7cc0f0 <line:603:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x251fb7cc090 <col:5> 'int' lvalue Var 0x251fb7c22e8 'testresult' 'int'
|   | `-IntegerLiteral 0x251fb7cc0c8 <col:18> 'int' 1
|   |-LabelStmt 0x251fb7cc138 <line:605:2, col:5> 'end'
|   | `-NullStmt 0x251fb7cc130 <col:5>
|   `-ReturnStmt 0x251fb7cc4d8 <line:626:5, col:12>
|     `-ImplicitCastExpr 0x251fb7cc4c0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7cc4a0 <col:12> 'int' lvalue Var 0x251fb7c22e8 'testresult' 'int'
|-FunctionDecl 0x251fb7cc670 <line:629:1, line:636:1> line:629:12 used test_session_with_only_int_cache 'int (void)' static
| `-CompoundStmt 0x251fb7ccd08 <line:630:1, line:636:1>
|   |-DeclStmt 0x251fb7cc900 <line:631:24, .//openssl//file_jk/after\test/testutil.h:47:55>
|   | `-VarDecl 0x251fb7cc738 <.//openssl//file_jk/after\test\sslapitest.c:631:24, .//openssl//file_jk/after\test/testutil.h:47:54> col:23 used fixture 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' cinit
|   |   `-CallExpr 0x251fb7cc8c0 <.//openssl//file_jk/after\test\sslapitest.c:631:50, .//openssl//file_jk/after\test/testutil.h:47:54> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |     |-ImplicitCastExpr 0x251fb7cc8a8 <.//openssl//file_jk/after\test\sslapitest.c:631:50> 'SSL_SESSION_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x251fb7cc7a0 <col:50> 'SSL_SESSION_TEST_FIXTURE (const char *const)' Function 0x251fb7c9010 'ssl_session_set_up' 'SSL_SESSION_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x251fb7cc8e8 <.//openssl//file_jk/after\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x251fb7cc830 <col:26> 'const char [33]' lvalue __func__
|   |         `-StringLiteral 0x251fb7cc7f8 <col:26> 'const char [33]' lvalue "test_session_with_only_int_cache"
|   |-DeclStmt 0x251fb7cc9c0 <line:48:5, .//openssl//file_jk/after\test\sslapitest.c:631:69>
|   | `-VarDecl 0x251fb7cc930 <.//openssl//file_jk/after\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x251fb7cc998 <col:18> 'int' 0
|   |-BinaryOperator 0x251fb7cca68 <.//openssl//file_jk/after\test\sslapitest.c:633:5, col:29> 'int' '='
|   | |-MemberExpr 0x251fb7cca10 <col:5, col:13> 'int' lvalue .use_ext_cache 0x251fb7c4ae8
|   | | `-DeclRefExpr 0x251fb7cc9d8 <col:5> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7cc738 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-IntegerLiteral 0x251fb7cca40 <col:29> 'int' 0
|   |-BinaryOperator 0x251fb7ccbb0 <.//openssl//file_jk/after\test/testutil.h:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x251fb7cca88 <col:9> 'int' lvalue Var 0x251fb7cc930 'result' 'int'
|   | `-CallExpr 0x251fb7ccb70 <.//openssl//file_jk/after\test\sslapitest.c:635:18, .//openssl//file_jk/after\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x251fb7ccb58 <.//openssl//file_jk/after\test\sslapitest.c:635:18> 'int (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x251fb7ccac0 <col:18> 'int (SSL_SESSION_TEST_FIXTURE)' Function 0x251fb7c9d10 'execute_test_session' 'int (SSL_SESSION_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x251fb7ccb98 <.//openssl//file_jk/after\test/testutil.h:51:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x251fb7ccae0 <col:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7cc738 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |-CallExpr 0x251fb7ccc80 <.//openssl//file_jk/after\test\sslapitest.c:635:40, .//openssl//file_jk/after\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x251fb7ccc68 <.//openssl//file_jk/after\test\sslapitest.c:635:40> 'void (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7ccbd0 <col:40> 'void (SSL_SESSION_TEST_FIXTURE)' Function 0x251fb7c9608 'ssl_session_tear_down' 'void (SSL_SESSION_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x251fb7ccca8 <.//openssl//file_jk/after\test/testutil.h:52:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x251fb7ccbf0 <col:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7cc738 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   `-ReturnStmt 0x251fb7cccf8 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x251fb7ccce0 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7cccc0 <col:16> 'int' lvalue Var 0x251fb7cc930 'result' 'int'
|-FunctionDecl 0x251fb7ccde8 <.//openssl//file_jk/after\test\sslapitest.c:638:1, line:645:1> line:638:12 used test_session_with_only_ext_cache 'int (void)' static
| `-CompoundStmt 0x251fb7ca348 <line:639:1, line:645:1>
|   |-DeclStmt 0x251fb7ccfe0 <line:640:24, .//openssl//file_jk/after\test/testutil.h:47:55>
|   | `-VarDecl 0x251fb7cceb0 <.//openssl//file_jk/after\test\sslapitest.c:640:24, .//openssl//file_jk/after\test/testutil.h:47:54> col:23 used fixture 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' cinit
|   |   `-CallExpr 0x251fb7ccfa0 <.//openssl//file_jk/after\test\sslapitest.c:640:50, .//openssl//file_jk/after\test/testutil.h:47:54> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |     |-ImplicitCastExpr 0x251fb7ccf88 <.//openssl//file_jk/after\test\sslapitest.c:640:50> 'SSL_SESSION_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x251fb7ccf18 <col:50> 'SSL_SESSION_TEST_FIXTURE (const char *const)' Function 0x251fb7c9010 'ssl_session_set_up' 'SSL_SESSION_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x251fb7ccfc8 <.//openssl//file_jk/after\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x251fb7ccf70 <col:26> 'const char [33]' lvalue __func__
|   |         `-StringLiteral 0x251fb7ccf38 <col:26> 'const char [33]' lvalue "test_session_with_only_ext_cache"
|   |-DeclStmt 0x251fb7ca0b0 <line:48:5, .//openssl//file_jk/after\test\sslapitest.c:640:69>
|   | `-VarDecl 0x251fb7ca020 <.//openssl//file_jk/after\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x251fb7ca088 <col:18> 'int' 0
|   |-BinaryOperator 0x251fb7ca158 <.//openssl//file_jk/after\test\sslapitest.c:642:5, col:29> 'int' '='
|   | |-MemberExpr 0x251fb7ca100 <col:5, col:13> 'int' lvalue .use_int_cache 0x251fb7c4b58
|   | | `-DeclRefExpr 0x251fb7ca0c8 <col:5> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7cceb0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   | `-IntegerLiteral 0x251fb7ca130 <col:29> 'int' 0
|   |-BinaryOperator 0x251fb7ca248 <.//openssl//file_jk/after\test/testutil.h:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x251fb7ca178 <col:9> 'int' lvalue Var 0x251fb7ca020 'result' 'int'
|   | `-CallExpr 0x251fb7ca208 <.//openssl//file_jk/after\test\sslapitest.c:644:18, .//openssl//file_jk/after\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x251fb7ca1f0 <.//openssl//file_jk/after\test\sslapitest.c:644:18> 'int (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x251fb7ca1b0 <col:18> 'int (SSL_SESSION_TEST_FIXTURE)' Function 0x251fb7c9d10 'execute_test_session' 'int (SSL_SESSION_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x251fb7ca230 <.//openssl//file_jk/after\test/testutil.h:51:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x251fb7ca1d0 <col:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7cceb0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |-CallExpr 0x251fb7ca2c0 <.//openssl//file_jk/after\test\sslapitest.c:644:40, .//openssl//file_jk/after\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x251fb7ca2a8 <.//openssl//file_jk/after\test\sslapitest.c:644:40> 'void (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7ca268 <col:40> 'void (SSL_SESSION_TEST_FIXTURE)' Function 0x251fb7c9608 'ssl_session_tear_down' 'void (SSL_SESSION_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x251fb7ca2e8 <.//openssl//file_jk/after\test/testutil.h:52:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x251fb7ca288 <col:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7cceb0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   `-ReturnStmt 0x251fb7ca338 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x251fb7ca320 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7ca300 <col:16> 'int' lvalue Var 0x251fb7ca020 'result' 'int'
|-FunctionDecl 0x251fb7ca428 <.//openssl//file_jk/after\test\sslapitest.c:647:1, line:652:1> line:647:12 used test_session_with_both_cache 'int (void)' static
| `-CompoundStmt 0x251fb7ca960 <line:648:1, line:652:1>
|   |-DeclStmt 0x251fb7ca6a0 <line:649:24, .//openssl//file_jk/after\test/testutil.h:47:55>
|   | `-VarDecl 0x251fb7ca4f0 <.//openssl//file_jk/after\test\sslapitest.c:649:24, .//openssl//file_jk/after\test/testutil.h:47:54> col:23 used fixture 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' cinit
|   |   `-CallExpr 0x251fb7ca660 <.//openssl//file_jk/after\test\sslapitest.c:649:50, .//openssl//file_jk/after\test/testutil.h:47:54> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |     |-ImplicitCastExpr 0x251fb7ca648 <.//openssl//file_jk/after\test\sslapitest.c:649:50> 'SSL_SESSION_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x251fb7ca558 <col:50> 'SSL_SESSION_TEST_FIXTURE (const char *const)' Function 0x251fb7c9010 'ssl_session_set_up' 'SSL_SESSION_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x251fb7ca688 <.//openssl//file_jk/after\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x251fb7ca630 <col:26> 'const char [29]' lvalue __func__
|   |         `-StringLiteral 0x251fb7ca5f8 <col:26> 'const char [29]' lvalue "test_session_with_both_cache"
|   |-DeclStmt 0x251fb7ca760 <line:48:5, .//openssl//file_jk/after\test\sslapitest.c:649:69>
|   | `-VarDecl 0x251fb7ca6d0 <.//openssl//file_jk/after\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x251fb7ca738 <col:18> 'int' 0
|   |-BinaryOperator 0x251fb7ca860 <line:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x251fb7ca778 <col:9> 'int' lvalue Var 0x251fb7ca6d0 'result' 'int'
|   | `-CallExpr 0x251fb7ca820 <.//openssl//file_jk/after\test\sslapitest.c:651:18, .//openssl//file_jk/after\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x251fb7ca808 <.//openssl//file_jk/after\test\sslapitest.c:651:18> 'int (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x251fb7ca7b0 <col:18> 'int (SSL_SESSION_TEST_FIXTURE)' Function 0x251fb7c9d10 'execute_test_session' 'int (SSL_SESSION_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x251fb7ca848 <.//openssl//file_jk/after\test/testutil.h:51:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x251fb7ca7d0 <col:31> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7ca4f0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   |-CallExpr 0x251fb7ca8d8 <.//openssl//file_jk/after\test\sslapitest.c:651:40, .//openssl//file_jk/after\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x251fb7ca8c0 <.//openssl//file_jk/after\test\sslapitest.c:651:40> 'void (*)(SSL_SESSION_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7ca880 <col:40> 'void (SSL_SESSION_TEST_FIXTURE)' Function 0x251fb7c9608 'ssl_session_tear_down' 'void (SSL_SESSION_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x251fb7ca900 <.//openssl//file_jk/after\test/testutil.h:52:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x251fb7ca8a0 <col:19> 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture' lvalue Var 0x251fb7ca4f0 'fixture' 'SSL_SESSION_TEST_FIXTURE':'struct ssl_session_test_fixture'
|   `-ReturnStmt 0x251fb7ca950 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x251fb7ca938 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7ca918 <col:16> 'int' lvalue Var 0x251fb7ca6d0 'result' 'int'
|-FunctionDecl 0x251fb7cac28 <.//openssl//file_jk/after\test\sslapitest.c:660:1, line:673:1> line:660:13 invalid setupbio 'void (int **, int *, int *, int)' static
| |-ParmVarDecl 0x251fb7ca9b8 <col:22, col:28> col:28 invalid res 'int **'
| |-ParmVarDecl 0x251fb7caa38 <col:33, col:38> col:38 invalid bio1 'int *'
| |-ParmVarDecl 0x251fb7caab8 <col:44, col:49> col:49 invalid bio2 'int *'
| |-ParmVarDecl 0x251fb7cab38 <col:55, col:59> col:59 used type 'int'
| `-CompoundStmt 0x251fb7cafa0 <line:661:1, line:673:1>
|   `-SwitchStmt 0x251fb7cad50 <line:662:5, line:672:5>
|     |-ImplicitCastExpr 0x251fb7cad38 <line:662:13> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x251fb7cad00 <col:13> 'int' lvalue ParmVar 0x251fb7cab38 'type' 'int'
|     `-CompoundStmt 0x251fb7caf60 <col:19, line:672:5>
|       |-CaseStmt 0x251fb7cadb0 <line:663:5, <invalid sloc>>
|       | |-ConstantExpr 0x251fb7cad98 <line:654:21> 'int'
|       | | `-IntegerLiteral 0x251fb7cad70 <col:21> 'int' 0
|       | `-NullStmt 0x251fb7cae60 <<invalid sloc>>
|       |-BreakStmt 0x251fb7cae68 <line:665:9>
|       |-CaseStmt 0x251fb7caeb0 <line:666:5, <invalid sloc>>
|       | |-ConstantExpr 0x251fb7cae98 <line:655:21> 'int'
|       | | `-IntegerLiteral 0x251fb7cae70 <col:21> 'int' 1
|       | `-NullStmt 0x251fb7caed8 <<invalid sloc>>
|       |-BreakStmt 0x251fb7caee0 <line:668:9>
|       |-CaseStmt 0x251fb7caf28 <line:669:5, <invalid sloc>>
|       | |-ConstantExpr 0x251fb7caf10 <line:656:21> 'int'
|       | | `-IntegerLiteral 0x251fb7caee8 <col:21> 'int' 2
|       | `-NullStmt 0x251fb7caf50 <<invalid sloc>>
|       `-BreakStmt 0x251fb7caf58 <line:671:9>
|-FunctionDecl 0x251fb7cd100 <line:675:1, line:767:1> line:675:12 used test_ssl_set_bio 'int (int)' static
| |-ParmVarDecl 0x251fb7cd050 <col:29, col:33> col:33 used idx 'int'
| `-CompoundStmt 0x251fb7d57c0 <line:676:1, line:767:1>
|   |-DeclStmt 0x251fb7cda38 <line:682:5, col:45>
|   | |-VarDecl 0x251fb7cd828 <col:5, col:9> col:9 used initrbio 'int'
|   | |-VarDecl 0x251fb7cd8a8 <col:5, col:19> col:19 used initwbio 'int'
|   | |-VarDecl 0x251fb7cd928 <col:5, col:29> col:29 used newrbio 'int'
|   | `-VarDecl 0x251fb7cd9a8 <col:5, col:38> col:38 used newwbio 'int'
|   |-DeclStmt 0x251fb7cdaf8 <line:683:5, col:23>
|   | `-VarDecl 0x251fb7cda68 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x251fb7cdad0 <col:22> 'int' 0
|   |-IfStmt 0x251fb7cdd18 <line:685:5, line:688:5>
|   | |-OpaqueValueExpr 0x251fb7cdd00 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cdce0 <line:685:22, line:688:5>
|   |   |-CallExpr 0x251fb7cdc20 <line:686:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cdc08 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cdb98 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cdc60 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cdc48 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cdbb8 <col:16> 'char [28]' lvalue "Failed to allocate SSL_CTX\n"
|   |   `-GotoStmt 0x251fb7cdcc8 <line:687:9, col:14> 'end' 0x251fb7cdc78
|   |-IfStmt 0x251fb7cdf08 <line:691:5, line:694:5>
|   | |-OpaqueValueExpr 0x251fb7cdef0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cded0 <line:691:22, line:694:5>
|   |   |-CallExpr 0x251fb7cde60 <line:692:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7cde48 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cddd8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7cdea0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7cde88 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cddf8 <col:16> 'char [31]' lvalue "Failed to allocate SSL object\n"
|   |   `-GotoStmt 0x251fb7cdeb8 <line:693:9, col:14> 'end' 0x251fb7cdc78
|   |-BinaryOperator 0x251fb7cdfd8 <line:696:5, col:22> 'int' '='
|   | |-DeclRefExpr 0x251fb7cdf20 <col:5> 'int' lvalue Var 0x251fb7cd828 'initrbio' 'int'
|   | `-BinaryOperator 0x251fb7cdfb8 <col:16, col:22> 'int' '%'
|   |   |-ImplicitCastExpr 0x251fb7cdfa0 <col:16> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x251fb7cdf58 <col:16> 'int' lvalue ParmVar 0x251fb7cd050 'idx' 'int'
|   |   `-IntegerLiteral 0x251fb7cdf78 <col:22> 'int' 3
|   |-CompoundAssignOperator 0x251fb7d30b0 <line:697:5, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x251fb7cdff8 <col:5> 'int' lvalue ParmVar 0x251fb7cd050 'idx' 'int'
|   | `-IntegerLiteral 0x251fb7ce018 <col:12> 'int' 3
|   |-BinaryOperator 0x251fb7d3198 <line:698:5, col:22> 'int' '='
|   | |-DeclRefExpr 0x251fb7d30e0 <col:5> 'int' lvalue Var 0x251fb7cd8a8 'initwbio' 'int'
|   | `-BinaryOperator 0x251fb7d3178 <col:16, col:22> 'int' '%'
|   |   |-ImplicitCastExpr 0x251fb7d3160 <col:16> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x251fb7d3118 <col:16> 'int' lvalue ParmVar 0x251fb7cd050 'idx' 'int'
|   |   `-IntegerLiteral 0x251fb7d3138 <col:22> 'int' 3
|   |-CompoundAssignOperator 0x251fb7d3200 <line:699:5, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x251fb7d31b8 <col:5> 'int' lvalue ParmVar 0x251fb7cd050 'idx' 'int'
|   | `-IntegerLiteral 0x251fb7d31d8 <col:12> 'int' 3
|   |-BinaryOperator 0x251fb7d32e8 <line:700:5, col:21> 'int' '='
|   | |-DeclRefExpr 0x251fb7d3230 <col:5> 'int' lvalue Var 0x251fb7cd928 'newrbio' 'int'
|   | `-BinaryOperator 0x251fb7d32c8 <col:15, col:21> 'int' '%'
|   |   |-ImplicitCastExpr 0x251fb7d32b0 <col:15> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x251fb7d3268 <col:15> 'int' lvalue ParmVar 0x251fb7cd050 'idx' 'int'
|   |   `-IntegerLiteral 0x251fb7d3288 <col:21> 'int' 3
|   |-CompoundAssignOperator 0x251fb7d3350 <line:701:5, col:12> 'int' '/=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x251fb7d3308 <col:5> 'int' lvalue ParmVar 0x251fb7cd050 'idx' 'int'
|   | `-IntegerLiteral 0x251fb7d3328 <col:12> 'int' 3
|   |-BinaryOperator 0x251fb7d33f0 <line:702:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x251fb7d3380 <col:5> 'int' lvalue Var 0x251fb7cd9a8 'newwbio' 'int'
|   | `-ImplicitCastExpr 0x251fb7d33d8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x251fb7d33b8 <col:15> 'int' lvalue ParmVar 0x251fb7cd050 'idx' 'int'
|   |-CallExpr 0x251fb7d34c8 <line:703:5, col:32> 'int'
|   | |-ImplicitCastExpr 0x251fb7d34b0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7d3410 <col:5> 'int ()' Function 0x251fb81c2f8 'OPENSSL_assert' 'int ()'
|   | `-BinaryOperator 0x251fb7d3490 <col:20, col:31> 'int' '<='
|   |   |-ImplicitCastExpr 0x251fb7d3478 <col:20> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x251fb7d3430 <col:20> 'int' lvalue Var 0x251fb7cd9a8 'newwbio' 'int'
|   |   `-IntegerLiteral 0x251fb7d3450 <col:31> 'int' 2
|   |-IfStmt 0x251fb7d3bc8 <line:705:5, line:712:5>
|   | |-BinaryOperator 0x251fb7d3730 <line:705:9, line:655:21> 'int' '||'
|   | | |-BinaryOperator 0x251fb7d3690 <line:705:9, line:655:21> 'int' '||'
|   | | | |-BinaryOperator 0x251fb7d35f0 <line:705:9, line:655:21> 'int' '||'
|   | | | | |-BinaryOperator 0x251fb7d3550 <line:705:9, line:655:21> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x251fb7d3538 <line:705:9> 'int' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x251fb7d34f0 <col:9> 'int' lvalue Var 0x251fb7cd828 'initrbio' 'int'
|   | | | | | `-IntegerLiteral 0x251fb7d3510 <line:655:21> 'int' 1
|   | | | | `-BinaryOperator 0x251fb7d35d0 <line:705:34, line:655:21> 'int' '=='
|   | | | |   |-ImplicitCastExpr 0x251fb7d35b8 <line:705:34> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x251fb7d3570 <col:34> 'int' lvalue Var 0x251fb7cd8a8 'initwbio' 'int'
|   | | | |   `-IntegerLiteral 0x251fb7d3590 <line:655:21> 'int' 1
|   | | | `-BinaryOperator 0x251fb7d3670 <line:705:59, line:655:21> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x251fb7d3658 <line:705:59> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x251fb7d3610 <col:59> 'int' lvalue Var 0x251fb7cd928 'newrbio' 'int'
|   | | |   `-IntegerLiteral 0x251fb7d3630 <line:655:21> 'int' 1
|   | | `-BinaryOperator 0x251fb7d3710 <line:706:16, line:655:21> 'int' '=='
|   | |   |-ImplicitCastExpr 0x251fb7d36f8 <line:706:16> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x251fb7d36b0 <col:16> 'int' lvalue Var 0x251fb7cd9a8 'newwbio' 'int'
|   | |   `-IntegerLiteral 0x251fb7d36d0 <line:655:21> 'int' 1
|   | `-CompoundStmt 0x251fb7d3bb0 <line:706:38, line:712:5>
|   |   `-IfStmt 0x251fb7d3b98 <line:708:9, line:711:9>
|   |     |-OpaqueValueExpr 0x251fb7d3b80 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x251fb7d3b60 <line:708:27, line:711:9>
|   |       |-CallExpr 0x251fb7d3af0 <line:709:13, col:47> 'int'
|   |       | |-ImplicitCastExpr 0x251fb7d3ad8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x251fb7d3a70 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x251fb7d3b30 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x251fb7d3b18 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x251fb7d3a90 <col:20> 'char [25]' lvalue "Failed to allocate bio1\n"
|   |       `-GotoStmt 0x251fb7d3b48 <line:710:13, col:18> 'end' 0x251fb7cdc78
|   |-IfStmt 0x251fb7d5100 <line:714:5, line:721:5>
|   | |-BinaryOperator 0x251fb7d3e20 <line:714:9, line:656:21> 'int' '||'
|   | | |-BinaryOperator 0x251fb7d3d80 <line:714:9, line:656:21> 'int' '||'
|   | | | |-BinaryOperator 0x251fb7d3ce0 <line:714:9, line:656:21> 'int' '||'
|   | | | | |-BinaryOperator 0x251fb7d3c40 <line:714:9, line:656:21> 'int' '=='
|   | | | | | |-ImplicitCastExpr 0x251fb7d3c28 <line:714:9> 'int' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x251fb7d3be0 <col:9> 'int' lvalue Var 0x251fb7cd828 'initrbio' 'int'
|   | | | | | `-IntegerLiteral 0x251fb7d3c00 <line:656:21> 'int' 2
|   | | | | `-BinaryOperator 0x251fb7d3cc0 <line:714:34, line:656:21> 'int' '=='
|   | | | |   |-ImplicitCastExpr 0x251fb7d3ca8 <line:714:34> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x251fb7d3c60 <col:34> 'int' lvalue Var 0x251fb7cd8a8 'initwbio' 'int'
|   | | | |   `-IntegerLiteral 0x251fb7d3c80 <line:656:21> 'int' 2
|   | | | `-BinaryOperator 0x251fb7d3d60 <line:714:59, line:656:21> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x251fb7d3d48 <line:714:59> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x251fb7d3d00 <col:59> 'int' lvalue Var 0x251fb7cd928 'newrbio' 'int'
|   | | |   `-IntegerLiteral 0x251fb7d3d20 <line:656:21> 'int' 2
|   | | `-BinaryOperator 0x251fb7d3e00 <line:715:16, line:656:21> 'int' '=='
|   | |   |-ImplicitCastExpr 0x251fb7d3de8 <line:715:16> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x251fb7d3da0 <col:16> 'int' lvalue Var 0x251fb7cd9a8 'newwbio' 'int'
|   | |   `-IntegerLiteral 0x251fb7d3dc0 <line:656:21> 'int' 2
|   | `-CompoundStmt 0x251fb7d50e8 <line:715:38, line:721:5>
|   |   `-IfStmt 0x251fb7d50d0 <line:717:9, line:720:9>
|   |     |-OpaqueValueExpr 0x251fb7d4090 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x251fb7d4070 <line:717:27, line:720:9>
|   |       |-CallExpr 0x251fb7d4000 <line:718:13, col:47> 'int'
|   |       | |-ImplicitCastExpr 0x251fb7d3fe8 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x251fb7d3f80 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x251fb7d4040 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x251fb7d4028 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x251fb7d3fa0 <col:20> 'char [25]' lvalue "Failed to allocate bio2\n"
|   |       `-GotoStmt 0x251fb7d4058 <line:719:13, col:18> 'end' 0x251fb7cdc78
|   |-BinaryOperator 0x251fb7d56b8 <line:752:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x251fb7d5658 <col:5> 'int' lvalue Var 0x251fb7cda68 'testresult' 'int'
|   | `-IntegerLiteral 0x251fb7d5690 <col:18> 'int' 1
|   |-LabelStmt 0x251fb7d5700 <line:754:2, col:5> 'end'
|   | `-NullStmt 0x251fb7d56f8 <col:5>
|   `-ReturnStmt 0x251fb7d57b0 <line:766:5, col:12>
|     `-ImplicitCastExpr 0x251fb7d5798 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7d5778 <col:12> 'int' lvalue Var 0x251fb7cda68 'testresult' 'int'
|-RecordDecl 0x251fb7d5858 <line:769:9, line:773:1> line:769:16 struct ssl_bio_test_fixture definition
| |-FieldDecl 0x251fb7d5928 <line:770:5, col:17> col:17 referenced test_case_name 'const char *'
| |-FieldDecl 0x251fb7d5998 <line:771:5, col:9> col:9 referenced pop_ssl 'int'
| |-EnumDecl 0x251fb7d59f0 <line:772:5, col:52> col:5
| | |-EnumConstantDecl 0x251fb7d5ad0 <col:12> col:12 referenced NO_BIO_CHANGE 'int'
| | |-EnumConstantDecl 0x251fb7d5b28 <col:27> col:27 referenced CHANGE_RBIO 'int'
| | `-EnumConstantDecl 0x251fb7d5b80 <col:40> col:40 referenced CHANGE_WBIO 'int'
| `-FieldDecl 0x251fb7d5c38 <col:5, col:54> col:54 referenced change_bio 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)'
|-TypedefDecl 0x251fb7d5ce8 <line:769:1, line:773:3> col:3 referenced SSL_BIO_TEST_FIXTURE 'struct ssl_bio_test_fixture':'struct ssl_bio_test_fixture'
| `-ElaboratedType 0x251fb7d5c90 'struct ssl_bio_test_fixture' sugar
|   `-RecordType 0x251fb7d58f0 'struct ssl_bio_test_fixture'
|     `-Record 0x251fb7d5858 'ssl_bio_test_fixture'
|-FunctionDecl 0x251fb7d5ea8 <line:775:1, line:784:1> line:775:29 used ssl_bio_set_up 'SSL_BIO_TEST_FIXTURE (const char *const)' static
| |-ParmVarDecl 0x251fb7d5d98 <col:44, col:62> col:62 used test_case_name 'const char *const'
| `-CompoundStmt 0x251fb7ce250 <line:776:1, line:784:1>
|   |-DeclStmt 0x251fb7d5fe0 <line:777:5, col:33>
|   | `-VarDecl 0x251fb7d5f78 <col:5, col:26> col:26 used fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' nrvo
|   |-BinaryOperator 0x251fb7d6098 <line:779:5, col:30> 'const char *' '='
|   | |-MemberExpr 0x251fb7d6030 <col:5, col:13> 'const char *' lvalue .test_case_name 0x251fb7d5928
|   | | `-DeclRefExpr 0x251fb7d5ff8 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d5f78 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-ImplicitCastExpr 0x251fb7d6080 <col:30> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x251fb7d6060 <col:30> 'const char *const' lvalue ParmVar 0x251fb7d5d98 'test_case_name' 'const char *const'
|   |-BinaryOperator 0x251fb7ce0d8 <line:780:5, col:23> 'int' '='
|   | |-MemberExpr 0x251fb7ce080 <col:5, col:13> 'int' lvalue .pop_ssl 0x251fb7d5998
|   | | `-DeclRefExpr 0x251fb7ce060 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d5f78 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-IntegerLiteral 0x251fb7ce0b0 <col:23> 'int' 0
|   |-BinaryOperator 0x251fb7ce1e0 <line:781:5, col:26> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' '='
|   | |-MemberExpr 0x251fb7ce178 <col:5, col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' lvalue .change_bio 0x251fb7d5c38
|   | | `-DeclRefExpr 0x251fb7ce158 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d5f78 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-ImplicitCastExpr 0x251fb7ce1c8 <col:26> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' <IntegralCast>
|   |   `-DeclRefExpr 0x251fb7ce1a8 <col:26> 'int' EnumConstant 0x251fb7d5ad0 'NO_BIO_CHANGE' 'int'
|   `-ReturnStmt 0x251fb7ce238 <line:783:5, col:12>
|     `-ImplicitCastExpr 0x251fb7ce220 <col:12> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7ce200 <col:12> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d5f78 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|-FunctionDecl 0x251fb7ce3a8 <line:786:1, line:788:1> line:786:13 used ssl_bio_tear_down 'void (SSL_BIO_TEST_FIXTURE)' static
| |-ParmVarDecl 0x251fb7ce298 <col:31, col:52> col:52 fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
| `-CompoundStmt 0x251fb7ce468 <line:787:1, line:788:1>
|-FunctionDecl 0x251fb7ce5a0 <line:790:1, line:851:1> line:790:12 used execute_test_ssl_bio 'int (SSL_BIO_TEST_FIXTURE)' static
| |-ParmVarDecl 0x251fb7ce488 <col:33, col:54> col:54 used fix 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
| `-CompoundStmt 0x251fb7d6f60 <line:791:1, line:851:1>
|   |-DeclStmt 0x251fb7ce9e0 <line:795:5, col:23>
|   | `-VarDecl 0x251fb7ce950 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x251fb7ce9b8 <col:22> 'int' 0
|   |-IfStmt 0x251fb7cebd0 <line:797:5, line:800:5>
|   | |-OpaqueValueExpr 0x251fb7cebb8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7ceb98 <line:797:22, line:800:5>
|   |   |-CallExpr 0x251fb7ceb08 <line:798:9, col:46> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7ceaf0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cea80 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7ceb48 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7ceb30 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7ceaa0 <col:16> 'char [28]' lvalue "Failed to allocate SSL_CTX\n"
|   |   `-ReturnStmt 0x251fb7ceb88 <line:799:9, col:16>
|   |     `-IntegerLiteral 0x251fb7ceb60 <col:16> 'int' 0
|   |-IfStmt 0x251fb7cee10 <line:803:5, line:806:5>
|   | |-OpaqueValueExpr 0x251fb7cedf8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7cedd8 <line:803:22, line:806:5>
|   |   |-CallExpr 0x251fb7ced18 <line:804:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7ced00 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7cec90 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7ced58 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7ced40 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7cecb0 <col:16> 'char [31]' lvalue "Failed to allocate SSL object\n"
|   |   `-GotoStmt 0x251fb7cedc0 <line:805:9, col:14> 'end' 0x251fb7ced70
|   |-IfStmt 0x251fb7d6348 <line:811:5, line:814:5>
|   | |-OpaqueValueExpr 0x251fb7d6330 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7d6310 <line:811:44, line:814:5>
|   |   |-CallExpr 0x251fb7d62a0 <line:812:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7d6288 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7d6218 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7d62e0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7d62c8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7d6238 <col:16> 'char [30]' lvalue "Malloc failure creating BIOs\n"
|   |   `-GotoStmt 0x251fb7d62f8 <line:813:9, col:14> 'end' 0x251fb7ced70
|   |-IfStmt 0x251fb7d6bc0 <line:825:5, line:835:5>
|   | |-BinaryOperator 0x251fb7d6620 <line:825:9, col:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x251fb7d6608 <col:9, col:13> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x251fb7d65f0 <col:9, col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' <LValueToRValue>
|   | | |   `-MemberExpr 0x251fb7d65a0 <col:9, col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' lvalue .change_bio 0x251fb7d5c38
|   | | |     `-DeclRefExpr 0x251fb7d6580 <col:9> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue ParmVar 0x251fb7ce488 'fix' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | | `-DeclRefExpr 0x251fb7d65d0 <col:27> 'int' EnumConstant 0x251fb7d5ad0 'NO_BIO_CHANGE' 'int'
|   | `-CompoundStmt 0x251fb7d6ba8 <col:42, line:835:5>
|   |   `-IfStmt 0x251fb7d68b0 <line:827:9, line:830:9>
|   |     |-OpaqueValueExpr 0x251fb7d6898 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x251fb7d6878 <line:827:30, line:830:9>
|   |       |-CallExpr 0x251fb7d6808 <line:828:13, col:55> 'int'
|   |       | |-ImplicitCastExpr 0x251fb7d67f0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x251fb7d6780 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x251fb7d6848 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x251fb7d6830 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x251fb7d67a0 <col:20> 'char [33]' lvalue "Malloc failure creating membio2\n"
|   |       `-GotoStmt 0x251fb7d6860 <line:829:13, col:18> 'end' 0x251fb7ced70
|   |-BinaryOperator 0x251fb7d6e58 <line:843:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x251fb7d6df8 <col:5> 'int' lvalue Var 0x251fb7ce950 'testresult' 'int'
|   | `-IntegerLiteral 0x251fb7d6e30 <col:18> 'int' 1
|   |-LabelStmt 0x251fb7d6ea0 <line:844:2, col:5> 'end'
|   | `-NullStmt 0x251fb7d6e98 <col:5>
|   `-ReturnStmt 0x251fb7d6f50 <line:850:5, col:12>
|     `-ImplicitCastExpr 0x251fb7d6f38 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7d6f18 <col:12> 'int' lvalue Var 0x251fb7ce950 'testresult' 'int'
|-FunctionDecl 0x251fb7d8100 <line:853:1, line:858:1> line:853:12 used test_ssl_bio_pop_next_bio 'int (void)' static
| `-CompoundStmt 0x251fb7d8708 <line:854:1, line:858:1>
|   |-DeclStmt 0x251fb7d8390 <line:855:24, .//openssl//file_jk/after\test/testutil.h:47:55>
|   | `-VarDecl 0x251fb7d81c8 <.//openssl//file_jk/after\test\sslapitest.c:855:24, .//openssl//file_jk/after\test/testutil.h:47:54> col:23 used fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' cinit
|   |   `-CallExpr 0x251fb7d8350 <.//openssl//file_jk/after\test\sslapitest.c:855:46, .//openssl//file_jk/after\test/testutil.h:47:54> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |     |-ImplicitCastExpr 0x251fb7d8338 <.//openssl//file_jk/after\test\sslapitest.c:855:46> 'SSL_BIO_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x251fb7d8230 <col:46> 'SSL_BIO_TEST_FIXTURE (const char *const)' Function 0x251fb7d5ea8 'ssl_bio_set_up' 'SSL_BIO_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x251fb7d8378 <.//openssl//file_jk/after\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x251fb7d82c0 <col:26> 'const char [26]' lvalue __func__
|   |         `-StringLiteral 0x251fb7d8288 <col:26> 'const char [26]' lvalue "test_ssl_bio_pop_next_bio"
|   |-DeclStmt 0x251fb7d8450 <line:48:5, .//openssl//file_jk/after\test\sslapitest.c:855:61>
|   | `-VarDecl 0x251fb7d83c0 <.//openssl//file_jk/after\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x251fb7d8428 <col:18> 'int' 0
|   |-BinaryOperator 0x251fb7d85b0 <line:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x251fb7d8468 <col:9> 'int' lvalue Var 0x251fb7d83c0 'result' 'int'
|   | `-CallExpr 0x251fb7d8570 <.//openssl//file_jk/after\test\sslapitest.c:857:18, .//openssl//file_jk/after\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x251fb7d8558 <.//openssl//file_jk/after\test\sslapitest.c:857:18> 'int (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x251fb7d84a0 <col:18> 'int (SSL_BIO_TEST_FIXTURE)' Function 0x251fb7ce5a0 'execute_test_ssl_bio' 'int (SSL_BIO_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x251fb7d8598 <.//openssl//file_jk/after\test/testutil.h:51:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x251fb7d84c0 <col:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d81c8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |-CallExpr 0x251fb7d8680 <.//openssl//file_jk/after\test\sslapitest.c:857:40, .//openssl//file_jk/after\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x251fb7d8668 <.//openssl//file_jk/after\test\sslapitest.c:857:40> 'void (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7d85d0 <col:40> 'void (SSL_BIO_TEST_FIXTURE)' Function 0x251fb7ce3a8 'ssl_bio_tear_down' 'void (SSL_BIO_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x251fb7d86a8 <.//openssl//file_jk/after\test/testutil.h:52:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x251fb7d85f0 <col:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d81c8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   `-ReturnStmt 0x251fb7d86f8 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x251fb7d86e0 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7d86c0 <col:16> 'int' lvalue Var 0x251fb7d83c0 'result' 'int'
|-FunctionDecl 0x251fb7d87e0 <.//openssl//file_jk/after\test\sslapitest.c:860:1, line:867:1> line:860:12 used test_ssl_bio_pop_ssl_bio 'int (void)' static
| `-CompoundStmt 0x251fb7d8d60 <line:861:1, line:867:1>
|   |-DeclStmt 0x251fb7d8a08 <line:862:24, .//openssl//file_jk/after\test/testutil.h:47:55>
|   | `-VarDecl 0x251fb7d88a8 <.//openssl//file_jk/after\test\sslapitest.c:862:24, .//openssl//file_jk/after\test/testutil.h:47:54> col:23 used fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' cinit
|   |   `-CallExpr 0x251fb7d89c8 <.//openssl//file_jk/after\test\sslapitest.c:862:46, .//openssl//file_jk/after\test/testutil.h:47:54> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |     |-ImplicitCastExpr 0x251fb7d89b0 <.//openssl//file_jk/after\test\sslapitest.c:862:46> 'SSL_BIO_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x251fb7d8910 <col:46> 'SSL_BIO_TEST_FIXTURE (const char *const)' Function 0x251fb7d5ea8 'ssl_bio_set_up' 'SSL_BIO_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x251fb7d89f0 <.//openssl//file_jk/after\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x251fb7d8998 <col:26> 'const char [25]' lvalue __func__
|   |         `-StringLiteral 0x251fb7d8968 <col:26> 'const char [25]' lvalue "test_ssl_bio_pop_ssl_bio"
|   |-DeclStmt 0x251fb7d8ac8 <line:48:5, .//openssl//file_jk/after\test\sslapitest.c:862:61>
|   | `-VarDecl 0x251fb7d8a38 <.//openssl//file_jk/after\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x251fb7d8aa0 <col:18> 'int' 0
|   |-BinaryOperator 0x251fb7d8b70 <.//openssl//file_jk/after\test\sslapitest.c:864:5, col:23> 'int' '='
|   | |-MemberExpr 0x251fb7d8b18 <col:5, col:13> 'int' lvalue .pop_ssl 0x251fb7d5998
|   | | `-DeclRefExpr 0x251fb7d8ae0 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d88a8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-IntegerLiteral 0x251fb7d8b48 <col:23> 'int' 1
|   |-BinaryOperator 0x251fb7d8c60 <.//openssl//file_jk/after\test/testutil.h:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x251fb7d8b90 <col:9> 'int' lvalue Var 0x251fb7d8a38 'result' 'int'
|   | `-CallExpr 0x251fb7d8c20 <.//openssl//file_jk/after\test\sslapitest.c:866:18, .//openssl//file_jk/after\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x251fb7d8c08 <.//openssl//file_jk/after\test\sslapitest.c:866:18> 'int (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x251fb7d8bc8 <col:18> 'int (SSL_BIO_TEST_FIXTURE)' Function 0x251fb7ce5a0 'execute_test_ssl_bio' 'int (SSL_BIO_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x251fb7d8c48 <.//openssl//file_jk/after\test/testutil.h:51:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x251fb7d8be8 <col:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d88a8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |-CallExpr 0x251fb7d8cd8 <.//openssl//file_jk/after\test\sslapitest.c:866:40, .//openssl//file_jk/after\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x251fb7d8cc0 <.//openssl//file_jk/after\test\sslapitest.c:866:40> 'void (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7d8c80 <col:40> 'void (SSL_BIO_TEST_FIXTURE)' Function 0x251fb7ce3a8 'ssl_bio_tear_down' 'void (SSL_BIO_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x251fb7d8d00 <.//openssl//file_jk/after\test/testutil.h:52:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x251fb7d8ca0 <col:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d88a8 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   `-ReturnStmt 0x251fb7d8d50 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x251fb7d8d38 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7d8d18 <col:16> 'int' lvalue Var 0x251fb7d8a38 'result' 'int'
|-FunctionDecl 0x251fb7d8e40 <.//openssl//file_jk/after\test\sslapitest.c:869:1, line:876:1> line:869:12 used test_ssl_bio_change_rbio 'int (void)' static
| `-CompoundStmt 0x251fb7d7398 <line:870:1, line:876:1>
|   |-DeclStmt 0x251fb7d9030 <line:871:24, .//openssl//file_jk/after\test/testutil.h:47:55>
|   | `-VarDecl 0x251fb7d8f08 <.//openssl//file_jk/after\test\sslapitest.c:871:24, .//openssl//file_jk/after\test/testutil.h:47:54> col:23 used fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' cinit
|   |   `-CallExpr 0x251fb7d8ff0 <.//openssl//file_jk/after\test\sslapitest.c:871:46, .//openssl//file_jk/after\test/testutil.h:47:54> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |     |-ImplicitCastExpr 0x251fb7d8fd8 <.//openssl//file_jk/after\test\sslapitest.c:871:46> 'SSL_BIO_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x251fb7d8f70 <col:46> 'SSL_BIO_TEST_FIXTURE (const char *const)' Function 0x251fb7d5ea8 'ssl_bio_set_up' 'SSL_BIO_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x251fb7d9018 <.//openssl//file_jk/after\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x251fb7d8fc0 <col:26> 'const char [25]' lvalue __func__
|   |         `-StringLiteral 0x251fb7d8f90 <col:26> 'const char [25]' lvalue "test_ssl_bio_change_rbio"
|   |-DeclStmt 0x251fb7d70f0 <line:48:5, .//openssl//file_jk/after\test\sslapitest.c:871:61>
|   | `-VarDecl 0x251fb7d9060 <.//openssl//file_jk/after\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x251fb7d90c8 <col:18> 'int' 0
|   |-BinaryOperator 0x251fb7d71a8 <.//openssl//file_jk/after\test\sslapitest.c:873:5, col:26> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' '='
|   | |-MemberExpr 0x251fb7d7140 <col:5, col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' lvalue .change_bio 0x251fb7d5c38
|   | | `-DeclRefExpr 0x251fb7d7108 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d8f08 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-ImplicitCastExpr 0x251fb7d7190 <col:26> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' <IntegralCast>
|   |   `-DeclRefExpr 0x251fb7d7170 <col:26> 'int' EnumConstant 0x251fb7d5b28 'CHANGE_RBIO' 'int'
|   |-BinaryOperator 0x251fb7d7298 <.//openssl//file_jk/after\test/testutil.h:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x251fb7d71c8 <col:9> 'int' lvalue Var 0x251fb7d9060 'result' 'int'
|   | `-CallExpr 0x251fb7d7258 <.//openssl//file_jk/after\test\sslapitest.c:875:18, .//openssl//file_jk/after\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x251fb7d7240 <.//openssl//file_jk/after\test\sslapitest.c:875:18> 'int (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x251fb7d7200 <col:18> 'int (SSL_BIO_TEST_FIXTURE)' Function 0x251fb7ce5a0 'execute_test_ssl_bio' 'int (SSL_BIO_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x251fb7d7280 <.//openssl//file_jk/after\test/testutil.h:51:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x251fb7d7220 <col:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d8f08 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |-CallExpr 0x251fb7d7310 <.//openssl//file_jk/after\test\sslapitest.c:875:40, .//openssl//file_jk/after\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x251fb7d72f8 <.//openssl//file_jk/after\test\sslapitest.c:875:40> 'void (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7d72b8 <col:40> 'void (SSL_BIO_TEST_FIXTURE)' Function 0x251fb7ce3a8 'ssl_bio_tear_down' 'void (SSL_BIO_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x251fb7d7338 <.//openssl//file_jk/after\test/testutil.h:52:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x251fb7d72d8 <col:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d8f08 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   `-ReturnStmt 0x251fb7d7388 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x251fb7d7370 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7d7350 <col:16> 'int' lvalue Var 0x251fb7d9060 'result' 'int'
|-FunctionDecl 0x251fb7d7478 <.//openssl//file_jk/after\test\sslapitest.c:878:1, line:885:1> line:878:12 used test_ssl_bio_change_wbio 'int (void)' static
| `-CompoundStmt 0x251fb7d79d0 <line:879:1, line:885:1>
|   |-DeclStmt 0x251fb7d7668 <line:880:24, .//openssl//file_jk/after\test/testutil.h:47:55>
|   | `-VarDecl 0x251fb7d7540 <.//openssl//file_jk/after\test\sslapitest.c:880:24, .//openssl//file_jk/after\test/testutil.h:47:54> col:23 used fixture 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' cinit
|   |   `-CallExpr 0x251fb7d7628 <.//openssl//file_jk/after\test\sslapitest.c:880:46, .//openssl//file_jk/after\test/testutil.h:47:54> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |     |-ImplicitCastExpr 0x251fb7d7610 <.//openssl//file_jk/after\test\sslapitest.c:880:46> 'SSL_BIO_TEST_FIXTURE (*)(const char *const)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x251fb7d75a8 <col:46> 'SSL_BIO_TEST_FIXTURE (const char *const)' Function 0x251fb7d5ea8 'ssl_bio_set_up' 'SSL_BIO_TEST_FIXTURE (const char *const)'
|   |     `-ImplicitCastExpr 0x251fb7d7650 <.//openssl//file_jk/after\test/testutil.h:68:26> 'const char *' <ArrayToPointerDecay>
|   |       `-PredefinedExpr 0x251fb7d75f8 <col:26> 'const char [25]' lvalue __func__
|   |         `-StringLiteral 0x251fb7d75c8 <col:26> 'const char [25]' lvalue "test_ssl_bio_change_wbio"
|   |-DeclStmt 0x251fb7d7728 <line:48:5, .//openssl//file_jk/after\test\sslapitest.c:880:61>
|   | `-VarDecl 0x251fb7d7698 <.//openssl//file_jk/after\test/testutil.h:48:5, col:18> col:9 used result 'int' cinit
|   |   `-IntegerLiteral 0x251fb7d7700 <col:18> 'int' 0
|   |-BinaryOperator 0x251fb7d77e0 <.//openssl//file_jk/after\test\sslapitest.c:882:5, col:26> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' '='
|   | |-MemberExpr 0x251fb7d7778 <col:5, col:13> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' lvalue .change_bio 0x251fb7d5c38
|   | | `-DeclRefExpr 0x251fb7d7740 <col:5> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d7540 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   | `-ImplicitCastExpr 0x251fb7d77c8 <col:26> 'enum (anonymous enum at .//openssl//file_jk/after\test\sslapitest.c:772:5)':'enum ssl_bio_test_fixture::(anonymous at .//openssl//file_jk/after\test\sslapitest.c:772:5)' <IntegralCast>
|   |   `-DeclRefExpr 0x251fb7d77a8 <col:26> 'int' EnumConstant 0x251fb7d5b80 'CHANGE_WBIO' 'int'
|   |-BinaryOperator 0x251fb7d78d0 <.//openssl//file_jk/after\test/testutil.h:51:9, col:38> 'int' '='
|   | |-DeclRefExpr 0x251fb7d7800 <col:9> 'int' lvalue Var 0x251fb7d7698 'result' 'int'
|   | `-CallExpr 0x251fb7d7890 <.//openssl//file_jk/after\test\sslapitest.c:884:18, .//openssl//file_jk/after\test/testutil.h:51:38> 'int'
|   |   |-ImplicitCastExpr 0x251fb7d7878 <.//openssl//file_jk/after\test\sslapitest.c:884:18> 'int (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x251fb7d7838 <col:18> 'int (SSL_BIO_TEST_FIXTURE)' Function 0x251fb7ce5a0 'execute_test_ssl_bio' 'int (SSL_BIO_TEST_FIXTURE)'
|   |   `-ImplicitCastExpr 0x251fb7d78b8 <.//openssl//file_jk/after\test/testutil.h:51:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |     `-DeclRefExpr 0x251fb7d7858 <col:31> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d7540 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   |-CallExpr 0x251fb7d7948 <.//openssl//file_jk/after\test\sslapitest.c:884:40, .//openssl//file_jk/after\test/testutil.h:52:26> 'void'
|   | |-ImplicitCastExpr 0x251fb7d7930 <.//openssl//file_jk/after\test\sslapitest.c:884:40> 'void (*)(SSL_BIO_TEST_FIXTURE)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7d78f0 <col:40> 'void (SSL_BIO_TEST_FIXTURE)' Function 0x251fb7ce3a8 'ssl_bio_tear_down' 'void (SSL_BIO_TEST_FIXTURE)'
|   | `-ImplicitCastExpr 0x251fb7d7970 <.//openssl//file_jk/after\test/testutil.h:52:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' <LValueToRValue>
|   |   `-DeclRefExpr 0x251fb7d7910 <col:19> 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture' lvalue Var 0x251fb7d7540 'fixture' 'SSL_BIO_TEST_FIXTURE':'struct ssl_bio_test_fixture'
|   `-ReturnStmt 0x251fb7d79c0 <line:53:9, col:16>
|     `-ImplicitCastExpr 0x251fb7d79a8 <col:16> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7d7988 <col:16> 'int' lvalue Var 0x251fb7d7698 'result' 'int'
|-RecordDecl 0x251fb7d7a10 <.//openssl//file_jk/after\test\sslapitest.c:887:9, line:898:1> line:887:9 struct definition
| |-FieldDecl 0x251fb7d7ae8 <line:889:5, col:16> col:16 referenced list 'const int *'
| |-FieldDecl 0x251fb7d7b50 <line:891:5, col:12> col:12 referenced listlen 'size_t':'unsigned long long'
| |-FieldDecl 0x251fb7d7bc0 <line:893:5, col:17> col:17 referenced liststr 'const char *'
| |-FieldDecl 0x251fb7d7c30 <line:895:5, col:9> col:9 referenced valid 'int'
| `-FieldDecl 0x251fb7d7ca0 <line:897:5, col:9> col:9 referenced connsuccess 'int'
|-TypedefDecl 0x251fb7d7d58 <line:887:1, line:898:3> col:3 referenced sigalgs_list 'struct sigalgs_list':'sigalgs_list'
| `-ElaboratedType 0x251fb7d7d00 'struct sigalgs_list' sugar
|   `-RecordType 0x251fb7d7ab0 'sigalgs_list'
|     `-Record 0x251fb7d7a10 ''
|-VarDecl 0x251fb7d7e50 <line:900:1, col:29> col:18 used validlist1 'const int []' static
|-VarDecl 0x251fb7d7ef8 <line:901:1, col:29> col:18 used validlist2 'const int []' static
|-VarDecl 0x251fb7d7fa0 <line:902:1, col:29> col:18 used validlist3 'const int []' static
|-VarDecl 0x251fb7d8048 <line:903:1, col:31> col:18 used invalidlist1 'const int []' static
|-VarDecl 0x251fb7d20a0 <line:904:1, col:31> col:18 used invalidlist2 'const int []' static
|-VarDecl 0x251fb7d2148 <line:905:1, col:31> col:18 used invalidlist3 'const int []' static
|-VarDecl 0x251fb7d21f0 <line:906:1, col:31> col:18 used invalidlist4 'const int []' static
|-VarDecl 0x251fb7d2308 <line:907:1, line:921:31> line:907:27 used testsigalgs 'const sigalgs_list [14]' static cinit
| `-InitListExpr 0x251fb7dc0d8 <col:43, line:921:31> 'const sigalgs_list [14]'
|   |-InitListExpr 0x251fb7dc140 <line:908:5, col:52> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dc1a8 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7d2370 <col:6> 'const int []' lvalue Var 0x251fb7d7e50 'validlist1' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc1c0 <col:18, col:39> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x251fb7d24c8 <col:18, col:39> 'int'
|   | |   |-ImplicitCastExpr 0x251fb7d24b0 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x251fb7d2470 <col:18> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x251fb7d24f0 <col:29> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x251fb7d2490 <col:29> 'const int []' lvalue Var 0x251fb7d7e50 'validlist1' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc1d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7d2570 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7d2548 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7d2508 <col:26> 'int' 0
|   | |-IntegerLiteral 0x251fb7d2590 <.//openssl//file_jk/after\test\sslapitest.c:908:48> 'int' 1
|   | `-IntegerLiteral 0x251fb7d25b8 <col:51> 'int' 1
|   |-InitListExpr 0x251fb7dc208 <line:909:5, col:52> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dc270 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7d2648 <col:6> 'const int []' lvalue Var 0x251fb7d7ef8 'validlist2' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc288 <col:18, col:39> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x251fb7d26c0 <col:18, col:39> 'int'
|   | |   |-ImplicitCastExpr 0x251fb7d26a8 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x251fb7d2668 <col:18> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x251fb7d26e8 <col:29> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x251fb7d2688 <col:29> 'const int []' lvalue Var 0x251fb7d7ef8 'validlist2' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc2a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7d2768 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7d2740 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7d2700 <col:26> 'int' 0
|   | |-IntegerLiteral 0x251fb7d2788 <.//openssl//file_jk/after\test\sslapitest.c:909:48> 'int' 1
|   | `-IntegerLiteral 0x251fb7d27b0 <col:51> 'int' 1
|   |-InitListExpr 0x251fb7dc2d8 <line:910:5, col:52> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dc340 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7d2840 <col:6> 'const int []' lvalue Var 0x251fb7d7fa0 'validlist3' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc358 <col:18, col:39> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x251fb7d28b8 <col:18, col:39> 'int'
|   | |   |-ImplicitCastExpr 0x251fb7d28a0 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x251fb7d2860 <col:18> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x251fb7d28e0 <col:29> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x251fb7d2880 <col:29> 'const int []' lvalue Var 0x251fb7d7fa0 'validlist3' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc370 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7d2960 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7d2938 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7d28f8 <col:26> 'int' 0
|   | |-IntegerLiteral 0x251fb7d2980 <.//openssl//file_jk/after\test\sslapitest.c:910:48> 'int' 1
|   | `-IntegerLiteral 0x251fb7d29a8 <col:51> 'int' 0
|   |-InitListExpr 0x251fb7dc3b8 <line:911:5, col:33> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dc420 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7d2aa0 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7d2a78 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7d2a38 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dc438 <.//openssl//file_jk/after\test\sslapitest.c:911:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x251fb7d2ac0 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dc468 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x251fb7dc450 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x251fb7d2b28 <col:15> 'char [11]' lvalue "RSA+SHA256"
|   | |-IntegerLiteral 0x251fb7d2b50 <col:29> 'int' 1
|   | `-IntegerLiteral 0x251fb7d2b78 <col:32> 'int' 1
|   |-InitListExpr 0x251fb7dc490 <line:912:5, col:46> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dc4f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7d2c70 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7d2c48 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7d2c08 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dc510 <.//openssl//file_jk/after\test\sslapitest.c:912:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x251fb7d2c90 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dc540 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x251fb7dc528 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x251fb7d2cf8 <col:15> 'char [24]' lvalue "RSA+SHA256:ECDSA+SHA512"
|   | |-IntegerLiteral 0x251fb7d2d28 <col:42> 'int' 1
|   | `-IntegerLiteral 0x251fb7d2d50 <col:45> 'int' 1
|   |-InitListExpr 0x251fb7dc5a8 <line:913:5, col:35> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dc610 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7d2e48 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7d2e20 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7d2de0 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dc628 <.//openssl//file_jk/after\test\sslapitest.c:913:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x251fb7d2e68 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dc658 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x251fb7dc640 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x251fb7d2ec8 <col:15> 'char [13]' lvalue "ECDSA+SHA512"
|   | |-IntegerLiteral 0x251fb7d2ef0 <col:31> 'int' 1
|   | `-IntegerLiteral 0x251fb7d2f18 <col:34> 'int' 0
|   |-InitListExpr 0x251fb7dc680 <line:914:5, col:56> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dc6e8 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7d2fa8 <col:6> 'const int []' lvalue Var 0x251fb7d8048 'invalidlist1' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc700 <col:20, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x251fb7d3020 <col:20, col:43> 'int'
|   | |   |-ImplicitCastExpr 0x251fb7d3008 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x251fb7d2fc8 <col:20> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x251fb7d3048 <col:31> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x251fb7d2fe8 <col:31> 'const int []' lvalue Var 0x251fb7d8048 'invalidlist1' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc718 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7db158 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7db130 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7d3060 <col:26> 'int' 0
|   | |-IntegerLiteral 0x251fb7db178 <.//openssl//file_jk/after\test\sslapitest.c:914:52> 'int' 0
|   | `-IntegerLiteral 0x251fb7db1a0 <col:55> 'int' 0
|   |-InitListExpr 0x251fb7dc740 <line:915:5, col:56> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dc7a8 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7db230 <col:6> 'const int []' lvalue Var 0x251fb7d20a0 'invalidlist2' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc7c0 <col:20, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x251fb7db2a8 <col:20, col:43> 'int'
|   | |   |-ImplicitCastExpr 0x251fb7db290 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x251fb7db250 <col:20> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x251fb7db2d0 <col:31> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x251fb7db270 <col:31> 'const int []' lvalue Var 0x251fb7d20a0 'invalidlist2' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc7d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7db350 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7db328 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7db2e8 <col:26> 'int' 0
|   | |-IntegerLiteral 0x251fb7db370 <.//openssl//file_jk/after\test\sslapitest.c:915:52> 'int' 0
|   | `-IntegerLiteral 0x251fb7db398 <col:55> 'int' 0
|   |-InitListExpr 0x251fb7dc800 <line:916:5, col:56> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dc868 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7db428 <col:6> 'const int []' lvalue Var 0x251fb7d2148 'invalidlist3' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc880 <col:20, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x251fb7db4a0 <col:20, col:43> 'int'
|   | |   |-ImplicitCastExpr 0x251fb7db488 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x251fb7db448 <col:20> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x251fb7db4c8 <col:31> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x251fb7db468 <col:31> 'const int []' lvalue Var 0x251fb7d2148 'invalidlist3' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc898 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7db548 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7db520 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7db4e0 <col:26> 'int' 0
|   | |-IntegerLiteral 0x251fb7db568 <.//openssl//file_jk/after\test\sslapitest.c:916:52> 'int' 0
|   | `-IntegerLiteral 0x251fb7db590 <col:55> 'int' 0
|   |-InitListExpr 0x251fb7dc940 <line:917:5, col:56> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dc9a8 <col:6> 'const int *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x251fb7db620 <col:6> 'const int []' lvalue Var 0x251fb7d21f0 'invalidlist4' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc9c0 <col:20, col:43> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-CallExpr 0x251fb7db698 <col:20, col:43> 'int'
|   | |   |-ImplicitCastExpr 0x251fb7db680 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x251fb7db640 <col:20> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
|   | |   `-ImplicitCastExpr 0x251fb7db6c0 <col:31> 'const int *' <ArrayToPointerDecay>
|   | |     `-DeclRefExpr 0x251fb7db660 <col:31> 'const int []' lvalue Var 0x251fb7d21f0 'invalidlist4' 'const int []'
|   | |-ImplicitCastExpr 0x251fb7dc9d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7db740 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7db718 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7db6d8 <col:26> 'int' 0
|   | |-IntegerLiteral 0x251fb7db760 <.//openssl//file_jk/after\test\sslapitest.c:917:52> 'int' 0
|   | `-IntegerLiteral 0x251fb7db788 <col:55> 'int' 0
|   |-InitListExpr 0x251fb7dca00 <line:918:5, col:26> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dca68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7db880 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7db858 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7db818 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dca80 <.//openssl//file_jk/after\test\sslapitest.c:918:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x251fb7db8a0 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dcab0 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x251fb7dca98 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x251fb7db908 <col:15> 'char [4]' lvalue "RSA"
|   | |-IntegerLiteral 0x251fb7db928 <col:22> 'int' 0
|   | `-IntegerLiteral 0x251fb7db950 <col:25> 'int' 0
|   |-InitListExpr 0x251fb7dcad8 <line:919:5, col:29> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dcb40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7dba48 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7dba20 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7db9e0 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dcb58 <.//openssl//file_jk/after\test\sslapitest.c:919:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x251fb7dba68 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dcb88 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x251fb7dcb70 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x251fb7dbac8 <col:15> 'char [7]' lvalue "SHA256"
|   | |-IntegerLiteral 0x251fb7dbae8 <col:25> 'int' 0
|   | `-IntegerLiteral 0x251fb7dbb10 <col:28> 'int' 0
|   |-InitListExpr 0x251fb7dcbb0 <line:920:5, col:40> 'sigalgs_list':'sigalgs_list'
|   | |-ImplicitCastExpr 0x251fb7dcc18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|   | | `-ParenExpr 0x251fb7dbc08 <col:17, col:27> 'void *'
|   | |   `-CStyleCastExpr 0x251fb7dbbe0 <col:18, col:26> 'void *' <NullToPointer>
|   | |     `-IntegerLiteral 0x251fb7dbba0 <col:26> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dcc30 <.//openssl//file_jk/after\test\sslapitest.c:920:12> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x251fb7dbc28 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x251fb7dcc60 <col:15> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x251fb7dcc48 <col:15> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x251fb7dbc88 <col:15> 'char [18]' lvalue "RSA+SHA256:SHA256"
|   | |-IntegerLiteral 0x251fb7dbcb8 <col:36> 'int' 0
|   | `-IntegerLiteral 0x251fb7dbce0 <col:39> 'int' 0
|   `-InitListExpr 0x251fb7dcc88 <line:921:5, col:30> 'sigalgs_list':'sigalgs_list'
|     |-ImplicitCastExpr 0x251fb7dccf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const int *' <NullToPointer>
|     | `-ParenExpr 0x251fb7dbdd8 <col:17, col:27> 'void *'
|     |   `-CStyleCastExpr 0x251fb7dbdb0 <col:18, col:26> 'void *' <NullToPointer>
|     |     `-IntegerLiteral 0x251fb7dbd70 <col:26> 'int' 0
|     |-ImplicitCastExpr 0x251fb7dcd08 <.//openssl//file_jk/after\test\sslapitest.c:921:12> 'size_t':'unsigned long long' <IntegralCast>
|     | `-IntegerLiteral 0x251fb7dbdf8 <col:12> 'int' 0
|     |-ImplicitCastExpr 0x251fb7dcd38 <col:15> 'const char *' <NoOp>
|     | `-ImplicitCastExpr 0x251fb7dcd20 <col:15> 'char *' <ArrayToPointerDecay>
|     |   `-StringLiteral 0x251fb7dbe58 <col:15> 'char [8]' lvalue "Invalid"
|     |-IntegerLiteral 0x251fb7dbe78 <col:26> 'int' 0
|     `-IntegerLiteral 0x251fb7dbea0 <col:29> 'int' 0
|-FunctionDecl 0x251fb7d23b8 <<invalid sloc>> line:908:18 implicit used OSSL_NELEM 'int ()'
|-FunctionDecl 0x251fb7dced8 <line:923:1, line:1006:1> line:923:12 used test_set_sigalgs 'int (int)' static
| |-ParmVarDecl 0x251fb7dce28 <col:29, col:33> col:33 used idx 'int'
| `-CompoundStmt 0x251fb7da9e0 <line:924:1, line:1006:1>
|   |-DeclStmt 0x251fb7dd280 <line:927:5, col:23>
|   | `-VarDecl 0x251fb7dd1f0 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x251fb7dd258 <col:22> 'int' 0
|   |-DeclStmt 0x251fb7dd370 <line:928:5, col:29>
|   | `-VarDecl 0x251fb7dd308 <col:5, col:25> col:25 used curr 'const sigalgs_list *'
|   |-DeclStmt 0x251fb7dd408 <line:929:5, col:16>
|   | `-VarDecl 0x251fb7dd3a0 <col:5, col:9> col:9 used testctx 'int'
|   |-IfStmt 0x251fb7dd5e0 <line:932:5, line:933:16>
|   | |-BinaryOperator 0x251fb7dd588 <line:932:9, col:50> 'int' '>='
|   | | |-CStyleCastExpr 0x251fb7dd468 <col:9, col:17> 'size_t':'unsigned long long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x251fb7dd450 <col:17> 'int' <LValueToRValue> part_of_explicit_cast
|   | | |   `-DeclRefExpr 0x251fb7dd420 <col:17> 'int' lvalue ParmVar 0x251fb7dce28 'idx' 'int'
|   | | `-ImplicitCastExpr 0x251fb7dd570 <col:24, col:50> 'unsigned long long' <IntegralCast>
|   | |   `-BinaryOperator 0x251fb7dd550 <col:24, col:50> 'int' '*'
|   | |     |-CallExpr 0x251fb7dd4e8 <col:24, col:46> 'int'
|   | |     | |-ImplicitCastExpr 0x251fb7dd4d0 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x251fb7dd490 <col:24> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
|   | |     | `-ImplicitCastExpr 0x251fb7dd510 <col:35> 'const sigalgs_list *' <ArrayToPointerDecay>
|   | |     |   `-DeclRefExpr 0x251fb7dd4b0 <col:35> 'const sigalgs_list [14]' lvalue Var 0x251fb7d2308 'testsigalgs' 'const sigalgs_list [14]'
|   | |     `-IntegerLiteral 0x251fb7dd528 <col:50> 'int' 2
|   | `-ReturnStmt 0x251fb7dd5d0 <line:933:9, col:16>
|   |   `-IntegerLiteral 0x251fb7dd5a8 <col:16> 'int' 0
|   |-BinaryOperator 0x251fb7dd790 <line:935:5, col:53> 'int' '='
|   | |-DeclRefExpr 0x251fb7dd5f8 <col:5> 'int' lvalue Var 0x251fb7dd3a0 'testctx' 'int'
|   | `-ParenExpr 0x251fb7dd770 <col:15, col:53> 'int'
|   |   `-BinaryOperator 0x251fb7dd750 <col:16, col:52> 'int' '<'
|   |     |-CStyleCastExpr 0x251fb7dd678 <col:16, col:24> 'size_t':'unsigned long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x251fb7dd660 <col:24> 'int' <LValueToRValue> part_of_explicit_cast
|   |     |   `-DeclRefExpr 0x251fb7dd630 <col:24> 'int' lvalue ParmVar 0x251fb7dce28 'idx' 'int'
|   |     `-ImplicitCastExpr 0x251fb7dd738 <col:30, col:52> 'unsigned long long' <IntegralCast>
|   |       `-CallExpr 0x251fb7dd6f8 <col:30, col:52> 'int'
|   |         |-ImplicitCastExpr 0x251fb7dd6e0 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x251fb7dd6a0 <col:30> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
|   |         `-ImplicitCastExpr 0x251fb7dd720 <col:41> 'const sigalgs_list *' <ArrayToPointerDecay>
|   |           `-DeclRefExpr 0x251fb7dd6c0 <col:41> 'const sigalgs_list [14]' lvalue Var 0x251fb7d2308 'testsigalgs' 'const sigalgs_list [14]'
|   |-BinaryOperator 0x251fb7ddb20 <line:936:5, line:937:64> 'const sigalgs_list *' '='
|   | |-DeclRefExpr 0x251fb7dd7b0 <line:936:5> 'const sigalgs_list *' lvalue Var 0x251fb7dd308 'curr' 'const sigalgs_list *'
|   | `-ConditionalOperator 0x251fb7ddaf0 <col:12, line:937:64> 'const sigalgs_list *'
|   |   |-ImplicitCastExpr 0x251fb7dda10 <line:936:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x251fb7dd7e8 <col:12> 'int' lvalue Var 0x251fb7dd3a0 'testctx' 'int'
|   |   |-UnaryOperator 0x251fb7dd898 <col:22, col:38> 'const sigalgs_list *' prefix '&' cannot overflow
|   |   | `-ArraySubscriptExpr 0x251fb7dd878 <col:23, col:38> 'const sigalgs_list':'const sigalgs_list' lvalue
|   |   |   |-ImplicitCastExpr 0x251fb7dd848 <col:23> 'const sigalgs_list *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x251fb7dd808 <col:23> 'const sigalgs_list [14]' lvalue Var 0x251fb7d2308 'testsigalgs' 'const sigalgs_list [14]'
|   |   |   `-ImplicitCastExpr 0x251fb7dd860 <col:35> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x251fb7dd828 <col:35> 'int' lvalue ParmVar 0x251fb7dce28 'idx' 'int'
|   |   `-UnaryOperator 0x251fb7dd9f8 <line:937:22, col:64> 'const sigalgs_list *' prefix '&' cannot overflow
|   |     `-ArraySubscriptExpr 0x251fb7dd9d8 <col:23, col:64> 'const sigalgs_list':'const sigalgs_list' lvalue
|   |       |-ImplicitCastExpr 0x251fb7dd9c0 <col:23> 'const sigalgs_list *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x251fb7dd8b0 <col:23> 'const sigalgs_list [14]' lvalue Var 0x251fb7d2308 'testsigalgs' 'const sigalgs_list [14]'
|   |       `-BinaryOperator 0x251fb7dd9a0 <col:35, col:63> 'int' '-'
|   |         |-ImplicitCastExpr 0x251fb7dd988 <col:35> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x251fb7dd8d0 <col:35> 'int' lvalue ParmVar 0x251fb7dce28 'idx' 'int'
|   |         `-CallExpr 0x251fb7dd948 <col:41, col:63> 'int'
|   |           |-ImplicitCastExpr 0x251fb7dd930 <col:41> 'int (*)()' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x251fb7dd8f0 <col:41> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
|   |           `-ImplicitCastExpr 0x251fb7dd970 <col:52> 'const sigalgs_list *' <ArrayToPointerDecay>
|   |             `-DeclRefExpr 0x251fb7dd910 <col:52> 'const sigalgs_list [14]' lvalue Var 0x251fb7d2308 'testsigalgs' 'const sigalgs_list [14]'
|   |-IfStmt 0x251fb7ddd80 <line:939:5, line:944:5>
|   | |-OpaqueValueExpr 0x251fb7ddd68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7ddd48 <line:941:46, line:944:5>
|   |   |-CallExpr 0x251fb7ddcb8 <line:942:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7ddca0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7ddc30 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7ddcf8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7ddce0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7ddc50 <col:16> 'char [31]' lvalue "Unable to create SSL_CTX pair\n"
|   |   `-ReturnStmt 0x251fb7ddd38 <line:943:9, col:16>
|   |     `-IntegerLiteral 0x251fb7ddd10 <col:16> 'int' 0
|   |-IfStmt 0x251fb7de928 <line:946:5, line:965:5>
|   | |-ImplicitCastExpr 0x251fb7dddb8 <line:946:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x251fb7ddd98 <col:9> 'int' lvalue Var 0x251fb7dd3a0 'testctx' 'int'
|   | `-CompoundStmt 0x251fb7de900 <col:18, line:965:5>
|   |   |-DeclStmt 0x251fb7dde50 <line:947:9, col:16>
|   |   | `-VarDecl 0x251fb7ddde8 <col:9, col:13> col:13 used ret 'int'
|   |   |-IfStmt 0x251fb7de6c8 <line:953:9, line:960:9>
|   |   | |-UnaryOperator 0x251fb7de3c8 <line:953:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x251fb7de3b0 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x251fb7de390 <col:14> 'int' lvalue Var 0x251fb7ddde8 'ret' 'int'
|   |   | `-CompoundStmt 0x251fb7de6a8 <col:19, line:960:9>
|   |   |   |-IfStmt 0x251fb7de618 <line:954:13, line:958:30> has_else
|   |   |   | |-ImplicitCastExpr 0x251fb7de448 <line:954:17, col:23> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x251fb7de418 <col:17, col:23> 'const int' lvalue ->valid 0x251fb7d7c30
|   |   |   | |   `-ImplicitCastExpr 0x251fb7de400 <col:17> 'const sigalgs_list *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x251fb7de3e0 <col:17> 'const sigalgs_list *' lvalue Var 0x251fb7dd308 'curr' 'const sigalgs_list *'
|   |   |   | |-CallExpr 0x251fb7de520 <line:955:17, line:956:27> 'int'
|   |   |   | | |-ImplicitCastExpr 0x251fb7de508 <line:955:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x251fb7de460 <col:17> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   |   | | |-ImplicitCastExpr 0x251fb7de568 <col:24> 'const char *' <NoOp>
|   |   |   | | | `-ImplicitCastExpr 0x251fb7de550 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |   | | |   `-StringLiteral 0x251fb7de480 <col:24> 'char [52]' lvalue "Unexpected failure setting sigalgs in SSL_CTX (%d)\n"
|   |   |   | | `-ImplicitCastExpr 0x251fb7de580 <line:956:24> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x251fb7de4d0 <col:24> 'int' lvalue ParmVar 0x251fb7dce28 'idx' 'int'
|   |   |   | `-BinaryOperator 0x251fb7de5f8 <line:958:17, col:30> 'int' '='
|   |   |   |   |-DeclRefExpr 0x251fb7de598 <col:17> 'int' lvalue Var 0x251fb7dd1f0 'testresult' 'int'
|   |   |   |   `-IntegerLiteral 0x251fb7de5d0 <col:30> 'int' 1
|   |   |   `-GotoStmt 0x251fb7de690 <line:959:13, col:18> 'end' 0x251fb7de640
|   |   `-IfStmt 0x251fb7de8e8 <line:961:9, line:964:9>
|   |     |-UnaryOperator 0x251fb7de760 <line:961:13, col:20> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x251fb7de748 <col:14, col:20> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x251fb7de718 <col:14, col:20> 'const int' lvalue ->valid 0x251fb7d7c30
|   |     |     `-ImplicitCastExpr 0x251fb7de700 <col:14> 'const sigalgs_list *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x251fb7de6e0 <col:14> 'const sigalgs_list *' lvalue Var 0x251fb7dd308 'curr' 'const sigalgs_list *'
|   |     `-CompoundStmt 0x251fb7de8c8 <col:27, line:964:9>
|   |       |-CallExpr 0x251fb7de838 <line:962:13, col:79> 'int'
|   |       | |-ImplicitCastExpr 0x251fb7de820 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x251fb7de778 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |       | |-ImplicitCastExpr 0x251fb7de880 <col:20> 'const char *' <NoOp>
|   |       | | `-ImplicitCastExpr 0x251fb7de868 <col:20> 'char *' <ArrayToPointerDecay>
|   |       | |   `-StringLiteral 0x251fb7de798 <col:20> 'char [52]' lvalue "Unexpected success setting sigalgs in SSL_CTX (%d)\n"
|   |       | `-ImplicitCastExpr 0x251fb7de898 <col:76> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x251fb7de7e8 <col:76> 'int' lvalue ParmVar 0x251fb7dce28 'idx' 'int'
|   |       `-GotoStmt 0x251fb7de8b0 <line:963:13, col:18> 'end' 0x251fb7de640
|   |-IfStmt 0x251fb7deb80 <line:967:5, line:970:5>
|   | |-OpaqueValueExpr 0x251fb7deb68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7deb48 <line:967:78, line:970:5>
|   |   |-CallExpr 0x251fb7dead8 <line:968:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7deac0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7dea50 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb7deb18 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb7deb00 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb7dea70 <col:16> 'char [30]' lvalue "Unable to create SSL objects\n"
|   |   `-GotoStmt 0x251fb7deb30 <line:969:9, col:14> 'end' 0x251fb7de640
|   |-IfStmt 0x251fb7da670 <line:972:5, line:990:5>
|   | |-UnaryOperator 0x251fb7debd0 <line:972:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x251fb7debb8 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x251fb7deb98 <col:10> 'int' lvalue Var 0x251fb7dd3a0 'testctx' 'int'
|   | `-CompoundStmt 0x251fb7da648 <col:19, line:990:5>
|   |   |-DeclStmt 0x251fb7dec68 <line:973:9, col:16>
|   |   | `-VarDecl 0x251fb7dec00 <col:9, col:13> col:13 used ret 'int'
|   |   |-IfStmt 0x251fb7da418 <line:979:9, line:985:9>
|   |   | |-UnaryOperator 0x251fb7da188 <line:979:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x251fb7da170 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x251fb7da150 <col:14> 'int' lvalue Var 0x251fb7dec00 'ret' 'int'
|   |   | `-CompoundStmt 0x251fb7da3f8 <col:19, line:985:9>
|   |   |   |-IfStmt 0x251fb7da3b8 <line:980:13, line:983:30> has_else
|   |   |   | |-ImplicitCastExpr 0x251fb7da208 <line:980:17, col:23> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x251fb7da1d8 <col:17, col:23> 'const int' lvalue ->valid 0x251fb7d7c30
|   |   |   | |   `-ImplicitCastExpr 0x251fb7da1c0 <col:17> 'const sigalgs_list *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x251fb7da1a0 <col:17> 'const sigalgs_list *' lvalue Var 0x251fb7dd308 'curr' 'const sigalgs_list *'
|   |   |   | |-CallExpr 0x251fb7da2d8 <line:981:17, col:79> 'int'
|   |   |   | | |-ImplicitCastExpr 0x251fb7da2c0 <col:17> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x251fb7da220 <col:17> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   |   | | |-ImplicitCastExpr 0x251fb7da320 <col:24> 'const char *' <NoOp>
|   |   |   | | | `-ImplicitCastExpr 0x251fb7da308 <col:24> 'char *' <ArrayToPointerDecay>
|   |   |   | | |   `-StringLiteral 0x251fb7da240 <col:24> 'char [48]' lvalue "Unexpected failure setting sigalgs in SSL (%d)\n"
|   |   |   | | `-ImplicitCastExpr 0x251fb7da338 <col:76> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x251fb7da288 <col:76> 'int' lvalue ParmVar 0x251fb7dce28 'idx' 'int'
|   |   |   | `-BinaryOperator 0x251fb7da398 <line:983:17, col:30> 'int' '='
|   |   |   |   |-DeclRefExpr 0x251fb7da350 <col:17> 'int' lvalue Var 0x251fb7dd1f0 'testresult' 'int'
|   |   |   |   `-IntegerLiteral 0x251fb7da370 <col:30> 'int' 1
|   |   |   `-GotoStmt 0x251fb7da3e0 <line:984:13, col:18> 'end' 0x251fb7de640
|   |   `-IfStmt 0x251fb7da630 <line:986:9, line:989:9>
|   |     |-UnaryOperator 0x251fb7da4b0 <line:986:13, col:20> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x251fb7da498 <col:14, col:20> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x251fb7da468 <col:14, col:20> 'const int' lvalue ->valid 0x251fb7d7c30
|   |     |     `-ImplicitCastExpr 0x251fb7da450 <col:14> 'const sigalgs_list *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x251fb7da430 <col:14> 'const sigalgs_list *' lvalue Var 0x251fb7dd308 'curr' 'const sigalgs_list *'
|   |     `-CompoundStmt 0x251fb7da610 <col:27, line:989:9>
|   |       |-CallExpr 0x251fb7da580 <line:987:13, col:75> 'int'
|   |       | |-ImplicitCastExpr 0x251fb7da568 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x251fb7da4c8 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |       | |-ImplicitCastExpr 0x251fb7da5c8 <col:20> 'const char *' <NoOp>
|   |       | | `-ImplicitCastExpr 0x251fb7da5b0 <col:20> 'char *' <ArrayToPointerDecay>
|   |       | |   `-StringLiteral 0x251fb7da4e8 <col:20> 'char [48]' lvalue "Unexpected success setting sigalgs in SSL (%d)\n"
|   |       | `-ImplicitCastExpr 0x251fb7da5e0 <col:72> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x251fb7da530 <col:72> 'int' lvalue ParmVar 0x251fb7dce28 'idx' 'int'
|   |       `-GotoStmt 0x251fb7da5f8 <line:988:13, col:18> 'end' 0x251fb7de640
|   |-IfStmt 0x251fb7da878 <line:992:5, line:995:5>
|   | |-OpaqueValueExpr 0x251fb7da860 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb7da840 <line:992:75, line:995:5>
|   |   |-CallExpr 0x251fb7da7b0 <line:993:9, col:77> 'int'
|   |   | |-ImplicitCastExpr 0x251fb7da798 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb7da6f0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | |-ImplicitCastExpr 0x251fb7da7f8 <col:16> 'const char *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x251fb7da7e0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | |   `-StringLiteral 0x251fb7da710 <col:16> 'char [54]' lvalue "Unexpected return value creating SSL connection (%d)\n"
|   |   | `-ImplicitCastExpr 0x251fb7da810 <col:74> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x251fb7da760 <col:74> 'int' lvalue ParmVar 0x251fb7dce28 'idx' 'int'
|   |   `-GotoStmt 0x251fb7da828 <line:994:9, col:14> 'end' 0x251fb7de640
|   |-BinaryOperator 0x251fb7da8d8 <line:997:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x251fb7da890 <col:5> 'int' lvalue Var 0x251fb7dd1f0 'testresult' 'int'
|   | `-IntegerLiteral 0x251fb7da8b0 <col:18> 'int' 1
|   |-LabelStmt 0x251fb7da920 <line:999:2, col:5> 'end'
|   | `-NullStmt 0x251fb7da918 <col:5>
|   `-ReturnStmt 0x251fb7da9d0 <line:1005:5, col:12>
|     `-ImplicitCastExpr 0x251fb7da9b8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb7da998 <col:12> 'int' lvalue Var 0x251fb7dd1f0 'testresult' 'int'
|-VarDecl 0x251fb7daa78 <line:1008:1, col:24> col:12 used clntaddcb 'int' static cinit
| `-IntegerLiteral 0x251fb7daae0 <col:24> 'int' 0
|-VarDecl 0x251fb7dab38 <line:1009:1, col:26> col:12 used clntparsecb 'int' static cinit
| `-IntegerLiteral 0x251fb7daba0 <col:26> 'int' 0
|-VarDecl 0x251fb7dabf8 <line:1010:1, col:23> col:12 used srvaddcb 'int' static cinit
| `-IntegerLiteral 0x251fb7dac60 <col:23> 'int' 0
|-VarDecl 0x251fb7dacb8 <line:1011:1, col:25> col:12 used srvparsecb 'int' static cinit
| `-IntegerLiteral 0x251fb7dad20 <col:25> 'int' 0
|-VarDecl 0x251fb7dad78 <line:1012:1, col:20> col:12 used snicb 'int' static cinit
| `-IntegerLiteral 0x251fb7dade0 <col:20> 'int' 0
|-FunctionDecl 0x251fb873150 <line:1016:1, line:1035:1> line:1016:12 invalid add_cb 'int (int *, unsigned int, const unsigned char **, size_t *, int *, void *)' static
| |-ParmVarDecl 0x251fb7dae38 <col:19, col:24> col:24 invalid s 'int *'
| |-ParmVarDecl 0x251fb7daeb8 <col:27, col:40> col:40 ext_type 'unsigned int'
| |-ParmVarDecl 0x251fb7daf40 <col:50, col:72> col:72 used out 'const unsigned char **'
| |-ParmVarDecl 0x251fb7db018 <line:1017:19, col:27> col:27 used outlen 'size_t *'
| |-ParmVarDecl 0x251fb7db098 <col:35, col:40> col:40 al 'int *'
| |-ParmVarDecl 0x251fb872fd0 <col:44, col:50> col:50 used add_arg 'void *'
| `-CompoundStmt 0x251fb873c68 <line:1018:1, line:1035:1>
|   |-DeclStmt 0x251fb873348 <line:1019:5, col:33>
|   | `-VarDecl 0x251fb873250 <col:5, col:26> col:10 used server 'int *' cinit
|   |   `-CStyleCastExpr 0x251fb873320 <col:19, col:26> 'int *' <BitCast>
|   |     `-ImplicitCastExpr 0x251fb873308 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x251fb8732b8 <col:26> 'void *' lvalue ParmVar 0x251fb872fd0 'add_arg' 'void *'
|   |-DeclStmt 0x251fb8733e0 <line:1020:5, col:24>
|   | `-VarDecl 0x251fb873378 <col:5, col:20> col:20 used data 'unsigned char *'
|   |-IfStmt 0x251fb873590 <line:1022:5, line:1025:18> has_else
|   | |-OpaqueValueExpr 0x251fb873578 <<invalid sloc>> '_Bool'
|   | |-UnaryOperator 0x251fb873528 <line:1023:9, col:17> 'int' postfix '++'
|   | | `-DeclRefExpr 0x251fb873508 <col:9> 'int' lvalue Var 0x251fb7dabf8 'srvaddcb' 'int'
|   | `-UnaryOperator 0x251fb873560 <line:1025:9, col:18> 'int' postfix '++'
|   |   `-DeclRefExpr 0x251fb873540 <col:9> 'int' lvalue Var 0x251fb7daa78 'clntaddcb' 'int'
|   |-IfStmt 0x251fb8739d8 <line:1027:5, line:1029:17>
|   | |-OpaqueValueExpr 0x251fb8739c0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x251fb8739b0 <col:9, col:17>
|   |   `-UnaryOperator 0x251fb873998 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x251fb873970 <col:17> 'int' 1
|   |-BinaryOperator 0x251fb873a80 <line:1031:5, col:13> 'unsigned char' '='
|   | |-UnaryOperator 0x251fb873a28 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x251fb873a10 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x251fb8739f0 <col:6> 'unsigned char *' lvalue Var 0x251fb873378 'data' 'unsigned char *'
|   | `-ImplicitCastExpr 0x251fb873a68 <col:13> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x251fb873a40 <col:13> 'int' 1
|   |-BinaryOperator 0x251fb873b58 <line:1032:5, col:12> 'const unsigned char *' '='
|   | |-UnaryOperator 0x251fb873af0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x251fb873ad8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x251fb873aa0 <col:6> 'const unsigned char **' lvalue ParmVar 0x251fb7daf40 'out' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x251fb873b40 <col:12> 'const unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x251fb873b28 <col:12> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x251fb873b08 <col:12> 'unsigned char *' lvalue Var 0x251fb873378 'data' 'unsigned char *'
|   |-BinaryOperator 0x251fb873c10 <line:1033:5, col:26> 'size_t':'unsigned long long' '='
|   | |-UnaryOperator 0x251fb873bc8 <col:5, col:6> 'size_t':'unsigned long long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x251fb873bb0 <col:6> 'size_t *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x251fb873b78 <col:6> 'size_t *' lvalue ParmVar 0x251fb7db018 'outlen' 'size_t *'
|   | `-UnaryExprOrTypeTraitExpr 0x251fb873bf0 <col:15, col:26> 'unsigned long long' sizeof 'char'
|   `-ReturnStmt 0x251fb873c58 <line:1034:5, col:12>
|     `-IntegerLiteral 0x251fb873c30 <col:12> 'int' 1
|-FunctionDecl 0x251fb873fe0 <line:1037:1, line:1041:1> line:1037:13 invalid free_cb 'void (int *, unsigned int, const unsigned char *, void *)' static
| |-ParmVarDecl 0x251fb873d00 <col:21, col:26> col:26 invalid s 'int *'
| |-ParmVarDecl 0x251fb873d80 <col:29, col:42> col:42 ext_type 'unsigned int'
| |-ParmVarDecl 0x251fb873e00 <col:52, col:73> col:73 used out 'const unsigned char *'
| |-ParmVarDecl 0x251fb873e80 <line:1038:21, col:27> col:27 add_arg 'void *'
| `-CompoundStmt 0x251fb874298 <line:1039:1, line:1041:1>
|   `-CallExpr 0x251fb874270 <line:1040:5, col:38> 'int'
|     |-ImplicitCastExpr 0x251fb874258 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x251fb8741a8 <col:5> 'int ()' Function 0x251fb8740e0 'OPENSSL_free' 'int ()'
|     `-CStyleCastExpr 0x251fb874230 <col:18, col:35> 'unsigned char *' <NoOp>
|       `-ImplicitCastExpr 0x251fb874218 <col:35> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x251fb8741c8 <col:35> 'const unsigned char *' lvalue ParmVar 0x251fb873e00 'out' 'const unsigned char *'
|-FunctionDecl 0x251fb8746f0 <line:1043:1, line:1059:1> line:1043:12 invalid parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x251fb8742f8 <col:21, col:26> col:26 invalid s 'int *'
| |-ParmVarDecl 0x251fb874378 <col:29, col:42> col:42 ext_type 'unsigned int'
| |-ParmVarDecl 0x251fb8743f8 <col:52, col:73> col:73 used in 'const unsigned char *'
| |-ParmVarDecl 0x251fb874470 <line:1044:21, col:28> col:28 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x251fb8744f0 <col:35, col:40> col:40 al 'int *'
| |-ParmVarDecl 0x251fb874570 <col:44, col:50> col:50 used parse_arg 'void *'
| `-CompoundStmt 0x251fb874c90 <line:1045:1, line:1059:1>
|   |-DeclStmt 0x251fb8748e8 <line:1046:5, col:35>
|   | `-VarDecl 0x251fb8747f0 <col:5, col:26> col:10 used server 'int *' cinit
|   |   `-CStyleCastExpr 0x251fb8748c0 <col:19, col:26> 'int *' <BitCast>
|   |     `-ImplicitCastExpr 0x251fb8748a8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x251fb874858 <col:26> 'void *' lvalue ParmVar 0x251fb874570 'parse_arg' 'void *'
|   |-IfStmt 0x251fb8749a8 <line:1048:5, line:1051:20> has_else
|   | |-OpaqueValueExpr 0x251fb874990 <<invalid sloc>> '_Bool'
|   | |-UnaryOperator 0x251fb874940 <line:1049:9, col:19> 'int' postfix '++'
|   | | `-DeclRefExpr 0x251fb874920 <col:9> 'int' lvalue Var 0x251fb7dacb8 'srvparsecb' 'int'
|   | `-UnaryOperator 0x251fb874978 <line:1051:9, col:20> 'int' postfix '++'
|   |   `-DeclRefExpr 0x251fb874958 <col:9> 'int' lvalue Var 0x251fb7dab38 'clntparsecb' 'int'
|   |-IfStmt 0x251fb874c40 <line:1053:5, line:1056:17>
|   | |-OpaqueValueExpr 0x251fb874c28 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x251fb874c18 <col:9, col:17>
|   |   `-UnaryOperator 0x251fb874c00 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x251fb874bd8 <col:17> 'int' 1
|   `-ReturnStmt 0x251fb874c80 <line:1058:5, col:12>
|     `-IntegerLiteral 0x251fb874c58 <col:12> 'int' 1
|-FunctionDecl 0x251fb874ef0 <line:1061:1, line:1071:1> line:1061:12 invalid sni_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x251fb874d08 <col:19, col:24> col:24 invalid s 'int *'
| |-ParmVarDecl 0x251fb874d88 <col:27, col:32> col:32 used al 'int *'
| |-ParmVarDecl 0x251fb874e08 <col:36, col:42> col:42 arg 'void *'
| `-CompoundStmt 0x251fb871228 <line:1062:1, line:1071:1>
|   |-IfStmt 0x251fb8711d8 <line:1065:5, line:1068:5>
|   | |-OpaqueValueExpr 0x251fb8711c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb8711b0 <line:1065:42, line:1068:5>
|   `-UnaryOperator 0x251fb871210 <line:1069:5, col:10> 'int' postfix '++'
|     `-DeclRefExpr 0x251fb8711f0 <col:5> 'int' lvalue Var 0x251fb7dad78 'snicb' 'int'
|-FunctionDecl 0x251fb871310 <line:1078:1, line:1209:1> line:1078:12 used test_custom_exts 'int (int)' static
| |-ParmVarDecl 0x251fb871260 <col:29, col:33> col:33 used tst 'int'
| `-CompoundStmt 0x251fb876618 <line:1079:1, line:1209:1>
|   |-DeclStmt 0x251fb871720 <line:1082:5, col:23>
|   | `-VarDecl 0x251fb871690 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x251fb8716f8 <col:22> 'int' 0
|   |-DeclStmt 0x251fb8717e0 <line:1083:5, col:26>
|   | `-VarDecl 0x251fb871750 <col:5, col:25> col:16 used server 'int' static cinit
|   |   `-IntegerLiteral 0x251fb8717b8 <col:25> 'int' 1
|   |-DeclStmt 0x251fb8718a0 <line:1084:5, col:26>
|   | `-VarDecl 0x251fb871810 <col:5, col:25> col:16 used client 'int' static cinit
|   |   `-IntegerLiteral 0x251fb871878 <col:25> 'int' 0
|   |-BinaryOperator 0x251fb871a48 <line:1088:5, col:55> 'int' '='
|   | |-DeclRefExpr 0x251fb871940 <col:5> 'int' lvalue Var 0x251fb7daa78 'clntaddcb' 'int'
|   | `-BinaryOperator 0x251fb871a28 <col:17, col:55> 'int' '='
|   |   |-DeclRefExpr 0x251fb871960 <col:17> 'int' lvalue Var 0x251fb7dab38 'clntparsecb' 'int'
|   |   `-BinaryOperator 0x251fb871a08 <col:31, col:55> 'int' '='
|   |     |-DeclRefExpr 0x251fb871980 <col:31> 'int' lvalue Var 0x251fb7dabf8 'srvaddcb' 'int'
|   |     `-BinaryOperator 0x251fb8719e8 <col:42, col:55> 'int' '='
|   |       |-DeclRefExpr 0x251fb8719a0 <col:42> 'int' lvalue Var 0x251fb7dacb8 'srvparsecb' 'int'
|   |       `-IntegerLiteral 0x251fb8719c0 <col:55> 'int' 0
|   |-BinaryOperator 0x251fb871ab0 <line:1089:5, col:13> 'int' '='
|   | |-DeclRefExpr 0x251fb871a68 <col:5> 'int' lvalue Var 0x251fb7dad78 'snicb' 'int'
|   | `-IntegerLiteral 0x251fb871a88 <col:13> 'int' 0
|   |-IfStmt 0x251fb871d40 <line:1091:5, line:1096:5>
|   | |-OpaqueValueExpr 0x251fb871d28 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb871d08 <line:1093:46, line:1096:5>
|   |   |-CallExpr 0x251fb871c48 <line:1094:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x251fb871c30 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb871bc0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb871c88 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb871c70 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb871be0 <col:16> 'char [31]' lvalue "Unable to create SSL_CTX pair\n"
|   |   `-GotoStmt 0x251fb871cf0 <line:1095:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb875108 <line:1098:5, line:1104:5>
|   | |-OpaqueValueExpr 0x251fb8750f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb8750d0 <line:1101:53, line:1104:5>
|   |   |-CallExpr 0x251fb875060 <line:1102:9, col:53> 'int'
|   |   | |-ImplicitCastExpr 0x251fb875048 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb871f80 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb8750a0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb875088 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb874ff0 <col:16> 'char [35]' lvalue "Unable to create SSL_CTX pair (2)\n"
|   |   `-GotoStmt 0x251fb8750b8 <line:1103:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb875418 <line:1107:5, line:1111:5>
|   | |-OpaqueValueExpr 0x251fb875400 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb8753e0 <line:1108:69, line:1111:5>
|   |   |-CallExpr 0x251fb875370 <line:1109:9, col:57> 'int'
|   |   | |-ImplicitCastExpr 0x251fb875358 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb8752e0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb8753b0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb875398 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb875300 <col:16> 'char [39]' lvalue "Unable to add client custom extension\n"
|   |   `-GotoStmt 0x251fb8753c8 <line:1110:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb875628 <line:1114:5, line:1118:5>
|   | |-OpaqueValueExpr 0x251fb875610 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb8755f0 <line:1115:68, line:1118:5>
|   |   |-CallExpr 0x251fb875580 <line:1116:9, col:65> 'int'
|   |   | |-ImplicitCastExpr 0x251fb875568 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb8754e8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb8755c0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb8755a8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb875508 <col:16> 'char [47]' lvalue "Unexpected success adding duplicate extension\n"
|   |   `-GotoStmt 0x251fb8755d8 <line:1117:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb875938 <line:1121:5, line:1125:5>
|   | |-OpaqueValueExpr 0x251fb875920 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb875900 <line:1122:69, line:1125:5>
|   |   |-CallExpr 0x251fb875890 <line:1123:9, col:57> 'int'
|   |   | |-ImplicitCastExpr 0x251fb875878 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb875800 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb8758d0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb8758b8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb875820 <col:16> 'char [39]' lvalue "Unable to add server custom extension\n"
|   |   `-GotoStmt 0x251fb8758e8 <line:1124:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb875bd0 <line:1126:5, line:1133:5>
|   | |-OpaqueValueExpr 0x251fb875bb8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb875b98 <line:1130:67, line:1133:5>
|   |   |-CallExpr 0x251fb875b28 <line:1131:9, col:65> 'int'
|   |   | |-ImplicitCastExpr 0x251fb875b10 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb875a90 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb875b68 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb875b50 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb875ab0 <col:16> 'char [47]' lvalue "Unable to add server custom extension for SNI\n"
|   |   `-GotoStmt 0x251fb875b80 <line:1132:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb875e20 <line:1136:5, line:1140:5>
|   | |-OpaqueValueExpr 0x251fb875e08 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb875de8 <line:1137:68, line:1140:5>
|   |   |-CallExpr 0x251fb875d78 <line:1138:9, col:69> 'int'
|   |   | |-ImplicitCastExpr 0x251fb875d60 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb875ca0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb875db8 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb875da0 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb875cf8 <col:16> 'char [51]' lvalue "Unexpected success adding duplicate extension (2)\n"
|   |   `-GotoStmt 0x251fb875dd0 <line:1139:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb877258 <line:1142:5, line:1149:5>
|   | |-BinaryOperator 0x251fb875e98 <line:1142:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x251fb875e80 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x251fb875e38 <col:9> 'int' lvalue ParmVar 0x251fb871260 'tst' 'int'
|   | | `-IntegerLiteral 0x251fb875e58 <col:16> 'int' 1
|   | `-CompoundStmt 0x251fb877240 <col:19, line:1149:5>
|   |   `-IfStmt 0x251fb877228 <line:1144:9, line:1148:9>
|   |     |-OpaqueValueExpr 0x251fb877210 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x251fb8771f0 <line:1145:69, line:1148:9>
|   |       |-CallExpr 0x251fb877180 <line:1146:13, col:48> 'int'
|   |       | |-ImplicitCastExpr 0x251fb877168 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x251fb8770f8 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x251fb8771c0 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x251fb8771a8 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x251fb877118 <col:20> 'char [26]' lvalue "Cannot set SNI callbacks\n"
|   |       `-GotoStmt 0x251fb8771d8 <line:1147:13, col:18> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb8774b0 <line:1151:5, line:1155:5>
|   | |-OpaqueValueExpr 0x251fb877498 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb877478 <line:1152:62, line:1155:5>
|   |   |-CallExpr 0x251fb877408 <line:1153:9, col:48> 'int'
|   |   | |-ImplicitCastExpr 0x251fb8773f0 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb877380 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb877448 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb877430 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb8773a0 <col:16> 'char [30]' lvalue "Cannot create SSL connection\n"
|   |   `-GotoStmt 0x251fb877460 <line:1154:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb877b00 <line:1157:5, line:1165:5>
|   | |-BinaryOperator 0x251fb8779c8 <line:1157:9, line:1162:39> 'int' '||'
|   | | |-BinaryOperator 0x251fb877868 <line:1157:9, line:1161:39> 'int' '||'
|   | | | |-BinaryOperator 0x251fb877708 <line:1157:9, line:1160:30> 'int' '||'
|   | | | | |-BinaryOperator 0x251fb877668 <line:1157:9, line:1159:28> 'int' '||'
|   | | | | | |-BinaryOperator 0x251fb8775c8 <line:1157:9, line:1158:31> 'int' '||'
|   | | | | | | |-BinaryOperator 0x251fb877528 <line:1157:9, col:22> 'int' '!='
|   | | | | | | | |-ImplicitCastExpr 0x251fb877510 <col:9> 'int' <LValueToRValue>
|   | | | | | | | | `-DeclRefExpr 0x251fb8774c8 <col:9> 'int' lvalue Var 0x251fb7daa78 'clntaddcb' 'int'
|   | | | | | | | `-IntegerLiteral 0x251fb8774e8 <col:22> 'int' 1
|   | | | | | | `-BinaryOperator 0x251fb8775a8 <line:1158:16, col:31> 'int' '!='
|   | | | | | |   |-ImplicitCastExpr 0x251fb877590 <col:16> 'int' <LValueToRValue>
|   | | | | | |   | `-DeclRefExpr 0x251fb877548 <col:16> 'int' lvalue Var 0x251fb7dab38 'clntparsecb' 'int'
|   | | | | | |   `-IntegerLiteral 0x251fb877568 <col:31> 'int' 1
|   | | | | | `-BinaryOperator 0x251fb877648 <line:1159:16, col:28> 'int' '!='
|   | | | | |   |-ImplicitCastExpr 0x251fb877630 <col:16> 'int' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x251fb8775e8 <col:16> 'int' lvalue Var 0x251fb7dabf8 'srvaddcb' 'int'
|   | | | | |   `-IntegerLiteral 0x251fb877608 <col:28> 'int' 1
|   | | | | `-BinaryOperator 0x251fb8776e8 <line:1160:16, col:30> 'int' '!='
|   | | | |   |-ImplicitCastExpr 0x251fb8776d0 <col:16> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x251fb877688 <col:16> 'int' lvalue Var 0x251fb7dacb8 'srvparsecb' 'int'
|   | | | |   `-IntegerLiteral 0x251fb8776a8 <col:30> 'int' 1
|   | | | `-ParenExpr 0x251fb877848 <line:1161:16, col:39> 'int'
|   | | |   `-BinaryOperator 0x251fb877828 <col:17, col:38> 'int' '&&'
|   | | |     |-BinaryOperator 0x251fb877788 <col:17, col:24> 'int' '!='
|   | | |     | |-ImplicitCastExpr 0x251fb877770 <col:17> 'int' <LValueToRValue>
|   | | |     | | `-DeclRefExpr 0x251fb877728 <col:17> 'int' lvalue ParmVar 0x251fb871260 'tst' 'int'
|   | | |     | `-IntegerLiteral 0x251fb877748 <col:24> 'int' 1
|   | | |     `-BinaryOperator 0x251fb877808 <col:29, col:38> 'int' '!='
|   | | |       |-ImplicitCastExpr 0x251fb8777f0 <col:29> 'int' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x251fb8777a8 <col:29> 'int' lvalue Var 0x251fb7dad78 'snicb' 'int'
|   | | |       `-IntegerLiteral 0x251fb8777c8 <col:38> 'int' 0
|   | | `-ParenExpr 0x251fb8779a8 <line:1162:16, col:39> 'int'
|   | |   `-BinaryOperator 0x251fb877988 <col:17, col:38> 'int' '&&'
|   | |     |-BinaryOperator 0x251fb8778e8 <col:17, col:24> 'int' '=='
|   | |     | |-ImplicitCastExpr 0x251fb8778d0 <col:17> 'int' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x251fb877888 <col:17> 'int' lvalue ParmVar 0x251fb871260 'tst' 'int'
|   | |     | `-IntegerLiteral 0x251fb8778a8 <col:24> 'int' 1
|   | |     `-BinaryOperator 0x251fb877968 <col:29, col:38> 'int' '!='
|   | |       |-ImplicitCastExpr 0x251fb877950 <col:29> 'int' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x251fb877908 <col:29> 'int' lvalue Var 0x251fb7dad78 'snicb' 'int'
|   | |       `-IntegerLiteral 0x251fb877928 <col:38> 'int' 1
|   | `-CompoundStmt 0x251fb877ae0 <col:42, line:1165:5>
|   |   |-CallExpr 0x251fb877a70 <line:1163:9, col:45> 'int'
|   |   | |-ImplicitCastExpr 0x251fb877a58 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb8779e8 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb877ab0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb877a98 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb877a08 <col:16> 'char [27]' lvalue "Incorrect callback counts\n"
|   |   `-GotoStmt 0x251fb877ac8 <line:1164:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb877e68 <line:1174:5, line:1178:5>
|   | |-BinaryOperator 0x251fb877d90 <line:1174:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x251fb877d78 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x251fb877d30 <col:9> 'int' lvalue ParmVar 0x251fb871260 'tst' 'int'
|   | | `-IntegerLiteral 0x251fb877d50 <col:16> 'int' 1
|   | `-CompoundStmt 0x251fb877e48 <col:19, line:1178:5>
|   |   |-BinaryOperator 0x251fb877e10 <line:1176:9, col:22> 'int' '='
|   |   | |-DeclRefExpr 0x251fb877db0 <col:9> 'int' lvalue Var 0x251fb871690 'testresult' 'int'
|   |   | `-IntegerLiteral 0x251fb877de8 <col:22> 'int' 1
|   |   `-GotoStmt 0x251fb877e30 <line:1177:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb8760d8 <line:1180:5, line:1185:5>
|   | |-OpaqueValueExpr 0x251fb8760c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb8760a0 <line:1182:62, line:1185:5>
|   |   |-CallExpr 0x251fb876030 <line:1183:9, col:55> 'int'
|   |   | |-ImplicitCastExpr 0x251fb876018 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb877fb0 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb876070 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb876058 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb877fd0 <col:16> 'char [37]' lvalue "Cannot create resumption connection\n"
|   |   `-GotoStmt 0x251fb876088 <line:1184:9, col:14> 'end' 0x251fb871ca0
|   |-IfStmt 0x251fb876470 <line:1191:5, line:1197:5>
|   | |-BinaryOperator 0x251fb876330 <line:1191:9, line:1194:30> 'int' '||'
|   | | |-BinaryOperator 0x251fb876290 <line:1191:9, line:1193:28> 'int' '||'
|   | | | |-BinaryOperator 0x251fb8761f0 <line:1191:9, line:1192:31> 'int' '||'
|   | | | | |-BinaryOperator 0x251fb876150 <line:1191:9, col:22> 'int' '!='
|   | | | | | |-ImplicitCastExpr 0x251fb876138 <col:9> 'int' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x251fb8760f0 <col:9> 'int' lvalue Var 0x251fb7daa78 'clntaddcb' 'int'
|   | | | | | `-IntegerLiteral 0x251fb876110 <col:22> 'int' 2
|   | | | | `-BinaryOperator 0x251fb8761d0 <line:1192:16, col:31> 'int' '!='
|   | | | |   |-ImplicitCastExpr 0x251fb8761b8 <col:16> 'int' <LValueToRValue>
|   | | | |   | `-DeclRefExpr 0x251fb876170 <col:16> 'int' lvalue Var 0x251fb7dab38 'clntparsecb' 'int'
|   | | | |   `-IntegerLiteral 0x251fb876190 <col:31> 'int' 1
|   | | | `-BinaryOperator 0x251fb876270 <line:1193:16, col:28> 'int' '!='
|   | | |   |-ImplicitCastExpr 0x251fb876258 <col:16> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x251fb876210 <col:16> 'int' lvalue Var 0x251fb7dabf8 'srvaddcb' 'int'
|   | | |   `-IntegerLiteral 0x251fb876230 <col:28> 'int' 1
|   | | `-BinaryOperator 0x251fb876310 <line:1194:16, col:30> 'int' '!='
|   | |   |-ImplicitCastExpr 0x251fb8762f8 <col:16> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x251fb8762b0 <col:16> 'int' lvalue Var 0x251fb7dacb8 'srvparsecb' 'int'
|   | |   `-IntegerLiteral 0x251fb8762d0 <col:30> 'int' 1
|   | `-CompoundStmt 0x251fb876450 <col:33, line:1197:5>
|   |   |-CallExpr 0x251fb8763e0 <line:1195:9, col:56> 'int'
|   |   | |-ImplicitCastExpr 0x251fb8763c8 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb876350 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb876420 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb876408 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb876370 <col:16> 'char [38]' lvalue "Incorrect resumption callback counts\n"
|   |   `-GotoStmt 0x251fb876438 <line:1196:9, col:14> 'end' 0x251fb871ca0
|   |-BinaryOperator 0x251fb8764d0 <line:1199:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x251fb876488 <col:5> 'int' lvalue Var 0x251fb871690 'testresult' 'int'
|   | `-IntegerLiteral 0x251fb8764a8 <col:18> 'int' 1
|   |-LabelStmt 0x251fb876518 <line:1201:1, col:4> 'end'
|   | `-NullStmt 0x251fb876510 <col:4>
|   `-ReturnStmt 0x251fb876608 <line:1208:5, col:12>
|     `-ImplicitCastExpr 0x251fb8765f0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb8765d0 <col:12> 'int' lvalue Var 0x251fb871690 'testresult' 'int'
|-FunctionDecl 0x251fb876798 <line:1211:1, line:1263:1> line:1211:12 used test_ssl_pending 'int (int)' static
| |-ParmVarDecl 0x251fb8766e8 <col:29, col:33> col:33 used tst 'int'
| `-CompoundStmt 0x251fb871fc0 <line:1212:1, line:1263:1>
|   |-DeclStmt 0x251fb876b20 <line:1215:5, col:23>
|   | `-VarDecl 0x251fb876a90 <col:5, col:22> col:9 used testresult 'int' cinit
|   |   `-IntegerLiteral 0x251fb876af8 <col:22> 'int' 0
|   |-DeclStmt 0x251fb876c50 <line:1216:5, col:34>
|   | `-VarDecl 0x251fb876b88 <col:5, col:18> col:10 used msg 'char [15]' cinit
|   |   `-StringLiteral 0x251fb876c28 <col:18> 'char [15]' "A test message"
|   |-DeclStmt 0x251fb876d70 <line:1217:5, col:16>
|   | `-VarDecl 0x251fb876d08 <col:5, col:15> col:10 used buf 'char [5]'
|   |-DeclStmt 0x251fb876e00 <line:1218:5, col:19>
|   | `-VarDecl 0x251fb876d98 <col:5, col:12> col:12 used written 'size_t':'unsigned long long'
|   |-IfStmt 0x251fb8793c0 <line:1220:5, line:1238:5> has_else
|   | |-BinaryOperator 0x251fb876e78 <line:1220:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x251fb876e60 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x251fb876e18 <col:9> 'int' lvalue ParmVar 0x251fb8766e8 'tst' 'int'
|   | | `-IntegerLiteral 0x251fb876e38 <col:16> 'int' 0
|   | |-CompoundStmt 0x251fb879158 <col:19, line:1227:5>
|   | | `-IfStmt 0x251fb879140 <line:1221:9, line:1226:9>
|   | |   |-OpaqueValueExpr 0x251fb879128 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x251fb879108 <line:1223:64, line:1226:9>
|   | |     |-CallExpr 0x251fb879048 <line:1224:13, col:52> 'int'
|   | |     | |-ImplicitCastExpr 0x251fb879030 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x251fb876f88 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   | |     | `-ImplicitCastExpr 0x251fb879088 <col:20> 'const char *' <NoOp>
|   | |     |   `-ImplicitCastExpr 0x251fb879070 <col:20> 'char *' <ArrayToPointerDecay>
|   | |     |     `-StringLiteral 0x251fb876fa8 <col:20> 'char [30]' lvalue "Failed creating SSL_CTX pair\n"
|   | |     `-GotoStmt 0x251fb8790f0 <line:1225:13, col:18> 'end' 0x251fb8790a0
|   | `-CompoundStmt 0x251fb8793a8 <line:1227:12, line:1238:5>
|   |   `-IfStmt 0x251fb879390 <line:1229:9, line:1234:9>
|   |     |-OpaqueValueExpr 0x251fb879378 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x251fb879358 <line:1231:64, line:1234:9>
|   |       |-CallExpr 0x251fb8792e8 <line:1232:13, col:52> 'int'
|   |       | |-ImplicitCastExpr 0x251fb8792d0 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x251fb879260 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |       | `-ImplicitCastExpr 0x251fb879328 <col:20> 'const char *' <NoOp>
|   |       |   `-ImplicitCastExpr 0x251fb879310 <col:20> 'char *' <ArrayToPointerDecay>
|   |       |     `-StringLiteral 0x251fb879280 <col:20> 'char [30]' lvalue "Failed creating SSL_CTX pair\n"
|   |       `-GotoStmt 0x251fb879340 <line:1233:13, col:18> 'end' 0x251fb8790a0
|   |-IfStmt 0x251fb879628 <line:1240:5, line:1244:5>
|   | |-OpaqueValueExpr 0x251fb879610 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb8795f0 <line:1241:62, line:1244:5>
|   |   |-CallExpr 0x251fb879580 <line:1242:13, col:50> 'int'
|   |   | |-ImplicitCastExpr 0x251fb879568 <col:13> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb8794f8 <col:13> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb8795c0 <col:20> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb8795a8 <col:20> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb879518 <col:20> 'char [28]' lvalue "Failed creating connection\n"
|   |   `-GotoStmt 0x251fb8795d8 <line:1243:9, col:14> 'end' 0x251fb8790a0
|   |-IfStmt 0x251fb879e58 <line:1247:5, line:1252:5>
|   | |-OpaqueValueExpr 0x251fb879e40 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x251fb879e20 <line:1249:72, line:1252:5>
|   |   |-CallExpr 0x251fb879db0 <line:1250:9, col:47> 'int'
|   |   | |-ImplicitCastExpr 0x251fb879d98 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x251fb879d28 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
|   |   | `-ImplicitCastExpr 0x251fb879df0 <col:16> 'const char *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x251fb879dd8 <col:16> 'char *' <ArrayToPointerDecay>
|   |   |     `-StringLiteral 0x251fb879d48 <col:16> 'char [29]' lvalue "Failed checking SSL_pending\n"
|   |   `-GotoStmt 0x251fb879e08 <line:1251:9, col:14> 'end' 0x251fb8790a0
|   |-BinaryOperator 0x251fb879ed0 <line:1254:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x251fb879e70 <col:5> 'int' lvalue Var 0x251fb876a90 'testresult' 'int'
|   | `-IntegerLiteral 0x251fb879ea8 <col:18> 'int' 1
|   |-LabelStmt 0x251fb879f18 <line:1256:2, col:5> 'end'
|   | `-NullStmt 0x251fb879f10 <col:5>
|   `-ReturnStmt 0x251fb879fc8 <line:1262:5, col:12>
|     `-ImplicitCastExpr 0x251fb879fb0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x251fb879f90 <col:12> 'int' lvalue Var 0x251fb876a90 'testresult' 'int'
`-FunctionDecl 0x251fb872270 <line:1266:1, line:1318:1> line:1266:5 main 'int (int, char **)'
  |-ParmVarDecl 0x251fb872038 <col:10, col:14> col:14 used argc 'int'
  |-ParmVarDecl 0x251fb872120 <col:20, col:31> col:26 used argv 'char **':'char **'
  `-CompoundStmt 0x251fb87d5f0 <line:1267:1, line:1318:1>
    |-DeclStmt 0x251fb872468 <line:1269:5, col:23>
    | `-VarDecl 0x251fb8723d8 <col:5, col:22> col:9 used testresult 'int' cinit
    |   `-IntegerLiteral 0x251fb872440 <col:22> 'int' 1
    |-IfStmt 0x251fb872630 <line:1271:5, line:1274:5>
    | |-BinaryOperator 0x251fb8724e0 <line:1271:9, col:17> 'int' '!='
    | | |-ImplicitCastExpr 0x251fb8724c8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x251fb872480 <col:9> 'int' lvalue ParmVar 0x251fb872038 'argc' 'int'
    | | `-IntegerLiteral 0x251fb8724a0 <col:17> 'int' 3
    | `-CompoundStmt 0x251fb872610 <col:20, line:1274:5>
    |   |-CallExpr 0x251fb872580 <line:1272:9, col:42> 'int'
    |   | |-ImplicitCastExpr 0x251fb872568 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x251fb872500 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
    |   | `-ImplicitCastExpr 0x251fb8725c0 <col:16> 'const char *' <NoOp>
    |   |   `-ImplicitCastExpr 0x251fb8725a8 <col:16> 'char *' <ArrayToPointerDecay>
    |   |     `-StringLiteral 0x251fb872520 <col:16> 'char [24]' lvalue "Invalid argument count\n"
    |   `-ReturnStmt 0x251fb872600 <line:1273:9, col:16>
    |     `-IntegerLiteral 0x251fb8725d8 <col:16> 'int' 1
    |-BinaryOperator 0x251fb872700 <line:1276:5, col:18> 'char *' '='
    | |-DeclRefExpr 0x251fb872648 <col:5> 'char *' lvalue Var 0x251fb81bfe8 'cert' 'char *'
    | `-ImplicitCastExpr 0x251fb8726e8 <col:12, col:18> 'char *' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x251fb8726c8 <col:12, col:18> 'char *' lvalue
    |     |-ImplicitCastExpr 0x251fb8726b0 <col:12> 'char **':'char **' <LValueToRValue>
    |     | `-DeclRefExpr 0x251fb872668 <col:12> 'char **':'char **' lvalue ParmVar 0x251fb872120 'argv' 'char **':'char **'
    |     `-IntegerLiteral 0x251fb872688 <col:17> 'int' 1
    |-BinaryOperator 0x251fb8727d8 <line:1277:5, col:21> 'char *' '='
    | |-DeclRefExpr 0x251fb872720 <col:5> 'char *' lvalue Var 0x251fb81a140 'privkey' 'char *'
    | `-ImplicitCastExpr 0x251fb8727c0 <col:15, col:21> 'char *' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x251fb8727a0 <col:15, col:21> 'char *' lvalue
    |     |-ImplicitCastExpr 0x251fb872788 <col:15> 'char **':'char **' <LValueToRValue>
    |     | `-DeclRefExpr 0x251fb872740 <col:15> 'char **':'char **' lvalue ParmVar 0x251fb872120 'argv' 'char **':'char **'
    |     `-IntegerLiteral 0x251fb872760 <col:20> 'int' 2
    |-CallExpr 0x251fb872a58 <line:1281:5, col:27> 'int'
    | |-ImplicitCastExpr 0x251fb872a40 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb8729f8 <col:5> 'int ()' Function 0x251fb872930 'CRYPTO_set_mem_debug' 'int ()'
    | `-IntegerLiteral 0x251fb872a18 <col:26> 'int' 1
    |-CallExpr 0x251fb872c70 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb872c58 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb872b90 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb872cb8 <<scratch space>:294:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb872ca0 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb872bb0 <col:1> 'char [23]' lvalue "test_large_message_tls"
    | `-ImplicitCastExpr 0x251fb872d10 <.//openssl//file_jk/after\test\sslapitest.c:1284:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb872cf8 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb872be0 <col:14> 'int (void)' Function 0x251fb81d8a0 'test_large_message_tls' 'int (void)'
    |-CallExpr 0x251fb872e00 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb872de8 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb872d28 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb872e48 <<scratch space>:295:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb872e30 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb872d88 <col:1> 'char [34]' lvalue "test_large_message_tls_read_ahead"
    | `-ImplicitCastExpr 0x251fb872e78 <.//openssl//file_jk/after\test\sslapitest.c:1285:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb872e60 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb872dc8 <col:14> 'int (void)' Function 0x251fb81dcc0 'test_large_message_tls_read_ahead' 'int (void)'
    |-CallExpr 0x251fb872f18 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb872f00 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb872e90 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb872f60 <<scratch space>:296:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb872f48 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb872eb0 <col:1> 'char [24]' lvalue "test_large_message_dtls"
    | `-ImplicitCastExpr 0x251fb872f90 <.//openssl//file_jk/after\test\sslapitest.c:1287:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb872f78 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb872ee0 <col:14> 'int (void)' Function 0x251fb81df00 'test_large_message_dtls' 'int (void)'
    |-CallExpr 0x251fb87b0d8 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb87b0c0 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87b050 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb87b120 <<scratch space>:297:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87b108 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87b070 <col:1> 'char [24]' lvalue "test_tlsext_status_type"
    | `-ImplicitCastExpr 0x251fb87b150 <.//openssl//file_jk/after\test\sslapitest.c:1290:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb87b138 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb87b0a0 <col:14> 'int (void)' Function 0x251fb7c7158 'test_tlsext_status_type' 'int (void)'
    |-CallExpr 0x251fb87b1f8 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb87b1e0 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87b168 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb87b240 <<scratch space>:298:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87b228 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87b188 <col:1> 'char [33]' lvalue "test_session_with_only_int_cache"
    | `-ImplicitCastExpr 0x251fb87b270 <.//openssl//file_jk/after\test\sslapitest.c:1292:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb87b258 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb87b1c0 <col:14> 'int (void)' Function 0x251fb7cc670 'test_session_with_only_int_cache' 'int (void)'
    |-CallExpr 0x251fb87b318 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb87b300 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87b288 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb87b360 <<scratch space>:299:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87b348 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87b2a8 <col:1> 'char [33]' lvalue "test_session_with_only_ext_cache"
    | `-ImplicitCastExpr 0x251fb87b390 <.//openssl//file_jk/after\test\sslapitest.c:1293:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb87b378 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb87b2e0 <col:14> 'int (void)' Function 0x251fb7ccde8 'test_session_with_only_ext_cache' 'int (void)'
    |-CallExpr 0x251fb87b438 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb87b420 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87b3a8 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb87b480 <<scratch space>:300:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87b468 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87b3c8 <col:1> 'char [29]' lvalue "test_session_with_both_cache"
    | `-ImplicitCastExpr 0x251fb87b4b0 <.//openssl//file_jk/after\test\sslapitest.c:1294:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb87b498 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb87b400 <col:14> 'int (void)' Function 0x251fb7ca428 'test_session_with_both_cache' 'int (void)'
    |-CallExpr 0x251fb87b700 <.//openssl//file_jk/after\test/testutil.h:83:3, col:51> 'void'
    | |-ImplicitCastExpr 0x251fb87b6e8 <col:3> 'void (*)(const char *, int (*)(int), int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87b4c8 <col:3> 'void (const char *, int (*)(int), int)' Function 0x251fb81ba28 'add_all_tests' 'void (const char *, int (*)(int), int)'
    | |-ImplicitCastExpr 0x251fb87b750 <<scratch space>:2:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87b738 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87b528 <col:1> 'char [17]' lvalue "test_ssl_set_bio"
    | |-ImplicitCastExpr 0x251fb87b768 <.//openssl//file_jk/after\test\sslapitest.c:1295:19> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87b550 <col:19> 'int (int)' Function 0x251fb7cd100 'test_ssl_set_bio' 'int (int)'
    | `-ParenExpr 0x251fb87b670 <line:658:33, col:47> 'int'
    |   `-BinaryOperator 0x251fb87b650 <col:34, col:46> 'int' '*'
    |     |-BinaryOperator 0x251fb87b608 <col:34, col:42> 'int' '*'
    |     | |-BinaryOperator 0x251fb87b5c0 <col:34, col:38> 'int' '*'
    |     | | |-IntegerLiteral 0x251fb87b570 <col:34> 'int' 3
    |     | | `-IntegerLiteral 0x251fb87b598 <col:38> 'int' 3
    |     | `-IntegerLiteral 0x251fb87b5e0 <col:42> 'int' 3
    |     `-IntegerLiteral 0x251fb87b628 <col:46> 'int' 3
    |-CallExpr 0x251fb87b810 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb87b7f8 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87b780 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb87b858 <<scratch space>:3:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87b840 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87b7a0 <col:1> 'char [26]' lvalue "test_ssl_bio_pop_next_bio"
    | `-ImplicitCastExpr 0x251fb87b888 <.//openssl//file_jk/after\test\sslapitest.c:1296:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb87b870 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb87b7d8 <col:14> 'int (void)' Function 0x251fb7d8100 'test_ssl_bio_pop_next_bio' 'int (void)'
    |-CallExpr 0x251fb87b928 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb87b910 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87b8a0 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb87b970 <<scratch space>:4:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87b958 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87b8c0 <col:1> 'char [25]' lvalue "test_ssl_bio_pop_ssl_bio"
    | `-ImplicitCastExpr 0x251fb87b9a0 <.//openssl//file_jk/after\test\sslapitest.c:1297:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb87b988 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb87b8f0 <col:14> 'int (void)' Function 0x251fb7d87e0 'test_ssl_bio_pop_ssl_bio' 'int (void)'
    |-CallExpr 0x251fb87ba40 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb87ba28 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87b9b8 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb87ba88 <<scratch space>:5:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87ba70 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87b9d8 <col:1> 'char [25]' lvalue "test_ssl_bio_change_rbio"
    | `-ImplicitCastExpr 0x251fb87bab8 <.//openssl//file_jk/after\test\sslapitest.c:1298:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb87baa0 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb87ba08 <col:14> 'int (void)' Function 0x251fb7d8e40 'test_ssl_bio_change_rbio' 'int (void)'
    |-CallExpr 0x251fb87bb58 <.//openssl//file_jk/after\test/testutil.h:76:34, col:72> 'void'
    | |-ImplicitCastExpr 0x251fb87bb40 <col:34> 'void (*)(const char *, int (*)())' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87bad0 <col:34> 'void (const char *, int (*)())' Function 0x251fb81b558 'add_test' 'void (const char *, int (*)())'
    | |-ImplicitCastExpr 0x251fb87bba0 <<scratch space>:6:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87bb88 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87baf0 <col:1> 'char [25]' lvalue "test_ssl_bio_change_wbio"
    | `-ImplicitCastExpr 0x251fb87bbd0 <.//openssl//file_jk/after\test\sslapitest.c:1299:14> 'int (*)()' <BitCast>
    |   `-ImplicitCastExpr 0x251fb87bbb8 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x251fb87bb20 <col:14> 'int (void)' Function 0x251fb7d7478 'test_ssl_bio_change_wbio' 'int (void)'
    |-CallExpr 0x251fb87bd48 <.//openssl//file_jk/after\test/testutil.h:83:3, col:51> 'void'
    | |-ImplicitCastExpr 0x251fb87bd30 <col:3> 'void (*)(const char *, int (*)(int), int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87bbe8 <col:3> 'void (const char *, int (*)(int), int)' Function 0x251fb81ba28 'add_all_tests' 'void (const char *, int (*)(int), int)'
    | |-ImplicitCastExpr 0x251fb87bd98 <<scratch space>:7:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87bd80 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87bc08 <col:1> 'char [17]' lvalue "test_set_sigalgs"
    | |-ImplicitCastExpr 0x251fb87bdb0 <.//openssl//file_jk/after\test\sslapitest.c:1300:19> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87bc30 <col:19> 'int (int)' Function 0x251fb7dced8 'test_set_sigalgs' 'int (int)'
    | `-BinaryOperator 0x251fb87bd10 <col:37, col:63> 'int' '*'
    |   |-CallExpr 0x251fb87bca8 <col:37, col:59> 'int'
    |   | |-ImplicitCastExpr 0x251fb87bc90 <col:37> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x251fb87bc50 <col:37> 'int ()' Function 0x251fb7d23b8 'OSSL_NELEM' 'int ()'
    |   | `-ImplicitCastExpr 0x251fb87bcd0 <col:48> 'const sigalgs_list *' <ArrayToPointerDecay>
    |   |   `-DeclRefExpr 0x251fb87bc70 <col:48> 'const sigalgs_list [14]' lvalue Var 0x251fb7d2308 'testsigalgs' 'const sigalgs_list [14]'
    |   `-IntegerLiteral 0x251fb87bce8 <col:63> 'int' 2
    |-CallExpr 0x251fb87be70 <.//openssl//file_jk/after\test/testutil.h:83:3, col:51> 'void'
    | |-ImplicitCastExpr 0x251fb87be58 <col:3> 'void (*)(const char *, int (*)(int), int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87bdc8 <col:3> 'void (const char *, int (*)(int), int)' Function 0x251fb81ba28 'add_all_tests' 'void (const char *, int (*)(int), int)'
    | |-ImplicitCastExpr 0x251fb87bec0 <<scratch space>:8:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87bea8 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87bde8 <col:1> 'char [17]' lvalue "test_custom_exts"
    | |-ImplicitCastExpr 0x251fb87bed8 <.//openssl//file_jk/after\test\sslapitest.c:1301:19> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87be10 <col:19> 'int (int)' Function 0x251fb871310 'test_custom_exts' 'int (int)'
    | `-IntegerLiteral 0x251fb87be30 <col:37> 'int' 2
    |-CallExpr 0x251fb87bf98 <.//openssl//file_jk/after\test/testutil.h:83:3, col:51> 'void'
    | |-ImplicitCastExpr 0x251fb87bf80 <col:3> 'void (*)(const char *, int (*)(int), int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87bef0 <col:3> 'void (const char *, int (*)(int), int)' Function 0x251fb81ba28 'add_all_tests' 'void (const char *, int (*)(int), int)'
    | |-ImplicitCastExpr 0x251fb87bfe8 <<scratch space>:9:1> 'const char *' <NoOp>
    | | `-ImplicitCastExpr 0x251fb87bfd0 <col:1> 'char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x251fb87bf10 <col:1> 'char [17]' lvalue "test_ssl_pending"
    | |-ImplicitCastExpr 0x251fb87c000 <.//openssl//file_jk/after\test\sslapitest.c:1302:19> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x251fb87bf38 <col:19> 'int (int)' Function 0x251fb876798 'test_ssl_pending' 'int (int)'
    | `-IntegerLiteral 0x251fb87bf58 <col:37> 'int' 2
    |-BinaryOperator 0x251fb87d1a8 <line:1304:5, col:35> 'int' '='
    | |-DeclRefExpr 0x251fb87c018 <col:5> 'int' lvalue Var 0x251fb8723d8 'testresult' 'int'
    | `-CallExpr 0x251fb87d150 <col:18, col:35> 'int'
    |   |-ImplicitCastExpr 0x251fb87d138 <col:18> 'int (*)(const char *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x251fb87d070 <col:18> 'int (const char *)' Function 0x251fb81bbf0 'run_tests' 'int (const char *)'
    |   `-ImplicitCastExpr 0x251fb87d190 <col:28, col:34> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x251fb87d178 <col:28, col:34> 'char *' <LValueToRValue>
    |       `-ArraySubscriptExpr 0x251fb87d0f0 <col:28, col:34> 'char *' lvalue
    |         |-ImplicitCastExpr 0x251fb87d0d8 <col:28> 'char **':'char **' <LValueToRValue>
    |         | `-DeclRefExpr 0x251fb87d090 <col:28> 'char **':'char **' lvalue ParmVar 0x251fb872120 'argv' 'char **':'char **'
    |         `-IntegerLiteral 0x251fb87d0b0 <col:33> 'int' 0
    |-CallExpr 0x251fb87d230 <line:1306:5, col:31> 'void'
    | `-ImplicitCastExpr 0x251fb87d218 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x251fb87d1c8 <col:5> 'void (void)' Function 0x251fb819a68 'bio_s_mempacket_test_free' 'void (void)'
    |-IfStmt 0x251fb87d408 <line:1309:5, line:1310:22>
    | |-OpaqueValueExpr 0x251fb87d3f0 <<invalid sloc>> '_Bool'
    | `-BinaryOperator 0x251fb87d3d0 <col:9, col:22> 'int' '='
    |   |-DeclRefExpr 0x251fb87d388 <col:9> 'int' lvalue Var 0x251fb8723d8 'testresult' 'int'
    |   `-IntegerLiteral 0x251fb87d3a8 <col:22> 'int' 1
    |-IfStmt 0x251fb87d590 <line:1314:5, line:1315:24>
    | |-UnaryOperator 0x251fb87d478 <line:1314:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x251fb87d460 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x251fb87d440 <col:10> 'int' lvalue Var 0x251fb8723d8 'testresult' 'int'
    | `-CallExpr 0x251fb87d538 <line:1315:9, col:24> 'int'
    |   |-ImplicitCastExpr 0x251fb87d520 <col:9> 'int (*)(const char *, ...)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x251fb87d490 <col:9> 'int (const char *, ...)' Function 0x251fb81e338 'printf' 'int (const char *, ...)'
    |   `-ImplicitCastExpr 0x251fb87d578 <col:16> 'const char *' <NoOp>
    |     `-ImplicitCastExpr 0x251fb87d560 <col:16> 'char *' <ArrayToPointerDecay>
    |       `-StringLiteral 0x251fb87d4e8 <col:16> 'char [6]' lvalue "PASS\n"
    `-ReturnStmt 0x251fb87d5e0 <line:1317:5, col:12>
      `-ImplicitCastExpr 0x251fb87d5c8 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x251fb87d5a8 <col:12> 'int' lvalue Var 0x251fb8723d8 'testresult' 'int'
